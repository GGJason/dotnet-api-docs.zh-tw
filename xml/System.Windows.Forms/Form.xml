<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Form.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-efd8310" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b891ec5d-4b60-42d7-ac21-95eab9e3ef821f3fc084a02f774d87fefe2646b5cb5ad6cc9733.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1f3fc084a02f774d87fefe2646b5cb5ad6cc9733</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">058bfa0b75b777d3171411d35da8f11617fc06b0</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">05/04/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.Form">
          <source>Represents a window or dialog box that makes up an application's user interface.</source>
          <target state="translated">表示構成應用程式使用者介面的視窗或對話方塊。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Form">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> is a representation of any window displayed in your application.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>是顯示在您的應用程式中的任何視窗的表示法。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Form">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> class can be used to create standard, tool, borderless, and floating windows.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>類別可以用來建立標準、 工具、 無框線和浮動視窗。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Form">
          <source>You can also use the <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> class to create modal windows such as a dialog box.</source>
          <target state="translated">您也可以使用<ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>類別來建立強制回應視窗，例如對話方塊。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Form">
          <source>A special kind of form, the multiple-document interface (MDI) form, can contain other forms called MDI child forms.</source>
          <target state="translated">一種特殊形式，多重文件介面 (MDI) 表單，可以包含其他呼叫 MDI 子表單的表單。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Form">
          <source>An MDI form is created by setting the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.IsMdiContainer%2A&gt;</ph> property to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">藉由設定建立 MDI 表單<ph id="ph1">&lt;xref:System.Windows.Forms.Form.IsMdiContainer%2A&gt;</ph>屬性<ph id="ph2">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Form">
          <source>MDI child forms are created by setting the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.MdiParent%2A&gt;</ph> property to the MDI parent form that will contain the child form.</source>
          <target state="translated">藉由將會建立 MDI 子表單<ph id="ph1">&lt;xref:System.Windows.Forms.Form.MdiParent%2A&gt;</ph>會包含子表單在 MDI 父表單的屬性。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Form">
          <source>Using the properties available in the <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> class, you can determine the appearance, size, color, and window management features of the window or dialog box you are creating.</source>
          <target state="translated">使用中可用的屬性<ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>類別，您可以判斷您要建立的視窗或對話方塊方塊的外觀、 大小、 色彩和視窗管理功能。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Form">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property allows you to specify the caption of the window in the title bar.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph>屬性可讓您指定的視窗標題的標題列中。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Form">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Size%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Form.DesktopLocation%2A&gt;</ph> properties allow you to define the size and position of the window when it is displayed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.Size%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Windows.Forms.Form.DesktopLocation%2A&gt;</ph>屬性可讓您定義的大小和視窗的位置顯示時。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Form">
          <source>You can use the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> color property to change the default foreground color of all controls placed on the form.</source>
          <target state="translated">您可以使用<ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph>来變更所有控制項的預設前景色彩的色彩屬性放置在表單上。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Form">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormBorderStyle%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Form.MinimizeBox%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Windows.Forms.Form.MaximizeBox%2A&gt;</ph> properties allow you to control whether the form can be minimized, maximized, or resized at run time.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormBorderStyle%2A&gt;</ph>， <ph id="ph2">&lt;xref:System.Windows.Forms.Form.MinimizeBox%2A&gt;</ph>，和<ph id="ph3">&lt;xref:System.Windows.Forms.Form.MaximizeBox%2A&gt;</ph>屬性可讓您控制是否表單可以最小化、 最大化，或在執行階段調整大小時。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Form">
          <source>In addition to properties, you can use the methods of the class to manipulate a form.</source>
          <target state="translated">除了屬性之外，您可以使用類別的方法來管理表單。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Form">
          <source>For example, you can use the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ShowDialog%2A&gt;</ph> method to show a form as a modal dialog box.</source>
          <target state="translated">例如，您可以使用<ph id="ph1">&lt;xref:System.Windows.Forms.Form.ShowDialog%2A&gt;</ph>方法，以顯示強制回應對話方塊的形式。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Form">
          <source>You can use the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.SetDesktopLocation%2A&gt;</ph> method to position the form on the desktop.</source>
          <target state="translated">您可以使用<ph id="ph1">&lt;xref:System.Windows.Forms.Form.SetDesktopLocation%2A&gt;</ph>放置在桌面上表單的方法。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Form">
          <source>The events of the <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> class allow you to respond to actions performed on the form.</source>
          <target state="translated">事件的<ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>類別可讓您回應表單上所執行的動作。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Form">
          <source>You can use the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Activated&gt;</ph> event to perform operations such as updating the data displayed in the controls of the form when the form is activated.</source>
          <target state="translated">您可以使用<ph id="ph1">&lt;xref:System.Windows.Forms.Form.Activated&gt;</ph>事件以執行操作，例如更新時啟動表單，表單的控制項中顯示的資料。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Form">
          <source>You can use a form as the starting class in your application by placing a method called <ph id="ph1">`Main`</ph> in the class.</source>
          <target state="translated">您可以為起始的類別使用的形式，應用程式中，放置呼叫的方法來<ph id="ph1">`Main`</ph>類別中。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Form">
          <source>In the <ph id="ph1">`Main`</ph> method add code to create and show the form.</source>
          <target state="translated">在<ph id="ph1">`Main`</ph>方法新增程式碼，建立並顯示表單。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Form">
          <source>You will also need to add the <ph id="ph1">`STAThread`</ph> attribute to the <ph id="ph2">`Main`</ph> method in order for the form to run.</source>
          <target state="translated">您也需要加入<ph id="ph1">`STAThread`</ph>屬性<ph id="ph2">`Main`</ph>表單，以執行順序的方法。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Form">
          <source>When the starting form is closed, the application is also closed.</source>
          <target state="translated">啟動表單關閉時，也會關閉應用程式。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Form">
          <source>If you set the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Enabled%2A&gt;</ph> property to <ph id="ph2">`false`</ph> before the <ph id="ph3">&lt;xref:System.Windows.Forms.Form&gt;</ph> is visible (for example, setting <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Enabled%2A&gt;</ph> to false in the <ph id="ph5">[!INCLUDE[TLA#tla_visualstu](~/includes/tlasharptla-visualstu-md.md)]</ph> designer), the minimize, maximize, close, and system buttons remain enabled.</source>
          <target state="translated">如果您設定<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Enabled%2A&gt;</ph>屬性<ph id="ph2">`false`</ph>之前<ph id="ph3">&lt;xref:System.Windows.Forms.Form&gt;</ph>可見 (比方說，設定<ph id="ph4">&lt;xref:System.Windows.Forms.Control.Enabled%2A&gt;</ph>中設為 false<ph id="ph5">[!INCLUDE[TLA#tla_visualstu](~/includes/tlasharptla-visualstu-md.md)]</ph>設計工具)，則最小化、 最大化，請關閉，並保持啟用狀態的系統按鈕。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Form">
          <source>If you set <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Enabled%2A&gt;</ph> to <ph id="ph2">`false`</ph> after the <ph id="ph3">&lt;xref:System.Windows.Forms.Form&gt;</ph> is visible (for example, when the Load event occurs), the buttons are disabled.</source>
          <target state="translated">如果您設定<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Enabled%2A&gt;</ph>來<ph id="ph2">`false`</ph>之後<ph id="ph3">&lt;xref:System.Windows.Forms.Form&gt;</ph>可見 （例如，當載入事件發生時），則按鈕會停用。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Form">
          <source>The following code example creates a new instance of a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> and calls the <ph id="ph2">&lt;xref:System.Windows.Forms.Form.ShowDialog%2A&gt;</ph> method to display the form as a dialog box.</source>
          <target state="translated">下列程式碼範例會建立的新執行個體<ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>呼叫<ph id="ph2">&lt;xref:System.Windows.Forms.Form.ShowDialog%2A&gt;</ph>要將表單顯示為對話方塊的方法。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Form">
          <source>The example sets the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormBorderStyle%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Form.AcceptButton%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Form.CancelButton%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Form.MinimizeBox%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.Form.MaximizeBox%2A&gt;</ph>, and <ph id="ph6">&lt;xref:System.Windows.Forms.Form.StartPosition%2A&gt;</ph> properties to change the appearance and functionality of the form to a dialog box.</source>
          <target state="translated">範例會設定<ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormBorderStyle%2A&gt;</ph>， <ph id="ph2">&lt;xref:System.Windows.Forms.Form.AcceptButton%2A&gt;</ph>， <ph id="ph3">&lt;xref:System.Windows.Forms.Form.CancelButton%2A&gt;</ph>， <ph id="ph4">&lt;xref:System.Windows.Forms.Form.MinimizeBox%2A&gt;</ph>， <ph id="ph5">&lt;xref:System.Windows.Forms.Form.MaximizeBox%2A&gt;</ph>，和<ph id="ph6">&lt;xref:System.Windows.Forms.Form.StartPosition%2A&gt;</ph>內容 對話方塊中變更的外觀和表單的功能。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Form">
          <source>The example also uses the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ControlCollection.Add%2A&gt;</ph> method of the form's <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Controls%2A&gt;</ph> collection to add two <ph id="ph3">&lt;xref:System.Windows.Forms.Button&gt;</ph> controls.</source>
          <target state="translated">此範例也會使用<ph id="ph1">&lt;xref:System.Windows.Forms.Form.ControlCollection.Add%2A&gt;</ph>形式的方法<ph id="ph2">&lt;xref:System.Windows.Forms.Control.Controls%2A&gt;</ph>要加入兩個集合<ph id="ph3">&lt;xref:System.Windows.Forms.Button&gt;</ph>控制項。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Form">
          <source>The example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.HelpButton%2A&gt;</ph> property to display a help button in the caption bar of the dialog box.</source>
          <target state="translated">此範例會使用<ph id="ph1">&lt;xref:System.Windows.Forms.Form.HelpButton%2A&gt;</ph>屬性 對話方塊的標題列中顯示 說明 按鈕。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.#ctor">
          <source>The default size of a form is 300 pixels in height and 300 pixels in width.</source>
          <target state="translated">表單的預設大小為 300 像素的高度和寬度 300 像素為單位。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.#ctor">
          <source>The following code example creates a new instance of a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> and calls the <ph id="ph2">&lt;xref:System.Windows.Forms.Form.ShowDialog%2A&gt;</ph> method to display the form as a dialog box.</source>
          <target state="translated">下列程式碼範例會建立的新執行個體<ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>呼叫<ph id="ph2">&lt;xref:System.Windows.Forms.Form.ShowDialog%2A&gt;</ph>要將表單顯示為對話方塊的方法。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.#ctor">
          <source>The example sets the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormBorderStyle%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Form.AcceptButton%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Form.CancelButton%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Form.MinimizeBox%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.Form.MaximizeBox%2A&gt;</ph>, and <ph id="ph6">&lt;xref:System.Windows.Forms.Form.StartPosition%2A&gt;</ph> properties to change the appearance and functionality of the form to a dialog box.</source>
          <target state="translated">範例會設定<ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormBorderStyle%2A&gt;</ph>， <ph id="ph2">&lt;xref:System.Windows.Forms.Form.AcceptButton%2A&gt;</ph>， <ph id="ph3">&lt;xref:System.Windows.Forms.Form.CancelButton%2A&gt;</ph>， <ph id="ph4">&lt;xref:System.Windows.Forms.Form.MinimizeBox%2A&gt;</ph>， <ph id="ph5">&lt;xref:System.Windows.Forms.Form.MaximizeBox%2A&gt;</ph>，和<ph id="ph6">&lt;xref:System.Windows.Forms.Form.StartPosition%2A&gt;</ph>內容 對話方塊中變更的外觀和表單的功能。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.#ctor">
          <source>The example also sets uses the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ControlCollection.Add%2A&gt;</ph> method of the form's <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Controls%2A&gt;</ph> collection to add two <ph id="ph3">&lt;xref:System.Windows.Forms.Button&gt;</ph> controls.</source>
          <target state="translated">此範例也會設定使用<ph id="ph1">&lt;xref:System.Windows.Forms.Form.ControlCollection.Add%2A&gt;</ph>形式的方法<ph id="ph2">&lt;xref:System.Windows.Forms.Control.Controls%2A&gt;</ph>要加入兩個集合<ph id="ph3">&lt;xref:System.Windows.Forms.Button&gt;</ph>控制項。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.#ctor">
          <source>The example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.HelpButton%2A&gt;</ph> property to display a help button in the caption bar of the dialog box.</source>
          <target state="translated">此範例會使用<ph id="ph1">&lt;xref:System.Windows.Forms.Form.HelpButton%2A&gt;</ph>屬性 對話方塊的標題列中顯示 說明 按鈕。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.AcceptButton">
          <source>Gets or sets the button on the form that is clicked when the user presses the ENTER key.</source>
          <target state="translated">取得或設定使用者按下 ENTER 鍵時所按下的表單上按鈕。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AcceptButton">
          <source>An <ph id="ph1">&lt;see cref="T:System.Windows.Forms.IButtonControl" /&gt;</ph> that represents the button to use as the accept button for the form.</source>
          <target state="translated">，代表做為表單接受按鈕的按鈕。<ph id="ph1">&lt;see cref="T:System.Windows.Forms.IButtonControl" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AcceptButton">
          <source>This property enables you to designate a default action to occur when the user presses the ENTER key in your application.</source>
          <target state="translated">這個屬性可讓您指定當使用者在應用程式中按下 ENTER 鍵時所發生的預設動作。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AcceptButton">
          <source>The button assigned to this property must be an <ph id="ph1">&lt;xref:System.Windows.Forms.IButtonControl&gt;</ph> that is on the current form or located within a container on the current form.</source>
          <target state="translated">必須是指派給這個屬性的按鈕<ph id="ph1">&lt;xref:System.Windows.Forms.IButtonControl&gt;</ph>是現用表單上或位於目前的表單上的容器。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AcceptButton">
          <source>You can use this property to allow the user to quickly navigate a simple form by allowing them to simply press the ENTER key when they are finished instead of manually clicking the accept button with their mouse.</source>
          <target state="translated">您可以使用這個屬性可讓使用者快速巡覽簡單表單，讓它們能夠在完成而不是手動按一下 [接受] 按鈕，使用滑鼠時，只要按下 ENTER 鍵。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AcceptButton">
          <source>The accept button might not be activated if the currently selected control on the form intercepts the ENTER key and processes it.</source>
          <target state="translated">如果目前選取的控制項在表單上會攔截 ENTER 鍵，並加以處理，可能無法啟動 [接受] 按鈕。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AcceptButton">
          <source>For example, a multiline text box control allows the ENTER key to be pressed when it is selected to insert a new line character in the control.</source>
          <target state="translated">例如，多行文字方塊控制項允許選取要在控制項中插入新行字元時，可以按下 ENTER 鍵。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AcceptButton">
          <source>The following code example creates a new instance of a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> and calls the <ph id="ph2">&lt;xref:System.Windows.Forms.Form.ShowDialog%2A&gt;</ph> method to display the form as a dialog box.</source>
          <target state="translated">下列程式碼範例會建立的新執行個體<ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>呼叫<ph id="ph2">&lt;xref:System.Windows.Forms.Form.ShowDialog%2A&gt;</ph>要將表單顯示為對話方塊的方法。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AcceptButton">
          <source>The example sets the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormBorderStyle%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Form.AcceptButton%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Form.CancelButton%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Form.MinimizeBox%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.Form.MaximizeBox%2A&gt;</ph>, and <ph id="ph6">&lt;xref:System.Windows.Forms.Form.StartPosition%2A&gt;</ph> properties to change the appearance and functionality of the form to a dialog box.</source>
          <target state="translated">範例會設定<ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormBorderStyle%2A&gt;</ph>， <ph id="ph2">&lt;xref:System.Windows.Forms.Form.AcceptButton%2A&gt;</ph>， <ph id="ph3">&lt;xref:System.Windows.Forms.Form.CancelButton%2A&gt;</ph>， <ph id="ph4">&lt;xref:System.Windows.Forms.Form.MinimizeBox%2A&gt;</ph>， <ph id="ph5">&lt;xref:System.Windows.Forms.Form.MaximizeBox%2A&gt;</ph>，和<ph id="ph6">&lt;xref:System.Windows.Forms.Form.StartPosition%2A&gt;</ph>內容 對話方塊中變更的外觀和表單的功能。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AcceptButton">
          <source>The example also uses the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ControlCollection.Add%2A&gt;</ph> method of the form's <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Controls%2A&gt;</ph> collection to add two <ph id="ph3">&lt;xref:System.Windows.Forms.Button&gt;</ph> controls.</source>
          <target state="translated">此範例也會使用<ph id="ph1">&lt;xref:System.Windows.Forms.Form.ControlCollection.Add%2A&gt;</ph>形式的方法<ph id="ph2">&lt;xref:System.Windows.Forms.Control.Controls%2A&gt;</ph>要加入兩個集合<ph id="ph3">&lt;xref:System.Windows.Forms.Button&gt;</ph>控制項。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AcceptButton">
          <source>The example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.HelpButton%2A&gt;</ph> property to display a help button in the caption bar of the dialog box.</source>
          <target state="translated">此範例會使用<ph id="ph1">&lt;xref:System.Windows.Forms.Form.HelpButton%2A&gt;</ph>屬性 對話方塊的標題列中顯示 說明 按鈕。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.Activate">
          <source>Activates the form and gives it focus.</source>
          <target state="translated">啟動表單並給予焦點。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.Activate">
          <source>Activating a form brings it to the front if this is the active application, or it flashes the window caption if this is not the active application.</source>
          <target state="translated">啟動表單將它帶到前面如果這是作用中的應用程式，或它閃爍視窗的標題，如果這不是作用中的應用程式。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.Activate">
          <source>The form must be visible for this method to have any effect.</source>
          <target state="translated">格式必須是可見的此方法才能發生效用。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.Activate">
          <source>To determine the active form in an application, use the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ActiveForm%2A&gt;</ph> property or the <ph id="ph2">&lt;xref:System.Windows.Forms.Form.ActiveMdiChild%2A&gt;</ph> property if your forms are in a Multiple-document interface (MDI) application.</source>
          <target state="translated">若要判斷應用程式中作用中的表單，請使用<ph id="ph1">&lt;xref:System.Windows.Forms.Form.ActiveForm%2A&gt;</ph>屬性或<ph id="ph2">&lt;xref:System.Windows.Forms.Form.ActiveMdiChild%2A&gt;</ph>屬性，如果您的表單中的多重文件介面 (MDI) 應用程式。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.Activate">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.SetDesktopLocation%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Form.Load&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Forms.Form.Activate%2A&gt;</ph> members.</source>
          <target state="translated">下列程式碼範例示範如何使用<ph id="ph1">&lt;xref:System.Windows.Forms.Form.SetDesktopLocation%2A&gt;</ph>，<ph id="ph2">&lt;xref:System.Windows.Forms.Form.Load&gt;</ph>和<ph id="ph3">&lt;xref:System.Windows.Forms.Form.Activate%2A&gt;</ph>成員。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.Activate">
          <source>To run the example, paste the following code in a form called <ph id="ph1">`Form1`</ph> containing a button called <ph id="ph2">`Button1`</ph> and two <ph id="ph3">`Label`</ph> controls called <ph id="ph4">`Label1`</ph> and <ph id="ph5">`Label2`</ph>.</source>
          <target state="translated">若要執行此範例，下列程式碼的呼叫格式貼<ph id="ph1">`Form1`</ph>包含按鈕呼叫<ph id="ph2">`Button1`</ph>和兩個<ph id="ph3">`Label`</ph>控制項稱為<ph id="ph4">`Label1`</ph>和<ph id="ph5">`Label2`</ph>。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.Activate">
          <source>for changing focus.</source>
          <target state="translated">用於變更焦點。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.Activate">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph>.</source>
          <target state="translated">關聯的列舉型別：<ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Form.Activated">
          <source>Occurs when the form is activated in code or by the user.</source>
          <target state="translated">發生於表單以程式碼或由使用者啟動時。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Activated">
          <source>When the application is active and has multiple forms, the active form is the form with the input focus.</source>
          <target state="translated">有多個表單或為作用中的應用程式，使用中的格式，是具有輸入焦點的表單。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Activated">
          <source>A form that is not visible cannot be the active form.</source>
          <target state="translated">看不到表單不能是現用表單。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Activated">
          <source>The simplest way to activate a visible form is to click it or use an appropriate keyboard combination.</source>
          <target state="translated">啟動顯示表單的最簡單方式是按一下它，或使用適當的鍵盤組合。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Activated">
          <source>To activate a form at run time using code, call the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Activate%2A&gt;</ph> method.</source>
          <target state="translated">若要啟動表單在執行階段使用程式碼，呼叫<ph id="ph1">&lt;xref:System.Windows.Forms.Form.Activate%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Activated">
          <source>You can use this event for tasks such as updating the contents of the form based on changes made to the form's data when the form was not activated.</source>
          <target state="translated">您可以使用此事件的工作，例如更新根據表單的資料變更時不啟動表單的表單內容。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Activated">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">如需處理事件的詳細資訊，請參閱<bpt id="p1">[</bpt>處理和引發事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Activated">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.SetDesktopLocation%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Form.Closed&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Form.Load&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Form.Activated&gt;</ph>, and <ph id="ph5">&lt;xref:System.Windows.Forms.Form.Activate%2A&gt;</ph> members.</source>
          <target state="translated">下列程式碼範例示範如何使用<ph id="ph1">&lt;xref:System.Windows.Forms.Form.SetDesktopLocation%2A&gt;</ph>， <ph id="ph2">&lt;xref:System.Windows.Forms.Form.Closed&gt;</ph>， <ph id="ph3">&lt;xref:System.Windows.Forms.Form.Load&gt;</ph>， <ph id="ph4">&lt;xref:System.Windows.Forms.Form.Activated&gt;</ph>，和<ph id="ph5">&lt;xref:System.Windows.Forms.Form.Activate%2A&gt;</ph>成員。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Activated">
          <source>To run the example, paste the following code in a form called Form1 containing a <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> called <ph id="ph2">`Button1`</ph> and two <ph id="ph3">&lt;xref:System.Windows.Forms.Label&gt;</ph> controls called <ph id="ph4">`Label1`</ph> and <ph id="ph5">`Label2`</ph>.</source>
          <target state="translated">要執行此範例中，貼上下列程式碼呼叫 Form1 包含表單中<ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph>呼叫<ph id="ph2">`Button1`</ph>和兩個<ph id="ph3">&lt;xref:System.Windows.Forms.Label&gt;</ph>控制項稱為<ph id="ph4">`Label1`</ph>和<ph id="ph5">`Label2`</ph>。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ActivateMdiChild(System.Windows.Forms.Form)">
          <source>The child form to activate.</source>
          <target state="translated">要啟動的子表單。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ActivateMdiChild(System.Windows.Forms.Form)">
          <source>Activates the MDI child of a form.</source>
          <target state="translated">啟動表單的 MDI 子系。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.ActivateMdiChild(System.Windows.Forms.Form)">
          <source>If the <ph id="ph1">`form`</ph> parameter is already the active MDI child form, then the <ph id="ph2">&lt;xref:System.Windows.Forms.Form.ActivateMdiChild%2A&gt;</ph> method simply returns.</source>
          <target state="translated">如果<ph id="ph1">`form`</ph>參數已使用中的 MDI 子表單，然後在<ph id="ph2">&lt;xref:System.Windows.Forms.Form.ActivateMdiChild%2A&gt;</ph>方法只會傳回。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.ActivateMdiChild(System.Windows.Forms.Form)">
          <source>If <ph id="ph1">`form`</ph> is not <ph id="ph2">`null`</ph>, then it is set to be the active MDI child form.</source>
          <target state="translated">如果<ph id="ph1">`form`</ph>不<ph id="ph2">`null`</ph>，則會設為作用中的 MDI 子表單。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.ActivateMdiChild(System.Windows.Forms.Form)">
          <source>Whether the <ph id="ph1">`form`</ph> parameter is <ph id="ph2">`null`</ph> or not, <ph id="ph3">&lt;xref:System.Windows.Forms.Form.ActivateMdiChild%2A&gt;</ph> raises the <ph id="ph4">&lt;xref:System.Windows.Forms.Form.MdiChildActivate&gt;</ph> event.</source>
          <target state="translated">是否<ph id="ph1">`form`</ph>參數是<ph id="ph2">`null`</ph>，<ph id="ph3">&lt;xref:System.Windows.Forms.Form.ActivateMdiChild%2A&gt;</ph>引發<ph id="ph4">&lt;xref:System.Windows.Forms.Form.MdiChildActivate&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.ActiveForm">
          <source>Gets the currently active form for this application.</source>
          <target state="translated">取得這個應用程式目前的現用表單。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ActiveForm">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph> that represents the currently active form, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if there is no active form.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph>，代表目前現用表單；如果沒有現用表單，則為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ActiveForm">
          <source>You can use this method to obtain a reference to the currently active form to perform actions on the form or its controls.</source>
          <target state="translated">您可以使用這個方法來取得目前的現用表單，表單或它的控制項上執行動作的參考。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ActiveForm">
          <source>If your application is a multiple-document interface (MDI) application, use the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ActiveMdiChild%2A&gt;</ph> property to obtain the currently active MDI child form.</source>
          <target state="translated">如果您的應用程式的多重文件介面 (MDI) 應用程式，請使用<ph id="ph1">&lt;xref:System.Windows.Forms.Form.ActiveMdiChild%2A&gt;</ph>屬性，以取得目前現用的 MDI 子表單。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ActiveForm">
          <source>The following code example gets the active form and disables all the controls on the form.</source>
          <target state="translated">下列程式碼範例會取得使用中的表單，並停用表單上的所有控制項。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ActiveForm">
          <source>The example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Controls%2A&gt;</ph> collection of the form to iterate through each control on the form and disable the controls.</source>
          <target state="translated">此範例會使用<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Controls%2A&gt;</ph>表單，以逐一查看每個控制項在表單上，並停用控制項的集合。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ActiveForm">
          <source>for requesting a form.</source>
          <target state="translated">要求的表單。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ActiveForm">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph>.</source>
          <target state="translated">關聯的列舉型別：<ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.ActiveMdiChild">
          <source>Gets the currently active multiple-document interface (MDI) child window.</source>
          <target state="translated">取得目前現用的多重文件介面 (MDI) 子視窗。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ActiveMdiChild">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph> that represents the currently active MDI child window, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if there are currently no child windows present.</source>
          <target state="translated">傳回 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph>，代表目前現用 MDI 子視窗；如果目前沒有子視窗，則為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ActiveMdiChild">
          <source>You can use this method to determine whether there are any MDI child forms open in your MDI application.</source>
          <target state="translated">您可以使用這個方法，以判斷是否有任何 MDI 子表單在 MDI 應用程式中開啟。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ActiveMdiChild">
          <source>You can also use this method to perform operations on an MDI child window from its MDI parent form or from another form that is displayed in your application.</source>
          <target state="translated">您也可以使用這個方法來執行作業 MDI 子視窗上，從 MDI 父表單或另一種形式顯示在您的應用程式中。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ActiveMdiChild">
          <source>If the currently active form is not an MDI child form, you can use the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ActiveForm%2A&gt;</ph> property to obtain a reference to it.</source>
          <target state="translated">如果目前的現用表單不是 MDI 子表單，您可以使用<ph id="ph1">&lt;xref:System.Windows.Forms.Form.ActiveForm%2A&gt;</ph>屬性，以取得它的參考。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ActiveMdiChild">
          <source>The following code example obtains a reference to the active MDI child form and loops through all <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> controls on the form, resetting their <ph id="ph2">&lt;xref:System.Windows.Forms.TextBoxBase.Text%2A&gt;</ph> properties.</source>
          <target state="translated">下列程式碼範例會取得使用中的 MDI 子表單和所有執行迴圈的參考<ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>控制項在表單中，重設其<ph id="ph2">&lt;xref:System.Windows.Forms.TextBoxBase.Text%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ActiveMdiChild">
          <source>This example requires that an MDI parent form has been created and that this method call is being made from the MDI parent form.</source>
          <target state="translated">這個範例需要確認已建立 MDI 父表單和，此方法進行呼叫，從 MDI 父表單。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.AddOwnedForm(System.Windows.Forms.Form)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph> that this form will own.</source>
          <target state="translated">這個表單將擁有的 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.AddOwnedForm(System.Windows.Forms.Form)">
          <source>Adds an owned form to this form.</source>
          <target state="translated">將這個表單加入附屬的表單。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.AddOwnedForm(System.Windows.Forms.Form)">
          <source>The form assigned to the owner form remains owned until the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.RemoveOwnedForm%2A&gt;</ph> method is called.</source>
          <target state="translated">指派給主控表單表單將維持狀態直到擁有<ph id="ph1">&lt;xref:System.Windows.Forms.Form.RemoveOwnedForm%2A&gt;</ph>方法呼叫。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.AddOwnedForm(System.Windows.Forms.Form)">
          <source>You can also make a form owned by another by setting the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Owner%2A&gt;</ph> property with a reference to its owner form.</source>
          <target state="translated">您也可以進行表單擁有的另一個設定<ph id="ph1">&lt;xref:System.Windows.Forms.Form.Owner%2A&gt;</ph>其擁有者的形式參考的屬性。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.AddOwnedForm(System.Windows.Forms.Form)">
          <source>When a form is owned by another form, it is closed or hidden with the owner form.</source>
          <target state="translated">當表單由另一種形式所擁有時，它已關閉或隱藏的擁有者的表單。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.AddOwnedForm(System.Windows.Forms.Form)">
          <source>For example, consider a form named <ph id="ph1">`Form2`</ph> that is owned by a form named <ph id="ph2">`Form1`</ph>.</source>
          <target state="translated">例如，假設名為表單<ph id="ph1">`Form2`</ph>名為的表單所擁有<ph id="ph2">`Form1`</ph>。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.AddOwnedForm(System.Windows.Forms.Form)">
          <source>If <ph id="ph1">`Form1`</ph> is closed or minimized, <ph id="ph2">`Form2`</ph> is also closed or hidden.</source>
          <target state="translated">如果<ph id="ph1">`Form1`</ph>已關閉或最小化<ph id="ph2">`Form2`</ph>也已關閉或隱藏。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.AddOwnedForm(System.Windows.Forms.Form)">
          <source>Owned forms are also never displayed behind their owner form.</source>
          <target state="translated">擁有的表單也永遠不會顯示其主控表單後面。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.AddOwnedForm(System.Windows.Forms.Form)">
          <source>You can use owned forms for windows such as find and replace windows, which should not be displayed behind the owner form when the owner form is selected.</source>
          <target state="translated">您可以使用適用於 windows，例如尋找擁有的表單，並取代 windows，不應該顯示擁有者表單的後置選取主控表單時。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.AddOwnedForm(System.Windows.Forms.Form)">
          <source>If the form is a multiple-document interface (MDI) parent form, this property returns all forms that are displayed with the exception of any MDI child forms that are currently open.</source>
          <target state="translated">如果表單為多重文件介面 (MDI) 父表單，這個屬性會傳回顯示除了任何目前的 MDI 子表單的所有表單都開啟。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.AddOwnedForm(System.Windows.Forms.Form)">
          <source>To obtain the MDI child forms opened in an MDI parent form, use the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.MdiChildren%2A&gt;</ph> property.</source>
          <target state="translated">若要取得 MDI 子表單在 MDI 父表單中開啟，請使用<ph id="ph1">&lt;xref:System.Windows.Forms.Form.MdiChildren%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.AddOwnedForm(System.Windows.Forms.Form)">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.AddOwnedForm%2A&gt;</ph> method to display a form as an owned form of another form.</source>
          <target state="translated">下列程式碼範例示範如何使用<ph id="ph1">&lt;xref:System.Windows.Forms.Form.AddOwnedForm%2A&gt;</ph>表單顯示為附屬的表單的另一種形式的方法。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.AddOwnedForm(System.Windows.Forms.Form)">
          <source>Once the owned form is shown, you can minimize its owner form and the owned form will minimize with it.</source>
          <target state="translated">附屬的表單顯示後，您可以降低其擁有者的形式和附屬的表單會與其降至最低。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.AddOwnedForm(System.Windows.Forms.Form)">
          <source>The example requires that the code in the example is called from another event or method of a form.</source>
          <target state="translated">這個範例需要在範例中的程式碼會呼叫從另一個事件或表單的方法。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.AdjustFormScrollbars(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to show the scroll bars; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">若要顯示捲軸，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.AdjustFormScrollbars(System.Boolean)">
          <source>Adjusts the scroll bars on the container based on the current control positions and the control currently selected.</source>
          <target state="translated">根據目前控制項的位置以及目前選取的控制項，調整容器上的捲軸。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.AllowTransparency">
          <source>Gets or sets a value indicating whether the opacity of the form can be adjusted.</source>
          <target state="translated">取得或設定值，指出是否可調整表單的不透明度。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AllowTransparency">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the opacity of the form can be changed; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果表單的不透明度可以變更，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AllowTransparency">
          <source>This property is automatically set to <ph id="ph1">`true`</ph> if the <ph id="ph2">`Opacity`</ph> is changed.</source>
          <target state="translated">這個屬性會自動設定為<ph id="ph1">`true`</ph>如果<ph id="ph2">`Opacity`</ph>變更。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AllowTransparency">
          <source>When the opacity of a form is set using the <ph id="ph1">`Opacity`</ph> property, the form will layer objects on the form.</source>
          <target state="translated">當使用設定表單的透明度<ph id="ph1">`Opacity`</ph>屬性，表單會在表單上的物件分層。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AllowTransparency">
          <source>If you set the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.AllowTransparency%2A&gt;</ph> property to <ph id="ph2">`false`</ph> the form will not be in layered mode which will improve the display performance of the form.</source>
          <target state="translated">如果您設定<ph id="ph1">&lt;xref:System.Windows.Forms.Form.AllowTransparency%2A&gt;</ph>屬性<ph id="ph2">`false`</ph>表單都不會在多層式模式，以提升的表單顯示效能。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ApplyAutoScaling">
          <source>Resizes the form according to the current value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Form.AutoScaleBaseSize" /&gt;</ph> property and the size of the current font.</source>
          <target state="translated">根據目前 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Form.AutoScaleBaseSize" /&gt;</ph> 屬性值和目前的字型大小調整表單的大小。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.ApplyAutoScaling">
          <source>This method determines the form size using the value of the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.AutoScaleBaseSize%2A&gt;</ph> property and the <ph id="ph2">&lt;xref:System.Windows.Forms.Form.Size%2A&gt;</ph> value returned by the <ph id="ph3">&lt;xref:System.Windows.Forms.Form.GetAutoScaleSize%2A&gt;</ph> method.</source>
          <target state="translated">這個方法會決定使用的值將表單大小<ph id="ph1">&lt;xref:System.Windows.Forms.Form.AutoScaleBaseSize%2A&gt;</ph>屬性和<ph id="ph2">&lt;xref:System.Windows.Forms.Form.Size%2A&gt;</ph>所傳回的值<ph id="ph3">&lt;xref:System.Windows.Forms.Form.GetAutoScaleSize%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.AutoScale">
          <source>Gets or sets a value indicating whether the form adjusts its size to fit the height of the font used on the form and scales its controls.</source>
          <target state="translated">取得或設定值，指出表單是否要調整大小以配合表單上所使用的字型高度，並且縮放它的控制項。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AutoScale">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the form will automatically scale itself and its controls based on the current font assigned to the form; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果表單根據指派給表單的目前字型自動縮放表單本身及其控制項，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AutoScale">
          <source>The default is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">預設值為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AutoScale">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.AutoScale%2A&gt;</ph> is obsolete and has been retained for backward compatibility.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.AutoScale%2A&gt;</ph>已經過時，已保留回溯相容性。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AutoScale">
          <source>The non-obsolete alternative is <ph id="ph1">&lt;xref:System.Windows.Forms.ContainerControl.AutoScaleMode%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">非過時的替代方式是 <ph id="ph1">&lt;xref:System.Windows.Forms.ContainerControl.AutoScaleMode%2A?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AutoScale">
          <source>For more information about automatic scaling, see <bpt id="p1">[</bpt>Automatic Scaling in Windows Forms<ept id="p1">](~/docs/framework/winforms/automatic-scaling-in-windows-forms.md)</ept>.</source>
          <target state="translated">如需自動調整的詳細資訊，請參閱<bpt id="p1">[</bpt>Windows Form 中的自動調整<ept id="p1">](~/docs/framework/winforms/automatic-scaling-in-windows-forms.md)</ept>。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AutoScale">
          <source>You can use this property to allow your form and its controls to automatically adjust based on changes in the font.</source>
          <target state="translated">您可以使用這個屬性允許您的表單和其自動調整控制項變更字型。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AutoScale">
          <source>This can be useful in applications where the font might increase or decrease based on the language specified for use by Windows.</source>
          <target state="translated">這可以是應用程式可能會增加字型的位置，或是根據語言的 windows 指定用來減少。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AutoScale">
          <source>To obtain the size the form will auto scale to, use the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.AutoScaleBaseSize%2A&gt;</ph> property.</source>
          <target state="translated">若要使用的標尺取得表單就會自動的大小<ph id="ph1">&lt;xref:System.Windows.Forms.Form.AutoScaleBaseSize%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AutoScale">
          <source>If you want to determine the size the form will auto scale to based on a specific font, use the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.GetAutoScaleSize%2A&gt;</ph> method.</source>
          <target state="translated">如果您想要決定大小表單就會自動調整規模，以根據特定字型，而使用<ph id="ph1">&lt;xref:System.Windows.Forms.Form.GetAutoScaleSize%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.AutoScaleBaseSize">
          <source>Gets or sets the base size used for autoscaling of the form.</source>
          <target state="translated">取得或設定用以自動縮放表單的基底大小。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AutoScaleBaseSize">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Size" /&gt;</ph> that represents the base size that this form uses for autoscaling.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Size" /&gt;</ph>，代表這個表單用來自動縮放的基準大小。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AutoScaleBaseSize">
          <source>This member has been retained for backward compatibility.</source>
          <target state="translated">這個成員保留回溯相容性。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AutoScaleBaseSize">
          <source>For more information about automatic scaling, see <bpt id="p1">[</bpt>Automatic Scaling in Windows Forms<ept id="p1">](~/docs/framework/winforms/automatic-scaling-in-windows-forms.md)</ept>.</source>
          <target state="translated">如需自動調整的詳細資訊，請參閱<bpt id="p1">[</bpt>Windows Form 中的自動調整<ept id="p1">](~/docs/framework/winforms/automatic-scaling-in-windows-forms.md)</ept>。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AutoScaleBaseSize">
          <source>The value of the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.AutoScaleBaseSize%2A&gt;</ph> property is used at form-display time to compute the scaling factor for the form.</source>
          <target state="translated">值<ph id="ph1">&lt;xref:System.Windows.Forms.Form.AutoScaleBaseSize%2A&gt;</ph>屬性在表單顯示時間用來計算表單的縮放比例。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AutoScaleBaseSize">
          <source>The autoscaling base size is used by the form as a baseline for comparison to the system's font size to determine how much to scale the form when autoscaling is used.</source>
          <target state="translated">自動縮放基準大小是由用於表單做為基準系統字型大小的比較來判斷多少縮放表單比例，使用自動調整時。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AutoScaleBaseSize">
          <source>If you want to determine the size a form will auto scale to based on a specific font, use the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.GetAutoScaleSize%2A&gt;</ph> method.</source>
          <target state="translated">如果您想要決定大小表單就會自動調整規模，以根據特定字型，而使用<ph id="ph1">&lt;xref:System.Windows.Forms.Form.GetAutoScaleSize%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AutoScaleBaseSize">
          <source>The value of this property is used when the form is initially created.</source>
          <target state="translated">一開始建立表單時，會使用這個屬性的值。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AutoScaleBaseSize">
          <source>Once the property is set, it cannot be changed.</source>
          <target state="translated">一旦設定屬性之後，就無法變更。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.AutoScroll">
          <source>Gets or sets a value indicating whether the form enables autoscrolling.</source>
          <target state="translated">取得或設定值，指出表單是否啟用自動捲動。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AutoScroll">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to enable autoscrolling on the form; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> 表示要啟用表單上的自動捲動，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AutoScroll">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">預設值為 <ph id="ph1">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AutoScroll">
          <source>If this property is set to <ph id="ph1">`true`</ph>, scroll bars are displayed on the form if any controls are located outside the form's client region.</source>
          <target state="translated">如果這個屬性設定為<ph id="ph1">`true`</ph>，如果任何控制項位於外部表單的工作區，將會顯示在表單上的捲軸。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AutoScroll">
          <source>Additionally, when autoscrolling is on, the client area of the form automatically scrolls to make the control with input focus visible.</source>
          <target state="translated">此外，自動捲動時，表單工作區會自動捲動以顯示具有輸入焦點的控制項。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AutoScroll">
          <source>You can use this property to prevent users from losing the ability to view controls when their video resolution settings are set to a low resolution.</source>
          <target state="translated">您可以使用這個屬性，以防止使用者檢視控制項，當其視訊解析度設定為低解析度的能力。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AutoScroll">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.AutoScroll%2A&gt;</ph> property to enable the display of controls that are outsize the client area of a form.</source>
          <target state="translated">下列程式碼範例示範如何使用<ph id="ph1">&lt;xref:System.Windows.Forms.Form.AutoScroll%2A&gt;</ph>啟用 outsize 表單的工作區的控制項顯示的屬性。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AutoScroll">
          <source>The example creates a new form and adds a <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> control to the form.</source>
          <target state="translated">此範例會建立新表單，並將<ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph>控制項加入表單。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AutoScroll">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> control is positioned outsize the client area of the new form.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph>控制項是定位的 outsize 新表單的工作區。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AutoScroll">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.AutoScroll%2A&gt;</ph> property is set to true to display scroll bars on the form to enable the user to scroll to the control.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.AutoScroll%2A&gt;</ph>屬性設定為 true 以啟用使用者捲動至控制項在表單上顯示捲軸。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AutoScroll">
          <source>This example requires that the method defined in this example is called from another form in an event handler or other method.</source>
          <target state="translated">這個範例需要在此範例中定義的方法從另一種形式的事件處理常式或其他方法中呼叫。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.AutoSize">
          <source>Resize the form according to the setting of <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Form.AutoSizeMode" /&gt;</ph>.</source>
          <target state="translated">根據 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Form.AutoSizeMode" /&gt;</ph> 的設定調整表單大小。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AutoSize">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the form will automatically resize; <ph id="ph2">&lt;see langword="false" /&gt;</ph> if it must be manually resized.</source>
          <target state="translated">如果表單將自動調整大小，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；如果必須手動調整大小，則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AutoSize">
          <source>Use <ph id="ph1">&lt;xref:System.Windows.Forms.Form.AutoSize%2A&gt;</ph> to force a form to resize to fit its contents.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Windows.Forms.Form.AutoSize%2A&gt;</ph>強制表單，以調整大小以符合其內容。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AutoSize">
          <source>A form does not automatically resize in the Visual Studio forms designer, regardless of the values of the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.AutoSize%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Form.AutoSizeMode%2A&gt;</ph> properties.</source>
          <target state="translated">不自動調整大小的表單不會在 Visual Studio 表單設計工具中，不論值<ph id="ph1">&lt;xref:System.Windows.Forms.Form.AutoSize%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Windows.Forms.Form.AutoSizeMode%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AutoSize">
          <source>The form correctly resizes itself at run time according to the values of these two properties.</source>
          <target state="translated">表單正確調整其大小在執行階段根據這兩個屬性的值。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AutoSize">
          <source>By contrast, a custom <ph id="ph1">&lt;xref:System.Windows.Forms.UserControl&gt;</ph> automatically resizes itself both at design time and at run time.</source>
          <target state="translated">相較之下，自訂<ph id="ph1">&lt;xref:System.Windows.Forms.UserControl&gt;</ph>在設計階段和執行階段會自動調整本身大小。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AutoSize">
          <source>When using <ph id="ph1">&lt;xref:System.Windows.Forms.Form.AutoSize%2A&gt;</ph>, the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.MinimumSize%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Forms.Control.MaximumSize%2A&gt;</ph> properties are respected, but the current value of the <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Size%2A&gt;</ph> property is ignored.</source>
          <target state="translated">當使用<ph id="ph1">&lt;xref:System.Windows.Forms.Form.AutoSize%2A&gt;</ph>、<ph id="ph2">&lt;xref:System.Windows.Forms.Control.MinimumSize%2A&gt;</ph>和<ph id="ph3">&lt;xref:System.Windows.Forms.Control.MaximumSize%2A&gt;</ph>遵守屬性，但目前的值<ph id="ph4">&lt;xref:System.Windows.Forms.Control.Size%2A&gt;</ph>屬性會被忽略。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AutoSize">
          <source>Using <ph id="ph1">&lt;xref:System.Windows.Forms.Form.AutoSize%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Form.AutoSizeMode%2A&gt;</ph> also renders the <ph id="ph3">&lt;xref:System.Windows.Forms.Form.AutoScroll%2A&gt;</ph> property superfluous, as there is no way to shrink the form to hide its contained controls from view.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Windows.Forms.Form.AutoSize%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Windows.Forms.Form.AutoSizeMode%2A&gt;</ph>也會呈現<ph id="ph3">&lt;xref:System.Windows.Forms.Form.AutoScroll%2A&gt;</ph>多餘的因為沒有任何方法可以壓縮表單，以隱藏其包含的控制項檢視中的屬性。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AutoSize">
          <source>See the <ph id="ph1">&lt;xref:System.Windows.Forms.AutoSizeMode&gt;</ph> enumeration for information on how a form behaves when <ph id="ph2">&lt;xref:System.Windows.Forms.Form.AutoSize%2A&gt;</ph> is <ph id="ph3">`true`</ph>.</source>
          <target state="translated">請參閱<ph id="ph1">&lt;xref:System.Windows.Forms.AutoSizeMode&gt;</ph>表單行為時的詳細資訊的列舉<ph id="ph2">&lt;xref:System.Windows.Forms.Form.AutoSize%2A&gt;</ph>是<ph id="ph3">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AutoSize">
          <source>The following code example shows a form created using code that automatically resizes to fit its contents.</source>
          <target state="translated">下列程式碼範例示範使用自動調整大小以符合其內容的程式碼建立的表單。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AutoSize">
          <source>When run, the form displays a <ph id="ph1">&lt;xref:System.Windows.Forms.Label&gt;</ph>, a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> for entering a URL, and a <ph id="ph3">&lt;xref:System.Windows.Forms.Button&gt;</ph> for displaying that URL inside of the user's default Web browser.</source>
          <target state="translated">當執行時，會顯示表單<ph id="ph1">&lt;xref:System.Windows.Forms.Label&gt;</ph>、<ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>輸入 URL，和<ph id="ph3">&lt;xref:System.Windows.Forms.Button&gt;</ph>顯示該使用者的預設網頁瀏覽器內的 URL。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AutoSize">
          <source>The code example uses a <ph id="ph1">&lt;xref:System.Windows.Forms.FlowLayoutPanel&gt;</ph> to lay out the contained controls one after the other.</source>
          <target state="translated">此程式碼範例會使用<ph id="ph1">&lt;xref:System.Windows.Forms.FlowLayoutPanel&gt;</ph>配置包含一個接著一個控制項。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AutoSize">
          <source>It also sets the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.AutoSize%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.AutoSizeMode&gt;</ph> to grow and shrink to fit the contents of its form.</source>
          <target state="translated">它也會設定<ph id="ph1">&lt;xref:System.Windows.Forms.Control.AutoSize%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Windows.Forms.AutoSizeMode&gt;</ph>来擴增和縮減以適合其表單的內容。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Form.AutoSizeChanged">
          <source>Occurs when the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Form.AutoSize" /&gt;</ph> property changes.</source>
          <target state="translated">發生於 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Form.AutoSize" /&gt;</ph> 屬性變更時。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.AutoSizeMode">
          <source>Gets or sets the mode by which the form automatically resizes itself.</source>
          <target state="translated">取得或設定表單自動調整其大小所根據的模式。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AutoSizeMode">
          <source>An <ph id="ph1">&lt;see cref="T:System.Windows.Forms.AutoSizeMode" /&gt;</ph> enumerated value.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.AutoSizeMode" /&gt;</ph> 列舉值。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AutoSizeMode">
          <source>The default is <ph id="ph1">&lt;see cref="F:System.Windows.Forms.AutoSizeMode.GrowOnly" /&gt;</ph>.</source>
          <target state="translated">預設值為 <ph id="ph1">&lt;see cref="F:System.Windows.Forms.AutoSizeMode.GrowOnly" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AutoSizeMode">
          <source>Setting the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.AutoSizeMode%2A&gt;</ph> property to a new value causes the form to be laid out again.</source>
          <target state="translated">設定<ph id="ph1">&lt;xref:System.Windows.Forms.Form.AutoSizeMode%2A&gt;</ph>屬性設為新值會導致表單以進行重新配置。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AutoSizeMode">
          <source>A form does not automatically resize in the Visual Studio forms designer, regardless of the values of the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.AutoSize%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Form.AutoSizeMode%2A&gt;</ph> properties.</source>
          <target state="translated">不自動調整大小的表單不會在 Visual Studio 表單設計工具中，不論值<ph id="ph1">&lt;xref:System.Windows.Forms.Form.AutoSize%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Windows.Forms.Form.AutoSizeMode%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AutoSizeMode">
          <source>The form correctly resizes itself at run time according to the values of these two properties.</source>
          <target state="translated">表單正確調整其大小在執行階段根據這兩個屬性的值。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AutoSizeMode">
          <source>By contrast, a custom <ph id="ph1">&lt;xref:System.Windows.Forms.UserControl&gt;</ph> automatically resizes itself both at design time and at run time.</source>
          <target state="translated">相較之下，自訂<ph id="ph1">&lt;xref:System.Windows.Forms.UserControl&gt;</ph>在設計階段和執行階段會自動調整本身大小。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AutoSizeMode">
          <source>The following code example shows a form created using code that automatically resizes to fit its contents.</source>
          <target state="translated">下列程式碼範例示範使用自動調整大小以符合其內容的程式碼建立的表單。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AutoSizeMode">
          <source>When run, the form displaya a <ph id="ph1">&lt;xref:System.Windows.Forms.Label&gt;</ph>, a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> for entering a URL, and a <ph id="ph3">&lt;xref:System.Windows.Forms.Button&gt;</ph> for displaying that URL inside of the user's default Web browser.</source>
          <target state="translated">執行時，表單 displaya <ph id="ph1">&lt;xref:System.Windows.Forms.Label&gt;</ph>、<ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>輸入 URL，和<ph id="ph3">&lt;xref:System.Windows.Forms.Button&gt;</ph>顯示該使用者的預設網頁瀏覽器內的 URL。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AutoSizeMode">
          <source>The code example uses a <ph id="ph1">&lt;xref:System.Windows.Forms.FlowLayoutPanel&gt;</ph> to lay out the contained controls one after the other.</source>
          <target state="translated">此程式碼範例會使用<ph id="ph1">&lt;xref:System.Windows.Forms.FlowLayoutPanel&gt;</ph>配置包含一個接著一個控制項。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AutoSizeMode">
          <source>It also sets the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.AutoSize%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.AutoSizeMode&gt;</ph> to grow and shrink to fit the contents of its form.</source>
          <target state="translated">它也會設定<ph id="ph1">&lt;xref:System.Windows.Forms.Control.AutoSize%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Windows.Forms.AutoSizeMode&gt;</ph>来擴增和縮減以適合其表單的內容。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.AutoSizeMode">
          <source>The value is not a valid <ph id="ph1">&lt;see cref="T:System.Windows.Forms.AutoSizeMode" /&gt;</ph> value.</source>
          <target state="translated">該值不是有效的 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.AutoSizeMode" /&gt;</ph> 值。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.AutoValidate">
          <source>Gets or sets a value that indicates whether controls in this container will be automatically validated when the focus changes.</source>
          <target state="translated">取得或設定值，指出這個容器中的控制項是否會在焦點改變時自動進行驗證。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AutoValidate">
          <source>An <ph id="ph1">&lt;see cref="T:System.Windows.Forms.AutoValidate" /&gt;</ph> enumerated value that indicates whether contained controls are implicitly validated on focus change.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.AutoValidate" /&gt;</ph> 列舉值，指出包含的控制項是否會在焦點改變時隱含地進行驗證。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.AutoValidate">
          <source>The default is Inherit.</source>
          <target state="translated">預設值為 Inherit。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Form.AutoValidateChanged">
          <source>Occurs when the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Form.AutoValidate" /&gt;</ph> property changes.</source>
          <target state="translated">發生於 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Form.AutoValidate" /&gt;</ph> 屬性變更時。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.BackColor">
          <source>Gets or sets the background color for the control.</source>
          <target state="translated">取得或設定控制項的背景色彩。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.BackColor">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Color" /&gt;</ph> that represents the background color of the control.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Color" /&gt;</ph>，代表控制項的背景色彩。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.BackColor">
          <source>The default is the value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.DefaultBackColor" /&gt;</ph> property.</source>
          <target state="translated">預設值為 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.DefaultBackColor" /&gt;</ph> 屬性的值。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.CancelButton">
          <source>Gets or sets the button control that is clicked when the user presses the ESC key.</source>
          <target state="translated">取得或設定使用者按下 ESC 鍵時所按下的按鈕控制項。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.CancelButton">
          <source>An <ph id="ph1">&lt;see cref="T:System.Windows.Forms.IButtonControl" /&gt;</ph> that represents the cancel button for the form.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.IButtonControl" /&gt;</ph>，代表表單的取消按鈕。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.CancelButton">
          <source>The cancel button for a form is the button control that is clicked whenever the user presses the ESC key.</source>
          <target state="translated">表單的取消按鈕是每當使用者按下 ESC 鍵時所按下的按鈕控制項。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.CancelButton">
          <source>The button assigned to this property must be an <ph id="ph1">&lt;xref:System.Windows.Forms.IButtonControl&gt;</ph> that is on the current form or located within a container on the current form.</source>
          <target state="translated">必須是指派給這個屬性的按鈕<ph id="ph1">&lt;xref:System.Windows.Forms.IButtonControl&gt;</ph>是現用表單上或位於目前的表單上的容器。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.CancelButton">
          <source>This property allows you to designate a default action to occur when the user presses the ESC key in your application.</source>
          <target state="translated">這個屬性可讓您指定當使用者在應用程式中按下 ESC 鍵時所發生的預設動作。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.CancelButton">
          <source>You can use this property to allow the user to quickly navigate a simple form by allowing them to simply press the ESC key to close a window without committing changes instead of manually clicking the cancel button with their mouse.</source>
          <target state="translated">您可以使用這個屬性可讓使用者快速巡覽簡單表單，讓它們直接按下 ESC 鍵以關閉視窗而不認可變更，而不是手動按一下 [取消] 5d; 按鈕，使用滑鼠。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.CancelButton">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.Form.CancelButton%2A&gt;</ph> may not work if another control on the form intercepts the ESC key.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.CancelButton%2A&gt;</ph> 可能無法運作如果表單上的另一個控制項攔截 ESC 鍵。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.CancelButton">
          <source>For example, if you have a <ph id="ph1">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph> open on your form, ESC will close the <ph id="ph2">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph> instead of closing the Form.</source>
          <target state="translated">例如，如果您有<ph id="ph1">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph>開啟您的表單上，esc 鍵將會關閉<ph id="ph2">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph>而不是關閉表單。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.CancelButton">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.IButtonControl&gt;</ph> object assigned to <ph id="ph2">&lt;xref:System.Windows.Forms.Form.CancelButton%2A&gt;</ph> must be visible on the form, or else pressing the ESC key will have no effect.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.IButtonControl&gt;</ph>物件指派給<ph id="ph2">&lt;xref:System.Windows.Forms.Form.CancelButton%2A&gt;</ph>必須顯示在表單中，否則按下 ESC 鍵會有任何作用。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.CancelButton">
          <source>The following code example creates a new instance of a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> and calls the <ph id="ph2">&lt;xref:System.Windows.Forms.Form.ShowDialog%2A&gt;</ph> method to display the form as a dialog box.</source>
          <target state="translated">下列程式碼範例會建立的新執行個體<ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>呼叫<ph id="ph2">&lt;xref:System.Windows.Forms.Form.ShowDialog%2A&gt;</ph>要將表單顯示為對話方塊的方法。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.CancelButton">
          <source>The example sets the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormBorderStyle%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Form.AcceptButton%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Form.CancelButton%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Form.MinimizeBox%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.Form.MaximizeBox%2A&gt;</ph>, and <ph id="ph6">&lt;xref:System.Windows.Forms.Form.StartPosition%2A&gt;</ph> properties to change the appearance and functionality of the form to a dialog box.</source>
          <target state="translated">範例會設定<ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormBorderStyle%2A&gt;</ph>， <ph id="ph2">&lt;xref:System.Windows.Forms.Form.AcceptButton%2A&gt;</ph>， <ph id="ph3">&lt;xref:System.Windows.Forms.Form.CancelButton%2A&gt;</ph>， <ph id="ph4">&lt;xref:System.Windows.Forms.Form.MinimizeBox%2A&gt;</ph>， <ph id="ph5">&lt;xref:System.Windows.Forms.Form.MaximizeBox%2A&gt;</ph>，和<ph id="ph6">&lt;xref:System.Windows.Forms.Form.StartPosition%2A&gt;</ph>內容 對話方塊中變更的外觀和表單的功能。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.CancelButton">
          <source>The example also uses the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ControlCollection.Add%2A&gt;</ph> method of the form's <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Controls%2A&gt;</ph> collection to add two <ph id="ph3">&lt;xref:System.Windows.Forms.Button&gt;</ph> controls.</source>
          <target state="translated">此範例也會使用<ph id="ph1">&lt;xref:System.Windows.Forms.Form.ControlCollection.Add%2A&gt;</ph>形式的方法<ph id="ph2">&lt;xref:System.Windows.Forms.Control.Controls%2A&gt;</ph>要加入兩個集合<ph id="ph3">&lt;xref:System.Windows.Forms.Button&gt;</ph>控制項。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.CancelButton">
          <source>The example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.HelpButton%2A&gt;</ph> property to display a help button in the caption bar of the dialog box.</source>
          <target state="translated">此範例會使用<ph id="ph1">&lt;xref:System.Windows.Forms.Form.HelpButton%2A&gt;</ph>屬性 對話方塊的標題列中顯示 說明 按鈕。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.CenterToParent">
          <source>Centers the position of the form within the bounds of the parent form.</source>
          <target state="translated">將表單的位置置於父表單範圍的中央。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.CenterToParent">
          <source>Do not call the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.CenterToParent%2A&gt;</ph> method directly from your code.</source>
          <target state="translated">請勿呼叫<ph id="ph1">&lt;xref:System.Windows.Forms.Form.CenterToParent%2A&gt;</ph>直接從程式碼的方法。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.CenterToParent">
          <source>Instead, set the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.StartPosition%2A&gt;</ph> property to <ph id="ph2">&lt;xref:System.Windows.Forms.FormStartPosition.CenterParent&gt;</ph>.</source>
          <target state="translated">相反地，設定<ph id="ph1">&lt;xref:System.Windows.Forms.Form.StartPosition%2A&gt;</ph>屬性<ph id="ph2">&lt;xref:System.Windows.Forms.FormStartPosition.CenterParent&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.CenterToParent">
          <source>If the form or dialog is top-level, then <ph id="ph1">&lt;xref:System.Windows.Forms.Form.CenterToParent%2A&gt;</ph> centers the form with respect to the screen or desktop.</source>
          <target state="translated">如果表單或對話方塊是最上層，則<ph id="ph1">&lt;xref:System.Windows.Forms.Form.CenterToParent%2A&gt;</ph>中心相對於畫面或桌面上表單。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.CenterToScreen">
          <source>Centers the form on the current screen.</source>
          <target state="translated">將表單置於目前螢幕的中央位置。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.CenterToScreen">
          <source>Do not call this directly from your code.</source>
          <target state="translated">請勿呼叫這個方法直接從程式碼。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.CenterToScreen">
          <source>Instead, set the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.StartPosition%2A&gt;</ph> property to <ph id="ph2">&lt;xref:System.Windows.Forms.FormStartPosition.CenterScreen&gt;</ph>.</source>
          <target state="translated">相反地，設定<ph id="ph1">&lt;xref:System.Windows.Forms.Form.StartPosition%2A&gt;</ph>屬性<ph id="ph2">&lt;xref:System.Windows.Forms.FormStartPosition.CenterScreen&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.CenterToScreen">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.CenterToScreen%2A&gt;</ph> method uses the following priority list to determine the screen used to center the form:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.CenterToScreen%2A&gt;</ph>方法會使用下列優先順序清單來判斷用來置表單螢幕：</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.CenterToScreen">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Owner%2A&gt;</ph> property of the form.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.Owner%2A&gt;</ph>表單的屬性。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.CenterToScreen">
          <source>The HWND owner of the form.</source>
          <target state="translated">形式的 HWND 擁有者。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.CenterToScreen">
          <source>The screen that currently has the mouse cursor.</source>
          <target state="translated">螢幕目前的滑鼠游標。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.ClientSize">
          <source>Gets or sets the size of the client area of the form.</source>
          <target state="translated">取得或設定表單工作區的大小。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ClientSize">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Size" /&gt;</ph> that represents the size of the form's client area.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Size" /&gt;</ph>，代表表單工作區的大小。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ClientSize">
          <source>The size of the client area of the form is the size of the form excluding the borders and the title bar.</source>
          <target state="translated">表單的工作區的大小是格式不包括框線和標題列的大小。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ClientSize">
          <source>The client area of a form is the area within a form where controls can be placed.</source>
          <target state="translated">表單的工作區是控制項放置在表單區域。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ClientSize">
          <source>You can use this property to get the proper dimensions when performing graphics operations or when sizing and positioning controls on the form.</source>
          <target state="translated">您可以使用這個屬性，以取得正確的維度，或調整大小並放置在表單上的控制項時執行圖形作業。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ClientSize">
          <source>To get the size of the entire form, use the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Size%2A&gt;</ph> property or use the individual properties <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Height%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Width%2A&gt;</ph>.</source>
          <target state="translated">若要取得整個表單的大小，請使用<ph id="ph1">&lt;xref:System.Windows.Forms.Form.Size%2A&gt;</ph>屬性使用的個別屬性或<ph id="ph2">&lt;xref:System.Windows.Forms.Control.Height%2A&gt;</ph>和<ph id="ph3">&lt;xref:System.Windows.Forms.Control.Width%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ClientSize">
          <source>You cannot currently bind to this property using application settings.</source>
          <target state="translated">您目前無法繫結使用應用程式設定這個屬性。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ClientSize">
          <source>For more information on application settings, see <bpt id="p1">[</bpt>Application Settings Overview<ept id="p1">](~/docs/framework/winforms/advanced/application-settings-overview.md)</ept>.</source>
          <target state="translated">如需有關應用程式設定的詳細資訊，請參閱<bpt id="p1">[</bpt>應用程式設定概觀<ept id="p1">](~/docs/framework/winforms/advanced/application-settings-overview.md)</ept>。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ClientSize">
          <source>The following code example creates an event handler for the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Resize&gt;</ph> event of a form.</source>
          <target state="translated">下列程式碼範例會建立事件處理常式<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Resize&gt;</ph>表單的事件。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ClientSize">
          <source>The event handler uses the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ClientSize%2A&gt;</ph> property of the form to make a <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> control named <ph id="ph3">`button1`</ph> fill the entire client area of the form.</source>
          <target state="translated">事件處理常式使用<ph id="ph1">&lt;xref:System.Windows.Forms.Form.ClientSize%2A&gt;</ph>進行表單屬性<ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph>控制項，名為<ph id="ph3">`button1`</ph>填滿整個用戶端區域的表單。</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.Close">
          <source>Closes the form.</source>
          <target state="translated">關閉表單。</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.Close">
          <source>When a form is closed, all resources created within the object are closed and the form is disposed.</source>
          <target state="translated">當關閉表單時，關閉物件內建立的所有資源，並處置表單。</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.Close">
          <source>You can prevent the closing of a form at run time by handling the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Closing&gt;</ph> event and setting the <ph id="ph2">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.ComponentModel.CancelEventArgs&gt;</ph> passed as a parameter to your event handler.</source>
          <target state="translated">您可以避免在執行階段在表單關閉處理<ph id="ph1">&lt;xref:System.Windows.Forms.Form.Closing&gt;</ph>事件及設定<ph id="ph2">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;</ph>屬性<ph id="ph3">&lt;xref:System.ComponentModel.CancelEventArgs&gt;</ph>做為參數傳遞給事件處理常式。</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.Close">
          <source>If the form you are closing is the startup form of your application, your application ends.</source>
          <target state="translated">如果您在關閉的表單是應用程式的啟動表單，您的應用程式就會結束。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.Close">
          <source>The two conditions when a form is not disposed on <ph id="ph1">`Close`</ph> is when (1) it is part of a multiple-document interface (MDI) application, and the form is not visible; and (2) you have displayed the form using <ph id="ph2">&lt;xref:System.Windows.Forms.Form.ShowDialog%2A&gt;</ph>.</source>
          <target state="translated">兩個條件時不會處置表單<ph id="ph1">`Close`</ph>時 （1） 它是多重文件介面 (MDI) 應用程式的一部分和表單不可見的; 且 （2） 您的顯示格式使用<ph id="ph2">&lt;xref:System.Windows.Forms.Form.ShowDialog%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.Close">
          <source>In these cases, you will need to call <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Dispose%2A&gt;</ph> manually to mark all of the form's controls for garbage collection.</source>
          <target state="translated">在這些情況下，您必須呼叫<ph id="ph1">&lt;xref:System.Windows.Forms.Form.Dispose%2A&gt;</ph>手動將標示所有表單的控制項進行記憶體回收。</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.Close">
          <source>When the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Close%2A&gt;</ph> method is called on a <ph id="ph2">&lt;xref:System.Windows.Forms.Form&gt;</ph> displayed as a modeless window, you cannot call the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Show%2A&gt;</ph> method to make the form visible, because the form's resources have already been released.</source>
          <target state="translated">當<ph id="ph1">&lt;xref:System.Windows.Forms.Form.Close%2A&gt;</ph>上呼叫方法<ph id="ph2">&lt;xref:System.Windows.Forms.Form&gt;</ph>顯示為強制回應視窗，您不能呼叫<ph id="ph3">&lt;xref:System.Windows.Forms.Control.Show%2A&gt;</ph>方法來顯示表單，因為已發行的形式的資源。</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.Close">
          <source>To hide a form and then make it visible, use the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Hide%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">若要隱藏的表單，然後讓可見的使用<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Hide%2A?displayProperty=nameWithType&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.Close">
          <source>Prior to the <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> 2.0, the <ph id="ph2">&lt;xref:System.Windows.Forms.Form.Closed?displayProperty=nameWithType&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Forms.Form.Closing?displayProperty=nameWithType&gt;</ph> events are not raised when the <ph id="ph4">&lt;xref:System.Windows.Forms.Application.Exit%2A?displayProperty=nameWithType&gt;</ph> method is called to exit your application.</source>
          <target state="translated">之前<ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>2.0，<ph id="ph2">&lt;xref:System.Windows.Forms.Form.Closed?displayProperty=nameWithType&gt;</ph>和<ph id="ph3">&lt;xref:System.Windows.Forms.Form.Closing?displayProperty=nameWithType&gt;</ph>事件也沒有引發的時機<ph id="ph4">&lt;xref:System.Windows.Forms.Application.Exit%2A?displayProperty=nameWithType&gt;</ph>呼叫方法來結束您的應用程式。</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.Close">
          <source>If you have validation code in either of these events that must be executed, you should call the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Close%2A?displayProperty=nameWithType&gt;</ph> method for each open form individually before calling the <ph id="ph2">&lt;xref:System.Windows.Forms.Application.Exit%2A&gt;</ph> method.</source>
          <target state="translated">如果您有驗證程式碼必須執行這些事件之一時，您應該呼叫<ph id="ph1">&lt;xref:System.Windows.Forms.Form.Close%2A?displayProperty=nameWithType&gt;</ph>方法的每個開啟的表單，然後再呼叫個別<ph id="ph2">&lt;xref:System.Windows.Forms.Application.Exit%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.Close">
          <source>The form was closed while a handle was being created.</source>
          <target state="translated">當控制代碼正在建立時，表單會關閉。</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.Close">
          <source>You cannot call this method from the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Form.Activated" /&gt;</ph> event when <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Form.WindowState" /&gt;</ph> is set to <ph id="ph3">&lt;see cref="F:System.Windows.Forms.FormWindowState.Maximized" /&gt;</ph>.</source>
          <target state="translated">當 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Form.Activated" /&gt;</ph> 設為 <ph id="ph2">&lt;see cref="P:System.Windows.Forms.Form.WindowState" /&gt;</ph> 時，您無法從 <ph id="ph3">&lt;see cref="F:System.Windows.Forms.FormWindowState.Maximized" /&gt;</ph> 事件呼叫這個方法。</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Form.Closed">
          <source>Occurs when the form is closed.</source>
          <target state="translated">發生於表單已關閉時。</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Closed">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Closed&gt;</ph> event is obsolete in the .NET Framework version 2.0; use the <ph id="ph2">&lt;xref:System.Windows.Forms.Form.FormClosed&gt;</ph> event instead.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.Closed&gt;</ph>事件是.NET Framework 2.0 版中的過時; 使用<ph id="ph2">&lt;xref:System.Windows.Forms.Form.FormClosed&gt;</ph>事件改為。</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Closed">
          <source>This event occurs after the form has been closed by the user or by the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Close%2A&gt;</ph> method of the form.</source>
          <target state="translated">由使用者或由關閉表單之後，就會發生此事件<ph id="ph1">&lt;xref:System.Windows.Forms.Form.Close%2A&gt;</ph>形式的方法。</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Closed">
          <source>To prevent a form from closing, handle the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Closing&gt;</ph> event and set the <ph id="ph2">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.ComponentModel.CancelEventArgs&gt;</ph> passed to your event handler to <ph id="ph4">`true`</ph>.</source>
          <target state="translated">若要避免關閉表單，處理<ph id="ph1">&lt;xref:System.Windows.Forms.Form.Closing&gt;</ph>事件以及組<ph id="ph2">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;</ph>屬性<ph id="ph3">&lt;xref:System.ComponentModel.CancelEventArgs&gt;</ph>傳遞至事件處理常式<ph id="ph4">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Closed">
          <source>You can use this event to perform tasks such as freeing resources used by the form and to save information entered in the form or to update its parent form.</source>
          <target state="translated">執行工作，例如釋放表單所使用的資源和儲存在表單中輸入資訊或更新它的父表單，您可以使用此事件。</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Closed">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Closed?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Form.Closing?displayProperty=nameWithType&gt;</ph> events are not raised when the <ph id="ph3">&lt;xref:System.Windows.Forms.Application.Exit%2A?displayProperty=nameWithType&gt;</ph> method is called to exit your application.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.Closed?displayProperty=nameWithType&gt;</ph>和<ph id="ph2">&lt;xref:System.Windows.Forms.Form.Closing?displayProperty=nameWithType&gt;</ph>事件也沒有引發的時機<ph id="ph3">&lt;xref:System.Windows.Forms.Application.Exit%2A?displayProperty=nameWithType&gt;</ph>呼叫方法來結束您的應用程式。</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Closed">
          <source>If you have validation code in either of these events that must be executed, you should call the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Close%2A?displayProperty=nameWithType&gt;</ph> method for each open form individually before calling the <ph id="ph2">&lt;xref:System.Windows.Forms.Application.Exit%2A&gt;</ph> method.</source>
          <target state="translated">如果您有驗證程式碼必須執行這些事件之一時，您應該呼叫<ph id="ph1">&lt;xref:System.Windows.Forms.Form.Close%2A?displayProperty=nameWithType&gt;</ph>方法的每個開啟的表單，然後再呼叫個別<ph id="ph2">&lt;xref:System.Windows.Forms.Application.Exit%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Closed">
          <source>If the form is an MDI parent form, the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Closing&gt;</ph> events of all MDI child forms are raised before the MDI parent form's <ph id="ph2">&lt;xref:System.Windows.Forms.Form.Closing&gt;</ph> event is raised.</source>
          <target state="translated">如果表單為 MDI 父表單<ph id="ph1">&lt;xref:System.Windows.Forms.Form.Closing&gt;</ph>MDI 父表單之前引發事件的所有 MDI 子表單<ph id="ph2">&lt;xref:System.Windows.Forms.Form.Closing&gt;</ph>就會引發事件。</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Closed">
          <source>In addition, the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Closed&gt;</ph> events of all MDI child forms are raised before the <ph id="ph2">&lt;xref:System.Windows.Forms.Form.Closed&gt;</ph> event of the MDI parent form is raised.</source>
          <target state="translated">此外，<ph id="ph1">&lt;xref:System.Windows.Forms.Form.Closed&gt;</ph>之前引發事件的所有 MDI 子表單<ph id="ph2">&lt;xref:System.Windows.Forms.Form.Closed&gt;</ph>就會引發 MDI 父表單的事件。</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Closed">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">如需處理事件的詳細資訊，請參閱<bpt id="p1">[</bpt>處理和引發事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Closed">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.SetDesktopLocation%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Form.Closed&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Form.Load&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Form.Activated&gt;</ph>, and <ph id="ph5">&lt;xref:System.Windows.Forms.Form.Activate%2A&gt;</ph> members.</source>
          <target state="translated">下列程式碼範例示範如何使用<ph id="ph1">&lt;xref:System.Windows.Forms.Form.SetDesktopLocation%2A&gt;</ph>， <ph id="ph2">&lt;xref:System.Windows.Forms.Form.Closed&gt;</ph>， <ph id="ph3">&lt;xref:System.Windows.Forms.Form.Load&gt;</ph>， <ph id="ph4">&lt;xref:System.Windows.Forms.Form.Activated&gt;</ph>，和<ph id="ph5">&lt;xref:System.Windows.Forms.Form.Activate%2A&gt;</ph>成員。</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Closed">
          <source>To run the example, paste the following code in a form called <ph id="ph1">`Form1`</ph> containing a <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> called <ph id="ph3">`Button1`</ph> and two <ph id="ph4">&lt;xref:System.Windows.Forms.Label&gt;</ph> controls called <ph id="ph5">`Label1`</ph> and <ph id="ph6">`Label2`</ph>.</source>
          <target state="translated">若要執行此範例，下列程式碼的呼叫格式貼<ph id="ph1">`Form1`</ph>包含<ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph>呼叫<ph id="ph3">`Button1`</ph>和兩個<ph id="ph4">&lt;xref:System.Windows.Forms.Label&gt;</ph>控制項稱為<ph id="ph5">`Label1`</ph>和<ph id="ph6">`Label2`</ph>。</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Form.Closing">
          <source>Occurs when the form is closing.</source>
          <target state="translated">發生於表單正在關閉時。</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Closing">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Closing&gt;</ph> event is obsolete in the .NET Framework version 2.0; use the <ph id="ph2">&lt;xref:System.Windows.Forms.Form.FormClosing&gt;</ph> event instead.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.Closing&gt;</ph>事件是.NET Framework 2.0 版中的過時; 使用<ph id="ph2">&lt;xref:System.Windows.Forms.Form.FormClosing&gt;</ph>事件改為。</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Closing">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Closing&gt;</ph> event occurs as the form is being closed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.Closing&gt;</ph>關閉表單，就會發生事件。</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Closing">
          <source>When a form is closed, all resources created within the object are released and the form is disposed.</source>
          <target state="translated">當關閉表單時，並釋出物件內建立的所有資源，並處置表單。</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Closing">
          <source>If you cancel this event, the form remains opened.</source>
          <target state="translated">如果您取消此事件，將表單保持開啟。</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Closing">
          <source>To cancel the closure of a form, set the <ph id="ph1">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.ComponentModel.CancelEventArgs&gt;</ph> passed to your event handler to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">若要取消之表單的關閉，請設定<ph id="ph1">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;</ph>屬性<ph id="ph2">&lt;xref:System.ComponentModel.CancelEventArgs&gt;</ph>傳遞至事件處理常式<ph id="ph3">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Closing">
          <source>When a form is displayed as a modal dialog box, clicking the <bpt id="p1">**</bpt>Close<ept id="p1">**</ept> button (the button with an X at the upper-right corner of the form) causes the form to be hidden and the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.DialogResult%2A&gt;</ph> property to be set to <ph id="ph2">`DialogResult.Cancel`</ph>.</source>
          <target state="translated">當表單顯示為強制回應對話方塊時，按一下<bpt id="p1">**</bpt>關閉<ept id="p1">**</ept>按鈕 （表單右上角的 X 按鈕） 將會隱藏表單和<ph id="ph1">&lt;xref:System.Windows.Forms.Form.DialogResult%2A&gt;</ph>屬性設定為<ph id="ph2">`DialogResult.Cancel`</ph>。</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Closing">
          <source>You can override the value assigned to the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.DialogResult%2A&gt;</ph> property when the user clicks the <bpt id="p1">**</bpt>Close<ept id="p1">**</ept> button by setting the <ph id="ph2">&lt;xref:System.Windows.Forms.Form.DialogResult%2A&gt;</ph> property in an event handler for the <ph id="ph3">&lt;xref:System.Windows.Forms.Form.Closing&gt;</ph> event of the form.</source>
          <target state="translated">您可以覆寫的值指派給<ph id="ph1">&lt;xref:System.Windows.Forms.Form.DialogResult%2A&gt;</ph>屬性，當使用者按一下<bpt id="p1">**</bpt>關閉<ept id="p1">**</ept>藉由設定按鈕<ph id="ph2">&lt;xref:System.Windows.Forms.Form.DialogResult%2A&gt;</ph>屬性中的事件處理常式<ph id="ph3">&lt;xref:System.Windows.Forms.Form.Closing&gt;</ph>表單的事件。</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Closing">
          <source>When the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Close%2A&gt;</ph> method is called on a <ph id="ph2">&lt;xref:System.Windows.Forms.Form&gt;</ph> displayed as a modeless window, you cannot call the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Show%2A&gt;</ph> method to make the form visible, because the form's resources have already been released.</source>
          <target state="translated">當<ph id="ph1">&lt;xref:System.Windows.Forms.Form.Close%2A&gt;</ph>上呼叫方法<ph id="ph2">&lt;xref:System.Windows.Forms.Form&gt;</ph>顯示為強制回應視窗，您不能呼叫<ph id="ph3">&lt;xref:System.Windows.Forms.Control.Show%2A&gt;</ph>方法來顯示表單，因為已發行的形式的資源。</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Closing">
          <source>To hide a form and then make it visible, use the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Hide%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">若要隱藏的表單，然後讓可見的使用<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Hide%2A?displayProperty=nameWithType&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Closing">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Closed?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Form.Closing?displayProperty=nameWithType&gt;</ph> events are not raised when the <ph id="ph3">&lt;xref:System.Windows.Forms.Application.Exit%2A?displayProperty=nameWithType&gt;</ph> method is called to exit your application.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.Closed?displayProperty=nameWithType&gt;</ph>和<ph id="ph2">&lt;xref:System.Windows.Forms.Form.Closing?displayProperty=nameWithType&gt;</ph>事件也沒有引發的時機<ph id="ph3">&lt;xref:System.Windows.Forms.Application.Exit%2A?displayProperty=nameWithType&gt;</ph>呼叫方法來結束您的應用程式。</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Closing">
          <source>If you have validation code in either of these events that must be executed, you should call the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Close%2A?displayProperty=nameWithType&gt;</ph> method for each open form individually before calling the <ph id="ph2">&lt;xref:System.Windows.Forms.Application.Exit%2A&gt;</ph> method.</source>
          <target state="translated">如果您有驗證程式碼必須執行這些事件之一時，您應該呼叫<ph id="ph1">&lt;xref:System.Windows.Forms.Form.Close%2A?displayProperty=nameWithType&gt;</ph>方法的每個開啟的表單，然後再呼叫個別<ph id="ph2">&lt;xref:System.Windows.Forms.Application.Exit%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Closing">
          <source>If the form is an MDI parent form, the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Closing&gt;</ph> events of all MDI child forms are raised before the MDI parent form's <ph id="ph2">&lt;xref:System.Windows.Forms.Form.Closing&gt;</ph> event is raised.</source>
          <target state="translated">如果表單為 MDI 父表單<ph id="ph1">&lt;xref:System.Windows.Forms.Form.Closing&gt;</ph>MDI 父表單之前引發事件的所有 MDI 子表單<ph id="ph2">&lt;xref:System.Windows.Forms.Form.Closing&gt;</ph>就會引發事件。</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Closing">
          <source>In addition, the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Closed&gt;</ph> events of all MDI child forms are raised before the <ph id="ph2">&lt;xref:System.Windows.Forms.Form.Closed&gt;</ph> event of the MDI parent form is raised.</source>
          <target state="translated">此外，<ph id="ph1">&lt;xref:System.Windows.Forms.Form.Closed&gt;</ph>之前引發事件的所有 MDI 子表單<ph id="ph2">&lt;xref:System.Windows.Forms.Form.Closed&gt;</ph>就會引發 MDI 父表單的事件。</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Closing">
          <source>Canceling the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Closing&gt;</ph> event of an MDI child form does not prevent the <ph id="ph2">&lt;xref:System.Windows.Forms.Form.Closing&gt;</ph> event of the MDI parent form from being raised.</source>
          <target state="translated">取消<ph id="ph1">&lt;xref:System.Windows.Forms.Form.Closing&gt;</ph>的 MDI 子表單的事件不會防止<ph id="ph2">&lt;xref:System.Windows.Forms.Form.Closing&gt;</ph>引發 MDI 父表單的事件。</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Closing">
          <source>However, canceling the event will set to <ph id="ph1">`true`</ph> the <ph id="ph2">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.ComponentModel.CancelEventArgs&gt;</ph> that is passed as a parameter to the parent form.</source>
          <target state="translated">不過，取消事件將會設定為<ph id="ph1">`true`</ph><ph id="ph2">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;</ph>屬性<ph id="ph3">&lt;xref:System.ComponentModel.CancelEventArgs&gt;</ph>做為參數傳遞給父表單。</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Closing">
          <source>To force all MDI parent and child forms to close, set the <ph id="ph1">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;</ph> property to <ph id="ph2">`false`</ph> in the MDI parent form.</source>
          <target state="translated">若要強制所有 MDI 父和子表單關閉時，將<ph id="ph1">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;</ph>屬性<ph id="ph2">`false`</ph>在 MDI 父表單。</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Closing">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">如需處理事件的詳細資訊，請參閱<bpt id="p1">[</bpt>處理和引發事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Closing">
          <source>The following code example uses <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Closing&gt;</ph> to test if the text in a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> has changed.</source>
          <target state="translated">下列程式碼範例使用<ph id="ph1">&lt;xref:System.Windows.Forms.Form.Closing&gt;</ph>測試中的文字<ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>已變更。</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Closing">
          <source>If it has, the user is asked whether to save the changes to a file.</source>
          <target state="translated">如果有，會要求使用者是否要將變更儲存至檔案。</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.ControlBox">
          <source>Gets or sets a value indicating whether a control box is displayed in the caption bar of the form.</source>
          <target state="translated">取得或設定值，指出控制項方塊是否顯示在表單的標題列中。</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ControlBox">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the form displays a control box in the upper-right corner of the form; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> 如果表單的表單，右上角顯示控制項方塊否則， <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ControlBox">
          <source>The default is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">預設值為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ControlBox">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ControlBox%2A&gt;</ph> property is set to <ph id="ph2">`true`</ph>, the control box is displayed in the upper-right corner of the caption bar.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Windows.Forms.Form.ControlBox%2A&gt;</ph>屬性設定為<ph id="ph2">`true`</ph>，控制項方塊是否顯示在標題列右上角。</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ControlBox">
          <source>The control box can include minimize, maximize, and help buttons in addition to a close button.</source>
          <target state="translated">控制項方塊可以包含最小化、 最大化，以及協助按鈕除了 「 關閉 」 按鈕。</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ControlBox">
          <source>For the <ph id="ph1">`ControlBox`</ph> property to have any effect, you must also set the form's <ph id="ph2">&lt;xref:System.Windows.Forms.Form.FormBorderStyle%2A&gt;</ph> property to <ph id="ph3">&lt;xref:System.Windows.Forms.FormBorderStyle.FixedSingle?displayProperty=nameWithType&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.FormBorderStyle.Sizable?displayProperty=nameWithType&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.FormBorderStyle.Fixed3D?displayProperty=nameWithType&gt;</ph>, or <ph id="ph6">&lt;xref:System.Windows.Forms.FormBorderStyle.FixedDialog?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">如<ph id="ph1">`ControlBox`</ph>屬性才能發生效用，您也必須設定表單的<ph id="ph2">&lt;xref:System.Windows.Forms.Form.FormBorderStyle%2A&gt;</ph>屬性<ph id="ph3">&lt;xref:System.Windows.Forms.FormBorderStyle.FixedSingle?displayProperty=nameWithType&gt;</ph>， <ph id="ph4">&lt;xref:System.Windows.Forms.FormBorderStyle.Sizable?displayProperty=nameWithType&gt;</ph>， <ph id="ph5">&lt;xref:System.Windows.Forms.FormBorderStyle.Fixed3D?displayProperty=nameWithType&gt;</ph>，或<ph id="ph6">&lt;xref:System.Windows.Forms.FormBorderStyle.FixedDialog?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ControlBox">
          <source>If you set <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ControlBox%2A&gt;</ph> to <ph id="ph2">`false`</ph> and also set the <ph id="ph3">&lt;xref:System.Windows.Forms.Form.Location%2A&gt;</ph> property, the <ph id="ph4">&lt;xref:System.Windows.Forms.Form.Size%2A&gt;</ph> property of the form is not updated to reflect that the non-client area of the form has been hidden.</source>
          <target state="translated">如果您設定<ph id="ph1">&lt;xref:System.Windows.Forms.Form.ControlBox%2A&gt;</ph>至<ph id="ph2">`false`</ph>也設定及<ph id="ph3">&lt;xref:System.Windows.Forms.Form.Location%2A&gt;</ph>屬性，<ph id="ph4">&lt;xref:System.Windows.Forms.Form.Size%2A&gt;</ph>表單的屬性不會更新以反映已隱藏表單的非工作區。</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ControlBox">
          <source>To fix this problem, put the code that alters the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Location%2A&gt;</ph> property in the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.HandleCreated&gt;</ph> event handler.</source>
          <target state="translated">若要修正這個問題，請將程式碼放會改變<ph id="ph1">&lt;xref:System.Windows.Forms.Form.Location%2A&gt;</ph>屬性<ph id="ph2">&lt;xref:System.Windows.Forms.Control.HandleCreated&gt;</ph>事件處理常式。</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ControlBox">
          <source>When set to <ph id="ph1">`false`</ph>, the <ph id="ph2">&lt;xref:System.Windows.Forms.Form.ControlBox%2A&gt;</ph> property has no effect on a Multiple-document interface (MDI) child form that is displayed maximized at time of creation.</source>
          <target state="translated">當設定為<ph id="ph1">`false`</ph>、<ph id="ph2">&lt;xref:System.Windows.Forms.Form.ControlBox%2A&gt;</ph>屬性就會顯示最大化的建立時間為多重文件介面 (MDI) 子表單上沒有作用。</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ControlBox">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ControlBox%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Form.FormBorderStyle%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Form.MaximizeBox%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Form.MinimizeBox%2A&gt;</ph>, and <ph id="ph5">&lt;xref:System.Windows.Forms.Form.StartPosition%2A&gt;</ph> properties to create a form that does not have any border or caption box.</source>
          <target state="translated">下列程式碼範例使用<ph id="ph1">&lt;xref:System.Windows.Forms.Form.ControlBox%2A&gt;</ph>， <ph id="ph2">&lt;xref:System.Windows.Forms.Form.FormBorderStyle%2A&gt;</ph>， <ph id="ph3">&lt;xref:System.Windows.Forms.Form.MaximizeBox%2A&gt;</ph>， <ph id="ph4">&lt;xref:System.Windows.Forms.Form.MinimizeBox%2A&gt;</ph>，和<ph id="ph5">&lt;xref:System.Windows.Forms.Form.StartPosition%2A&gt;</ph>屬性來建立一個表單，並沒有任何框線或標題 方塊。</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ControlBox">
          <source>The form created in this example could be used to create a splash screen for an application.</source>
          <target state="translated">在此範例中建立的表單無法用來建立應用程式的啟動顯示畫面。</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ControlBox">
          <source>The example requires that the example's method is defined in a form class and called when the form is being initialized.</source>
          <target state="translated">這個範例需要範例的方法是定義在表單類別，而且當表單在初始化時呼叫。</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.CreateControlsInstance">
          <source>Creates a new instance of the control collection for the control.</source>
          <target state="translated">建立控制項的控制項集合的新執行個體。</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.CreateControlsInstance">
          <source>A new instance of <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control.ControlCollection" /&gt;</ph> assigned to the control.</source>
          <target state="translated">指定至控制項的 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control.ControlCollection" /&gt;</ph> 的新執行個體。</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.CreateHandle">
          <source>Creates the handle for the form.</source>
          <target state="translated">建立表單的控制代碼。</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.CreateHandle">
          <source>If a derived class overrides this function, it must call the base implementation.</source>
          <target state="translated">如果衍生類別覆寫這個函式，它必須呼叫基底實作。</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.CreateHandle">
          <source>A handle for this <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph> has already been created.</source>
          <target state="translated">已經建立這個 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph> 的控制代碼。</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.CreateParams">
          <source>Gets the required creation parameters when the control handle is created.</source>
          <target state="translated">建立控制代碼時，取得必要的建立參數。</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.CreateParams">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.CreateParams" /&gt;</ph> that contains the required creation parameters when the handle to the control is created.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.CreateParams" /&gt;</ph>，包含建立控制項之控制代碼時所需的建立參數。</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Form.Deactivate">
          <source>Occurs when the form loses focus and is no longer the active form.</source>
          <target state="translated">發生於表單失去焦點且不再是使用中的表單時。</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Deactivate">
          <source>You can use this event to perform tasks such as updating another window in your application with data from the deactivated form.</source>
          <target state="translated">若要執行工作，例如從停用表單的資料來更新應用程式中的另一個視窗，您可以使用此事件。</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Deactivate">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">如需處理事件的詳細資訊，請參閱<bpt id="p1">[</bpt>處理和引發事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Deactivate">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">下列程式碼範例示範如何使用這個成員。</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Deactivate">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Deactivate&gt;</ph> event.</source>
          <target state="translated">在範例中，事件處理常式會報告一次<ph id="ph1">&lt;xref:System.Windows.Forms.Form.Deactivate&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Deactivate">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">此報表可協助您了解事件發生的時機，並可協助您偵錯。</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Deactivate">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">若要報告多個事件或事件經常發生，請考慮更換<ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph>與<ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph>或將訊息附加到多行<ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Deactivate">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> named <ph id="ph2">`Form1`</ph>.</source>
          <target state="translated">若要執行範例程式碼，將它貼到包含類型的執行個體的專案<ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>名為<ph id="ph2">`Form1`</ph>。</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Deactivate">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Deactivate&gt;</ph> event.</source>
          <target state="translated">請確定事件處理常式關聯<ph id="ph1">&lt;xref:System.Windows.Forms.Form.Deactivate&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.DefaultImeMode">
          <source>Gets the default Input Method Editor (IME) mode supported by the control.</source>
          <target state="translated">取得控制項支援的預設輸入法 (IME) 模式。</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.DefaultImeMode">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ImeMode" /&gt;</ph> values.</source>
          <target state="translated">其中一個 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ImeMode" /&gt;</ph> 值。</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.DefaultImeMode">
          <source>An input method editor (IME) is a program that allows users to enter complex characters and symbols, such as Japanese Kanji characters, by using a standard keyboard.</source>
          <target state="translated">輸入的法 (ime) 是可讓使用者使用標準鍵盤輸入複雜字元和符號，例如日文漢字字元的程式。</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.DefaultImeMode">
          <source>As implemented in the <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> class, this property always returns the <ph id="ph2">&lt;xref:System.Windows.Forms.ImeMode.NoControl?displayProperty=nameWithType&gt;</ph> value.</source>
          <target state="translated">在中實作<ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>類別，這個屬性永遠傳回<ph id="ph2">&lt;xref:System.Windows.Forms.ImeMode.NoControl?displayProperty=nameWithType&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.DefaultImeMode">
          <source>The value of this property is assigned to the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ImeMode%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">這個屬性的值指派給<ph id="ph1">&lt;xref:System.Windows.Forms.Control.ImeMode%2A?displayProperty=nameWithType&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.DefaultSize">
          <source>Gets the default size of the control.</source>
          <target state="translated">取得控制項的預設大小。</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.DefaultSize">
          <source>The default <ph id="ph1">&lt;see cref="T:System.Drawing.Size" /&gt;</ph> of the control.</source>
          <target state="translated">控制項的預設 <ph id="ph1">&lt;see cref="T:System.Drawing.Size" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.DefWndProc(System.Windows.Forms.Message@)">
          <source>The Windows <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Message" /&gt;</ph> to process.</source>
          <target state="translated">要處理的 Windows <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Message" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.DefWndProc(System.Windows.Forms.Message@)">
          <source>Sends the specified message to the default window procedure.</source>
          <target state="translated">傳送指定的訊息至預設的視窗程序。</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.DesktopBounds">
          <source>Gets or sets the size and location of the form on the Windows desktop.</source>
          <target state="translated">取得或設定 Windows 桌面上表單的大小和位置。</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.DesktopBounds">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> that represents the bounds of the form on the Windows desktop using desktop coordinates.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph>，代表按照桌面座標，表單在 Windows 桌面上的界限。</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.DesktopBounds">
          <source>Desktop coordinates are based on the working area of the screen, which excludes the taskbar.</source>
          <target state="translated">桌面座標為基礎的畫面中，排除工作列工作區域。</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.DesktopBounds">
          <source>The coordinate system of the desktop is pixel-based.</source>
          <target state="translated">在桌面座標系統是以像素為基礎。</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.DesktopBounds">
          <source>If your application is running on a multiple monitor system, the coordinates of the form are the coordinates for the combined desktop.</source>
          <target state="translated">如果您的應用程式在多個監視器系統上執行，表單的合併桌面座標。</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.DesktopBounds">
          <source>You can use this property to size and position a form relative to other forms or applications on the Windows desktop.</source>
          <target state="translated">您可以使用這個屬性的大小和位置，相對於其他表單或應用程式表單在 Windows 桌面上。</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.DesktopBounds">
          <source>The following code example sets the size and position of a form so that the form is positioned 50 pixels from the left border of the desktop and 50 pixels from the top of the desktop.</source>
          <target state="translated">下列程式碼範例會設定的大小和表單的位置，使表單從桌面到 50 像素的桌面左框線定位 50 像素。</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.DesktopBounds">
          <source>This example requires that the method is defined within a form class.</source>
          <target state="translated">這個範例需要在表單的類別內所定義之方法。</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.DesktopLocation">
          <source>Gets or sets the location of the form on the Windows desktop.</source>
          <target state="translated">取得或設定 Windows 桌面上表單的位置。</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.DesktopLocation">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> that represents the location of the form on the desktop.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph>，代表桌面上表單的位置。</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.DesktopLocation">
          <source>Desktop coordinates are based on the working area of the screen, which excludes the taskbar.</source>
          <target state="translated">桌面座標為基礎的畫面中，排除工作列工作區域。</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.DesktopLocation">
          <source>The coordinate system of the desktop is pixel based.</source>
          <target state="translated">在桌面座標系統為基礎的像素。</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.DesktopLocation">
          <source>If your application is running on a multimonitor system, the coordinates of the form are the coordinates for the combined desktop.</source>
          <target state="translated">如果您的應用程式正在執行多重監視器系統上，在表單的合併桌面座標。</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.DesktopLocation">
          <source>You can use this property to position your form relative to other forms and applications on the Windows desktop.</source>
          <target state="translated">您可以使用這個屬性，在 Windows 桌面上定位相對於其他表單和應用程式。</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.DesktopLocation">
          <source>If you call the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.SetDesktopLocation%2A&gt;</ph> method before calling the <ph id="ph2">&lt;xref:System.Windows.Forms.Form.Show%2A&gt;</ph> method, your form will be positioned at its default location, which is determined by the operating system.</source>
          <target state="translated">如果您呼叫<ph id="ph1">&lt;xref:System.Windows.Forms.Form.SetDesktopLocation%2A&gt;</ph>方法之前先呼叫<ph id="ph2">&lt;xref:System.Windows.Forms.Form.Show%2A&gt;</ph>方法中，表單就會放置在其預設位置，是由作業系統決定。</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.DesktopLocation">
          <source>For more information about window positioning, see the "Window Size and Position" section of the "Window Features" document in the MSDN library at <ph id="ph1">http://msdn.microsoft.com/library</ph>.</source>
          <target state="translated">如需視窗定位的詳細資訊，請參閱 &lt; 視窗功能 &gt; 文件位於 MSDN library 中的 「 視窗大小和位置 」 一節<ph id="ph1">http://msdn.microsoft.com/library</ph>。</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.DesktopLocation">
          <source>If you call <ph id="ph1">&lt;xref:System.Windows.Forms.Form.SetDesktopLocation%2A&gt;</ph> after calling <ph id="ph2">&lt;xref:System.Windows.Forms.Form.Show%2A&gt;</ph>, your form will be positioned at the location you specified.</source>
          <target state="translated">如果您呼叫<ph id="ph1">&lt;xref:System.Windows.Forms.Form.SetDesktopLocation%2A&gt;</ph>之後呼叫<ph id="ph2">&lt;xref:System.Windows.Forms.Form.Show%2A&gt;</ph>，表單就會放置在您指定的位置。</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.DesktopLocation">
          <source>The following code example sets the position of a form so that the form is positioned 100 pixels from the left border of the desktop and 100 pixels from the top of the desktop.</source>
          <target state="translated">下列程式碼範例會設定表單的位置，讓表單定位 100 像素的從左框線的桌面和 100 像素的桌面。</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.DesktopLocation">
          <source>This example requires that method has been defined within a form class.</source>
          <target state="translated">這個範例需要在表單的類別內已定義方法。</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.DialogResult">
          <source>Gets or sets the dialog result for the form.</source>
          <target state="translated">取得或設定表單的對話方塊結果。</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.DialogResult">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DialogResult" /&gt;</ph> that represents the result of the form when used as a dialog box.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.DialogResult" /&gt;</ph>，代表表單在當做對話方塊使用時的結果。</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.DialogResult">
          <source>The dialog result of a form is the value that is returned from the form when it is displayed as a modal dialog box.</source>
          <target state="translated">就會顯示為強制回應對話方塊時，會將表單中傳回的值為表單的對話方塊結果。</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.DialogResult">
          <source>If the form is displayed as a dialog box, setting this property with a value from the <ph id="ph1">&lt;xref:System.Windows.Forms.DialogResult&gt;</ph> enumeration sets the value of the dialog box result for the form, hides the modal dialog box, and returns control to the calling form.</source>
          <target state="translated">如果表單顯示為對話方塊中，設定此屬性的值與<ph id="ph1">&lt;xref:System.Windows.Forms.DialogResult&gt;</ph>列舉設定表單的對話方塊結果的值，會隱藏強制回應對話方塊，將控制權傳回給呼叫的表單。</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.DialogResult">
          <source>This property is typically set by the <ph id="ph1">&lt;xref:System.Windows.Forms.Button.DialogResult%2A&gt;</ph> property of a <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> control on the form.</source>
          <target state="translated">這個屬性通常由設定<ph id="ph1">&lt;xref:System.Windows.Forms.Button.DialogResult%2A&gt;</ph>屬性<ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph>表單上的控制項。</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.DialogResult">
          <source>When the user clicks the <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> control, the value assigned to the <ph id="ph2">&lt;xref:System.Windows.Forms.Button.DialogResult%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Windows.Forms.Button&gt;</ph> is assigned to the <ph id="ph4">&lt;xref:System.Windows.Forms.Form.DialogResult%2A&gt;</ph> property of the form.</source>
          <target state="translated">當使用者按一下<ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph>控制項，指派給的值<ph id="ph2">&lt;xref:System.Windows.Forms.Button.DialogResult%2A&gt;</ph>屬性<ph id="ph3">&lt;xref:System.Windows.Forms.Button&gt;</ph>指派給<ph id="ph4">&lt;xref:System.Windows.Forms.Form.DialogResult%2A&gt;</ph>表單的屬性。</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.DialogResult">
          <source>When a form is displayed as a modal dialog box, clicking the <bpt id="p1">**</bpt>Close<ept id="p1">**</ept> button (the button with an X in the top-right corner of the form) causes the form to be hidden and the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.DialogResult%2A&gt;</ph> property to be set to <ph id="ph2">`DialogResult.Cancel`</ph>.</source>
          <target state="translated">當表單顯示為強制回應對話方塊時，按一下<bpt id="p1">**</bpt>關閉<ept id="p1">**</ept>按鈕 （表單右上角的 X 按鈕） 將會隱藏表單和<ph id="ph1">&lt;xref:System.Windows.Forms.Form.DialogResult%2A&gt;</ph>屬性設定為<ph id="ph2">`DialogResult.Cancel`</ph>。</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.DialogResult">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Close%2A&gt;</ph> method is not automatically called when the user clicks the <bpt id="p1">**</bpt>Close<ept id="p1">**</ept> button of a dialog box or sets the value of the <ph id="ph2">&lt;xref:System.Windows.Forms.Form.DialogResult%2A&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.Close%2A&gt;</ph>不會自動呼叫方法時使用者按下<bpt id="p1">**</bpt>關閉<ept id="p1">**</ept>按鈕的對話方塊中設定的值或<ph id="ph2">&lt;xref:System.Windows.Forms.Form.DialogResult%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.DialogResult">
          <source>Instead, the form is hidden and can be shown again without creating a new instance of the dialog box.</source>
          <target state="translated">相反地，此表單隱藏的並可再次顯示，而不需要建立對話方塊中的新執行個體。</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.DialogResult">
          <source>Because of this behavior, you must call the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Dispose%2A&gt;</ph> method of the form when the form is no longer needed by your application.</source>
          <target state="translated">基於此行為，您必須呼叫<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Dispose%2A&gt;</ph>時您的應用程式不再需要表單形式的方法。</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.DialogResult">
          <source>You can use this property to determine how a dialog box is closed in order to properly process the actions performed in the dialog box.</source>
          <target state="translated">您可以使用這個屬性來決定對話方塊關閉才能正確地處理在對話方塊中所執行之動作的方式。</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.DialogResult">
          <source>You can override the value assigned to the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.DialogResult%2A&gt;</ph> property when the user clicks the <bpt id="p1">**</bpt>Close<ept id="p1">**</ept> button by setting the <ph id="ph2">&lt;xref:System.Windows.Forms.Form.DialogResult%2A&gt;</ph> property in an event handler for the <ph id="ph3">&lt;xref:System.Windows.Forms.Form.Closing&gt;</ph> event of the form.</source>
          <target state="translated">您可以覆寫的值指派給<ph id="ph1">&lt;xref:System.Windows.Forms.Form.DialogResult%2A&gt;</ph>屬性，當使用者按一下<bpt id="p1">**</bpt>關閉<ept id="p1">**</ept>藉由設定按鈕<ph id="ph2">&lt;xref:System.Windows.Forms.Form.DialogResult%2A&gt;</ph>屬性中的事件處理常式<ph id="ph3">&lt;xref:System.Windows.Forms.Form.Closing&gt;</ph>表單的事件。</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.DialogResult">
          <source>If a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> is displayed as a modeless window, the value returned by the <ph id="ph2">&lt;xref:System.Windows.Forms.Form.DialogResult%2A&gt;</ph> property might not return a value assigned to the form because the form's resources are automatically released when the form is closed.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>顯示為強制回應視窗，所傳回的值<ph id="ph2">&lt;xref:System.Windows.Forms.Form.DialogResult%2A&gt;</ph>屬性可能不會傳回值，因為當表單關閉時就會自動釋放表單的資源指派給表單。</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.DialogResult">
          <source>The following code example displays a form as a dialog box and displays a message box indicating whether the OK or Cancel button of the form was clicked by referencing the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.DialogResult%2A&gt;</ph> property of the form.</source>
          <target state="translated">下列程式碼範例顯示為對話方塊的表單，並顯示訊息方塊，指出表單的 [確定] 或 [取消] 按鈕已按下藉由參考<ph id="ph1">&lt;xref:System.Windows.Forms.Form.DialogResult%2A&gt;</ph>表單的屬性。</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.DialogResult">
          <source>The value specified is outside the range of valid values.</source>
          <target state="translated">指定的值超過有效值的範圍。</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> 表示釋放 Managed 和 Unmanaged 資源，<ph id="ph2">&lt;see langword="false" /&gt;</ph> 則表示只釋放 Unmanaged 資源。</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.Dispose(System.Boolean)">
          <source>Disposes of the resources (other than memory) used by the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph>.</source>
          <target state="translated">處置 (Dispose) <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph> 所使用的資源 (除了記憶體之外)。</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.Dispose(System.Boolean)">
          <source>This method is called by the public <ph id="ph1">`Dispose`</ph> method and the <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> method.</source>
          <target state="translated">這個方法會呼叫公用<ph id="ph1">`Dispose`</ph>方法和<ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.Dispose(System.Boolean)">
          <source><ph id="ph1">`Dispose`</ph> invokes the protected <ph id="ph2">`Dispose(Boolean)`</ph> method with the <ph id="ph3">`disposing`</ph> parameter set to <ph id="ph4">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">`Dispose`</ph> 叫用受保護<ph id="ph2">`Dispose(Boolean)`</ph>方法<ph id="ph3">`disposing`</ph>參數設定為<ph id="ph4">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> invokes <ph id="ph2">`Dispose`</ph> with <ph id="ph3">`disposing`</ph> set to <ph id="ph4">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> 叫用<ph id="ph2">`Dispose`</ph>與<ph id="ph3">`disposing`</ph>設<ph id="ph4">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.Dispose(System.Boolean)">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is <ph id="ph2">`true`</ph>, this method releases all resources held by any managed objects that this <ph id="ph3">&lt;xref:System.Windows.Forms.Form&gt;</ph> references.</source>
          <target state="translated"><ph id="ph1">`disposing`</ph> 參數為 <ph id="ph2">`true`</ph> 時，這個方法會釋放 <ph id="ph3">&lt;xref:System.Windows.Forms.Form&gt;</ph> 參考的任何 Managed 物件所掌握的資源。</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.Dispose(System.Boolean)">
          <source>This method invokes the <ph id="ph1">`Dispose`</ph> method of each referenced object.</source>
          <target state="translated">這個方法會叫用每個參考物件的 <ph id="ph1">`Dispose`</ph> 方法。</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.Form.Dispose%2A&gt;</ph> will be called automatically if the form is shown using the <ph id="ph2">&lt;xref:System.Windows.Forms.Form.Show%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.Dispose%2A&gt;</ph> 如果用來顯示表單會自動呼叫<ph id="ph2">&lt;xref:System.Windows.Forms.Form.Show%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.Dispose(System.Boolean)">
          <source>If another method such as <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ShowDialog%2A&gt;</ph> is used, or the form is never shown at all, you must call <ph id="ph2">&lt;xref:System.Windows.Forms.Form.Dispose%2A&gt;</ph> yourself within your application.</source>
          <target state="translated">如果另一個方法，例如<ph id="ph1">&lt;xref:System.Windows.Forms.Form.ShowDialog%2A&gt;</ph>使用時，或表單會永遠不會顯示，您必須呼叫<ph id="ph2">&lt;xref:System.Windows.Forms.Form.Dispose%2A&gt;</ph>自己應用程式中。</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> can be called multiple times by other objects.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> 可以被其他物件呼叫多次。</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.Dispose(System.Boolean)">
          <source>When overriding <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, be careful not to reference objects that have been previously disposed of in an earlier call to <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>.</source>
          <target state="translated">覆寫 <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph> 時，請小心不要參考到先前已在對 <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph> 的早期呼叫中被處置 (Dispose) 的物件。</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.Dispose(System.Boolean)">
          <source>For more information about how to implement <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, see <bpt id="p1">[</bpt>Implementing a Dispose Method<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">如需有關如何實作<ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>，請參閱<bpt id="p1">[</bpt>實作 Dispose 方法<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>。</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.Dispose(System.Boolean)">
          <source>For more information about <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Object.Finalize" /&gt;</ph>, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Overriding the Finalize Method<ept id="p2">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>.</source>
          <target state="translated">如需有關<ph id="ph1">&lt;see langword="Dispose" /&gt;</ph>和<ph id="ph2">&lt;see cref="M:System.Object.Finalize" /&gt;</ph>，請參閱<bpt id="p1">[</bpt>清除 Unmanaged 資源上<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>和<bpt id="p2">[</bpt>覆寫 Finalize 方法<ept id="p2">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>。</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Form.DpiChanged">
          <source>Occurs when the DPI setting changes on the display device where the form is currently displayed.</source>
          <target state="translated">發生於當表單顯示於顯示裝置上，而該裝置上的 DPI 設定變更時。</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.FormBorderStyle">
          <source>Gets or sets the border style of the form.</source>
          <target state="translated">取得或設定表單的框線樣式。</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.FormBorderStyle">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.FormBorderStyle" /&gt;</ph> that represents the style of border to display for the form.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.FormBorderStyle" /&gt;</ph>，代表顯示於表單的框線樣式。</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.FormBorderStyle">
          <source>The default is <ph id="ph1">&lt;see langword="FormBorderStyle.Sizable" /&gt;</ph>.</source>
          <target state="translated">預設值為 <ph id="ph1">&lt;see langword="FormBorderStyle.Sizable" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.FormBorderStyle">
          <source>The border style of the form determines how the outer edge of the form appears.</source>
          <target state="translated">表單的框線樣式會決定表單的外部端的顯示方式。</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.FormBorderStyle">
          <source>In addition to changing the border display for a form, certain border styles prevent the form from being sized.</source>
          <target state="translated">除了變更表單的框線顯示特定框線的樣式會防止表單會調整大小。</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.FormBorderStyle">
          <source>For example, the <ph id="ph1">`FormBorderStyle.FixedDialog`</ph> border style changes the border of the form to that of a dialog box and prevents the form from being resized.</source>
          <target state="translated">例如，<ph id="ph1">`FormBorderStyle.FixedDialog`</ph>框線樣式，對話方塊中變更表單的框線，並防止表單正在調整大小。</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.FormBorderStyle">
          <source>The border style can also affect the size or availability of the caption bar section of a form.</source>
          <target state="translated">大小或表單的標題列區段的可用性，也會影響的框線樣式。</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.FormBorderStyle">
          <source>With the <ph id="ph1">&lt;xref:System.Windows.Forms.FormBorderStyle.Sizable&gt;</ph> style, it is impossible to resize the window below a certain minimum value, even if you have set <ph id="ph2">&lt;xref:System.Windows.Forms.Form.ControlBox%2A&gt;</ph> to <ph id="ph3">`false`</ph> and assigned a zero-length string to <ph id="ph4">&lt;xref:System.Windows.Forms.Form.Text%2A&gt;</ph>.</source>
          <target state="translated">與<ph id="ph1">&lt;xref:System.Windows.Forms.FormBorderStyle.Sizable&gt;</ph>樣式，就無法調整大小視窗低於某些最小值，即使您已設定<ph id="ph2">&lt;xref:System.Windows.Forms.Form.ControlBox%2A&gt;</ph>至<ph id="ph3">`false`</ph>和指派的零長度字串<ph id="ph4">&lt;xref:System.Windows.Forms.Form.Text%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.FormBorderStyle">
          <source>Consider working around this by using the <ph id="ph1">&lt;xref:System.Windows.Forms.FormBorderStyle.SizableToolWindow&gt;</ph> style instead.</source>
          <target state="translated">解決這個問題的工作，請考慮使用<ph id="ph1">&lt;xref:System.Windows.Forms.FormBorderStyle.SizableToolWindow&gt;</ph>改用樣式。</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.FormBorderStyle">
          <source>The following code example creates a new instance of a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> and calls the <ph id="ph2">&lt;xref:System.Windows.Forms.Form.ShowDialog%2A&gt;</ph> method to display the form as a dialog box.</source>
          <target state="translated">下列程式碼範例會建立的新執行個體<ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>呼叫<ph id="ph2">&lt;xref:System.Windows.Forms.Form.ShowDialog%2A&gt;</ph>要將表單顯示為對話方塊的方法。</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.FormBorderStyle">
          <source>The example sets the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormBorderStyle%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Form.AcceptButton%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Form.CancelButton%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Form.MinimizeBox%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.Form.MaximizeBox%2A&gt;</ph>, and <ph id="ph6">&lt;xref:System.Windows.Forms.Form.StartPosition%2A&gt;</ph> properties to change the appearance and functionality of the form to a dialog box.</source>
          <target state="translated">範例會設定<ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormBorderStyle%2A&gt;</ph>， <ph id="ph2">&lt;xref:System.Windows.Forms.Form.AcceptButton%2A&gt;</ph>， <ph id="ph3">&lt;xref:System.Windows.Forms.Form.CancelButton%2A&gt;</ph>， <ph id="ph4">&lt;xref:System.Windows.Forms.Form.MinimizeBox%2A&gt;</ph>， <ph id="ph5">&lt;xref:System.Windows.Forms.Form.MaximizeBox%2A&gt;</ph>，和<ph id="ph6">&lt;xref:System.Windows.Forms.Form.StartPosition%2A&gt;</ph>內容 對話方塊中變更的外觀和表單的功能。</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.FormBorderStyle">
          <source>The example also uses the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ControlCollection.Add%2A&gt;</ph> method of the form's <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Controls%2A&gt;</ph> collection to add two <ph id="ph3">&lt;xref:System.Windows.Forms.Button&gt;</ph> controls.</source>
          <target state="translated">此範例也會使用<ph id="ph1">&lt;xref:System.Windows.Forms.Form.ControlCollection.Add%2A&gt;</ph>形式的方法<ph id="ph2">&lt;xref:System.Windows.Forms.Control.Controls%2A&gt;</ph>要加入兩個集合<ph id="ph3">&lt;xref:System.Windows.Forms.Button&gt;</ph>控制項。</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.FormBorderStyle">
          <source>The example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.HelpButton%2A&gt;</ph> property to display a help button in the caption bar of the dialog box.</source>
          <target state="translated">此範例會使用<ph id="ph1">&lt;xref:System.Windows.Forms.Form.HelpButton%2A&gt;</ph>屬性 對話方塊的標題列中顯示 說明 按鈕。</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.FormBorderStyle">
          <source>The value specified is outside the range of valid values.</source>
          <target state="translated">指定的值超過有效值的範圍。</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Form.FormClosed">
          <source>Occurs after the form is closed.</source>
          <target state="translated">發生於表單關閉之後。</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.FormClosed">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormClosed&gt;</ph> event occurs after the form has been closed by the user or by the <ph id="ph2">&lt;xref:System.Windows.Forms.Form.Close%2A&gt;</ph> method or the <ph id="ph3">&lt;xref:System.Windows.Forms.Application.Exit%2A&gt;</ph> method of the <ph id="ph4">&lt;xref:System.Windows.Forms.Application&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormClosed&gt;</ph>由使用者或由關閉表單之後，就會發生事件<ph id="ph2">&lt;xref:System.Windows.Forms.Form.Close%2A&gt;</ph>方法或<ph id="ph3">&lt;xref:System.Windows.Forms.Application.Exit%2A&gt;</ph>方法<ph id="ph4">&lt;xref:System.Windows.Forms.Application&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.FormClosed">
          <source>To prevent a form from closing, handle the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormClosing&gt;</ph> event and set the <ph id="ph2">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.ComponentModel.CancelEventArgs&gt;</ph> passed to your event handler to <ph id="ph4">`true`</ph>.</source>
          <target state="translated">若要避免關閉表單，處理<ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormClosing&gt;</ph>事件以及組<ph id="ph2">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;</ph>屬性<ph id="ph3">&lt;xref:System.ComponentModel.CancelEventArgs&gt;</ph>傳遞至事件處理常式<ph id="ph4">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.FormClosed">
          <source>You can use this event to perform tasks such as freeing resources used by the form and to save information entered in the form or to update its parent form.</source>
          <target state="translated">執行工作，例如釋放表單所使用的資源和儲存在表單中輸入資訊或更新它的父表單，您可以使用此事件。</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.FormClosed">
          <source>If the form is a multiple-document interface (MDI) parent form, the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormClosing&gt;</ph> events of all MDI child forms are raised before the MDI parent form's <ph id="ph2">&lt;xref:System.Windows.Forms.Form.FormClosing&gt;</ph> event is raised.</source>
          <target state="translated">格式為多重文件介面 (MDI) 父表單時，如果<ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormClosing&gt;</ph>MDI 父表單之前引發事件的所有 MDI 子表單<ph id="ph2">&lt;xref:System.Windows.Forms.Form.FormClosing&gt;</ph>就會引發事件。</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.FormClosed">
          <source>Likewise, the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormClosed&gt;</ph> events of all MDI child forms are raised before the <ph id="ph2">&lt;xref:System.Windows.Forms.Form.FormClosed&gt;</ph> event of the MDI parent form is raised.</source>
          <target state="translated">同樣地，<ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormClosed&gt;</ph>之前引發事件的所有 MDI 子表單<ph id="ph2">&lt;xref:System.Windows.Forms.Form.FormClosed&gt;</ph>就會引發 MDI 父表單的事件。</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.FormClosed">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">如需處理事件的詳細資訊，請參閱<bpt id="p1">[</bpt>處理和引發事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.FormClosed">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">下列程式碼範例示範如何使用這個成員。</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.FormClosed">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormClosed&gt;</ph> event.</source>
          <target state="translated">在範例中，事件處理常式會報告一次<ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormClosed&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.FormClosed">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">此報表可協助您了解事件發生的時機，並可協助您偵錯。</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.FormClosed">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">若要報告多個事件或事件經常發生，請考慮更換<ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph>與<ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph>或將訊息附加到多行<ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.FormClosed">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> named <ph id="ph2">`Form1`</ph>.</source>
          <target state="translated">若要執行範例程式碼，將它貼到包含類型的執行個體的專案<ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>名為<ph id="ph2">`Form1`</ph>。</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.FormClosed">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormClosed&gt;</ph> event.</source>
          <target state="translated">請確定事件處理常式關聯<ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormClosed&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Form.FormClosing">
          <source>Occurs before the form is closed.</source>
          <target state="translated">發生於表單關閉之前。</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.FormClosing">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormClosing&gt;</ph> event occurs as the form is being closed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormClosing&gt;</ph>關閉表單，就會發生事件。</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.FormClosing">
          <source>When a form is closed, it is disposed, releasing all resources associated with the form.</source>
          <target state="translated">當關閉表單時，加以處置，釋放與表單相關聯的所有資源。</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.FormClosing">
          <source>If you cancel this event, the form remains opened.</source>
          <target state="translated">如果您取消此事件，將表單保持開啟。</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.FormClosing">
          <source>To cancel the closure of a form, set the <ph id="ph1">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Windows.Forms.FormClosingEventArgs&gt;</ph> passed to your event handler to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">若要取消之表單的關閉，請設定<ph id="ph1">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;</ph>屬性<ph id="ph2">&lt;xref:System.Windows.Forms.FormClosingEventArgs&gt;</ph>傳遞至事件處理常式<ph id="ph3">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.FormClosing">
          <source>When a form is displayed as a modal dialog box, clicking the <bpt id="p1">**</bpt>Close<ept id="p1">**</ept> button (the button with an X at the upper-right corner of the form) causes the form to be hidden and the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.DialogResult%2A&gt;</ph> property to be set to <ph id="ph2">`DialogResult.Cancel`</ph>.</source>
          <target state="translated">當表單顯示為強制回應對話方塊時，按一下<bpt id="p1">**</bpt>關閉<ept id="p1">**</ept>按鈕 （表單右上角的 X 按鈕） 將會隱藏表單和<ph id="ph1">&lt;xref:System.Windows.Forms.Form.DialogResult%2A&gt;</ph>屬性設定為<ph id="ph2">`DialogResult.Cancel`</ph>。</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.FormClosing">
          <source>You can override the value assigned to the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.DialogResult%2A&gt;</ph> property when the user clicks the <bpt id="p1">**</bpt>Close<ept id="p1">**</ept> button by setting the <ph id="ph2">&lt;xref:System.Windows.Forms.Form.DialogResult%2A&gt;</ph> property in an event handler for the <ph id="ph3">&lt;xref:System.Windows.Forms.Form.FormClosing&gt;</ph> event of the form.</source>
          <target state="translated">您可以覆寫的值指派給<ph id="ph1">&lt;xref:System.Windows.Forms.Form.DialogResult%2A&gt;</ph>屬性，當使用者按一下<bpt id="p1">**</bpt>關閉<ept id="p1">**</ept>藉由設定按鈕<ph id="ph2">&lt;xref:System.Windows.Forms.Form.DialogResult%2A&gt;</ph>屬性中的事件處理常式<ph id="ph3">&lt;xref:System.Windows.Forms.Form.FormClosing&gt;</ph>表單的事件。</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.FormClosing">
          <source>When the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Close%2A&gt;</ph> method is called on a <ph id="ph2">&lt;xref:System.Windows.Forms.Form&gt;</ph> displayed as a modeless window, you cannot call the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Show%2A&gt;</ph> method to make the form visible, because the form's resources have already been released.</source>
          <target state="translated">當<ph id="ph1">&lt;xref:System.Windows.Forms.Form.Close%2A&gt;</ph>上呼叫方法<ph id="ph2">&lt;xref:System.Windows.Forms.Form&gt;</ph>顯示為強制回應視窗，您不能呼叫<ph id="ph3">&lt;xref:System.Windows.Forms.Control.Show%2A&gt;</ph>方法來顯示表單，因為已發行的形式的資源。</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.FormClosing">
          <source>To hide a form and then make it visible, use the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Hide%2A&gt;</ph> method.</source>
          <target state="translated">若要隱藏的表單，然後讓可見的使用<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Hide%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.FormClosing">
          <source>If the form is a multiple-document interface (MDI) parent form, the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormClosing&gt;</ph> events of all MDI child forms are raised before the MDI parent form's <ph id="ph2">&lt;xref:System.Windows.Forms.Form.FormClosing&gt;</ph> event is raised.</source>
          <target state="translated">格式為多重文件介面 (MDI) 父表單時，如果<ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormClosing&gt;</ph>MDI 父表單之前引發事件的所有 MDI 子表單<ph id="ph2">&lt;xref:System.Windows.Forms.Form.FormClosing&gt;</ph>就會引發事件。</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.FormClosing">
          <source>Likewise, the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormClosed&gt;</ph> events of all MDI child forms are raised before the <ph id="ph2">&lt;xref:System.Windows.Forms.Form.FormClosed&gt;</ph> event of the MDI parent form is raised.</source>
          <target state="translated">同樣地，<ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormClosed&gt;</ph>之前引發事件的所有 MDI 子表單<ph id="ph2">&lt;xref:System.Windows.Forms.Form.FormClosed&gt;</ph>就會引發 MDI 父表單的事件。</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.FormClosing">
          <source>Canceling the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormClosing&gt;</ph> event of an MDI child form does not prevent the <ph id="ph2">&lt;xref:System.Windows.Forms.Form.FormClosing&gt;</ph> event of the MDI parent form from being raised.</source>
          <target state="translated">取消<ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormClosing&gt;</ph>的 MDI 子表單的事件不會防止<ph id="ph2">&lt;xref:System.Windows.Forms.Form.FormClosing&gt;</ph>引發 MDI 父表單的事件。</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.FormClosing">
          <source>However, canceling the event will set to <ph id="ph1">`true`</ph> the <ph id="ph2">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Windows.Forms.FormClosingEventArgs&gt;</ph> class that is passed as a parameter to the parent form.</source>
          <target state="translated">不過，取消事件將會設定為<ph id="ph1">`true`</ph><ph id="ph2">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;</ph>屬性<ph id="ph3">&lt;xref:System.Windows.Forms.FormClosingEventArgs&gt;</ph>做為參數傳遞給父表單的類別。</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.FormClosing">
          <source>To force all MDI parent and child forms to close, set the <ph id="ph1">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;</ph> property to <ph id="ph2">`false`</ph> in the MDI parent form.</source>
          <target state="translated">若要強制所有 MDI 父和子表單關閉時，將<ph id="ph1">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;</ph>屬性<ph id="ph2">`false`</ph>在 MDI 父表單。</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.FormClosing">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">如需處理事件的詳細資訊，請參閱<bpt id="p1">[</bpt>處理和引發事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.FormClosing">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">下列程式碼範例示範如何使用這個成員。</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.FormClosing">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormClosing&gt;</ph> event.</source>
          <target state="translated">在範例中，事件處理常式會報告一次<ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormClosing&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.FormClosing">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">此報表可協助您了解事件發生的時機，並可協助您偵錯。</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.FormClosing">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">若要報告多個事件或事件經常發生，請考慮更換<ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph>與<ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph>或將訊息附加到多行<ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.FormClosing">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> named <ph id="ph2">`Form1`</ph>.</source>
          <target state="translated">若要執行範例程式碼，將它貼到包含類型的執行個體的專案<ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>名為<ph id="ph2">`Form1`</ph>。</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.FormClosing">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormClosing&gt;</ph> event.</source>
          <target state="translated">請確定事件處理常式關聯<ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormClosing&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.GetAutoScaleSize(System.Drawing.Font)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Font" /&gt;</ph> representing the font to determine the autoscaled base size of the form.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Font" /&gt;</ph>，代表決定表單之自動縮放基準大小的字型。</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.GetAutoScaleSize(System.Drawing.Font)">
          <source>Gets the size when autoscaling the form based on a specified font.</source>
          <target state="translated">取得根據指定字型自動縮放表單時所得的大小。</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.GetAutoScaleSize(System.Drawing.Font)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.SizeF" /&gt;</ph> representing the autoscaled size of the form.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.SizeF" /&gt;</ph>，代表表單的自動縮放大小。</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.GetAutoScaleSize(System.Drawing.Font)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.GetAutoScaleSize%2A&gt;</ph> method is obsolete in.NET Framework version 2.0.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.GetAutoScaleSize%2A&gt;</ph>方法已過時的.net Framework 2.0 版。</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.GetAutoScaleSize(System.Drawing.Font)">
          <source>This member has been retained for backward compatibility.</source>
          <target state="translated">這個成員保留回溯相容性。</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.GetAutoScaleSize(System.Drawing.Font)">
          <source>For more information about automatic scaling, see <bpt id="p1">[</bpt>Automatic Scaling in Windows Forms<ept id="p1">](~/docs/framework/winforms/automatic-scaling-in-windows-forms.md)</ept>.</source>
          <target state="translated">如需自動調整的詳細資訊，請參閱<bpt id="p1">[</bpt>Windows Form 中的自動調整<ept id="p1">](~/docs/framework/winforms/automatic-scaling-in-windows-forms.md)</ept>。</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.GetAutoScaleSize(System.Drawing.Font)">
          <source>You can use this method to determine the size a form would autoscale to for a specific font before applying the font to the form.</source>
          <target state="translated">您可以使用這個方法來判斷表單將字型套用至表單之前會自動調整規模，特定字型的大小。</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.GetAutoScaleSize(System.Drawing.Font)">
          <source>If you want to determine the size a form is autoscaled to based on the font currently assigned to the form, use the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.AutoScaleBaseSize%2A&gt;</ph> property.</source>
          <target state="translated">如果您想要決定大小表單自動縮放，以根據目前指派給表單的字型，請使用<ph id="ph1">&lt;xref:System.Windows.Forms.Form.AutoScaleBaseSize%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.GetScaledBounds(System.Drawing.Rectangle,System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> that specifies the area for which to retrieve the display bounds.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph>，指定要為其擷取顯示範圍的區域。</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.GetScaledBounds(System.Drawing.Rectangle,System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)">
          <source>The height and width of the control's bounds.</source>
          <target state="translated">控制項範圍的高度和寬度。</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.GetScaledBounds(System.Drawing.Rectangle,System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)">
          <source>One of the values of <ph id="ph1">&lt;see cref="T:System.Windows.Forms.BoundsSpecified" /&gt;</ph> that specifies the bounds of the control to use when defining its size and position.</source>
          <target state="translated">其中一個 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.BoundsSpecified" /&gt;</ph> 值，指定在定義控制項的大小和位置時所用的控制項範圍。</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.GetScaledBounds(System.Drawing.Rectangle,System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)">
          <source>Retrieves the bounds within which the control is scaled.</source>
          <target state="translated">擷取縮放控制項的範圍。</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.GetScaledBounds(System.Drawing.Rectangle,System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> representing the bounds within which the control is scaled.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph>，表示縮放控制項的範圍。</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.HelpButton">
          <source>Gets or sets a value indicating whether a Help button should be displayed in the caption box of the form.</source>
          <target state="translated">取得或設定值，指出是否應在表單的標題方塊中顯示 [說明] 按鈕。</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.HelpButton">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to display a Help button in the form's caption bar; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">若要在表單的標題列中顯示 [說明] 按鈕，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.HelpButton">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">預設值為 <ph id="ph1">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.HelpButton">
          <source>When this property is set to <ph id="ph1">`true`</ph>, a small button with a question mark appears in the caption bar to the left of the <bpt id="p1">**</bpt>Close<ept id="p1">**</ept> button.</source>
          <target state="translated">當這個屬性設定為<ph id="ph1">`true`</ph>，加上問號的小按鈕會出現在左邊的標題列<bpt id="p1">**</bpt>關閉<ept id="p1">**</ept> 按鈕。</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.HelpButton">
          <source>You can use this button to display help for your application.</source>
          <target state="translated">您可以使用此按鈕以顯示您的應用程式的說明。</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.HelpButton">
          <source>You can create an event handler for the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.HelpRequested&gt;</ph> event to display Help information to the user when the Help button of the form is clicked.</source>
          <target state="translated">您可以建立事件處理常式<ph id="ph1">&lt;xref:System.Windows.Forms.Control.HelpRequested&gt;</ph>按一下表單的 [說明] 按鈕時顯示給使用者的說明資訊的事件。</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.HelpButton">
          <source>To display a Help button, the value of the form's <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ControlBox&gt;</ph> property must be <ph id="ph2">`true`</ph>, its default value.</source>
          <target state="translated">若要顯示 [說明] 按鈕，在表單值<ph id="ph1">&lt;xref:System.Windows.Forms.Form.ControlBox&gt;</ph>屬性必須是<ph id="ph2">`true`</ph>，其預設值。</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.HelpButton">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ControlBox&gt;</ph> property determines whether the upper-right corner of the caption bar contains controls such as a maximize button, a minimize button, a help button, and a close button.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.ControlBox&gt;</ph>屬性決定的標題列右上角是否包含控制項，例如最大化按鈕、 最小化按鈕、 [說明] 按鈕和 [關閉] 按鈕。</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.HelpButton">
          <source>In addition, you must also set the form's <ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormBorderStyle%2A&gt;</ph> property to <ph id="ph2">&lt;xref:System.Windows.Forms.FormBorderStyle.FixedSingle?displayProperty=nameWithType&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.FormBorderStyle.Sizable?displayProperty=nameWithType&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.FormBorderStyle.Fixed3D?displayProperty=nameWithType&gt;</ph>, or <ph id="ph5">&lt;xref:System.Windows.Forms.FormBorderStyle.FixedDialog?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">此外，您也必須設定表單的<ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormBorderStyle%2A&gt;</ph>屬性<ph id="ph2">&lt;xref:System.Windows.Forms.FormBorderStyle.FixedSingle?displayProperty=nameWithType&gt;</ph>， <ph id="ph3">&lt;xref:System.Windows.Forms.FormBorderStyle.Sizable?displayProperty=nameWithType&gt;</ph>， <ph id="ph4">&lt;xref:System.Windows.Forms.FormBorderStyle.Fixed3D?displayProperty=nameWithType&gt;</ph>，或<ph id="ph5">&lt;xref:System.Windows.Forms.FormBorderStyle.FixedDialog?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.HelpButton">
          <source>The value of the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.HelpButton%2A&gt;</ph> property is ignored if the <bpt id="p1">**</bpt>Maximize<ept id="p1">**</ept> or <bpt id="p2">**</bpt>Minimize<ept id="p2">**</ept> buttons are shown.</source>
          <target state="translated">值<ph id="ph1">&lt;xref:System.Windows.Forms.Form.HelpButton%2A&gt;</ph>屬性會被忽略，如果<bpt id="p1">**</bpt>最大化<ept id="p1">**</ept>或<bpt id="p2">**</bpt>最小化<ept id="p2">**</ept>按鈕會顯示。</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.HelpButton">
          <source>The following code example creates a new instance of a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> and calls the <ph id="ph2">&lt;xref:System.Windows.Forms.Form.ShowDialog%2A&gt;</ph> method to display the form as a dialog box.</source>
          <target state="translated">下列程式碼範例會建立的新執行個體<ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>呼叫<ph id="ph2">&lt;xref:System.Windows.Forms.Form.ShowDialog%2A&gt;</ph>要將表單顯示為對話方塊的方法。</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.HelpButton">
          <source>The example sets the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormBorderStyle%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Form.AcceptButton%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Form.CancelButton%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Form.MinimizeBox%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.Form.MaximizeBox%2A&gt;</ph>, and <ph id="ph6">&lt;xref:System.Windows.Forms.Form.StartPosition%2A&gt;</ph> properties to change the appearance and functionality of the form to a dialog box.</source>
          <target state="translated">範例會設定<ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormBorderStyle%2A&gt;</ph>， <ph id="ph2">&lt;xref:System.Windows.Forms.Form.AcceptButton%2A&gt;</ph>， <ph id="ph3">&lt;xref:System.Windows.Forms.Form.CancelButton%2A&gt;</ph>， <ph id="ph4">&lt;xref:System.Windows.Forms.Form.MinimizeBox%2A&gt;</ph>， <ph id="ph5">&lt;xref:System.Windows.Forms.Form.MaximizeBox%2A&gt;</ph>，和<ph id="ph6">&lt;xref:System.Windows.Forms.Form.StartPosition%2A&gt;</ph>內容 對話方塊中變更的外觀和表單的功能。</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.HelpButton">
          <source>The example also uses the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ControlCollection.Add%2A&gt;</ph> method of the form's <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Controls%2A&gt;</ph> collection to add two <ph id="ph3">&lt;xref:System.Windows.Forms.Button&gt;</ph> controls.</source>
          <target state="translated">此範例也會使用<ph id="ph1">&lt;xref:System.Windows.Forms.Form.ControlCollection.Add%2A&gt;</ph>形式的方法<ph id="ph2">&lt;xref:System.Windows.Forms.Control.Controls%2A&gt;</ph>要加入兩個集合<ph id="ph3">&lt;xref:System.Windows.Forms.Button&gt;</ph>控制項。</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.HelpButton">
          <source>The example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.HelpButton%2A&gt;</ph> property to display a Help button in the caption bar of the dialog box.</source>
          <target state="translated">此範例會使用<ph id="ph1">&lt;xref:System.Windows.Forms.Form.HelpButton%2A&gt;</ph>屬性 對話方塊的標題列中顯示 說明 按鈕。</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Form.HelpButtonClicked">
          <source>Occurs when the <bpt id="p1">**</bpt>Help<ept id="p1">**</ept> button is clicked.</source>
          <target state="translated">發生於按一下 [說明] 按鈕時。</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.HelpButtonClicked">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.HelpButtonClicked&gt;</ph> event occurs when the <bpt id="p1">**</bpt>Help<ept id="p1">**</ept> button in the form's caption bar is clicked.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.HelpButtonClicked&gt;</ph>就會發生事件時<bpt id="p1">**</bpt>協助<ept id="p1">**</ept>中表單的標題列按鈕。</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.HelpButtonClicked">
          <source>The <bpt id="p1">**</bpt>Help<ept id="p1">**</ept> button is displayed when the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.HelpButton%2A&gt;</ph> property is set to <ph id="ph2">`true`</ph>.</source>
          <target state="translated"><bpt id="p1">**</bpt>協助<ept id="p1">**</ept>按鈕會顯示當<ph id="ph1">&lt;xref:System.Windows.Forms.Form.HelpButton%2A&gt;</ph>屬性設定為<ph id="ph2">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.HelpButtonClicked">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.Form.HelpButtonClicked&gt;</ph> can be canceled.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.HelpButtonClicked&gt;</ph> 您可以取消。</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.HelpButtonClicked">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">如需處理事件的詳細資訊，請參閱<bpt id="p1">[</bpt>處理和引發事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.HelpButtonClicked">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">下列程式碼範例示範如何使用這個成員。</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.HelpButtonClicked">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.HelpButtonClicked&gt;</ph> event.</source>
          <target state="translated">在範例中，事件處理常式會報告一次<ph id="ph1">&lt;xref:System.Windows.Forms.Form.HelpButtonClicked&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.HelpButtonClicked">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">此報表可協助您了解事件發生的時機，並可協助您偵錯。</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.HelpButtonClicked">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">若要報告多個事件或事件經常發生，請考慮更換<ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph>與<ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph>或將訊息附加到多行<ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.HelpButtonClicked">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> named <ph id="ph2">`Form1`</ph>.</source>
          <target state="translated">若要執行範例程式碼，將它貼到包含類型的執行個體的專案<ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>名為<ph id="ph2">`Form1`</ph>。</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.HelpButtonClicked">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.HelpButtonClicked&gt;</ph> event.</source>
          <target state="translated">請確定事件處理常式關聯<ph id="ph1">&lt;xref:System.Windows.Forms.Form.HelpButtonClicked&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.Icon">
          <source>Gets or sets the icon for the form.</source>
          <target state="translated">取得或設定表單的圖示。</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Icon">
          <source>An <ph id="ph1">&lt;see cref="T:System.Drawing.Icon" /&gt;</ph> that represents the icon for the form.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Icon" /&gt;</ph>，代表表單的圖示。</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Icon">
          <source>A form's icon designates the picture that represents the form in the taskbar as well as the icon that is displayed for the control box of the form.</source>
          <target state="translated">表單的圖示會指定代表表單的工作列，以及顯示控制項方塊，在表單的圖示的圖片。</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Icon">
          <source>This property will have no effect if <ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormBorderStyle%2A&gt;</ph> is set to <ph id="ph2">&lt;xref:System.Windows.Forms.FormBorderStyle.FixedDialog&gt;</ph>.</source>
          <target state="translated">如果此屬性會有任何作用<ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormBorderStyle%2A&gt;</ph>設<ph id="ph2">&lt;xref:System.Windows.Forms.FormBorderStyle.FixedDialog&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Icon">
          <source>In that case, the form will not display an icon.</source>
          <target state="translated">在此情況下，表單不會顯示圖示。</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Form.InputLanguageChanged">
          <source>Occurs after the input language of the form has changed.</source>
          <target state="translated">發生於表單的輸入語言已變更之後。</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.InputLanguageChanged">
          <source>You can use this event to make changes to your form's appearance and text based on changes made to the input language of the form.</source>
          <target state="translated">若要變更表單的外觀和文字根據表單的輸入語言所做的變更，您可以使用此事件。</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.InputLanguageChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">如需處理事件的詳細資訊，請參閱<bpt id="p1">[</bpt>處理和引發事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.InputLanguageChanged">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">下列程式碼範例示範如何使用這個成員。</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.InputLanguageChanged">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.InputLanguageChanged&gt;</ph> event.</source>
          <target state="translated">在範例中，事件處理常式會報告一次<ph id="ph1">&lt;xref:System.Windows.Forms.Form.InputLanguageChanged&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.InputLanguageChanged">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">此報表可協助您了解事件發生的時機，並可協助您偵錯。</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.InputLanguageChanged">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">若要報告多個事件或事件經常發生，請考慮更換<ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph>與<ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph>或將訊息附加到多行<ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.InputLanguageChanged">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> named <ph id="ph2">`Form1`</ph>.</source>
          <target state="translated">若要執行範例程式碼，將它貼到包含類型的執行個體的專案<ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>名為<ph id="ph2">`Form1`</ph>。</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.InputLanguageChanged">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.InputLanguageChanged&gt;</ph> event.</source>
          <target state="translated">請確定事件處理常式關聯<ph id="ph1">&lt;xref:System.Windows.Forms.Form.InputLanguageChanged&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Form.InputLanguageChanging">
          <source>Occurs when the user attempts to change the input language for the form.</source>
          <target state="translated">發生於使用者嘗試變更表單的輸入語言時。</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.InputLanguageChanging">
          <source>This event occurs before the change of input language is made for the form.</source>
          <target state="translated">輸入語言變更表單進行的作業之前，就會發生此事件。</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.InputLanguageChanging">
          <source>You can cancel the language change by setting the <ph id="ph1">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Windows.Forms.InputLanguageChangingEventArgs&gt;</ph> passed to your event handler to <ph id="ph3">`false`</ph>.</source>
          <target state="translated">您可以取消設定的語言變更<ph id="ph1">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;</ph>屬性<ph id="ph2">&lt;xref:System.Windows.Forms.InputLanguageChangingEventArgs&gt;</ph>傳遞至事件處理常式<ph id="ph3">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.InputLanguageChanging">
          <source>If the event is canceled, the input language is not changed.</source>
          <target state="translated">如果事件已取消，不會變更輸入的語言。</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.InputLanguageChanging">
          <source>You can use this event to determine whether the requested input language change is appropriate for your application.</source>
          <target state="translated">您可以使用此事件以判斷是否適合您的應用程式要求的輸入的語言變更。</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.InputLanguageChanging">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">如需處理事件的詳細資訊，請參閱<bpt id="p1">[</bpt>處理和引發事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.InputLanguageChanging">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">下列程式碼範例示範如何使用這個成員。</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.InputLanguageChanging">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.InputLanguageChanging&gt;</ph> event.</source>
          <target state="translated">在範例中，事件處理常式會報告一次<ph id="ph1">&lt;xref:System.Windows.Forms.Form.InputLanguageChanging&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.InputLanguageChanging">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">此報表可協助您了解事件發生的時機，並可協助您偵錯。</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.InputLanguageChanging">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">若要報告多個事件或事件經常發生，請考慮更換<ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph>與<ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph>或將訊息附加到多行<ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.InputLanguageChanging">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> named <ph id="ph2">`Form1`</ph>.</source>
          <target state="translated">若要執行範例程式碼，將它貼到包含類型的執行個體的專案<ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>名為<ph id="ph2">`Form1`</ph>。</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.InputLanguageChanging">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.InputLanguageChanging&gt;</ph> event.</source>
          <target state="translated">請確定事件處理常式關聯<ph id="ph1">&lt;xref:System.Windows.Forms.Form.InputLanguageChanging&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.IsMdiChild">
          <source>Gets a value indicating whether the form is a multiple-document interface (MDI) child form.</source>
          <target state="translated">取得或設定值，指出表單是否為多重文件介面 (MDI) 子表單。</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.IsMdiChild">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the form is an MDI child form; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果表單為 MDI 子表單，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.IsMdiChild">
          <source>At run time, MDI child forms are displayed inside the client area of an MDI parent form.</source>
          <target state="translated">在執行階段，MDI 子表單會顯示在 MDI 父表單的工作區。</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.IsMdiChild">
          <source>An MDI child form can be maximized, minimized, and moved within the MDI parent form.</source>
          <target state="translated">可以最大化、 最小化，和在 MDI 父表單中移動的 MDI 子表單。</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.IsMdiChild">
          <source>To create an MDI child form, assign the <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> that will be the MDI parent form to the <ph id="ph2">&lt;xref:System.Windows.Forms.Form.MdiParent%2A&gt;</ph> property of the child form.</source>
          <target state="translated">若要建立的 MDI 子表單，指派<ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>將會是 MDI 父表單的<ph id="ph2">&lt;xref:System.Windows.Forms.Form.MdiParent%2A&gt;</ph>子表單的屬性。</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.IsMdiChild">
          <source>You can use the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.IsMdiContainer%2A&gt;</ph> property to determine whether a form is an MDI parent form.</source>
          <target state="translated">您可以使用<ph id="ph1">&lt;xref:System.Windows.Forms.Form.IsMdiContainer%2A&gt;</ph>屬性來決定表單是否為 MDI 父表單。</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.IsMdiChild">
          <source>You can use the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.IsMdiChild%2A&gt;</ph> property to determine whether a form returned by a method or property is an MDI child form or a standard form in your application such as a dialog box.</source>
          <target state="translated">您可以使用<ph id="ph1">&lt;xref:System.Windows.Forms.Form.IsMdiChild%2A&gt;</ph>屬性來決定方法或屬性所傳回的表單為 MDI 子表單或在您的應用程式，例如對話方塊中的標準格式。</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.IsMdiChild">
          <source>All MDI child forms have sizable borders, a control-menu box, and Minimize and <bpt id="p1">**</bpt>Maximize<ept id="p1">**</ept> buttons, regardless of the settings of the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormBorderStyle%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Form.ControlBox%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Form.MinimizeBox%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Windows.Forms.Form.MaximizeBox%2A&gt;</ph> properties.</source>
          <target state="translated">所有 MDI 子表單都有可調整大小框線、 控制功能表方塊和 最小化和<bpt id="p1">**</bpt>最大化<ept id="p1">**</ept>按鈕，不論設定為何<ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormBorderStyle%2A&gt;</ph>， <ph id="ph2">&lt;xref:System.Windows.Forms.Form.ControlBox%2A&gt;</ph>， <ph id="ph3">&lt;xref:System.Windows.Forms.Form.MinimizeBox%2A&gt;</ph>，和<ph id="ph4">&lt;xref:System.Windows.Forms.Form.MaximizeBox%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.IsMdiContainer">
          <source>Gets or sets a value indicating whether the form is a container for multiple-document interface (MDI) child forms.</source>
          <target state="translated">取得或設定值，指出表單是否為多重文件介面 (MDI) 子表單的容器。</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.IsMdiContainer">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the form is a container for MDI child forms; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果表單為 MDI 子表單的容器，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.IsMdiContainer">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">預設值為 <ph id="ph1">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.IsMdiContainer">
          <source>This property changes the display and behavior of the form to an MDI parent form.</source>
          <target state="translated">這個屬性變更的顯示和行為的表單為 MDI 父表單。</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.IsMdiContainer">
          <source>When this property is set to <ph id="ph1">`true`</ph>, the form displays a sunken client area with a raised border.</source>
          <target state="translated">當這個屬性設定為<ph id="ph1">`true`</ph>，表單會顯示具有凸起框線下凹的工作區。</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.IsMdiContainer">
          <source>All MDI child forms assigned to the parent form are displayed within its client area.</source>
          <target state="translated">所有指派給父表單的 MDI 子表單會顯示在其工作區。</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.IsMdiContainer">
          <source>When an MDI parent form is closed, the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Closing&gt;</ph> events of all MDI child forms are raised before the MDI parent form's <ph id="ph2">&lt;xref:System.Windows.Forms.Form.Closing&gt;</ph> event is raised.</source>
          <target state="translated">當關閉 MDI 父表單時， <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Closing&gt;</ph> MDI 父表單之前引發事件的所有 MDI 子表單<ph id="ph2">&lt;xref:System.Windows.Forms.Form.Closing&gt;</ph>就會引發事件。</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.IsMdiContainer">
          <source>In addition, the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Closed&gt;</ph> events of all MDI child forms are raised before the <ph id="ph2">&lt;xref:System.Windows.Forms.Form.Closed&gt;</ph> event of the MDI parent form is raised.</source>
          <target state="translated">此外，<ph id="ph1">&lt;xref:System.Windows.Forms.Form.Closed&gt;</ph>之前引發事件的所有 MDI 子表單<ph id="ph2">&lt;xref:System.Windows.Forms.Form.Closed&gt;</ph>就會引發 MDI 父表單的事件。</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.IsMdiContainer">
          <source>If there are two <ph id="ph1">&lt;xref:System.Windows.Forms.MenuStrip&gt;</ph> controls on an MDI child form, setting <ph id="ph2">&lt;xref:System.Windows.Forms.Form.IsMdiContainer%2A&gt;</ph> to <ph id="ph3">`true`</ph> for the parent form merges the contents of only one of the <ph id="ph4">&lt;xref:System.Windows.Forms.MenuStrip&gt;</ph> controls.</source>
          <target state="translated">如果有兩個<ph id="ph1">&lt;xref:System.Windows.Forms.MenuStrip&gt;</ph>上設定的 MDI 子表單的控制項<ph id="ph2">&lt;xref:System.Windows.Forms.Form.IsMdiContainer%2A&gt;</ph>至<ph id="ph3">`true`</ph>父表單會合併的其中之一的內容<ph id="ph4">&lt;xref:System.Windows.Forms.MenuStrip&gt;</ph>控制項。</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.IsMdiContainer">
          <source>Use <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripManager.Merge%2A&gt;</ph> to merge the contents of additional child <ph id="ph2">&lt;xref:System.Windows.Forms.MenuStrip&gt;</ph> controls on the MDI parent form.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripManager.Merge%2A&gt;</ph>其他子內容合併<ph id="ph2">&lt;xref:System.Windows.Forms.MenuStrip&gt;</ph>MDI 父表單上的控制項。</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.IsMdiContainer">
          <source>The following code example demonstrates using the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.IsMdiContainer%2A&gt;</ph> property as well as changing the <ph id="ph2">`BackColor`</ph> property of an MDI Form.</source>
          <target state="translated">下列程式碼範例示範如何使用<ph id="ph1">&lt;xref:System.Windows.Forms.Form.IsMdiContainer%2A&gt;</ph>屬性，以及變更<ph id="ph2">`BackColor`</ph>MDI 表單的屬性。</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.IsMdiContainer">
          <source>To run this example, paste the following code in a new form.</source>
          <target state="translated">若要執行此範例中，將下列程式碼貼在新的表單。</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.IsRestrictedWindow">
          <source>Gets a value indicating whether the form can use all windows and user input events without restriction.</source>
          <target state="translated">取得值，指出表單是否可以無限制地使用所有的視窗和使用者輸入事件。</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.IsRestrictedWindow">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the form has restrictions; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果表單有限制則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.IsRestrictedWindow">
          <source>The default is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">預設值為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.IsRestrictedWindow">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.IsRestrictedWindow%2A&gt;</ph> property determines whether the <ph id="ph2">&lt;xref:System.Security.Permissions.UIPermissionWindow.AllWindows&gt;</ph> permission is granted.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.IsRestrictedWindow%2A&gt;</ph>屬性會決定是否<ph id="ph2">&lt;xref:System.Security.Permissions.UIPermissionWindow.AllWindows&gt;</ph>授與權限。</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.IsRestrictedWindow">
          <source>This property is set at run time in the form's constructor, and is cached for the lifetime of the form.</source>
          <target state="translated">這個屬性會設定表單的建構函式，在執行階段，而表單的存留期間快取。</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.IsRestrictedWindow">
          <source>Windows Forms applications running in partial trust cannot circumvent this check, as the common language runtime ensures that the parent constructor is always called in partial trust.</source>
          <target state="translated">在部分信任中執行的 Windows Form 應用程式不能規避這項檢查，因為通用語言執行平台可確保在部分信任中一律會呼叫父建構函式。</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.KeyPreview">
          <source>Gets or sets a value indicating whether the form will receive key events before the event is passed to the control that has focus.</source>
          <target state="translated">取得或設定值，指出表單是否要在事件傳送至焦點所在的控制項之前，接收按鍵事件。</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.KeyPreview">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the form will receive all key events; <ph id="ph2">&lt;see langword="false" /&gt;</ph> if the currently selected control on the form receives key events.</source>
          <target state="translated">如果表單將接收所有按鍵事件，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；如果表單上目前選取的控制項將接收按鍵事件，則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.KeyPreview">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">預設值為 <ph id="ph1">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.KeyPreview">
          <source>When this property is set to <ph id="ph1">`true`</ph>, the form will receive all <ph id="ph2">&lt;xref:System.Windows.Forms.Control.KeyPress&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.KeyDown&gt;</ph>, and <ph id="ph4">&lt;xref:System.Windows.Forms.Control.KeyUp&gt;</ph> events.</source>
          <target state="translated">當這個屬性設定為<ph id="ph1">`true`</ph>，表單將會收到所有<ph id="ph2">&lt;xref:System.Windows.Forms.Control.KeyPress&gt;</ph>， <ph id="ph3">&lt;xref:System.Windows.Forms.Control.KeyDown&gt;</ph>，和<ph id="ph4">&lt;xref:System.Windows.Forms.Control.KeyUp&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.KeyPreview">
          <source>After the form's event handlers have completed processing the keystroke, the keystroke is then assigned to the control with focus.</source>
          <target state="translated">表單的事件處理常式已處理按鍵輸入完成之後，並接著會將按鍵指派給擁有焦點的控制項。</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.KeyPreview">
          <source>For example, if the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.KeyPreview%2A&gt;</ph> property is set to <ph id="ph2">`true`</ph> and the currently selected control is a <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>, after the keystroke is handled by the event handlers of the form the <ph id="ph4">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> control will receive the key that was pressed.</source>
          <target state="translated">例如，如果<ph id="ph1">&lt;xref:System.Windows.Forms.Form.KeyPreview%2A&gt;</ph>屬性設定為<ph id="ph2">`true`</ph>目前選取的控制項，且<ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>按鍵由表單的事件處理常式之後<ph id="ph4">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>控制項將會收到已按下按鍵。</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.KeyPreview">
          <source>To handle keyboard events only at the form level and not allow controls to receive keyboard events, set the <ph id="ph1">&lt;xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A?displayProperty=nameWithType&gt;</ph> property in your form's <ph id="ph2">&lt;xref:System.Windows.Forms.Control.KeyPress&gt;</ph> event handler to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">若要處理只能在表單層級的鍵盤事件，並允許接收鍵盤事件的控制項，將<ph id="ph1">&lt;xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A?displayProperty=nameWithType&gt;</ph>屬性在表單的<ph id="ph2">&lt;xref:System.Windows.Forms.Control.KeyPress&gt;</ph>事件處理常式來<ph id="ph3">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.KeyPreview">
          <source>You can use this property to process most keystrokes in your application and either handle the keystroke or call the appropriate control to handle the keystroke.</source>
          <target state="translated">您可以使用這個屬性來處理大部分的按鍵輸入，在您的應用程式並不是處理按鍵，或呼叫適當的控制項來處理按鍵。</target>       </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.KeyPreview">
          <source>For example, when an application uses function keys, you might want to process the keystrokes at the form level rather than writing code for each control that might receive keystroke events.</source>
          <target state="translated">例如，當應用程式使用功能鍵，您可以在處理表單層級，而非撰寫程式碼可能會收到按鍵事件的每個控制項的按鍵輸入。</target>       </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.KeyPreview">
          <source>If a form has no visible or enabled controls, it automatically receives all keyboard events.</source>
          <target state="translated">如果表單中不的任何可見的或啟用的控制項，則會自動收到所有的鍵盤事件。</target>       </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.KeyPreview">
          <source>A control on a form may be programmed to cancel any keystrokes it receives.</source>
          <target state="translated">在表單上的控制項可能會設計成取消它接收的任何按鍵輸入。</target>       </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.KeyPreview">
          <source>Since the control never sends these keystrokes to the form, the form will never see them regardless of the setting of <ph id="ph1">&lt;xref:System.Windows.Forms.Form.KeyPreview%2A&gt;</ph>.</source>
          <target state="translated">因為控制項不會將這些按鍵動作傳送至表單，表單將永遠不會看到它們不論設定為何<ph id="ph1">&lt;xref:System.Windows.Forms.Form.KeyPreview%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.KeyPreview">
          <source>The following code example demonstrates setting a form's <ph id="ph1">&lt;xref:System.Windows.Forms.Form.KeyPreview%2A&gt;</ph> property to true and handling the key events at the form level.</source>
          <target state="translated">下列程式碼範例將示範如何設定表單的<ph id="ph1">&lt;xref:System.Windows.Forms.Form.KeyPreview%2A&gt;</ph>屬性設為 true 並處理表單層級的索引鍵的事件。</target>       </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.KeyPreview">
          <source>To run the example, paste the following code in a blank form.</source>
          <target state="translated">要執行此範例中，貼上下列程式碼空白表單中。</target>       </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.LayoutMdi(System.Windows.Forms.MdiLayout)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MdiLayout" /&gt;</ph> values that defines the layout of MDI child forms.</source>
          <target state="translated">其中一個 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MdiLayout" /&gt;</ph> 值，定義 MDI 子表單的配置。</target>       </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.LayoutMdi(System.Windows.Forms.MdiLayout)">
          <source>Arranges the multiple-document interface (MDI) child forms within the MDI parent form.</source>
          <target state="translated">在 MDI 父表單內排列多重文件介面 (MDI) 子表單。</target>       </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.LayoutMdi(System.Windows.Forms.MdiLayout)">
          <source>You can use this method to arrange the MDI child forms in your MDI parent form to allow for easier navigation and manipulation of MDI child forms.</source>
          <target state="translated">您可以使用這個方法，以便更容易瀏覽和管理 MDI 子表單的 MDI 父表單中排列 MDI 子表單。</target>       </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.LayoutMdi(System.Windows.Forms.MdiLayout)">
          <source>MDI child forms can be tiled horizontally and vertically, cascaded, or as icons within the MDI parent form.</source>
          <target state="translated">MDI 子表單可以並排顯示水平及垂直重疊，或為 MDI 父表單中的圖示。</target>       </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.LayoutMdi(System.Windows.Forms.MdiLayout)">
          <source>The following code example shows the event handlers for the menu items of a Window menu in an MDI application's parent form.</source>
          <target state="translated">下列程式碼範例會顯示在 MDI 應用程式的父表單中的事件處理常式的視窗功能表的功能表項目。</target>       </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.LayoutMdi(System.Windows.Forms.MdiLayout)">
          <source>Each event handler makes calls to the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.LayoutMdi%2A&gt;</ph> method to arrange any child forms that are currently open in the application.</source>
          <target state="translated">每個事件處理常式會呼叫<ph id="ph1">&lt;xref:System.Windows.Forms.Form.LayoutMdi%2A&gt;</ph>排列任何子表單，方法是目前在應用程式中開啟。</target>       </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Form.Load">
          <source>Occurs before a form is displayed for the first time.</source>
          <target state="translated">發生在表單第一次顯示之前。</target>       </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Load">
          <source>You can use this event to perform tasks such as allocating resources used by the form.</source>
          <target state="translated">若要執行工作，例如配置表單所使用的資源，您可以使用此事件。</target>       </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Load">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">如需處理事件的詳細資訊，請參閱<bpt id="p1">[</bpt>處理和引發事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Load">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.SetDesktopLocation%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Form.Load&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Form.Activated&gt;</ph>, and <ph id="ph4">&lt;xref:System.Windows.Forms.Form.Activate%2A&gt;</ph> members.</source>
          <target state="translated">下列程式碼範例示範如何使用<ph id="ph1">&lt;xref:System.Windows.Forms.Form.SetDesktopLocation%2A&gt;</ph>， <ph id="ph2">&lt;xref:System.Windows.Forms.Form.Load&gt;</ph>， <ph id="ph3">&lt;xref:System.Windows.Forms.Form.Activated&gt;</ph>，和<ph id="ph4">&lt;xref:System.Windows.Forms.Form.Activate%2A&gt;</ph>成員。</target>       </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Load">
          <source>To run the example, paste the following code in a form called <ph id="ph1">`Form1`</ph> containing a <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> called <ph id="ph3">`Button1`</ph> and two <ph id="ph4">&lt;xref:System.Windows.Forms.Label&gt;</ph> controls called <ph id="ph5">`Label1`</ph> and <ph id="ph6">`Label2`</ph>.</source>
          <target state="translated">若要執行此範例，下列程式碼的呼叫格式貼<ph id="ph1">`Form1`</ph>包含<ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph>呼叫<ph id="ph3">`Button1`</ph>和兩個<ph id="ph4">&lt;xref:System.Windows.Forms.Label&gt;</ph>控制項稱為<ph id="ph5">`Label1`</ph>和<ph id="ph6">`Label2`</ph>。</target>       </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.Location">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> that represents the upper-left corner of the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph> in screen coordinates.</source>
          <target state="translated">取得或設定 <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph>，代表螢幕座標中 <ph id="ph2">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph> 的左上角。</target>       </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Location">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph> that represents the upper-left corner of the <ph id="ph2">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph> in screen coordinates.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Point" /&gt;</ph>，代表螢幕座標中 <ph id="ph2">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph> 的左上角。</target>       </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Location">
          <source><ph id="ph1">&lt;xref:System.Drawing.Point&gt;</ph> is a structure, which means that it is a value type.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Drawing.Point&gt;</ph> 為結構時，這表示它是實值類型。</target>       </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Location">
          <source>If you access a property in <ph id="ph1">&lt;xref:System.Drawing.Point&gt;</ph>, a copy of the property is returned.</source>
          <target state="translated">如果您存取中的屬性<ph id="ph1">&lt;xref:System.Drawing.Point&gt;</ph>，就會傳回一份屬性。</target>       </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Location">
          <source>Therefore, changing the <ph id="ph1">&lt;xref:System.Drawing.Point.X%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Drawing.Point.Y%2A&gt;</ph> properties of the <ph id="ph3">&lt;xref:System.Drawing.Point&gt;</ph> returned from the <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Location%2A&gt;</ph> property will not affect the <ph id="ph5">&lt;xref:System.Windows.Forms.Control.Left%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Windows.Forms.Control.Right%2A&gt;</ph>, <ph id="ph7">&lt;xref:System.Windows.Forms.Control.Top%2A&gt;</ph>, or <ph id="ph8">&lt;xref:System.Windows.Forms.Control.Bottom%2A&gt;</ph> property values of the <ph id="ph9">&lt;xref:System.Windows.Forms.Form&gt;</ph>.</source>
          <target state="translated">因此，變更<ph id="ph1">&lt;xref:System.Drawing.Point.X%2A&gt;</ph>或<ph id="ph2">&lt;xref:System.Drawing.Point.Y%2A&gt;</ph>屬性<ph id="ph3">&lt;xref:System.Drawing.Point&gt;</ph>從傳回<ph id="ph4">&lt;xref:System.Windows.Forms.Control.Location%2A&gt;</ph>屬性將不會影響<ph id="ph5">&lt;xref:System.Windows.Forms.Control.Left%2A&gt;</ph>， <ph id="ph6">&lt;xref:System.Windows.Forms.Control.Right%2A&gt;</ph>， <ph id="ph7">&lt;xref:System.Windows.Forms.Control.Top%2A&gt;</ph>，或<ph id="ph8">&lt;xref:System.Windows.Forms.Control.Bottom%2A&gt;</ph>屬性值<ph id="ph9">&lt;xref:System.Windows.Forms.Form&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Location">
          <source>To adjust these properties, set each property value individually, or set the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Location%2A&gt;</ph> property with a new <ph id="ph2">&lt;xref:System.Drawing.Point&gt;</ph>.</source>
          <target state="translated">若要調整這些屬性，個別設定每個屬性的值，或設定<ph id="ph1">&lt;xref:System.Windows.Forms.Form.Location%2A&gt;</ph>屬性與新<ph id="ph2">&lt;xref:System.Drawing.Point&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Location">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Location%2A&gt;</ph> property gets or sets the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Location%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control&gt;</ph> base class, and sets the <ph id="ph4">&lt;xref:System.ComponentModel.SettingsBindableAttribute.Bindable%2A&gt;</ph> property to <ph id="ph5">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.Location%2A&gt;</ph>屬性取得或設定<ph id="ph2">&lt;xref:System.Windows.Forms.Control.Location%2A&gt;</ph>屬性<ph id="ph3">&lt;xref:System.Windows.Forms.Control&gt;</ph>基底類別，並設定<ph id="ph4">&lt;xref:System.ComponentModel.SettingsBindableAttribute.Bindable%2A&gt;</ph>屬性<ph id="ph5">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.MainMenuStrip">
          <source>Gets or sets the primary menu container for the form.</source>
          <target state="translated">取得或設定表單的主要功能表容器。</target>       </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MainMenuStrip">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MenuStrip" /&gt;</ph> that represents the container for the menu structure of the form.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.MenuStrip" /&gt;</ph>，代表表單功能表結構的容器。</target>       </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MainMenuStrip">
          <source>The default is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">預設值為 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MainMenuStrip">
          <source>In addition to setting the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.MainMenuStrip%2A&gt;</ph> property, you must <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ControlCollection.Add%2A&gt;</ph> the <ph id="ph3">&lt;xref:System.Windows.Forms.MenuStrip&gt;</ph> control to the <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Controls%2A&gt;</ph> collection of the form.</source>
          <target state="translated">除了設定<ph id="ph1">&lt;xref:System.Windows.Forms.Form.MainMenuStrip%2A&gt;</ph>屬性，您必須<ph id="ph2">&lt;xref:System.Windows.Forms.Control.ControlCollection.Add%2A&gt;</ph><ph id="ph3">&lt;xref:System.Windows.Forms.MenuStrip&gt;</ph>控制權傳輸至<ph id="ph4">&lt;xref:System.Windows.Forms.Control.Controls%2A&gt;</ph>表單的集合。</target>       </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MainMenuStrip">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.MenuStrip&gt;</ph> class supersedes the <ph id="ph2">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph> class in previous versions of the .NET Framework.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.MenuStrip&gt;</ph>類別會取代<ph id="ph2">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph>在舊版的.NET Framework 類別。</target>       </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.Margin">
          <source>Gets or sets the space between controls.</source>
          <target state="translated">取得或設定控制項之間的空格。</target>       </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Margin">
          <source>A value that represents the space between controls.</source>
          <target state="translated">表示控制項之間間距的值。</target>       </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Form.MarginChanged">
          <source>Occurs when the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Form.Margin" /&gt;</ph> property changes.</source>
          <target state="translated">發生於 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Form.Margin" /&gt;</ph> 屬性變更時。</target>       </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.MaximizeBox">
          <source>Gets or sets a value indicating whether the <bpt id="p1">**</bpt>Maximize<ept id="p1">**</ept> button is displayed in the caption bar of the form.</source>
          <target state="translated">取得或設定值，指出是否要在表單的標題列中顯示 [最大化] 按鈕。</target>       </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MaximizeBox">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to display a <bpt id="p1">**</bpt>Maximize<ept id="p1">**</ept> button for the form; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> 若要顯示<bpt id="p1">**</bpt>最大化<ept id="p1">**</ept>按鈕的表單，否則<ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MaximizeBox">
          <source>The default is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">預設值為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MaximizeBox">
          <source>A <bpt id="p1">**</bpt>Maximize<ept id="p1">**</ept> button enables users to enlarge a window to full-screen size.</source>
          <target state="translated">A<bpt id="p1">**</bpt>最大化<ept id="p1">**</ept>按鈕可讓使用者將視窗放大為全螢幕模式。</target>       </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MaximizeBox">
          <source>To display a <bpt id="p1">**</bpt>Maximize<ept id="p1">**</ept> button, the value of the form's <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ControlBox&gt;</ph> property must be <ph id="ph2">`true`</ph>, its default value.</source>
          <target state="translated">若要顯示<bpt id="p1">**</bpt>最大化<ept id="p1">**</ept>按鈕，在表單值<ph id="ph1">&lt;xref:System.Windows.Forms.Form.ControlBox&gt;</ph>屬性必須是<ph id="ph2">`true`</ph>，其預設值。</target>       </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MaximizeBox">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ControlBox&gt;</ph> property determines whether the upper-right corner of the caption bar contains controls such as a maximize button, a minimize button, a help button, and a close button.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.ControlBox&gt;</ph>屬性決定的標題列右上角是否包含控制項，例如最大化按鈕、 最小化按鈕、 [說明] 按鈕和 [關閉] 按鈕。</target>       </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MaximizeBox">
          <source>In addition, you must also set the form's <ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormBorderStyle%2A&gt;</ph> property to <ph id="ph2">&lt;xref:System.Windows.Forms.FormBorderStyle.FixedSingle?displayProperty=nameWithType&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.FormBorderStyle.Sizable?displayProperty=nameWithType&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.FormBorderStyle.Fixed3D?displayProperty=nameWithType&gt;</ph>, or <ph id="ph5">&lt;xref:System.Windows.Forms.FormBorderStyle.FixedDialog?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">此外，您也必須設定表單的<ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormBorderStyle%2A&gt;</ph>屬性<ph id="ph2">&lt;xref:System.Windows.Forms.FormBorderStyle.FixedSingle?displayProperty=nameWithType&gt;</ph>， <ph id="ph3">&lt;xref:System.Windows.Forms.FormBorderStyle.Sizable?displayProperty=nameWithType&gt;</ph>， <ph id="ph4">&lt;xref:System.Windows.Forms.FormBorderStyle.Fixed3D?displayProperty=nameWithType&gt;</ph>，或<ph id="ph5">&lt;xref:System.Windows.Forms.FormBorderStyle.FixedDialog?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MaximizeBox">
          <source>A <bpt id="p1">**</bpt>Maximize<ept id="p1">**</ept> button automatically becomes a restore button when a window is maximized.</source>
          <target state="translated">A<bpt id="p1">**</bpt>最大化<ept id="p1">**</ept>按鈕會自動成為還原按鈕最大化視窗時。</target>       </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MaximizeBox">
          <source>Minimizing or restoring a window automatically changes the restore button back to a <bpt id="p1">**</bpt>Maximize<ept id="p1">**</ept> button.</source>
          <target state="translated">最小化或還原視窗會自動變更 還原 按鈕回到<bpt id="p1">**</bpt>最大化<ept id="p1">**</ept> 按鈕。</target>       </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MaximizeBox">
          <source>Maximizing a form at run time generates a <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Resize&gt;</ph> event.</source>
          <target state="translated">最大化表單，在執行階段會產生<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Resize&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MaximizeBox">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.WindowState%2A&gt;</ph> property reflects the current state of the window.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.WindowState%2A&gt;</ph>屬性會反映在視窗的目前狀態。</target>       </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MaximizeBox">
          <source>If you set the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.WindowState%2A&gt;</ph> property to <ph id="ph2">`FormWindowState.Maximized`</ph>, the form is maximized independently of whatever settings are in effect for the <ph id="ph3">&lt;xref:System.Windows.Forms.Form.MaximizeBox%2A&gt;</ph> and <ph id="ph4">&lt;xref:System.Windows.Forms.Form.FormBorderStyle%2A&gt;</ph> properties.</source>
          <target state="translated">如果您設定<ph id="ph1">&lt;xref:System.Windows.Forms.Form.WindowState%2A&gt;</ph>屬性<ph id="ph2">`FormWindowState.Maximized`</ph>，表單最大化獨立於任何設定，則實際上<ph id="ph3">&lt;xref:System.Windows.Forms.Form.MaximizeBox%2A&gt;</ph>和<ph id="ph4">&lt;xref:System.Windows.Forms.Form.FormBorderStyle%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MaximizeBox">
          <source>The following code example creates a new instance of a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> and calls the <ph id="ph2">&lt;xref:System.Windows.Forms.Form.ShowDialog%2A&gt;</ph> method to display the form as a dialog box.</source>
          <target state="translated">下列程式碼範例會建立的新執行個體<ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>呼叫<ph id="ph2">&lt;xref:System.Windows.Forms.Form.ShowDialog%2A&gt;</ph>要將表單顯示為對話方塊的方法。</target>       </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MaximizeBox">
          <source>The example sets the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormBorderStyle%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Form.AcceptButton%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Form.CancelButton%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Form.MinimizeBox%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.Form.MaximizeBox%2A&gt;</ph>, and <ph id="ph6">&lt;xref:System.Windows.Forms.Form.StartPosition%2A&gt;</ph> properties to change the appearance and functionality of the form to a dialog box.</source>
          <target state="translated">範例會設定<ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormBorderStyle%2A&gt;</ph>， <ph id="ph2">&lt;xref:System.Windows.Forms.Form.AcceptButton%2A&gt;</ph>， <ph id="ph3">&lt;xref:System.Windows.Forms.Form.CancelButton%2A&gt;</ph>， <ph id="ph4">&lt;xref:System.Windows.Forms.Form.MinimizeBox%2A&gt;</ph>， <ph id="ph5">&lt;xref:System.Windows.Forms.Form.MaximizeBox%2A&gt;</ph>，和<ph id="ph6">&lt;xref:System.Windows.Forms.Form.StartPosition%2A&gt;</ph>內容 對話方塊中變更的外觀和表單的功能。</target>       </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MaximizeBox">
          <source>The example also uses the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ControlCollection.Add%2A&gt;</ph> method of the form's <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Controls%2A&gt;</ph> collection to add two <ph id="ph3">&lt;xref:System.Windows.Forms.Button&gt;</ph> controls.</source>
          <target state="translated">此範例也會使用<ph id="ph1">&lt;xref:System.Windows.Forms.Form.ControlCollection.Add%2A&gt;</ph>形式的方法<ph id="ph2">&lt;xref:System.Windows.Forms.Control.Controls%2A&gt;</ph>要加入兩個集合<ph id="ph3">&lt;xref:System.Windows.Forms.Button&gt;</ph>控制項。</target>       </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MaximizeBox">
          <source>The example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.HelpButton%2A&gt;</ph> property to display a help button in the caption bar of the dialog box.</source>
          <target state="translated">此範例會使用<ph id="ph1">&lt;xref:System.Windows.Forms.Form.HelpButton%2A&gt;</ph>屬性 對話方塊的標題列中顯示 說明 按鈕。</target>       </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.MaximizedBounds">
          <source>Gets and sets the size of the form when it is maximized.</source>
          <target state="translated">取得並設定當表單最大化時的大小。</target>       </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MaximizedBounds">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> that represents the bounds of the form when it is maximized.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph>，代表表單最大化時的界限。</target>       </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.MaximizedBounds">
          <source>The value of the <ph id="ph1">&lt;see cref="P:System.Drawing.Rectangle.Top" /&gt;</ph> property is greater than the height of the form.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Drawing.Rectangle.Top" /&gt;</ph> 屬性值大於表單高度。</target>       </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.MaximizedBounds">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.MaximizedBounds">
          <source>The value of the <ph id="ph1">&lt;see cref="P:System.Drawing.Rectangle.Left" /&gt;</ph> property is greater than the width of the form.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Drawing.Rectangle.Left" /&gt;</ph> 屬性值大於表單寬度。</target>       </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MaximizedBounds">
          <source>Classes that inherit from <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph> can override this method to provide new bounds for the form when it is maximized.</source>
          <target state="translated">類別繼承自<ph id="ph1">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph>可以覆寫這個方法以提供表單的新界限最大化。</target>       </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MaximizedBounds">
          <source>The class sets this property internally when the form's <bpt id="p1">**</bpt>Maximize<ept id="p1">**</ept> button is clicked.</source>
          <target state="translated">類別會設定這個屬性在內部當表單的<bpt id="p1">**</bpt>最大化<ept id="p1">**</ept>按鈕。</target>       </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Form.MaximizedBoundsChanged">
          <source>Occurs when the value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Form.MaximizedBounds" /&gt;</ph> property has changed.</source>
          <target state="translated">發生於 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Form.MaximizedBounds" /&gt;</ph> 屬性的值已變更時。</target>       </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.MaximizedBoundsChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">如需處理事件的詳細資訊，請參閱<bpt id="p1">[</bpt>處理和引發事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.MaximizedBoundsChanged">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">下列程式碼範例示範如何使用這個成員。</target>       </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.MaximizedBoundsChanged">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.MaximizedBoundsChanged&gt;</ph> event.</source>
          <target state="translated">在範例中，事件處理常式會報告一次<ph id="ph1">&lt;xref:System.Windows.Forms.Form.MaximizedBoundsChanged&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.MaximizedBoundsChanged">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">此報表可協助您了解事件發生的時機，並可協助您偵錯。</target>       </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.MaximizedBoundsChanged">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">若要報告多個事件或事件經常發生，請考慮更換<ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph>與<ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph>或將訊息附加到多行<ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.MaximizedBoundsChanged">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> named <ph id="ph2">`Form1`</ph>.</source>
          <target state="translated">若要執行範例程式碼，將它貼到包含類型的執行個體的專案<ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>名為<ph id="ph2">`Form1`</ph>。</target>       </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.MaximizedBoundsChanged">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.MaximizedBoundsChanged&gt;</ph> event.</source>
          <target state="translated">請確定事件處理常式關聯<ph id="ph1">&lt;xref:System.Windows.Forms.Form.MaximizedBoundsChanged&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.MaximumSize">
          <source>Gets the maximum size the form can be resized to.</source>
          <target state="translated">取得表單所能調整的大小上限。</target>       </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MaximumSize">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Size" /&gt;</ph> that represents the maximum size for the form.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Size" /&gt;</ph>，代表表單的大小上限。</target>       </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MaximumSize">
          <source>This property enables you to limit the size of a form to a specified maximum size.</source>
          <target state="translated">這個屬性可讓您限制大小的表單，以指定的最大大小。</target>       </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MaximumSize">
          <source>You can use this feature when displaying multiple windows at the same time, to ensure that a single window does not cause other windows to be hidden.</source>
          <target state="translated">可以使用這項功能在相同的時間，顯示多個視窗時，若要確認的單一視窗不會隱藏其他視窗。</target>       </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MaximumSize">
          <source>If this property is set to a <ph id="ph1">&lt;xref:System.Drawing.Size&gt;</ph> object that is 0 in height and 0 in width, the form will have no maximum size beyond the limits set by Windows.</source>
          <target state="translated">如果這個屬性設定為<ph id="ph1">&lt;xref:System.Drawing.Size&gt;</ph>是 0 的高度和寬度，表單中的為 0 的物件會有沒有大小上限超過 Windows 所設定的限制。</target>       </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MaximumSize">
          <source>The following code example demonstrates setting the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.MaximumSize%2A&gt;</ph> property.</source>
          <target state="translated">下列程式碼範例示範如何設定<ph id="ph1">&lt;xref:System.Windows.Forms.Form.MaximumSize%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.MaximumSize">
          <source>The values of the height or width within the <ph id="ph1">&lt;see cref="T:System.Drawing.Size" /&gt;</ph> object are less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Size" /&gt;</ph> 物件內的高度或寬度值小於零。</target>       </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Form.MaximumSizeChanged">
          <source>Occurs when the value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Form.MaximumSize" /&gt;</ph> property has changed.</source>
          <target state="translated">發生於 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Form.MaximumSize" /&gt;</ph> 屬性的值已變更時。</target>       </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.MaximumSizeChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">如需處理事件的詳細資訊，請參閱<bpt id="p1">[</bpt>處理和引發事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.MaximumSizeChanged">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">下列程式碼範例示範如何使用這個成員。</target>       </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.MaximumSizeChanged">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.MaximumSizeChanged&gt;</ph> event.</source>
          <target state="translated">在範例中，事件處理常式會報告一次<ph id="ph1">&lt;xref:System.Windows.Forms.Form.MaximumSizeChanged&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.MaximumSizeChanged">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">此報表可協助您了解事件發生的時機，並可協助您偵錯。</target>       </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.MaximumSizeChanged">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">若要報告多個事件或事件經常發生，請考慮更換<ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph>與<ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph>或將訊息附加到多行<ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.MaximumSizeChanged">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> named <ph id="ph2">`Form1`</ph>.</source>
          <target state="translated">若要執行範例程式碼，將它貼到包含類型的執行個體的專案<ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>名為<ph id="ph2">`Form1`</ph>。</target>       </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.MaximumSizeChanged">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.MaximumSizeChanged&gt;</ph> event.</source>
          <target state="translated">請確定事件處理常式關聯<ph id="ph1">&lt;xref:System.Windows.Forms.Form.MaximumSizeChanged&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Form.MdiChildActivate">
          <source>Occurs when a multiple-document interface (MDI) child form is activated or closed within an MDI application.</source>
          <target state="translated">發生於多重文件介面 (MDI) 子表單在 MDI 應用程式內啟動或關閉時。</target>       </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.MdiChildActivate">
          <source>You can use this event to perform tasks such as updating the contents of the MDI child form and changing the menu options available in the MDI parent form based on the status of the MDI child form that is activated.</source>
          <target state="translated">您可以使用這個事件來執行工作，例如更新的 MDI 子表單的內容和變更的功能表選項，可用在 MDI 父表單中的 MDI 子表單，就啟動狀態。</target>       </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.MdiChildActivate">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">如需處理事件的詳細資訊，請參閱<bpt id="p1">[</bpt>處理和引發事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.MdiChildActivate">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">下列程式碼範例示範如何使用這個成員。</target>       </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.MdiChildActivate">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.MdiChildActivate&gt;</ph> event.</source>
          <target state="translated">在範例中，事件處理常式會報告一次<ph id="ph1">&lt;xref:System.Windows.Forms.Form.MdiChildActivate&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.MdiChildActivate">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">此報表可協助您了解事件發生的時機，並可協助您偵錯。</target>       </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.MdiChildActivate">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">若要報告多個事件或事件經常發生，請考慮更換<ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph>與<ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph>或將訊息附加到多行<ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.MdiChildActivate">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> named <ph id="ph2">`Form1`</ph>.</source>
          <target state="translated">若要執行範例程式碼，將它貼到包含類型的執行個體的專案<ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>名為<ph id="ph2">`Form1`</ph>。</target>       </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.MdiChildActivate">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.MdiChildActivate&gt;</ph> event.</source>
          <target state="translated">請確定事件處理常式關聯<ph id="ph1">&lt;xref:System.Windows.Forms.Form.MdiChildActivate&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.MdiChildren">
          <source>Gets an array of forms that represent the multiple-document interface (MDI) child forms that are parented to this form.</source>
          <target state="translated">取得表單陣列，表示身為這個表單父代的多重文件介面 (MDI) 子表單。</target>       </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MdiChildren">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph> objects, each of which identifies one of this form's MDI child forms.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph> 物件的陣列，每個物件會各自識別這個表單的其中一個 MDI 子表單。</target>       </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MdiChildren">
          <source>This property allows you to obtain references to all the MDI child forms currently opened in an MDI parent form.</source>
          <target state="translated">這個屬性可讓您取得目前已開啟 MDI 父表單中的所有 MDI 子表單的參考。</target>       </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MdiChildren">
          <source>To create an MDI child form, assign the <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> that will be the MDI parent form to the <ph id="ph2">&lt;xref:System.Windows.Forms.Form.MdiParent%2A&gt;</ph> property of the child form.</source>
          <target state="translated">若要建立的 MDI 子表單，指派<ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>將會是 MDI 父表單的<ph id="ph2">&lt;xref:System.Windows.Forms.Form.MdiParent%2A&gt;</ph>子表單的屬性。</target>       </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MdiChildren">
          <source>You can use this property to loop through all the MDI child forms to perform operations such as saving data to a database when the MDI parent form closes or to update fields on the child forms based on actions performed in your application.</source>
          <target state="translated">您可以使用這個屬性來循環所有 MDI 子表單來執行作業，例如在 MDI 父表單關閉時，將資料儲存至資料庫或更新您的應用程式中執行的動作為基礎的子表單上的欄位。</target>       </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MdiChildren">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.MdiChildren%2A&gt;</ph> property to iterate through the list of MDI child forms and add a <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> control to each.</source>
          <target state="translated">下列程式碼範例示範如何使用<ph id="ph1">&lt;xref:System.Windows.Forms.Form.MdiChildren%2A&gt;</ph>屬性來逐一查看清單的 MDI 子表單，並加入<ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph>給每個控制項。</target>       </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.MdiParent">
          <source>Gets or sets the current multiple-document interface (MDI) parent form of this form.</source>
          <target state="translated">取得或設定這個表單目前的多重文件介面 (MDI) 父表單。</target>       </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MdiParent">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph> that represents the MDI parent form.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph>，代表 MDI 父表單。</target>       </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MdiParent">
          <source>To create an MDI child form, assign the <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> that will be the MDI parent form to the <ph id="ph2">&lt;xref:System.Windows.Forms.Form.MdiParent%2A&gt;</ph> property of the child form.</source>
          <target state="translated">若要建立的 MDI 子表單，指派<ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>將會是 MDI 父表單的<ph id="ph2">&lt;xref:System.Windows.Forms.Form.MdiParent%2A&gt;</ph>子表單的屬性。</target>       </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MdiParent">
          <source>You can use this property from an MDI child form to obtain global information that all child forms need or to invoke methods that perform actions to all child forms.</source>
          <target state="translated">以取得需要所有的子表單的全域資訊，或叫用方法會執行所有的子表單的動作，您可以使用這個屬性，從 MDI 子表單。</target>       </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MdiParent">
          <source>If there are two <ph id="ph1">&lt;xref:System.Windows.Forms.MenuStrip&gt;</ph> controls on an MDI child form, setting <ph id="ph2">&lt;xref:System.Windows.Forms.Form.IsMdiContainer%2A&gt;</ph> to <ph id="ph3">`true`</ph> for the parent form merges the contents of only one of the <ph id="ph4">&lt;xref:System.Windows.Forms.MenuStrip&gt;</ph> controls.</source>
          <target state="translated">如果有兩個<ph id="ph1">&lt;xref:System.Windows.Forms.MenuStrip&gt;</ph>上設定的 MDI 子表單的控制項<ph id="ph2">&lt;xref:System.Windows.Forms.Form.IsMdiContainer%2A&gt;</ph>至<ph id="ph3">`true`</ph>父表單會合併的其中之一的內容<ph id="ph4">&lt;xref:System.Windows.Forms.MenuStrip&gt;</ph>控制項。</target>       </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MdiParent">
          <source>Use <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripManager.Merge%2A&gt;</ph> to merge the contents of additional child <ph id="ph2">&lt;xref:System.Windows.Forms.MenuStrip&gt;</ph> controls on the MDI parent form.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripManager.Merge%2A&gt;</ph>其他子內容合併<ph id="ph2">&lt;xref:System.Windows.Forms.MenuStrip&gt;</ph>MDI 父表單上的控制項。</target>       </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MdiParent">
          <source>The following code example demonstrates how to create child forms in an MDI application.</source>
          <target state="translated">下列程式碼範例示範如何在 MDI 應用程式中建立子表單。</target>       </trans-unit>
        <trans-unit id="677" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MdiParent">
          <source>The example code creates a form with unique text to identify the child form.</source>
          <target state="translated">範例程式碼會建立具有唯一的文字，以識別子表單的表單。</target>       </trans-unit>
        <trans-unit id="678" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MdiParent">
          <source>The example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.MdiParent%2A&gt;</ph> property to specify that a form is a child form.</source>
          <target state="translated">此範例會使用<ph id="ph1">&lt;xref:System.Windows.Forms.Form.MdiParent%2A&gt;</ph>屬性可指定表單是子表單。</target>       </trans-unit>
        <trans-unit id="679" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MdiParent">
          <source>This example requires that the code in the example is called from a form that has its <ph id="ph1">&lt;xref:System.Windows.Forms.Form.IsMdiContainer%2A&gt;</ph> property set to <ph id="ph2">`true`</ph> and that the form has a private class level integer variable named <ph id="ph3">`childCount`</ph>.</source>
          <target state="translated">這個範例需要在範例中的程式碼會呼叫從表單具有其<ph id="ph1">&lt;xref:System.Windows.Forms.Form.IsMdiContainer%2A&gt;</ph>屬性設定為<ph id="ph2">`true`</ph>和表單具有名為的私用類別層級的整數變數<ph id="ph3">`childCount`</ph>。</target>       </trans-unit>
        <trans-unit id="680" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.MdiParent">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph> assigned to this property is not marked as an MDI container.</source>
          <target state="translated">指派給這個屬性的 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph> 並未標記為 MDI 容器。</target>       </trans-unit>
        <trans-unit id="681" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.MdiParent">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="682" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.MdiParent">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph> assigned to this property is both a child and an MDI container form.</source>
          <target state="translated">指派給這個屬性的 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph> 既是子表單也是 MDI 容器表單。</target>       </trans-unit>
        <trans-unit id="683" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.MdiParent">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="684" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.MdiParent">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph> assigned to this property is located on a different thread.</source>
          <target state="translated">指派給這個屬性的 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph> 位於不同的執行緒。</target>       </trans-unit>
        <trans-unit id="685" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MdiParent">
          <source>for requesting a form.</source>
          <target state="translated">要求的表單。</target>       </trans-unit>
        <trans-unit id="686" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MdiParent">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph>.</source>
          <target state="translated">關聯的列舉型別：<ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="687" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.Menu">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MainMenu" /&gt;</ph> that is displayed in the form.</source>
          <target state="translated">取得或設定顯示在表單中的 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MainMenu" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="688" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Menu">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MainMenu" /&gt;</ph> that represents the menu to display in the form.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.MainMenu" /&gt;</ph>，代表要顯示在表單中的功能表。</target>       </trans-unit>
        <trans-unit id="689" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Menu">
          <source>You can use this property to switch between complete menu sets at run time.</source>
          <target state="translated">您可以使用這個屬性在執行階段完成功能表組之間切換。</target>       </trans-unit>
        <trans-unit id="690" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Menu">
          <source>For example, you can define one <ph id="ph1">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph> to be displayed when your multiple-document interface (MDI) form has no active MDI child forms and another <ph id="ph2">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph> to display when a child window is displayed.</source>
          <target state="translated">例如，您可以定義一個<ph id="ph1">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph>多重文件介面 (MDI) 表單有任何作用中的 MDI 子表單，而另一個時所要顯示<ph id="ph2">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph>時子視窗隨即顯示。</target>       </trans-unit>
        <trans-unit id="691" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Menu">
          <source>You can also use a different <ph id="ph1">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph> when specific conditions exist in your application that require displaying a different menu set.</source>
          <target state="translated">您也可以使用不同<ph id="ph1">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph>當特定條件存在於您需要顯示另一個功能表設定的應用程式。</target>       </trans-unit>
        <trans-unit id="692" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Menu">
          <source>The following code example creates a <ph id="ph1">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph>, assigns two <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> objects to the <ph id="ph3">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph> and binds it to a form.</source>
          <target state="translated">下列程式碼範例會建立<ph id="ph1">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph>，會指派兩個<ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph>物件加入至<ph id="ph3">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph>並將它連結至表單。</target>       </trans-unit>
        <trans-unit id="693" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Menu">
          <source>This example requires that you have a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> created that is named <ph id="ph2">`Form1`</ph>.</source>
          <target state="translated">這個範例需要您有<ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>建立名為<ph id="ph2">`Form1`</ph>。</target>       </trans-unit>
        <trans-unit id="694" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Form.MenuComplete">
          <source>Occurs when the menu of a form loses focus.</source>
          <target state="translated">發生於表單的功能表失去焦點時。</target>       </trans-unit>
        <trans-unit id="695" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.MenuComplete">
          <source>This event is raised when you click on any menu item in a menu that results in a command being performed and the menu losing focus.</source>
          <target state="translated">當您按一下功能表中的任何功能表項目，導致正在執行的命令和功能表失去焦點時，會引發這個事件。</target>       </trans-unit>
        <trans-unit id="696" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.MenuComplete">
          <source>You can use this event to perform tasks such as updating the text of a <ph id="ph1">&lt;xref:System.Windows.Forms.StatusBar&gt;</ph> control or enabling and disabling buttons on a <ph id="ph2">&lt;xref:System.Windows.Forms.ToolBar&gt;</ph>.</source>
          <target state="translated">您可以使用這個事件來執行工作，例如更新的文字<ph id="ph1">&lt;xref:System.Windows.Forms.StatusBar&gt;</ph>控制項或啟用和停用按鈕上<ph id="ph2">&lt;xref:System.Windows.Forms.ToolBar&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="697" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.MenuComplete">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">如需處理事件的詳細資訊，請參閱<bpt id="p1">[</bpt>處理和引發事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="698" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.MenuComplete">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">下列程式碼範例示範如何使用這個成員。</target>       </trans-unit>
        <trans-unit id="699" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.MenuComplete">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.MenuComplete&gt;</ph> event.</source>
          <target state="translated">在範例中，事件處理常式會報告一次<ph id="ph1">&lt;xref:System.Windows.Forms.Form.MenuComplete&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="700" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.MenuComplete">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">此報表可協助您了解事件發生的時機，並可協助您偵錯。</target>       </trans-unit>
        <trans-unit id="701" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.MenuComplete">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">若要報告多個事件或事件經常發生，請考慮更換<ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph>與<ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph>或將訊息附加到多行<ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="702" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.MenuComplete">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> named <ph id="ph2">`Form1`</ph>.</source>
          <target state="translated">若要執行範例程式碼，將它貼到包含類型的執行個體的專案<ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>名為<ph id="ph2">`Form1`</ph>。</target>       </trans-unit>
        <trans-unit id="703" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.MenuComplete">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.MenuComplete&gt;</ph> event.</source>
          <target state="translated">請確定事件處理常式關聯<ph id="ph1">&lt;xref:System.Windows.Forms.Form.MenuComplete&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="704" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Form.MenuStart">
          <source>Occurs when the menu of a form receives focus.</source>
          <target state="translated">發生於表單的功能表接收焦點時。</target>       </trans-unit>
        <trans-unit id="705" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.MenuStart">
          <source>This event is raised when any menu item in the menu is clicked by the user.</source>
          <target state="translated">當使用者按下功能表中的任何功能表項目時，會引發這個事件。</target>       </trans-unit>
        <trans-unit id="706" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.MenuStart">
          <source>You can use this event to perform tasks such as enabling and disabling controls on the form that should not be accessed by the user when the menus are being accessed.</source>
          <target state="translated">若要執行工作，例如啟用和停用不應該能存取使用者正在存取功能表時，表單上的控制項，您可以使用此事件。</target>       </trans-unit>
        <trans-unit id="707" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.MenuStart">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">如需處理事件的詳細資訊，請參閱<bpt id="p1">[</bpt>處理和引發事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="708" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.MenuStart">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">下列程式碼範例示範如何使用這個成員。</target>       </trans-unit>
        <trans-unit id="709" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.MenuStart">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.MenuStart&gt;</ph> event.</source>
          <target state="translated">在範例中，事件處理常式會報告一次<ph id="ph1">&lt;xref:System.Windows.Forms.Form.MenuStart&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="710" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.MenuStart">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">此報表可協助您了解事件發生的時機，並可協助您偵錯。</target>       </trans-unit>
        <trans-unit id="711" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.MenuStart">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">若要報告多個事件或事件經常發生，請考慮更換<ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph>與<ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph>或將訊息附加到多行<ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="712" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.MenuStart">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> named <ph id="ph2">`Form1`</ph>.</source>
          <target state="translated">若要執行範例程式碼，將它貼到包含類型的執行個體的專案<ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>名為<ph id="ph2">`Form1`</ph>。</target>       </trans-unit>
        <trans-unit id="713" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.MenuStart">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.MenuStart&gt;</ph> event.</source>
          <target state="translated">請確定事件處理常式關聯<ph id="ph1">&lt;xref:System.Windows.Forms.Form.MenuStart&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="714" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.MergedMenu">
          <source>Gets the merged menu for the form.</source>
          <target state="translated">取得表單的合併功能表。</target>       </trans-unit>
        <trans-unit id="715" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MergedMenu">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.MainMenu" /&gt;</ph> that represents the merged menu of the form.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.MainMenu" /&gt;</ph>，代表表單的合併功能表。</target>       </trans-unit>
        <trans-unit id="716" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MergedMenu">
          <source>This property is primarily used when the form is a multiple-document interface (MDI) child form that merges its menu with its parent form's menu.</source>
          <target state="translated">這個屬性主要使用表單時將其功能表與父表單的功能表合併為多重文件介面 (MDI) 子表單。</target>       </trans-unit>
        <trans-unit id="717" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MergedMenu">
          <source>You can use this property to obtain the current menu structure in an MDI application to make changes or additions to the menu structure.</source>
          <target state="translated">若要取得目前功能表結構 MDI 應用程式進行變更或新增至功能表結構中的，您可以使用這個屬性。</target>       </trans-unit>
        <trans-unit id="718" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MergedMenu">
          <source>To obtain the nonmerged <ph id="ph1">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph> assigned to a form, use the <ph id="ph2">&lt;xref:System.Windows.Forms.Form.Menu%2A&gt;</ph> property.</source>
          <target state="translated">若要取得 nonmerged<ph id="ph1">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph>指派給表單時，使用<ph id="ph2">&lt;xref:System.Windows.Forms.Form.Menu%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="719" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.MinimizeBox">
          <source>Gets or sets a value indicating whether the <bpt id="p1">**</bpt>Minimize<ept id="p1">**</ept> button is displayed in the caption bar of the form.</source>
          <target state="translated">取得或設定值，表示是否要在表單的標題列中顯示 [最小化] 按鈕。</target>       </trans-unit>
        <trans-unit id="720" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MinimizeBox">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to display a <bpt id="p1">**</bpt>Minimize<ept id="p1">**</ept> button for the form; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> 若要顯示<bpt id="p1">**</bpt>最小化<ept id="p1">**</ept>按鈕的表單，否則<ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="721" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MinimizeBox">
          <source>The default is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">預設值為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="722" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MinimizeBox">
          <source>A <bpt id="p1">**</bpt>Minimize<ept id="p1">**</ept> button enables users to minimize a window to an icon.</source>
          <target state="translated">A<bpt id="p1">**</bpt>最小化<ept id="p1">**</ept>按鈕可讓使用者以最小化視窗的圖示。</target>       </trans-unit>
        <trans-unit id="723" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MinimizeBox">
          <source>To display a <bpt id="p1">**</bpt>Minimize<ept id="p1">**</ept> button, the value of the form's <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ControlBox&gt;</ph> property must be <ph id="ph2">`true`</ph>, its default value.</source>
          <target state="translated">若要顯示<bpt id="p1">**</bpt>最小化<ept id="p1">**</ept>按鈕，在表單值<ph id="ph1">&lt;xref:System.Windows.Forms.Form.ControlBox&gt;</ph>屬性必須是<ph id="ph2">`true`</ph>，其預設值。</target>       </trans-unit>
        <trans-unit id="724" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MinimizeBox">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ControlBox&gt;</ph> property determines whether the upper-right corner of the caption bar contains controls such as a maximize button, a minimize button, a help button, and a close button.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.ControlBox&gt;</ph>屬性決定的標題列右上角是否包含控制項，例如最大化按鈕、 最小化按鈕、 [說明] 按鈕和 [關閉] 按鈕。</target>       </trans-unit>
        <trans-unit id="725" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MinimizeBox">
          <source>In addition, you must also set the form's <ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormBorderStyle%2A&gt;</ph> property to <ph id="ph2">&lt;xref:System.Windows.Forms.FormBorderStyle.FixedSingle?displayProperty=nameWithType&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.FormBorderStyle.Sizable?displayProperty=nameWithType&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.FormBorderStyle.Fixed3D?displayProperty=nameWithType&gt;</ph>, or <ph id="ph5">&lt;xref:System.Windows.Forms.FormBorderStyle.FixedDialog?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">此外，您也必須設定表單的<ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormBorderStyle%2A&gt;</ph>屬性<ph id="ph2">&lt;xref:System.Windows.Forms.FormBorderStyle.FixedSingle?displayProperty=nameWithType&gt;</ph>， <ph id="ph3">&lt;xref:System.Windows.Forms.FormBorderStyle.Sizable?displayProperty=nameWithType&gt;</ph>， <ph id="ph4">&lt;xref:System.Windows.Forms.FormBorderStyle.Fixed3D?displayProperty=nameWithType&gt;</ph>，或<ph id="ph5">&lt;xref:System.Windows.Forms.FormBorderStyle.FixedDialog?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="726" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MinimizeBox">
          <source>Minimizing a form at run time generates a <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Resize&gt;</ph> event.</source>
          <target state="translated">減少表單在執行階段會產生<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Resize&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="727" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MinimizeBox">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.WindowState%2A&gt;</ph> property reflects the current state of the window.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.WindowState%2A&gt;</ph>屬性會反映在視窗的目前狀態。</target>       </trans-unit>
        <trans-unit id="728" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MinimizeBox">
          <source>If you set the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.WindowState%2A&gt;</ph> property to <ph id="ph2">`FormWindowState.Minimized`</ph>, the form is minimized independently of whatever settings are in effect for the <ph id="ph3">&lt;xref:System.Windows.Forms.Form.MinimizeBox%2A&gt;</ph> and <ph id="ph4">&lt;xref:System.Windows.Forms.Form.FormBorderStyle%2A&gt;</ph> properties.</source>
          <target state="translated">如果您設定<ph id="ph1">&lt;xref:System.Windows.Forms.Form.WindowState%2A&gt;</ph>屬性<ph id="ph2">`FormWindowState.Minimized`</ph>，表單為最小化獨立於任何設定，則實際上<ph id="ph3">&lt;xref:System.Windows.Forms.Form.MinimizeBox%2A&gt;</ph>和<ph id="ph4">&lt;xref:System.Windows.Forms.Form.FormBorderStyle%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="729" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MinimizeBox">
          <source>The following code example creates a new instance of a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> and calls the <ph id="ph2">&lt;xref:System.Windows.Forms.Form.ShowDialog%2A&gt;</ph> method to display the form as a dialog box.</source>
          <target state="translated">下列程式碼範例會建立的新執行個體<ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>呼叫<ph id="ph2">&lt;xref:System.Windows.Forms.Form.ShowDialog%2A&gt;</ph>要將表單顯示為對話方塊的方法。</target>       </trans-unit>
        <trans-unit id="730" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MinimizeBox">
          <source>The example sets the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormBorderStyle%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Form.AcceptButton%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Form.CancelButton%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.Form.MinimizeBox%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.Form.MaximizeBox%2A&gt;</ph>, and <ph id="ph6">&lt;xref:System.Windows.Forms.Form.StartPosition%2A&gt;</ph> properties to change the appearance and functionality of the form to a dialog box.</source>
          <target state="translated">範例會設定<ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormBorderStyle%2A&gt;</ph>， <ph id="ph2">&lt;xref:System.Windows.Forms.Form.AcceptButton%2A&gt;</ph>， <ph id="ph3">&lt;xref:System.Windows.Forms.Form.CancelButton%2A&gt;</ph>， <ph id="ph4">&lt;xref:System.Windows.Forms.Form.MinimizeBox%2A&gt;</ph>， <ph id="ph5">&lt;xref:System.Windows.Forms.Form.MaximizeBox%2A&gt;</ph>，和<ph id="ph6">&lt;xref:System.Windows.Forms.Form.StartPosition%2A&gt;</ph>內容 對話方塊中變更的外觀和表單的功能。</target>       </trans-unit>
        <trans-unit id="731" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MinimizeBox">
          <source>The example also uses the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ControlCollection.Add%2A&gt;</ph> method of the form's <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Controls%2A&gt;</ph> collection to add two <ph id="ph3">&lt;xref:System.Windows.Forms.Button&gt;</ph> controls.</source>
          <target state="translated">此範例也會使用<ph id="ph1">&lt;xref:System.Windows.Forms.Form.ControlCollection.Add%2A&gt;</ph>形式的方法<ph id="ph2">&lt;xref:System.Windows.Forms.Control.Controls%2A&gt;</ph>要加入兩個集合<ph id="ph3">&lt;xref:System.Windows.Forms.Button&gt;</ph>控制項。</target>       </trans-unit>
        <trans-unit id="732" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MinimizeBox">
          <source>The example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.HelpButton%2A&gt;</ph> property to display a help button in the caption bar of the dialog box.</source>
          <target state="translated">此範例會使用<ph id="ph1">&lt;xref:System.Windows.Forms.Form.HelpButton%2A&gt;</ph>屬性 對話方塊的標題列中顯示 說明 按鈕。</target>       </trans-unit>
        <trans-unit id="733" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.MinimumSize">
          <source>Gets or sets the minimum size the form can be resized to.</source>
          <target state="translated">取得或設定表單所能調整的大小下限。</target>       </trans-unit>
        <trans-unit id="734" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MinimumSize">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Size" /&gt;</ph> that represents the minimum size for the form.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Size" /&gt;</ph>，代表表單的大小下限。</target>       </trans-unit>
        <trans-unit id="735" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MinimumSize">
          <source>This property enables you to limit the size of a form to a specified minimum size.</source>
          <target state="translated">這個屬性可讓您限制大小的表單，以指定的最小大小。</target>       </trans-unit>
        <trans-unit id="736" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MinimumSize">
          <source>You can use this feature to prevent a user from sizing a window to an undesirable size.</source>
          <target state="translated">您可以使用這項功能，以防止使用者調整視窗的非預期的大小。</target>       </trans-unit>
        <trans-unit id="737" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.MinimumSize">
          <source>If this property is set to a <ph id="ph1">&lt;xref:System.Drawing.Size&gt;</ph> object that is 0 in height and 0 in width, the form will have no minimum size beyond the limits set by Windows.</source>
          <target state="translated">如果這個屬性設定為<ph id="ph1">&lt;xref:System.Drawing.Size&gt;</ph>是 0 的高度和寬度，表單中的為 0 的物件會有沒有最小大小超出 Windows 所設定的限制。</target>       </trans-unit>
        <trans-unit id="738" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.MinimumSize">
          <source>The values of the height or width within the <ph id="ph1">&lt;see cref="T:System.Drawing.Size" /&gt;</ph> object are less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Size" /&gt;</ph> 物件內的高度或寬度值小於零。</target>       </trans-unit>
        <trans-unit id="739" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Form.MinimumSizeChanged">
          <source>Occurs when the value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Form.MinimumSize" /&gt;</ph> property has changed.</source>
          <target state="translated">發生於 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Form.MinimumSize" /&gt;</ph> 屬性的值已變更時。</target>       </trans-unit>
        <trans-unit id="740" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.MinimumSizeChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">如需處理事件的詳細資訊，請參閱<bpt id="p1">[</bpt>處理和引發事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="741" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.MinimumSizeChanged">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">下列程式碼範例示範如何使用這個成員。</target>       </trans-unit>
        <trans-unit id="742" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.MinimumSizeChanged">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.MinimumSizeChanged&gt;</ph> event.</source>
          <target state="translated">在範例中，事件處理常式會報告一次<ph id="ph1">&lt;xref:System.Windows.Forms.Form.MinimumSizeChanged&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="743" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.MinimumSizeChanged">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">此報表可協助您了解事件發生的時機，並可協助您偵錯。</target>       </trans-unit>
        <trans-unit id="744" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.MinimumSizeChanged">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">若要報告多個事件或事件經常發生，請考慮更換<ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph>與<ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph>或將訊息附加到多行<ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="745" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.MinimumSizeChanged">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> named <ph id="ph2">`Form1`</ph>.</source>
          <target state="translated">若要執行範例程式碼，將它貼到包含類型的執行個體的專案<ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>名為<ph id="ph2">`Form1`</ph>。</target>       </trans-unit>
        <trans-unit id="746" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.MinimumSizeChanged">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.MinimumSizeChanged&gt;</ph> event.</source>
          <target state="translated">請確定事件處理常式關聯<ph id="ph1">&lt;xref:System.Windows.Forms.Form.MinimumSizeChanged&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="747" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.Modal">
          <source>Gets a value indicating whether this form is displayed modally.</source>
          <target state="translated">取得值，指出表單是否顯示為強制回應。</target>       </trans-unit>
        <trans-unit id="748" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Modal">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the form is displayed modally; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果表單要顯示為強制回應，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="749" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Modal">
          <source>When a form is displayed modally, no input (keyboard or mouse click) can occur except to objects on the modal form.</source>
          <target state="translated">當表單顯示為強制回應時，可能除了強制回應表單上的物件會不發生任何輸入 （鍵盤或滑鼠按一下）。</target>       </trans-unit>
        <trans-unit id="750" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Modal">
          <source>The program must hide or close a modal form (usually in response to some user action) before input to another form can occur.</source>
          <target state="translated">程式必須隱藏或關閉強制回應表單 （通常是在某些使用者動作的回應） 之前為另一種形式的輸入可能會發生。</target>       </trans-unit>
        <trans-unit id="751" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Modal">
          <source>Forms that are displayed modally are typically used as dialog boxes in an application.</source>
          <target state="translated">表單顯示為強制回應，通常會作為應用程式中的對話方塊。</target>       </trans-unit>
        <trans-unit id="752" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Modal">
          <source>You can use this property to determine whether a form that you have obtained from a method or property has been displayed modally.</source>
          <target state="translated">您可以使用這個屬性來判斷您已取得的方法或屬性的形式顯示是否為強制回應。</target>       </trans-unit>
        <trans-unit id="753" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Modal">
          <source>To display a form modally use the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ShowDialog%2A&gt;</ph> method.</source>
          <target state="translated">若要顯示表單為強制回應使用<ph id="ph1">&lt;xref:System.Windows.Forms.Form.ShowDialog%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="754" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Modal">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Modal%2A&gt;</ph> property to determine if a form is displayed as a modal form.</source>
          <target state="translated">下列程式碼範例使用<ph id="ph1">&lt;xref:System.Windows.Forms.Form.Modal%2A&gt;</ph>屬性來判斷是否表單會顯示為強制回應表單。</target>       </trans-unit>
        <trans-unit id="755" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Modal">
          <source>If it is not the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormBorderStyle%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Form.TopLevel%2A&gt;</ph> properties are changed to make the form a non-top-level form with a tool window border.</source>
          <target state="translated">如果不是<ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormBorderStyle%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Windows.Forms.Form.TopLevel%2A&gt;</ph>屬性已變更，讓工具視窗的框線與非上層表單的表單。</target>       </trans-unit>
        <trans-unit id="756" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnActivated(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">包含事件資料的 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="757" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnActivated(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Form.Activated" /&gt;</ph> event.</source>
          <target state="translated">引發 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Form.Activated" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="758" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnActivated(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">引發事件會透過委派叫用此事件處理常式。</target>       </trans-unit>
        <trans-unit id="759" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnActivated(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>處理和引發事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="760" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnActivated(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnActivated%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnActivated%2A&gt;</ph> 方法也允許衍生類別處理事件，而不用附加委派。</target>       </trans-unit>
        <trans-unit id="761" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnActivated(System.EventArgs)">
          <source>Overriding this method is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">覆寫這個方法是處理衍生類別中的事件的慣用的技巧。</target>       </trans-unit>
        <trans-unit id="762" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnActivated(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Form.OnActivated(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Form.OnActivated(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">當在衍生類別中覆寫 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Form.OnActivated(System.EventArgs)" /&gt;</ph> 時，請確定呼叫基底類別的 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Form.OnActivated(System.EventArgs)" /&gt;</ph> 方法，使已註冊的委派能接收到事件。</target>       </trans-unit>
        <trans-unit id="763" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnBackgroundImageChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the data.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>，包含資料。</target>       </trans-unit>
        <trans-unit id="764" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnBackgroundImageChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.BackgroundImageChanged" /&gt;</ph> event.</source>
          <target state="translated">引發 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.BackgroundImageChanged" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="765" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnBackgroundImageChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">引發事件會透過委派叫用此事件處理常式。</target>       </trans-unit>
        <trans-unit id="766" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnBackgroundImageChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>處理和引發事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="767" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnBackgroundImageChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnBackgroundImageChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnBackgroundImageChanged%2A&gt;</ph> 方法也允許衍生類別處理事件，而不用附加委派。</target>       </trans-unit>
        <trans-unit id="768" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnBackgroundImageChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">這是在衍生類別中處理事件的慣用技巧。</target>       </trans-unit>
        <trans-unit id="769" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnBackgroundImageChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Form.OnBackgroundImageChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Form.OnBackgroundImageChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">當在衍生類別中覆寫 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Form.OnBackgroundImageChanged(System.EventArgs)" /&gt;</ph> 時，請確定呼叫基底類別的 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Form.OnBackgroundImageChanged(System.EventArgs)" /&gt;</ph> 方法，使已註冊的委派能接收到事件。</target>       </trans-unit>
        <trans-unit id="770" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnBackgroundImageLayoutChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">包含事件資料的 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="771" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnBackgroundImageLayoutChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.BackgroundImageLayoutChanged" /&gt;</ph> event.</source>
          <target state="translated">引發 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.BackgroundImageLayoutChanged" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="772" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnBackgroundImageLayoutChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">引發事件會透過委派叫用此事件處理常式。</target>       </trans-unit>
        <trans-unit id="773" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnBackgroundImageLayoutChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>處理和引發事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="774" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnBackgroundImageLayoutChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnBackgroundImageLayoutChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnBackgroundImageLayoutChanged%2A&gt;</ph> 方法也允許衍生類別處理事件，而不用附加委派。</target>       </trans-unit>
        <trans-unit id="775" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnBackgroundImageLayoutChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">這是在衍生類別中處理事件的慣用技巧。</target>       </trans-unit>
        <trans-unit id="776" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnBackgroundImageLayoutChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Form.OnBackgroundImageLayoutChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Form.OnBackgroundImageLayoutChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">當在衍生類別中覆寫 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Form.OnBackgroundImageLayoutChanged(System.EventArgs)" /&gt;</ph> 時，請確定呼叫基底類別的 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Form.OnBackgroundImageLayoutChanged(System.EventArgs)" /&gt;</ph> 方法，使已註冊的委派能接收到事件。</target>       </trans-unit>
        <trans-unit id="777" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnClosed(System.EventArgs)">
          <source>The <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">包含事件資料的 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="778" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnClosed(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Form.Closed" /&gt;</ph> event.</source>
          <target state="translated">引發 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Form.Closed" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="779" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnClosed(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnClosed%2A&gt;</ph> method is obsolete in the .NET Framework version 2.0; use the <ph id="ph2">&lt;xref:System.Windows.Forms.Form.OnFormClosed%2A&gt;</ph> method instead.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnClosed%2A&gt;</ph>方法在.NET Framework 2.0 版本中已過時; 使用<ph id="ph2">&lt;xref:System.Windows.Forms.Form.OnFormClosed%2A&gt;</ph>方法改為。</target>       </trans-unit>
        <trans-unit id="780" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnClosed(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">引發事件會透過委派叫用此事件處理常式。</target>       </trans-unit>
        <trans-unit id="781" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnClosed(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>處理和引發事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="782" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnClosed(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnFormClosed%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnFormClosed%2A&gt;</ph> 方法也允許衍生類別處理事件，而不用附加委派。</target>       </trans-unit>
        <trans-unit id="783" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnClosed(System.EventArgs)">
          <source>Overriding this method is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">覆寫這個方法是處理衍生類別中的事件的慣用的技巧。</target>       </trans-unit>
        <trans-unit id="784" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnClosed(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnClosed%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Form.OnClosing%2A&gt;</ph> methods are not called when the <ph id="ph3">&lt;xref:System.Windows.Forms.Application.Exit%2A?displayProperty=nameWithType&gt;</ph> method is called to exit your application.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnClosed%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Windows.Forms.Form.OnClosing%2A&gt;</ph>方法不會呼叫時<ph id="ph3">&lt;xref:System.Windows.Forms.Application.Exit%2A?displayProperty=nameWithType&gt;</ph>呼叫方法來結束您的應用程式。</target>       </trans-unit>
        <trans-unit id="785" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnClosed(System.EventArgs)">
          <source>If you have validation code in either of these methods that must be executed, you should call the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Close%2A?displayProperty=nameWithType&gt;</ph> method for each open form individually before calling the <ph id="ph2">&lt;xref:System.Windows.Forms.Application.Exit%2A&gt;</ph> method.</source>
          <target state="translated">如果您在其中一種方法，必須執行的驗證程式碼，您應該呼叫<ph id="ph1">&lt;xref:System.Windows.Forms.Form.Close%2A?displayProperty=nameWithType&gt;</ph>方法的每個開啟的表單，然後再呼叫個別<ph id="ph2">&lt;xref:System.Windows.Forms.Application.Exit%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="786" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnClosed(System.EventArgs)">
          <source>The following code example demonstrates how to override the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnClosed%2A&gt;</ph> method in a class derived from <ph id="ph2">&lt;xref:System.Windows.Forms.Form&gt;</ph> .</source>
          <target state="translated">下列程式碼範例示範如何覆寫<ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnClosed%2A&gt;</ph>從衍生類別中的方法<ph id="ph2">&lt;xref:System.Windows.Forms.Form&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="787" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnClosed(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Form.OnClosed(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Form.OnClosed(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">當在衍生類別中覆寫 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Form.OnClosed(System.EventArgs)" /&gt;</ph> 時，請確定呼叫基底類別的 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Form.OnClosed(System.EventArgs)" /&gt;</ph> 方法，使已註冊的委派能接收到事件。</target>       </trans-unit>
        <trans-unit id="788" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnClosing(System.ComponentModel.CancelEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.CancelEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.CancelEventArgs" /&gt;</ph>，其中包含事件資料。</target>       </trans-unit>
        <trans-unit id="789" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnClosing(System.ComponentModel.CancelEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Form.Closing" /&gt;</ph> event.</source>
          <target state="translated">引發 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Form.Closing" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="790" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnClosing(System.ComponentModel.CancelEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnClosing%2A&gt;</ph> method is obsolete in the .NET Framework version 2.0; use the <ph id="ph2">&lt;xref:System.Windows.Forms.Form.OnFormClosing%2A&gt;</ph> method instead.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnClosing%2A&gt;</ph>方法在.NET Framework 2.0 版本中已過時; 使用<ph id="ph2">&lt;xref:System.Windows.Forms.Form.OnFormClosing%2A&gt;</ph>方法改為。</target>       </trans-unit>
        <trans-unit id="791" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnClosing(System.ComponentModel.CancelEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">引發事件會透過委派叫用此事件處理常式。</target>       </trans-unit>
        <trans-unit id="792" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnClosing(System.ComponentModel.CancelEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>處理和引發事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="793" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnClosing(System.ComponentModel.CancelEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnClosing%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnClosing%2A&gt;</ph> 方法也允許衍生類別處理事件，而不用附加委派。</target>       </trans-unit>
        <trans-unit id="794" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnClosing(System.ComponentModel.CancelEventArgs)">
          <source>Overriding this method is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">覆寫這個方法是處理衍生類別中的事件的慣用的技巧。</target>       </trans-unit>
        <trans-unit id="795" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnClosing(System.ComponentModel.CancelEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnClosed%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Form.OnClosing%2A&gt;</ph> methods are not called when the <ph id="ph3">&lt;xref:System.Windows.Forms.Application.Exit%2A?displayProperty=nameWithType&gt;</ph> method is called to exit your application.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnClosed%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Windows.Forms.Form.OnClosing%2A&gt;</ph>方法不會呼叫時<ph id="ph3">&lt;xref:System.Windows.Forms.Application.Exit%2A?displayProperty=nameWithType&gt;</ph>呼叫方法來結束您的應用程式。</target>       </trans-unit>
        <trans-unit id="796" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnClosing(System.ComponentModel.CancelEventArgs)">
          <source>If you have validation code in either of these methods that must be executed, you should call the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Close%2A?displayProperty=nameWithType&gt;</ph> method for each open form individually before calling the <ph id="ph2">&lt;xref:System.Windows.Forms.Application.Exit%2A&gt;</ph> method.</source>
          <target state="translated">如果您在其中一種方法，必須執行的驗證程式碼，您應該呼叫<ph id="ph1">&lt;xref:System.Windows.Forms.Form.Close%2A?displayProperty=nameWithType&gt;</ph>方法的每個開啟的表單，然後再呼叫個別<ph id="ph2">&lt;xref:System.Windows.Forms.Application.Exit%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="797" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnClosing(System.ComponentModel.CancelEventArgs)">
          <source>The following code example uses <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Closing&gt;</ph> to test if the text in a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> has changed.</source>
          <target state="translated">下列程式碼範例使用<ph id="ph1">&lt;xref:System.Windows.Forms.Form.Closing&gt;</ph>測試中的文字<ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>已變更。</target>       </trans-unit>
        <trans-unit id="798" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnClosing(System.ComponentModel.CancelEventArgs)">
          <source>If it has, the user is asked whether to save the changes to a file.</source>
          <target state="translated">如果有，會要求使用者是否要將變更儲存至檔案。</target>       </trans-unit>
        <trans-unit id="799" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnClosing(System.ComponentModel.CancelEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Form.OnClosing(System.ComponentModel.CancelEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Form.OnClosing(System.ComponentModel.CancelEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">當在衍生類別中覆寫 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Form.OnClosing(System.ComponentModel.CancelEventArgs)" /&gt;</ph> 時，請確定呼叫基底類別的 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Form.OnClosing(System.ComponentModel.CancelEventArgs)" /&gt;</ph> 方法，使已註冊的委派能接收到事件。</target>       </trans-unit>
        <trans-unit id="800" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnCreateControl">
          <source>Raises the <ph id="ph1">&lt;see langword="CreateControl" /&gt;</ph> event.</source>
          <target state="translated">引發 <ph id="ph1">&lt;see langword="CreateControl" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="801" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnCreateControl">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">引發事件會透過委派叫用此事件處理常式。</target>       </trans-unit>
        <trans-unit id="802" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnCreateControl">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>處理和引發事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="803" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnCreateControl">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Form.OnCreateControl" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Form.OnCreateControl" /&gt;</ph> method.</source>
          <target state="translated">在覆寫<ph id="ph1">&lt;see cref="M:System.Windows.Forms.Form.OnCreateControl" /&gt;</ph>在衍生類別中，請務必呼叫基底類別的<ph id="ph2">&lt;see cref="M:System.Windows.Forms.Form.OnCreateControl" /&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="804" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnDeactivate(System.EventArgs)">
          <source>The <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">包含事件資料的 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="805" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnDeactivate(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Form.Deactivate" /&gt;</ph> event.</source>
          <target state="translated">引發 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Form.Deactivate" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="806" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnDeactivate(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">引發事件會透過委派叫用此事件處理常式。</target>       </trans-unit>
        <trans-unit id="807" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnDeactivate(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>處理和引發事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="808" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnDeactivate(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnDeactivate%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnDeactivate%2A&gt;</ph> 方法也允許衍生類別處理事件，而不用附加委派。</target>       </trans-unit>
        <trans-unit id="809" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnDeactivate(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">這是在衍生類別中處理事件的慣用技巧。</target>       </trans-unit>
        <trans-unit id="810" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnDeactivate(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Form.OnDeactivate(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Form.OnDeactivate(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">當在衍生類別中覆寫 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Form.OnDeactivate(System.EventArgs)" /&gt;</ph> 時，請確定呼叫基底類別的 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Form.OnDeactivate(System.EventArgs)" /&gt;</ph> 方法，使已註冊的委派能接收到事件。</target>       </trans-unit>
        <trans-unit id="811" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnDpiChanged(System.Windows.Forms.DpiChangedEventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DpiChangedEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">包含事件資料的 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DpiChangedEventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="812" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnDpiChanged(System.Windows.Forms.DpiChangedEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Form.DpiChanged" /&gt;</ph> event.</source>
          <target state="translated">引發 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Form.DpiChanged" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="813" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnEnabledChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">包含事件資料的 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="814" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnEnabledChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.EnabledChanged" /&gt;</ph> event.</source>
          <target state="translated">引發 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.EnabledChanged" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="815" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnEnter(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">包含事件資料的 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="816" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnEnter(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Enter" /&gt;</ph> event.</source>
          <target state="translated">引發 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Enter" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="817" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnEnter(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">引發事件會透過委派叫用此事件處理常式。</target>       </trans-unit>
        <trans-unit id="818" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnEnter(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>處理和引發事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="819" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnEnter(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnEnter%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnEnter%2A&gt;</ph> 方法也允許衍生類別處理事件，而不用附加委派。</target>       </trans-unit>
        <trans-unit id="820" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnEnter(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">這是在衍生類別中處理事件的慣用技巧。</target>       </trans-unit>
        <trans-unit id="821" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnEnter(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Form.OnEnter(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Form.OnEnter(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">當在衍生類別中覆寫 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Form.OnEnter(System.EventArgs)" /&gt;</ph> 時，請確定呼叫基底類別的 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Form.OnEnter(System.EventArgs)" /&gt;</ph> 方法，使已註冊的委派能接收到事件。</target>       </trans-unit>
        <trans-unit id="822" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnFontChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">包含事件資料的 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="823" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnFontChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.FontChanged" /&gt;</ph> event.</source>
          <target state="translated">引發 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.FontChanged" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="824" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnFormClosed(System.Windows.Forms.FormClosedEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.FormClosedEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.FormClosedEventArgs" /&gt;</ph>，其中包含事件資料。</target>       </trans-unit>
        <trans-unit id="825" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnFormClosed(System.Windows.Forms.FormClosedEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Form.FormClosed" /&gt;</ph> event.</source>
          <target state="translated">引發 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Form.FormClosed" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="826" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnFormClosed(System.Windows.Forms.FormClosedEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnFormClosing%2A&gt;</ph> method removes the current form from the <ph id="ph2">&lt;xref:System.Windows.Forms.Application.OpenForms%2A&gt;</ph> collection of the associated <ph id="ph3">&lt;xref:System.Windows.Forms.Application&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnFormClosing%2A&gt;</ph>方法會移除從目前的表單<ph id="ph2">&lt;xref:System.Windows.Forms.Application.OpenForms%2A&gt;</ph>集合相關聯的<ph id="ph3">&lt;xref:System.Windows.Forms.Application&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="827" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnFormClosed(System.Windows.Forms.FormClosedEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">引發事件會透過委派叫用此事件處理常式。</target>       </trans-unit>
        <trans-unit id="828" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnFormClosed(System.Windows.Forms.FormClosedEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>處理和引發事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="829" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnFormClosed(System.Windows.Forms.FormClosedEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnFormClosed%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnFormClosed%2A&gt;</ph> 方法也允許衍生類別處理事件，而不用附加委派。</target>       </trans-unit>
        <trans-unit id="830" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnFormClosed(System.Windows.Forms.FormClosedEventArgs)">
          <source>Overriding this method is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">覆寫這個方法是處理衍生類別中的事件的慣用的技巧。</target>       </trans-unit>
        <trans-unit id="831" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnFormClosed(System.Windows.Forms.FormClosedEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Form.OnFormClosed(System.Windows.Forms.FormClosedEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Form.OnFormClosed(System.Windows.Forms.FormClosedEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">當在衍生類別中覆寫 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Form.OnFormClosed(System.Windows.Forms.FormClosedEventArgs)" /&gt;</ph> 時，請確定呼叫基底類別的 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Form.OnFormClosed(System.Windows.Forms.FormClosedEventArgs)" /&gt;</ph> 方法，使已註冊的委派能接收到事件。</target>       </trans-unit>
        <trans-unit id="832" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnFormClosing(System.Windows.Forms.FormClosingEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.FormClosingEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.FormClosingEventArgs" /&gt;</ph>，其中包含事件資料。</target>       </trans-unit>
        <trans-unit id="833" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnFormClosing(System.Windows.Forms.FormClosingEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Form.FormClosing" /&gt;</ph> event.</source>
          <target state="translated">引發 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Form.FormClosing" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="834" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnFormClosing(System.Windows.Forms.FormClosingEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">引發事件會透過委派叫用此事件處理常式。</target>       </trans-unit>
        <trans-unit id="835" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnFormClosing(System.Windows.Forms.FormClosingEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>處理和引發事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="836" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnFormClosing(System.Windows.Forms.FormClosingEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnFormClosing%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnFormClosing%2A&gt;</ph> 方法也允許衍生類別處理事件，而不用附加委派。</target>       </trans-unit>
        <trans-unit id="837" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnFormClosing(System.Windows.Forms.FormClosingEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">這是在衍生類別中處理事件的慣用技巧。</target>       </trans-unit>
        <trans-unit id="838" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnFormClosing(System.Windows.Forms.FormClosingEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Form.OnFormClosing(System.Windows.Forms.FormClosingEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Form.OnFormClosing(System.Windows.Forms.FormClosingEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">當在衍生類別中覆寫 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Form.OnFormClosing(System.Windows.Forms.FormClosingEventArgs)" /&gt;</ph> 時，請確定呼叫基底類別的 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Form.OnFormClosing(System.Windows.Forms.FormClosingEventArgs)" /&gt;</ph> 方法，使已註冊的委派能接收到事件。</target>       </trans-unit>
        <trans-unit id="839" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnGetDpiScaledSize(System.Int32,System.Int32,System.Drawing.Size@)">
          <source>The DPI value for the display device where the form was previously displayed.</source>
          <target state="translated">先前顯示表單的顯示裝置的 DPI 值。</target>       </trans-unit>
        <trans-unit id="840" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnGetDpiScaledSize(System.Int32,System.Int32,System.Drawing.Size@)">
          <source>The DPI value for the display device where the form will be displayed.</source>
          <target state="translated">將顯示表單的顯示裝置的 DPI 值。</target>       </trans-unit>
        <trans-unit id="841" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnGetDpiScaledSize(System.Int32,System.Int32,System.Drawing.Size@)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Size" /&gt;</ph> representing the new size of the form based on the new DPI value.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Size" /&gt;</ph>，代表新的表單的大小 (以新的 DPI 值為依據)。</target>       </trans-unit>
        <trans-unit id="842" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnGetDpiScaledSize(System.Int32,System.Int32,System.Drawing.Size@)">
          <source>Raises the GetDpiScaledSize event.</source>
          <target state="translated">引發 GetDpiScaledSize 事件。</target>       </trans-unit>
        <trans-unit id="843" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnGetDpiScaledSize(System.Int32,System.Int32,System.Drawing.Size@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if successful; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果成功，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="844" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnHandleCreated(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">包含事件資料的 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="845" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnHandleCreated(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.HandleCreated" /&gt;</ph> event.</source>
          <target state="translated">引發 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.HandleCreated" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="846" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnHandleDestroyed(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">包含事件資料的 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="847" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnHandleDestroyed(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.HandleDestroyed" /&gt;</ph> event.</source>
          <target state="translated">引發 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.HandleDestroyed" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="848" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnHelpButtonClicked(System.ComponentModel.CancelEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.CancelEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.CancelEventArgs" /&gt;</ph>，其中包含事件資料。</target>       </trans-unit>
        <trans-unit id="849" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnHelpButtonClicked(System.ComponentModel.CancelEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Form.HelpButtonClicked" /&gt;</ph> event.</source>
          <target state="translated">引發 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Form.HelpButtonClicked" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="850" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnHelpButtonClicked(System.ComponentModel.CancelEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">引發事件會透過委派叫用此事件處理常式。</target>       </trans-unit>
        <trans-unit id="851" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnHelpButtonClicked(System.ComponentModel.CancelEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>處理和引發事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="852" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnHelpButtonClicked(System.ComponentModel.CancelEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnHelpButtonClicked%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnHelpButtonClicked%2A&gt;</ph> 方法也允許衍生類別處理事件，而不用附加委派。</target>       </trans-unit>
        <trans-unit id="853" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnHelpButtonClicked(System.ComponentModel.CancelEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">這是在衍生類別中處理事件的慣用技巧。</target>       </trans-unit>
        <trans-unit id="854" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnHelpButtonClicked(System.ComponentModel.CancelEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Form.OnHelpButtonClicked(System.ComponentModel.CancelEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Form.OnHelpButtonClicked(System.ComponentModel.CancelEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">當在衍生類別中覆寫 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Form.OnHelpButtonClicked(System.ComponentModel.CancelEventArgs)" /&gt;</ph> 時，請確定呼叫基底類別的 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Form.OnHelpButtonClicked(System.ComponentModel.CancelEventArgs)" /&gt;</ph> 方法，使已註冊的委派能接收到事件。</target>       </trans-unit>
        <trans-unit id="855" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnInputLanguageChanged(System.Windows.Forms.InputLanguageChangedEventArgs)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Forms.InputLanguageChangedEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">包含事件資料的 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.InputLanguageChangedEventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="856" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnInputLanguageChanged(System.Windows.Forms.InputLanguageChangedEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Form.InputLanguageChanged" /&gt;</ph> event.</source>
          <target state="translated">引發 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Form.InputLanguageChanged" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="857" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnInputLanguageChanged(System.Windows.Forms.InputLanguageChangedEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">引發事件會透過委派叫用此事件處理常式。</target>       </trans-unit>
        <trans-unit id="858" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnInputLanguageChanged(System.Windows.Forms.InputLanguageChangedEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>處理和引發事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="859" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnInputLanguageChanged(System.Windows.Forms.InputLanguageChangedEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnInputLanguageChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnInputLanguageChanged%2A&gt;</ph> 方法也允許衍生類別處理事件，而不用附加委派。</target>       </trans-unit>
        <trans-unit id="860" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnInputLanguageChanged(System.Windows.Forms.InputLanguageChangedEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">這是在衍生類別中處理事件的慣用技巧。</target>       </trans-unit>
        <trans-unit id="861" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnInputLanguageChanged(System.Windows.Forms.InputLanguageChangedEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Form.OnInputLanguageChanged(System.Windows.Forms.InputLanguageChangedEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Form.OnInputLanguageChanged(System.Windows.Forms.InputLanguageChangedEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">當在衍生類別中覆寫 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Form.OnInputLanguageChanged(System.Windows.Forms.InputLanguageChangedEventArgs)" /&gt;</ph> 時，請確定呼叫基底類別的 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Form.OnInputLanguageChanged(System.Windows.Forms.InputLanguageChangedEventArgs)" /&gt;</ph> 方法，使已註冊的委派能接收到事件。</target>       </trans-unit>
        <trans-unit id="862" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnInputLanguageChanging(System.Windows.Forms.InputLanguageChangingEventArgs)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Forms.InputLanguageChangingEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">包含事件資料的 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.InputLanguageChangingEventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="863" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnInputLanguageChanging(System.Windows.Forms.InputLanguageChangingEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Form.InputLanguageChanging" /&gt;</ph> event.</source>
          <target state="translated">引發 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Form.InputLanguageChanging" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="864" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnInputLanguageChanging(System.Windows.Forms.InputLanguageChangingEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">引發事件會透過委派叫用此事件處理常式。</target>       </trans-unit>
        <trans-unit id="865" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnInputLanguageChanging(System.Windows.Forms.InputLanguageChangingEventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>處理和引發事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="866" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnInputLanguageChanging(System.Windows.Forms.InputLanguageChangingEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnInputLanguageChanging%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnInputLanguageChanging%2A&gt;</ph> 方法也允許衍生類別處理事件，而不用附加委派。</target>       </trans-unit>
        <trans-unit id="867" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnInputLanguageChanging(System.Windows.Forms.InputLanguageChangingEventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">這是在衍生類別中處理事件的慣用技巧。</target>       </trans-unit>
        <trans-unit id="868" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnInputLanguageChanging(System.Windows.Forms.InputLanguageChangingEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Form.OnInputLanguageChanging(System.Windows.Forms.InputLanguageChangingEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Form.OnInputLanguageChanging(System.Windows.Forms.InputLanguageChangingEventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">當在衍生類別中覆寫 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Form.OnInputLanguageChanging(System.Windows.Forms.InputLanguageChangingEventArgs)" /&gt;</ph> 時，請確定呼叫基底類別的 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Form.OnInputLanguageChanging(System.Windows.Forms.InputLanguageChangingEventArgs)" /&gt;</ph> 方法，使已註冊的委派能接收到事件。</target>       </trans-unit>
        <trans-unit id="869" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnLayout(System.Windows.Forms.LayoutEventArgs)">
          <source>The event data.</source>
          <target state="translated">事件資料。</target>       </trans-unit>
        <trans-unit id="870" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnLayout(System.Windows.Forms.LayoutEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Layout" /&gt;</ph> event.</source>
          <target state="translated">引發 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Layout" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="871" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnLoad(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">包含事件資料的 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="872" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnLoad(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Form.Load" /&gt;</ph> event.</source>
          <target state="translated">引發 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Form.Load" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="873" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnLoad(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">引發事件會透過委派叫用此事件處理常式。</target>       </trans-unit>
        <trans-unit id="874" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnLoad(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>處理和引發事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="875" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnLoad(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnLoad%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnLoad%2A&gt;</ph> 方法也允許衍生類別處理事件，而不用附加委派。</target>       </trans-unit>
        <trans-unit id="876" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnLoad(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">這是在衍生類別中處理事件的慣用技巧。</target>       </trans-unit>
        <trans-unit id="877" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnLoad(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Form.OnLoad(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Form.OnLoad(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">當在衍生類別中覆寫 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Form.OnLoad(System.EventArgs)" /&gt;</ph> 時，請確定呼叫基底類別的 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Form.OnLoad(System.EventArgs)" /&gt;</ph> 方法，使已註冊的委派能接收到事件。</target>       </trans-unit>
        <trans-unit id="878" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnMaximizedBoundsChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">包含事件資料的 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="879" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnMaximizedBoundsChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Form.MaximizedBoundsChanged" /&gt;</ph> event.</source>
          <target state="translated">引發 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Form.MaximizedBoundsChanged" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="880" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnMaximizedBoundsChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">引發事件會透過委派叫用此事件處理常式。</target>       </trans-unit>
        <trans-unit id="881" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnMaximizedBoundsChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>處理和引發事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="882" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnMaximizedBoundsChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnMaximizedBoundsChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnMaximizedBoundsChanged%2A&gt;</ph> 方法也允許衍生類別處理事件，而不用附加委派。</target>       </trans-unit>
        <trans-unit id="883" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnMaximizedBoundsChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">這是在衍生類別中處理事件的慣用技巧。</target>       </trans-unit>
        <trans-unit id="884" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnMaximizedBoundsChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Form.OnMaximizedBoundsChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Form.OnMaximizedBoundsChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">當在衍生類別中覆寫 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Form.OnMaximizedBoundsChanged(System.EventArgs)" /&gt;</ph> 時，請確定呼叫基底類別的 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Form.OnMaximizedBoundsChanged(System.EventArgs)" /&gt;</ph> 方法，使已註冊的委派能接收到事件。</target>       </trans-unit>
        <trans-unit id="885" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnMaximumSizeChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">包含事件資料的 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="886" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnMaximumSizeChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Form.MaximumSizeChanged" /&gt;</ph> event.</source>
          <target state="translated">引發 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Form.MaximumSizeChanged" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="887" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnMaximumSizeChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">引發事件會透過委派叫用此事件處理常式。</target>       </trans-unit>
        <trans-unit id="888" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnMaximumSizeChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>處理和引發事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="889" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnMaximumSizeChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnMaximumSizeChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnMaximumSizeChanged%2A&gt;</ph> 方法也允許衍生類別處理事件，而不用附加委派。</target>       </trans-unit>
        <trans-unit id="890" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnMaximumSizeChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">這是在衍生類別中處理事件的慣用技巧。</target>       </trans-unit>
        <trans-unit id="891" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnMaximumSizeChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Form.OnMaximumSizeChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Form.OnMaximumSizeChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">當在衍生類別中覆寫 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Form.OnMaximumSizeChanged(System.EventArgs)" /&gt;</ph> 時，請確定呼叫基底類別的 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Form.OnMaximumSizeChanged(System.EventArgs)" /&gt;</ph> 方法，使已註冊的委派能接收到事件。</target>       </trans-unit>
        <trans-unit id="892" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnMdiChildActivate(System.EventArgs)">
          <source>The <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">包含事件資料的 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="893" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnMdiChildActivate(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Form.MdiChildActivate" /&gt;</ph> event.</source>
          <target state="translated">引發 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Form.MdiChildActivate" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="894" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnMdiChildActivate(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">引發事件會透過委派叫用此事件處理常式。</target>       </trans-unit>
        <trans-unit id="895" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnMdiChildActivate(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>處理和引發事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="896" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnMdiChildActivate(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnMdiChildActivate%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnMdiChildActivate%2A&gt;</ph> 方法也允許衍生類別處理事件，而不用附加委派。</target>       </trans-unit>
        <trans-unit id="897" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnMdiChildActivate(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">這是在衍生類別中處理事件的慣用技巧。</target>       </trans-unit>
        <trans-unit id="898" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnMdiChildActivate(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Form.OnMdiChildActivate(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Form.OnMdiChildActivate(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">當在衍生類別中覆寫 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Form.OnMdiChildActivate(System.EventArgs)" /&gt;</ph> 時，請確定呼叫基底類別的 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Form.OnMdiChildActivate(System.EventArgs)" /&gt;</ph> 方法，使已註冊的委派能接收到事件。</target>       </trans-unit>
        <trans-unit id="899" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnMenuComplete(System.EventArgs)">
          <source>The <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">包含事件資料的 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="900" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnMenuComplete(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Form.MenuComplete" /&gt;</ph> event.</source>
          <target state="translated">引發 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Form.MenuComplete" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="901" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnMenuComplete(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">引發事件會透過委派叫用此事件處理常式。</target>       </trans-unit>
        <trans-unit id="902" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnMenuComplete(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>處理和引發事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="903" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnMenuComplete(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnMenuComplete%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnMenuComplete%2A&gt;</ph> 方法也允許衍生類別處理事件，而不用附加委派。</target>       </trans-unit>
        <trans-unit id="904" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnMenuComplete(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">這是在衍生類別中處理事件的慣用技巧。</target>       </trans-unit>
        <trans-unit id="905" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnMenuComplete(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Form.OnMenuComplete(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Form.OnMenuComplete(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">當在衍生類別中覆寫 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Form.OnMenuComplete(System.EventArgs)" /&gt;</ph> 時，請確定呼叫基底類別的 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Form.OnMenuComplete(System.EventArgs)" /&gt;</ph> 方法，使已註冊的委派能接收到事件。</target>       </trans-unit>
        <trans-unit id="906" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnMenuStart(System.EventArgs)">
          <source>The <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">包含事件資料的 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="907" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnMenuStart(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Form.MenuStart" /&gt;</ph> event.</source>
          <target state="translated">引發 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Form.MenuStart" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="908" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnMenuStart(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">引發事件會透過委派叫用此事件處理常式。</target>       </trans-unit>
        <trans-unit id="909" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnMenuStart(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>處理和引發事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="910" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnMenuStart(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnMenuStart%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnMenuStart%2A&gt;</ph> 方法也允許衍生類別處理事件，而不用附加委派。</target>       </trans-unit>
        <trans-unit id="911" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnMenuStart(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">這是在衍生類別中處理事件的慣用技巧。</target>       </trans-unit>
        <trans-unit id="912" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnMenuStart(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Form.OnMenuStart(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Form.OnMenuStart(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">當在衍生類別中覆寫 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Form.OnMenuStart(System.EventArgs)" /&gt;</ph> 時，請確定呼叫基底類別的 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Form.OnMenuStart(System.EventArgs)" /&gt;</ph> 方法，使已註冊的委派能接收到事件。</target>       </trans-unit>
        <trans-unit id="913" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnMinimumSizeChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">包含事件資料的 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="914" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnMinimumSizeChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Form.MinimumSizeChanged" /&gt;</ph> event.</source>
          <target state="translated">引發 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Form.MinimumSizeChanged" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="915" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnMinimumSizeChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">引發事件會透過委派叫用此事件處理常式。</target>       </trans-unit>
        <trans-unit id="916" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnMinimumSizeChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>處理和引發事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="917" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnMinimumSizeChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnMinimumSizeChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnMinimumSizeChanged%2A&gt;</ph> 方法也允許衍生類別處理事件，而不用附加委派。</target>       </trans-unit>
        <trans-unit id="918" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnMinimumSizeChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">這是在衍生類別中處理事件的慣用技巧。</target>       </trans-unit>
        <trans-unit id="919" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnMinimumSizeChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Form.OnMinimumSizeChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Form.OnMinimumSizeChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">當在衍生類別中覆寫 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Form.OnMinimumSizeChanged(System.EventArgs)" /&gt;</ph> 時，請確定呼叫基底類別的 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Form.OnMinimumSizeChanged(System.EventArgs)" /&gt;</ph> 方法，使已註冊的委派能接收到事件。</target>       </trans-unit>
        <trans-unit id="920" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnPaint(System.Windows.Forms.PaintEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.PaintEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.PaintEventArgs" /&gt;</ph>，其中包含事件資料。</target>       </trans-unit>
        <trans-unit id="921" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnPaint(System.Windows.Forms.PaintEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Paint" /&gt;</ph> event.</source>
          <target state="translated">引發 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Paint" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="922" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnResize(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">包含事件資料的 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="923" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnResize(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Resize" /&gt;</ph> event.</source>
          <target state="translated">引發 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Resize" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="924" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnResizeBegin(System.EventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>，其中包含事件資料。</target>       </trans-unit>
        <trans-unit id="925" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnResizeBegin(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Form.ResizeBegin" /&gt;</ph> event.</source>
          <target state="translated">引發 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Form.ResizeBegin" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="926" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnResizeBegin(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ResizeBegin&gt;</ph> event will only be raised if the form's <ph id="ph2">&lt;xref:System.Windows.Forms.Control.CanRaiseEvents%2A&gt;</ph> property is set to <ph id="ph3">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.ResizeBegin&gt;</ph>將只會引發事件，如果表單的<ph id="ph2">&lt;xref:System.Windows.Forms.Control.CanRaiseEvents%2A&gt;</ph>屬性設定為<ph id="ph3">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="927" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnResizeBegin(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">引發事件會透過委派叫用此事件處理常式。</target>       </trans-unit>
        <trans-unit id="928" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnResizeBegin(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>處理和引發事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="929" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnResizeBegin(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnResizeBegin%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnResizeBegin%2A&gt;</ph> 方法也允許衍生類別處理事件，而不用附加委派。</target>       </trans-unit>
        <trans-unit id="930" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnResizeBegin(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">這是在衍生類別中處理事件的慣用技巧。</target>       </trans-unit>
        <trans-unit id="931" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnResizeBegin(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Form.OnResizeBegin(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Form.OnResizeBegin(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">當在衍生類別中覆寫 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Form.OnResizeBegin(System.EventArgs)" /&gt;</ph> 時，請確定呼叫基底類別的 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Form.OnResizeBegin(System.EventArgs)" /&gt;</ph> 方法，使已註冊的委派能接收到事件。</target>       </trans-unit>
        <trans-unit id="932" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnResizeEnd(System.EventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>，其中包含事件資料。</target>       </trans-unit>
        <trans-unit id="933" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnResizeEnd(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Form.ResizeEnd" /&gt;</ph> event.</source>
          <target state="translated">引發 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Form.ResizeEnd" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="934" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnResizeEnd(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ResizeEnd&gt;</ph> event will only be raised if the form's <ph id="ph2">&lt;xref:System.Windows.Forms.Control.CanRaiseEvents%2A&gt;</ph> property is set to <ph id="ph3">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.ResizeEnd&gt;</ph>將只會引發事件，如果表單的<ph id="ph2">&lt;xref:System.Windows.Forms.Control.CanRaiseEvents%2A&gt;</ph>屬性設定為<ph id="ph3">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="935" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnResizeEnd(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">引發事件會透過委派叫用此事件處理常式。</target>       </trans-unit>
        <trans-unit id="936" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnResizeEnd(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>處理和引發事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="937" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnResizeEnd(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnResizeEnd%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnResizeEnd%2A&gt;</ph> 方法也允許衍生類別處理事件，而不用附加委派。</target>       </trans-unit>
        <trans-unit id="938" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnResizeEnd(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">這是在衍生類別中處理事件的慣用技巧。</target>       </trans-unit>
        <trans-unit id="939" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnResizeEnd(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Form.OnResizeEnd(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Form.OnResizeEnd(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">當在衍生類別中覆寫 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Form.OnResizeEnd(System.EventArgs)" /&gt;</ph> 時，請確定呼叫基底類別的 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Form.OnResizeEnd(System.EventArgs)" /&gt;</ph> 方法，使已註冊的委派能接收到事件。</target>       </trans-unit>
        <trans-unit id="940" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnRightToLeftLayoutChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">包含事件資料的 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="941" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnRightToLeftLayoutChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Form.RightToLeftLayoutChanged" /&gt;</ph> event.</source>
          <target state="translated">引發 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Form.RightToLeftLayoutChanged" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="942" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnRightToLeftLayoutChanged(System.EventArgs)">
          <source>If the current form or one of its parents is disposing of resources, the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnRightToLeftLayoutChanged%2A&gt;</ph> method will return without performing any action.</source>
          <target state="translated">如果目前的表單或其中一個其父代會處置資源，<ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnRightToLeftLayoutChanged%2A&gt;</ph>方法返回時不會執行任何動作。</target>       </trans-unit>
        <trans-unit id="943" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnRightToLeftLayoutChanged(System.EventArgs)">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.RightToLeft%2A&gt;</ph> property of the form has a value of <ph id="ph2">&lt;xref:System.Windows.Forms.RightToLeft.Yes&gt;</ph>, then the handles of the form and its child controls will be recreated through calls to the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.RecreateHandle%2A&gt;</ph> method.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Windows.Forms.Control.RightToLeft%2A&gt;</ph>表單屬性的值為<ph id="ph2">&lt;xref:System.Windows.Forms.RightToLeft.Yes&gt;</ph>，然後將重新建立表單和其子控制項的控制代碼，透過呼叫<ph id="ph3">&lt;xref:System.Windows.Forms.Control.RecreateHandle%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="944" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnRightToLeftLayoutChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">引發事件會透過委派叫用此事件處理常式。</target>       </trans-unit>
        <trans-unit id="945" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnRightToLeftLayoutChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>處理和引發事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="946" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnRightToLeftLayoutChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnRightToLeftLayoutChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnRightToLeftLayoutChanged%2A&gt;</ph> 方法也允許衍生類別處理事件，而不用附加委派。</target>       </trans-unit>
        <trans-unit id="947" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnRightToLeftLayoutChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">這是在衍生類別中處理事件的慣用技巧。</target>       </trans-unit>
        <trans-unit id="948" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnRightToLeftLayoutChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Form.OnRightToLeftLayoutChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Form.OnRightToLeftLayoutChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">當在衍生類別中覆寫 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Form.OnRightToLeftLayoutChanged(System.EventArgs)" /&gt;</ph> 時，請確定呼叫基底類別的 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Form.OnRightToLeftLayoutChanged(System.EventArgs)" /&gt;</ph> 方法，使已註冊的委派能接收到事件。</target>       </trans-unit>
        <trans-unit id="949" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnShown(System.EventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>，其中包含事件資料。</target>       </trans-unit>
        <trans-unit id="950" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnShown(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Form.Shown" /&gt;</ph> event.</source>
          <target state="translated">引發 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Form.Shown" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="951" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnShown(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Shown&gt;</ph> event occurs whenever the form is first shown.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.Shown&gt;</ph>事件發生於表單第一次顯示。</target>       </trans-unit>
        <trans-unit id="952" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnShown(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">引發事件會透過委派叫用此事件處理常式。</target>       </trans-unit>
        <trans-unit id="953" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnShown(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>處理和引發事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="954" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnShown(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnShown%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnShown%2A&gt;</ph> 方法也允許衍生類別處理事件，而不用附加委派。</target>       </trans-unit>
        <trans-unit id="955" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnShown(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">這是在衍生類別中處理事件的慣用技巧。</target>       </trans-unit>
        <trans-unit id="956" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnShown(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Form.OnShown(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Form.OnShown(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">當在衍生類別中覆寫 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Form.OnShown(System.EventArgs)" /&gt;</ph> 時，請確定呼叫基底類別的 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Form.OnShown(System.EventArgs)" /&gt;</ph> 方法，使已註冊的委派能接收到事件。</target>       </trans-unit>
        <trans-unit id="957" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnStyleChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">包含事件資料的 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="958" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnStyleChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.StyleChanged" /&gt;</ph> event.</source>
          <target state="translated">引發 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.StyleChanged" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="959" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnTextChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">包含事件資料的 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="960" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnTextChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.TextChanged" /&gt;</ph> event.</source>
          <target state="translated">引發 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.TextChanged" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="961" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnVisibleChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">包含事件資料的 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="962" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.OnVisibleChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.VisibleChanged" /&gt;</ph> event.</source>
          <target state="translated">引發 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.VisibleChanged" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="963" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnVisibleChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">引發事件會透過委派叫用此事件處理常式。</target>       </trans-unit>
        <trans-unit id="964" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnVisibleChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>處理和引發事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="965" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnVisibleChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnVisibleChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnVisibleChanged%2A&gt;</ph> 方法也允許衍生類別處理事件，而不用附加委派。</target>       </trans-unit>
        <trans-unit id="966" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnVisibleChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">這是在衍生類別中處理事件的慣用技巧。</target>       </trans-unit>
        <trans-unit id="967" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.OnVisibleChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Form.OnVisibleChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Form.OnVisibleChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">當在衍生類別中覆寫 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Form.OnVisibleChanged(System.EventArgs)" /&gt;</ph> 時，請確定呼叫基底類別的 <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Form.OnVisibleChanged(System.EventArgs)" /&gt;</ph> 方法，使已註冊的委派能接收到事件。</target>       </trans-unit>
        <trans-unit id="968" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.Opacity">
          <source>Gets or sets the opacity level of the form.</source>
          <target state="translated">取得或設定表單的透明度等級。</target>       </trans-unit>
        <trans-unit id="969" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Opacity">
          <source>The level of opacity for the form.</source>
          <target state="translated">表單的透明度等級。</target>       </trans-unit>
        <trans-unit id="970" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Opacity">
          <source>The default is 1.00.</source>
          <target state="translated">預設值為 1.00。</target>       </trans-unit>
        <trans-unit id="971" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Opacity">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Opacity%2A&gt;</ph> property enables you to specify a level of transparency for the form and its controls.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.Opacity%2A&gt;</ph>屬性可讓您指定的表單和其控制項的透明度等級。</target>       </trans-unit>
        <trans-unit id="972" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Opacity">
          <source>When this property is set to a value less than 100 percent (1.00), the entire form, including borders, is made more transparent.</source>
          <target state="translated">當這個屬性設定為小於 100%(1.00) 的值時，則整個表單，包括框線，變得更為透明。</target>       </trans-unit>
        <trans-unit id="973" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Opacity">
          <source>Setting this property to a value of 0 percent (0.00) makes the form completely invisible.</source>
          <target state="translated">將此屬性設為 0%(0.00) 的值，使表單完全不可見。</target>       </trans-unit>
        <trans-unit id="974" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Opacity">
          <source>You can use this property to provide different levels of transparency or to provide effects such as phasing a form in or out of view.</source>
          <target state="translated">您可以使用這個屬性，以提供不同層級的透明度，或提供例如逐步版表單中，或超出檢視的效果。</target>       </trans-unit>
        <trans-unit id="975" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Opacity">
          <source>For example, you can phase a form into view by setting the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Opacity%2A&gt;</ph> property to a value of 0 percent (0.00) and gradually increasing the value until it reaches 100 percent (1.00).</source>
          <target state="translated">例如，設定成檢視階段表單<ph id="ph1">&lt;xref:System.Windows.Forms.Form.Opacity%2A&gt;</ph>屬性設為 0%(0.00) 和逐漸增加的值，直到達到 100%(1.00) 的值。</target>       </trans-unit>
        <trans-unit id="976" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Opacity">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.Form.Opacity%2A&gt;</ph> differs from the transparency provided by the <ph id="ph2">&lt;xref:System.Windows.Forms.Form.TransparencyKey%2A&gt;</ph>, which only makes a form and its controls completely transparent if they are the same color as the value specified in the <ph id="ph3">&lt;xref:System.Windows.Forms.Form.TransparencyKey%2A&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.Opacity%2A&gt;</ph> 不同於所提供的透明度<ph id="ph2">&lt;xref:System.Windows.Forms.Form.TransparencyKey%2A&gt;</ph>、 它只會在表單和其控制項完全透明的如果它們是相同的色彩中指定的值<ph id="ph3">&lt;xref:System.Windows.Forms.Form.TransparencyKey%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="977" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Opacity">
          <source>This property is not supported when <ph id="ph1">&lt;xref:System.Windows.Forms.Form.RightToLeftLayout%2A&gt;</ph> is <ph id="ph2">`true`</ph>.</source>
          <target state="translated">這個屬性不支援時<ph id="ph1">&lt;xref:System.Windows.Forms.Form.RightToLeftLayout%2A&gt;</ph>是<ph id="ph2">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="978" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Opacity">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Opacity%2A&gt;</ph> property depends on the Layered Windows API that was introduced with Windows 2000.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.Opacity%2A&gt;</ph>屬性相依於分層 Windows API 導入 Windows 2000。</target>       </trans-unit>
        <trans-unit id="979" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Opacity">
          <source>For more information, see the "Layered Windows: A New Way to Use Translucency and Transparency Effects in Windows Applications" in the Platform SDK documentation at <bpt id="p1">[</bpt><ph id="ph1">http://msdn.microsoft.com</ph><ept id="p1">](http://msdn.microsoft.com/)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱 「 分層 Windows:: 新方式來使用半透明和透明度效果在 Windows 中的應用程式"Platform SDK 文件，網址<bpt id="p1">[</bpt> <ph id="ph1">http://msdn.microsoft.com</ph> <ept id="p1">](http://msdn.microsoft.com/)</ept>。</target>       </trans-unit>
        <trans-unit id="980" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Opacity">
          <source>The following code example demonstrates how to create a form that is displayed with an opacity level of 75 percent.</source>
          <target state="translated">下列程式碼範例示範如何建立具有 75%的不透明度層級會顯示的表單。</target>       </trans-unit>
        <trans-unit id="981" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Opacity">
          <source>The code example creates a new form that is positioned in the center of the screen with an <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Opacity%2A&gt;</ph> property set to change the opacity level of the form.</source>
          <target state="translated">程式碼範例會建立新表單，位於與螢幕的中央<ph id="ph1">&lt;xref:System.Windows.Forms.Form.Opacity%2A&gt;</ph>屬性設定為變更表單的透明度等級。</target>       </trans-unit>
        <trans-unit id="982" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Opacity">
          <source>The code example also sets the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Size%2A&gt;</ph> property to provide a larger sized form than the default size of the form.</source>
          <target state="translated">程式碼範例也會設定<ph id="ph1">&lt;xref:System.Windows.Forms.Form.Size%2A&gt;</ph>屬性以提供更大的大小比預設大小的表單的表單。</target>       </trans-unit>
        <trans-unit id="983" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Opacity">
          <source>This code example was written under the assumption that the method defined in this example is called from another form in an event handler or other method.</source>
          <target state="translated">這個程式碼範例是假設在此範例中定義的方法呼叫從另一種形式的事件處理常式或其他方法中撰寫的。</target>       </trans-unit>
        <trans-unit id="984" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.OwnedForms">
          <source>Gets an array of <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph> objects that represent all forms that are owned by this form.</source>
          <target state="translated">取得 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph> 物件陣列，代表這個表單擁有的所有表單。</target>       </trans-unit>
        <trans-unit id="985" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.OwnedForms">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph> array that represents the owned forms for this form.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph> 陣列，代表這個表單擁有的表單。</target>       </trans-unit>
        <trans-unit id="986" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.OwnedForms">
          <source>This property returns an array that contains all forms that are owned by this form.</source>
          <target state="translated">這個屬性會傳回陣列，其中包含此表單所擁有的所有表單。</target>       </trans-unit>
        <trans-unit id="987" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.OwnedForms">
          <source>To make a form owned by another form, call the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.AddOwnedForm%2A&gt;</ph> method.</source>
          <target state="translated">若要讓另一種形式所擁有的表單，呼叫<ph id="ph1">&lt;xref:System.Windows.Forms.Form.AddOwnedForm%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="988" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.OwnedForms">
          <source>The form assigned to the owner form will remain owned until the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.RemoveOwnedForm%2A&gt;</ph> method is called.</source>
          <target state="translated">指派給主控表單表單仍擁有直到<ph id="ph1">&lt;xref:System.Windows.Forms.Form.RemoveOwnedForm%2A&gt;</ph>方法呼叫。</target>       </trans-unit>
        <trans-unit id="989" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.OwnedForms">
          <source>You can also make a form owned by another by setting the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Owner%2A&gt;</ph> property with a reference to its owner form.</source>
          <target state="translated">您也可以進行表單擁有的另一個設定<ph id="ph1">&lt;xref:System.Windows.Forms.Form.Owner%2A&gt;</ph>其擁有者的形式參考的屬性。</target>       </trans-unit>
        <trans-unit id="990" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.OwnedForms">
          <source>When a form is owned by another form, it is closed or hidden with the owner form.</source>
          <target state="translated">當表單由另一種形式所擁有時，它已關閉或隱藏的擁有者的表單。</target>       </trans-unit>
        <trans-unit id="991" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.OwnedForms">
          <source>For example, consider a form named <ph id="ph1">`Form2`</ph> that is owned by a form named <ph id="ph2">`Form1`</ph>.</source>
          <target state="translated">例如，假設名為表單<ph id="ph1">`Form2`</ph>名為的表單所擁有<ph id="ph2">`Form1`</ph>。</target>       </trans-unit>
        <trans-unit id="992" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.OwnedForms">
          <source>If <ph id="ph1">`Form1`</ph> is closed or minimized, <ph id="ph2">`Form2`</ph> is also closed or hidden.</source>
          <target state="translated">如果<ph id="ph1">`Form1`</ph>已關閉或最小化<ph id="ph2">`Form2`</ph>也已關閉或隱藏。</target>       </trans-unit>
        <trans-unit id="993" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.OwnedForms">
          <source>Owned forms are also never displayed behind their owner form.</source>
          <target state="translated">擁有的表單也永遠不會顯示其主控表單後面。</target>       </trans-unit>
        <trans-unit id="994" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.OwnedForms">
          <source>You can use owned forms for windows such as find and replace windows, which should not be displayed behind the owner form when the owner form is selected.</source>
          <target state="translated">您可以使用適用於 windows，例如尋找擁有的表單，並取代 windows，不應該顯示擁有者表單的後置選取主控表單時。</target>       </trans-unit>
        <trans-unit id="995" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.OwnedForms">
          <source>If the form is a multiple-document interface (MDI) parent form, this property will return all forms that are displayed with the exception of any MDI child forms that are currently open.</source>
          <target state="translated">如果表單為多重文件介面 (MDI) 父表單，這個屬性會傳回顯示除了任何目前的 MDI 子表單的所有表單都開啟。</target>       </trans-unit>
        <trans-unit id="996" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.OwnedForms">
          <source>To obtain the MDI child forms opened in an MDI parent form, use the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.MdiChildren%2A&gt;</ph> property.</source>
          <target state="translated">若要取得 MDI 子表單在 MDI 父表單中開啟，請使用<ph id="ph1">&lt;xref:System.Windows.Forms.Form.MdiChildren%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="997" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.OwnedForms">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.OwnedForms%2A&gt;</ph> property to modify all forms owned by the owner form.</source>
          <target state="translated">下列程式碼範例示範如何使用<ph id="ph1">&lt;xref:System.Windows.Forms.Form.OwnedForms%2A&gt;</ph>屬性以修改主控表單所擁有的所有表單。</target>       </trans-unit>
        <trans-unit id="998" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.OwnedForms">
          <source>The first method in the example adds forms to the array of owned forms associated with the owned form.</source>
          <target state="translated">在範例中的第一個方法會將表單加入至擁有附屬表單相關聯的表單陣列。</target>       </trans-unit>
        <trans-unit id="999" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.OwnedForms">
          <source>The second method loops through all owned forms and changes the caption.</source>
          <target state="translated">第二種方法執行迴圈，所有擁有的表單，並變更標題。</target>       </trans-unit>
        <trans-unit id="1000" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.OwnedForms">
          <source>This example requires that both methods are called by an event or other method of a form.</source>
          <target state="translated">這個範例需要這兩種方法會呼叫的事件或表單的其他方法。</target>       </trans-unit>
        <trans-unit id="1001" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.Owner">
          <source>Gets or sets the form that owns this form.</source>
          <target state="translated">取得或設定擁有這個表單的表單。</target>       </trans-unit>
        <trans-unit id="1002" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Owner">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph> that represents the form that is the owner of this form.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph>，代表做為這個表單擁有者的表單。</target>       </trans-unit>
        <trans-unit id="1003" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Owner">
          <source>To make a form owned by another form, assign its <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Owner%2A&gt;</ph> property a reference to the form that will be the owner.</source>
          <target state="translated">若要讓另一種形式所擁有的表單，將指派其<ph id="ph1">&lt;xref:System.Windows.Forms.Form.Owner%2A&gt;</ph>屬性的參考，就是擁有者的表單。</target>       </trans-unit>
        <trans-unit id="1004" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Owner">
          <source>When a form is owned by another form, it is closed or hidden with the owner form.</source>
          <target state="translated">當表單由另一種形式所擁有時，它已關閉或隱藏的擁有者的表單。</target>       </trans-unit>
        <trans-unit id="1005" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Owner">
          <source>For example, consider a form named <ph id="ph1">`Form2`</ph> that is owned by a form named <ph id="ph2">`Form1`</ph>.</source>
          <target state="translated">例如，假設名為表單<ph id="ph1">`Form2`</ph>名為的表單所擁有<ph id="ph2">`Form1`</ph>。</target>       </trans-unit>
        <trans-unit id="1006" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Owner">
          <source>If <ph id="ph1">`Form1`</ph> is closed or minimized, <ph id="ph2">`Form2`</ph> is also closed or hidden.Owned forms are also never displayed behind their owner form.</source>
          <target state="translated">如果<ph id="ph1">`Form1`</ph>已關閉或最小化<ph id="ph2">`Form2`</ph>也已關閉或隱藏。擁有的表單也永遠不會顯示其主控表單後面。</target>       </trans-unit>
        <trans-unit id="1007" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Owner">
          <source>You can use owned forms for windows such as find and replace windows, which should not disappear when the owner form is selected.</source>
          <target state="translated">您可以使用擁有的表單視窗，例如尋找和取代視窗，選取主控表單時，應該不會消失。</target>       </trans-unit>
        <trans-unit id="1008" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Owner">
          <source>To determine the forms that are owned by a parent form, use the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.OwnedForms%2A&gt;</ph> property.</source>
          <target state="translated">若要判斷父表單所擁有的表單，請使用<ph id="ph1">&lt;xref:System.Windows.Forms.Form.OwnedForms%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="1009" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.Owner">
          <source>A top-level window cannot have an owner.</source>
          <target state="translated">最上層的視窗不能有擁有人。</target>       </trans-unit>
        <trans-unit id="1010" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Message" /&gt;</ph>, passed by reference, that represents the Win32 message to process.</source>
          <target state="translated">以傳址方式傳遞的 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Message" /&gt;</ph>，代表要處理的 Win32 訊息。</target>       </trans-unit>
        <trans-unit id="1011" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Keys" /&gt;</ph> values that represents the key to process.</source>
          <target state="translated">其中一個 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Keys" /&gt;</ph> 值，表示要處理的按鍵。</target>       </trans-unit>
        <trans-unit id="1012" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
          <source>Processes a command key.</source>
          <target state="translated">處理命令按鍵。</target>       </trans-unit>
        <trans-unit id="1013" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the keystroke was processed and consumed by the control; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph> to allow further processing.</source>
          <target state="translated">如果按鍵輸入是由控制項所處理及耗用，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為表示允許進一步處理的 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1014" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ProcessCmdKey%2A&gt;</ph> method overrides the base</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.ProcessCmdKey%2A&gt;</ph>方法會覆寫基底</target>       </trans-unit>
        <trans-unit id="1015" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.ContainerControl.ProcessCmdKey%2A?displayProperty=nameWithType&gt;</ph> implementation to provide additional handling of main menu command keys and MDI accelerators.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.ContainerControl.ProcessCmdKey%2A?displayProperty=nameWithType&gt;</ph> 要提供額外的處理主功能表命令索引鍵和 MDI 加速器的實作。</target>       </trans-unit>
        <trans-unit id="1016" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
          <source>For information about trapping keystrokes, see "How to trap keystrokes in controls by using Visual C#" and "How to trap keystrokes in .NET controls by using Visual Basic .NET" in the Microsoft Knowledge Base at <ph id="ph1">http://support.microsoft.com</ph>.</source>
          <target state="translated">設陷按鍵動作的相關資訊，請參閱 &lt; 如何使用 Visual C# 設陷控制項的按鍵輸入 「 和 」 如何捕捉.NET 中的按鍵輸入控制項使用 Visual Basic.NET"Microsoft 知識庫中在<ph id="ph1">http://support.microsoft.com</ph>。</target>       </trans-unit>
        <trans-unit id="1017" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ProcessDialogChar(System.Char)">
          <source>The character to process.</source>
          <target state="translated">要處理的字元。</target>       </trans-unit>
        <trans-unit id="1018" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ProcessDialogChar(System.Char)">
          <source>Processes a dialog character.</source>
          <target state="translated">處理對話方塊字元。</target>       </trans-unit>
        <trans-unit id="1019" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ProcessDialogChar(System.Char)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the character was processed by the control; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果字元已由控制項處理，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1020" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ProcessDialogKey(System.Windows.Forms.Keys)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Keys" /&gt;</ph> values that represents the key to process.</source>
          <target state="translated">其中一個 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Keys" /&gt;</ph> 值，表示要處理的按鍵。</target>       </trans-unit>
        <trans-unit id="1021" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ProcessDialogKey(System.Windows.Forms.Keys)">
          <source>Processes a dialog box key.</source>
          <target state="translated">處理對話方塊按鍵。</target>       </trans-unit>
        <trans-unit id="1022" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ProcessDialogKey(System.Windows.Forms.Keys)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the keystroke was processed and consumed by the control; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph> to allow further processing.</source>
          <target state="translated">如果按鍵輸入是由控制項所處理及耗用，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為表示允許進一步處理的 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1023" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.ProcessDialogKey(System.Windows.Forms.Keys)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ProcessDialogKey%2A&gt;</ph> method overrides the base <ph id="ph2">&lt;xref:System.Windows.Forms.ContainerControl.ProcessDialogKey%2A?displayProperty=nameWithType&gt;</ph> implementation to provide additional handling of the RETURN and ESCAPE keys in dialog boxes.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.ProcessDialogKey%2A&gt;</ph>方法會覆寫基底<ph id="ph2">&lt;xref:System.Windows.Forms.ContainerControl.ProcessDialogKey%2A?displayProperty=nameWithType&gt;</ph>實作提供的傳回和逸出索引鍵，在對話方塊中的其他處理。</target>       </trans-unit>
        <trans-unit id="1024" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.ProcessDialogKey(System.Windows.Forms.Keys)">
          <source>The method performs no processing on keystrokes that include the ALT or CONTROL modifiers.</source>
          <target state="translated">方法包含 ALT 或控制項的修飾詞的按鍵輸入上執行任何處理。</target>       </trans-unit>
        <trans-unit id="1025" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ProcessKeyPreview(System.Windows.Forms.Message@)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Message" /&gt;</ph>, passed by reference, that represents the window message to process.</source>
          <target state="translated">由參考所傳遞的 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Message" /&gt;</ph>，代表要處理的視窗訊息。</target>       </trans-unit>
        <trans-unit id="1026" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ProcessKeyPreview(System.Windows.Forms.Message@)">
          <source>Previews a keyboard message.</source>
          <target state="translated">預覽鍵盤訊息。</target>       </trans-unit>
        <trans-unit id="1027" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ProcessKeyPreview(System.Windows.Forms.Message@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the message was processed by the control; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果控制項已處理訊息，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1028" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ProcessMnemonic(System.Char)">
          <source>The character to process.</source>
          <target state="translated">要處理的字元。</target>       </trans-unit>
        <trans-unit id="1029" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ProcessMnemonic(System.Char)">
          <source>Processes a mnemonic character.</source>
          <target state="translated">處理助憶鍵字元。</target>       </trans-unit>
        <trans-unit id="1030" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ProcessMnemonic(System.Char)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the character was processed as a mnemonic by the control; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果控制項已將字元當成助憶鍵處理，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1031" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ProcessTabKey(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to cycle forward through the controls in the ContainerControl; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> 表示順向循環 ContainerControl 中的控制項；否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1032" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ProcessTabKey(System.Boolean)">
          <source>Selects the next available control and makes it the active control.</source>
          <target state="translated">選取下一個可用的控制項並使它成為作用中的控制項。</target>       </trans-unit>
        <trans-unit id="1033" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ProcessTabKey(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if a control is selected; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果已選取控制項，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1034" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.RemoveOwnedForm(System.Windows.Forms.Form)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph> representing the form to remove from the list of owned forms for this form.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph>，代表要從這個表單所擁有表單的清單中移除的表單。</target>       </trans-unit>
        <trans-unit id="1035" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.RemoveOwnedForm(System.Windows.Forms.Form)">
          <source>Removes an owned form from this form.</source>
          <target state="translated">將附屬表單從這個表單移除。</target>       </trans-unit>
        <trans-unit id="1036" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.RemoveOwnedForm(System.Windows.Forms.Form)">
          <source>The form assigned to the owner form remains owned until the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.RemoveOwnedForm%2A&gt;</ph> method is called.</source>
          <target state="translated">指派給主控表單表單將維持狀態直到擁有<ph id="ph1">&lt;xref:System.Windows.Forms.Form.RemoveOwnedForm%2A&gt;</ph>方法呼叫。</target>       </trans-unit>
        <trans-unit id="1037" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.RemoveOwnedForm(System.Windows.Forms.Form)">
          <source>In addition to removing the owned form from the list of owned form, this method also sets the owner form to <ph id="ph1">`null`</ph>.</source>
          <target state="translated">除了從擁有的表單清單中移除附屬的表單，這個方法也會將設定主控表單<ph id="ph1">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="1038" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Form.ResizeBegin">
          <source>Occurs when a form enters resizing mode.</source>
          <target state="translated">發生於表單進入調整大小模式時。</target>       </trans-unit>
        <trans-unit id="1039" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.ResizeBegin">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ResizeBegin&gt;</ph> event is raised when the user begins to resize a form, typically by clicking and dragging one of the borders or the sizing grip located on the lower-right corner of the form.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.ResizeBegin&gt;</ph>當使用者開始調整表單時，通常按一下並拖曳其中一個框線或表單的右下角的調整大小底框的大小，就會引發事件。</target>       </trans-unit>
        <trans-unit id="1040" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.ResizeBegin">
          <source>This action puts the form into a modal sizing loop until the resize operation is completed.</source>
          <target state="translated">這個動作會將表單進入縮放強制回應迴圈，直到調整大小作業完成為止。</target>       </trans-unit>
        <trans-unit id="1041" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.ResizeBegin">
          <source>Typically, the following set of events occurs during a resize operation:</source>
          <target state="translated">一般而言，下列事件集的調整大小作業期間發生：</target>       </trans-unit>
        <trans-unit id="1042" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.ResizeBegin">
          <source>A single <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ResizeBegin&gt;</ph> event occurs as the form enters resizing mode.</source>
          <target state="translated">單一<ph id="ph1">&lt;xref:System.Windows.Forms.Form.ResizeBegin&gt;</ph>表單進入調整大小模式時，就會發生事件。</target>       </trans-unit>
        <trans-unit id="1043" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.ResizeBegin">
          <source>Zero or more pairs of <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Resize&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.SizeChanged&gt;</ph> events occur as the form's <ph id="ph3">&lt;xref:System.Windows.Forms.Form.Size%2A&gt;</ph> is modified.</source>
          <target state="translated">零或多個組<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Resize&gt;</ph>和<ph id="ph2">&lt;xref:System.Windows.Forms.Control.SizeChanged&gt;</ph>發生事件，以與表單<ph id="ph3">&lt;xref:System.Windows.Forms.Form.Size%2A&gt;</ph>修改。</target>       </trans-unit>
        <trans-unit id="1044" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.ResizeBegin">
          <source>A single <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ResizeEnd&gt;</ph> event occurs as the form exits resizing mode.</source>
          <target state="translated">單一<ph id="ph1">&lt;xref:System.Windows.Forms.Form.ResizeEnd&gt;</ph>表單結束調整大小模式時，就會發生事件。</target>       </trans-unit>
        <trans-unit id="1045" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.ResizeBegin">
          <source>Just clicking without dragging on a border or resizing grip will generate the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ResizeBegin&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Form.ResizeEnd&gt;</ph> events without any intermediate <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Resize&gt;</ph> and <ph id="ph4">&lt;xref:System.Windows.Forms.Control.SizeChanged&gt;</ph> event pairs.</source>
          <target state="translated">只要按一下框線拖曳或調整大小底框不會產生<ph id="ph1">&lt;xref:System.Windows.Forms.Form.ResizeBegin&gt;</ph>和<ph id="ph2">&lt;xref:System.Windows.Forms.Form.ResizeEnd&gt;</ph>事件沒有任何中繼<ph id="ph3">&lt;xref:System.Windows.Forms.Control.Resize&gt;</ph>和<ph id="ph4">&lt;xref:System.Windows.Forms.Control.SizeChanged&gt;</ph>事件組。</target>       </trans-unit>
        <trans-unit id="1046" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.ResizeBegin">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ResizeBegin&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Form.ResizeEnd&gt;</ph> pair of events is also raised when the user moves the form, typically by clicking and dragging on the caption bar.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.ResizeBegin&gt;</ph>和<ph id="ph2">&lt;xref:System.Windows.Forms.Form.ResizeEnd&gt;</ph>當使用者將表單中，通常按一下並拖曳標題列上，也會引發的事件配對。</target>       </trans-unit>
        <trans-unit id="1047" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.ResizeBegin">
          <source>These events are not generated by programmatic manipulation of the form, for example by changing the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Size%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Location%2A&gt;</ph> properties.</source>
          <target state="translated">這些事件不會產生的表單，以程式設計方式操作，例如藉由變更<ph id="ph1">&lt;xref:System.Windows.Forms.Form.Size%2A&gt;</ph>或<ph id="ph2">&lt;xref:System.Windows.Forms.Control.Location%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="1048" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.ResizeBegin">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">如需處理事件的詳細資訊，請參閱<bpt id="p1">[</bpt>處理和引發事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="1049" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.ResizeBegin">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">下列程式碼範例示範如何使用這個成員。</target>       </trans-unit>
        <trans-unit id="1050" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.ResizeBegin">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ResizeBegin&gt;</ph> event.</source>
          <target state="translated">在範例中，事件處理常式會報告一次<ph id="ph1">&lt;xref:System.Windows.Forms.Form.ResizeBegin&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="1051" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.ResizeBegin">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">此報表可協助您了解事件發生的時機，並可協助您偵錯。</target>       </trans-unit>
        <trans-unit id="1052" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.ResizeBegin">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">若要報告多個事件或事件經常發生，請考慮更換<ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph>與<ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph>或將訊息附加到多行<ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1053" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.ResizeBegin">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> named <ph id="ph2">`Form1`</ph>.</source>
          <target state="translated">若要執行範例程式碼，將它貼到包含類型的執行個體的專案<ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>名為<ph id="ph2">`Form1`</ph>。</target>       </trans-unit>
        <trans-unit id="1054" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.ResizeBegin">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ResizeBegin&gt;</ph> event.</source>
          <target state="translated">請確定事件處理常式關聯<ph id="ph1">&lt;xref:System.Windows.Forms.Form.ResizeBegin&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="1055" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Form.ResizeEnd">
          <source>Occurs when a form exits resizing mode.</source>
          <target state="translated">發生於表單結束調整大小模式時。</target>       </trans-unit>
        <trans-unit id="1056" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.ResizeEnd">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ResizeEnd&gt;</ph> event is raised when the user finishes resizing a form, typically by dragging one of the borders or the sizing grip located on the lower-right corner of the form, and then releasing it.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.ResizeEnd&gt;</ph>使用者完成調整表單時，通常由拖曳框線或表單的右下角的調整大小底框之一，再放開它時，就會引發事件。</target>       </trans-unit>
        <trans-unit id="1057" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.ResizeEnd">
          <source>For more information about the resizing operation, see the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ResizeBegin&gt;</ph> event.</source>
          <target state="translated">如需調整大小作業的詳細資訊，請參閱<ph id="ph1">&lt;xref:System.Windows.Forms.Form.ResizeBegin&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="1058" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.ResizeEnd">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ResizeEnd&gt;</ph> event is also generated after the user moves a form, typically by clicking and dragging on the caption bar.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.ResizeEnd&gt;</ph>之後，使用者移動表單時，通常按一下並拖曳標題列上，也會產生事件。</target>       </trans-unit>
        <trans-unit id="1059" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.ResizeEnd">
          <source>This event is not generated by programmatic manipulation of the form, for example by changing the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Size%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Location%2A&gt;</ph> properties.</source>
          <target state="translated">這個事件不由產生的表單，以程式設計方式操作，例如藉由變更<ph id="ph1">&lt;xref:System.Windows.Forms.Form.Size%2A&gt;</ph>或<ph id="ph2">&lt;xref:System.Windows.Forms.Control.Location%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="1060" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.ResizeEnd">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">如需處理事件的詳細資訊，請參閱<bpt id="p1">[</bpt>處理和引發事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="1061" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.ResizeEnd">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">下列程式碼範例示範如何使用這個成員。</target>       </trans-unit>
        <trans-unit id="1062" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.ResizeEnd">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ResizeEnd&gt;</ph> event.</source>
          <target state="translated">在範例中，事件處理常式會報告一次<ph id="ph1">&lt;xref:System.Windows.Forms.Form.ResizeEnd&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="1063" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.ResizeEnd">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">此報表可協助您了解事件發生的時機，並可協助您偵錯。</target>       </trans-unit>
        <trans-unit id="1064" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.ResizeEnd">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">若要報告多個事件或事件經常發生，請考慮更換<ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph>與<ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph>或將訊息附加到多行<ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1065" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.ResizeEnd">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> named <ph id="ph2">`Form1`</ph>.</source>
          <target state="translated">若要執行範例程式碼，將它貼到包含類型的執行個體的專案<ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>名為<ph id="ph2">`Form1`</ph>。</target>       </trans-unit>
        <trans-unit id="1066" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.ResizeEnd">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ResizeEnd&gt;</ph> event.</source>
          <target state="translated">請確定事件處理常式關聯<ph id="ph1">&lt;xref:System.Windows.Forms.Form.ResizeEnd&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="1067" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.RestoreBounds">
          <source>Gets the location and size of the form in its normal window state.</source>
          <target state="translated">取得處於正常視窗狀態下的表單之位置和大小。</target>       </trans-unit>
        <trans-unit id="1068" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.RestoreBounds">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> that contains the location and size of the form in the normal window state.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph>，包含處於正常視窗狀態下的表單位置和大小。</target>       </trans-unit>
        <trans-unit id="1069" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.RestoreBounds">
          <source>Typically, you use the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.RestoreBounds%2A&gt;</ph> property to track the user's window size and position preferences for the form in its normal window state.</source>
          <target state="translated">通常，您會使用<ph id="ph1">&lt;xref:System.Windows.Forms.Form.RestoreBounds%2A&gt;</ph>屬性，以追蹤使用者的視窗大小，並置於表單的喜好設定中處於正常視窗狀態。</target>       </trans-unit>
        <trans-unit id="1070" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.RestoreBounds">
          <source>You should track both the value of the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.WindowState%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Form.RestoreBounds%2A&gt;</ph> properties when tracking the user's window preferences.</source>
          <target state="translated">您應該追蹤的值<ph id="ph1">&lt;xref:System.Windows.Forms.Form.WindowState%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Windows.Forms.Form.RestoreBounds%2A&gt;</ph>時追蹤使用者的視窗喜好設定的屬性。</target>       </trans-unit>
        <trans-unit id="1071" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.RestoreBounds">
          <source>The value of the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.RestoreBounds%2A&gt;</ph> property is valid only when the <ph id="ph2">&lt;xref:System.Windows.Forms.Form.WindowState%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Windows.Forms.Form&gt;</ph> class is not equal to <ph id="ph4">&lt;xref:System.Windows.Forms.FormWindowState.Normal&gt;</ph>.</source>
          <target state="translated">值<ph id="ph1">&lt;xref:System.Windows.Forms.Form.RestoreBounds%2A&gt;</ph>屬性時才有效唯一<ph id="ph2">&lt;xref:System.Windows.Forms.Form.WindowState%2A&gt;</ph>屬性<ph id="ph3">&lt;xref:System.Windows.Forms.Form&gt;</ph>類別是否不等於<ph id="ph4">&lt;xref:System.Windows.Forms.FormWindowState.Normal&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1072" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.RightToLeftLayout">
          <source>Gets or sets a value indicating whether right-to-left mirror placement is turned on.</source>
          <target state="translated">取得或設定值，指出是否已開啟右到左的左右反轉位置。</target>       </trans-unit>
        <trans-unit id="1073" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.RightToLeftLayout">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if right-to-left mirror placement is turned on; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph> for standard child control placement.</source>
          <target state="translated">如果已開啟右到左的左右反轉位置，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為表示標準子控制項位置的 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1074" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.RightToLeftLayout">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">預設值為 <ph id="ph1">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1075" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.RightToLeftLayout">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.RightToLeftLayout%2A&gt;</ph> property is primarily useful for developing world-ready forms for worldwide audiences.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.RightToLeftLayout%2A&gt;</ph>屬性是主要用於開發世界性表單為全球的對象。</target>       </trans-unit>
        <trans-unit id="1076" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.RightToLeftLayout">
          <source>Many forms are designed so that controls are laid out on a form in a left-to-right fashion.</source>
          <target state="translated">許多形式的設計可讓控制項的配置中以左到右的方式在表單上。</target>       </trans-unit>
        <trans-unit id="1077" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.RightToLeftLayout">
          <source>These forms are compatible with languages that follow this writing direction.</source>
          <target state="translated">下列形式會以這個方向書寫的語言相容。</target>       </trans-unit>
        <trans-unit id="1078" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.RightToLeftLayout">
          <source>However, when you display the same forms to users of right-to-left languages, it is often preferable to reverse the order of the controls on the form.</source>
          <target state="translated">不過，顯示相同的表單顯示由右至左語言的使用者時，通常最好是在表單上控制項的順序互換。</target>       </trans-unit>
        <trans-unit id="1079" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.RightToLeftLayout">
          <source>If both the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.RightToLeftLayout%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.RightToLeft%2A&gt;</ph> properties are <ph id="ph3">`true`</ph>, mirroring will be turned on for the form, and control placement and text flow will be right-to-left.</source>
          <target state="translated">如果兩個<ph id="ph1">&lt;xref:System.Windows.Forms.Form.RightToLeftLayout%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Windows.Forms.Control.RightToLeft%2A&gt;</ph>屬性<ph id="ph3">`true`</ph>、 鏡像將會開啟該表單和控制項位置和文字會由右至左。</target>       </trans-unit>
        <trans-unit id="1080" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.RightToLeftLayout">
          <source>Unlike <ph id="ph1">&lt;xref:System.Windows.Forms.Control.RightToLeft%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Form.RightToLeftLayout%2A&gt;</ph> does not inherit.</source>
          <target state="translated">不同於<ph id="ph1">&lt;xref:System.Windows.Forms.Control.RightToLeft%2A&gt;</ph>，<ph id="ph2">&lt;xref:System.Windows.Forms.Form.RightToLeftLayout%2A&gt;</ph>不會繼承。</target>       </trans-unit>
        <trans-unit id="1081" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.RightToLeftLayout">
          <source>If you want it to take effect for child controls, you must set it on each child control that you want mirrored.</source>
          <target state="translated">如果您想要進行子控制項，您必須設定每個您想要鏡像的子控制項。</target>       </trans-unit>
        <trans-unit id="1082" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.RightToLeftLayout">
          <source>Owner draw is not supported when <ph id="ph1">&lt;xref:System.Windows.Forms.Form.RightToLeftLayout%2A&gt;</ph> is set to <ph id="ph2">`Yes`</ph>.</source>
          <target state="translated">不是主控描繪時，支援<ph id="ph1">&lt;xref:System.Windows.Forms.Form.RightToLeftLayout%2A&gt;</ph>設<ph id="ph2">`Yes`</ph>。</target>       </trans-unit>
        <trans-unit id="1083" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.RightToLeftLayout">
          <source>The owner draw events will still occur, but the behavior of any code you author in these events is not defined.</source>
          <target state="translated">主控描繪事件仍會發生，但您在這些事件中撰寫任何程式碼的行為未定義。</target>       </trans-unit>
        <trans-unit id="1084" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.RightToLeftLayout">
          <source>Additionally, <ph id="ph1">&lt;xref:System.Windows.Forms.Control.BackgroundImage%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Form.Opacity%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Form.TransparencyKey%2A&gt;</ph>, and the painting events are not supported.</source>
          <target state="translated">此外， <ph id="ph1">&lt;xref:System.Windows.Forms.Control.BackgroundImage%2A&gt;</ph>， <ph id="ph2">&lt;xref:System.Windows.Forms.Form.Opacity%2A&gt;</ph>， <ph id="ph3">&lt;xref:System.Windows.Forms.Form.TransparencyKey%2A&gt;</ph>，而且不支援的繪製事件。</target>       </trans-unit>
        <trans-unit id="1085" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.RightToLeftLayout">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.RightToLeftLayout%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.RightToLeft%2A&gt;</ph> properties cause the following Win32 API window styles to be set:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.RightToLeftLayout%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Windows.Forms.Control.RightToLeft%2A&gt;</ph>屬性會設定下列的 Win32 API 視窗樣式：</target>       </trans-unit>
        <trans-unit id="1086" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.RightToLeftLayout">
          <source>When <ph id="ph1">&lt;xref:System.Windows.Forms.Control.RightToLeft%2A&gt;</ph> is set to <ph id="ph2">`Yes`</ph> and <ph id="ph3">&lt;xref:System.Windows.Forms.Form.RightToLeftLayout%2A&gt;</ph> is set to <ph id="ph4">`true`</ph>, Windows Forms sets the <ph id="ph5">`WS_EX_LAYOUTRTL`</ph> window style, and removes the <ph id="ph6">`WS_EX_RIGHT`</ph> and <ph id="ph7">`WS_EX_RTLREADING`</ph> styles.</source>
          <target state="translated">當<ph id="ph1">&lt;xref:System.Windows.Forms.Control.RightToLeft%2A&gt;</ph>設<ph id="ph2">`Yes`</ph>和<ph id="ph3">&lt;xref:System.Windows.Forms.Form.RightToLeftLayout%2A&gt;</ph>設為<ph id="ph4">`true`</ph>，設定 Windows Form<ph id="ph5">`WS_EX_LAYOUTRTL`</ph>視窗樣式，並移除<ph id="ph6">`WS_EX_RIGHT`</ph>和<ph id="ph7">`WS_EX_RTLREADING`</ph>樣式。</target>       </trans-unit>
        <trans-unit id="1087" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.RightToLeftLayout">
          <source>When <ph id="ph1">&lt;xref:System.Windows.Forms.Control.RightToLeft%2A&gt;</ph> is set to <ph id="ph2">`Yes`</ph> but <ph id="ph3">&lt;xref:System.Windows.Forms.Form.RightToLeftLayout%2A&gt;</ph> is set to <ph id="ph4">`No`</ph>, Windows Forms sets the <ph id="ph5">`WS_EX_RIGHT`</ph> and <ph id="ph6">`WS_EX_RTLREADING`</ph> window styles.</source>
          <target state="translated">當<ph id="ph1">&lt;xref:System.Windows.Forms.Control.RightToLeft%2A&gt;</ph>設為<ph id="ph2">`Yes`</ph>但<ph id="ph3">&lt;xref:System.Windows.Forms.Form.RightToLeftLayout%2A&gt;</ph>設<ph id="ph4">`No`</ph>，設定 Windows Form<ph id="ph5">`WS_EX_RIGHT`</ph>和<ph id="ph6">`WS_EX_RTLREADING`</ph>視窗樣式。</target>       </trans-unit>
        <trans-unit id="1088" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.RightToLeftLayout">
          <source>Changing the value of this property raises the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.RightToLeftLayoutChanged&gt;</ph> event.</source>
          <target state="translated">變更這個屬性的值會引發<ph id="ph1">&lt;xref:System.Windows.Forms.Form.RightToLeftLayoutChanged&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="1089" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.RightToLeftLayout">
          <source>For more information about globalization issues, see <bpt id="p1">[</bpt>Best Practices for Developing World-Ready Applications<ept id="p1">](~/docs/standard/globalization-localization/best-practices-for-developing-world-ready-apps.md)</ept>.</source>
          <target state="translated">如需全球化問題的詳細資訊，請參閱<bpt id="p1">[</bpt>開發世界性的應用程式的最佳作法<ept id="p1">](~/docs/standard/globalization-localization/best-practices-for-developing-world-ready-apps.md)</ept>。</target>       </trans-unit>
        <trans-unit id="1090" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Form.RightToLeftLayoutChanged">
          <source>Occurs after the value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Form.RightToLeftLayout" /&gt;</ph> property changes.</source>
          <target state="translated">發生於 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Form.RightToLeftLayout" /&gt;</ph> 屬性的值變更之後。</target>       </trans-unit>
        <trans-unit id="1091" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.RightToLeftLayoutChanged">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.RightToLeft%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Form.RightToLeftLayout%2A&gt;</ph> properties are typically used in developing World-Ready applications.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Control.RightToLeft%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Windows.Forms.Form.RightToLeftLayout%2A&gt;</ph>屬性通常用於開發世界性的應用程式。</target>       </trans-unit>
        <trans-unit id="1092" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.RightToLeftLayoutChanged">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">下列程式碼範例示範如何使用這個成員。</target>       </trans-unit>
        <trans-unit id="1093" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.RightToLeftLayoutChanged">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.RightToLeftLayoutChanged&gt;</ph> event.</source>
          <target state="translated">在範例中，事件處理常式會報告一次<ph id="ph1">&lt;xref:System.Windows.Forms.Form.RightToLeftLayoutChanged&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="1094" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.RightToLeftLayoutChanged">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">此報表可協助您了解事件發生的時機，並可協助您偵錯。</target>       </trans-unit>
        <trans-unit id="1095" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.RightToLeftLayoutChanged">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">若要報告多個事件或事件經常發生，請考慮更換<ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph>與<ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph>或將訊息附加到多行<ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1096" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.RightToLeftLayoutChanged">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> named <ph id="ph2">`Form1`</ph>.</source>
          <target state="translated">若要執行範例程式碼，將它貼到包含類型的執行個體的專案<ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>名為<ph id="ph2">`Form1`</ph>。</target>       </trans-unit>
        <trans-unit id="1097" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.RightToLeftLayoutChanged">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.RightToLeftLayoutChanged&gt;</ph> event.</source>
          <target state="translated">請確定事件處理常式關聯<ph id="ph1">&lt;xref:System.Windows.Forms.Form.RightToLeftLayoutChanged&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="1098" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ScaleControl(System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)">
          <source>The factor by which the height and width of the control are scaled.</source>
          <target state="translated">控制項高度與寬度的縮放比例。</target>       </trans-unit>
        <trans-unit id="1099" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ScaleControl(System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.BoundsSpecified" /&gt;</ph> value that specifies the bounds of the control to use when defining its size and position.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.BoundsSpecified" /&gt;</ph> 值，指定在定義控制項的大小和位置時所用的控制項範圍。</target>       </trans-unit>
        <trans-unit id="1100" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ScaleControl(System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)">
          <source>Scales the location, size, padding, and margin of a control.</source>
          <target state="translated">縮放控制項的位置、大小、邊框間距和邊界。</target>       </trans-unit>
        <trans-unit id="1101" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ScaleCore(System.Single,System.Single)">
          <source>Percentage to scale the form horizontally</source>
          <target state="translated">水平縮放表單比例的百分比。</target>       </trans-unit>
        <trans-unit id="1102" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ScaleCore(System.Single,System.Single)">
          <source>Percentage to scale the form vertically</source>
          <target state="translated">垂直縮放表單比例的百分比。</target>       </trans-unit>
        <trans-unit id="1103" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ScaleCore(System.Single,System.Single)">
          <source>Performs scaling of the form.</source>
          <target state="translated">執行表單的縮放。</target>       </trans-unit>
        <trans-unit id="1104" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.Select(System.Boolean,System.Boolean)">
          <source>If set to true that the active control is changed</source>
          <target state="translated">如果使用中控制項確實設定為已變更</target>       </trans-unit>
        <trans-unit id="1105" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.Select(System.Boolean,System.Boolean)">
          <source>If directed is true, then this controls the direction in which focus is moved.</source>
          <target state="translated">如果確實已導向，這會控制焦點移動的方向。</target>       </trans-unit>
        <trans-unit id="1106" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.Select(System.Boolean,System.Boolean)">
          <source>If this is <ph id="ph1">&lt;see langword="true" /&gt;</ph>, then the next control is selected; otherwise, the previous control is selected.</source>
          <target state="translated">如果為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，則會選取下一個控制項，否則會選取上一個控制項。</target>       </trans-unit>
        <trans-unit id="1107" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.Select(System.Boolean,System.Boolean)">
          <source>Selects this form, and optionally selects the next or previous control.</source>
          <target state="translated">選取這個表單，並選擇性地選取下一個或上一個控制項。</target>       </trans-unit>
        <trans-unit id="1108" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.Select(System.Boolean,System.Boolean)">
          <source>For changing focus.</source>
          <target state="translated">用於變更焦點。</target>       </trans-unit>
        <trans-unit id="1109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.Select(System.Boolean,System.Boolean)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph>.</source>
          <target state="translated">關聯的列舉型別：<ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1110" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
          <source>The new <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Left" /&gt;</ph> property value of the control.</source>
          <target state="translated">控制項的新 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Left" /&gt;</ph> 屬性值。</target>       </trans-unit>
        <trans-unit id="1111" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
          <source>The new <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Top" /&gt;</ph> property value of the control.</source>
          <target state="translated">控制項的新 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Top" /&gt;</ph> 屬性值。</target>       </trans-unit>
        <trans-unit id="1112" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
          <source>The new <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Width" /&gt;</ph> property value of the control.</source>
          <target state="translated">控制項的新 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Width" /&gt;</ph> 屬性值。</target>       </trans-unit>
        <trans-unit id="1113" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
          <source>The new <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Height" /&gt;</ph> property value of the control.</source>
          <target state="translated">控制項的新 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Height" /&gt;</ph> 屬性值。</target>       </trans-unit>
        <trans-unit id="1114" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
          <source>A bitwise combination of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.BoundsSpecified" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.BoundsSpecified" /&gt;</ph> 值的位元組合。</target>       </trans-unit>
        <trans-unit id="1115" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
          <source>Performs the work of setting the specified bounds of this control.</source>
          <target state="translated">執行設定這個控制項的指定範圍的工作。</target>       </trans-unit>
        <trans-unit id="1116" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.SetClientSizeCore(System.Int32,System.Int32)">
          <source>Requested width of the client region.</source>
          <target state="translated">要求的工作區寬度。</target>       </trans-unit>
        <trans-unit id="1117" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.SetClientSizeCore(System.Int32,System.Int32)">
          <source>Requested height of the client region.</source>
          <target state="translated">要求的工作區高度。</target>       </trans-unit>
        <trans-unit id="1118" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.SetClientSizeCore(System.Int32,System.Int32)">
          <source>Sets the client size of the form.</source>
          <target state="translated">設定表單的工作區大小。</target>       </trans-unit>
        <trans-unit id="1119" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.SetClientSizeCore(System.Int32,System.Int32)">
          <source>This will adjust the bounds of the form to make the client size the requested size.</source>
          <target state="translated">如此將會調整表單的邊界，讓工作區大小變成要求的大小。</target>       </trans-unit>
        <trans-unit id="1120" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.SetDesktopBounds(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The x-coordinate of the form's location.</source>
          <target state="translated">表單位置的 X 座標。</target>       </trans-unit>
        <trans-unit id="1121" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.SetDesktopBounds(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The y-coordinate of the form's location.</source>
          <target state="translated">表單位置的 Y 座標。</target>       </trans-unit>
        <trans-unit id="1122" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.SetDesktopBounds(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The width of the form.</source>
          <target state="translated">表單的寬度。</target>       </trans-unit>
        <trans-unit id="1123" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.SetDesktopBounds(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The height of the form.</source>
          <target state="translated">表單的高度。</target>       </trans-unit>
        <trans-unit id="1124" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.SetDesktopBounds(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Sets the bounds of the form in desktop coordinates.</source>
          <target state="translated">設定桌面座標中表單的界限。</target>       </trans-unit>
        <trans-unit id="1125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.SetDesktopBounds(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Desktop coordinates are based on the working area of the screen, which excludes the taskbar.</source>
          <target state="translated">桌面座標為基礎的畫面中，排除工作列工作區域。</target>       </trans-unit>
        <trans-unit id="1126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.SetDesktopBounds(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>You can use this method to set the position and size of your form on the desktop.</source>
          <target state="translated">若要設定的位置和大小的表單在桌面，您可以使用這個方法。</target>       </trans-unit>
        <trans-unit id="1127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.SetDesktopBounds(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Since desktop coordinates are based on the working area of the form, you can use this method to ensure that your form is completely visible on the desktop.</source>
          <target state="translated">由於桌面座標會根據表單的工作區域，您可以使用這個方法，以確保您的表單是在桌面上完全可見。</target>       </trans-unit>
        <trans-unit id="1128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.SetDesktopBounds(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>The following code example demonstrates using the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.SetDesktopBounds%2A&gt;</ph> method.</source>
          <target state="translated">下列程式碼範例示範如何使用<ph id="ph1">&lt;xref:System.Windows.Forms.Form.SetDesktopBounds%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="1129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.SetDesktopBounds(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>To run this example, paste the following code in a form that contains a button named <ph id="ph1">`Button2`</ph>.</source>
          <target state="translated">若要執行此範例中，貼上下列程式碼包含名為按鈕的形式<ph id="ph1">`Button2`</ph>。</target>       </trans-unit>
        <trans-unit id="1130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.SetDesktopBounds(System.Int32,System.Int32,System.Int32,System.Int32)">
          <source>Ensure all events are associated with their event handlers.</source>
          <target state="translated">請確定所有事件都都具有其事件處理常式相關聯。</target>       </trans-unit>
        <trans-unit id="1131" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.SetDesktopLocation(System.Int32,System.Int32)">
          <source>The x-coordinate of the form's location.</source>
          <target state="translated">表單位置的 X 座標。</target>       </trans-unit>
        <trans-unit id="1132" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.SetDesktopLocation(System.Int32,System.Int32)">
          <source>The y-coordinate of the form's location.</source>
          <target state="translated">表單位置的 Y 座標。</target>       </trans-unit>
        <trans-unit id="1133" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.SetDesktopLocation(System.Int32,System.Int32)">
          <source>Sets the location of the form in desktop coordinates.</source>
          <target state="translated">設定桌面座標中表單的位置。</target>       </trans-unit>
        <trans-unit id="1134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.SetDesktopLocation(System.Int32,System.Int32)">
          <source>Desktop coordinates are based on the working area of the screen, which excludes the taskbar.</source>
          <target state="translated">桌面座標為基礎的畫面中，排除工作列工作區域。</target>       </trans-unit>
        <trans-unit id="1135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.SetDesktopLocation(System.Int32,System.Int32)">
          <source>You can use this method to position your form on the desktop.</source>
          <target state="translated">若要在桌面上放在您的表單，您可以使用這個方法。</target>       </trans-unit>
        <trans-unit id="1136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.SetDesktopLocation(System.Int32,System.Int32)">
          <source>Since desktop coordinates are based on the working area of the form, you can use this method to ensure that your form is completely visible on the desktop.</source>
          <target state="translated">由於桌面座標會根據表單的工作區域，您可以使用這個方法，以確保您的表單是在桌面上完全可見。</target>       </trans-unit>
        <trans-unit id="1137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.SetDesktopLocation(System.Int32,System.Int32)">
          <source>This method is intended to be used primarily for top-level forms; use the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.LayoutMdi%2A&gt;</ph> method to position multiple-document interface (MDI) child forms.</source>
          <target state="translated">這個方法適用於主要是針對最上層的表單。使用<ph id="ph1">&lt;xref:System.Windows.Forms.Form.LayoutMdi%2A&gt;</ph>方法來將多重文件介面 (MDI) 子表單。</target>       </trans-unit>
        <trans-unit id="1138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.SetDesktopLocation(System.Int32,System.Int32)">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.SetDesktopLocation%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Form.Load&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Forms.Form.Activate%2A&gt;</ph> members.</source>
          <target state="translated">下列程式碼範例示範如何使用<ph id="ph1">&lt;xref:System.Windows.Forms.Form.SetDesktopLocation%2A&gt;</ph>，<ph id="ph2">&lt;xref:System.Windows.Forms.Form.Load&gt;</ph>和<ph id="ph3">&lt;xref:System.Windows.Forms.Form.Activate%2A&gt;</ph>成員。</target>       </trans-unit>
        <trans-unit id="1139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.SetDesktopLocation(System.Int32,System.Int32)">
          <source>To run the example, paste the following code in a form called <ph id="ph1">`Form1`</ph> containing a button called <ph id="ph2">`Button1`</ph> and two <ph id="ph3">`Label`</ph> controls called <ph id="ph4">`Label1`</ph> and <ph id="ph5">`Label2`</ph>.</source>
          <target state="translated">若要執行此範例，下列程式碼的呼叫格式貼<ph id="ph1">`Form1`</ph>包含按鈕呼叫<ph id="ph2">`Button1`</ph>和兩個<ph id="ph3">`Label`</ph>控制項稱為<ph id="ph4">`Label1`</ph>和<ph id="ph5">`Label2`</ph>。</target>       </trans-unit>
        <trans-unit id="1140" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.SetVisibleCore(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to make the control visible; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> 表示將控制項設為可見，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1141" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.SetVisibleCore(System.Boolean)">
          <source>Sets the control to the specified visible state.</source>
          <target state="translated">將控制項設定為指定的可見狀態。</target>       </trans-unit>
        <trans-unit id="1142" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.Show(System.Windows.Forms.IWin32Window)">
          <source>Any object that implements <ph id="ph1">&lt;see cref="T:System.Windows.Forms.IWin32Window" /&gt;</ph> and represents the top-level window that will own this form.</source>
          <target state="translated">實作 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.IWin32Window" /&gt;</ph> 及代表將擁有這個表單之最上層視窗的任何物件。</target>       </trans-unit>
        <trans-unit id="1143" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.Show(System.Windows.Forms.IWin32Window)">
          <source>Shows the form with the specified owner to the user.</source>
          <target state="translated">為使用者顯示具有指定擁有人的表單。</target>       </trans-unit>
        <trans-unit id="1144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.Show(System.Windows.Forms.IWin32Window)">
          <source>You can use this method to display a non-modal form.</source>
          <target state="translated">您可以使用這個方法以顯示非強制回應表單。</target>       </trans-unit>
        <trans-unit id="1145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.Show(System.Windows.Forms.IWin32Window)">
          <source>When you use this method, the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Owner%2A&gt;</ph> property of the form is set to <ph id="ph2">`owner`</ph>.</source>
          <target state="translated">當您使用這個方法，<ph id="ph1">&lt;xref:System.Windows.Forms.Form.Owner%2A&gt;</ph>表單的屬性設定為<ph id="ph2">`owner`</ph>。</target>       </trans-unit>
        <trans-unit id="1146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.Show(System.Windows.Forms.IWin32Window)">
          <source>The non-modal form can use the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Owner%2A&gt;</ph> property to get information about the owning form.</source>
          <target state="translated">非強制回應表單可以使用<ph id="ph1">&lt;xref:System.Windows.Forms.Form.Owner%2A&gt;</ph>屬性來取得主控表單的相關資訊。</target>       </trans-unit>
        <trans-unit id="1147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.Show(System.Windows.Forms.IWin32Window)">
          <source>Calling this method is identical to setting the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Owner%2A&gt;</ph> property of the non-modal and then calling the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Show&gt;</ph> method.</source>
          <target state="translated">呼叫這個方法相當於設定<ph id="ph1">&lt;xref:System.Windows.Forms.Form.Owner%2A&gt;</ph>非強制回應屬性，然後再呼叫<ph id="ph2">&lt;xref:System.Windows.Forms.Control.Show&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="1148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.Show(System.Windows.Forms.IWin32Window)">
          <source>Showing the form is equivalent to setting the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Visible%2A&gt;</ph> property to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">顯示表單就相當於設定<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Visible%2A&gt;</ph>屬性<ph id="ph2">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="1149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.Show(System.Windows.Forms.IWin32Window)">
          <source>After the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Show%2A&gt;</ph> method is called, the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Visible%2A&gt;</ph> property returns a value of <ph id="ph3">`true`</ph> until the <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Hide%2A&gt;</ph> method is called.</source>
          <target state="translated">之後<ph id="ph1">&lt;xref:System.Windows.Forms.Form.Show%2A&gt;</ph>呼叫方法時，<ph id="ph2">&lt;xref:System.Windows.Forms.Control.Visible%2A&gt;</ph>屬性會傳回值為<ph id="ph3">`true`</ph>直到<ph id="ph4">&lt;xref:System.Windows.Forms.Control.Hide%2A&gt;</ph>方法呼叫。</target>       </trans-unit>
        <trans-unit id="1150" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.Show(System.Windows.Forms.IWin32Window)">
          <source>The form being shown is already visible.</source>
          <target state="translated">已經可以看到所顯示的表單。</target>       </trans-unit>
        <trans-unit id="1151" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.Show(System.Windows.Forms.IWin32Window)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="1152" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.Show(System.Windows.Forms.IWin32Window)">
          <source>The form specified in the <ph id="ph1">&lt;paramref name="owner" /&gt;</ph> parameter is the same as the form being shown.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="owner" /&gt;</ph> 參數中指定的表單與顯示的表單相同。</target>       </trans-unit>
        <trans-unit id="1153" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.Show(System.Windows.Forms.IWin32Window)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="1154" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.Show(System.Windows.Forms.IWin32Window)">
          <source>The form being shown is disabled.</source>
          <target state="translated">已停用所顯示的表單。</target>       </trans-unit>
        <trans-unit id="1155" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.Show(System.Windows.Forms.IWin32Window)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="1156" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.Show(System.Windows.Forms.IWin32Window)">
          <source>The form being shown is not a top-level window.</source>
          <target state="translated">所顯示的表單不是最上層視窗。</target>       </trans-unit>
        <trans-unit id="1157" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.Show(System.Windows.Forms.IWin32Window)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="1158" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.Show(System.Windows.Forms.IWin32Window)">
          <source>The form being shown as a dialog box is already a modal form.</source>
          <target state="translated">顯示為對話方塊的表單已是強制回應表單。</target>       </trans-unit>
        <trans-unit id="1159" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.Show(System.Windows.Forms.IWin32Window)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="1160" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.Show(System.Windows.Forms.IWin32Window)">
          <source>The current process is not running in user interactive mode (for more information, see <ph id="ph1">&lt;see cref="P:System.Windows.Forms.SystemInformation.UserInteractive" /&gt;</ph>).</source>
          <target state="translated">目前的處理序不在使用者互動模式下執行 (如需詳細資訊，請參閱 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.SystemInformation.UserInteractive" /&gt;</ph>)。</target>       </trans-unit>
        <trans-unit id="1161" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.Form">
          <source>Shows the form as a modal dialog box.</source>
          <target state="translated">將表單顯示為強制回應對話方塊。</target>       </trans-unit>
        <trans-unit id="1162" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ShowDialog">
          <source>Shows the form as a modal dialog box.</source>
          <target state="translated">將表單顯示為強制回應對話方塊。</target>       </trans-unit>
        <trans-unit id="1163" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ShowDialog">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DialogResult" /&gt;</ph> values.</source>
          <target state="translated">其中一個 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DialogResult" /&gt;</ph> 值。</target>       </trans-unit>
        <trans-unit id="1164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.ShowDialog">
          <source>You can use this method to display a modal dialog box in your application.</source>
          <target state="translated">在您的應用程式中顯示強制回應對話方塊中，您可以使用這個方法。</target>       </trans-unit>
        <trans-unit id="1165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.ShowDialog">
          <source>When this method is called, the code following it is not executed until after the dialog box is closed.</source>
          <target state="translated">呼叫這個方法時，它後面的程式碼將會等到執行之後關閉對話方塊。</target>       </trans-unit>
        <trans-unit id="1166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.ShowDialog">
          <source>The dialog box can be assigned one of the values of the <ph id="ph1">&lt;xref:System.Windows.Forms.DialogResult&gt;</ph> enumeration by assigning it to the <ph id="ph2">&lt;xref:System.Windows.Forms.Button.DialogResult%2A&gt;</ph> property of a <ph id="ph3">&lt;xref:System.Windows.Forms.Button&gt;</ph> on the form or by setting the <ph id="ph4">&lt;xref:System.Windows.Forms.Form.DialogResult%2A&gt;</ph> property of the form in code.</source>
          <target state="translated">可指派的值的其中一個對話方塊<ph id="ph1">&lt;xref:System.Windows.Forms.DialogResult&gt;</ph>將它指派給列舉<ph id="ph2">&lt;xref:System.Windows.Forms.Button.DialogResult%2A&gt;</ph>屬性<ph id="ph3">&lt;xref:System.Windows.Forms.Button&gt;</ph>表單上，或藉由設定<ph id="ph4">&lt;xref:System.Windows.Forms.Form.DialogResult%2A&gt;</ph>表單程式碼中的屬性。</target>       </trans-unit>
        <trans-unit id="1167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.ShowDialog">
          <source>This value is then returned by this method.</source>
          <target state="translated">然後，這個值會傳回由這個方法。</target>       </trans-unit>
        <trans-unit id="1168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.ShowDialog">
          <source>You can use this return value to determine how to process the actions that occurred in the dialog box.</source>
          <target state="translated">您可以使用這個傳回值，以決定如何處理發生在對話方塊中的動作。</target>       </trans-unit>
        <trans-unit id="1169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.ShowDialog">
          <source>For example, if the dialog box was closed and returned the <ph id="ph1">`DialogResult.Cancel`</ph> value through this method, you could prevent code following the call to <ph id="ph2">&lt;xref:System.Windows.Forms.Form.ShowDialog%2A&gt;</ph> from executing.</source>
          <target state="translated">例如，如果對話方塊已關閉且傳回<ph id="ph1">`DialogResult.Cancel`</ph>值透過這個方法，您可能導致在呼叫的程式碼<ph id="ph2">&lt;xref:System.Windows.Forms.Form.ShowDialog%2A&gt;</ph>執行。</target>       </trans-unit>
        <trans-unit id="1170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.ShowDialog">
          <source>When a form is displayed as a modal dialog box, clicking the <bpt id="p1">**</bpt>Close<ept id="p1">**</ept> button (the button with an X at the upper-right corner of the form) causes the form to be hidden and the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.DialogResult%2A&gt;</ph> property to be set to <ph id="ph2">`DialogResult.Cancel`</ph>.</source>
          <target state="translated">當表單顯示為強制回應對話方塊時，按一下<bpt id="p1">**</bpt>關閉<ept id="p1">**</ept>按鈕 （表單右上角的 X 按鈕） 將會隱藏表單和<ph id="ph1">&lt;xref:System.Windows.Forms.Form.DialogResult%2A&gt;</ph>屬性設定為<ph id="ph2">`DialogResult.Cancel`</ph>。</target>       </trans-unit>
        <trans-unit id="1171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.ShowDialog">
          <source>Unlike non-modal forms, the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Close%2A&gt;</ph> method is not called by the .NET Framework when the user clicks the close form button of a dialog box or sets the value of the <ph id="ph2">&lt;xref:System.Windows.Forms.Form.DialogResult%2A&gt;</ph> property.</source>
          <target state="translated">不像非強制回應表單<ph id="ph1">&lt;xref:System.Windows.Forms.Form.Close%2A&gt;</ph>當使用者按一下對話方塊的 [關閉表單] 按鈕，或設定值的方法不由.NET Framework 呼叫<ph id="ph2">&lt;xref:System.Windows.Forms.Form.DialogResult%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="1172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.ShowDialog">
          <source>Instead the form is hidden and can be shown again without creating a new instance of the dialog box.</source>
          <target state="translated">表單隱藏的而可再次顯示，而不需要建立對話方塊中的新執行個體。</target>       </trans-unit>
        <trans-unit id="1173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.ShowDialog">
          <source>Because a form displayed as a dialog box is hidden instead of closed, you must call the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Dispose%2A&gt;</ph> method of the form when the form is no longer needed by your application.</source>
          <target state="translated">因為表單中顯示為對話方塊中會隱藏而不是關閉，您必須呼叫<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Dispose%2A&gt;</ph>時您的應用程式不再需要表單形式的方法。</target>       </trans-unit>
        <trans-unit id="1174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.ShowDialog">
          <source>This version of the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ShowDialog%2A&gt;</ph> method does not specify a form or control as its owner.</source>
          <target state="translated">這個版本的<ph id="ph1">&lt;xref:System.Windows.Forms.Form.ShowDialog%2A&gt;</ph>方法未指定表單或控制項為其擁有者。</target>       </trans-unit>
        <trans-unit id="1175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.ShowDialog">
          <source>When this version is called, the currently active window is made the owner of the dialog box.</source>
          <target state="translated">此版本稱為目前作用中視窗會在對話方塊的 擁有者。</target>       </trans-unit>
        <trans-unit id="1176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.ShowDialog">
          <source>If you want to specify a specific owner, use the other version of this method.</source>
          <target state="translated">如果您想要指定特定擁有者，請使用這個方法的另一個版本。</target>       </trans-unit>
        <trans-unit id="1177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.ShowDialog">
          <source>The following code example displays a form as a modal dialog box and evaluates the return value of the dialog box before determining whether to read the value of a <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> control on the dialog box form.</source>
          <target state="translated">下列程式碼範例顯示為強制回應對話方塊的表單，並評估對話方塊中的傳回值之前判斷要讀取的值<ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>對話方塊表單上的控制項。</target>       </trans-unit>
        <trans-unit id="1178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.ShowDialog">
          <source>This example requires that a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> named <ph id="ph2">`testDialog`</ph> is created and that it contains a <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> control named <ph id="ph4">`TextBox1`</ph>.</source>
          <target state="translated">這個範例需要<ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>名為<ph id="ph2">`testDialog`</ph>建立和它包含<ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>控制項，名為<ph id="ph4">`TextBox1`</ph>。</target>       </trans-unit>
        <trans-unit id="1179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.ShowDialog">
          <source>Furthermore, the example requires that code in this example is contained and called from a different <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> in order to display <ph id="ph2">`testDialog`</ph> as a modal dialog box.</source>
          <target state="translated">此外，這個範例需要在此範例中的程式碼是包含，並呼叫來自不同<ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>才能顯示<ph id="ph2">`testDialog`</ph>為強制回應對話方塊。</target>       </trans-unit>
        <trans-unit id="1180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.ShowDialog">
          <source>The example uses the version of <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ShowDialog%2A&gt;</ph> that specifies an owner for the dialog box.</source>
          <target state="translated">此範例會使用新版<ph id="ph1">&lt;xref:System.Windows.Forms.Form.ShowDialog%2A&gt;</ph>指定對話方塊的擁有者。</target>       </trans-unit>
        <trans-unit id="1181" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ShowDialog">
          <source>The form being shown is already visible.</source>
          <target state="translated">已經可以看到所顯示的表單。</target>       </trans-unit>
        <trans-unit id="1182" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ShowDialog">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="1183" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ShowDialog">
          <source>The form being shown is disabled.</source>
          <target state="translated">已停用所顯示的表單。</target>       </trans-unit>
        <trans-unit id="1184" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ShowDialog">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="1185" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ShowDialog">
          <source>The form being shown is not a top-level window.</source>
          <target state="translated">所顯示的表單不是最上層視窗。</target>       </trans-unit>
        <trans-unit id="1186" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ShowDialog">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="1187" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ShowDialog">
          <source>The form being shown as a dialog box is already a modal form.</source>
          <target state="translated">顯示為對話方塊的表單已是強制回應表單。</target>       </trans-unit>
        <trans-unit id="1188" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ShowDialog">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="1189" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ShowDialog">
          <source>The current process is not running in user interactive mode (for more information, see <ph id="ph1">&lt;see cref="P:System.Windows.Forms.SystemInformation.UserInteractive" /&gt;</ph>).</source>
          <target state="translated">目前的處理序不在使用者互動模式下執行 (如需詳細資訊，請參閱 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.SystemInformation.UserInteractive" /&gt;</ph>)。</target>       </trans-unit>
        <trans-unit id="1190" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ShowDialog(System.Windows.Forms.IWin32Window)">
          <source>Any object that implements <ph id="ph1">&lt;see cref="T:System.Windows.Forms.IWin32Window" /&gt;</ph> that represents the top-level window that will own the modal dialog box.</source>
          <target state="translated">實作 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.IWin32Window" /&gt;</ph> 的任何物件，代表將擁有強制回應對話方塊的最上層視窗。</target>       </trans-unit>
        <trans-unit id="1191" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ShowDialog(System.Windows.Forms.IWin32Window)">
          <source>Shows the form as a modal dialog box with the specified owner.</source>
          <target state="translated">以指定的擁有人將表單顯示為強制回應對話方塊。</target>       </trans-unit>
        <trans-unit id="1192" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ShowDialog(System.Windows.Forms.IWin32Window)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DialogResult" /&gt;</ph> values.</source>
          <target state="translated">其中一個 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DialogResult" /&gt;</ph> 值。</target>       </trans-unit>
        <trans-unit id="1193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.ShowDialog(System.Windows.Forms.IWin32Window)">
          <source>You can use this method to display a modal dialog box in your application.</source>
          <target state="translated">在您的應用程式中顯示強制回應對話方塊中，您可以使用這個方法。</target>       </trans-unit>
        <trans-unit id="1194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.ShowDialog(System.Windows.Forms.IWin32Window)">
          <source>When this method is called, the code following it is not executed until after the dialog box is closed.</source>
          <target state="translated">呼叫這個方法時，它後面的程式碼將會等到執行之後關閉對話方塊。</target>       </trans-unit>
        <trans-unit id="1195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.ShowDialog(System.Windows.Forms.IWin32Window)">
          <source>The dialog box can be assigned one of the values of <ph id="ph1">&lt;xref:System.Windows.Forms.DialogResult&gt;</ph> by assigning it to the <ph id="ph2">&lt;xref:System.Windows.Forms.Button.DialogResult%2A&gt;</ph> property of a <ph id="ph3">&lt;xref:System.Windows.Forms.Button&gt;</ph> on the form or by setting the <ph id="ph4">&lt;xref:System.Windows.Forms.Form.DialogResult%2A&gt;</ph> property of the form in code.</source>
          <target state="translated">可指派的值的其中一個對話方塊<ph id="ph1">&lt;xref:System.Windows.Forms.DialogResult&gt;</ph>所指派到<ph id="ph2">&lt;xref:System.Windows.Forms.Button.DialogResult%2A&gt;</ph>屬性<ph id="ph3">&lt;xref:System.Windows.Forms.Button&gt;</ph>表單上，或藉由設定<ph id="ph4">&lt;xref:System.Windows.Forms.Form.DialogResult%2A&gt;</ph>表單程式碼中的屬性。</target>       </trans-unit>
        <trans-unit id="1196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.ShowDialog(System.Windows.Forms.IWin32Window)">
          <source>This value is then returned by this method.</source>
          <target state="translated">然後，這個值會傳回由這個方法。</target>       </trans-unit>
        <trans-unit id="1197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.ShowDialog(System.Windows.Forms.IWin32Window)">
          <source>You can use this return value to determine how to process the actions that occurred in the dialog box.</source>
          <target state="translated">您可以使用這個傳回值，以決定如何處理發生在對話方塊中的動作。</target>       </trans-unit>
        <trans-unit id="1198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.ShowDialog(System.Windows.Forms.IWin32Window)">
          <source>For example, if the dialog box was closed and returned the <ph id="ph1">`DialogResult.Cancel`</ph> value through this method, you could prevent code following the call to <ph id="ph2">&lt;xref:System.Windows.Forms.Form.ShowDialog%2A&gt;</ph> from executing.</source>
          <target state="translated">例如，如果對話方塊已關閉且傳回<ph id="ph1">`DialogResult.Cancel`</ph>值透過這個方法，您可能導致在呼叫的程式碼<ph id="ph2">&lt;xref:System.Windows.Forms.Form.ShowDialog%2A&gt;</ph>執行。</target>       </trans-unit>
        <trans-unit id="1199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.ShowDialog(System.Windows.Forms.IWin32Window)">
          <source>When a form is displayed as a modal dialog box, clicking the <bpt id="p1">**</bpt>Close<ept id="p1">**</ept> button (the button with an X at the upper-right corner of the form) causes the form to be hidden and the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.DialogResult%2A&gt;</ph> property to be set to <ph id="ph2">`DialogResult.Cancel`</ph>.</source>
          <target state="translated">當表單顯示為強制回應對話方塊時，按一下<bpt id="p1">**</bpt>關閉<ept id="p1">**</ept>按鈕 （表單右上角的 X 按鈕） 將會隱藏表單和<ph id="ph1">&lt;xref:System.Windows.Forms.Form.DialogResult%2A&gt;</ph>屬性設定為<ph id="ph2">`DialogResult.Cancel`</ph>。</target>       </trans-unit>
        <trans-unit id="1200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.ShowDialog(System.Windows.Forms.IWin32Window)">
          <source>Unlike modeless forms, the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Close%2A&gt;</ph> method is not called by the .NET Framework when the user clicks the close form button of a dialog box or sets the value of the <ph id="ph2">&lt;xref:System.Windows.Forms.Form.DialogResult%2A&gt;</ph> property.</source>
          <target state="translated">不像非強制回應表單，<ph id="ph1">&lt;xref:System.Windows.Forms.Form.Close%2A&gt;</ph>當使用者按一下對話方塊的 [關閉表單] 按鈕，或設定值的方法不由.NET Framework 呼叫<ph id="ph2">&lt;xref:System.Windows.Forms.Form.DialogResult%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="1201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.ShowDialog(System.Windows.Forms.IWin32Window)">
          <source>Instead the form is hidden and can be shown again without creating a new instance of the dialog box.</source>
          <target state="translated">表單隱藏的而可再次顯示，而不需要建立對話方塊中的新執行個體。</target>       </trans-unit>
        <trans-unit id="1202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.ShowDialog(System.Windows.Forms.IWin32Window)">
          <source>Because a form displayed as a dialog box is hidden instead of closed, you must call the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Dispose%2A&gt;</ph> method of the form when the form is no longer needed by your application.</source>
          <target state="translated">因為表單中顯示為對話方塊中會隱藏而不是關閉，您必須呼叫<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Dispose%2A&gt;</ph>時您的應用程式不再需要表單形式的方法。</target>       </trans-unit>
        <trans-unit id="1203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.ShowDialog(System.Windows.Forms.IWin32Window)">
          <source>This version of the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ShowDialog%2A&gt;</ph> method allows you to specify a specific form that will own the dialog box that is shown.</source>
          <target state="translated">這個版本的<ph id="ph1">&lt;xref:System.Windows.Forms.Form.ShowDialog%2A&gt;</ph>方法可讓您指定將擁有對話方塊所顯示的特定表單。</target>       </trans-unit>
        <trans-unit id="1204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.ShowDialog(System.Windows.Forms.IWin32Window)">
          <source>The following code example displays a form as a modal dialog box and evaluates the return value of the dialog box before determining whether to read the value of a <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> control on the dialog box form.</source>
          <target state="translated">下列程式碼範例顯示為強制回應對話方塊的表單，並評估對話方塊中的傳回值之前判斷要讀取的值<ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>對話方塊表單上的控制項。</target>       </trans-unit>
        <trans-unit id="1205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.ShowDialog(System.Windows.Forms.IWin32Window)">
          <source>This example requires that a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> named <ph id="ph2">`Form2`</ph> is created and that it contains a <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> control named <ph id="ph4">`TextBox1`</ph>.</source>
          <target state="translated">這個範例需要<ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>名為<ph id="ph2">`Form2`</ph>建立和它包含<ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>控制項，名為<ph id="ph4">`TextBox1`</ph>。</target>       </trans-unit>
        <trans-unit id="1206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.ShowDialog(System.Windows.Forms.IWin32Window)">
          <source>The example uses the version of <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ShowDialog%2A&gt;</ph> that specifies an owner for the dialog box.</source>
          <target state="translated">此範例會使用新版<ph id="ph1">&lt;xref:System.Windows.Forms.Form.ShowDialog%2A&gt;</ph>指定對話方塊的擁有者。</target>       </trans-unit>
        <trans-unit id="1207" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ShowDialog(System.Windows.Forms.IWin32Window)">
          <source>The form specified in the <ph id="ph1">&lt;paramref name="owner" /&gt;</ph> parameter is the same as the form being shown.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="owner" /&gt;</ph> 參數中指定的表單與顯示的表單相同。</target>       </trans-unit>
        <trans-unit id="1208" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ShowDialog(System.Windows.Forms.IWin32Window)">
          <source>The form being shown is already visible.</source>
          <target state="translated">已經可以看到所顯示的表單。</target>       </trans-unit>
        <trans-unit id="1209" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ShowDialog(System.Windows.Forms.IWin32Window)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="1210" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ShowDialog(System.Windows.Forms.IWin32Window)">
          <source>The form being shown is disabled.</source>
          <target state="translated">已停用所顯示的表單。</target>       </trans-unit>
        <trans-unit id="1211" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ShowDialog(System.Windows.Forms.IWin32Window)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="1212" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ShowDialog(System.Windows.Forms.IWin32Window)">
          <source>The form being shown is not a top-level window.</source>
          <target state="translated">所顯示的表單不是最上層視窗。</target>       </trans-unit>
        <trans-unit id="1213" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ShowDialog(System.Windows.Forms.IWin32Window)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="1214" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ShowDialog(System.Windows.Forms.IWin32Window)">
          <source>The form being shown as a dialog box is already a modal form.</source>
          <target state="translated">顯示為對話方塊的表單已是強制回應表單。</target>       </trans-unit>
        <trans-unit id="1215" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ShowDialog(System.Windows.Forms.IWin32Window)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="1216" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ShowDialog(System.Windows.Forms.IWin32Window)">
          <source>The current process is not running in user interactive mode (for more information, see <ph id="ph1">&lt;see cref="P:System.Windows.Forms.SystemInformation.UserInteractive" /&gt;</ph>).</source>
          <target state="translated">目前的處理序不在使用者互動模式下執行 (如需詳細資訊，請參閱 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.SystemInformation.UserInteractive" /&gt;</ph>)。</target>       </trans-unit>
        <trans-unit id="1217" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.ShowIcon">
          <source>Gets or sets a value indicating whether an icon is displayed in the caption bar of the form.</source>
          <target state="translated">取得或設定值，指出圖示是否會顯示在表單的標題列中。</target>       </trans-unit>
        <trans-unit id="1218" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ShowIcon">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the form displays an icon in the caption bar; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果表單會在標題列中顯示圖示，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1219" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ShowIcon">
          <source>The default is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">預設值為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1220" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ShowIcon">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ShowIcon%2A&gt;</ph> property contains a <ph id="ph2">&lt;xref:System.Boolean&gt;</ph> value that indicates whether the form's <ph id="ph3">&lt;xref:System.Windows.Forms.Form.Icon%2A&gt;</ph> is displayed in the caption bar of the form.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.ShowIcon%2A&gt;</ph>屬性包含<ph id="ph2">&lt;xref:System.Boolean&gt;</ph>值，指出是否將表單的<ph id="ph3">&lt;xref:System.Windows.Forms.Form.Icon%2A&gt;</ph>會顯示在表單的標題列。</target>       </trans-unit>
        <trans-unit id="1221" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ShowIcon">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ControlBox%2A&gt;</ph> property is <ph id="ph2">`false`</ph>, both the icon and control box will be suppressed.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Windows.Forms.Form.ControlBox%2A&gt;</ph>屬性是<ph id="ph2">`false`</ph>，將隱藏的圖示和控制項的方塊。</target>       </trans-unit>
        <trans-unit id="1222" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ShowIcon">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ShowIcon%2A&gt;</ph> is <ph id="ph2">`false`</ph> when the primary form is shown, a generic icon will be displayed in the taskbar button for the application.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Windows.Forms.Form.ShowIcon%2A&gt;</ph>是<ph id="ph2">`false`</ph>的一般圖示時顯示的主要形式，將顯示在應用程式的工作列按鈕。</target>       </trans-unit>
        <trans-unit id="1223" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ShowIcon">
          <source>This property has no effect if <ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormBorderStyle%2A&gt;</ph> is set to <ph id="ph2">&lt;xref:System.Windows.Forms.FormBorderStyle.FixedDialog&gt;</ph>.</source>
          <target state="translated">如果這個屬性就不會影響<ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormBorderStyle%2A&gt;</ph>設<ph id="ph2">&lt;xref:System.Windows.Forms.FormBorderStyle.FixedDialog&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1224" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ShowIcon">
          <source>In that case, the form does not display an icon.</source>
          <target state="translated">在此情況下，表單不會顯示圖示。</target>       </trans-unit>
        <trans-unit id="1225" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.ShowInTaskbar">
          <source>Gets or sets a value indicating whether the form is displayed in the Windows taskbar.</source>
          <target state="translated">取得或設定值，指出表單是否顯示在 Windows 工作列中。</target>       </trans-unit>
        <trans-unit id="1226" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ShowInTaskbar">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to display the form in the Windows taskbar at run time; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> 表示要在執行階段於 Windows 工作列中顯示表單，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1227" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ShowInTaskbar">
          <source>The default is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">預設值為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1228" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ShowInTaskbar">
          <source>If a form is parented within another form, the parented form is not displayed in the Windows taskbar.</source>
          <target state="translated">如果表單在另一種形式中成為父代，父代的表單不會顯示在 Windows 工作列中。</target>       </trans-unit>
        <trans-unit id="1229" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ShowInTaskbar">
          <source>You can use this property to prevent users from selecting your form through the Windows taskbar.</source>
          <target state="translated">您可以使用這個屬性，以避免使用者選取您透過 Windows 工作列的表單。</target>       </trans-unit>
        <trans-unit id="1230" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ShowInTaskbar">
          <source>For example, if you display a Find and Replace tool window in your application, you might want to prevent that window from being selected through the Windows taskbar because you would need both the application's main window and the Find and Replace tool window displayed in order to process searches appropriately.</source>
          <target state="translated">比方說，如果您在應用程式中顯示 [尋找和取代] 工具視窗，您可能想要防止該視窗正在選取透過 Windows 工作列中，因為您需要應用程式的主視窗和 [尋找和取代] 工具視窗顯示此選項，才能適當地處理搜尋。</target>       </trans-unit>
        <trans-unit id="1231" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ShowInTaskbar">
          <source>You will often wish to use this property when creating a form with the <ph id="ph1">&lt;xref:System.Windows.Forms.FormBorderStyle.FixedToolWindow&gt;</ph> style.</source>
          <target state="translated">您通常要使用這個屬性時建立的表單具有<ph id="ph1">&lt;xref:System.Windows.Forms.FormBorderStyle.FixedToolWindow&gt;</ph>樣式。</target>       </trans-unit>
        <trans-unit id="1232" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ShowInTaskbar">
          <source>Setting the <ph id="ph1">&lt;xref:System.Windows.Forms.FormBorderStyle.FixedToolWindow&gt;</ph> style does not alone guarantee that a window will not appear in the taskbar.</source>
          <target state="translated">設定<ph id="ph1">&lt;xref:System.Windows.Forms.FormBorderStyle.FixedToolWindow&gt;</ph>樣式不單獨保證視窗不會出現在工作列。</target>       </trans-unit>
        <trans-unit id="1233" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ShowInTaskbar">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ShowInTaskbar%2A&gt;</ph> property to make a dialog box that is not displayed in the Windows taskbar.</source>
          <target state="translated">下列程式碼範例示範如何使用<ph id="ph1">&lt;xref:System.Windows.Forms.Form.ShowInTaskbar%2A&gt;</ph>屬性使方塊的對話方塊不會顯示在 Windows 工作列。</target>       </trans-unit>
        <trans-unit id="1234" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Form.Shown">
          <source>Occurs whenever the form is first displayed.</source>
          <target state="translated">發生於表單第一次顯示時。</target>       </trans-unit>
        <trans-unit id="1235" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Shown">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Shown&gt;</ph> event is only raised the first time a form is displayed; subsequently minimizing, maximizing, restoring, hiding, showing, or invalidating and repainting will not raise this event.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.Shown&gt;</ph>才會引發事件會顯示在表單第一次; 後續最小化、 最大化、 還原、 隱藏、 顯示，或失效及重新繪製將不會引發這個事件。</target>       </trans-unit>
        <trans-unit id="1236" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Shown">
          <source>For more information about the order of events of a form, see <bpt id="p1">[</bpt>Order of Events in Windows Forms<ept id="p1">](~/docs/framework/winforms/order-of-events-in-windows-forms.md)</ept>.</source>
          <target state="translated">表單的事件順序的相關資訊，請參閱<bpt id="p1">[</bpt>順序的 Windows Form 中事件<ept id="p1">](~/docs/framework/winforms/order-of-events-in-windows-forms.md)</ept>。</target>       </trans-unit>
        <trans-unit id="1237" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Shown">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">如需處理事件的詳細資訊，請參閱<bpt id="p1">[</bpt>處理和引發事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="1238" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Shown">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">下列程式碼範例示範如何使用這個成員。</target>       </trans-unit>
        <trans-unit id="1239" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Shown">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Shown&gt;</ph> event.</source>
          <target state="translated">在範例中，事件處理常式會報告一次<ph id="ph1">&lt;xref:System.Windows.Forms.Form.Shown&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="1240" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Shown">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">此報表可協助您了解事件發生的時機，並可協助您偵錯。</target>       </trans-unit>
        <trans-unit id="1241" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Shown">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">若要報告多個事件或事件經常發生，請考慮更換<ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph>與<ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph>或將訊息附加到多行<ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1242" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Shown">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> named <ph id="ph2">`Form1`</ph>.</source>
          <target state="translated">若要執行範例程式碼，將它貼到包含類型的執行個體的專案<ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>名為<ph id="ph2">`Form1`</ph>。</target>       </trans-unit>
        <trans-unit id="1243" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Form.Shown">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Shown&gt;</ph> event.</source>
          <target state="translated">請確定事件處理常式關聯<ph id="ph1">&lt;xref:System.Windows.Forms.Form.Shown&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="1244" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.ShowWithoutActivation">
          <source>Gets a value indicating whether the window will be activated when it is shown.</source>
          <target state="translated">取得值，指出視窗是否將在其顯示時啟動。</target>       </trans-unit>
        <trans-unit id="1245" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ShowWithoutActivation">
          <source><ph id="ph1">&lt;see langword="True" /&gt;</ph> if the window will not be activated when it is shown; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果視窗在其顯示時不啟動，則為 <ph id="ph1">&lt;see langword="True" /&gt;</ph>，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1246" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ShowWithoutActivation">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">預設值為 <ph id="ph1">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1247" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ShowWithoutActivation">
          <source>Use this property if you want to show a top-level window, but don't want to interrupt a user's work by taking the input focus away from the current window.</source>
          <target state="translated">如果您想要顯示最上層的視窗中，但不想要擷取輸入的焦點離開目前的視窗，藉此中斷使用者的工作，請使用這個屬性。</target>       </trans-unit>
        <trans-unit id="1248" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ShowWithoutActivation">
          <source>This can be an informational pop-up window or a floating window, such as a Tools palette in the Paint application.</source>
          <target state="translated">這可以是參考用的快顯視窗或浮動視窗中的，例如 [小畫家] 應用程式中工具調色盤。</target>       </trans-unit>
        <trans-unit id="1249" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ShowWithoutActivation">
          <source>Because this property is read-only, you can only change its value by overriding <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ShowWithoutActivation%2A&gt;</ph> in your own form, and programming it to return <ph id="ph2">`true`</ph>.</source>
          <target state="translated">因為這個屬性是唯讀，您可以只變更其值覆寫<ph id="ph1">&lt;xref:System.Windows.Forms.Form.ShowWithoutActivation%2A&gt;</ph>在自己的表單和程式設計它傳回<ph id="ph2">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="1250" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ShowWithoutActivation">
          <source>If your non-activated window needs to use UI controls, you should consider using the <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStrip&gt;</ph> controls, such as <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStripDropDown&gt;</ph>.</source>
          <target state="translated">如果您未啟用的視窗，就需要使用 UI 控制項，您應該考慮使用<ph id="ph1">&lt;xref:System.Windows.Forms.ToolStrip&gt;</ph>控制項，例如<ph id="ph2">&lt;xref:System.Windows.Forms.ToolStripDropDown&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1251" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.ShowWithoutActivation">
          <source>These controls are windowless, and will not cause a window to activate when they are selected.</source>
          <target state="translated">這些控制項是無視窗，並不會選取此選項時，將啟動視窗。</target>       </trans-unit>
        <trans-unit id="1252" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.Size">
          <source>Gets or sets the size of the form.</source>
          <target state="translated">取得或設定表單的大小。</target>       </trans-unit>
        <trans-unit id="1253" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Size">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Size" /&gt;</ph> that represents the size of the form.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Size" /&gt;</ph>，代表表單的大小。</target>       </trans-unit>
        <trans-unit id="1254" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Size">
          <source>This property allows you to set both the height and width (in pixels) of the form at the same time instead of setting the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Height%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Width%2A&gt;</ph> properties individually.</source>
          <target state="translated">此屬性可讓您設定高度和寬度 （以像素為單位） 的形式在相同的時間，而不是設定<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Height%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Windows.Forms.Control.Width%2A&gt;</ph>屬性個別。</target>       </trans-unit>
        <trans-unit id="1255" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Size">
          <source>If you want to set the size and location of a form, you can use the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.DesktopBounds%2A&gt;</ph> property to size and locate the form based on desktop coordinates or use the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Bounds%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control&gt;</ph> class to set the size and location of the form based on screen coordinates.</source>
          <target state="translated">如果您想要設定的大小和表單的位置，您可以使用<ph id="ph1">&lt;xref:System.Windows.Forms.Form.DesktopBounds%2A&gt;</ph>大小，並找出的表單屬性根據桌面座標或使用<ph id="ph2">&lt;xref:System.Windows.Forms.Control.Bounds%2A&gt;</ph>屬性<ph id="ph3">&lt;xref:System.Windows.Forms.Control&gt;</ph>類別來設定的大小和表單的位置根據螢幕座標inates。</target>       </trans-unit>
        <trans-unit id="1256" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Size">
          <source>The maximum value of this property is limited by the resolution of the screen on which the form runs.</source>
          <target state="translated">這個屬性的最大值受限於此表單執行所在的螢幕解析度。</target>       </trans-unit>
        <trans-unit id="1257" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Size">
          <source>The value cannot be greater than 12 pixels over each screen dimension (horizontal + 12 and vertical + 12).</source>
          <target state="translated">值不能大於 12 個像素針對每個螢幕維度 （水平 + 12 和垂直 + 12）。</target>       </trans-unit>
        <trans-unit id="1258" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Size">
          <source>On Pocket PC devices, you can create a resizable window by setting <ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormBorderStyle%2A&gt;</ph> to <ph id="ph2">`None`</ph> and removing any <ph id="ph3">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph> control.</source>
          <target state="translated">在 Pocket PC 裝置，您可以建立可調整大小的視窗設定<ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormBorderStyle%2A&gt;</ph>至<ph id="ph2">`None`</ph>並移除任何<ph id="ph3">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph>控制項。</target>       </trans-unit>
        <trans-unit id="1259" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Size">
          <source>On SmartPhone devices, you can never resize a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> - it will always fill the entire screen.</source>
          <target state="translated">智慧型手機在裝置上，您可以永遠不會調整大小<ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>-它一定會填滿整個螢幕。</target>       </trans-unit>
        <trans-unit id="1260" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Size">
          <source>The following code example demonstrates how to create a form that is displayed with an opacity level of 75 percent.</source>
          <target state="translated">下列程式碼範例示範如何建立具有 75%的不透明度層級會顯示的表單。</target>       </trans-unit>
        <trans-unit id="1261" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Size">
          <source>The example code creates a new form that is positioned in the center of the screen with an <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Opacity%2A&gt;</ph> property set to change the opacity level of the form.</source>
          <target state="translated">範例程式碼會建立新表單，位於與螢幕的中央<ph id="ph1">&lt;xref:System.Windows.Forms.Form.Opacity%2A&gt;</ph>屬性設定為變更表單的透明度等級。</target>       </trans-unit>
        <trans-unit id="1262" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Size">
          <source>The example code also sets the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Size%2A&gt;</ph> property to provide a larger sized form than the default size of the form.</source>
          <target state="translated">範例程式碼也會設定<ph id="ph1">&lt;xref:System.Windows.Forms.Form.Size%2A&gt;</ph>屬性以提供更大的大小比預設大小的表單的表單。</target>       </trans-unit>
        <trans-unit id="1263" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Size">
          <source>This example requires that the method defined in this example is called from another form in an event handler or other method.</source>
          <target state="translated">這個範例需要在此範例中定義的方法從另一種形式的事件處理常式或其他方法中呼叫。</target>       </trans-unit>
        <trans-unit id="1264" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.SizeGripStyle">
          <source>Gets or sets the style of the size grip to display in the lower-right corner of the form.</source>
          <target state="translated">取得或設定可調整大小的底框樣式，以顯示在表單的右下角。</target>       </trans-unit>
        <trans-unit id="1265" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.SizeGripStyle">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.SizeGripStyle" /&gt;</ph> that represents the style of the size grip to display.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.SizeGripStyle" /&gt;</ph>，代表所要顯示的大小底框樣式。</target>       </trans-unit>
        <trans-unit id="1266" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.SizeGripStyle">
          <source>The default is <ph id="ph1">&lt;see cref="F:System.Windows.Forms.SizeGripStyle.Auto" /&gt;</ph></source>
          <target state="translated">預設值為 <ph id="ph1">&lt;see cref="F:System.Windows.Forms.SizeGripStyle.Auto" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="1267" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.SizeGripStyle">
          <source>This property enables you to determine when the sizing grip is displayed on the form.</source>
          <target state="translated">這個屬性可讓您判斷在表單上顯示調整大小底框時。</target>       </trans-unit>
        <trans-unit id="1268" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.SizeGripStyle">
          <source>You can set this property to display the sizing grip or have it automatically displayed based on the setting of the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormBorderStyle%2A&gt;</ph> property.</source>
          <target state="translated">您可以設定這個屬性，以顯示調整大小底框或為基礎的設定，讓它自動顯示<ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormBorderStyle%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="1269" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.SizeGripStyle">
          <source>The following code example demonstrates how to hide the size grip for a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> when the <ph id="ph2">&lt;xref:System.Windows.Forms.Form&gt;</ph> is not resizable.</source>
          <target state="translated">下列程式碼範例示範如何隱藏的調整大小底框<ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>時<ph id="ph2">&lt;xref:System.Windows.Forms.Form&gt;</ph>不是可調整大小。</target>       </trans-unit>
        <trans-unit id="1270" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.SizeGripStyle">
          <source>The value specified is outside the range of valid values.</source>
          <target state="translated">指定的值超過有效值的範圍。</target>       </trans-unit>
        <trans-unit id="1271" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.StartPosition">
          <source>Gets or sets the starting position of the form at run time.</source>
          <target state="translated">取得或設定表單在執行階段中的開始位置。</target>       </trans-unit>
        <trans-unit id="1272" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.StartPosition">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.FormStartPosition" /&gt;</ph> that represents the starting position of the form.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.FormStartPosition" /&gt;</ph>，代表表單的開始位置。</target>       </trans-unit>
        <trans-unit id="1273" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.StartPosition">
          <source>This property enables you to set the starting position of the form when it is displayed at run time.</source>
          <target state="translated">這個屬性可讓您設定表單的開始位置，顯示在執行階段時。</target>       </trans-unit>
        <trans-unit id="1274" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.StartPosition">
          <source>The form’s position can be specified manually by setting the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Location%2A&gt;</ph> property or use the default location specified by Windows.</source>
          <target state="translated">可以手動指定表單的位置，藉由設定<ph id="ph1">&lt;xref:System.Windows.Forms.Form.Location%2A&gt;</ph>屬性或使用 Windows 所指定的預設位置。</target>       </trans-unit>
        <trans-unit id="1275" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.StartPosition">
          <source>You can also position the form to display in the center of the screen or in the center of its parent form for forms such as multiple-document interface (MDI) child forms.</source>
          <target state="translated">您也可以放置在螢幕中央或它的父表單的表單，例如多重文件介面 (MDI) 子表單的中央顯示表單。</target>       </trans-unit>
        <trans-unit id="1276" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.StartPosition">
          <source>This property should be set before the form is shown.</source>
          <target state="translated">顯示表單之前，應該設定這個屬性。</target>       </trans-unit>
        <trans-unit id="1277" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.StartPosition">
          <source>You can set this property before you call the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Show%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Forms.Form.ShowDialog%2A&gt;</ph> method or in your form's constructor.</source>
          <target state="translated">您可以設定此屬性，才能呼叫<ph id="ph1">&lt;xref:System.Windows.Forms.Form.Show%2A&gt;</ph>或<ph id="ph2">&lt;xref:System.Windows.Forms.Form.ShowDialog%2A&gt;</ph>方法或表單的建構函式中。</target>       </trans-unit>
        <trans-unit id="1278" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.StartPosition">
          <source>The following code example creates a new instance of a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> and calls the <ph id="ph2">&lt;xref:System.Windows.Forms.Form.ShowDialog%2A&gt;</ph> method to display the form as a dialog box.</source>
          <target state="translated">下列程式碼範例會建立的新執行個體<ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>呼叫<ph id="ph2">&lt;xref:System.Windows.Forms.Form.ShowDialog%2A&gt;</ph>要將表單顯示為對話方塊的方法。</target>       </trans-unit>
        <trans-unit id="1279" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.StartPosition">
          <source>The example sets the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormBorderStyle%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Form.AcceptButton%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Form.CancelButton%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Windows.Forms.Form.StartPosition%2A&gt;</ph> properties to change the appearance and functionality of the form to a dialog box.</source>
          <target state="translated">範例會設定<ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormBorderStyle%2A&gt;</ph>， <ph id="ph2">&lt;xref:System.Windows.Forms.Form.AcceptButton%2A&gt;</ph>， <ph id="ph3">&lt;xref:System.Windows.Forms.Form.CancelButton%2A&gt;</ph>，和<ph id="ph4">&lt;xref:System.Windows.Forms.Form.StartPosition%2A&gt;</ph>內容 對話方塊中變更的外觀和表單的功能。</target>       </trans-unit>
        <trans-unit id="1280" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.StartPosition">
          <source>The example also uses the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.ControlCollection.Add%2A&gt;</ph> method of the form's <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Controls%2A&gt;</ph> collection to add two <ph id="ph3">&lt;xref:System.Windows.Forms.Button&gt;</ph> controls.</source>
          <target state="translated">此範例也會使用<ph id="ph1">&lt;xref:System.Windows.Forms.Form.ControlCollection.Add%2A&gt;</ph>形式的方法<ph id="ph2">&lt;xref:System.Windows.Forms.Control.Controls%2A&gt;</ph>要加入兩個集合<ph id="ph3">&lt;xref:System.Windows.Forms.Button&gt;</ph>控制項。</target>       </trans-unit>
        <trans-unit id="1281" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.StartPosition">
          <source>The example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.HelpButton%2A&gt;</ph> property to display a help button in the caption bar of the dialog box.</source>
          <target state="translated">此範例會使用<ph id="ph1">&lt;xref:System.Windows.Forms.Form.HelpButton%2A&gt;</ph>屬性 對話方塊的標題列中顯示 說明 按鈕。</target>       </trans-unit>
        <trans-unit id="1282" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.StartPosition">
          <source>The value specified is outside the range of valid values.</source>
          <target state="translated">指定的值超過有效值的範圍。</target>       </trans-unit>
        <trans-unit id="1283" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.TabIndex">
          <source>Gets or sets the tab order of the control within its container.</source>
          <target state="translated">取得或設定控制項容器中的控制項定位順序。</target>       </trans-unit>
        <trans-unit id="1284" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.TabIndex">
          <source>An <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> containing the index of the control within the set of controls within its container that is included in the tab order.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph>，包含依定位順序包含在其容器內之控制項集合中的控制項索引。</target>       </trans-unit>
        <trans-unit id="1285" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.TabIndex">
          <source>Forms are not included in the tab order.</source>
          <target state="translated">定位順序中不包含表單。</target>       </trans-unit>
        <trans-unit id="1286" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.TabIndex">
          <source>Setting the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.TabIndex%2A&gt;</ph> property does nothing.</source>
          <target state="translated">設定<ph id="ph1">&lt;xref:System.Windows.Forms.Form.TabIndex%2A&gt;</ph>屬性不會執行任何動作。</target>       </trans-unit>
        <trans-unit id="1287" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Form.TabIndexChanged">
          <source>Occurs when the value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Form.TabIndex" /&gt;</ph> property changes.</source>
          <target state="translated">發生於 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Form.TabIndex" /&gt;</ph> 屬性的值變更時。</target>       </trans-unit>
        <trans-unit id="1288" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.TabStop">
          <source>Gets or sets a value indicating whether the user can give the focus to this control using the TAB key.</source>
          <target state="translated">取得或設定值，指出使用者是否能使用 TAB 鍵，將焦點 (Focus) 給予這個控制項。</target>       </trans-unit>
        <trans-unit id="1289" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.TabStop">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the user can give the focus to the control using the TAB key; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果使用者可以使用 TAB 鍵將焦點置於這個控制項，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1290" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.TabStop">
          <source>The default is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">預設值為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1291" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Form.TabStopChanged">
          <source>Occurs when the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Form.TabStop" /&gt;</ph> property changes.</source>
          <target state="translated">發生於 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Form.TabStop" /&gt;</ph> 屬性變更時。</target>       </trans-unit>
        <trans-unit id="1292" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.Text">
          <source>Gets or sets the text associated with this control.</source>
          <target state="translated">取得或設定這個控制項的相關文字。</target>       </trans-unit>
        <trans-unit id="1293" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.Text">
          <source>The text associated with this control.</source>
          <target state="translated">與這個控制項關聯的文字。</target>       </trans-unit>
        <trans-unit id="1294" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.TopLevel">
          <source>Gets or sets a value indicating whether to display the form as a top-level window.</source>
          <target state="translated">取得或設定值，指出是否要將表單顯示為最上層視窗。</target>       </trans-unit>
        <trans-unit id="1295" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.TopLevel">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to display the form as a top-level window; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">若要顯示表單為最上層視窗，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1296" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.TopLevel">
          <source>The default is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">預設值為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1297" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.TopLevel">
          <source>A top-level form is a window that has no parent form, or whose parent form is the desktop window.</source>
          <target state="translated">最上層的表單是一個沒有父表單，或其父表單是桌面視窗的視窗。</target>       </trans-unit>
        <trans-unit id="1298" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.TopLevel">
          <source>Top-level windows are typically used as the main form in an application.</source>
          <target state="translated">最上層視窗通常會作為應用程式中的主要表單。</target>       </trans-unit>
        <trans-unit id="1299" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.TopLevel">
          <source>The following code example use the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Modal%2A&gt;</ph> property to determine if a form is displayed as a modal form.</source>
          <target state="translated">下列程式碼範例會使用<ph id="ph1">&lt;xref:System.Windows.Forms.Form.Modal%2A&gt;</ph>屬性來判斷是否表單會顯示為強制回應表單。</target>       </trans-unit>
        <trans-unit id="1300" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.TopLevel">
          <source>If it is not the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormBorderStyle%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Form.TopLevel%2A&gt;</ph> properties are changed to make the form non-top-level form with a tool window border.</source>
          <target state="translated">如果不是<ph id="ph1">&lt;xref:System.Windows.Forms.Form.FormBorderStyle%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Windows.Forms.Form.TopLevel%2A&gt;</ph>屬性已變更，讓工具視窗的框線與表單非上層表單。</target>       </trans-unit>
        <trans-unit id="1301" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.TopLevel">
          <source>A Multiple-document interface (MDI) parent form must be a top-level window.</source>
          <target state="translated">多重文件介面 (MDI) 父表單必須為最上層視窗。</target>       </trans-unit>
        <trans-unit id="1302" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.TopMost">
          <source>Gets or sets a value indicating whether the form should be displayed as a topmost form.</source>
          <target state="translated">取得或設定值，該值代表是否要將此表單顯示成最上層的表單。</target>       </trans-unit>
        <trans-unit id="1303" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.TopMost">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to display the form as a topmost form; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> 表示要將該表單顯示為最上層的表單，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1304" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.TopMost">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">預設值為 <ph id="ph1">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1305" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.TopMost">
          <source>A topmost form is a form that overlaps all the other (non-topmost) forms even if it is not the active or foreground form.</source>
          <target state="translated">最上層的表單是重疊其他 （非最上層） 形式，即使它不是作用中] 或 [前景表單的表單。</target>       </trans-unit>
        <trans-unit id="1306" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.TopMost">
          <source>Topmost forms are always displayed at the highest point in the z-order of the windows on the desktop.</source>
          <target state="translated">最上層表單永遠會顯示在 windows 桌面上的疊置順序最高點。</target>       </trans-unit>
        <trans-unit id="1307" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.TopMost">
          <source>You can use this property to create a form that is always displayed in your application, such as a Find and Replace tool window.</source>
          <target state="translated">您可以使用這個屬性來建立一律會在您的應用程式，例如尋找和取代 工具視窗中顯示的表單。</target>       </trans-unit>
        <trans-unit id="1308" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.TopMost">
          <source>The following code example demonstrates how to create a topmost form.</source>
          <target state="translated">下列程式碼範例示範如何建立最上層的表單。</target>       </trans-unit>
        <trans-unit id="1309" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.TopMost">
          <source>The example creates two forms, one that is maximized and one that will be displayed as a topmost form.</source>
          <target state="translated">此範例會建立兩個表單最大化，一個會顯示為最上層的表單。</target>       </trans-unit>
        <trans-unit id="1310" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.TopMost">
          <source>The first form, named <ph id="ph1">`bottomForm`</ph>, is displayed maximized, using the <ph id="ph2">&lt;xref:System.Windows.Forms.Form.WindowState%2A&gt;</ph> property, to better demonstrate the abilities of the topmost form.</source>
          <target state="translated">第一種形式，名為<ph id="ph1">`bottomForm`</ph>，會顯示最大化，使用<ph id="ph2">&lt;xref:System.Windows.Forms.Form.WindowState%2A&gt;</ph>屬性，以詳細說明的最上層表單的能力。</target>       </trans-unit>
        <trans-unit id="1311" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.TopMost">
          <source>The second form, named <ph id="ph1">`topMostForm`</ph>, sets the <ph id="ph2">&lt;xref:System.Windows.Forms.Form.TopMost%2A&gt;</ph> property to <ph id="ph3">`true`</ph> to display the form as a topmost form.</source>
          <target state="translated">第二種形式，名為<ph id="ph1">`topMostForm`</ph>，設定<ph id="ph2">&lt;xref:System.Windows.Forms.Form.TopMost%2A&gt;</ph>屬性<ph id="ph3">`true`</ph>顯示表單為最上層的表單。</target>       </trans-unit>
        <trans-unit id="1312" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.TopMost">
          <source>When this code is run, clicking on the maximized form will not cause the topmost form to be displayed below the maximized form.</source>
          <target state="translated">執行此程式碼時，按一下最大化表單上將不會顯示最大化表單下最上層的表單。</target>       </trans-unit>
        <trans-unit id="1313" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.TopMost">
          <source>The example requires that the method defined in the example is called from another form.</source>
          <target state="translated">這個範例需要在範例中定義的方法呼叫從另一種形式。</target>       </trans-unit>
        <trans-unit id="1314" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ToString">
          <source>Gets a string representing the current instance of the form.</source>
          <target state="translated">取得表示表單目前執行個體的字串。</target>       </trans-unit>
        <trans-unit id="1315" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ToString">
          <source>A string consisting of the fully qualified name of the form object's class, with the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Form.Text" /&gt;</ph> property of the form appended to the end.</source>
          <target state="translated">由表單物件之類別的完整名稱所組成的字串，表單的 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Form.Text" /&gt;</ph> 屬性會附加到結尾處。</target>       </trans-unit>
        <trans-unit id="1316" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ToString">
          <source>For example, if the form is derived from the class <bpt id="p1">&lt;c&gt;</bpt>MyForm<ept id="p1">&lt;/c&gt;</ept> in the <bpt id="p2">&lt;c&gt;</bpt>MyNamespace<ept id="p2">&lt;/c&gt;</ept> namespace, and the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Form.Text" /&gt;</ph> property is set to <bpt id="p3">&lt;c&gt;</bpt>Hello, World<ept id="p3">&lt;/c&gt;</ept>, this method will return <bpt id="p4">&lt;c&gt;</bpt>MyNamespace.MyForm, Text: Hello, World<ept id="p4">&lt;/c&gt;</ept>.</source>
          <target state="translated">例如，如果表單衍生自 <bpt id="p2">&lt;c&gt;</bpt>MyNamespace<ept id="p2">&lt;/c&gt;</ept> 命名空間中的類別 <bpt id="p1">&lt;c&gt;</bpt>MyForm<ept id="p1">&lt;/c&gt;</ept>，且 <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Form.Text" /&gt;</ph> 屬性設為 <bpt id="p3">&lt;c&gt;</bpt>Hello, World<ept id="p3">&lt;/c&gt;</ept>，這個方法會傳回 <bpt id="p4">&lt;c&gt;</bpt>MyNamespace.MyForm, Text: Hello, World<ept id="p4">&lt;/c&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="1317" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.TransparencyKey">
          <source>Gets or sets the color that will represent transparent areas of the form.</source>
          <target state="translated">取得或設定將表示表單透明區域的色彩。</target>       </trans-unit>
        <trans-unit id="1318" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.TransparencyKey">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Color" /&gt;</ph> that represents the color to display transparently on the form.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Color" /&gt;</ph>，代表要透明地顯示在表單上的色彩。</target>       </trans-unit>
        <trans-unit id="1319" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.TransparencyKey">
          <source>When the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.TransparencyKey%2A&gt;</ph> property is assigned a <ph id="ph2">&lt;xref:System.Drawing.Color&gt;</ph>, the areas of the form that have the same <ph id="ph3">&lt;xref:System.Windows.Forms.Control.BackColor%2A&gt;</ph> will be displayed transparently.</source>
          <target state="translated">當<ph id="ph1">&lt;xref:System.Windows.Forms.Form.TransparencyKey%2A&gt;</ph>屬性會被指派<ph id="ph2">&lt;xref:System.Drawing.Color&gt;</ph>，具有相同的表單區域<ph id="ph3">&lt;xref:System.Windows.Forms.Control.BackColor%2A&gt;</ph>將會以透明的方式顯示。</target>       </trans-unit>
        <trans-unit id="1320" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.TransparencyKey">
          <source>Any mouse actions, such as the click of the mouse, that are performed on the transparent areas of the form will be transferred to the windows below the transparent area.</source>
          <target state="translated">任何滑鼠執行的動作，例如按一下滑鼠，透明的表單區域會傳輸至透明區域下方的視窗。</target>       </trans-unit>
        <trans-unit id="1321" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.TransparencyKey">
          <source>For example, if the client region of a form is made transparent, clicking the mouse on that area would send the event notification of the click to any window that is below it.</source>
          <target state="translated">比方說，如果表單的用戶端區域是透明，按一下滑鼠按一下該區域會傳送事件通知的按一下它下面的任何視窗。</target>       </trans-unit>
        <trans-unit id="1322" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.TransparencyKey">
          <source>If the color assigned to the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.TransparencyKey%2A&gt;</ph> property is the same as any controls on the form, they also will be displayed transparently.</source>
          <target state="translated">如果色彩指派給<ph id="ph1">&lt;xref:System.Windows.Forms.Form.TransparencyKey%2A&gt;</ph>屬性等同於表單上的任何控制項，則也會顯示以透明的方式。</target>       </trans-unit>
        <trans-unit id="1323" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.TransparencyKey">
          <source>For example, if you have a <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> control on a form that has its <ph id="ph2">&lt;xref:System.Windows.Forms.Form.TransparencyKey%2A&gt;</ph> property set to <ph id="ph3">`SystemColors.Control`</ph>, the control will be displayed transparently unless the <ph id="ph4">&lt;xref:System.Windows.Forms.Control.BackColor%2A&gt;</ph> property of the <ph id="ph5">&lt;xref:System.Windows.Forms.Button&gt;</ph> control is changed to a different color.</source>
          <target state="translated">比方說，如果您有<ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph>已在表單上的控制項及其<ph id="ph2">&lt;xref:System.Windows.Forms.Form.TransparencyKey%2A&gt;</ph>屬性設定為<ph id="ph3">`SystemColors.Control`</ph>，除非控制項也會以透明的方式顯示<ph id="ph4">&lt;xref:System.Windows.Forms.Control.BackColor%2A&gt;</ph>屬性<ph id="ph5">&lt;xref:System.Windows.Forms.Button&gt;</ph>控制項變更為不同的色彩。</target>       </trans-unit>
        <trans-unit id="1324" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.TransparencyKey">
          <source>This property is not supported when <ph id="ph1">&lt;xref:System.Windows.Forms.Form.RightToLeftLayout%2A&gt;</ph> is <ph id="ph2">`true`</ph>.</source>
          <target state="translated">這個屬性不支援時<ph id="ph1">&lt;xref:System.Windows.Forms.Form.RightToLeftLayout%2A&gt;</ph>是<ph id="ph2">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="1325" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.TransparencyKey">
          <source>The following code example creates a window that has a transparent client region regardless of background color of the form.</source>
          <target state="translated">下列程式碼範例會建立擁有不論表單的背景色彩的透明用戶端區域的視窗。</target>       </trans-unit>
        <trans-unit id="1326" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.TransparencyKey">
          <source>This example requires that the example method is defined within a form class.</source>
          <target state="translated">這個範例需要在表單的類別內的已定義範例方法。</target>       </trans-unit>
        <trans-unit id="1327" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.UpdateDefaultButton">
          <source>Updates which button is the default button.</source>
          <target state="translated">更新哪一個按鈕為預設按鈕的資訊。</target>       </trans-unit>
        <trans-unit id="1328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.UpdateDefaultButton">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.UpdateDefaultButton%2A&gt;</ph> method determines which button on the form raises its Click event when the user presses ENTER, according to the following priority:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.UpdateDefaultButton%2A&gt;</ph>方法會判斷哪一個按鈕，在表單上的引發其 Click 事件，當使用者按下 ENTER，根據下列優先順序：</target>       </trans-unit>
        <trans-unit id="1329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.UpdateDefaultButton">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.ContainerControl.ActiveControl%2A&gt;</ph> property implements the <ph id="ph2">&lt;xref:System.Windows.Forms.IButtonControl&gt;</ph> interface, that control is the default button.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Windows.Forms.ContainerControl.ActiveControl%2A&gt;</ph>屬性實作<ph id="ph2">&lt;xref:System.Windows.Forms.IButtonControl&gt;</ph>介面，控制為預設按鈕。</target>       </trans-unit>
        <trans-unit id="1330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Form.UpdateDefaultButton">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form.AcceptButton%2A&gt;</ph> property is the default button.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Form.AcceptButton%2A&gt;</ph>屬性為預設按鈕。</target>       </trans-unit>
        <trans-unit id="1331" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.Form">
          <source>Validates all selectable child controls in the form.</source>
          <target state="translated">驗證表單中所有可選取的子控制項。</target>       </trans-unit>
        <trans-unit id="1332" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ValidateChildren">
          <source>Causes all of the child controls within a control that support validation to validate their data.</source>
          <target state="translated">使得控制項內支援驗證的所有子控制項驗證其資料。</target>       </trans-unit>
        <trans-unit id="1333" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ValidateChildren">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if all of the children validated successfully; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果所有子控制項都驗證成功，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1334" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ValidateChildren">
          <source>If called from the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Validating" /&gt;</ph> or <ph id="ph2">&lt;see cref="E:System.Windows.Forms.Control.Validated" /&gt;</ph> event handlers, this method will always return <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果從 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Validating" /&gt;</ph> 或 <ph id="ph2">&lt;see cref="E:System.Windows.Forms.Control.Validated" /&gt;</ph> 事件處理常式呼叫這個方法，則該方法一律會傳回 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1335" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ValidateChildren(System.Windows.Forms.ValidationConstraints)">
          <source>Places restrictions on which controls have their <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Validating" /&gt;</ph> event raised.</source>
          <target state="translated">將限制套用於已引發 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Validating" /&gt;</ph> 事件的控制項。</target>       </trans-unit>
        <trans-unit id="1336" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ValidateChildren(System.Windows.Forms.ValidationConstraints)">
          <source>Causes all of the child controls within a control that support validation to validate their data.</source>
          <target state="translated">使得控制項內支援驗證的所有子控制項驗證其資料。</target>       </trans-unit>
        <trans-unit id="1337" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ValidateChildren(System.Windows.Forms.ValidationConstraints)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if all of the children validated successfully; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果所有子控制項都驗證成功，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1338" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.ValidateChildren(System.Windows.Forms.ValidationConstraints)">
          <source>If called from the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Validating" /&gt;</ph> or <ph id="ph2">&lt;see cref="E:System.Windows.Forms.Control.Validated" /&gt;</ph> event handlers, this method will always return <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果從 <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Validating" /&gt;</ph> 或 <ph id="ph2">&lt;see cref="E:System.Windows.Forms.Control.Validated" /&gt;</ph> 事件處理常式呼叫這個方法，則該方法一律會傳回 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1339" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.WindowState">
          <source>Gets or sets a value that indicates whether form is minimized, maximized, or normal.</source>
          <target state="translated">取得或設定值，表示表單為最小化、最大化或正常狀態。</target>       </trans-unit>
        <trans-unit id="1340" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.WindowState">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.FormWindowState" /&gt;</ph> that represents whether form is minimized, maximized, or normal.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.FormWindowState" /&gt;</ph>，代表表單為最小化、最大化還是正常狀態。</target>       </trans-unit>
        <trans-unit id="1341" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.WindowState">
          <source>The default is <ph id="ph1">&lt;see langword="FormWindowState.Normal" /&gt;</ph>.</source>
          <target state="translated">預設值為 <ph id="ph1">&lt;see langword="FormWindowState.Normal" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1342" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.WindowState">
          <source>Before a form is displayed, the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.WindowState%2A&gt;</ph> property is always set to <ph id="ph2">`FormWindowState.Normal`</ph>, regardless of its initial setting.</source>
          <target state="translated">顯示表單之前，<ph id="ph1">&lt;xref:System.Windows.Forms.Form.WindowState%2A&gt;</ph>屬性一定會設定為<ph id="ph2">`FormWindowState.Normal`</ph>，不論其初始設定值。</target>       </trans-unit>
        <trans-unit id="1343" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.WindowState">
          <source>This is reflected in the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Height%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Left%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Top%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Width%2A&gt;</ph> property settings.</source>
          <target state="translated">這會反映在<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Height%2A&gt;</ph>， <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Left%2A&gt;</ph>， <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Top%2A&gt;</ph>，和<ph id="ph4">&lt;xref:System.Windows.Forms.Control.Width%2A&gt;</ph>屬性設定。</target>       </trans-unit>
        <trans-unit id="1344" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.WindowState">
          <source>If a form is hidden after it has been shown, these properties reflect the previous state until the form is shown again, regardless of any changes made to the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.WindowState%2A&gt;</ph> property.</source>
          <target state="translated">如果表單為隱藏，示範了之後，這些屬性會反映先前的狀態之前，不論所做的變更顯示表單<ph id="ph1">&lt;xref:System.Windows.Forms.Form.WindowState%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="1345" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.WindowState">
          <source>The following code example demonstrates how to set the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.WindowState%2A&gt;</ph> to maximized.</source>
          <target state="translated">下列程式碼範例示範如何設定<ph id="ph1">&lt;xref:System.Windows.Forms.Form.WindowState%2A&gt;</ph>為最大化。</target>       </trans-unit>
        <trans-unit id="1346" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Form.WindowState">
          <source>The code is called from the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.Shown&gt;</ph> event handler after the form has been created.</source>
          <target state="translated">程式碼會呼叫從<ph id="ph1">&lt;xref:System.Windows.Forms.Form.Shown&gt;</ph>建立表單後的事件處理常式。</target>       </trans-unit>
        <trans-unit id="1347" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Form.WindowState">
          <source>The value specified is outside the range of valid values.</source>
          <target state="translated">指定的值超過有效值的範圍。</target>       </trans-unit>
        <trans-unit id="1348" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.WndProc(System.Windows.Forms.Message@)">
          <source>The Windows <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Message" /&gt;</ph> to process.</source>
          <target state="translated">要處理的 Windows <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Message" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1349" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Form.WndProc(System.Windows.Forms.Message@)">
          <source>Processes Windows messages.</source>
          <target state="translated">處理 Windows 訊息。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>
