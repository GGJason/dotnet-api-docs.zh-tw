<Type Name="Form" FullName="System.Windows.Forms.Form">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a62bbbdc6f0614ca3be85f50f16ba11f7486ac2b" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37512652" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Form : System.Windows.Forms.ContainerControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Form extends System.Windows.Forms.ContainerControl" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.Form" />
  <TypeSignature Language="VB.NET" Value="Public Class Form&#xA;Inherits ContainerControl" />
  <TypeSignature Language="C++ CLI" Value="public ref class Form : System::Windows::Forms::ContainerControl" />
  <TypeSignature Language="F#" Value="type Form = class&#xA;    inherit ContainerControl" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.ContainerControl</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("Load")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.FormDocumentDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.ComponentModel.Design.IRootDesigner))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DesignerCategory("Form")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DesignTimeVisible(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.InitializationEvent("Load")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItem(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItemFilter("System.Windows.Forms.Control.TopLevel")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ClassInterface</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="1bd5f-101">Represents a window or dialog box that makes up an application's user interface.</span>
      <span class="sxs-lookup">
        <span data-stu-id="1bd5f-101">Represents a window or dialog box that makes up an application's user interface.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bd5f-102">A<xref:System.Windows.Forms.Form>是顯示在您的應用程式中的任何視窗的表示法。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-102">A <xref:System.Windows.Forms.Form> is a representation of any window displayed in your application.</span></span> <span data-ttu-id="1bd5f-103"><xref:System.Windows.Forms.Form>類別可用來建立標準、 工具，無框線和浮動視窗。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-103">The <xref:System.Windows.Forms.Form> class can be used to create standard, tool, borderless, and floating windows.</span></span> <span data-ttu-id="1bd5f-104">您也可以使用<xref:System.Windows.Forms.Form>類別來建立強制回應視窗，例如對話方塊。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-104">You can also use the <xref:System.Windows.Forms.Form> class to create modal windows such as a dialog box.</span></span> <span data-ttu-id="1bd5f-105">一種特殊的多重文件介面 (MDI) 表單，表單可以包含其他表單名 MDI 子表單。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-105">A special kind of form, the multiple-document interface (MDI) form, can contain other forms called MDI child forms.</span></span> <span data-ttu-id="1bd5f-106">藉由設定建立 MDI 表單<xref:System.Windows.Forms.Form.IsMdiContainer%2A>屬性設`true`。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-106">An MDI form is created by setting the <xref:System.Windows.Forms.Form.IsMdiContainer%2A> property to `true`.</span></span> <span data-ttu-id="1bd5f-107">MDI 子表單藉由設定<xref:System.Windows.Forms.Form.MdiParent%2A>會包含子表單在 MDI 父表單的屬性。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-107">MDI child forms are created by setting the <xref:System.Windows.Forms.Form.MdiParent%2A> property to the MDI parent form that will contain the child form.</span></span>  
  
 <span data-ttu-id="1bd5f-108">使用中的可用屬性<xref:System.Windows.Forms.Form>類別，您可以判斷您所建立的視窗或對話方塊方塊的外觀、 大小、 色彩和視窗管理功能。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-108">Using the properties available in the <xref:System.Windows.Forms.Form> class, you can determine the appearance, size, color, and window management features of the window or dialog box you are creating.</span></span> <span data-ttu-id="1bd5f-109"><xref:System.Windows.Forms.Control.Text%2A>屬性可讓您指定視窗之標題的標題列中。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-109">The <xref:System.Windows.Forms.Control.Text%2A> property allows you to specify the caption of the window in the title bar.</span></span> <span data-ttu-id="1bd5f-110"><xref:System.Windows.Forms.Form.Size%2A>和<xref:System.Windows.Forms.Form.DesktopLocation%2A>屬性可讓您定義的大小和視窗的位置，顯示時。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-110">The <xref:System.Windows.Forms.Form.Size%2A> and <xref:System.Windows.Forms.Form.DesktopLocation%2A> properties allow you to define the size and position of the window when it is displayed.</span></span> <span data-ttu-id="1bd5f-111">您可以使用<xref:System.Windows.Forms.Control.ForeColor%2A>来變更所有控制項的預設前景色彩的色彩屬性放在表單上。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-111">You can use the <xref:System.Windows.Forms.Control.ForeColor%2A> color property to change the default foreground color of all controls placed on the form.</span></span> <span data-ttu-id="1bd5f-112"><xref:System.Windows.Forms.Form.FormBorderStyle%2A>， <xref:System.Windows.Forms.Form.MinimizeBox%2A>，和<xref:System.Windows.Forms.Form.MaximizeBox%2A>屬性讓您控制是否在表單可以最小化、 最大化，或在執行階段調整大小。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-112">The <xref:System.Windows.Forms.Form.FormBorderStyle%2A>, <xref:System.Windows.Forms.Form.MinimizeBox%2A>, and <xref:System.Windows.Forms.Form.MaximizeBox%2A> properties allow you to control whether the form can be minimized, maximized, or resized at run time.</span></span>  
  
 <span data-ttu-id="1bd5f-113">除了屬性之外，您可以使用類別的方法來管理表單。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-113">In addition to properties, you can use the methods of the class to manipulate a form.</span></span> <span data-ttu-id="1bd5f-114">例如，您可以使用<xref:System.Windows.Forms.Form.ShowDialog%2A>方法，以顯示強制回應對話方塊中的格式。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-114">For example, you can use the <xref:System.Windows.Forms.Form.ShowDialog%2A> method to show a form as a modal dialog box.</span></span> <span data-ttu-id="1bd5f-115">您可以使用<xref:System.Windows.Forms.Form.SetDesktopLocation%2A>桌面上放置在表單的方法。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-115">You can use the <xref:System.Windows.Forms.Form.SetDesktopLocation%2A> method to position the form on the desktop.</span></span>  
  
 <span data-ttu-id="1bd5f-116">事件的<xref:System.Windows.Forms.Form>類別可讓您回應在表單上執行的動作。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-116">The events of the <xref:System.Windows.Forms.Form> class allow you to respond to actions performed on the form.</span></span> <span data-ttu-id="1bd5f-117">您可以使用<xref:System.Windows.Forms.Form.Activated>事件，以執行作業，例如更新時啟動表單，表單的控制項中顯示的資料。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-117">You can use the <xref:System.Windows.Forms.Form.Activated> event to perform operations such as updating the data displayed in the controls of the form when the form is activated.</span></span>  
  
 <span data-ttu-id="1bd5f-118">您可以為起始的類別使用的形式，在您的應用程式中，加上呼叫的方法`Main`類別中。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-118">You can use a form as the starting class in your application by placing a method called `Main` in the class.</span></span> <span data-ttu-id="1bd5f-119">在 `Main`方法新增程式碼來建立和顯示表單。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-119">In the `Main` method add code to create and show the form.</span></span> <span data-ttu-id="1bd5f-120">您也必須新增`STAThread`屬性設定為`Main`為了讓執行表單的方法。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-120">You will also need to add the `STAThread` attribute to the `Main` method in order for the form to run.</span></span> <span data-ttu-id="1bd5f-121">當起始表單關閉時，也會關閉應用程式。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-121">When the starting form is closed, the application is also closed.</span></span>  
  
 <span data-ttu-id="1bd5f-122">如果您設定<xref:System.Windows.Forms.Control.Enabled%2A>屬性，以`false`之前<xref:System.Windows.Forms.Form>會顯示 (比方說，設定<xref:System.Windows.Forms.Control.Enabled%2A>設為 false，在[!INCLUDE[TLA#tla_visualstu](~/includes/tlasharptla-visualstu-md.md)]設計工具)，則最小化、 最大化、 關閉、 及的系統按鈕保持啟用。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-122">If you set the <xref:System.Windows.Forms.Control.Enabled%2A> property to `false` before the <xref:System.Windows.Forms.Form> is visible (for example, setting <xref:System.Windows.Forms.Control.Enabled%2A> to false in the [!INCLUDE[TLA#tla_visualstu](~/includes/tlasharptla-visualstu-md.md)] designer), the minimize, maximize, close, and system buttons remain enabled.</span></span> <span data-ttu-id="1bd5f-123">如果您設定<xref:System.Windows.Forms.Control.Enabled%2A>來`false`之後<xref:System.Windows.Forms.Form>是顯示 （例如，在 Load 事件發生時），則按鈕會停用。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-123">If you set <xref:System.Windows.Forms.Control.Enabled%2A> to `false` after the <xref:System.Windows.Forms.Form> is visible (for example, when the Load event occurs), the buttons are disabled.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1bd5f-124">下列程式碼範例會建立的新執行個體<xref:System.Windows.Forms.Form>，並呼叫<xref:System.Windows.Forms.Form.ShowDialog%2A>表單顯示為對話方塊中的方法。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-124">The following code example creates a new instance of a <xref:System.Windows.Forms.Form> and calls the <xref:System.Windows.Forms.Form.ShowDialog%2A> method to display the form as a dialog box.</span></span> <span data-ttu-id="1bd5f-125">範例會設定<xref:System.Windows.Forms.Form.FormBorderStyle%2A>， <xref:System.Windows.Forms.Form.AcceptButton%2A>， <xref:System.Windows.Forms.Form.CancelButton%2A>， <xref:System.Windows.Forms.Form.MinimizeBox%2A>， <xref:System.Windows.Forms.Form.MaximizeBox%2A>，和<xref:System.Windows.Forms.Form.StartPosition%2A>內容 對話方塊中變更的外觀和功能的形式。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-125">The example sets the <xref:System.Windows.Forms.Form.FormBorderStyle%2A>, <xref:System.Windows.Forms.Form.AcceptButton%2A>, <xref:System.Windows.Forms.Form.CancelButton%2A>, <xref:System.Windows.Forms.Form.MinimizeBox%2A>, <xref:System.Windows.Forms.Form.MaximizeBox%2A>, and <xref:System.Windows.Forms.Form.StartPosition%2A> properties to change the appearance and functionality of the form to a dialog box.</span></span> <span data-ttu-id="1bd5f-126">此範例也會使用<xref:System.Windows.Forms.Form.ControlCollection.Add%2A>表單的方法<xref:System.Windows.Forms.Control.Controls%2A>要加入兩個集合<xref:System.Windows.Forms.Button>控制項。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-126">The example also uses the <xref:System.Windows.Forms.Form.ControlCollection.Add%2A> method of the form's <xref:System.Windows.Forms.Control.Controls%2A> collection to add two <xref:System.Windows.Forms.Button> controls.</span></span> <span data-ttu-id="1bd5f-127">此範例會使用<xref:System.Windows.Forms.Form.HelpButton%2A>屬性 對話方塊的標題列中顯示 說明 按鈕。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-127">The example uses the <xref:System.Windows.Forms.Form.HelpButton%2A> property to display a help button in the caption bar of the dialog box.</span></span>  
  
 [!code-cpp[Classic Form.AcceptButton Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Form.AcceptButton Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Form.AcceptButton Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Form.AcceptButton Example/CS/source.cs#1)]
 [!code-vb[Classic Form.AcceptButton Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Form.AcceptButton Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Form ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Form();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1bd5f-128">Initializes a new instance of the <see cref="T:System.Windows.Forms.Form" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-128">Initializes a new instance of the <see cref="T:System.Windows.Forms.Form" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bd5f-129">表單的預設大小是 300 像素的高度和寬度的 300 像素。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-129">The default size of a form is 300 pixels in height and 300 pixels in width.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1bd5f-130">下列程式碼範例會建立的新執行個體<xref:System.Windows.Forms.Form>，並呼叫<xref:System.Windows.Forms.Form.ShowDialog%2A>表單顯示為對話方塊中的方法。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-130">The following code example creates a new instance of a <xref:System.Windows.Forms.Form> and calls the <xref:System.Windows.Forms.Form.ShowDialog%2A> method to display the form as a dialog box.</span></span> <span data-ttu-id="1bd5f-131">範例會設定<xref:System.Windows.Forms.Form.FormBorderStyle%2A>， <xref:System.Windows.Forms.Form.AcceptButton%2A>， <xref:System.Windows.Forms.Form.CancelButton%2A>， <xref:System.Windows.Forms.Form.MinimizeBox%2A>， <xref:System.Windows.Forms.Form.MaximizeBox%2A>，和<xref:System.Windows.Forms.Form.StartPosition%2A>內容 對話方塊中變更的外觀和功能的形式。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-131">The example sets the <xref:System.Windows.Forms.Form.FormBorderStyle%2A>, <xref:System.Windows.Forms.Form.AcceptButton%2A>, <xref:System.Windows.Forms.Form.CancelButton%2A>, <xref:System.Windows.Forms.Form.MinimizeBox%2A>, <xref:System.Windows.Forms.Form.MaximizeBox%2A>, and <xref:System.Windows.Forms.Form.StartPosition%2A> properties to change the appearance and functionality of the form to a dialog box.</span></span> <span data-ttu-id="1bd5f-132">此範例也會設定使用<xref:System.Windows.Forms.Form.ControlCollection.Add%2A>表單的方法<xref:System.Windows.Forms.Control.Controls%2A>要加入兩個集合<xref:System.Windows.Forms.Button>控制項。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-132">The example also sets uses the <xref:System.Windows.Forms.Form.ControlCollection.Add%2A> method of the form's <xref:System.Windows.Forms.Control.Controls%2A> collection to add two <xref:System.Windows.Forms.Button> controls.</span></span> <span data-ttu-id="1bd5f-133">此範例會使用<xref:System.Windows.Forms.Form.HelpButton%2A>屬性 對話方塊的標題列中顯示 說明 按鈕。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-133">The example uses the <xref:System.Windows.Forms.Form.HelpButton%2A> property to display a help button in the caption bar of the dialog box.</span></span>  
  
 [!code-cpp[Classic Form.AcceptButton Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Form.AcceptButton Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Form.AcceptButton Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Form.AcceptButton Example/CS/source.cs#1)]
 [!code-vb[Classic Form.AcceptButton Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Form.AcceptButton Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AcceptButton">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.IButtonControl AcceptButton { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.IButtonControl AcceptButton" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.AcceptButton" />
      <MemberSignature Language="VB.NET" Value="Public Property AcceptButton As IButtonControl" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::IButtonControl ^ AcceptButton { System::Windows::Forms::IButtonControl ^ get(); void set(System::Windows::Forms::IButtonControl ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AcceptButton : System.Windows.Forms.IButtonControl with get, set" Usage="System.Windows.Forms.Form.AcceptButton" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.IButtonControl</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1bd5f-134">Gets or sets the button on the form that is clicked when the user presses the ENTER key.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-134">Gets or sets the button on the form that is clicked when the user presses the ENTER key.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1bd5f-135">，代表做為表單接受按鈕的按鈕。<see cref="T:System.Windows.Forms.IButtonControl" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-135">An <see cref="T:System.Windows.Forms.IButtonControl" /> that represents the button to use as the accept button for the form.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bd5f-136">這個屬性可讓您指定當使用者按下 ENTER 鍵，在您的應用程式時所發生的預設動作。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-136">This property enables you to designate a default action to occur when the user presses the ENTER key in your application.</span></span> <span data-ttu-id="1bd5f-137">必須是指派給這個屬性的按鈕<xref:System.Windows.Forms.IButtonControl>，位於目前的表單上，或位於目前的表單上的容器。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-137">The button assigned to this property must be an <xref:System.Windows.Forms.IButtonControl> that is on the current form or located within a container on the current form.</span></span>  
  
 <span data-ttu-id="1bd5f-138">您可以使用這個屬性，以允許使用者快速導覽，讓它們能夠在完成而不是手動按一下 [接受] 按鈕，使用其滑鼠時，只要按下 ENTER 鍵的一個簡單的表單。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-138">You can use this property to allow the user to quickly navigate a simple form by allowing them to simply press the ENTER key when they are finished instead of manually clicking the accept button with their mouse.</span></span>  
  
 <span data-ttu-id="1bd5f-139">如果目前選取的控制項在表單上攔截 ENTER 鍵，並加以處理，可能無法啟動 [接受] 按鈕。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-139">The accept button might not be activated if the currently selected control on the form intercepts the ENTER key and processes it.</span></span> <span data-ttu-id="1bd5f-140">例如，多行文字方塊控制項允許選取要在控制項中插入新行字元時被按下 ENTER 鍵。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-140">For example, a multiline text box control allows the ENTER key to be pressed when it is selected to insert a new line character in the control.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1bd5f-141">下列程式碼範例會建立的新執行個體<xref:System.Windows.Forms.Form>，並呼叫<xref:System.Windows.Forms.Form.ShowDialog%2A>表單顯示為對話方塊中的方法。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-141">The following code example creates a new instance of a <xref:System.Windows.Forms.Form> and calls the <xref:System.Windows.Forms.Form.ShowDialog%2A> method to display the form as a dialog box.</span></span> <span data-ttu-id="1bd5f-142">範例會設定<xref:System.Windows.Forms.Form.FormBorderStyle%2A>， <xref:System.Windows.Forms.Form.AcceptButton%2A>， <xref:System.Windows.Forms.Form.CancelButton%2A>， <xref:System.Windows.Forms.Form.MinimizeBox%2A>， <xref:System.Windows.Forms.Form.MaximizeBox%2A>，和<xref:System.Windows.Forms.Form.StartPosition%2A>內容 對話方塊中變更的外觀和功能的形式。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-142">The example sets the <xref:System.Windows.Forms.Form.FormBorderStyle%2A>, <xref:System.Windows.Forms.Form.AcceptButton%2A>, <xref:System.Windows.Forms.Form.CancelButton%2A>, <xref:System.Windows.Forms.Form.MinimizeBox%2A>, <xref:System.Windows.Forms.Form.MaximizeBox%2A>, and <xref:System.Windows.Forms.Form.StartPosition%2A> properties to change the appearance and functionality of the form to a dialog box.</span></span> <span data-ttu-id="1bd5f-143">此範例也會使用<xref:System.Windows.Forms.Form.ControlCollection.Add%2A>表單的方法<xref:System.Windows.Forms.Control.Controls%2A>要加入兩個集合<xref:System.Windows.Forms.Button>控制項。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-143">The example also uses the <xref:System.Windows.Forms.Form.ControlCollection.Add%2A> method of the form's <xref:System.Windows.Forms.Control.Controls%2A> collection to add two <xref:System.Windows.Forms.Button> controls.</span></span> <span data-ttu-id="1bd5f-144">此範例會使用<xref:System.Windows.Forms.Form.HelpButton%2A>屬性 對話方塊的標題列中顯示 說明 按鈕。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-144">The example uses the <xref:System.Windows.Forms.Form.HelpButton%2A> property to display a help button in the caption bar of the dialog box.</span></span>  
  
 [!code-cpp[Classic Form.AcceptButton Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Form.AcceptButton Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Form.AcceptButton Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Form.AcceptButton Example/CS/source.cs#1)]
 [!code-vb[Classic Form.AcceptButton Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Form.AcceptButton Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.CancelButton" />
        <altmember cref="T:System.Windows.Forms.IButtonControl" />
      </Docs>
    </Member>
    <Member MemberName="Activate">
      <MemberSignature Language="C#" Value="public void Activate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Activate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.Activate" />
      <MemberSignature Language="VB.NET" Value="Public Sub Activate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Activate();" />
      <MemberSignature Language="F#" Value="member this.Activate : unit -&gt; unit" Usage="form.Activate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1bd5f-145">Activates the form and gives it focus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-145">Activates the form and gives it focus.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bd5f-146">啟動表單將它帶到前面如果這是使用中的應用程式，或如果這不是使用中的應用程式，請它閃爍的視窗標題。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-146">Activating a form brings it to the front if this is the active application, or it flashes the window caption if this is not the active application.</span></span> <span data-ttu-id="1bd5f-147">格式必須是可見，此方法才能發生效用。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-147">The form must be visible for this method to have any effect.</span></span> <span data-ttu-id="1bd5f-148">若要判斷應用程式中作用中的表單，請使用<xref:System.Windows.Forms.Form.ActiveForm%2A>屬性或<xref:System.Windows.Forms.Form.ActiveMdiChild%2A>屬性，如果您的表單中的多重文件介面 (MDI) 應用程式。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-148">To determine the active form in an application, use the <xref:System.Windows.Forms.Form.ActiveForm%2A> property or the <xref:System.Windows.Forms.Form.ActiveMdiChild%2A> property if your forms are in a Multiple-document interface (MDI) application.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1bd5f-149">下列程式碼範例示範如何使用<xref:System.Windows.Forms.Form.SetDesktopLocation%2A>，<xref:System.Windows.Forms.Form.Load>和<xref:System.Windows.Forms.Form.Activate%2A>成員。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-149">The following code example demonstrates how to use the <xref:System.Windows.Forms.Form.SetDesktopLocation%2A>, <xref:System.Windows.Forms.Form.Load> and <xref:System.Windows.Forms.Form.Activate%2A> members.</span></span> <span data-ttu-id="1bd5f-150">若要執行此範例，下列程式碼貼入表單名`Form1`包含一個按鈕名`Button1`並將兩個`Label`控制項，稱為`Label1`和`Label2`。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-150">To run the example, paste the following code in a form called `Form1` containing a button called `Button1` and two `Label` controls called `Label1` and `Label2`.</span></span>  
  
 [!code-cpp[System.Windows.Forms.FormsActivate#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.FormsActivate/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.FormsActivate#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.FormsActivate/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.FormsActivate#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.FormsActivate/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="1bd5f-151">變更焦點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-151">for changing focus.</span>
          </span>
          <span data-ttu-id="1bd5f-152">相關聯的列舉型別： <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-152">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</span>
          </span>
        </permission>
        <altmember cref="P:System.Windows.Forms.Form.ActiveForm" />
        <altmember cref="P:System.Windows.Forms.Form.ActiveMdiChild" />
      </Docs>
    </Member>
    <Member MemberName="Activated">
      <MemberSignature Language="C#" Value="public event EventHandler Activated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Activated" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Form.Activated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Activated As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Activated;" />
      <MemberSignature Language="F#" Value="member this.Activated : EventHandler " Usage="member this.Activated : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1bd5f-153">Occurs when the form is activated in code or by the user.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-153">Occurs when the form is activated in code or by the user.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="1bd5f-154">當應用程式是使用中，並有多種形式時，作用中的表單會是具有輸入焦點的表單。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-154">When the application is active and has multiple forms, the active form is the form with the input focus.</span></span> <span data-ttu-id="1bd5f-155">看不到格式不能是作用中的表單。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-155">A form that is not visible cannot be the active form.</span></span> <span data-ttu-id="1bd5f-156">若要啟用可見的表單的最簡單方式是按一下它，或使用適當的鍵盤組合。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-156">The simplest way to activate a visible form is to click it or use an appropriate keyboard combination.</span></span>  
  
 <span data-ttu-id="1bd5f-157">若要啟用表單在執行階段使用程式碼，呼叫<xref:System.Windows.Forms.Form.Activate%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-157">To activate a form at run time using code, call the <xref:System.Windows.Forms.Form.Activate%2A> method.</span></span> <span data-ttu-id="1bd5f-158">您可以使用這個事件的工作，例如更新為基礎時並未啟用表單，表單的資料所做的變更表單的內容。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-158">You can use this event for tasks such as updating the contents of the form based on changes made to the form's data when the form was not activated.</span></span>  
  
 <span data-ttu-id="1bd5f-159">如需有關如何處理事件的詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-159">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1bd5f-160">下列程式碼範例示範如何使用<xref:System.Windows.Forms.Form.SetDesktopLocation%2A>， <xref:System.Windows.Forms.Form.Closed>， <xref:System.Windows.Forms.Form.Load>， <xref:System.Windows.Forms.Form.Activated>，和<xref:System.Windows.Forms.Form.Activate%2A>成員。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-160">The following code example demonstrates how to use the <xref:System.Windows.Forms.Form.SetDesktopLocation%2A>, <xref:System.Windows.Forms.Form.Closed>, <xref:System.Windows.Forms.Form.Load>, <xref:System.Windows.Forms.Form.Activated>, and <xref:System.Windows.Forms.Form.Activate%2A> members.</span></span> <span data-ttu-id="1bd5f-161">若要執行此範例，下列程式碼貼入表單名 Form1 包含<xref:System.Windows.Forms.Button>稱為`Button1`並將兩個<xref:System.Windows.Forms.Label>控制項，稱為`Label1`和`Label2`。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-161">To run the example, paste the following code in a form called Form1 containing a <xref:System.Windows.Forms.Button> called `Button1` and two <xref:System.Windows.Forms.Label> controls called `Label1` and `Label2`.</span></span>  
  
 [!code-cpp[System.Windows.Forms.FormsActivate#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.FormsActivate/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.FormsActivate#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.FormsActivate/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.FormsActivate#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.FormsActivate/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Form.OnActivated(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ActivateMdiChild">
      <MemberSignature Language="C#" Value="protected void ActivateMdiChild (System.Windows.Forms.Form form);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void ActivateMdiChild(class System.Windows.Forms.Form form) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.ActivateMdiChild(System.Windows.Forms.Form)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void ActivateMdiChild(System::Windows::Forms::Form ^ form);" />
      <MemberSignature Language="F#" Value="member this.ActivateMdiChild : System.Windows.Forms.Form -&gt; unit" Usage="form.ActivateMdiChild form" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="form" Type="System.Windows.Forms.Form" />
      </Parameters>
      <Docs>
        <param name="form">
          <span data-ttu-id="1bd5f-162">The child form to activate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-162">The child form to activate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1bd5f-163">Activates the MDI child of a form.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-163">Activates the MDI child of a form.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bd5f-164">如果`form`參數已經是作用中的 MDI 子表單，則<xref:System.Windows.Forms.Form.ActivateMdiChild%2A>方法只會傳回。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-164">If the `form` parameter is already the active MDI child form, then the <xref:System.Windows.Forms.Form.ActivateMdiChild%2A> method simply returns.</span></span> <span data-ttu-id="1bd5f-165">如果`form`不是`null`，則會設為作用中的 MDI 子表單。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-165">If `form` is not `null`, then it is set to be the active MDI child form.</span></span>  
  
 <span data-ttu-id="1bd5f-166">是否`form`參數是`null`是否<xref:System.Windows.Forms.Form.ActivateMdiChild%2A>引發<xref:System.Windows.Forms.Form.MdiChildActivate>事件。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-166">Whether the `form` parameter is `null` or not, <xref:System.Windows.Forms.Form.ActivateMdiChild%2A> raises the <xref:System.Windows.Forms.Form.MdiChildActivate> event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.ActiveMdiChild" />
        <altmember cref="P:System.Windows.Forms.Form.ActiveForm" />
        <altmember cref="E:System.Windows.Forms.Form.MdiChildActivate" />
      </Docs>
    </Member>
    <Member MemberName="ActiveForm">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.Form ActiveForm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Forms.Form ActiveForm" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.ActiveForm" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ActiveForm As Form" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Forms::Form ^ ActiveForm { System::Windows::Forms::Form ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ActiveForm : System.Windows.Forms.Form" Usage="System.Windows.Forms.Form.ActiveForm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Form</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1bd5f-167">Gets the currently active form for this application.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-167">Gets the currently active form for this application.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1bd5f-168">
            <see cref="T:System.Windows.Forms.Form" />，代表目前現用表單；如果沒有現用表單，則為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-168">A <see cref="T:System.Windows.Forms.Form" /> that represents the currently active form, or <see langword="null" /> if there is no active form.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bd5f-169">您可以使用這個方法來取得目前現用表單在表單或它的控制項上執行動作的參考。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-169">You can use this method to obtain a reference to the currently active form to perform actions on the form or its controls.</span></span>  
  
 <span data-ttu-id="1bd5f-170">如果您的應用程式的多重文件介面 (MDI) 應用程式，請使用<xref:System.Windows.Forms.Form.ActiveMdiChild%2A>屬性，以取得目前現用的 MDI 子表單。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-170">If your application is a multiple-document interface (MDI) application, use the <xref:System.Windows.Forms.Form.ActiveMdiChild%2A> property to obtain the currently active MDI child form.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1bd5f-171">下列程式碼範例會取得使用中的表單，並停用在表單上的所有控制項。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-171">The following code example gets the active form and disables all the controls on the form.</span></span> <span data-ttu-id="1bd5f-172">此範例會使用<xref:System.Windows.Forms.Control.Controls%2A>表單，以逐一查看每個表單上的控制項，並停用控制項的集合。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-172">The example uses the <xref:System.Windows.Forms.Control.Controls%2A> collection of the form to iterate through each control on the form and disable the controls.</span></span>  
  
 [!code-cpp[Classic Form.ActiveForm Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Form.ActiveForm Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Form.ActiveForm Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Form.ActiveForm Example/CS/source.cs#1)]
 [!code-vb[Classic Form.ActiveForm Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Form.ActiveForm Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="1bd5f-173">要求表單。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-173">for requesting a form.</span>
          </span>
          <span data-ttu-id="1bd5f-174">相關聯的列舉型別： <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-174">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</span>
          </span>
        </permission>
        <altmember cref="P:System.Windows.Forms.Form.ActiveMdiChild" />
      </Docs>
    </Member>
    <Member MemberName="ActiveMdiChild">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Form ActiveMdiChild { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Form ActiveMdiChild" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.ActiveMdiChild" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActiveMdiChild As Form" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Form ^ ActiveMdiChild { System::Windows::Forms::Form ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ActiveMdiChild : System.Windows.Forms.Form" Usage="System.Windows.Forms.Form.ActiveMdiChild" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Form</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1bd5f-175">Gets the currently active multiple-document interface (MDI) child window.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-175">Gets the currently active multiple-document interface (MDI) child window.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1bd5f-176">傳回 <see cref="T:System.Windows.Forms.Form" />，代表目前現用 MDI 子視窗；如果目前沒有子視窗，則為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-176">Returns a <see cref="T:System.Windows.Forms.Form" /> that represents the currently active MDI child window, or <see langword="null" /> if there are currently no child windows present.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bd5f-177">您可以使用這個方法來判斷是否有任何的 MDI 子表單在 MDI 應用程式中開啟。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-177">You can use this method to determine whether there are any MDI child forms open in your MDI application.</span></span> <span data-ttu-id="1bd5f-178">您也可以使用這個方法來執行操作之 MDI 子視窗上，從 MDI 父表單或另一種形式顯示在您的應用程式中。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-178">You can also use this method to perform operations on an MDI child window from its MDI parent form or from another form that is displayed in your application.</span></span>  
  
 <span data-ttu-id="1bd5f-179">如果目前現用表單不是 MDI 子表單，您可以使用<xref:System.Windows.Forms.Form.ActiveForm%2A>屬性，以取得它的參考。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-179">If the currently active form is not an MDI child form, you can use the <xref:System.Windows.Forms.Form.ActiveForm%2A> property to obtain a reference to it.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1bd5f-180">下列程式碼範例會取得作用中的 MDI 子表單和所有執行迴圈的參考<xref:System.Windows.Forms.TextBox>控制項在表單中，重設其<xref:System.Windows.Forms.TextBoxBase.Text%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-180">The following code example obtains a reference to the active MDI child form and loops through all <xref:System.Windows.Forms.TextBox> controls on the form, resetting their <xref:System.Windows.Forms.TextBoxBase.Text%2A> properties.</span></span> <span data-ttu-id="1bd5f-181">這個範例需要已建立的 MDI 父表單，並可在從 MDI 父表單這個方法呼叫。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-181">This example requires that an MDI parent form has been created and that this method call is being made from the MDI parent form.</span></span>  
  
 [!code-cpp[Classic Form.ActiveMdiChild Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Form.ActiveMdiChild Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Form.ActiveMdiChild Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Form.ActiveMdiChild Example/CS/source.cs#1)]
 [!code-vb[Classic Form.ActiveMdiChild Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Form.ActiveMdiChild Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.ActiveForm" />
      </Docs>
    </Member>
    <Member MemberName="AddOwnedForm">
      <MemberSignature Language="C#" Value="public void AddOwnedForm (System.Windows.Forms.Form ownedForm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOwnedForm(class System.Windows.Forms.Form ownedForm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.AddOwnedForm(System.Windows.Forms.Form)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOwnedForm (ownedForm As Form)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOwnedForm(System::Windows::Forms::Form ^ ownedForm);" />
      <MemberSignature Language="F#" Value="member this.AddOwnedForm : System.Windows.Forms.Form -&gt; unit" Usage="form.AddOwnedForm ownedForm" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ownedForm" Type="System.Windows.Forms.Form" />
      </Parameters>
      <Docs>
        <param name="ownedForm">
          <span data-ttu-id="1bd5f-182">The <see cref="T:System.Windows.Forms.Form" /> that this form will own.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-182">The <see cref="T:System.Windows.Forms.Form" /> that this form will own.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1bd5f-183">Adds an owned form to this form.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-183">Adds an owned form to this form.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bd5f-184">指派給主控表單在表單仍擁有直到<xref:System.Windows.Forms.Form.RemoveOwnedForm%2A>呼叫方法。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-184">The form assigned to the owner form remains owned until the <xref:System.Windows.Forms.Form.RemoveOwnedForm%2A> method is called.</span></span> <span data-ttu-id="1bd5f-185">您也可以進行表單，藉由設定另一個擁有<xref:System.Windows.Forms.Form.Owner%2A>其擁有者的形式參考的屬性。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-185">You can also make a form owned by another by setting the <xref:System.Windows.Forms.Form.Owner%2A> property with a reference to its owner form.</span></span>  
  
 <span data-ttu-id="1bd5f-186">當表單由另一種形式所擁有時，它已關閉或隱藏的擁有者的表單。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-186">When a form is owned by another form, it is closed or hidden with the owner form.</span></span> <span data-ttu-id="1bd5f-187">例如，假設名為的表單`Form2`，這擁有由表單名為`Form1`。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-187">For example, consider a form named `Form2` that is owned by a form named `Form1`.</span></span> <span data-ttu-id="1bd5f-188">如果`Form1`已關閉或最小化`Form2`也已關閉或隱藏。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-188">If `Form1` is closed or minimized, `Form2` is also closed or hidden.</span></span> <span data-ttu-id="1bd5f-189">擁有的表單也永遠不會顯示其主控表單後面。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-189">Owned forms are also never displayed behind their owner form.</span></span> <span data-ttu-id="1bd5f-190">您可以使用擁有的表單適用於 windows，例如尋找並取代 windows，應該不會顯示擁有者表單的後置選取主控表單時。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-190">You can use owned forms for windows such as find and replace windows, which should not be displayed behind the owner form when the owner form is selected.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1bd5f-191">如果表單是多重文件介面 (MDI) 父表單，這個屬性會傳回所有的表單會顯示除了任何目前的 MDI 子表單開啟。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-191">If the form is a multiple-document interface (MDI) parent form, this property returns all forms that are displayed with the exception of any MDI child forms that are currently open.</span></span> <span data-ttu-id="1bd5f-192">若要取得 MDI 子表單在 MDI 父表單中開啟，請使用<xref:System.Windows.Forms.Form.MdiChildren%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-192">To obtain the MDI child forms opened in an MDI parent form, use the <xref:System.Windows.Forms.Form.MdiChildren%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1bd5f-193">下列程式碼範例示範如何使用<xref:System.Windows.Forms.Form.AddOwnedForm%2A>表單顯示為附屬的表單的另一種形式的方法。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-193">The following code example demonstrates how to use the <xref:System.Windows.Forms.Form.AddOwnedForm%2A> method to display a form as an owned form of another form.</span></span> <span data-ttu-id="1bd5f-194">附屬的表單顯示之後，您可以減少其擁有者的形式和附屬的表單將與其降至最低。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-194">Once the owned form is shown, you can minimize its owner form and the owned form will minimize with it.</span></span> <span data-ttu-id="1bd5f-195">這個範例需要在此範例中的程式碼會呼叫從另一個事件或表單的方法。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-195">The example requires that the code in the example is called from another event or method of a form.</span></span>  
  
 [!code-cpp[Form.AddOwnedForm#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Form.AddOwnedForm/CPP/form1.cpp#1)]
 [!code-csharp[Form.AddOwnedForm#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Form.AddOwnedForm/CS/form1.cs#1)]
 [!code-vb[Form.AddOwnedForm#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Form.AddOwnedForm/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.OwnedForms" />
        <altmember cref="M:System.Windows.Forms.Form.RemoveOwnedForm(System.Windows.Forms.Form)" />
        <altmember cref="P:System.Windows.Forms.Form.Owner" />
      </Docs>
    </Member>
    <Member MemberName="AdjustFormScrollbars">
      <MemberSignature Language="C#" Value="protected override void AdjustFormScrollbars (bool displayScrollbars);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void AdjustFormScrollbars(bool displayScrollbars) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.AdjustFormScrollbars(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub AdjustFormScrollbars (displayScrollbars As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void AdjustFormScrollbars(bool displayScrollbars);" />
      <MemberSignature Language="F#" Value="override this.AdjustFormScrollbars : bool -&gt; unit" Usage="form.AdjustFormScrollbars displayScrollbars" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="displayScrollbars" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="displayScrollbars">
          <span data-ttu-id="1bd5f-196">
            <see langword="true" /> to show the scroll bars; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-196">
              <see langword="true" /> to show the scroll bars; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1bd5f-197">Adjusts the scroll bars on the container based on the current control positions and the control currently selected.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-197">Adjusts the scroll bars on the container based on the current control positions and the control currently selected.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowTransparency">
      <MemberSignature Language="C#" Value="public bool AllowTransparency { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowTransparency" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.AllowTransparency" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowTransparency As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowTransparency { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowTransparency : bool with get, set" Usage="System.Windows.Forms.Form.AllowTransparency" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1bd5f-198">Gets or sets a value indicating whether the opacity of the form can be adjusted.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-198">Gets or sets a value indicating whether the opacity of the form can be adjusted.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1bd5f-199">如果表單的不透明度可以變更，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-199">
              <see langword="true" /> if the opacity of the form can be changed; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bd5f-200">這個屬性會自動設為`true`如果`Opacity`會變更。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-200">This property is automatically set to `true` if the `Opacity` is changed.</span></span> <span data-ttu-id="1bd5f-201">當表單的透明度設定使用`Opacity`屬性，表單會在表單上的物件分層。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-201">When the opacity of a form is set using the `Opacity` property, the form will layer objects on the form.</span></span> <span data-ttu-id="1bd5f-202">如果您設定<xref:System.Windows.Forms.Form.AllowTransparency%2A>屬性設`false`表單不會在多層式模式，可提升表單的顯示效能。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-202">If you set the <xref:System.Windows.Forms.Form.AllowTransparency%2A> property to `false` the form will not be in layered mode which will improve the display performance of the form.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyAutoScaling">
      <MemberSignature Language="C#" Value="protected void ApplyAutoScaling ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void ApplyAutoScaling() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.ApplyAutoScaling" />
      <MemberSignature Language="VB.NET" Value="Protected Sub ApplyAutoScaling ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void ApplyAutoScaling();" />
      <MemberSignature Language="F#" Value="member this.ApplyAutoScaling : unit -&gt; unit" Usage="form.ApplyAutoScaling " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This method has been deprecated. Use the ApplyAutoScaling method instead.  http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1bd5f-203">Resizes the form according to the current value of the <see cref="P:System.Windows.Forms.Form.AutoScaleBaseSize" /> property and the size of the current font.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-203">Resizes the form according to the current value of the <see cref="P:System.Windows.Forms.Form.AutoScaleBaseSize" /> property and the size of the current font.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bd5f-204">這個方法會判斷使用的值將表單大小<xref:System.Windows.Forms.Form.AutoScaleBaseSize%2A>屬性和<xref:System.Windows.Forms.Form.Size%2A>所傳回的值<xref:System.Windows.Forms.Form.GetAutoScaleSize%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-204">This method determines the form size using the value of the <xref:System.Windows.Forms.Form.AutoScaleBaseSize%2A> property and the <xref:System.Windows.Forms.Form.Size%2A> value returned by the <xref:System.Windows.Forms.Form.GetAutoScaleSize%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoScale">
      <MemberSignature Language="C#" Value="public bool AutoScale { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoScale" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.AutoScale" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoScale As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoScale { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoScale : bool with get, set" Usage="System.Windows.Forms.Form.AutoScale" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This property has been deprecated. Use the AutoScaleMode property instead.  http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1bd5f-205">Gets or sets a value indicating whether the form adjusts its size to fit the height of the font used on the form and scales its controls.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-205">Gets or sets a value indicating whether the form adjusts its size to fit the height of the font used on the form and scales its controls.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1bd5f-206">如果表單根據指派給表單的目前字型自動縮放表單本身及其控制項，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-206">
              <see langword="true" /> if the form will automatically scale itself and its controls based on the current font assigned to the form; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="1bd5f-207">預設值為 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-207">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="1bd5f-208"><xref:System.Windows.Forms.Form.AutoScale%2A>已經過時，已保留回溯相容性。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-208">The <xref:System.Windows.Forms.Form.AutoScale%2A> is obsolete and has been retained for backward compatibility.</span></span> <span data-ttu-id="1bd5f-209">非過時的替代方式是 <xref:System.Windows.Forms.ContainerControl.AutoScaleMode%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-209">The non-obsolete alternative is <xref:System.Windows.Forms.ContainerControl.AutoScaleMode%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="1bd5f-210">如需有關自動調整的詳細資訊，請參閱 <<c0> [ 在 Windows Form 中的自動調整](~/docs/framework/winforms/automatic-scaling-in-windows-forms.md)。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-210">For more information about automatic scaling, see [Automatic Scaling in Windows Forms](~/docs/framework/winforms/automatic-scaling-in-windows-forms.md).</span></span>  
  
 <span data-ttu-id="1bd5f-211">您可以使用這個屬性，以允許您的表單，並自動調整其控制項根據字型中的變更。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-211">You can use this property to allow your form and its controls to automatically adjust based on changes in the font.</span></span> <span data-ttu-id="1bd5f-212">這可用於應用程式字型位置可能會增加或減少以指定用於 Windows 的語言。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-212">This can be useful in applications where the font might increase or decrease based on the language specified for use by Windows.</span></span>  
  
 <span data-ttu-id="1bd5f-213">若要取得就會自動在表單的大小調整規模，請以使用<xref:System.Windows.Forms.Form.AutoScaleBaseSize%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-213">To obtain the size the form will auto scale to, use the <xref:System.Windows.Forms.Form.AutoScaleBaseSize%2A> property.</span></span> <span data-ttu-id="1bd5f-214">如果您想要決定大小的表單會自動擴充，以根據特定的字型，使用<xref:System.Windows.Forms.Form.GetAutoScaleSize%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-214">If you want to determine the size the form will auto scale to based on a specific font, use the <xref:System.Windows.Forms.Form.GetAutoScaleSize%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoScaleBaseSize">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.Size AutoScaleBaseSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size AutoScaleBaseSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.AutoScaleBaseSize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AutoScaleBaseSize As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Size AutoScaleBaseSize { System::Drawing::Size get(); void set(System::Drawing::Size value); };" />
      <MemberSignature Language="F#" Value="member this.AutoScaleBaseSize : System.Drawing.Size with get, set" Usage="System.Windows.Forms.Form.AutoScaleBaseSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1bd5f-215">Gets or sets the base size used for autoscaling of the form.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-215">Gets or sets the base size used for autoscaling of the form.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1bd5f-216">
            <see cref="T:System.Drawing.Size" />，代表這個表單用來自動縮放的基準大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-216">A <see cref="T:System.Drawing.Size" /> that represents the base size that this form uses for autoscaling.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="1bd5f-217">這個成員已保留回溯相容性。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-217">This member has been retained for backward compatibility.</span></span> <span data-ttu-id="1bd5f-218">如需有關自動調整的詳細資訊，請參閱 <<c0> [ 在 Windows Form 中的自動調整](~/docs/framework/winforms/automatic-scaling-in-windows-forms.md)。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-218">For more information about automatic scaling, see [Automatic Scaling in Windows Forms](~/docs/framework/winforms/automatic-scaling-in-windows-forms.md).</span></span>  
  
 <span data-ttu-id="1bd5f-219">值<xref:System.Windows.Forms.Form.AutoScaleBaseSize%2A>屬性在表單顯示期間用來計算表單的縮放比例。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-219">The value of the <xref:System.Windows.Forms.Form.AutoScaleBaseSize%2A> property is used at form-display time to compute the scaling factor for the form.</span></span> <span data-ttu-id="1bd5f-220">自動調整基底大小用於表單做為基準的系統字型的大小比較來判斷多少來縮放表單，使用自動調整時。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-220">The autoscaling base size is used by the form as a baseline for comparison to the system's font size to determine how much to scale the form when autoscaling is used.</span></span> <span data-ttu-id="1bd5f-221">如果您想要決定大小表單將自動擴充，以根據特定的字型，使用<xref:System.Windows.Forms.Form.GetAutoScaleSize%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-221">If you want to determine the size a form will auto scale to based on a specific font, use the <xref:System.Windows.Forms.Form.GetAutoScaleSize%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1bd5f-222">一開始建立的表單時，會使用這個屬性的值。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-222">The value of this property is used when the form is initially created.</span></span> <span data-ttu-id="1bd5f-223">一旦設定屬性之後，就無法變更。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-223">Once the property is set, it cannot be changed.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.AutoScale" />
        <altmember cref="M:System.Windows.Forms.Form.GetAutoScaleSize(System.Drawing.Font)" />
      </Docs>
    </Member>
    <Member MemberName="AutoScroll">
      <MemberSignature Language="C#" Value="public override bool AutoScroll { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoScroll" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.AutoScroll" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property AutoScroll As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AutoScroll { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoScroll : bool with get, set" Usage="System.Windows.Forms.Form.AutoScroll" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1bd5f-224">Gets or sets a value indicating whether the form enables autoscrolling.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-224">Gets or sets a value indicating whether the form enables autoscrolling.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1bd5f-225">
            <see langword="true" /> 表示要啟用表單上的自動捲動，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-225">
              <see langword="true" /> to enable autoscrolling on the form; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="1bd5f-226">預設值為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-226">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bd5f-227">如果這個屬性設定為`true`，如果表單的工作區外面任何控制項，將會顯示在表單上的捲軸。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-227">If this property is set to `true`, scroll bars are displayed on the form if any controls are located outside the form's client region.</span></span> <span data-ttu-id="1bd5f-228">此外，開啟自動捲動時，表單的工作區會自動捲動以顯示具有輸入焦點的控制項。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-228">Additionally, when autoscrolling is on, the client area of the form automatically scrolls to make the control with input focus visible.</span></span>  
  
 <span data-ttu-id="1bd5f-229">您可以使用這個屬性，以防止使用者無法檢視控制項，當其視訊解析度設定為較低的解析度。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-229">You can use this property to prevent users from losing the ability to view controls when their video resolution settings are set to a low resolution.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1bd5f-230">下列程式碼範例示範如何使用<xref:System.Windows.Forms.Form.AutoScroll%2A>啟用 outsize 表單的工作區的控制項顯示的屬性。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-230">The following code example demonstrates how to use the <xref:System.Windows.Forms.Form.AutoScroll%2A> property to enable the display of controls that are outsize the client area of a form.</span></span> <span data-ttu-id="1bd5f-231">此範例會建立新的表單，並將<xref:System.Windows.Forms.Button>控制項加入表單。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-231">The example creates a new form and adds a <xref:System.Windows.Forms.Button> control to the form.</span></span> <span data-ttu-id="1bd5f-232"><xref:System.Windows.Forms.Button>控制項是定位的 outsize 新表單的工作區。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-232">The <xref:System.Windows.Forms.Button> control is positioned outsize the client area of the new form.</span></span> <span data-ttu-id="1bd5f-233"><xref:System.Windows.Forms.Form.AutoScroll%2A>屬性設定為 true 以顯示表單，讓使用者捲動至控制項上的捲軸。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-233">The <xref:System.Windows.Forms.Form.AutoScroll%2A> property is set to true to display scroll bars on the form to enable the user to scroll to the control.</span></span> <span data-ttu-id="1bd5f-234">這個範例需要在此範例中所定義的方法呼叫從另一種形式的事件處理常式或其他方法中。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-234">This example requires that the method defined in this example is called from another form in an event handler or other method.</span></span>  
  
 [!code-cpp[Form.AutoScroll#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Form.AutoScroll/CPP/form1.cpp#1)]
 [!code-csharp[Form.AutoScroll#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Form.AutoScroll/CS/form1.cs#1)]
 [!code-vb[Form.AutoScroll#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Form.AutoScroll/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoSize">
      <MemberSignature Language="C#" Value="public override bool AutoSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.AutoSize" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property AutoSize As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AutoSize { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoSize : bool with get, set" Usage="System.Windows.Forms.Form.AutoSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1bd5f-235">Resize the form according to the setting of <see cref="P:System.Windows.Forms.Form.AutoSizeMode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-235">Resize the form according to the setting of <see cref="P:System.Windows.Forms.Form.AutoSizeMode" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1bd5f-236">如果表單將自動調整大小，則為 <see langword="true" />；如果必須手動調整大小，則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-236">
              <see langword="true" /> if the form will automatically resize; <see langword="false" /> if it must be manually resized.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bd5f-237">使用<xref:System.Windows.Forms.Form.AutoSize%2A>強制表單，以調整大小以容納其內容。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-237">Use <xref:System.Windows.Forms.Form.AutoSize%2A> to force a form to resize to fit its contents.</span></span>  
  
 <span data-ttu-id="1bd5f-238">不自動調整大小的表單不會在 Visual Studio 表單設計工具，無論值為何<xref:System.Windows.Forms.Form.AutoSize%2A>和<xref:System.Windows.Forms.Form.AutoSizeMode%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-238">A form does not automatically resize in the Visual Studio forms designer, regardless of the values of the <xref:System.Windows.Forms.Form.AutoSize%2A> and <xref:System.Windows.Forms.Form.AutoSizeMode%2A> properties.</span></span> <span data-ttu-id="1bd5f-239">格式正確調整其大小在執行階段根據這兩個屬性的值。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-239">The form correctly resizes itself at run time according to the values of these two properties.</span></span> <span data-ttu-id="1bd5f-240">相較之下，自訂<xref:System.Windows.Forms.UserControl>在設計階段和執行階段自動調整其大小。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-240">By contrast, a custom <xref:System.Windows.Forms.UserControl> automatically resizes itself both at design time and at run time.</span></span>  
  
 <span data-ttu-id="1bd5f-241">使用時<xref:System.Windows.Forms.Form.AutoSize%2A>，則<xref:System.Windows.Forms.Control.MinimumSize%2A>並<xref:System.Windows.Forms.Control.MaximumSize%2A>遵守屬性，但目前的值<xref:System.Windows.Forms.Control.Size%2A>屬性會被忽略。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-241">When using <xref:System.Windows.Forms.Form.AutoSize%2A>, the <xref:System.Windows.Forms.Control.MinimumSize%2A> and <xref:System.Windows.Forms.Control.MaximumSize%2A> properties are respected, but the current value of the <xref:System.Windows.Forms.Control.Size%2A> property is ignored.</span></span> <span data-ttu-id="1bd5f-242">使用<xref:System.Windows.Forms.Form.AutoSize%2A>並<xref:System.Windows.Forms.Form.AutoSizeMode%2A>也會呈現<xref:System.Windows.Forms.Form.AutoScroll%2A>多餘的因為沒有任何方法來壓縮以隱藏其包含的控制項，從 檢視表單的屬性。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-242">Using <xref:System.Windows.Forms.Form.AutoSize%2A> and <xref:System.Windows.Forms.Form.AutoSizeMode%2A> also renders the <xref:System.Windows.Forms.Form.AutoScroll%2A> property superfluous, as there is no way to shrink the form to hide its contained controls from view.</span></span>  
  
 <span data-ttu-id="1bd5f-243">請參閱<xref:System.Windows.Forms.AutoSizeMode>列舉型別，如需表單運作方式的時機<xref:System.Windows.Forms.Form.AutoSize%2A>是`true`。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-243">See the <xref:System.Windows.Forms.AutoSizeMode> enumeration for information on how a form behaves when <xref:System.Windows.Forms.Form.AutoSize%2A> is `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1bd5f-244">下列程式碼範例顯示使用自動調整大小以容納其內容的程式碼建立表單。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-244">The following code example shows a form created using code that automatically resizes to fit its contents.</span></span> <span data-ttu-id="1bd5f-245">當執行時，表單會顯示<xref:System.Windows.Forms.Label>，則<xref:System.Windows.Forms.TextBox>輸入 URL，和<xref:System.Windows.Forms.Button>顯示該使用者的預設網頁瀏覽器內的 URL。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-245">When run, the form displays a <xref:System.Windows.Forms.Label>, a <xref:System.Windows.Forms.TextBox> for entering a URL, and a <xref:System.Windows.Forms.Button> for displaying that URL inside of the user's default Web browser.</span></span> <span data-ttu-id="1bd5f-246">此程式碼範例會使用<xref:System.Windows.Forms.FlowLayoutPanel>配置包含控制一個接著一個。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-246">The code example uses a <xref:System.Windows.Forms.FlowLayoutPanel> to lay out the contained controls one after the other.</span></span> <span data-ttu-id="1bd5f-247">它也會設定<xref:System.Windows.Forms.Control.AutoSize%2A>和<xref:System.Windows.Forms.AutoSizeMode>大及縮小以適合其表單的內容。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-247">It also sets the <xref:System.Windows.Forms.Control.AutoSize%2A> and <xref:System.Windows.Forms.AutoSizeMode> to grow and shrink to fit the contents of its form.</span></span>  
  
 [!code-csharp[Form.AutoSize#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Form.AutoSize/CS/Form1.cs#1)]
 [!code-vb[Form.AutoSize#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Form.AutoSize/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoSizeChanged">
      <MemberSignature Language="C#" Value="public event EventHandler AutoSizeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler AutoSizeChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Form.AutoSizeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event AutoSizeChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ AutoSizeChanged;" />
      <MemberSignature Language="F#" Value="member this.AutoSizeChanged : EventHandler " Usage="member this.AutoSizeChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1bd5f-248">Occurs when the <see cref="P:System.Windows.Forms.Form.AutoSize" /> property changes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-248">Occurs when the <see cref="P:System.Windows.Forms.Form.AutoSize" /> property changes.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoSizeMode">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.AutoSizeMode AutoSizeMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.AutoSizeMode AutoSizeMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.AutoSizeMode" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoSizeMode As AutoSizeMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::AutoSizeMode AutoSizeMode { System::Windows::Forms::AutoSizeMode get(); void set(System::Windows::Forms::AutoSizeMode value); };" />
      <MemberSignature Language="F#" Value="member this.AutoSizeMode : System.Windows.Forms.AutoSizeMode with get, set" Usage="System.Windows.Forms.Form.AutoSizeMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AutoSizeMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1bd5f-249">Gets or sets the mode by which the form automatically resizes itself.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-249">Gets or sets the mode by which the form automatically resizes itself.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1bd5f-250">
            <see cref="T:System.Windows.Forms.AutoSizeMode" /> 列舉值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-250">An <see cref="T:System.Windows.Forms.AutoSizeMode" /> enumerated value.</span>
          </span>
          <span data-ttu-id="1bd5f-251">預設值為 <see cref="F:System.Windows.Forms.AutoSizeMode.GrowOnly" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-251">The default is <see cref="F:System.Windows.Forms.AutoSizeMode.GrowOnly" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bd5f-252">設定<xref:System.Windows.Forms.Form.AutoSizeMode%2A>屬性設為新值會使表單重新配置。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-252">Setting the <xref:System.Windows.Forms.Form.AutoSizeMode%2A> property to a new value causes the form to be laid out again.</span></span>  
  
 <span data-ttu-id="1bd5f-253">不自動調整大小的表單不會在 Visual Studio 表單設計工具，無論值為何<xref:System.Windows.Forms.Form.AutoSize%2A>和<xref:System.Windows.Forms.Form.AutoSizeMode%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-253">A form does not automatically resize in the Visual Studio forms designer, regardless of the values of the <xref:System.Windows.Forms.Form.AutoSize%2A> and <xref:System.Windows.Forms.Form.AutoSizeMode%2A> properties.</span></span> <span data-ttu-id="1bd5f-254">格式正確調整其大小在執行階段根據這兩個屬性的值。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-254">The form correctly resizes itself at run time according to the values of these two properties.</span></span> <span data-ttu-id="1bd5f-255">相較之下，自訂<xref:System.Windows.Forms.UserControl>在設計階段和執行階段自動調整其大小。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-255">By contrast, a custom <xref:System.Windows.Forms.UserControl> automatically resizes itself both at design time and at run time.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1bd5f-256">下列程式碼範例顯示使用自動調整大小以容納其內容的程式碼建立表單。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-256">The following code example shows a form created using code that automatically resizes to fit its contents.</span></span> <span data-ttu-id="1bd5f-257">執行時，表單 displaya <xref:System.Windows.Forms.Label>，則<xref:System.Windows.Forms.TextBox>輸入 URL 和<xref:System.Windows.Forms.Button>顯示該使用者的預設網頁瀏覽器內的 URL。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-257">When run, the form displaya a <xref:System.Windows.Forms.Label>, a <xref:System.Windows.Forms.TextBox> for entering a URL, and a <xref:System.Windows.Forms.Button> for displaying that URL inside of the user's default Web browser.</span></span> <span data-ttu-id="1bd5f-258">此程式碼範例會使用<xref:System.Windows.Forms.FlowLayoutPanel>配置包含控制一個接著一個。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-258">The code example uses a <xref:System.Windows.Forms.FlowLayoutPanel> to lay out the contained controls one after the other.</span></span> <span data-ttu-id="1bd5f-259">它也會設定<xref:System.Windows.Forms.Control.AutoSize%2A>和<xref:System.Windows.Forms.AutoSizeMode>大及縮小以適合其表單的內容。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-259">It also sets the <xref:System.Windows.Forms.Control.AutoSize%2A> and <xref:System.Windows.Forms.AutoSizeMode> to grow and shrink to fit the contents of its form.</span></span>  
  
 [!code-csharp[Form.AutoSize#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Form.AutoSize/CS/Form1.cs#1)]
 [!code-vb[Form.AutoSize#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Form.AutoSize/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="1bd5f-260">The value is not a valid <see cref="T:System.Windows.Forms.AutoSizeMode" /> value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-260">The value is not a valid <see cref="T:System.Windows.Forms.AutoSizeMode" /> value.</span>
          </span>
        </exception>
        <altmember cref="T:System.Windows.Forms.AutoSizeMode" />
        <altmember cref="P:System.Windows.Forms.Form.AutoSize" />
        <altmember cref="M:System.Windows.Forms.Form.OnLayout(System.Windows.Forms.LayoutEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="AutoValidate">
      <MemberSignature Language="C#" Value="public override System.Windows.Forms.AutoValidate AutoValidate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.AutoValidate AutoValidate" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.AutoValidate" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property AutoValidate As AutoValidate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::AutoValidate AutoValidate { System::Windows::Forms::AutoValidate get(); void set(System::Windows::Forms::AutoValidate value); };" />
      <MemberSignature Language="F#" Value="member this.AutoValidate : System.Windows.Forms.AutoValidate with get, set" Usage="System.Windows.Forms.Form.AutoValidate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AutoValidate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1bd5f-261">Gets or sets a value that indicates whether controls in this container will be automatically validated when the focus changes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-261">Gets or sets a value that indicates whether controls in this container will be automatically validated when the focus changes.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1bd5f-262">
            <see cref="T:System.Windows.Forms.AutoValidate" />列舉值，指出是否在焦點改變隱含驗證包含的控制項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-262">An <see cref="T:System.Windows.Forms.AutoValidate" /> enumerated value that indicates whether contained controls are implicitly validated on focus change.</span>
          </span>
          <span data-ttu-id="1bd5f-263">預設值為 Inherit。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-263">The default is Inherit.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.ContainerControl.AutoValidate" />
      </Docs>
    </Member>
    <Member MemberName="AutoValidateChanged">
      <MemberSignature Language="C#" Value="public event EventHandler AutoValidateChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler AutoValidateChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Form.AutoValidateChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event AutoValidateChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ AutoValidateChanged;" />
      <MemberSignature Language="F#" Value="member this.AutoValidateChanged : EventHandler " Usage="member this.AutoValidateChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1bd5f-264">Occurs when the <see cref="P:System.Windows.Forms.Form.AutoValidate" /> property changes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-264">Occurs when the <see cref="P:System.Windows.Forms.Form.AutoValidate" /> property changes.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BackColor">
      <MemberSignature Language="C#" Value="public override System.Drawing.Color BackColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BackColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.BackColor" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BackColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Color BackColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.BackColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.Form.BackColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1bd5f-265">Gets or sets the background color for the control.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-265">Gets or sets the background color for the control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1bd5f-266">
            <see cref="T:System.Drawing.Color" />，代表控制項的背景色彩。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-266">A <see cref="T:System.Drawing.Color" /> that represents the background color of the control.</span>
          </span>
          <span data-ttu-id="1bd5f-267">預設值為 <see cref="P:System.Windows.Forms.Control.DefaultBackColor" /> 屬性的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-267">The default is the value of the <see cref="P:System.Windows.Forms.Control.DefaultBackColor" /> property.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.Control.BackColor" />
      </Docs>
    </Member>
    <Member MemberName="CancelButton">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.IButtonControl CancelButton { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.IButtonControl CancelButton" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.CancelButton" />
      <MemberSignature Language="VB.NET" Value="Public Property CancelButton As IButtonControl" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::IButtonControl ^ CancelButton { System::Windows::Forms::IButtonControl ^ get(); void set(System::Windows::Forms::IButtonControl ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CancelButton : System.Windows.Forms.IButtonControl with get, set" Usage="System.Windows.Forms.Form.CancelButton" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.IButtonControl</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1bd5f-268">Gets or sets the button control that is clicked when the user presses the ESC key.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-268">Gets or sets the button control that is clicked when the user presses the ESC key.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1bd5f-269">
            <see cref="T:System.Windows.Forms.IButtonControl" />，代表表單的取消按鈕。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-269">An <see cref="T:System.Windows.Forms.IButtonControl" /> that represents the cancel button for the form.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bd5f-270">[取消] 按鈕，表單是使用者按下 ESC 鍵，按下的按鈕控制項。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-270">The cancel button for a form is the button control that is clicked whenever the user presses the ESC key.</span></span> <span data-ttu-id="1bd5f-271">必須是指派給這個屬性的按鈕<xref:System.Windows.Forms.IButtonControl>，位於目前的表單上，或位於目前的表單上的容器。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-271">The button assigned to this property must be an <xref:System.Windows.Forms.IButtonControl> that is on the current form or located within a container on the current form.</span></span>  
  
 <span data-ttu-id="1bd5f-272">這個屬性可讓您指定當使用者按下 ESC 鍵，在您的應用程式時所發生的預設動作。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-272">This property allows you to designate a default action to occur when the user presses the ESC key in your application.</span></span> <span data-ttu-id="1bd5f-273">您可以使用這個屬性，以允許使用者快速導覽，好讓他們只需按下 ESC 鍵以關閉視窗而不需要認可變更，而不是手動按一下 [取消] 按鈕，使用其滑鼠的一個簡單的表單。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-273">You can use this property to allow the user to quickly navigate a simple form by allowing them to simply press the ESC key to close a window without committing changes instead of manually clicking the cancel button with their mouse.</span></span>  
  
 <span data-ttu-id="1bd5f-274"><xref:System.Windows.Forms.Form.CancelButton%2A> 可能會無法運作如果表單上的另一個控制項攔截 ESC 鍵。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-274"><xref:System.Windows.Forms.Form.CancelButton%2A> may not work if another control on the form intercepts the ESC key.</span></span> <span data-ttu-id="1bd5f-275">例如，如果您有<xref:System.Windows.Forms.ComboBox>開啟您的表單上，esc 鍵會關閉<xref:System.Windows.Forms.ComboBox>而不是關閉表單。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-275">For example, if you have a <xref:System.Windows.Forms.ComboBox> open on your form, ESC will close the <xref:System.Windows.Forms.ComboBox> instead of closing the Form.</span></span>  
  
 <span data-ttu-id="1bd5f-276"><xref:System.Windows.Forms.IButtonControl>指派給物件<xref:System.Windows.Forms.Form.CancelButton%2A>必須顯示在表單中，否則按下 ESC 鍵會有任何作用。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-276">The <xref:System.Windows.Forms.IButtonControl> object assigned to <xref:System.Windows.Forms.Form.CancelButton%2A> must be visible on the form, or else pressing the ESC key will have no effect.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1bd5f-277">下列程式碼範例會建立的新執行個體<xref:System.Windows.Forms.Form>，並呼叫<xref:System.Windows.Forms.Form.ShowDialog%2A>表單顯示為對話方塊中的方法。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-277">The following code example creates a new instance of a <xref:System.Windows.Forms.Form> and calls the <xref:System.Windows.Forms.Form.ShowDialog%2A> method to display the form as a dialog box.</span></span> <span data-ttu-id="1bd5f-278">範例會設定<xref:System.Windows.Forms.Form.FormBorderStyle%2A>， <xref:System.Windows.Forms.Form.AcceptButton%2A>， <xref:System.Windows.Forms.Form.CancelButton%2A>， <xref:System.Windows.Forms.Form.MinimizeBox%2A>， <xref:System.Windows.Forms.Form.MaximizeBox%2A>，和<xref:System.Windows.Forms.Form.StartPosition%2A>內容 對話方塊中變更的外觀和功能的形式。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-278">The example sets the <xref:System.Windows.Forms.Form.FormBorderStyle%2A>, <xref:System.Windows.Forms.Form.AcceptButton%2A>, <xref:System.Windows.Forms.Form.CancelButton%2A>, <xref:System.Windows.Forms.Form.MinimizeBox%2A>, <xref:System.Windows.Forms.Form.MaximizeBox%2A>, and <xref:System.Windows.Forms.Form.StartPosition%2A> properties to change the appearance and functionality of the form to a dialog box.</span></span> <span data-ttu-id="1bd5f-279">此範例也會使用<xref:System.Windows.Forms.Form.ControlCollection.Add%2A>表單的方法<xref:System.Windows.Forms.Control.Controls%2A>要加入兩個集合<xref:System.Windows.Forms.Button>控制項。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-279">The example also uses the <xref:System.Windows.Forms.Form.ControlCollection.Add%2A> method of the form's <xref:System.Windows.Forms.Control.Controls%2A> collection to add two <xref:System.Windows.Forms.Button> controls.</span></span> <span data-ttu-id="1bd5f-280">此範例會使用<xref:System.Windows.Forms.Form.HelpButton%2A>屬性 對話方塊的標題列中顯示 說明 按鈕。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-280">The example uses the <xref:System.Windows.Forms.Form.HelpButton%2A> property to display a help button in the caption bar of the dialog box.</span></span>  
  
 [!code-cpp[Classic Form.AcceptButton Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Form.AcceptButton Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Form.AcceptButton Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Form.AcceptButton Example/CS/source.cs#1)]
 [!code-vb[Classic Form.AcceptButton Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Form.AcceptButton Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.AcceptButton" />
        <altmember cref="T:System.Windows.Forms.IButtonControl" />
      </Docs>
    </Member>
    <Member MemberName="CenterToParent">
      <MemberSignature Language="C#" Value="protected void CenterToParent ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void CenterToParent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.CenterToParent" />
      <MemberSignature Language="VB.NET" Value="Protected Sub CenterToParent ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void CenterToParent();" />
      <MemberSignature Language="F#" Value="member this.CenterToParent : unit -&gt; unit" Usage="form.CenterToParent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1bd5f-281">Centers the position of the form within the bounds of the parent form.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-281">Centers the position of the form within the bounds of the parent form.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bd5f-282">請勿呼叫<xref:System.Windows.Forms.Form.CenterToParent%2A>直接從程式碼的方法。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-282">Do not call the <xref:System.Windows.Forms.Form.CenterToParent%2A> method directly from your code.</span></span> <span data-ttu-id="1bd5f-283">相反地，設定<xref:System.Windows.Forms.Form.StartPosition%2A>屬性設<xref:System.Windows.Forms.FormStartPosition.CenterParent>。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-283">Instead, set the <xref:System.Windows.Forms.Form.StartPosition%2A> property to <xref:System.Windows.Forms.FormStartPosition.CenterParent>.</span></span>  
  
 <span data-ttu-id="1bd5f-284">如果表單或對話方塊是最上層，則<xref:System.Windows.Forms.Form.CenterToParent%2A>中心相對於畫面或桌面上表單。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-284">If the form or dialog is top-level, then <xref:System.Windows.Forms.Form.CenterToParent%2A> centers the form with respect to the screen or desktop.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Windows.Forms.FormStartPosition.CenterParent" />
        <altmember cref="M:System.Windows.Forms.Form.CenterToScreen" />
      </Docs>
    </Member>
    <Member MemberName="CenterToScreen">
      <MemberSignature Language="C#" Value="protected void CenterToScreen ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void CenterToScreen() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.CenterToScreen" />
      <MemberSignature Language="VB.NET" Value="Protected Sub CenterToScreen ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void CenterToScreen();" />
      <MemberSignature Language="F#" Value="member this.CenterToScreen : unit -&gt; unit" Usage="form.CenterToScreen " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1bd5f-285">Centers the form on the current screen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-285">Centers the form on the current screen.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bd5f-286">請勿呼叫這個方法直接從程式碼。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-286">Do not call this directly from your code.</span></span> <span data-ttu-id="1bd5f-287">相反地，設定<xref:System.Windows.Forms.Form.StartPosition%2A>屬性設<xref:System.Windows.Forms.FormStartPosition.CenterScreen>。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-287">Instead, set the <xref:System.Windows.Forms.Form.StartPosition%2A> property to <xref:System.Windows.Forms.FormStartPosition.CenterScreen>.</span></span>  
  
 <span data-ttu-id="1bd5f-288"><xref:System.Windows.Forms.Form.CenterToScreen%2A>方法會使用下列優先順序清單來判斷用來將表單置螢幕：</span><span class="sxs-lookup"><span data-stu-id="1bd5f-288">The <xref:System.Windows.Forms.Form.CenterToScreen%2A> method uses the following priority list to determine the screen used to center the form:</span></span>  
  
1.  <span data-ttu-id="1bd5f-289"><xref:System.Windows.Forms.Form.Owner%2A>表單的屬性。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-289">The <xref:System.Windows.Forms.Form.Owner%2A> property of the form.</span></span>  
  
2.  <span data-ttu-id="1bd5f-290">形式的 HWND 擁有者。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-290">The HWND owner of the form.</span></span>  
  
3.  <span data-ttu-id="1bd5f-291">目前有滑鼠資料指標的螢幕。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-291">The screen that currently has the mouse cursor.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Windows.Forms.FormStartPosition.CenterScreen" />
        <altmember cref="P:System.Windows.Forms.Form.Owner" />
      </Docs>
    </Member>
    <Member MemberName="ClientSize">
      <MemberSignature Language="C#" Value="public System.Drawing.Size ClientSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size ClientSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.ClientSize" />
      <MemberSignature Language="VB.NET" Value="Public Property ClientSize As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Size ClientSize { System::Drawing::Size get(); void set(System::Drawing::Size value); };" />
      <MemberSignature Language="F#" Value="member this.ClientSize : System.Drawing.Size with get, set" Usage="System.Windows.Forms.Form.ClientSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1bd5f-292">Gets or sets the size of the client area of the form.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-292">Gets or sets the size of the client area of the form.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1bd5f-293">
            <see cref="T:System.Drawing.Size" />，代表表單工作區的大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-293">A <see cref="T:System.Drawing.Size" /> that represents the size of the form's client area.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bd5f-294">表單的工作區的大小是框線和標題列，但不包括表單的大小。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-294">The size of the client area of the form is the size of the form excluding the borders and the title bar.</span></span> <span data-ttu-id="1bd5f-295">表單的工作區是控制項放置在表單區域。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-295">The client area of a form is the area within a form where controls can be placed.</span></span> <span data-ttu-id="1bd5f-296">您可以使用這個屬性，以取得正確的維度，或調整大小，並放置在表單上的控制項時執行圖形作業。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-296">You can use this property to get the proper dimensions when performing graphics operations or when sizing and positioning controls on the form.</span></span> <span data-ttu-id="1bd5f-297">若要取得整個表單的大小，請使用<xref:System.Windows.Forms.Form.Size%2A>屬性，或是使用個別的屬性<xref:System.Windows.Forms.Control.Height%2A>和<xref:System.Windows.Forms.Control.Width%2A>。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-297">To get the size of the entire form, use the <xref:System.Windows.Forms.Form.Size%2A> property or use the individual properties <xref:System.Windows.Forms.Control.Height%2A> and <xref:System.Windows.Forms.Control.Width%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1bd5f-298">您目前無法繫結使用應用程式設定這個屬性。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-298">You cannot currently bind to this property using application settings.</span></span> <span data-ttu-id="1bd5f-299">如需有關應用程式設定的詳細資訊，請參閱 <<c0> [ 應用程式設定概觀](~/docs/framework/winforms/advanced/application-settings-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-299">For more information on application settings, see [Application Settings Overview](~/docs/framework/winforms/advanced/application-settings-overview.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1bd5f-300">下列程式碼範例會建立事件處理常式<xref:System.Windows.Forms.Control.Resize>型態的事件。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-300">The following code example creates an event handler for the <xref:System.Windows.Forms.Control.Resize> event of a form.</span></span> <span data-ttu-id="1bd5f-301">事件處理常式會使用<xref:System.Windows.Forms.Form.ClientSize%2A>將表單的屬性<xref:System.Windows.Forms.Button>控制項，名為`button1`填滿表單的整個用戶端區域。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-301">The event handler uses the <xref:System.Windows.Forms.Form.ClientSize%2A> property of the form to make a <xref:System.Windows.Forms.Button> control named `button1` fill the entire client area of the form.</span></span>  
  
 [!code-cpp[Classic Form.ClientSize Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Form.ClientSize Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Form.ClientSize Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Form.ClientSize Example/CS/source.cs#1)]
 [!code-vb[Classic Form.ClientSize Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Form.ClientSize Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.Size" />
        <altmember cref="P:System.Windows.Forms.Control.Height" />
        <altmember cref="P:System.Windows.Forms.Control.Width" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberSignature Language="F#" Value="member this.Close : unit -&gt; unit" Usage="form.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1bd5f-302">Closes the form.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-302">Closes the form.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bd5f-303">當關閉表單時，在物件內建立的所有資源都已都關閉，並處置表單。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-303">When a form is closed, all resources created within the object are closed and the form is disposed.</span></span> <span data-ttu-id="1bd5f-304">您可以避免處理表單的結尾，在執行階段<xref:System.Windows.Forms.Form.Closing>事件及設定<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>屬性<xref:System.ComponentModel.CancelEventArgs>做為參數傳遞至事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-304">You can prevent the closing of a form at run time by handling the <xref:System.Windows.Forms.Form.Closing> event and setting the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.ComponentModel.CancelEventArgs> passed as a parameter to your event handler.</span></span> <span data-ttu-id="1bd5f-305">如果您在關閉表單啟動表單，您的應用程式，您的應用程式就會結束。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-305">If the form you are closing is the startup form of your application, your application ends.</span></span>  
  
 <span data-ttu-id="1bd5f-306">這兩個條件時表單不會處置`Close`時 （1） 它多重文件介面 (MDI) 應用程式的一部分和表單不是可見的; 以及 （2） 您的顯示格式使用<xref:System.Windows.Forms.Form.ShowDialog%2A>。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-306">The two conditions when a form is not disposed on `Close` is when (1) it is part of a multiple-document interface (MDI) application, and the form is not visible; and (2) you have displayed the form using <xref:System.Windows.Forms.Form.ShowDialog%2A>.</span></span> <span data-ttu-id="1bd5f-307">在這些情況下，您必須呼叫<xref:System.Windows.Forms.Form.Dispose%2A>以手動方式將標記的所有表單的控制項進行記憶體回收。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-307">In these cases, you will need to call <xref:System.Windows.Forms.Form.Dispose%2A> manually to mark all of the form's controls for garbage collection.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1bd5f-308">當<xref:System.Windows.Forms.Form.Close%2A>上呼叫方法<xref:System.Windows.Forms.Form>顯示為非強制回應視窗，您不能呼叫<xref:System.Windows.Forms.Control.Show%2A>方法來顯示表單，因為已發行的形式的資源。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-308">When the <xref:System.Windows.Forms.Form.Close%2A> method is called on a <xref:System.Windows.Forms.Form> displayed as a modeless window, you cannot call the <xref:System.Windows.Forms.Control.Show%2A> method to make the form visible, because the form's resources have already been released.</span></span> <span data-ttu-id="1bd5f-309">若要隱藏表單，然後使其可見的使用<xref:System.Windows.Forms.Control.Hide%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-309">To hide a form and then make it visible, use the <xref:System.Windows.Forms.Control.Hide%2A?displayProperty=nameWithType> method.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="1bd5f-310">之前[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]2.0<xref:System.Windows.Forms.Form.Closed?displayProperty=nameWithType>並<xref:System.Windows.Forms.Form.Closing?displayProperty=nameWithType>事件不是時引發<xref:System.Windows.Forms.Application.Exit%2A?displayProperty=nameWithType>會呼叫方法以結束您的應用程式。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-310">Prior to the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 2.0, the <xref:System.Windows.Forms.Form.Closed?displayProperty=nameWithType> and <xref:System.Windows.Forms.Form.Closing?displayProperty=nameWithType> events are not raised when the <xref:System.Windows.Forms.Application.Exit%2A?displayProperty=nameWithType> method is called to exit your application.</span></span> <span data-ttu-id="1bd5f-311">如果您有驗證程式碼必須執行這些事件之一時，您應該呼叫<xref:System.Windows.Forms.Form.Close%2A?displayProperty=nameWithType>方法，為每個開啟的表單，然後再呼叫個別<xref:System.Windows.Forms.Application.Exit%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-311">If you have validation code in either of these events that must be executed, you should call the <xref:System.Windows.Forms.Form.Close%2A?displayProperty=nameWithType> method for each open form individually before calling the <xref:System.Windows.Forms.Application.Exit%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="1bd5f-312">The form was closed while a handle was being created.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-312">The form was closed while a handle was being created.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="1bd5f-313">You cannot call this method from the <see cref="E:System.Windows.Forms.Form.Activated" /> event when <see cref="P:System.Windows.Forms.Form.WindowState" /> is set to <see cref="F:System.Windows.Forms.FormWindowState.Maximized" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-313">You cannot call this method from the <see cref="E:System.Windows.Forms.Form.Activated" /> event when <see cref="P:System.Windows.Forms.Form.WindowState" /> is set to <see cref="F:System.Windows.Forms.FormWindowState.Maximized" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.ComponentModel.CancelEventArgs.Cancel" />
        <altmember cref="E:System.Windows.Forms.Form.Closing" />
        <altmember cref="T:System.Windows.Forms.CloseReason" />
      </Docs>
    </Member>
    <Member MemberName="Closed">
      <MemberSignature Language="C#" Value="public event EventHandler Closed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Closed" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Form.Closed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Closed As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Closed;" />
      <MemberSignature Language="F#" Value="member this.Closed : EventHandler " Usage="member this.Closed : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1bd5f-314">Occurs when the form is closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-314">Occurs when the form is closed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!CAUTION]
>  <span data-ttu-id="1bd5f-315"><xref:System.Windows.Forms.Form.Closed>事件已過時，.NET Framework 2.0 版中，使用<xref:System.Windows.Forms.Form.FormClosed>事件改。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-315">The <xref:System.Windows.Forms.Form.Closed> event is obsolete in the .NET Framework version 2.0; use the <xref:System.Windows.Forms.Form.FormClosed> event instead.</span></span>  
  
 <span data-ttu-id="1bd5f-316">由使用者或藉由關閉表單之後，就會發生此事件<xref:System.Windows.Forms.Form.Close%2A>表單方法。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-316">This event occurs after the form has been closed by the user or by the <xref:System.Windows.Forms.Form.Close%2A> method of the form.</span></span> <span data-ttu-id="1bd5f-317">若要防止關閉表單，處理<xref:System.Windows.Forms.Form.Closing>事件和 set<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>屬性<xref:System.ComponentModel.CancelEventArgs>傳遞到您的事件處理常式，以`true`。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-317">To prevent a form from closing, handle the <xref:System.Windows.Forms.Form.Closing> event and set the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.ComponentModel.CancelEventArgs> passed to your event handler to `true`.</span></span>  
  
 <span data-ttu-id="1bd5f-318">您可以使用這個事件，來執行工作，例如釋放表單所使用的資源和儲存在表單中輸入資訊或更新它的父表單。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-318">You can use this event to perform tasks such as freeing resources used by the form and to save information entered in the form or to update its parent form.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="1bd5f-319"><xref:System.Windows.Forms.Form.Closed?displayProperty=nameWithType>並<xref:System.Windows.Forms.Form.Closing?displayProperty=nameWithType>不是事件時引發<xref:System.Windows.Forms.Application.Exit%2A?displayProperty=nameWithType>會呼叫方法以結束您的應用程式。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-319">The <xref:System.Windows.Forms.Form.Closed?displayProperty=nameWithType> and <xref:System.Windows.Forms.Form.Closing?displayProperty=nameWithType> events are not raised when the <xref:System.Windows.Forms.Application.Exit%2A?displayProperty=nameWithType> method is called to exit your application.</span></span> <span data-ttu-id="1bd5f-320">如果您有驗證程式碼必須執行這些事件之一時，您應該呼叫<xref:System.Windows.Forms.Form.Close%2A?displayProperty=nameWithType>方法，為每個開啟的表單，然後再呼叫個別<xref:System.Windows.Forms.Application.Exit%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-320">If you have validation code in either of these events that must be executed, you should call the <xref:System.Windows.Forms.Form.Close%2A?displayProperty=nameWithType> method for each open form individually before calling the <xref:System.Windows.Forms.Application.Exit%2A> method.</span></span>  
  
 <span data-ttu-id="1bd5f-321">如果表單為 MDI 父表單<xref:System.Windows.Forms.Form.Closing>MDI 父表單之前，會引發事件的所有的 MDI 子表單<xref:System.Windows.Forms.Form.Closing>就會引發事件。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-321">If the form is an MDI parent form, the <xref:System.Windows.Forms.Form.Closing> events of all MDI child forms are raised before the MDI parent form's <xref:System.Windows.Forms.Form.Closing> event is raised.</span></span> <span data-ttu-id="1bd5f-322">颾魤 ㄛ<xref:System.Windows.Forms.Form.Closed>之前，會引發事件的所有的 MDI 子表單<xref:System.Windows.Forms.Form.Closed>引發 MDI 父表單的事件。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-322">In addition, the <xref:System.Windows.Forms.Form.Closed> events of all MDI child forms are raised before the <xref:System.Windows.Forms.Form.Closed> event of the MDI parent form is raised.</span></span>  
  
 <span data-ttu-id="1bd5f-323">如需有關如何處理事件的詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-323">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1bd5f-324">下列程式碼範例示範如何使用<xref:System.Windows.Forms.Form.SetDesktopLocation%2A>， <xref:System.Windows.Forms.Form.Closed>， <xref:System.Windows.Forms.Form.Load>， <xref:System.Windows.Forms.Form.Activated>，和<xref:System.Windows.Forms.Form.Activate%2A>成員。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-324">The following code example demonstrates how to use the <xref:System.Windows.Forms.Form.SetDesktopLocation%2A>, <xref:System.Windows.Forms.Form.Closed>, <xref:System.Windows.Forms.Form.Load>, <xref:System.Windows.Forms.Form.Activated>, and <xref:System.Windows.Forms.Form.Activate%2A> members.</span></span> <span data-ttu-id="1bd5f-325">若要執行此範例，下列程式碼貼入表單名`Form1`包含<xref:System.Windows.Forms.Button>稱為`Button1`並將兩個<xref:System.Windows.Forms.Label>控制項，稱為`Label1`和`Label2`。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-325">To run the example, paste the following code in a form called `Form1` containing a <xref:System.Windows.Forms.Button> called `Button1` and two <xref:System.Windows.Forms.Label> controls called `Label1` and `Label2`.</span></span>  
  
 [!code-cpp[System.Windows.Forms.FormsActivate#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.FormsActivate/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.FormsActivate#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.FormsActivate/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.FormsActivate#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.FormsActivate/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.IsMdiContainer" />
        <altmember cref="M:System.Windows.Forms.Form.OnClosed(System.EventArgs)" />
        <altmember cref="E:System.Windows.Forms.Form.Load" />
      </Docs>
    </Member>
    <Member MemberName="Closing">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.CancelEventHandler Closing;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.CancelEventHandler Closing" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Form.Closing" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Closing As CancelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::CancelEventHandler ^ Closing;" />
      <MemberSignature Language="F#" Value="member this.Closing : System.ComponentModel.CancelEventHandler " Usage="member this.Closing : System.ComponentModel.CancelEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.CancelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1bd5f-326">Occurs when the form is closing.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-326">Occurs when the form is closing.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!CAUTION]
>  <span data-ttu-id="1bd5f-327"><xref:System.Windows.Forms.Form.Closing>事件已過時，.NET Framework 2.0 版中，使用<xref:System.Windows.Forms.Form.FormClosing>事件改。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-327">The <xref:System.Windows.Forms.Form.Closing> event is obsolete in the .NET Framework version 2.0; use the <xref:System.Windows.Forms.Form.FormClosing> event instead.</span></span>  
  
 <span data-ttu-id="1bd5f-328"><xref:System.Windows.Forms.Form.Closing>表單關閉事件會發生。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-328">The <xref:System.Windows.Forms.Form.Closing> event occurs as the form is being closed.</span></span> <span data-ttu-id="1bd5f-329">當關閉表單時，會釋出物件內建立的所有資源，並且處置表單。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-329">When a form is closed, all resources created within the object are released and the form is disposed.</span></span> <span data-ttu-id="1bd5f-330">如果您取消此事件時，表單將保持開啟。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-330">If you cancel this event, the form remains opened.</span></span> <span data-ttu-id="1bd5f-331">若要取消的表單關閉，請設定<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>的屬性<xref:System.ComponentModel.CancelEventArgs>傳遞到您的事件處理常式，以`true`。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-331">To cancel the closure of a form, set the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.ComponentModel.CancelEventArgs> passed to your event handler to `true`.</span></span>  
  
 <span data-ttu-id="1bd5f-332">當表單顯示為強制回應對話方塊時，按一下**關閉**按鈕 （具有表單右上角的 X 按鈕） 將會隱藏表單並<xref:System.Windows.Forms.Form.DialogResult%2A>屬性設為`DialogResult.Cancel`。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-332">When a form is displayed as a modal dialog box, clicking the **Close** button (the button with an X at the upper-right corner of the form) causes the form to be hidden and the <xref:System.Windows.Forms.Form.DialogResult%2A> property to be set to `DialogResult.Cancel`.</span></span> <span data-ttu-id="1bd5f-333">您可以覆寫的值指派給<xref:System.Windows.Forms.Form.DialogResult%2A>屬性，當使用者按一下 **關閉**藉由設定按鈕<xref:System.Windows.Forms.Form.DialogResult%2A>中的事件處理常式屬性<xref:System.Windows.Forms.Form.Closing>形式的事件。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-333">You can override the value assigned to the <xref:System.Windows.Forms.Form.DialogResult%2A> property when the user clicks the **Close** button by setting the <xref:System.Windows.Forms.Form.DialogResult%2A> property in an event handler for the <xref:System.Windows.Forms.Form.Closing> event of the form.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1bd5f-334">當<xref:System.Windows.Forms.Form.Close%2A>上呼叫方法<xref:System.Windows.Forms.Form>顯示為非強制回應視窗，您不能呼叫<xref:System.Windows.Forms.Control.Show%2A>方法來顯示表單，因為已發行的形式的資源。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-334">When the <xref:System.Windows.Forms.Form.Close%2A> method is called on a <xref:System.Windows.Forms.Form> displayed as a modeless window, you cannot call the <xref:System.Windows.Forms.Control.Show%2A> method to make the form visible, because the form's resources have already been released.</span></span> <span data-ttu-id="1bd5f-335">若要隱藏表單，然後使其可見的使用<xref:System.Windows.Forms.Control.Hide%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-335">To hide a form and then make it visible, use the <xref:System.Windows.Forms.Control.Hide%2A?displayProperty=nameWithType> method.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="1bd5f-336"><xref:System.Windows.Forms.Form.Closed?displayProperty=nameWithType>並<xref:System.Windows.Forms.Form.Closing?displayProperty=nameWithType>不是事件時引發<xref:System.Windows.Forms.Application.Exit%2A?displayProperty=nameWithType>會呼叫方法以結束您的應用程式。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-336">The <xref:System.Windows.Forms.Form.Closed?displayProperty=nameWithType> and <xref:System.Windows.Forms.Form.Closing?displayProperty=nameWithType> events are not raised when the <xref:System.Windows.Forms.Application.Exit%2A?displayProperty=nameWithType> method is called to exit your application.</span></span> <span data-ttu-id="1bd5f-337">如果您有驗證程式碼必須執行這些事件之一時，您應該呼叫<xref:System.Windows.Forms.Form.Close%2A?displayProperty=nameWithType>方法，為每個開啟的表單，然後再呼叫個別<xref:System.Windows.Forms.Application.Exit%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-337">If you have validation code in either of these events that must be executed, you should call the <xref:System.Windows.Forms.Form.Close%2A?displayProperty=nameWithType> method for each open form individually before calling the <xref:System.Windows.Forms.Application.Exit%2A> method.</span></span>  
  
 <span data-ttu-id="1bd5f-338">如果表單為 MDI 父表單<xref:System.Windows.Forms.Form.Closing>MDI 父表單之前，會引發事件的所有的 MDI 子表單<xref:System.Windows.Forms.Form.Closing>就會引發事件。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-338">If the form is an MDI parent form, the <xref:System.Windows.Forms.Form.Closing> events of all MDI child forms are raised before the MDI parent form's <xref:System.Windows.Forms.Form.Closing> event is raised.</span></span> <span data-ttu-id="1bd5f-339">颾魤 ㄛ<xref:System.Windows.Forms.Form.Closed>之前，會引發事件的所有的 MDI 子表單<xref:System.Windows.Forms.Form.Closed>引發 MDI 父表單的事件。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-339">In addition, the <xref:System.Windows.Forms.Form.Closed> events of all MDI child forms are raised before the <xref:System.Windows.Forms.Form.Closed> event of the MDI parent form is raised.</span></span> <span data-ttu-id="1bd5f-340">正在取消<xref:System.Windows.Forms.Form.Closing>事件的 MDI 子表單不會防止<xref:System.Windows.Forms.Form.Closing>MDI 父表單，引發的事件。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-340">Canceling the <xref:System.Windows.Forms.Form.Closing> event of an MDI child form does not prevent the <xref:System.Windows.Forms.Form.Closing> event of the MDI parent form from being raised.</span></span> <span data-ttu-id="1bd5f-341">不過，取消事件將會設為`true`<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>屬性<xref:System.ComponentModel.CancelEventArgs>做為參數傳遞至父表單。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-341">However, canceling the event will set to `true` the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.ComponentModel.CancelEventArgs> that is passed as a parameter to the parent form.</span></span> <span data-ttu-id="1bd5f-342">若要強制所有 MDI 父和子表單關閉時，將<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>屬性設`false`於 MDI 父表單。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-342">To force all MDI parent and child forms to close, set the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property to `false` in the MDI parent form.</span></span>  
  
 <span data-ttu-id="1bd5f-343">如需有關如何處理事件的詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-343">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1bd5f-344">下列程式碼範例會使用<xref:System.Windows.Forms.Form.Closing>若要測試中的文字<xref:System.Windows.Forms.TextBox>已變更。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-344">The following code example uses <xref:System.Windows.Forms.Form.Closing> to test if the text in a <xref:System.Windows.Forms.TextBox> has changed.</span></span> <span data-ttu-id="1bd5f-345">如果是，使用者會詢問是否要將變更儲存至檔案。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-345">If it has, the user is asked whether to save the changes to a file.</span></span>  
  
 [!code-cpp[Form.Closing#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Form.Closing/CPP/form1.cpp#1)]
 [!code-csharp[Form.Closing#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Form.Closing/CS/form1.cs#1)]
 [!code-vb[Form.Closing#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Form.Closing/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.IsMdiContainer" />
        <altmember cref="M:System.Windows.Forms.Form.OnClosing(System.ComponentModel.CancelEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ControlBox">
      <MemberSignature Language="C#" Value="public bool ControlBox { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ControlBox" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.ControlBox" />
      <MemberSignature Language="VB.NET" Value="Public Property ControlBox As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ControlBox { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ControlBox : bool with get, set" Usage="System.Windows.Forms.Form.ControlBox" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1bd5f-346">Gets or sets a value indicating whether a control box is displayed in the caption bar of the form.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-346">Gets or sets a value indicating whether a control box is displayed in the caption bar of the form.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1bd5f-347">
            <see langword="true" /> 如果表單在表單右上角顯示控制項方塊否則， <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-347">
              <see langword="true" /> if the form displays a control box in the upper-right corner of the form; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="1bd5f-348">預設值為 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-348">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bd5f-349">如果<xref:System.Windows.Forms.Form.ControlBox%2A>屬性設定為`true`，標題列右上角顯示控制項方塊。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-349">If the <xref:System.Windows.Forms.Form.ControlBox%2A> property is set to `true`, the control box is displayed in the upper-right corner of the caption bar.</span></span> <span data-ttu-id="1bd5f-350">[控制] 方塊可包含最小化、 最大化，以及協助按鈕除了 [關閉] 按鈕。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-350">The control box can include minimize, maximize, and help buttons in addition to a close button.</span></span> <span data-ttu-id="1bd5f-351">針對`ControlBox`屬性，才能發生效用，您也必須設定表單的<xref:System.Windows.Forms.Form.FormBorderStyle%2A>屬性設<xref:System.Windows.Forms.FormBorderStyle.FixedSingle?displayProperty=nameWithType>， <xref:System.Windows.Forms.FormBorderStyle.Sizable?displayProperty=nameWithType>， <xref:System.Windows.Forms.FormBorderStyle.Fixed3D?displayProperty=nameWithType>，或<xref:System.Windows.Forms.FormBorderStyle.FixedDialog?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-351">For the `ControlBox` property to have any effect, you must also set the form's <xref:System.Windows.Forms.Form.FormBorderStyle%2A> property to <xref:System.Windows.Forms.FormBorderStyle.FixedSingle?displayProperty=nameWithType>, <xref:System.Windows.Forms.FormBorderStyle.Sizable?displayProperty=nameWithType>, <xref:System.Windows.Forms.FormBorderStyle.Fixed3D?displayProperty=nameWithType>, or <xref:System.Windows.Forms.FormBorderStyle.FixedDialog?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="1bd5f-352">如果您設定<xref:System.Windows.Forms.Form.ControlBox%2A>要`false`並且也設定了<xref:System.Windows.Forms.Form.Location%2A>屬性，<xref:System.Windows.Forms.Form.Size%2A>表單的屬性不會更新以反映 已隱藏的表單的非工作區。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-352">If you set <xref:System.Windows.Forms.Form.ControlBox%2A> to `false` and also set the <xref:System.Windows.Forms.Form.Location%2A> property, the <xref:System.Windows.Forms.Form.Size%2A> property of the form is not updated to reflect that the non-client area of the form has been hidden.</span></span> <span data-ttu-id="1bd5f-353">若要修正此問題，請將程式碼放改變<xref:System.Windows.Forms.Form.Location%2A>屬性中的<xref:System.Windows.Forms.Control.HandleCreated>事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-353">To fix this problem, put the code that alters the <xref:System.Windows.Forms.Form.Location%2A> property in the <xref:System.Windows.Forms.Control.HandleCreated> event handler.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1bd5f-354">當設定為`false`，則<xref:System.Windows.Forms.Form.ControlBox%2A>屬性就會顯示最大化當時建立的多重文件介面 (MDI) 子表單上沒有作用。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-354">When set to `false`, the <xref:System.Windows.Forms.Form.ControlBox%2A> property has no effect on a Multiple-document interface (MDI) child form that is displayed maximized at time of creation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1bd5f-355">下列程式碼範例會使用<xref:System.Windows.Forms.Form.ControlBox%2A>， <xref:System.Windows.Forms.Form.FormBorderStyle%2A>， <xref:System.Windows.Forms.Form.MaximizeBox%2A>， <xref:System.Windows.Forms.Form.MinimizeBox%2A>，和<xref:System.Windows.Forms.Form.StartPosition%2A>屬性，以建立並沒有任何框線或標題中的表單。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-355">The following code example uses the <xref:System.Windows.Forms.Form.ControlBox%2A>, <xref:System.Windows.Forms.Form.FormBorderStyle%2A>, <xref:System.Windows.Forms.Form.MaximizeBox%2A>, <xref:System.Windows.Forms.Form.MinimizeBox%2A>, and <xref:System.Windows.Forms.Form.StartPosition%2A> properties to create a form that does not have any border or caption box.</span></span> <span data-ttu-id="1bd5f-356">在此範例中所建立的表單無法用來建立應用程式的啟動顯示畫面中。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-356">The form created in this example could be used to create a splash screen for an application.</span></span> <span data-ttu-id="1bd5f-357">這個範例需要範例的方法是定義在表單類別，而且當 form 初始化時呼叫。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-357">The example requires that the example's method is defined in a form class and called when the form is being initialized.</span></span>  
  
 [!code-cpp[Classic Form.ControlBox Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Form.ControlBox Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Form.ControlBox Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Form.ControlBox Example/CS/source.cs#1)]
 [!code-vb[Classic Form.ControlBox Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Form.ControlBox Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.MaximizeBox" />
        <altmember cref="P:System.Windows.Forms.Form.MinimizeBox" />
        <altmember cref="P:System.Windows.Forms.Form.ShowIcon" />
        <altmember cref="P:System.Windows.Forms.Form.FormBorderStyle" />
        <altmember cref="P:System.Windows.Forms.Form.WindowState" />
      </Docs>
    </Member>
    <Member MemberName="CreateControlsInstance">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.Control.ControlCollection CreateControlsInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Forms.Control/ControlCollection CreateControlsInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.CreateControlsInstance" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateControlsInstance () As Control.ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Forms::Control::ControlCollection ^ CreateControlsInstance();" />
      <MemberSignature Language="F#" Value="override this.CreateControlsInstance : unit -&gt; System.Windows.Forms.Control.ControlCollection" Usage="form.CreateControlsInstance " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Control+ControlCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1bd5f-358">Creates a new instance of the control collection for the control.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-358">Creates a new instance of the control collection for the control.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1bd5f-359">A new instance of <see cref="T:System.Windows.Forms.Control.ControlCollection" /> assigned to the control.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-359">A new instance of <see cref="T:System.Windows.Forms.Control.ControlCollection" /> assigned to the control.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.CreateControlsInstance" />
      </Docs>
    </Member>
    <Member MemberName="CreateHandle">
      <MemberSignature Language="C#" Value="protected override void CreateHandle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CreateHandle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.CreateHandle" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CreateHandle ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CreateHandle();" />
      <MemberSignature Language="F#" Value="override this.CreateHandle : unit -&gt; unit" Usage="form.CreateHandle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1bd5f-360">Creates the handle for the form.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-360">Creates the handle for the form.</span>
          </span>
          <span data-ttu-id="1bd5f-361">If a derived class overrides this function, it must call the base implementation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-361">If a derived class overrides this function, it must call the base implementation.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="1bd5f-362">A handle for this <see cref="T:System.Windows.Forms.Form" /> has already been created.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-362">A handle for this <see cref="T:System.Windows.Forms.Form" /> has already been created.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Forms.Control.CreateHandle" />
      </Docs>
    </Member>
    <Member MemberName="CreateParams">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.CreateParams CreateParams { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.CreateParams CreateParams" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.CreateParams" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property CreateParams As CreateParams" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Windows::Forms::CreateParams ^ CreateParams { System::Windows::Forms::CreateParams ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CreateParams : System.Windows.Forms.CreateParams" Usage="System.Windows.Forms.Form.CreateParams" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.CreateParams</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1bd5f-363">Gets the required creation parameters when the control handle is created.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-363">Gets the required creation parameters when the control handle is created.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1bd5f-364">
            <see cref="T:System.Windows.Forms.CreateParams" />，包含建立控制項之控制代碼時所需的建立參數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-364">A <see cref="T:System.Windows.Forms.CreateParams" /> that contains the required creation parameters when the handle to the control is created.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.ContainerControl.CreateParams" />
      </Docs>
    </Member>
    <Member MemberName="Deactivate">
      <MemberSignature Language="C#" Value="public event EventHandler Deactivate;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Deactivate" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Form.Deactivate" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Deactivate As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Deactivate;" />
      <MemberSignature Language="F#" Value="member this.Deactivate : EventHandler " Usage="member this.Deactivate : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1bd5f-365">Occurs when the form loses focus and is no longer the active form.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-365">Occurs when the form loses focus and is no longer the active form.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bd5f-366">若要執行工作，例如從停用表單的資料來更新您的應用程式中的另一個視窗，您可以使用此事件。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-366">You can use this event to perform tasks such as updating another window in your application with data from the deactivated form.</span></span>  
  
 <span data-ttu-id="1bd5f-367">如需有關如何處理事件的詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-367">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1bd5f-368">下列程式碼範例示範如何使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-368">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="1bd5f-369">在範例中，事件處理常式會報告一次<xref:System.Windows.Forms.Form.Deactivate>事件。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-369">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Form.Deactivate> event.</span></span> <span data-ttu-id="1bd5f-370">此報表可協助您了解事件發生的時機，並可協助您偵錯。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-370">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="1bd5f-371">若要報告多個事件或事件經常發生，請考慮更換<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>具有<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>或將訊息附加到多行<xref:System.Windows.Forms.TextBox>。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-371">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="1bd5f-372">若要執行範例程式碼，將它貼到包含類型的執行個體的專案<xref:System.Windows.Forms.Form>名為`Form1`。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-372">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.Form> named `Form1`.</span></span> <span data-ttu-id="1bd5f-373">請確定 與關聯的事件處理常式<xref:System.Windows.Forms.Form.Deactivate>事件。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-373">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.Form.Deactivate> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#393](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#393)]
 [!code-vb[System.Windows.Forms.EventExamples#393](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#393)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Form.Activated" />
        <altmember cref="M:System.Windows.Forms.Form.Activate" />
        <altmember cref="M:System.Windows.Forms.Form.OnDeactivate(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="DefaultImeMode">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.ImeMode DefaultImeMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ImeMode DefaultImeMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.DefaultImeMode" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DefaultImeMode As ImeMode" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Windows::Forms::ImeMode DefaultImeMode { System::Windows::Forms::ImeMode get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultImeMode : System.Windows.Forms.ImeMode" Usage="System.Windows.Forms.Form.DefaultImeMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ImeMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1bd5f-374">Gets the default Input Method Editor (IME) mode supported by the control.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-374">Gets the default Input Method Editor (IME) mode supported by the control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1bd5f-375">其中一個 <see cref="T:System.Windows.Forms.ImeMode" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-375">One of the <see cref="T:System.Windows.Forms.ImeMode" /> values.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bd5f-376">輸入的法編輯器 (IME) 是可以讓使用者使用標準鍵盤輸入複雜字元和符號，例如日文漢字字元的程式。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-376">An input method editor (IME) is a program that allows users to enter complex characters and symbols, such as Japanese Kanji characters, by using a standard keyboard.</span></span>  
  
 <span data-ttu-id="1bd5f-377">中實作<xref:System.Windows.Forms.Form>類別，這個屬性一律傳回<xref:System.Windows.Forms.ImeMode.NoControl?displayProperty=nameWithType>值。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-377">As implemented in the <xref:System.Windows.Forms.Form> class, this property always returns the <xref:System.Windows.Forms.ImeMode.NoControl?displayProperty=nameWithType> value.</span></span> <span data-ttu-id="1bd5f-378">這個屬性的值指派給<xref:System.Windows.Forms.Control.ImeMode%2A?displayProperty=nameWithType>屬性。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-378">The value of this property is assigned to the <xref:System.Windows.Forms.Control.ImeMode%2A?displayProperty=nameWithType> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ImeMode" />
      </Docs>
    </Member>
    <Member MemberName="DefaultSize">
      <MemberSignature Language="C#" Value="protected override System.Drawing.Size DefaultSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size DefaultSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.DefaultSize" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DefaultSize As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Drawing::Size DefaultSize { System::Drawing::Size get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultSize : System.Drawing.Size" Usage="System.Windows.Forms.Form.DefaultSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1bd5f-379">Gets the default size of the control.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-379">Gets the default size of the control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1bd5f-380">控制項的預設 <see cref="T:System.Drawing.Size" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-380">The default <see cref="T:System.Drawing.Size" /> of the control.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.Control.DefaultSize" />
      </Docs>
    </Member>
    <Member MemberName="DefWndProc">
      <MemberSignature Language="C#" Value="protected override void DefWndProc (ref System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void DefWndProc(valuetype System.Windows.Forms.Message&amp; m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.DefWndProc(System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub DefWndProc (ByRef m As Message)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void DefWndProc(System::Windows::Forms::Message % m);" />
      <MemberSignature Language="F#" Value="override this.DefWndProc :  -&gt; unit" Usage="form.DefWndProc m" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m">
          <span data-ttu-id="1bd5f-381">The Windows <see cref="T:System.Windows.Forms.Message" /> to process.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-381">The Windows <see cref="T:System.Windows.Forms.Message" /> to process.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1bd5f-382">Sends the specified message to the default window procedure.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-382">Sends the specified message to the default window procedure.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.DefWndProc(System.Windows.Forms.Message@)" />
      </Docs>
    </Member>
    <Member MemberName="DesktopBounds">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle DesktopBounds { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Rectangle DesktopBounds" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.DesktopBounds" />
      <MemberSignature Language="VB.NET" Value="Public Property DesktopBounds As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Rectangle DesktopBounds { System::Drawing::Rectangle get(); void set(System::Drawing::Rectangle value); };" />
      <MemberSignature Language="F#" Value="member this.DesktopBounds : System.Drawing.Rectangle with get, set" Usage="System.Windows.Forms.Form.DesktopBounds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1bd5f-383">Gets or sets the size and location of the form on the Windows desktop.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-383">Gets or sets the size and location of the form on the Windows desktop.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1bd5f-384">
            <see cref="T:System.Drawing.Rectangle" />，代表按照桌面座標，表單在 Windows 桌面上的界限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-384">A <see cref="T:System.Drawing.Rectangle" /> that represents the bounds of the form on the Windows desktop using desktop coordinates.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bd5f-385">桌面座標根據畫面中，會排除在工作列的工作區域。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-385">Desktop coordinates are based on the working area of the screen, which excludes the taskbar.</span></span> <span data-ttu-id="1bd5f-386">在桌面的座標系統是以像素為基礎。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-386">The coordinate system of the desktop is pixel-based.</span></span> <span data-ttu-id="1bd5f-387">如果您的應用程式在多個監視器系統上執行，在表單的座標為合併桌面的座標。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-387">If your application is running on a multiple monitor system, the coordinates of the form are the coordinates for the combined desktop.</span></span>  
  
 <span data-ttu-id="1bd5f-388">您可以使用這個屬性的大小和位置相對於其他表單或應用程式的表單在 Windows 桌面上。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-388">You can use this property to size and position a form relative to other forms or applications on the Windows desktop.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1bd5f-389">下列程式碼範例會設定的大小和表單的位置，以便表單為左框線的頂端的桌面的桌面到 50 個像素定位 50 像素。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-389">The following code example sets the size and position of a form so that the form is positioned 50 pixels from the left border of the desktop and 50 pixels from the top of the desktop.</span></span> <span data-ttu-id="1bd5f-390">這個範例要求，方法在表單類別內定義。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-390">This example requires that the method is defined within a form class.</span></span>  
  
 [!code-cpp[Classic Form.DesktopBounds Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Form.DesktopBounds Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Form.DesktopBounds Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Form.DesktopBounds Example/CS/source.cs#1)]
 [!code-vb[Classic Form.DesktopBounds Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Form.DesktopBounds Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.DesktopLocation" />
      </Docs>
    </Member>
    <Member MemberName="DesktopLocation">
      <MemberSignature Language="C#" Value="public System.Drawing.Point DesktopLocation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Point DesktopLocation" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.DesktopLocation" />
      <MemberSignature Language="VB.NET" Value="Public Property DesktopLocation As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Point DesktopLocation { System::Drawing::Point get(); void set(System::Drawing::Point value); };" />
      <MemberSignature Language="F#" Value="member this.DesktopLocation : System.Drawing.Point with get, set" Usage="System.Windows.Forms.Form.DesktopLocation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1bd5f-391">Gets or sets the location of the form on the Windows desktop.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-391">Gets or sets the location of the form on the Windows desktop.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1bd5f-392">
            <see cref="T:System.Drawing.Point" />，代表桌面上表單的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-392">A <see cref="T:System.Drawing.Point" /> that represents the location of the form on the desktop.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bd5f-393">桌面座標根據畫面中，會排除在工作列的工作區域。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-393">Desktop coordinates are based on the working area of the screen, which excludes the taskbar.</span></span> <span data-ttu-id="1bd5f-394">在桌面的座標系統為基礎的像素。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-394">The coordinate system of the desktop is pixel based.</span></span> <span data-ttu-id="1bd5f-395">如果您的應用程式正在執行的多重監視器的系統上，表單的合併桌面的座標。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-395">If your application is running on a multimonitor system, the coordinates of the form are the coordinates for the combined desktop.</span></span>  
  
 <span data-ttu-id="1bd5f-396">若要在 Windows 桌面上放置您的表單，相對於其他表單和應用程式，您可以使用這個屬性。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-396">You can use this property to position your form relative to other forms and applications on the Windows desktop.</span></span>  
  
 <span data-ttu-id="1bd5f-397">如果您呼叫<xref:System.Windows.Forms.Form.SetDesktopLocation%2A>方法之前呼叫<xref:System.Windows.Forms.Form.Show%2A>方法中，您的表單會位於其預設位置，是由作業系統決定。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-397">If you call the <xref:System.Windows.Forms.Form.SetDesktopLocation%2A> method before calling the <xref:System.Windows.Forms.Form.Show%2A> method, your form will be positioned at its default location, which is determined by the operating system.</span></span> <span data-ttu-id="1bd5f-398">如需有關視窗定位的詳細資訊，請參閱 MSDN library 中的 「 視窗功能 > 文件的 「 視窗大小和位置 」 一節http://msdn.microsoft.com/library。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-398">For more information about window positioning, see the "Window Size and Position" section of the "Window Features" document in the MSDN library at http://msdn.microsoft.com/library.</span></span>  
  
 <span data-ttu-id="1bd5f-399">如果您呼叫<xref:System.Windows.Forms.Form.SetDesktopLocation%2A>之後呼叫<xref:System.Windows.Forms.Form.Show%2A>，表單將會位於您指定的位置。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-399">If you call <xref:System.Windows.Forms.Form.SetDesktopLocation%2A> after calling <xref:System.Windows.Forms.Form.Show%2A>, your form will be positioned at the location you specified.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1bd5f-400">下列程式碼範例會設定表單的位置，以便表單是從左框線的頂端的桌面的桌面和 100 像素定位 100 像素。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-400">The following code example sets the position of a form so that the form is positioned 100 pixels from the left border of the desktop and 100 pixels from the top of the desktop.</span></span> <span data-ttu-id="1bd5f-401">這個範例需要在表單類別內的方法，已定義。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-401">This example requires that method has been defined within a form class.</span></span>  
  
 [!code-cpp[Classic Form.DesktopLocation Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Form.DesktopLocation Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Form.DesktopLocation Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Form.DesktopLocation Example/CS/source.cs#1)]
 [!code-vb[Classic Form.DesktopLocation Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Form.DesktopLocation Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.DesktopBounds" />
      </Docs>
    </Member>
    <Member MemberName="DialogResult">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DialogResult DialogResult { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DialogResult DialogResult" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.DialogResult" />
      <MemberSignature Language="VB.NET" Value="Public Property DialogResult As DialogResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DialogResult DialogResult { System::Windows::Forms::DialogResult get(); void set(System::Windows::Forms::DialogResult value); };" />
      <MemberSignature Language="F#" Value="member this.DialogResult : System.Windows.Forms.DialogResult with get, set" Usage="System.Windows.Forms.Form.DialogResult" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DialogResult</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1bd5f-402">Gets or sets the dialog result for the form.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-402">Gets or sets the dialog result for the form.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1bd5f-403">
            <see cref="T:System.Windows.Forms.DialogResult" />，代表表單在當做對話方塊使用時的結果。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-403">A <see cref="T:System.Windows.Forms.DialogResult" /> that represents the result of the form when used as a dialog box.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bd5f-404">表單的對話方塊結果會顯示為強制回應對話方塊時，會將表單中傳回的值。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-404">The dialog result of a form is the value that is returned from the form when it is displayed as a modal dialog box.</span></span> <span data-ttu-id="1bd5f-405">如果表單會顯示為對話方塊中，設定此屬性的值與<xref:System.Windows.Forms.DialogResult>列舉型別設定表單的對話方塊結果的值、 隱藏強制回應對話方塊中，並將控制權傳回給呼叫的 form。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-405">If the form is displayed as a dialog box, setting this property with a value from the <xref:System.Windows.Forms.DialogResult> enumeration sets the value of the dialog box result for the form, hides the modal dialog box, and returns control to the calling form.</span></span> <span data-ttu-id="1bd5f-406">此屬性通常會設定<xref:System.Windows.Forms.Button.DialogResult%2A>屬性<xref:System.Windows.Forms.Button>表單上的控制項。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-406">This property is typically set by the <xref:System.Windows.Forms.Button.DialogResult%2A> property of a <xref:System.Windows.Forms.Button> control on the form.</span></span> <span data-ttu-id="1bd5f-407">當使用者按一下<xref:System.Windows.Forms.Button>控制項，指派給的值<xref:System.Windows.Forms.Button.DialogResult%2A>屬性<xref:System.Windows.Forms.Button>指派給<xref:System.Windows.Forms.Form.DialogResult%2A>表單的屬性。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-407">When the user clicks the <xref:System.Windows.Forms.Button> control, the value assigned to the <xref:System.Windows.Forms.Button.DialogResult%2A> property of the <xref:System.Windows.Forms.Button> is assigned to the <xref:System.Windows.Forms.Form.DialogResult%2A> property of the form.</span></span>  
  
 <span data-ttu-id="1bd5f-408">當表單顯示為強制回應對話方塊時，按一下**關閉**按鈕 （具有表單右上角的 X 按鈕） 將會隱藏表單並<xref:System.Windows.Forms.Form.DialogResult%2A>屬性設為`DialogResult.Cancel`。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-408">When a form is displayed as a modal dialog box, clicking the **Close** button (the button with an X in the top-right corner of the form) causes the form to be hidden and the <xref:System.Windows.Forms.Form.DialogResult%2A> property to be set to `DialogResult.Cancel`.</span></span> <span data-ttu-id="1bd5f-409"><xref:System.Windows.Forms.Form.Close%2A>不會自動呼叫方法時使用者按下**關閉**按鈕的對話方塊中設定的值或<xref:System.Windows.Forms.Form.DialogResult%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-409">The <xref:System.Windows.Forms.Form.Close%2A> method is not automatically called when the user clicks the **Close** button of a dialog box or sets the value of the <xref:System.Windows.Forms.Form.DialogResult%2A> property.</span></span> <span data-ttu-id="1bd5f-410">相反地，此表單會隱藏，並可再次顯示，而不需要建立對話方塊中的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-410">Instead, the form is hidden and can be shown again without creating a new instance of the dialog box.</span></span> <span data-ttu-id="1bd5f-411">由於這個行為，您必須呼叫<xref:System.Windows.Forms.Control.Dispose%2A>表單在表單不再需要由您的應用程式時的方法。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-411">Because of this behavior, you must call the <xref:System.Windows.Forms.Control.Dispose%2A> method of the form when the form is no longer needed by your application.</span></span>  
  
 <span data-ttu-id="1bd5f-412">您可以使用這個屬性來決定對話方塊關閉才能正確地處理在對話方塊中執行的動作的方式。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-412">You can use this property to determine how a dialog box is closed in order to properly process the actions performed in the dialog box.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1bd5f-413">您可以覆寫的值指派給<xref:System.Windows.Forms.Form.DialogResult%2A>屬性，當使用者按一下 **關閉**藉由設定按鈕<xref:System.Windows.Forms.Form.DialogResult%2A>中的事件處理常式屬性<xref:System.Windows.Forms.Form.Closing>形式的事件。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-413">You can override the value assigned to the <xref:System.Windows.Forms.Form.DialogResult%2A> property when the user clicks the **Close** button by setting the <xref:System.Windows.Forms.Form.DialogResult%2A> property in an event handler for the <xref:System.Windows.Forms.Form.Closing> event of the form.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1bd5f-414">如果<xref:System.Windows.Forms.Form>會顯示非強制回應視窗中，所傳回的值為<xref:System.Windows.Forms.Form.DialogResult%2A>屬性可能不會傳回值，指派給表單，因為當關閉表單時，會自動釋放表單的資源。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-414">If a <xref:System.Windows.Forms.Form> is displayed as a modeless window, the value returned by the <xref:System.Windows.Forms.Form.DialogResult%2A> property might not return a value assigned to the form because the form's resources are automatically released when the form is closed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1bd5f-415">下列程式碼範例會顯示為對話方塊的表單，並顯示訊息方塊，指出是否在表單的 [確定] 或 [取消] 按鈕已按下藉由參考<xref:System.Windows.Forms.Form.DialogResult%2A>表單的屬性。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-415">The following code example displays a form as a dialog box and displays a message box indicating whether the OK or Cancel button of the form was clicked by referencing the <xref:System.Windows.Forms.Form.DialogResult%2A> property of the form.</span></span>  
  
 [!code-cpp[Classic Form.DialogResult Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Form.DialogResult Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Form.DialogResult Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Form.DialogResult Example/CS/source.cs#1)]
 [!code-vb[Classic Form.DialogResult Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Form.DialogResult Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="1bd5f-416">The value specified is outside the range of valid values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-416">The value specified is outside the range of valid values.</span>
          </span>
        </exception>
        <altmember cref="T:System.Windows.Forms.DialogResult" />
        <altmember cref="P:System.Windows.Forms.Button.DialogResult" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="form.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="1bd5f-417">
            <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-417">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1bd5f-418">Disposes of the resources (other than memory) used by the <see cref="T:System.Windows.Forms.Form" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-418">Disposes of the resources (other than memory) used by the <see cref="T:System.Windows.Forms.Form" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bd5f-419">這個方法會呼叫公用`Dispose`方法和<xref:System.Object.Finalize%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-419">This method is called by the public `Dispose` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="1bd5f-420">`Dispose` 叫用受保護`Dispose(Boolean)`方法`disposing`參數設為`true`。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-420">`Dispose` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="1bd5f-421"><xref:System.Object.Finalize%2A> 叫用`Dispose`具有`disposing`設定為`false`。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-421"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="1bd5f-422">`disposing` 參數為 `true` 時，這個方法會釋放 <xref:System.Windows.Forms.Form> 參考的任何 Managed 物件所掌握的資源。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-422">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Windows.Forms.Form> references.</span></span> <span data-ttu-id="1bd5f-423">這個方法會叫用每個參考物件的 `Dispose` 方法。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-423">This method invokes the `Dispose` method of each referenced object.</span></span>  
  
 <span data-ttu-id="1bd5f-424"><xref:System.Windows.Forms.Form.Dispose%2A> 如果表單會顯示使用會自動呼叫<xref:System.Windows.Forms.Form.Show%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-424"><xref:System.Windows.Forms.Form.Dispose%2A> will be called automatically if the form is shown using the <xref:System.Windows.Forms.Form.Show%2A> method.</span></span> <span data-ttu-id="1bd5f-425">如果另一個方法，例如<xref:System.Windows.Forms.Form.ShowDialog%2A>使用時，或完全不會顯示表單，您必須呼叫<xref:System.Windows.Forms.Form.Dispose%2A>自行在您的應用程式。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-425">If another method such as <xref:System.Windows.Forms.Form.ShowDialog%2A> is used, or the form is never shown at all, you must call <xref:System.Windows.Forms.Form.Dispose%2A> yourself within your application.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="1bd5f-426">
            <para>
              <see langword="Dispose" /> 可以多次呼叫的其他物件。覆寫 <see langword="Dispose(Boolean)" /> 時，請小心不要參考到先前已在對 <see langword="Dispose" /> 的早期呼叫中被處置 (Dispose) 的物件。如需有關如何實作<see langword="Dispose(Boolean)" />，請參閱 [實作 Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md)。如需詳細資訊<see langword="Dispose" />並<see cref="M:System.Object.Finalize" />，請參閱 [清除設定未受管理的 Resources](~/docs/standard/garbage-collection/unmanaged.md) 和 [覆寫 Finalize 方法] (http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-426">
              <para>
                <see langword="Dispose" /> can be called multiple times by other objects. When overriding <see langword="Dispose(Boolean)" />, be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />. For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).  For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="DpiChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DpiChangedEventHandler DpiChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DpiChangedEventHandler DpiChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Form.DpiChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DpiChanged As DpiChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DpiChangedEventHandler ^ DpiChanged;" />
      <MemberSignature Language="F#" Value="member this.DpiChanged : System.Windows.Forms.DpiChangedEventHandler " Usage="member this.DpiChanged : System.Windows.Forms.DpiChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DpiChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1bd5f-427">Occurs when the DPI setting changes on the display device where the form is currently displayed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-427">Occurs when the DPI setting changes on the display device where the form is currently displayed.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FormBorderStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.FormBorderStyle FormBorderStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.FormBorderStyle FormBorderStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.FormBorderStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property FormBorderStyle As FormBorderStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::FormBorderStyle FormBorderStyle { System::Windows::Forms::FormBorderStyle get(); void set(System::Windows::Forms::FormBorderStyle value); };" />
      <MemberSignature Language="F#" Value="member this.FormBorderStyle : System.Windows.Forms.FormBorderStyle with get, set" Usage="System.Windows.Forms.Form.FormBorderStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-504)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.FormBorderStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1bd5f-428">Gets or sets the border style of the form.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-428">Gets or sets the border style of the form.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1bd5f-429">
            <see cref="T:System.Windows.Forms.FormBorderStyle" />，代表顯示於表單的框線樣式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-429">A <see cref="T:System.Windows.Forms.FormBorderStyle" /> that represents the style of border to display for the form.</span>
          </span>
          <span data-ttu-id="1bd5f-430">預設值為 <see langword="FormBorderStyle.Sizable" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-430">The default is <see langword="FormBorderStyle.Sizable" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bd5f-431">表單的框線樣式會決定表單的外部邊緣的顯示方式。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-431">The border style of the form determines how the outer edge of the form appears.</span></span> <span data-ttu-id="1bd5f-432">除了變更表單的框線顯示特定框線樣式可以防止表單在調整過大小。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-432">In addition to changing the border display for a form, certain border styles prevent the form from being sized.</span></span> <span data-ttu-id="1bd5f-433">比方說，`FormBorderStyle.FixedDialog`框線樣式的對話方塊中變更表單的框線，並防止表單正在調整大小。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-433">For example, the `FormBorderStyle.FixedDialog` border style changes the border of the form to that of a dialog box and prevents the form from being resized.</span></span> <span data-ttu-id="1bd5f-434">大小或表單的標題列區段的可用性，也可能影響的框線樣式。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-434">The border style can also affect the size or availability of the caption bar section of a form.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1bd5f-435">與<xref:System.Windows.Forms.FormBorderStyle.Sizable>樣式，就無法調整大小視窗下方某些最小的值，即使您已設定<xref:System.Windows.Forms.Form.ControlBox%2A>要`false`，並指派的零長度字串<xref:System.Windows.Forms.Form.Text%2A>。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-435">With the <xref:System.Windows.Forms.FormBorderStyle.Sizable> style, it is impossible to resize the window below a certain minimum value, even if you have set <xref:System.Windows.Forms.Form.ControlBox%2A> to `false` and assigned a zero-length string to <xref:System.Windows.Forms.Form.Text%2A>.</span></span> <span data-ttu-id="1bd5f-436">解決這個問題的工作，請考慮使用<xref:System.Windows.Forms.FormBorderStyle.SizableToolWindow>改為樣式。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-436">Consider working around this by using the <xref:System.Windows.Forms.FormBorderStyle.SizableToolWindow> style instead.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1bd5f-437">下列程式碼範例會建立的新執行個體<xref:System.Windows.Forms.Form>，並呼叫<xref:System.Windows.Forms.Form.ShowDialog%2A>表單顯示為對話方塊中的方法。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-437">The following code example creates a new instance of a <xref:System.Windows.Forms.Form> and calls the <xref:System.Windows.Forms.Form.ShowDialog%2A> method to display the form as a dialog box.</span></span> <span data-ttu-id="1bd5f-438">範例會設定<xref:System.Windows.Forms.Form.FormBorderStyle%2A>， <xref:System.Windows.Forms.Form.AcceptButton%2A>， <xref:System.Windows.Forms.Form.CancelButton%2A>， <xref:System.Windows.Forms.Form.MinimizeBox%2A>， <xref:System.Windows.Forms.Form.MaximizeBox%2A>，和<xref:System.Windows.Forms.Form.StartPosition%2A>內容 對話方塊中變更的外觀和功能的形式。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-438">The example sets the <xref:System.Windows.Forms.Form.FormBorderStyle%2A>, <xref:System.Windows.Forms.Form.AcceptButton%2A>, <xref:System.Windows.Forms.Form.CancelButton%2A>, <xref:System.Windows.Forms.Form.MinimizeBox%2A>, <xref:System.Windows.Forms.Form.MaximizeBox%2A>, and <xref:System.Windows.Forms.Form.StartPosition%2A> properties to change the appearance and functionality of the form to a dialog box.</span></span> <span data-ttu-id="1bd5f-439">此範例也會使用<xref:System.Windows.Forms.Form.ControlCollection.Add%2A>表單的方法<xref:System.Windows.Forms.Control.Controls%2A>要加入兩個集合<xref:System.Windows.Forms.Button>控制項。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-439">The example also uses the <xref:System.Windows.Forms.Form.ControlCollection.Add%2A> method of the form's <xref:System.Windows.Forms.Control.Controls%2A> collection to add two <xref:System.Windows.Forms.Button> controls.</span></span> <span data-ttu-id="1bd5f-440">此範例會使用<xref:System.Windows.Forms.Form.HelpButton%2A>屬性 對話方塊的標題列中顯示 說明 按鈕。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-440">The example uses the <xref:System.Windows.Forms.Form.HelpButton%2A> property to display a help button in the caption bar of the dialog box.</span></span>  
  
 [!code-cpp[Classic Form.AcceptButton Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Form.AcceptButton Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Form.AcceptButton Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Form.AcceptButton Example/CS/source.cs#1)]
 [!code-vb[Classic Form.AcceptButton Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Form.AcceptButton Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="1bd5f-441">The value specified is outside the range of valid values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-441">The value specified is outside the range of valid values.</span>
          </span>
        </exception>
        <altmember cref="T:System.Windows.Forms.FormBorderStyle" />
      </Docs>
    </Member>
    <Member MemberName="FormClosed">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.FormClosedEventHandler FormClosed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.FormClosedEventHandler FormClosed" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Form.FormClosed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event FormClosed As FormClosedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::FormClosedEventHandler ^ FormClosed;" />
      <MemberSignature Language="F#" Value="member this.FormClosed : System.Windows.Forms.FormClosedEventHandler " Usage="member this.FormClosed : System.Windows.Forms.FormClosedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.FormClosedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1bd5f-442">Occurs after the form is closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-442">Occurs after the form is closed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bd5f-443"><xref:System.Windows.Forms.Form.FormClosed>使用者，或者藉由關閉表單之後，就會發生事件<xref:System.Windows.Forms.Form.Close%2A>方法或<xref:System.Windows.Forms.Application.Exit%2A>方法<xref:System.Windows.Forms.Application>類別。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-443">The <xref:System.Windows.Forms.Form.FormClosed> event occurs after the form has been closed by the user or by the <xref:System.Windows.Forms.Form.Close%2A> method or the <xref:System.Windows.Forms.Application.Exit%2A> method of the <xref:System.Windows.Forms.Application> class.</span></span> <span data-ttu-id="1bd5f-444">若要防止關閉表單，處理<xref:System.Windows.Forms.Form.FormClosing>事件和 set<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>屬性<xref:System.ComponentModel.CancelEventArgs>傳遞到您的事件處理常式，以`true`。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-444">To prevent a form from closing, handle the <xref:System.Windows.Forms.Form.FormClosing> event and set the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.ComponentModel.CancelEventArgs> passed to your event handler to `true`.</span></span>  
  
 <span data-ttu-id="1bd5f-445">您可以使用這個事件，來執行工作，例如釋放表單所使用的資源和儲存在表單中輸入資訊或更新它的父表單。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-445">You can use this event to perform tasks such as freeing resources used by the form and to save information entered in the form or to update its parent form.</span></span>  
  
 <span data-ttu-id="1bd5f-446">如果格式為多重文件介面 (MDI) 父表單時， <xref:System.Windows.Forms.Form.FormClosing> MDI 父表單之前，會引發事件的所有的 MDI 子表單<xref:System.Windows.Forms.Form.FormClosing>就會引發事件。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-446">If the form is a multiple-document interface (MDI) parent form, the <xref:System.Windows.Forms.Form.FormClosing> events of all MDI child forms are raised before the MDI parent form's <xref:System.Windows.Forms.Form.FormClosing> event is raised.</span></span> <span data-ttu-id="1bd5f-447">同樣地，<xref:System.Windows.Forms.Form.FormClosed>之前，會引發事件的所有的 MDI 子表單<xref:System.Windows.Forms.Form.FormClosed>引發 MDI 父表單的事件。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-447">Likewise, the <xref:System.Windows.Forms.Form.FormClosed> events of all MDI child forms are raised before the <xref:System.Windows.Forms.Form.FormClosed> event of the MDI parent form is raised.</span></span>  
  
 <span data-ttu-id="1bd5f-448">如需有關如何處理事件的詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-448">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1bd5f-449">下列程式碼範例示範如何使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-449">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="1bd5f-450">在範例中，事件處理常式會報告一次<xref:System.Windows.Forms.Form.FormClosed>事件。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-450">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Form.FormClosed> event.</span></span> <span data-ttu-id="1bd5f-451">此報表可協助您了解事件發生的時機，並可協助您偵錯。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-451">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="1bd5f-452">若要報告多個事件或事件經常發生，請考慮更換<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>具有<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>或將訊息附加到多行<xref:System.Windows.Forms.TextBox>。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-452">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="1bd5f-453">若要執行範例程式碼，將它貼到包含類型的執行個體的專案<xref:System.Windows.Forms.Form>名為`Form1`。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-453">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.Form> named `Form1`.</span></span> <span data-ttu-id="1bd5f-454">請確定 與關聯的事件處理常式<xref:System.Windows.Forms.Form.FormClosed>事件。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-454">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.Form.FormClosed> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#395](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#395)]
 [!code-vb[System.Windows.Forms.EventExamples#395](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#395)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.IsMdiContainer" />
        <altmember cref="M:System.Windows.Forms.Form.OnFormClosed(System.Windows.Forms.FormClosedEventArgs)" />
        <altmember cref="M:System.Windows.Forms.Form.Close" />
        <altmember cref="M:System.Windows.Forms.Application.Exit" />
        <altmember cref="M:System.Windows.Forms.Control.Hide" />
        <altmember cref="E:System.Windows.Forms.Form.FormClosing" />
        <altmember cref="E:System.Windows.Forms.Form.Load" />
        <altmember cref="E:System.Windows.Forms.Form.Shown" />
        <altmember cref="T:System.Windows.Forms.CloseReason" />
      </Docs>
    </Member>
    <Member MemberName="FormClosing">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.FormClosingEventHandler FormClosing;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.FormClosingEventHandler FormClosing" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Form.FormClosing" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event FormClosing As FormClosingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::FormClosingEventHandler ^ FormClosing;" />
      <MemberSignature Language="F#" Value="member this.FormClosing : System.Windows.Forms.FormClosingEventHandler " Usage="member this.FormClosing : System.Windows.Forms.FormClosingEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.FormClosingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1bd5f-455">Occurs before the form is closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-455">Occurs before the form is closed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bd5f-456"><xref:System.Windows.Forms.Form.FormClosing>表單關閉事件會發生。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-456">The <xref:System.Windows.Forms.Form.FormClosing> event occurs as the form is being closed.</span></span> <span data-ttu-id="1bd5f-457">當關閉表單時，它已處置，釋出與表單相關聯的所有資源。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-457">When a form is closed, it is disposed, releasing all resources associated with the form.</span></span> <span data-ttu-id="1bd5f-458">如果您取消此事件時，表單將保持開啟。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-458">If you cancel this event, the form remains opened.</span></span> <span data-ttu-id="1bd5f-459">若要取消的表單關閉，請設定<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>的屬性<xref:System.Windows.Forms.FormClosingEventArgs>傳遞到您的事件處理常式，以`true`。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-459">To cancel the closure of a form, set the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.Windows.Forms.FormClosingEventArgs> passed to your event handler to `true`.</span></span>  
  
 <span data-ttu-id="1bd5f-460">當表單顯示為強制回應對話方塊時，按一下**關閉**按鈕 （具有表單右上角的 X 按鈕） 將會隱藏表單並<xref:System.Windows.Forms.Form.DialogResult%2A>屬性設為`DialogResult.Cancel`。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-460">When a form is displayed as a modal dialog box, clicking the **Close** button (the button with an X at the upper-right corner of the form) causes the form to be hidden and the <xref:System.Windows.Forms.Form.DialogResult%2A> property to be set to `DialogResult.Cancel`.</span></span> <span data-ttu-id="1bd5f-461">您可以覆寫的值指派給<xref:System.Windows.Forms.Form.DialogResult%2A>屬性，當使用者按一下 **關閉**藉由設定按鈕<xref:System.Windows.Forms.Form.DialogResult%2A>中的事件處理常式屬性<xref:System.Windows.Forms.Form.FormClosing>形式的事件。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-461">You can override the value assigned to the <xref:System.Windows.Forms.Form.DialogResult%2A> property when the user clicks the **Close** button by setting the <xref:System.Windows.Forms.Form.DialogResult%2A> property in an event handler for the <xref:System.Windows.Forms.Form.FormClosing> event of the form.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1bd5f-462">當<xref:System.Windows.Forms.Form.Close%2A>上呼叫方法<xref:System.Windows.Forms.Form>顯示為非強制回應視窗，您不能呼叫<xref:System.Windows.Forms.Control.Show%2A>方法來顯示表單，因為已發行的形式的資源。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-462">When the <xref:System.Windows.Forms.Form.Close%2A> method is called on a <xref:System.Windows.Forms.Form> displayed as a modeless window, you cannot call the <xref:System.Windows.Forms.Control.Show%2A> method to make the form visible, because the form's resources have already been released.</span></span> <span data-ttu-id="1bd5f-463">若要隱藏表單，然後使其可見的使用<xref:System.Windows.Forms.Control.Hide%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-463">To hide a form and then make it visible, use the <xref:System.Windows.Forms.Control.Hide%2A> method.</span></span>  
  
 <span data-ttu-id="1bd5f-464">如果格式為多重文件介面 (MDI) 父表單時， <xref:System.Windows.Forms.Form.FormClosing> MDI 父表單之前，會引發事件的所有的 MDI 子表單<xref:System.Windows.Forms.Form.FormClosing>就會引發事件。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-464">If the form is a multiple-document interface (MDI) parent form, the <xref:System.Windows.Forms.Form.FormClosing> events of all MDI child forms are raised before the MDI parent form's <xref:System.Windows.Forms.Form.FormClosing> event is raised.</span></span> <span data-ttu-id="1bd5f-465">同樣地，<xref:System.Windows.Forms.Form.FormClosed>之前，會引發事件的所有的 MDI 子表單<xref:System.Windows.Forms.Form.FormClosed>引發 MDI 父表單的事件。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-465">Likewise, the <xref:System.Windows.Forms.Form.FormClosed> events of all MDI child forms are raised before the <xref:System.Windows.Forms.Form.FormClosed> event of the MDI parent form is raised.</span></span> <span data-ttu-id="1bd5f-466">正在取消<xref:System.Windows.Forms.Form.FormClosing>事件的 MDI 子表單不會防止<xref:System.Windows.Forms.Form.FormClosing>MDI 父表單，引發的事件。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-466">Canceling the <xref:System.Windows.Forms.Form.FormClosing> event of an MDI child form does not prevent the <xref:System.Windows.Forms.Form.FormClosing> event of the MDI parent form from being raised.</span></span> <span data-ttu-id="1bd5f-467">不過，取消事件將會設為`true`<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>屬性<xref:System.Windows.Forms.FormClosingEventArgs>做為參數傳遞給父表單的類別。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-467">However, canceling the event will set to `true` the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.Windows.Forms.FormClosingEventArgs> class that is passed as a parameter to the parent form.</span></span> <span data-ttu-id="1bd5f-468">若要強制所有 MDI 父和子表單關閉時，將<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>屬性設`false`於 MDI 父表單。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-468">To force all MDI parent and child forms to close, set the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property to `false` in the MDI parent form.</span></span>  
  
 <span data-ttu-id="1bd5f-469">如需有關如何處理事件的詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-469">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1bd5f-470">下列程式碼範例示範如何使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-470">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="1bd5f-471">在範例中，事件處理常式會報告一次<xref:System.Windows.Forms.Form.FormClosing>事件。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-471">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Form.FormClosing> event.</span></span> <span data-ttu-id="1bd5f-472">此報表可協助您了解事件發生的時機，並可協助您偵錯。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-472">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="1bd5f-473">若要報告多個事件或事件經常發生，請考慮更換<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>具有<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>或將訊息附加到多行<xref:System.Windows.Forms.TextBox>。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-473">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="1bd5f-474">若要執行範例程式碼，將它貼到包含類型的執行個體的專案<xref:System.Windows.Forms.Form>名為`Form1`。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-474">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.Form> named `Form1`.</span></span> <span data-ttu-id="1bd5f-475">請確定 與關聯的事件處理常式<xref:System.Windows.Forms.Form.FormClosing>事件。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-475">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.Form.FormClosing> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#394](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#394)]
 [!code-vb[System.Windows.Forms.EventExamples#394](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#394)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.IsMdiContainer" />
        <altmember cref="M:System.Windows.Forms.Form.Close" />
        <altmember cref="M:System.Windows.Forms.Control.Hide" />
        <altmember cref="M:System.Windows.Forms.Form.OnFormClosing(System.Windows.Forms.FormClosingEventArgs)" />
        <altmember cref="E:System.Windows.Forms.Form.FormClosed" />
        <altmember cref="E:System.Windows.Forms.Form.Load" />
        <altmember cref="E:System.Windows.Forms.Form.Shown" />
        <altmember cref="T:System.Windows.Forms.CloseReason" />
      </Docs>
    </Member>
    <Member MemberName="GetAutoScaleSize">
      <MemberSignature Language="C#" Value="public static System.Drawing.SizeF GetAutoScaleSize (System.Drawing.Font font);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.SizeF GetAutoScaleSize(class System.Drawing.Font font) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.GetAutoScaleSize(System.Drawing.Font)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::SizeF GetAutoScaleSize(System::Drawing::Font ^ font);" />
      <MemberSignature Language="F#" Value="static member GetAutoScaleSize : System.Drawing.Font -&gt; System.Drawing.SizeF" Usage="System.Windows.Forms.Form.GetAutoScaleSize font" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This method has been deprecated. Use the AutoScaleDimensions property instead.  http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.SizeF</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="font" Type="System.Drawing.Font" />
      </Parameters>
      <Docs>
        <param name="font">
          <span data-ttu-id="1bd5f-476">A <see cref="T:System.Drawing.Font" /> representing the font to determine the autoscaled base size of the form.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-476">A <see cref="T:System.Drawing.Font" /> representing the font to determine the autoscaled base size of the form.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1bd5f-477">Gets the size when autoscaling the form based on a specified font.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-477">Gets the size when autoscaling the form based on a specified font.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1bd5f-478">A <see cref="T:System.Drawing.SizeF" /> representing the autoscaled size of the form.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-478">A <see cref="T:System.Drawing.SizeF" /> representing the autoscaled size of the form.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="1bd5f-479"><xref:System.Windows.Forms.Form.GetAutoScaleSize%2A>方法是過時的.net Framework 2.0 版。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-479">The <xref:System.Windows.Forms.Form.GetAutoScaleSize%2A> method is obsolete in.NET Framework version 2.0.</span></span> <span data-ttu-id="1bd5f-480">這個成員已保留回溯相容性。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-480">This member has been retained for backward compatibility.</span></span> <span data-ttu-id="1bd5f-481">如需有關自動調整的詳細資訊，請參閱 <<c0> [ 在 Windows Form 中的自動調整](~/docs/framework/winforms/automatic-scaling-in-windows-forms.md)。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-481">For more information about automatic scaling, see [Automatic Scaling in Windows Forms](~/docs/framework/winforms/automatic-scaling-in-windows-forms.md).</span></span>  
  
 <span data-ttu-id="1bd5f-482">您可以使用這個方法來判斷表單之前套用至表單的字型會以特定字型的自動調整大小。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-482">You can use this method to determine the size a form would autoscale to for a specific font before applying the font to the form.</span></span> <span data-ttu-id="1bd5f-483">如果您想要決定大小表單是自動縮放，以根據目前指派給表單的字型，請使用<xref:System.Windows.Forms.Form.AutoScaleBaseSize%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-483">If you want to determine the size a form is autoscaled to based on the font currently assigned to the form, use the <xref:System.Windows.Forms.Form.AutoScaleBaseSize%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.AutoScaleBaseSize" />
      </Docs>
    </Member>
    <Member MemberName="GetScaledBounds">
      <MemberSignature Language="C#" Value="protected override System.Drawing.Rectangle GetScaledBounds (System.Drawing.Rectangle bounds, System.Drawing.SizeF factor, System.Windows.Forms.BoundsSpecified specified);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Drawing.Rectangle GetScaledBounds(valuetype System.Drawing.Rectangle bounds, valuetype System.Drawing.SizeF factor, valuetype System.Windows.Forms.BoundsSpecified specified) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.GetScaledBounds(System.Drawing.Rectangle,System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetScaledBounds (bounds As Rectangle, factor As SizeF, specified As BoundsSpecified) As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Drawing::Rectangle GetScaledBounds(System::Drawing::Rectangle bounds, System::Drawing::SizeF factor, System::Windows::Forms::BoundsSpecified specified);" />
      <MemberSignature Language="F#" Value="override this.GetScaledBounds : System.Drawing.Rectangle * System.Drawing.SizeF * System.Windows.Forms.BoundsSpecified -&gt; System.Drawing.Rectangle" Usage="form.GetScaledBounds (bounds, factor, specified)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="factor" Type="System.Drawing.SizeF" />
        <Parameter Name="specified" Type="System.Windows.Forms.BoundsSpecified" />
      </Parameters>
      <Docs>
        <param name="bounds">
          <span data-ttu-id="1bd5f-484">A <see cref="T:System.Drawing.Rectangle" /> that specifies the area for which to retrieve the display bounds.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-484">A <see cref="T:System.Drawing.Rectangle" /> that specifies the area for which to retrieve the display bounds.</span>
          </span>
        </param>
        <param name="factor">
          <span data-ttu-id="1bd5f-485">The height and width of the control's bounds.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-485">The height and width of the control's bounds.</span>
          </span>
        </param>
        <param name="specified">
          <span data-ttu-id="1bd5f-486">One of the values of <see cref="T:System.Windows.Forms.BoundsSpecified" /> that specifies the bounds of the control to use when defining its size and position.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-486">One of the values of <see cref="T:System.Windows.Forms.BoundsSpecified" /> that specifies the bounds of the control to use when defining its size and position.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1bd5f-487">Retrieves the bounds within which the control is scaled.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-487">Retrieves the bounds within which the control is scaled.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1bd5f-488">A <see cref="T:System.Drawing.Rectangle" /> representing the bounds within which the control is scaled.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-488">A <see cref="T:System.Drawing.Rectangle" /> representing the bounds within which the control is scaled.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.GetScaledBounds(System.Drawing.Rectangle,System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)" />
      </Docs>
    </Member>
    <Member MemberName="HelpButton">
      <MemberSignature Language="C#" Value="public bool HelpButton { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HelpButton" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.HelpButton" />
      <MemberSignature Language="VB.NET" Value="Public Property HelpButton As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HelpButton { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.HelpButton : bool with get, set" Usage="System.Windows.Forms.Form.HelpButton" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1bd5f-489">Gets or sets a value indicating whether a Help button should be displayed in the caption box of the form.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-489">Gets or sets a value indicating whether a Help button should be displayed in the caption box of the form.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1bd5f-490">
            <see langword="true" /> 表示要在表單的標題列中顯示 [說明] 按鈕，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-490">
              <see langword="true" /> to display a Help button in the form's caption bar; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="1bd5f-491">預設值為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-491">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bd5f-492">當這個屬性設定為`true`，加上問號的小按鈕會出現在左邊的標題列**關閉** 按鈕。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-492">When this property is set to `true`, a small button with a question mark appears in the caption bar to the left of the **Close** button.</span></span> <span data-ttu-id="1bd5f-493">您可以使用此按鈕以顯示您的應用程式的說明。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-493">You can use this button to display help for your application.</span></span> <span data-ttu-id="1bd5f-494">您可以建立的事件處理常式<xref:System.Windows.Forms.Control.HelpRequested>按一下表單的 [說明] 按鈕時，向使用者顯示說明資訊的事件。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-494">You can create an event handler for the <xref:System.Windows.Forms.Control.HelpRequested> event to display Help information to the user when the Help button of the form is clicked.</span></span>  

<span data-ttu-id="1bd5f-495">若要顯示 [說明] 按鈕，表單的值<xref:System.Windows.Forms.Form.ControlBox>屬性必須是`true`，其預設值。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-495">To display a Help button, the value of the form's <xref:System.Windows.Forms.Form.ControlBox> property must be `true`, its default value.</span></span> <span data-ttu-id="1bd5f-496"><xref:System.Windows.Forms.Form.ControlBox>屬性會決定是否在標題列右上角包含最大化 按鈕、 最小化按鈕、 說明 按鈕和 關閉 按鈕等控制項。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-496">The <xref:System.Windows.Forms.Form.ControlBox> property determines whether the upper-right corner of the caption bar contains controls such as a maximize button, a minimize button, a help button, and a close button.</span></span> <span data-ttu-id="1bd5f-497">此外，您也必須設定的表單<xref:System.Windows.Forms.Form.FormBorderStyle%2A>屬性，以<xref:System.Windows.Forms.FormBorderStyle.FixedSingle?displayProperty=nameWithType>， <xref:System.Windows.Forms.FormBorderStyle.Sizable?displayProperty=nameWithType>， <xref:System.Windows.Forms.FormBorderStyle.Fixed3D?displayProperty=nameWithType>，或<xref:System.Windows.Forms.FormBorderStyle.FixedDialog?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-497">In addition, you must also set the form's <xref:System.Windows.Forms.Form.FormBorderStyle%2A> property to <xref:System.Windows.Forms.FormBorderStyle.FixedSingle?displayProperty=nameWithType>, <xref:System.Windows.Forms.FormBorderStyle.Sizable?displayProperty=nameWithType>, <xref:System.Windows.Forms.FormBorderStyle.Fixed3D?displayProperty=nameWithType>, or <xref:System.Windows.Forms.FormBorderStyle.FixedDialog?displayProperty=nameWithType>.</span></span>  


> [!IMPORTANT]
>  <span data-ttu-id="1bd5f-498">值<xref:System.Windows.Forms.Form.HelpButton%2A>屬性會被忽略，如果**最大化**或是**最小化**按鈕會顯示。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-498">The value of the <xref:System.Windows.Forms.Form.HelpButton%2A> property is ignored if the **Maximize** or **Minimize** buttons are shown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1bd5f-499">下列程式碼範例會建立的新執行個體<xref:System.Windows.Forms.Form>，並呼叫<xref:System.Windows.Forms.Form.ShowDialog%2A>表單顯示為對話方塊中的方法。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-499">The following code example creates a new instance of a <xref:System.Windows.Forms.Form> and calls the <xref:System.Windows.Forms.Form.ShowDialog%2A> method to display the form as a dialog box.</span></span> <span data-ttu-id="1bd5f-500">範例會設定<xref:System.Windows.Forms.Form.FormBorderStyle%2A>， <xref:System.Windows.Forms.Form.AcceptButton%2A>， <xref:System.Windows.Forms.Form.CancelButton%2A>， <xref:System.Windows.Forms.Form.MinimizeBox%2A>， <xref:System.Windows.Forms.Form.MaximizeBox%2A>，和<xref:System.Windows.Forms.Form.StartPosition%2A>內容 對話方塊中變更的外觀和功能的形式。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-500">The example sets the <xref:System.Windows.Forms.Form.FormBorderStyle%2A>, <xref:System.Windows.Forms.Form.AcceptButton%2A>, <xref:System.Windows.Forms.Form.CancelButton%2A>, <xref:System.Windows.Forms.Form.MinimizeBox%2A>, <xref:System.Windows.Forms.Form.MaximizeBox%2A>, and <xref:System.Windows.Forms.Form.StartPosition%2A> properties to change the appearance and functionality of the form to a dialog box.</span></span> <span data-ttu-id="1bd5f-501">此範例也會使用<xref:System.Windows.Forms.Form.ControlCollection.Add%2A>表單的方法<xref:System.Windows.Forms.Control.Controls%2A>要加入兩個集合<xref:System.Windows.Forms.Button>控制項。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-501">The example also uses the <xref:System.Windows.Forms.Form.ControlCollection.Add%2A> method of the form's <xref:System.Windows.Forms.Control.Controls%2A> collection to add two <xref:System.Windows.Forms.Button> controls.</span></span> <span data-ttu-id="1bd5f-502">此範例會使用<xref:System.Windows.Forms.Form.HelpButton%2A>屬性 對話方塊的標題列中顯示 說明 按鈕。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-502">The example uses the <xref:System.Windows.Forms.Form.HelpButton%2A> property to display a Help button in the caption bar of the dialog box.</span></span>  
  
 [!code-cpp[Classic Form.AcceptButton Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Form.AcceptButton Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Form.AcceptButton Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Form.AcceptButton Example/CS/source.cs#1)]
 [!code-vb[Classic Form.AcceptButton Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Form.AcceptButton Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.MinimizeBox" />
        <altmember cref="P:System.Windows.Forms.Form.MaximizeBox" />
        <altmember cref="P:System.Windows.Forms.Form.ControlBox" />
        <altmember cref="E:System.Windows.Forms.Form.HelpButtonClicked" />
      </Docs>
    </Member>
    <Member MemberName="HelpButtonClicked">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.CancelEventHandler HelpButtonClicked;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.CancelEventHandler HelpButtonClicked" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Form.HelpButtonClicked" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event HelpButtonClicked As CancelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::CancelEventHandler ^ HelpButtonClicked;" />
      <MemberSignature Language="F#" Value="member this.HelpButtonClicked : System.ComponentModel.CancelEventHandler " Usage="member this.HelpButtonClicked : System.ComponentModel.CancelEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.CancelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1bd5f-503">Occurs when the **Help** button is clicked.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-503">Occurs when the **Help** button is clicked.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bd5f-504"><xref:System.Windows.Forms.Form.HelpButtonClicked>就會發生事件時**協助**按一下表單的標題列中的按鈕。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-504">The <xref:System.Windows.Forms.Form.HelpButtonClicked> event occurs when the **Help** button in the form's caption bar is clicked.</span></span> <span data-ttu-id="1bd5f-505">**幫助** 按鈕會顯示當<xref:System.Windows.Forms.Form.HelpButton%2A>屬性設定為`true`。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-505">The **Help** button is displayed when the <xref:System.Windows.Forms.Form.HelpButton%2A> property is set to `true`.</span></span> <span data-ttu-id="1bd5f-506"><xref:System.Windows.Forms.Form.HelpButtonClicked> 您可以取消。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-506"><xref:System.Windows.Forms.Form.HelpButtonClicked> can be canceled.</span></span>  
  
 <span data-ttu-id="1bd5f-507">如需有關如何處理事件的詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-507">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1bd5f-508">下列程式碼範例示範如何使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-508">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="1bd5f-509">在範例中，事件處理常式會報告一次<xref:System.Windows.Forms.Form.HelpButtonClicked>事件。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-509">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Form.HelpButtonClicked> event.</span></span> <span data-ttu-id="1bd5f-510">此報表可協助您了解事件發生的時機，並可協助您偵錯。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-510">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="1bd5f-511">若要報告多個事件或事件經常發生，請考慮更換<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>具有<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>或將訊息附加到多行<xref:System.Windows.Forms.TextBox>。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-511">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="1bd5f-512">若要執行範例程式碼，將它貼到包含類型的執行個體的專案<xref:System.Windows.Forms.Form>名為`Form1`。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-512">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.Form> named `Form1`.</span></span> <span data-ttu-id="1bd5f-513">請確定 與關聯的事件處理常式<xref:System.Windows.Forms.Form.HelpButtonClicked>事件。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-513">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.Form.HelpButtonClicked> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#388](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#388)]
 [!code-vb[System.Windows.Forms.EventExamples#388](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#388)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.HelpButton" />
        <altmember cref="P:System.Windows.Forms.Form.ControlBox" />
        <altmember cref="M:System.Windows.Forms.Form.OnHelpButtonClicked(System.ComponentModel.CancelEventArgs)" />
        <altmember cref="E:System.Windows.Forms.Control.HelpRequested" />
      </Docs>
    </Member>
    <Member MemberName="Icon">
      <MemberSignature Language="C#" Value="public System.Drawing.Icon Icon { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Icon Icon" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.Icon" />
      <MemberSignature Language="VB.NET" Value="Public Property Icon As Icon" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Icon ^ Icon { System::Drawing::Icon ^ get(); void set(System::Drawing::Icon ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Icon : System.Drawing.Icon with get, set" Usage="System.Windows.Forms.Form.Icon" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.AmbientValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Icon</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1bd5f-514">Gets or sets the icon for the form.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-514">Gets or sets the icon for the form.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1bd5f-515">
            <see cref="T:System.Drawing.Icon" />，代表表單的圖示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-515">An <see cref="T:System.Drawing.Icon" /> that represents the icon for the form.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bd5f-516">表單的圖示會指定代表表單的工作列，以及在表單控制項方塊會顯示圖示的圖片。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-516">A form's icon designates the picture that represents the form in the taskbar as well as the icon that is displayed for the control box of the form.</span></span>  
  
 <span data-ttu-id="1bd5f-517">如果這個屬性會有任何作用<xref:System.Windows.Forms.Form.FormBorderStyle%2A>設為<xref:System.Windows.Forms.FormBorderStyle.FixedDialog>。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-517">This property will have no effect if <xref:System.Windows.Forms.Form.FormBorderStyle%2A> is set to <xref:System.Windows.Forms.FormBorderStyle.FixedDialog>.</span></span> <span data-ttu-id="1bd5f-518">在此情況下，表單不會顯示一個圖示。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-518">In that case, the form will not display an icon.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.ControlBox" />
      </Docs>
    </Member>
    <Member MemberName="InputLanguageChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.InputLanguageChangedEventHandler InputLanguageChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.InputLanguageChangedEventHandler InputLanguageChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Form.InputLanguageChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event InputLanguageChanged As InputLanguageChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::InputLanguageChangedEventHandler ^ InputLanguageChanged;" />
      <MemberSignature Language="F#" Value="member this.InputLanguageChanged : System.Windows.Forms.InputLanguageChangedEventHandler " Usage="member this.InputLanguageChanged : System.Windows.Forms.InputLanguageChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.InputLanguageChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1bd5f-519">Occurs after the input language of the form has changed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-519">Occurs after the input language of the form has changed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bd5f-520">您可以使用這個事件來變更表單的外觀和文字格式的輸入語言變更為基礎。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-520">You can use this event to make changes to your form's appearance and text based on changes made to the input language of the form.</span></span>  
  
 <span data-ttu-id="1bd5f-521">如需有關如何處理事件的詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-521">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1bd5f-522">下列程式碼範例示範如何使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-522">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="1bd5f-523">在範例中，事件處理常式會報告一次<xref:System.Windows.Forms.Form.InputLanguageChanged>事件。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-523">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Form.InputLanguageChanged> event.</span></span> <span data-ttu-id="1bd5f-524">此報表可協助您了解事件發生的時機，並可協助您偵錯。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-524">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="1bd5f-525">若要報告多個事件或事件經常發生，請考慮更換<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>具有<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>或將訊息附加到多行<xref:System.Windows.Forms.TextBox>。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-525">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="1bd5f-526">若要執行範例程式碼，將它貼到包含類型的執行個體的專案<xref:System.Windows.Forms.Form>名為`Form1`。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-526">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.Form> named `Form1`.</span></span> <span data-ttu-id="1bd5f-527">請確定 與關聯的事件處理常式<xref:System.Windows.Forms.Form.InputLanguageChanged>事件。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-527">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.Form.InputLanguageChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#400](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#400)]
 [!code-vb[System.Windows.Forms.EventExamples#400](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#400)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Form.InputLanguageChanging" />
        <altmember cref="M:System.Windows.Forms.Form.OnInputLanguageChanged(System.Windows.Forms.InputLanguageChangedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="InputLanguageChanging">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.InputLanguageChangingEventHandler InputLanguageChanging;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.InputLanguageChangingEventHandler InputLanguageChanging" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Form.InputLanguageChanging" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event InputLanguageChanging As InputLanguageChangingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::InputLanguageChangingEventHandler ^ InputLanguageChanging;" />
      <MemberSignature Language="F#" Value="member this.InputLanguageChanging : System.Windows.Forms.InputLanguageChangingEventHandler " Usage="member this.InputLanguageChanging : System.Windows.Forms.InputLanguageChangingEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.InputLanguageChangingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1bd5f-528">Occurs when the user attempts to change the input language for the form.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-528">Occurs when the user attempts to change the input language for the form.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bd5f-529">表單的輸入語言變更之前，就會發生此事件。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-529">This event occurs before the change of input language is made for the form.</span></span> <span data-ttu-id="1bd5f-530">您可以取消設定的語言變更<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>的屬性<xref:System.Windows.Forms.InputLanguageChangingEventArgs>傳遞到您的事件處理常式，以`false`。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-530">You can cancel the language change by setting the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.Windows.Forms.InputLanguageChangingEventArgs> passed to your event handler to `false`.</span></span> <span data-ttu-id="1bd5f-531">如果事件已取消，不會變更輸入的語言。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-531">If the event is canceled, the input language is not changed.</span></span> <span data-ttu-id="1bd5f-532">若要判斷是否適合您的應用程式要求的輸入的語言變更，您可以使用此事件。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-532">You can use this event to determine whether the requested input language change is appropriate for your application.</span></span>  
  
 <span data-ttu-id="1bd5f-533">如需有關如何處理事件的詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-533">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1bd5f-534">下列程式碼範例示範如何使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-534">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="1bd5f-535">在範例中，事件處理常式會報告一次<xref:System.Windows.Forms.Form.InputLanguageChanging>事件。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-535">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Form.InputLanguageChanging> event.</span></span> <span data-ttu-id="1bd5f-536">此報表可協助您了解事件發生的時機，並可協助您偵錯。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-536">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="1bd5f-537">若要報告多個事件或事件經常發生，請考慮更換<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>具有<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>或將訊息附加到多行<xref:System.Windows.Forms.TextBox>。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-537">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="1bd5f-538">若要執行範例程式碼，將它貼到包含類型的執行個體的專案<xref:System.Windows.Forms.Form>名為`Form1`。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-538">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.Form> named `Form1`.</span></span> <span data-ttu-id="1bd5f-539">請確定 與關聯的事件處理常式<xref:System.Windows.Forms.Form.InputLanguageChanging>事件。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-539">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.Form.InputLanguageChanging> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#401](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#401)]
 [!code-vb[System.Windows.Forms.EventExamples#401](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#401)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Form.InputLanguageChanged" />
        <altmember cref="M:System.Windows.Forms.Form.OnInputLanguageChanging(System.Windows.Forms.InputLanguageChangingEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="IsMdiChild">
      <MemberSignature Language="C#" Value="public bool IsMdiChild { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMdiChild" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.IsMdiChild" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsMdiChild As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMdiChild { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsMdiChild : bool" Usage="System.Windows.Forms.Form.IsMdiChild" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1bd5f-540">Gets a value indicating whether the form is a multiple-document interface (MDI) child form.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-540">Gets a value indicating whether the form is a multiple-document interface (MDI) child form.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1bd5f-541">如果表單為 MDI 子表單，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-541">
              <see langword="true" /> if the form is an MDI child form; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bd5f-542">在執行階段，MDI 子表單會顯示在 MDI 父表單的工作區。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-542">At run time, MDI child forms are displayed inside the client area of an MDI parent form.</span></span> <span data-ttu-id="1bd5f-543">MDI 子表單可以最大化、 最小化，和在 MDI 父表單內移動。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-543">An MDI child form can be maximized, minimized, and moved within the MDI parent form.</span></span> <span data-ttu-id="1bd5f-544">若要建立 MDI 子表單，指派<xref:System.Windows.Forms.Form>，它就會以 MDI 父表單<xref:System.Windows.Forms.Form.MdiParent%2A>子表單的屬性。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-544">To create an MDI child form, assign the <xref:System.Windows.Forms.Form> that will be the MDI parent form to the <xref:System.Windows.Forms.Form.MdiParent%2A> property of the child form.</span></span> <span data-ttu-id="1bd5f-545">您可以使用<xref:System.Windows.Forms.Form.IsMdiContainer%2A>屬性來決定是否表單為 MDI 父表單。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-545">You can use the <xref:System.Windows.Forms.Form.IsMdiContainer%2A> property to determine whether a form is an MDI parent form.</span></span>  
  
 <span data-ttu-id="1bd5f-546">您可以使用<xref:System.Windows.Forms.Form.IsMdiChild%2A>屬性來決定方法或屬性所傳回的表單為 MDI 子表單或在您的應用程式，例如對話方塊中的標準格式。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-546">You can use the <xref:System.Windows.Forms.Form.IsMdiChild%2A> property to determine whether a form returned by a method or property is an MDI child form or a standard form in your application such as a dialog box.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1bd5f-547">所有的 MDI 子表單有可調整大小框線、 控制功能表方塊和 最小化並**最大化**按鈕，不論設定為何<xref:System.Windows.Forms.Form.FormBorderStyle%2A>， <xref:System.Windows.Forms.Form.ControlBox%2A>， <xref:System.Windows.Forms.Form.MinimizeBox%2A>，和<xref:System.Windows.Forms.Form.MaximizeBox%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-547">All MDI child forms have sizable borders, a control-menu box, and Minimize and **Maximize** buttons, regardless of the settings of the <xref:System.Windows.Forms.Form.FormBorderStyle%2A>, <xref:System.Windows.Forms.Form.ControlBox%2A>, <xref:System.Windows.Forms.Form.MinimizeBox%2A>, and <xref:System.Windows.Forms.Form.MaximizeBox%2A> properties.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.MdiParent" />
        <altmember cref="P:System.Windows.Forms.Form.MdiChildren" />
        <altmember cref="P:System.Windows.Forms.Form.IsMdiContainer" />
      </Docs>
    </Member>
    <Member MemberName="IsMdiContainer">
      <MemberSignature Language="C#" Value="public bool IsMdiContainer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMdiContainer" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.IsMdiContainer" />
      <MemberSignature Language="VB.NET" Value="Public Property IsMdiContainer As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMdiContainer { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsMdiContainer : bool with get, set" Usage="System.Windows.Forms.Form.IsMdiContainer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1bd5f-548">Gets or sets a value indicating whether the form is a container for multiple-document interface (MDI) child forms.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-548">Gets or sets a value indicating whether the form is a container for multiple-document interface (MDI) child forms.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1bd5f-549">如果表單為 MDI 子表單的容器，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-549">
              <see langword="true" /> if the form is a container for MDI child forms; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="1bd5f-550">預設值為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-550">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bd5f-551">這個屬性會變成 MDI 父表單的顯示和表單的行為。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-551">This property changes the display and behavior of the form to an MDI parent form.</span></span> <span data-ttu-id="1bd5f-552">當這個屬性設定為`true`，表單會顯示為凸起的框線下凹的工作區。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-552">When this property is set to `true`, the form displays a sunken client area with a raised border.</span></span> <span data-ttu-id="1bd5f-553">所有指派給父表單的 MDI 子表單會顯示在其工作區。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-553">All MDI child forms assigned to the parent form are displayed within its client area.</span></span>  
  
 <span data-ttu-id="1bd5f-554">關閉 MDI 父表單時， <xref:System.Windows.Forms.Form.Closing> MDI 父表單之前，會引發事件的所有的 MDI 子表單<xref:System.Windows.Forms.Form.Closing>就會引發事件。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-554">When an MDI parent form is closed, the <xref:System.Windows.Forms.Form.Closing> events of all MDI child forms are raised before the MDI parent form's <xref:System.Windows.Forms.Form.Closing> event is raised.</span></span> <span data-ttu-id="1bd5f-555">颾魤 ㄛ<xref:System.Windows.Forms.Form.Closed>之前，會引發事件的所有的 MDI 子表單<xref:System.Windows.Forms.Form.Closed>引發 MDI 父表單的事件。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-555">In addition, the <xref:System.Windows.Forms.Form.Closed> events of all MDI child forms are raised before the <xref:System.Windows.Forms.Form.Closed> event of the MDI parent form is raised.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1bd5f-556">如果有兩個<xref:System.Windows.Forms.MenuStrip>上設定的 MDI 子表單的控制項<xref:System.Windows.Forms.Form.IsMdiContainer%2A>要`true`父表單的內容合併的其中之一<xref:System.Windows.Forms.MenuStrip>控制項。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-556">If there are two <xref:System.Windows.Forms.MenuStrip> controls on an MDI child form, setting <xref:System.Windows.Forms.Form.IsMdiContainer%2A> to `true` for the parent form merges the contents of only one of the <xref:System.Windows.Forms.MenuStrip> controls.</span></span> <span data-ttu-id="1bd5f-557">使用<xref:System.Windows.Forms.ToolStripManager.Merge%2A>合併的其他子內容<xref:System.Windows.Forms.MenuStrip>MDI 父表單上的控制項。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-557">Use <xref:System.Windows.Forms.ToolStripManager.Merge%2A> to merge the contents of additional child <xref:System.Windows.Forms.MenuStrip> controls on the MDI parent form.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1bd5f-558">下列程式碼範例示範如何使用<xref:System.Windows.Forms.Form.IsMdiContainer%2A>屬性，以及變更`BackColor`MDI 表單的屬性。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-558">The following code example demonstrates using the <xref:System.Windows.Forms.Form.IsMdiContainer%2A> property as well as changing the `BackColor` property of an MDI Form.</span></span> <span data-ttu-id="1bd5f-559">若要執行此範例中，貼上新的表單中的下列程式碼。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-559">To run this example, paste the following code in a new form.</span></span>  
  
 [!code-csharp[System.Windows.Forms.MdiClientExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.MdiClientExample/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.MdiClientExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.MdiClientExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.IsMdiChild" />
        <altmember cref="P:System.Windows.Forms.Form.MdiParent" />
        <altmember cref="P:System.Windows.Forms.Form.MdiChildren" />
      </Docs>
    </Member>
    <Member MemberName="IsRestrictedWindow">
      <MemberSignature Language="C#" Value="public bool IsRestrictedWindow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsRestrictedWindow" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.IsRestrictedWindow" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsRestrictedWindow As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsRestrictedWindow { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsRestrictedWindow : bool" Usage="System.Windows.Forms.Form.IsRestrictedWindow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1bd5f-560">Gets a value indicating whether the form can use all windows and user input events without restriction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-560">Gets a value indicating whether the form can use all windows and user input events without restriction.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1bd5f-561">如果表單具有限制，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-561">
              <see langword="true" /> if the form has restrictions; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="1bd5f-562">預設值為 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-562">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bd5f-563"><xref:System.Windows.Forms.Form.IsRestrictedWindow%2A>屬性會決定是否<xref:System.Security.Permissions.UIPermissionWindow.AllWindows>授與權限。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-563">The <xref:System.Windows.Forms.Form.IsRestrictedWindow%2A> property determines whether the <xref:System.Security.Permissions.UIPermissionWindow.AllWindows> permission is granted.</span></span> <span data-ttu-id="1bd5f-564">這個屬性會設定表單的建構函式，在執行階段，而表單的存留期間快取。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-564">This property is set at run time in the form's constructor, and is cached for the lifetime of the form.</span></span> <span data-ttu-id="1bd5f-565">在部分信任中執行的 Windows Forms 應用程式無法規避這項檢查，因為通用語言執行平台可確保在部分信任中一律呼叫父建構函式。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-565">Windows Forms applications running in partial trust cannot circumvent this check, as the common language runtime ensures that the parent constructor is always called in partial trust.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyPreview">
      <MemberSignature Language="C#" Value="public bool KeyPreview { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool KeyPreview" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.KeyPreview" />
      <MemberSignature Language="VB.NET" Value="Public Property KeyPreview As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool KeyPreview { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.KeyPreview : bool with get, set" Usage="System.Windows.Forms.Form.KeyPreview" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1bd5f-566">Gets or sets a value indicating whether the form will receive key events before the event is passed to the control that has focus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-566">Gets or sets a value indicating whether the form will receive key events before the event is passed to the control that has focus.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1bd5f-567">如果表單將接收所有按鍵事件，則為 <see langword="true" />；如果表單上目前選取的控制項將接收按鍵事件，則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-567">
              <see langword="true" /> if the form will receive all key events; <see langword="false" /> if the currently selected control on the form receives key events.</span>
          </span>
          <span data-ttu-id="1bd5f-568">預設值為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-568">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bd5f-569">當這個屬性設定為`true`，表單將接收所有<xref:System.Windows.Forms.Control.KeyPress>， <xref:System.Windows.Forms.Control.KeyDown>，和<xref:System.Windows.Forms.Control.KeyUp>事件。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-569">When this property is set to `true`, the form will receive all <xref:System.Windows.Forms.Control.KeyPress>, <xref:System.Windows.Forms.Control.KeyDown>, and <xref:System.Windows.Forms.Control.KeyUp> events.</span></span> <span data-ttu-id="1bd5f-570">表單的事件處理常式已處理按鍵輸入完成後，並接著會將按鍵輸入指派給具有焦點的控制項。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-570">After the form's event handlers have completed processing the keystroke, the keystroke is then assigned to the control with focus.</span></span> <span data-ttu-id="1bd5f-571">比方說，如果<xref:System.Windows.Forms.Form.KeyPreview%2A>屬性設定為`true`目前選取的控制項，而且<xref:System.Windows.Forms.TextBox>按鍵輸入由事件處理常式的表單之後<xref:System.Windows.Forms.TextBox>控制項將會收到已按下的按鍵。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-571">For example, if the <xref:System.Windows.Forms.Form.KeyPreview%2A> property is set to `true` and the currently selected control is a <xref:System.Windows.Forms.TextBox>, after the keystroke is handled by the event handlers of the form the <xref:System.Windows.Forms.TextBox> control will receive the key that was pressed.</span></span> <span data-ttu-id="1bd5f-572">若要處理只能在表單層級的鍵盤事件，並允許接收鍵盤事件的控制項，將<xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A?displayProperty=nameWithType>在您的表單中的屬性<xref:System.Windows.Forms.Control.KeyPress>事件處理常式來`true`。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-572">To handle keyboard events only at the form level and not allow controls to receive keyboard events, set the <xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A?displayProperty=nameWithType> property in your form's <xref:System.Windows.Forms.Control.KeyPress> event handler to `true`.</span></span>  
  
 <span data-ttu-id="1bd5f-573">您可以使用這個屬性來處理大部分的按鍵輸入，在您的應用程式並不是處理按鍵輸入，或呼叫適當的控制項來處理按鍵輸入。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-573">You can use this property to process most keystrokes in your application and either handle the keystroke or call the appropriate control to handle the keystroke.</span></span> <span data-ttu-id="1bd5f-574">比方說，當應用程式使用功能鍵，您可能想要處理表單層次，而非撰寫程式碼可能會收到按鍵輸入事件的每個控制項的按鍵輸入。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-574">For example, when an application uses function keys, you might want to process the keystrokes at the form level rather than writing code for each control that might receive keystroke events.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1bd5f-575">如果表單中不的任何可見的或已啟用的控制項，它會自動收到所有的鍵盤事件。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-575">If a form has no visible or enabled controls, it automatically receives all keyboard events.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1bd5f-576">表單上的控制項可能會進行程式設計，以取消它收到的任何按鍵輸入。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-576">A control on a form may be programmed to cancel any keystrokes it receives.</span></span> <span data-ttu-id="1bd5f-577">因為控制項不會將這些按鍵輸入傳送至表單，表單會永遠不會看到它們不論設定為何<xref:System.Windows.Forms.Form.KeyPreview%2A>。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-577">Since the control never sends these keystrokes to the form, the form will never see them regardless of the setting of <xref:System.Windows.Forms.Form.KeyPreview%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1bd5f-578">下列程式碼範例將示範如何設定表單的<xref:System.Windows.Forms.Form.KeyPreview%2A>屬性設為 true，並處理表單層級的索引鍵的事件。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-578">The following code example demonstrates setting a form's <xref:System.Windows.Forms.Form.KeyPreview%2A> property to true and handling the key events at the form level.</span></span> <span data-ttu-id="1bd5f-579">要執行此範例，請將下列的程式碼貼入空白表單。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-579">To run the example, paste the following code in a blank form.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ProcessMnemonic#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ProcessMnemonic/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.ProcessMnemonic#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ProcessMnemonic/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.ProcessMnemonic#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ProcessMnemonic/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Control.KeyPress" />
        <altmember cref="E:System.Windows.Forms.Control.KeyDown" />
        <altmember cref="E:System.Windows.Forms.Control.KeyUp" />
      </Docs>
    </Member>
    <Member MemberName="LayoutMdi">
      <MemberSignature Language="C#" Value="public void LayoutMdi (System.Windows.Forms.MdiLayout value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LayoutMdi(valuetype System.Windows.Forms.MdiLayout value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.LayoutMdi(System.Windows.Forms.MdiLayout)" />
      <MemberSignature Language="VB.NET" Value="Public Sub LayoutMdi (value As MdiLayout)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LayoutMdi(System::Windows::Forms::MdiLayout value);" />
      <MemberSignature Language="F#" Value="member this.LayoutMdi : System.Windows.Forms.MdiLayout -&gt; unit" Usage="form.LayoutMdi value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.Forms.MdiLayout" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="1bd5f-580">One of the <see cref="T:System.Windows.Forms.MdiLayout" /> values that defines the layout of MDI child forms.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-580">One of the <see cref="T:System.Windows.Forms.MdiLayout" /> values that defines the layout of MDI child forms.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1bd5f-581">Arranges the multiple-document interface (MDI) child forms within the MDI parent form.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-581">Arranges the multiple-document interface (MDI) child forms within the MDI parent form.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bd5f-582">若要排列 MDI 子表單，以便更容易瀏覽和操作之 MDI 子表單在 MDI 父表單中，您可以使用這個方法。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-582">You can use this method to arrange the MDI child forms in your MDI parent form to allow for easier navigation and manipulation of MDI child forms.</span></span> <span data-ttu-id="1bd5f-583">MDI 子表單可以並排顯示水平和垂直重疊，或為 MDI 父表單內的圖示。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-583">MDI child forms can be tiled horizontally and vertically, cascaded, or as icons within the MDI parent form.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1bd5f-584">下列程式碼範例會顯示視窗 功能表的功能表項目的事件處理常式，在 MDI 應用程式的父表單中。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-584">The following code example shows the event handlers for the menu items of a Window menu in an MDI application's parent form.</span></span> <span data-ttu-id="1bd5f-585">每個事件處理常式會呼叫<xref:System.Windows.Forms.Form.LayoutMdi%2A>排列任何子表單的方法是在應用程式中開啟。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-585">Each event handler makes calls to the <xref:System.Windows.Forms.Form.LayoutMdi%2A> method to arrange any child forms that are currently open in the application.</span></span>  
  
 [!code-cpp[Classic Form.LayoutMdi Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Form.LayoutMdi Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Form.LayoutMdi Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Form.LayoutMdi Example/CS/source.cs#1)]
 [!code-vb[Classic Form.LayoutMdi Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Form.LayoutMdi Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.MdiLayout" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public event EventHandler Load;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Load" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Form.Load" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Load As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Load;" />
      <MemberSignature Language="F#" Value="member this.Load : EventHandler " Usage="member this.Load : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1bd5f-586">Occurs before a form is displayed for the first time.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-586">Occurs before a form is displayed for the first time.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bd5f-587">您可以使用這個事件來執行工作，例如配置表單所使用的資源。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-587">You can use this event to perform tasks such as allocating resources used by the form.</span></span>  
  
 <span data-ttu-id="1bd5f-588">如需有關如何處理事件的詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-588">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1bd5f-589">下列程式碼範例示範如何使用<xref:System.Windows.Forms.Form.SetDesktopLocation%2A>， <xref:System.Windows.Forms.Form.Load>， <xref:System.Windows.Forms.Form.Activated>，和<xref:System.Windows.Forms.Form.Activate%2A>成員。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-589">The following code example demonstrates how to use the <xref:System.Windows.Forms.Form.SetDesktopLocation%2A>, <xref:System.Windows.Forms.Form.Load>, <xref:System.Windows.Forms.Form.Activated>, and <xref:System.Windows.Forms.Form.Activate%2A> members.</span></span> <span data-ttu-id="1bd5f-590">若要執行此範例，下列程式碼貼入表單名`Form1`包含<xref:System.Windows.Forms.Button>稱為`Button1`並將兩個<xref:System.Windows.Forms.Label>控制項，稱為`Label1`和`Label2`。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-590">To run the example, paste the following code in a form called `Form1` containing a <xref:System.Windows.Forms.Button> called `Button1` and two <xref:System.Windows.Forms.Label> controls called `Label1` and `Label2`.</span></span>  
  
 [!code-cpp[System.Windows.Forms.FormsActivate#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.FormsActivate/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.FormsActivate#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.FormsActivate/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.FormsActivate#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.FormsActivate/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Form.OnLoad(System.EventArgs)" />
        <altmember cref="M:System.Windows.Forms.Form.Close" />
      </Docs>
    </Member>
    <Member MemberName="Location">
      <MemberSignature Language="C#" Value="public System.Drawing.Point Location { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Point Location" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.Location" />
      <MemberSignature Language="VB.NET" Value="Public Property Location As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Point Location { System::Drawing::Point get(); void set(System::Drawing::Point value); };" />
      <MemberSignature Language="F#" Value="member this.Location : System.Drawing.Point with get, set" Usage="System.Windows.Forms.Form.Location" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.SettingsBindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1bd5f-591">Gets or sets the <see cref="T:System.Drawing.Point" /> that represents the upper-left corner of the <see cref="T:System.Windows.Forms.Form" /> in screen coordinates.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-591">Gets or sets the <see cref="T:System.Drawing.Point" /> that represents the upper-left corner of the <see cref="T:System.Windows.Forms.Form" /> in screen coordinates.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1bd5f-592">
            <see cref="T:System.Drawing.Point" />，代表螢幕座標中 <see cref="T:System.Windows.Forms.Form" /> 的左上角。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-592">The <see cref="T:System.Drawing.Point" /> that represents the upper-left corner of the <see cref="T:System.Windows.Forms.Form" /> in screen coordinates.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bd5f-593"><xref:System.Drawing.Point> 是一種結構，這表示它是實值類型。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-593"><xref:System.Drawing.Point> is a structure, which means that it is a value type.</span></span> <span data-ttu-id="1bd5f-594">如果您在存取中的屬性<xref:System.Drawing.Point>，則會傳回屬性的複本。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-594">If you access a property in <xref:System.Drawing.Point>, a copy of the property is returned.</span></span> <span data-ttu-id="1bd5f-595">因此，變更<xref:System.Drawing.Point.X%2A>或是<xref:System.Drawing.Point.Y%2A>的屬性<xref:System.Drawing.Point>從傳回<xref:System.Windows.Forms.Control.Location%2A>屬性不會影響<xref:System.Windows.Forms.Control.Left%2A>， <xref:System.Windows.Forms.Control.Right%2A>， <xref:System.Windows.Forms.Control.Top%2A>，或<xref:System.Windows.Forms.Control.Bottom%2A>屬性值<xref:System.Windows.Forms.Form>.</span><span class="sxs-lookup"><span data-stu-id="1bd5f-595">Therefore, changing the <xref:System.Drawing.Point.X%2A> or <xref:System.Drawing.Point.Y%2A> properties of the <xref:System.Drawing.Point> returned from the <xref:System.Windows.Forms.Control.Location%2A> property will not affect the <xref:System.Windows.Forms.Control.Left%2A>, <xref:System.Windows.Forms.Control.Right%2A>, <xref:System.Windows.Forms.Control.Top%2A>, or <xref:System.Windows.Forms.Control.Bottom%2A> property values of the <xref:System.Windows.Forms.Form>.</span></span> <span data-ttu-id="1bd5f-596">若要調整這些屬性，會個別設定每個屬性值，或設定<xref:System.Windows.Forms.Form.Location%2A>具有新屬性<xref:System.Drawing.Point>。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-596">To adjust these properties, set each property value individually, or set the <xref:System.Windows.Forms.Form.Location%2A> property with a new <xref:System.Drawing.Point>.</span></span>  
  
 <span data-ttu-id="1bd5f-597"><xref:System.Windows.Forms.Form.Location%2A>屬性取得或設定<xref:System.Windows.Forms.Control.Location%2A>屬性<xref:System.Windows.Forms.Control>基底類別，以及設定<xref:System.ComponentModel.SettingsBindableAttribute.Bindable%2A>屬性設`true`。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-597">The <xref:System.Windows.Forms.Form.Location%2A> property gets or sets the <xref:System.Windows.Forms.Control.Location%2A> property of the <xref:System.Windows.Forms.Control> base class, and sets the <xref:System.ComponentModel.SettingsBindableAttribute.Bindable%2A> property to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Form" />
        <altmember cref="T:System.Windows.Forms.ContainerControl" />
        <altmember cref="P:System.Windows.Forms.Control.Location" />
      </Docs>
    </Member>
    <Member MemberName="MainMenuStrip">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.MenuStrip MainMenuStrip { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.MenuStrip MainMenuStrip" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.MainMenuStrip" />
      <MemberSignature Language="VB.NET" Value="Public Property MainMenuStrip As MenuStrip" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::MenuStrip ^ MainMenuStrip { System::Windows::Forms::MenuStrip ^ get(); void set(System::Windows::Forms::MenuStrip ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MainMenuStrip : System.Windows.Forms.MenuStrip with get, set" Usage="System.Windows.Forms.Form.MainMenuStrip" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.ReferenceConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MenuStrip</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1bd5f-598">Gets or sets the primary menu container for the form.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-598">Gets or sets the primary menu container for the form.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1bd5f-599">
            <see cref="T:System.Windows.Forms.MenuStrip" />，代表表單功能表結構的容器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-599">A <see cref="T:System.Windows.Forms.MenuStrip" /> that represents the container for the menu structure of the form.</span>
          </span>
          <span data-ttu-id="1bd5f-600">預設值為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-600">The default is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bd5f-601">除了設定<xref:System.Windows.Forms.Form.MainMenuStrip%2A>屬性，您必須<xref:System.Windows.Forms.Control.ControlCollection.Add%2A><xref:System.Windows.Forms.MenuStrip>若要控制<xref:System.Windows.Forms.Control.Controls%2A>表單的集合。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-601">In addition to setting the <xref:System.Windows.Forms.Form.MainMenuStrip%2A> property, you must <xref:System.Windows.Forms.Control.ControlCollection.Add%2A> the <xref:System.Windows.Forms.MenuStrip> control to the <xref:System.Windows.Forms.Control.Controls%2A> collection of the form.</span></span>  
  
 <span data-ttu-id="1bd5f-602"><xref:System.Windows.Forms.MenuStrip>類別會取代<xref:System.Windows.Forms.MainMenu>舊版.NET Framework 中的類別。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-602">The <xref:System.Windows.Forms.MenuStrip> class supersedes the <xref:System.Windows.Forms.MainMenu> class in previous versions of the .NET Framework.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.MenuStrip" />
        <altmember cref="P:System.Windows.Forms.Control.Controls" />
      </Docs>
    </Member>
    <Member MemberName="Margin">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Padding Margin { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.Padding Margin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.Margin" />
      <MemberSignature Language="VB.NET" Value="Public Property Margin As Padding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Padding Margin { System::Windows::Forms::Padding get(); void set(System::Windows::Forms::Padding value); };" />
      <MemberSignature Language="F#" Value="member this.Margin : System.Windows.Forms.Padding with get, set" Usage="System.Windows.Forms.Form.Margin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Padding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1bd5f-603">Gets or sets the space between controls.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-603">Gets or sets the space between controls.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1bd5f-604">表示控制項之間間距的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-604">A value that represents the space between controls.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MarginChanged">
      <MemberSignature Language="C#" Value="public event EventHandler MarginChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler MarginChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Form.MarginChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MarginChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ MarginChanged;" />
      <MemberSignature Language="F#" Value="member this.MarginChanged : EventHandler " Usage="member this.MarginChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1bd5f-605">Occurs when the <see cref="P:System.Windows.Forms.Form.Margin" /> property changes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-605">Occurs when the <see cref="P:System.Windows.Forms.Form.Margin" /> property changes.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaximizeBox">
      <MemberSignature Language="C#" Value="public bool MaximizeBox { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MaximizeBox" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.MaximizeBox" />
      <MemberSignature Language="VB.NET" Value="Public Property MaximizeBox As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MaximizeBox { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.MaximizeBox : bool with get, set" Usage="System.Windows.Forms.Form.MaximizeBox" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1bd5f-606">Gets or sets a value indicating whether the **Maximize** button is displayed in the caption bar of the form.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-606">Gets or sets a value indicating whether the **Maximize** button is displayed in the caption bar of the form.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1bd5f-607">
            <see langword="true" /> 若要顯示 * * 在表單最大化 按鈕否則， <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-607">
              <see langword="true" /> to display a **Maximize** button for the form; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="1bd5f-608">預設值為 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-608">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

 <span data-ttu-id="1bd5f-609">A**最大化**按鈕可讓使用者將視窗放大為全螢幕大小。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-609">A **Maximize** button enables users to enlarge a window to full-screen size.</span></span> <span data-ttu-id="1bd5f-610">若要顯示**最大化**按鈕，表單的值<xref:System.Windows.Forms.Form.ControlBox>屬性必須是`true`，其預設值。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-610">To display a **Maximize** button, the value of the form's <xref:System.Windows.Forms.Form.ControlBox> property must be `true`, its default value.</span></span>  <span data-ttu-id="1bd5f-611"><xref:System.Windows.Forms.Form.ControlBox>屬性會決定是否在標題列右上角包含最大化 按鈕、 最小化按鈕、 說明 按鈕和 關閉 按鈕等控制項。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-611">The <xref:System.Windows.Forms.Form.ControlBox> property determines whether the upper-right corner of the caption bar contains controls such as a maximize button, a minimize button, a help button, and a close button.</span></span> <span data-ttu-id="1bd5f-612">此外，您也必須設定的表單<xref:System.Windows.Forms.Form.FormBorderStyle%2A>屬性，以<xref:System.Windows.Forms.FormBorderStyle.FixedSingle?displayProperty=nameWithType>， <xref:System.Windows.Forms.FormBorderStyle.Sizable?displayProperty=nameWithType>， <xref:System.Windows.Forms.FormBorderStyle.Fixed3D?displayProperty=nameWithType>，或<xref:System.Windows.Forms.FormBorderStyle.FixedDialog?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-612">In addition, you must also set the form's <xref:System.Windows.Forms.Form.FormBorderStyle%2A> property to <xref:System.Windows.Forms.FormBorderStyle.FixedSingle?displayProperty=nameWithType>, <xref:System.Windows.Forms.FormBorderStyle.Sizable?displayProperty=nameWithType>, <xref:System.Windows.Forms.FormBorderStyle.Fixed3D?displayProperty=nameWithType>, or <xref:System.Windows.Forms.FormBorderStyle.FixedDialog?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="1bd5f-613">A**最大化**按鈕會自動變成 [還原] 按鈕時的視窗最大化。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-613">A **Maximize** button automatically becomes a restore button when a window is maximized.</span></span> <span data-ttu-id="1bd5f-614">最小化或還原視窗會自動變更 還原 按鈕回到**最大化** 按鈕。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-614">Minimizing or restoring a window automatically changes the restore button back to a **Maximize** button.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1bd5f-615">將表單最大化在執行階段會產生<xref:System.Windows.Forms.Control.Resize>事件。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-615">Maximizing a form at run time generates a <xref:System.Windows.Forms.Control.Resize> event.</span></span> <span data-ttu-id="1bd5f-616"><xref:System.Windows.Forms.Form.WindowState%2A>屬性會反映在視窗的目前狀態。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-616">The <xref:System.Windows.Forms.Form.WindowState%2A> property reflects the current state of the window.</span></span> <span data-ttu-id="1bd5f-617">如果您設定<xref:System.Windows.Forms.Form.WindowState%2A>屬性，以`FormWindowState.Maximized`，表單最大化獨立於任何設定，則實際上<xref:System.Windows.Forms.Form.MaximizeBox%2A>和<xref:System.Windows.Forms.Form.FormBorderStyle%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-617">If you set the <xref:System.Windows.Forms.Form.WindowState%2A> property to `FormWindowState.Maximized`, the form is maximized independently of whatever settings are in effect for the <xref:System.Windows.Forms.Form.MaximizeBox%2A> and <xref:System.Windows.Forms.Form.FormBorderStyle%2A> properties.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1bd5f-618">下列程式碼範例會建立的新執行個體<xref:System.Windows.Forms.Form>，並呼叫<xref:System.Windows.Forms.Form.ShowDialog%2A>表單顯示為對話方塊中的方法。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-618">The following code example creates a new instance of a <xref:System.Windows.Forms.Form> and calls the <xref:System.Windows.Forms.Form.ShowDialog%2A> method to display the form as a dialog box.</span></span> <span data-ttu-id="1bd5f-619">範例會設定<xref:System.Windows.Forms.Form.FormBorderStyle%2A>， <xref:System.Windows.Forms.Form.AcceptButton%2A>， <xref:System.Windows.Forms.Form.CancelButton%2A>， <xref:System.Windows.Forms.Form.MinimizeBox%2A>， <xref:System.Windows.Forms.Form.MaximizeBox%2A>，和<xref:System.Windows.Forms.Form.StartPosition%2A>內容 對話方塊中變更的外觀和功能的形式。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-619">The example sets the <xref:System.Windows.Forms.Form.FormBorderStyle%2A>, <xref:System.Windows.Forms.Form.AcceptButton%2A>, <xref:System.Windows.Forms.Form.CancelButton%2A>, <xref:System.Windows.Forms.Form.MinimizeBox%2A>, <xref:System.Windows.Forms.Form.MaximizeBox%2A>, and <xref:System.Windows.Forms.Form.StartPosition%2A> properties to change the appearance and functionality of the form to a dialog box.</span></span> <span data-ttu-id="1bd5f-620">此範例也會使用<xref:System.Windows.Forms.Form.ControlCollection.Add%2A>表單的方法<xref:System.Windows.Forms.Control.Controls%2A>要加入兩個集合<xref:System.Windows.Forms.Button>控制項。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-620">The example also uses the <xref:System.Windows.Forms.Form.ControlCollection.Add%2A> method of the form's <xref:System.Windows.Forms.Control.Controls%2A> collection to add two <xref:System.Windows.Forms.Button> controls.</span></span> <span data-ttu-id="1bd5f-621">此範例會使用<xref:System.Windows.Forms.Form.HelpButton%2A>屬性 對話方塊的標題列中顯示 說明 按鈕。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-621">The example uses the <xref:System.Windows.Forms.Form.HelpButton%2A> property to display a help button in the caption bar of the dialog box.</span></span>  
  
 [!code-cpp[Classic Form.AcceptButton Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Form.AcceptButton Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Form.AcceptButton Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Form.AcceptButton Example/CS/source.cs#1)]
 [!code-vb[Classic Form.AcceptButton Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Form.AcceptButton Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.MinimizeBox" />
        <altmember cref="P:System.Windows.Forms.Form.ControlBox" />
      </Docs>
    </Member>
    <Member MemberName="MaximizedBounds">
      <MemberSignature Language="C#" Value="protected System.Drawing.Rectangle MaximizedBounds { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Rectangle MaximizedBounds" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.MaximizedBounds" />
      <MemberSignature Language="VB.NET" Value="Protected Property MaximizedBounds As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Drawing::Rectangle MaximizedBounds { System::Drawing::Rectangle get(); void set(System::Drawing::Rectangle value); };" />
      <MemberSignature Language="F#" Value="member this.MaximizedBounds : System.Drawing.Rectangle with get, set" Usage="System.Windows.Forms.Form.MaximizedBounds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1bd5f-622">Gets and sets the size of the form when it is maximized.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-622">Gets and sets the size of the form when it is maximized.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1bd5f-623">
            <see cref="T:System.Drawing.Rectangle" />，代表表單最大化時的界限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-623">A <see cref="T:System.Drawing.Rectangle" /> that represents the bounds of the form when it is maximized.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="1bd5f-624">The value of the <see cref="P:System.Drawing.Rectangle.Top" /> property is greater than the height of the form.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-624">The value of the <see cref="P:System.Drawing.Rectangle.Top" /> property is greater than the height of the form.</span>
          </span>
          <span data-ttu-id="1bd5f-625">-or-  The value of the <see cref="P:System.Drawing.Rectangle.Left" /> property is greater than the width of the form.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-625">-or-  The value of the <see cref="P:System.Drawing.Rectangle.Left" /> property is greater than the width of the form.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="1bd5f-626">
            <para>類別繼承自<see cref="T:System.Windows.Forms.Form" />可以覆寫這個方法，以最大化時，表單提供新界限。類別會設定這個屬性在內部當表單的 * * 按一下最大化 按鈕。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-626">
              <para>Classes that inherit from <see cref="T:System.Windows.Forms.Form" /> can override this method to provide new bounds for the form when it is maximized. The class sets this property internally when the form's **Maximize** button is clicked.</para>
            </span>
          </span>
        </block>
        <altmember cref="P:System.Windows.Forms.Form.MaximumSize" />
        <altmember cref="P:System.Windows.Forms.Form.MinimumSize" />
      </Docs>
    </Member>
    <Member MemberName="MaximizedBoundsChanged">
      <MemberSignature Language="C#" Value="public event EventHandler MaximizedBoundsChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler MaximizedBoundsChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Form.MaximizedBoundsChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MaximizedBoundsChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ MaximizedBoundsChanged;" />
      <MemberSignature Language="F#" Value="member this.MaximizedBoundsChanged : EventHandler " Usage="member this.MaximizedBoundsChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1bd5f-627">Occurs when the value of the <see cref="P:System.Windows.Forms.Form.MaximizedBounds" /> property has changed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-627">Occurs when the value of the <see cref="P:System.Windows.Forms.Form.MaximizedBounds" /> property has changed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bd5f-628">如需有關如何處理事件的詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-628">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1bd5f-629">下列程式碼範例示範如何使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-629">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="1bd5f-630">在範例中，事件處理常式會報告一次<xref:System.Windows.Forms.Form.MaximizedBoundsChanged>事件。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-630">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Form.MaximizedBoundsChanged> event.</span></span> <span data-ttu-id="1bd5f-631">此報表可協助您了解事件發生的時機，並可協助您偵錯。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-631">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="1bd5f-632">若要報告多個事件或事件經常發生，請考慮更換<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>具有<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>或將訊息附加到多行<xref:System.Windows.Forms.TextBox>。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-632">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="1bd5f-633">若要執行範例程式碼，將它貼到包含類型的執行個體的專案<xref:System.Windows.Forms.Form>名為`Form1`。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-633">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.Form> named `Form1`.</span></span> <span data-ttu-id="1bd5f-634">請確定 與關聯的事件處理常式<xref:System.Windows.Forms.Form.MaximizedBoundsChanged>事件。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-634">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.Form.MaximizedBoundsChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#389](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#389)]
 [!code-vb[System.Windows.Forms.EventExamples#389](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#389)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.MaximizedBounds" />
        <altmember cref="M:System.Windows.Forms.Form.OnMaximizedBoundsChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="MaximumSize">
      <MemberSignature Language="C#" Value="public override System.Drawing.Size MaximumSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size MaximumSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.MaximumSize" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property MaximumSize As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Size MaximumSize { System::Drawing::Size get(); void set(System::Drawing::Size value); };" />
      <MemberSignature Language="F#" Value="member this.MaximumSize : System.Drawing.Size with get, set" Usage="System.Windows.Forms.Form.MaximumSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Size), "0, 0")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1bd5f-635">Gets the maximum size the form can be resized to.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-635">Gets the maximum size the form can be resized to.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1bd5f-636">
            <see cref="T:System.Drawing.Size" />，代表表單的大小上限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-636">A <see cref="T:System.Drawing.Size" /> that represents the maximum size for the form.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bd5f-637">這個屬性可讓您限制為指定的最大大小的表單的大小。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-637">This property enables you to limit the size of a form to a specified maximum size.</span></span> <span data-ttu-id="1bd5f-638">可以使用這項功能在此同時顯示多個視窗時，以確保在單一視窗不會造成其他視窗，隱藏。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-638">You can use this feature when displaying multiple windows at the same time, to ensure that a single window does not cause other windows to be hidden.</span></span> <span data-ttu-id="1bd5f-639">如果這個屬性設定為<xref:System.Drawing.Size>是 0 的高度和寬度，在表單中的為 0 的物件會有沒有大小上限超過 Windows 所設定的限制。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-639">If this property is set to a <xref:System.Drawing.Size> object that is 0 in height and 0 in width, the form will have no maximum size beyond the limits set by Windows.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1bd5f-640">下列程式碼範例示範如何設定<xref:System.Windows.Forms.Form.MaximumSize%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-640">The following code example demonstrates setting the <xref:System.Windows.Forms.Form.MaximumSize%2A> property.</span></span>  
  
 [!code-cpp[System.Windows.Forms.FormExample#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.FormExample/CPP/form1.cpp#3)]
 [!code-csharp[System.Windows.Forms.FormExample#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.FormExample/CS/form1.cs#3)]
 [!code-vb[System.Windows.Forms.FormExample#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.FormExample/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="1bd5f-641">The values of the height or width within the <see cref="T:System.Drawing.Size" /> object are less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-641">The values of the height or width within the <see cref="T:System.Drawing.Size" /> object are less than zero.</span>
          </span>
        </exception>
        <altmember cref="P:System.Windows.Forms.Form.MaximizedBounds" />
        <altmember cref="P:System.Windows.Forms.Form.MinimumSize" />
        <altmember cref="P:System.Windows.Forms.SystemInformation.MaxWindowTrackSize" />
      </Docs>
    </Member>
    <Member MemberName="MaximumSizeChanged">
      <MemberSignature Language="C#" Value="public event EventHandler MaximumSizeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler MaximumSizeChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Form.MaximumSizeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MaximumSizeChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ MaximumSizeChanged;" />
      <MemberSignature Language="F#" Value="member this.MaximumSizeChanged : EventHandler " Usage="member this.MaximumSizeChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1bd5f-642">Occurs when the value of the <see cref="P:System.Windows.Forms.Form.MaximumSize" /> property has changed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-642">Occurs when the value of the <see cref="P:System.Windows.Forms.Form.MaximumSize" /> property has changed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bd5f-643">如需有關如何處理事件的詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-643">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1bd5f-644">下列程式碼範例示範如何使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-644">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="1bd5f-645">在範例中，事件處理常式會報告一次<xref:System.Windows.Forms.Form.MaximumSizeChanged>事件。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-645">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Form.MaximumSizeChanged> event.</span></span> <span data-ttu-id="1bd5f-646">此報表可協助您了解事件發生的時機，並可協助您偵錯。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-646">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="1bd5f-647">若要報告多個事件或事件經常發生，請考慮更換<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>具有<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>或將訊息附加到多行<xref:System.Windows.Forms.TextBox>。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-647">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="1bd5f-648">若要執行範例程式碼，將它貼到包含類型的執行個體的專案<xref:System.Windows.Forms.Form>名為`Form1`。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-648">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.Form> named `Form1`.</span></span> <span data-ttu-id="1bd5f-649">請確定 與關聯的事件處理常式<xref:System.Windows.Forms.Form.MaximumSizeChanged>事件。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-649">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.Form.MaximumSizeChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#390](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#390)]
 [!code-vb[System.Windows.Forms.EventExamples#390](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#390)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.MaximumSize" />
        <altmember cref="M:System.Windows.Forms.Form.OnMaximumSizeChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="MdiChildActivate">
      <MemberSignature Language="C#" Value="public event EventHandler MdiChildActivate;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler MdiChildActivate" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Form.MdiChildActivate" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MdiChildActivate As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ MdiChildActivate;" />
      <MemberSignature Language="F#" Value="member this.MdiChildActivate : EventHandler " Usage="member this.MdiChildActivate : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1bd5f-650">Occurs when a multiple-document interface (MDI) child form is activated or closed within an MDI application.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-650">Occurs when a multiple-document interface (MDI) child form is activated or closed within an MDI application.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bd5f-651">您可以使用這個事件來執行工作，例如更新的 MDI 子表單的內容，並變更功能表選項的 MDI 子表單，就啟動狀態的 MDI 父表單中提供基礎。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-651">You can use this event to perform tasks such as updating the contents of the MDI child form and changing the menu options available in the MDI parent form based on the status of the MDI child form that is activated.</span></span>  
  
 <span data-ttu-id="1bd5f-652">如需有關如何處理事件的詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-652">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1bd5f-653">下列程式碼範例示範如何使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-653">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="1bd5f-654">在範例中，事件處理常式會報告一次<xref:System.Windows.Forms.Form.MdiChildActivate>事件。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-654">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Form.MdiChildActivate> event.</span></span> <span data-ttu-id="1bd5f-655">此報表可協助您了解事件發生的時機，並可協助您偵錯。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-655">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="1bd5f-656">若要報告多個事件或事件經常發生，請考慮更換<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>具有<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>或將訊息附加到多行<xref:System.Windows.Forms.TextBox>。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-656">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="1bd5f-657">若要執行範例程式碼，將它貼到包含類型的執行個體的專案<xref:System.Windows.Forms.Form>名為`Form1`。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-657">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.Form> named `Form1`.</span></span> <span data-ttu-id="1bd5f-658">請確定 與關聯的事件處理常式<xref:System.Windows.Forms.Form.MdiChildActivate>事件。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-658">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.Form.MdiChildActivate> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#397](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#397)]
 [!code-vb[System.Windows.Forms.EventExamples#397](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#397)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Form.OnMdiChildActivate(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="MdiChildren">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Form[] MdiChildren { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Form[] MdiChildren" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.MdiChildren" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MdiChildren As Form()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Windows::Forms::Form ^&gt; ^ MdiChildren { cli::array &lt;System::Windows::Forms::Form ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MdiChildren : System.Windows.Forms.Form[]" Usage="System.Windows.Forms.Form.MdiChildren" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Form[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1bd5f-659">Gets an array of forms that represent the multiple-document interface (MDI) child forms that are parented to this form.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-659">Gets an array of forms that represent the multiple-document interface (MDI) child forms that are parented to this form.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1bd5f-660">
            <see cref="T:System.Windows.Forms.Form" /> 物件的陣列，每個物件會各自識別這個表單的其中一個 MDI 子表單。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-660">An array of <see cref="T:System.Windows.Forms.Form" /> objects, each of which identifies one of this form's MDI child forms.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bd5f-661">這個屬性可讓您取得目前開啟的 MDI 父表單中的所有 MDI 子表單的參考。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-661">This property allows you to obtain references to all the MDI child forms currently opened in an MDI parent form.</span></span> <span data-ttu-id="1bd5f-662">若要建立 MDI 子表單，指派<xref:System.Windows.Forms.Form>，它就會以 MDI 父表單<xref:System.Windows.Forms.Form.MdiParent%2A>子表單的屬性。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-662">To create an MDI child form, assign the <xref:System.Windows.Forms.Form> that will be the MDI parent form to the <xref:System.Windows.Forms.Form.MdiParent%2A> property of the child form.</span></span>  
  
 <span data-ttu-id="1bd5f-663">您可以使用這個屬性來循環所有 MDI 子表單來執行作業，例如將資料儲存至資料庫，MDI 父表單關閉時或更新您的應用程式中執行的動作為基礎的子表單上的欄位。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-663">You can use this property to loop through all the MDI child forms to perform operations such as saving data to a database when the MDI parent form closes or to update fields on the child forms based on actions performed in your application.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1bd5f-664">下列程式碼範例示範如何使用<xref:System.Windows.Forms.Form.MdiChildren%2A>屬性設為逐一查看的 MDI 子表單清單，並新增<xref:System.Windows.Forms.Button>至每個控制項。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-664">The following code example demonstrates how to use the <xref:System.Windows.Forms.Form.MdiChildren%2A> property to iterate through the list of MDI child forms and add a <xref:System.Windows.Forms.Button> control to each.</span></span>  
  
 [!code-cpp[Form.MDIChildren#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Form.MDIChildren/CPP/form1.cpp#1)]
 [!code-csharp[Form.MDIChildren#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Form.MDIChildren/CS/form1.cs#1)]
 [!code-vb[Form.MDIChildren#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Form.MDIChildren/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.IsMdiChild" />
        <altmember cref="P:System.Windows.Forms.Form.IsMdiContainer" />
        <altmember cref="P:System.Windows.Forms.Form.MdiParent" />
      </Docs>
    </Member>
    <Member MemberName="MdiParent">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Form MdiParent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Form MdiParent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.MdiParent" />
      <MemberSignature Language="VB.NET" Value="Public Property MdiParent As Form" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Form ^ MdiParent { System::Windows::Forms::Form ^ get(); void set(System::Windows::Forms::Form ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MdiParent : System.Windows.Forms.Form with get, set" Usage="System.Windows.Forms.Form.MdiParent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Form</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1bd5f-665">Gets or sets the current multiple-document interface (MDI) parent form of this form.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-665">Gets or sets the current multiple-document interface (MDI) parent form of this form.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1bd5f-666">
            <see cref="T:System.Windows.Forms.Form" />，代表 MDI 父表單。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-666">A <see cref="T:System.Windows.Forms.Form" /> that represents the MDI parent form.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bd5f-667">若要建立 MDI 子表單，指派<xref:System.Windows.Forms.Form>，它就會以 MDI 父表單<xref:System.Windows.Forms.Form.MdiParent%2A>子表單的屬性。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-667">To create an MDI child form, assign the <xref:System.Windows.Forms.Form> that will be the MDI parent form to the <xref:System.Windows.Forms.Form.MdiParent%2A> property of the child form.</span></span> <span data-ttu-id="1bd5f-668">若要取得需要所有的子表單的全域資訊，或叫用方法會執行所有的子表單的動作，您可以使用這個屬性，從 MDI 子表單。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-668">You can use this property from an MDI child form to obtain global information that all child forms need or to invoke methods that perform actions to all child forms.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1bd5f-669">如果有兩個<xref:System.Windows.Forms.MenuStrip>上設定的 MDI 子表單的控制項<xref:System.Windows.Forms.Form.IsMdiContainer%2A>要`true`父表單的內容合併的其中之一<xref:System.Windows.Forms.MenuStrip>控制項。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-669">If there are two <xref:System.Windows.Forms.MenuStrip> controls on an MDI child form, setting <xref:System.Windows.Forms.Form.IsMdiContainer%2A> to `true` for the parent form merges the contents of only one of the <xref:System.Windows.Forms.MenuStrip> controls.</span></span> <span data-ttu-id="1bd5f-670">使用<xref:System.Windows.Forms.ToolStripManager.Merge%2A>合併的其他子內容<xref:System.Windows.Forms.MenuStrip>MDI 父表單上的控制項。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-670">Use <xref:System.Windows.Forms.ToolStripManager.Merge%2A> to merge the contents of additional child <xref:System.Windows.Forms.MenuStrip> controls on the MDI parent form.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1bd5f-671">下列程式碼範例示範如何建立在 MDI 應用程式中的子表單。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-671">The following code example demonstrates how to create child forms in an MDI application.</span></span> <span data-ttu-id="1bd5f-672">範例程式碼會建立具有唯一的文字，以識別子表單的表單。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-672">The example code creates a form with unique text to identify the child form.</span></span> <span data-ttu-id="1bd5f-673">此範例會使用<xref:System.Windows.Forms.Form.MdiParent%2A>屬性可指定表單是子表單。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-673">The example uses the <xref:System.Windows.Forms.Form.MdiParent%2A> property to specify that a form is a child form.</span></span> <span data-ttu-id="1bd5f-674">這個範例需要在範例中的程式碼會呼叫從表單及其<xref:System.Windows.Forms.Form.IsMdiContainer%2A>屬性設定為`true`表單具有名為私用類別層級的整數變數和`childCount`。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-674">This example requires that the code in the example is called from a form that has its <xref:System.Windows.Forms.Form.IsMdiContainer%2A> property set to `true` and that the form has a private class level integer variable named `childCount`.</span></span>  
  
 [!code-cpp[Form.MDIParent#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Form.MDIParent/CPP/form1.cpp#1)]
 [!code-csharp[Form.MDIParent#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Form.MDIParent/CS/form1.cs#1)]
 [!code-vb[Form.MDIParent#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Form.MDIParent/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">
          <span data-ttu-id="1bd5f-675">The <see cref="T:System.Windows.Forms.Form" /> assigned to this property is not marked as an MDI container.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-675">The <see cref="T:System.Windows.Forms.Form" /> assigned to this property is not marked as an MDI container.</span>
          </span>
          <span data-ttu-id="1bd5f-676">-or-  The <see cref="T:System.Windows.Forms.Form" /> assigned to this property is both a child and an MDI container form.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-676">-or-  The <see cref="T:System.Windows.Forms.Form" /> assigned to this property is both a child and an MDI container form.</span>
          </span>
          <span data-ttu-id="1bd5f-677">-or-  The <see cref="T:System.Windows.Forms.Form" /> assigned to this property is located on a different thread.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-677">-or-  The <see cref="T:System.Windows.Forms.Form" /> assigned to this property is located on a different thread.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="1bd5f-678">要求表單。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-678">for requesting a form.</span>
          </span>
          <span data-ttu-id="1bd5f-679">相關聯的列舉型別： <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-679">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</span>
          </span>
        </permission>
        <altmember cref="P:System.Windows.Forms.Form.IsMdiChild" />
        <altmember cref="P:System.Windows.Forms.Form.IsMdiContainer" />
        <altmember cref="P:System.Windows.Forms.Form.MdiChildren" />
      </Docs>
    </Member>
    <Member MemberName="Menu">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.MainMenu Menu { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.MainMenu Menu" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.Menu" />
      <MemberSignature Language="VB.NET" Value="Public Property Menu As MainMenu" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::MainMenu ^ Menu { System::Windows::Forms::MainMenu ^ get(); void set(System::Windows::Forms::MainMenu ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Menu : System.Windows.Forms.MainMenu with get, set" Usage="System.Windows.Forms.Form.Menu" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.ReferenceConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MainMenu</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1bd5f-680">Gets or sets the <see cref="T:System.Windows.Forms.MainMenu" /> that is displayed in the form.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-680">Gets or sets the <see cref="T:System.Windows.Forms.MainMenu" /> that is displayed in the form.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1bd5f-681">
            <see cref="T:System.Windows.Forms.MainMenu" />，代表要顯示在表單中的功能表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-681">A <see cref="T:System.Windows.Forms.MainMenu" /> that represents the menu to display in the form.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bd5f-682">您可以使用這個屬性在執行階段的整個功能表集合之間切換。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-682">You can use this property to switch between complete menu sets at run time.</span></span> <span data-ttu-id="1bd5f-683">例如，您可以定義一個<xref:System.Windows.Forms.MainMenu>時您的多重文件介面 (MDI) 表單具有任何作用中的 MDI 子表單，另一個要顯示<xref:System.Windows.Forms.MainMenu>子視窗會顯示時顯示。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-683">For example, you can define one <xref:System.Windows.Forms.MainMenu> to be displayed when your multiple-document interface (MDI) form has no active MDI child forms and another <xref:System.Windows.Forms.MainMenu> to display when a child window is displayed.</span></span> <span data-ttu-id="1bd5f-684">您也可以使用不同<xref:System.Windows.Forms.MainMenu>需要顯示不同的功能表設定的應用程式中的特定條件存在時。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-684">You can also use a different <xref:System.Windows.Forms.MainMenu> when specific conditions exist in your application that require displaying a different menu set.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1bd5f-685">下列程式碼範例會建立<xref:System.Windows.Forms.MainMenu>，會指派兩個<xref:System.Windows.Forms.MenuItem>物件到<xref:System.Windows.Forms.MainMenu>並將它繫結至表單。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-685">The following code example creates a <xref:System.Windows.Forms.MainMenu>, assigns two <xref:System.Windows.Forms.MenuItem> objects to the <xref:System.Windows.Forms.MainMenu> and binds it to a form.</span></span> <span data-ttu-id="1bd5f-686">此範例中，您需要<xref:System.Windows.Forms.Form>建立名為`Form1`。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-686">This example requires that you have a <xref:System.Windows.Forms.Form> created that is named `Form1`.</span></span>  
  
 [!code-cpp[Classic MainMenu.MainMenu Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic MainMenu.MainMenu Example/CPP/source.cpp#1)]
 [!code-csharp[Classic MainMenu.MainMenu Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic MainMenu.MainMenu Example/CS/source.cs#1)]
 [!code-vb[Classic MainMenu.MainMenu Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic MainMenu.MainMenu Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.MainMenu" />
        <altmember cref="T:System.Windows.Forms.MenuItem" />
        <altmember cref="T:System.Windows.Forms.Menu" />
      </Docs>
    </Member>
    <Member MemberName="MenuComplete">
      <MemberSignature Language="C#" Value="public event EventHandler MenuComplete;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler MenuComplete" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Form.MenuComplete" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MenuComplete As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ MenuComplete;" />
      <MemberSignature Language="F#" Value="member this.MenuComplete : EventHandler " Usage="member this.MenuComplete : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1bd5f-687">Occurs when the menu of a form loses focus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-687">Occurs when the menu of a form loses focus.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bd5f-688">當您按一下功能表中的任何功能表項目，會導致正在執行的命令和功能表失去焦點時，會引發這個事件。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-688">This event is raised when you click on any menu item in a menu that results in a command being performed and the menu losing focus.</span></span> <span data-ttu-id="1bd5f-689">您可以使用這個事件來執行工作，例如更新的文字<xref:System.Windows.Forms.StatusBar>控制項或啟用和停用按鈕上<xref:System.Windows.Forms.ToolBar>。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-689">You can use this event to perform tasks such as updating the text of a <xref:System.Windows.Forms.StatusBar> control or enabling and disabling buttons on a <xref:System.Windows.Forms.ToolBar>.</span></span>  
  
 <span data-ttu-id="1bd5f-690">如需有關如何處理事件的詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-690">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1bd5f-691">下列程式碼範例示範如何使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-691">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="1bd5f-692">在範例中，事件處理常式會報告一次<xref:System.Windows.Forms.Form.MenuComplete>事件。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-692">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Form.MenuComplete> event.</span></span> <span data-ttu-id="1bd5f-693">此報表可協助您了解事件發生的時機，並可協助您偵錯。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-693">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="1bd5f-694">若要報告多個事件或事件經常發生，請考慮更換<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>具有<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>或將訊息附加到多行<xref:System.Windows.Forms.TextBox>。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-694">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="1bd5f-695">若要執行範例程式碼，將它貼到包含類型的執行個體的專案<xref:System.Windows.Forms.Form>名為`Form1`。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-695">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.Form> named `Form1`.</span></span> <span data-ttu-id="1bd5f-696">請確定 與關聯的事件處理常式<xref:System.Windows.Forms.Form.MenuComplete>事件。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-696">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.Form.MenuComplete> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#398](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#398)]
 [!code-vb[System.Windows.Forms.EventExamples#398](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#398)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Form.OnMenuComplete(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="MenuStart">
      <MemberSignature Language="C#" Value="public event EventHandler MenuStart;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler MenuStart" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Form.MenuStart" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MenuStart As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ MenuStart;" />
      <MemberSignature Language="F#" Value="member this.MenuStart : EventHandler " Usage="member this.MenuStart : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1bd5f-697">Occurs when the menu of a form receives focus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-697">Occurs when the menu of a form receives focus.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bd5f-698">當使用者按下功能表中的任何功能表項目時，會引發這個事件。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-698">This event is raised when any menu item in the menu is clicked by the user.</span></span> <span data-ttu-id="1bd5f-699">您可以使用這個事件來執行工作，例如啟用和停用不應該存取使用者正在存取功能表時，表單上的控制項。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-699">You can use this event to perform tasks such as enabling and disabling controls on the form that should not be accessed by the user when the menus are being accessed.</span></span>  
  
 <span data-ttu-id="1bd5f-700">如需有關如何處理事件的詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-700">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1bd5f-701">下列程式碼範例示範如何使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-701">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="1bd5f-702">在範例中，事件處理常式會報告一次<xref:System.Windows.Forms.Form.MenuStart>事件。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-702">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Form.MenuStart> event.</span></span> <span data-ttu-id="1bd5f-703">此報表可協助您了解事件發生的時機，並可協助您偵錯。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-703">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="1bd5f-704">若要報告多個事件或事件經常發生，請考慮更換<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>具有<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>或將訊息附加到多行<xref:System.Windows.Forms.TextBox>。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-704">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="1bd5f-705">若要執行範例程式碼，將它貼到包含類型的執行個體的專案<xref:System.Windows.Forms.Form>名為`Form1`。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-705">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.Form> named `Form1`.</span></span> <span data-ttu-id="1bd5f-706">請確定 與關聯的事件處理常式<xref:System.Windows.Forms.Form.MenuStart>事件。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-706">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.Form.MenuStart> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#399](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#399)]
 [!code-vb[System.Windows.Forms.EventExamples#399](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#399)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Form.OnMenuStart(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="MergedMenu">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.MainMenu MergedMenu { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.MainMenu MergedMenu" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.MergedMenu" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MergedMenu As MainMenu" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::MainMenu ^ MergedMenu { System::Windows::Forms::MainMenu ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MergedMenu : System.Windows.Forms.MainMenu" Usage="System.Windows.Forms.Form.MergedMenu" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MainMenu</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1bd5f-707">Gets the merged menu for the form.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-707">Gets the merged menu for the form.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1bd5f-708">
            <see cref="T:System.Windows.Forms.MainMenu" />，代表表單的合併功能表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-708">A <see cref="T:System.Windows.Forms.MainMenu" /> that represents the merged menu of the form.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bd5f-709">這個屬性主要用於當表單時，將其功能表與父表單的功能表合併多重文件介面 (MDI) 子表單。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-709">This property is primarily used when the form is a multiple-document interface (MDI) child form that merges its menu with its parent form's menu.</span></span> <span data-ttu-id="1bd5f-710">若要取得目前的功能表結構 MDI 應用程式進行變更或新增至功能表結構中，您可以使用這個屬性。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-710">You can use this property to obtain the current menu structure in an MDI application to make changes or additions to the menu structure.</span></span> <span data-ttu-id="1bd5f-711">若要取得 nonmerged<xref:System.Windows.Forms.MainMenu>指派給表單時，使用<xref:System.Windows.Forms.Form.Menu%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-711">To obtain the nonmerged <xref:System.Windows.Forms.MainMenu> assigned to a form, use the <xref:System.Windows.Forms.Form.Menu%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.MainMenu" />
        <altmember cref="T:System.Windows.Forms.MenuItem" />
        <altmember cref="P:System.Windows.Forms.Form.Menu" />
      </Docs>
    </Member>
    <Member MemberName="MinimizeBox">
      <MemberSignature Language="C#" Value="public bool MinimizeBox { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MinimizeBox" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.MinimizeBox" />
      <MemberSignature Language="VB.NET" Value="Public Property MinimizeBox As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MinimizeBox { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.MinimizeBox : bool with get, set" Usage="System.Windows.Forms.Form.MinimizeBox" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1bd5f-712">Gets or sets a value indicating whether the **Minimize** button is displayed in the caption bar of the form.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-712">Gets or sets a value indicating whether the **Minimize** button is displayed in the caption bar of the form.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1bd5f-713">
            <see langword="true" /> 若要顯示 * * 在表單的最小化 按鈕否則， <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-713">
              <see langword="true" /> to display a **Minimize** button for the form; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="1bd5f-714">預設值為 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-714">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bd5f-715">A**最小化**按鈕可讓使用者以最小化視窗的圖示。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-715">A **Minimize** button enables users to minimize a window to an icon.</span></span> <span data-ttu-id="1bd5f-716">若要顯示**最小化**按鈕，表單的值<xref:System.Windows.Forms.Form.ControlBox>屬性必須是`true`，其預設值。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-716">To display a **Minimize** button, the value of the form's <xref:System.Windows.Forms.Form.ControlBox> property must be `true`, its default value.</span></span>  <span data-ttu-id="1bd5f-717"><xref:System.Windows.Forms.Form.ControlBox>屬性會決定是否在標題列右上角包含最大化 按鈕、 最小化按鈕、 說明 按鈕和 關閉 按鈕等控制項。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-717">The <xref:System.Windows.Forms.Form.ControlBox> property determines whether the upper-right corner of the caption bar contains controls such as a maximize button, a minimize button, a help button, and a close button.</span></span> <span data-ttu-id="1bd5f-718">此外，您也必須設定的表單<xref:System.Windows.Forms.Form.FormBorderStyle%2A>屬性，以<xref:System.Windows.Forms.FormBorderStyle.FixedSingle?displayProperty=nameWithType>， <xref:System.Windows.Forms.FormBorderStyle.Sizable?displayProperty=nameWithType>， <xref:System.Windows.Forms.FormBorderStyle.Fixed3D?displayProperty=nameWithType>，或<xref:System.Windows.Forms.FormBorderStyle.FixedDialog?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-718">In addition, you must also set the form's <xref:System.Windows.Forms.Form.FormBorderStyle%2A> property to <xref:System.Windows.Forms.FormBorderStyle.FixedSingle?displayProperty=nameWithType>, <xref:System.Windows.Forms.FormBorderStyle.Sizable?displayProperty=nameWithType>, <xref:System.Windows.Forms.FormBorderStyle.Fixed3D?displayProperty=nameWithType>, or <xref:System.Windows.Forms.FormBorderStyle.FixedDialog?displayProperty=nameWithType>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1bd5f-719">減少表單在執行階段會產生<xref:System.Windows.Forms.Control.Resize>事件。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-719">Minimizing a form at run time generates a <xref:System.Windows.Forms.Control.Resize> event.</span></span> <span data-ttu-id="1bd5f-720"><xref:System.Windows.Forms.Form.WindowState%2A>屬性會反映在視窗的目前狀態。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-720">The <xref:System.Windows.Forms.Form.WindowState%2A> property reflects the current state of the window.</span></span> <span data-ttu-id="1bd5f-721">如果您設定<xref:System.Windows.Forms.Form.WindowState%2A>屬性，以`FormWindowState.Minimized`，表單會獨立於任何設定，則實際上最小化<xref:System.Windows.Forms.Form.MinimizeBox%2A>和<xref:System.Windows.Forms.Form.FormBorderStyle%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-721">If you set the <xref:System.Windows.Forms.Form.WindowState%2A> property to `FormWindowState.Minimized`, the form is minimized independently of whatever settings are in effect for the <xref:System.Windows.Forms.Form.MinimizeBox%2A> and <xref:System.Windows.Forms.Form.FormBorderStyle%2A> properties.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1bd5f-722">下列程式碼範例會建立的新執行個體<xref:System.Windows.Forms.Form>，並呼叫<xref:System.Windows.Forms.Form.ShowDialog%2A>表單顯示為對話方塊中的方法。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-722">The following code example creates a new instance of a <xref:System.Windows.Forms.Form> and calls the <xref:System.Windows.Forms.Form.ShowDialog%2A> method to display the form as a dialog box.</span></span> <span data-ttu-id="1bd5f-723">範例會設定<xref:System.Windows.Forms.Form.FormBorderStyle%2A>， <xref:System.Windows.Forms.Form.AcceptButton%2A>， <xref:System.Windows.Forms.Form.CancelButton%2A>， <xref:System.Windows.Forms.Form.MinimizeBox%2A>， <xref:System.Windows.Forms.Form.MaximizeBox%2A>，和<xref:System.Windows.Forms.Form.StartPosition%2A>內容 對話方塊中變更的外觀和功能的形式。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-723">The example sets the <xref:System.Windows.Forms.Form.FormBorderStyle%2A>, <xref:System.Windows.Forms.Form.AcceptButton%2A>, <xref:System.Windows.Forms.Form.CancelButton%2A>, <xref:System.Windows.Forms.Form.MinimizeBox%2A>, <xref:System.Windows.Forms.Form.MaximizeBox%2A>, and <xref:System.Windows.Forms.Form.StartPosition%2A> properties to change the appearance and functionality of the form to a dialog box.</span></span> <span data-ttu-id="1bd5f-724">此範例也會使用<xref:System.Windows.Forms.Form.ControlCollection.Add%2A>表單的方法<xref:System.Windows.Forms.Control.Controls%2A>要加入兩個集合<xref:System.Windows.Forms.Button>控制項。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-724">The example also uses the <xref:System.Windows.Forms.Form.ControlCollection.Add%2A> method of the form's <xref:System.Windows.Forms.Control.Controls%2A> collection to add two <xref:System.Windows.Forms.Button> controls.</span></span> <span data-ttu-id="1bd5f-725">此範例會使用<xref:System.Windows.Forms.Form.HelpButton%2A>屬性 對話方塊的標題列中顯示 說明 按鈕。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-725">The example uses the <xref:System.Windows.Forms.Form.HelpButton%2A> property to display a help button in the caption bar of the dialog box.</span></span>  
  
 [!code-cpp[Classic Form.AcceptButton Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Form.AcceptButton Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Form.AcceptButton Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Form.AcceptButton Example/CS/source.cs#1)]
 [!code-vb[Classic Form.AcceptButton Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Form.AcceptButton Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.MaximizeBox" />
        <altmember cref="P:System.Windows.Forms.Form.ControlBox" />
      </Docs>
    </Member>
    <Member MemberName="MinimumSize">
      <MemberSignature Language="C#" Value="public override System.Drawing.Size MinimumSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size MinimumSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.MinimumSize" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property MinimumSize As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Size MinimumSize { System::Drawing::Size get(); void set(System::Drawing::Size value); };" />
      <MemberSignature Language="F#" Value="member this.MinimumSize : System.Drawing.Size with get, set" Usage="System.Windows.Forms.Form.MinimumSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1bd5f-726">Gets or sets the minimum size the form can be resized to.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-726">Gets or sets the minimum size the form can be resized to.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1bd5f-727">
            <see cref="T:System.Drawing.Size" />，代表表單的大小下限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-727">A <see cref="T:System.Drawing.Size" /> that represents the minimum size for the form.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bd5f-728">這個屬性可讓您指定的最小大小表單的大小限制。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-728">This property enables you to limit the size of a form to a specified minimum size.</span></span> <span data-ttu-id="1bd5f-729">您可以使用這項功能，以防止使用者調整視窗的非預期的大小。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-729">You can use this feature to prevent a user from sizing a window to an undesirable size.</span></span> <span data-ttu-id="1bd5f-730">如果這個屬性設定為<xref:System.Drawing.Size>是 0 的高度和寬度，在表單中的為 0 的物件會有沒有最小的大小，超出 Windows 所設定的限制。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-730">If this property is set to a <xref:System.Drawing.Size> object that is 0 in height and 0 in width, the form will have no minimum size beyond the limits set by Windows.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="1bd5f-731">The values of the height or width within the <see cref="T:System.Drawing.Size" /> object are less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-731">The values of the height or width within the <see cref="T:System.Drawing.Size" /> object are less than zero.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="MinimumSizeChanged">
      <MemberSignature Language="C#" Value="public event EventHandler MinimumSizeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler MinimumSizeChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Form.MinimumSizeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MinimumSizeChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ MinimumSizeChanged;" />
      <MemberSignature Language="F#" Value="member this.MinimumSizeChanged : EventHandler " Usage="member this.MinimumSizeChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1bd5f-732">Occurs when the value of the <see cref="P:System.Windows.Forms.Form.MinimumSize" /> property has changed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-732">Occurs when the value of the <see cref="P:System.Windows.Forms.Form.MinimumSize" /> property has changed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bd5f-733">如需有關如何處理事件的詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-733">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1bd5f-734">下列程式碼範例示範如何使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-734">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="1bd5f-735">在範例中，事件處理常式會報告一次<xref:System.Windows.Forms.Form.MinimumSizeChanged>事件。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-735">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Form.MinimumSizeChanged> event.</span></span> <span data-ttu-id="1bd5f-736">此報表可協助您了解事件發生的時機，並可協助您偵錯。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-736">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="1bd5f-737">若要報告多個事件或事件經常發生，請考慮更換<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>具有<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>或將訊息附加到多行<xref:System.Windows.Forms.TextBox>。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-737">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="1bd5f-738">若要執行範例程式碼，將它貼到包含類型的執行個體的專案<xref:System.Windows.Forms.Form>名為`Form1`。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-738">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.Form> named `Form1`.</span></span> <span data-ttu-id="1bd5f-739">請確定 與關聯的事件處理常式<xref:System.Windows.Forms.Form.MinimumSizeChanged>事件。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-739">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.Form.MinimumSizeChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#391](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#391)]
 [!code-vb[System.Windows.Forms.EventExamples#391](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#391)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Form.OnMinimumSizeChanged(System.EventArgs)" />
        <altmember cref="P:System.Windows.Forms.Form.MinimumSize" />
      </Docs>
    </Member>
    <Member MemberName="Modal">
      <MemberSignature Language="C#" Value="public bool Modal { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Modal" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.Modal" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Modal As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Modal { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Modal : bool" Usage="System.Windows.Forms.Form.Modal" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1bd5f-740">Gets a value indicating whether this form is displayed modally.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-740">Gets a value indicating whether this form is displayed modally.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1bd5f-741">如果要強制顯示表單，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-741">
              <see langword="true" /> if the form is displayed modally; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bd5f-742">要強制顯示表單時，可能除了強制回應表單上的物件會不發生任何輸入 （鍵盤或滑鼠按一下）。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-742">When a form is displayed modally, no input (keyboard or mouse click) can occur except to objects on the modal form.</span></span> <span data-ttu-id="1bd5f-743">程式必須隱藏或關閉強制回應表單 （通常是某些使用者動作的回應） 之前為另一種形式的輸入可能會發生。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-743">The program must hide or close a modal form (usually in response to some user action) before input to another form can occur.</span></span> <span data-ttu-id="1bd5f-744">強制顯示表單通常會當做應用程式中的對話方塊。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-744">Forms that are displayed modally are typically used as dialog boxes in an application.</span></span>  
  
 <span data-ttu-id="1bd5f-745">您可以使用這個屬性來判斷您已經取得方法或屬性的形式顯示是否要強制。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-745">You can use this property to determine whether a form that you have obtained from a method or property has been displayed modally.</span></span>  
  
 <span data-ttu-id="1bd5f-746">若要顯示表單要強制使用<xref:System.Windows.Forms.Form.ShowDialog%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-746">To display a form modally use the <xref:System.Windows.Forms.Form.ShowDialog%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1bd5f-747">下列程式碼範例使用<xref:System.Windows.Forms.Form.Modal%2A>屬性來判斷是否表單會顯示為強制回應表單。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-747">The following code example uses the <xref:System.Windows.Forms.Form.Modal%2A> property to determine if a form is displayed as a modal form.</span></span> <span data-ttu-id="1bd5f-748">如果不是<xref:System.Windows.Forms.Form.FormBorderStyle%2A>和<xref:System.Windows.Forms.Form.TopLevel%2A>屬性已變更，讓工具視窗框線非最上層表單的表單。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-748">If it is not the <xref:System.Windows.Forms.Form.FormBorderStyle%2A> and <xref:System.Windows.Forms.Form.TopLevel%2A> properties are changed to make the form a non-top-level form with a tool window border.</span></span>  
  
 [!code-cpp[Form.Modal#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Form.Modal/CPP/form1.cpp#1)]
 [!code-csharp[Form.Modal#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Form.Modal/CS/form1.cs#1)]
 [!code-vb[Form.Modal#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Form.Modal/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Form.ShowDialog" />
      </Docs>
    </Member>
    <Member MemberName="OnActivated">
      <MemberSignature Language="C#" Value="protected virtual void OnActivated (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnActivated(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnActivated(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnActivated (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnActivated(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnActivated : EventArgs -&gt; unit&#xA;override this.OnActivated : EventArgs -&gt; unit" Usage="form.OnActivated e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="1bd5f-749">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-749">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1bd5f-750">Raises the <see cref="E:System.Windows.Forms.Form.Activated" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-750">Raises the <see cref="E:System.Windows.Forms.Form.Activated" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bd5f-751">引發事件會透過委派叫用此事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-751">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="1bd5f-752">如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-752">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="1bd5f-753"><xref:System.Windows.Forms.Form.OnActivated%2A> 方法也允許衍生類別處理事件，而不用附加委派。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-753">The <xref:System.Windows.Forms.Form.OnActivated%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="1bd5f-754">覆寫這個方法是在衍生類別中處理事件的慣用的技巧。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-754">Overriding this method is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="1bd5f-755">
            <para>當覆寫<see cref="M:System.Windows.Forms.Form.OnActivated(System.EventArgs)" />衍生類別時，請務必呼叫基底類別的<see cref="M:System.Windows.Forms.Form.OnActivated(System.EventArgs)" />方法，讓已註冊的委派收到事件。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-755">
              <para>When overriding <see cref="M:System.Windows.Forms.Form.OnActivated(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Form.OnActivated(System.EventArgs)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
        <altmember cref="E:System.Windows.Forms.Form.Activated" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnBackgroundImageChanged">
      <MemberSignature Language="C#" Value="protected override void OnBackgroundImageChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnBackgroundImageChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnBackgroundImageChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnBackgroundImageChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnBackgroundImageChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnBackgroundImageChanged : EventArgs -&gt; unit" Usage="form.OnBackgroundImageChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="1bd5f-756">An <see cref="T:System.EventArgs" /> that contains the data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-756">An <see cref="T:System.EventArgs" /> that contains the data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1bd5f-757">Raises the <see cref="E:System.Windows.Forms.Control.BackgroundImageChanged" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-757">Raises the <see cref="E:System.Windows.Forms.Control.BackgroundImageChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bd5f-758">引發事件會透過委派叫用此事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-758">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="1bd5f-759">如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-759">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="1bd5f-760"><xref:System.Windows.Forms.Form.OnBackgroundImageChanged%2A> 方法也允許衍生類別處理事件，而不用附加委派。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-760">The <xref:System.Windows.Forms.Form.OnBackgroundImageChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="1bd5f-761">這是在衍生類別中處理事件的慣用技巧。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-761">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="1bd5f-762">
            <para>當覆寫<see cref="M:System.Windows.Forms.Form.OnBackgroundImageChanged(System.EventArgs)" />衍生類別時，請務必呼叫基底類別的<see cref="M:System.Windows.Forms.Form.OnBackgroundImageChanged(System.EventArgs)" />方法，讓已註冊的委派收到事件。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-762">
              <para>When overriding <see cref="M:System.Windows.Forms.Form.OnBackgroundImageChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Form.OnBackgroundImageChanged(System.EventArgs)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnBackgroundImageLayoutChanged">
      <MemberSignature Language="C#" Value="protected override void OnBackgroundImageLayoutChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnBackgroundImageLayoutChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnBackgroundImageLayoutChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnBackgroundImageLayoutChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnBackgroundImageLayoutChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnBackgroundImageLayoutChanged : EventArgs -&gt; unit" Usage="form.OnBackgroundImageLayoutChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="1bd5f-763">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-763">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1bd5f-764">Raises the <see cref="E:System.Windows.Forms.Control.BackgroundImageLayoutChanged" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-764">Raises the <see cref="E:System.Windows.Forms.Control.BackgroundImageLayoutChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bd5f-765">引發事件會透過委派叫用此事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-765">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="1bd5f-766">如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-766">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="1bd5f-767"><xref:System.Windows.Forms.Form.OnBackgroundImageLayoutChanged%2A> 方法也允許衍生類別處理事件，而不用附加委派。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-767">The <xref:System.Windows.Forms.Form.OnBackgroundImageLayoutChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="1bd5f-768">這是在衍生類別中處理事件的慣用技巧。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-768">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="1bd5f-769">
            <para>當覆寫<see cref="M:System.Windows.Forms.Form.OnBackgroundImageLayoutChanged(System.EventArgs)" />衍生類別時，請務必呼叫基底類別的<see cref="M:System.Windows.Forms.Form.OnBackgroundImageLayoutChanged(System.EventArgs)" />方法，讓已註冊的委派收到事件。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-769">
              <para>When overriding <see cref="M:System.Windows.Forms.Form.OnBackgroundImageLayoutChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Form.OnBackgroundImageLayoutChanged(System.EventArgs)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnClosed">
      <MemberSignature Language="C#" Value="protected virtual void OnClosed (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnClosed(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnClosed(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnClosed (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnClosed(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnClosed : EventArgs -&gt; unit&#xA;override this.OnClosed : EventArgs -&gt; unit" Usage="form.OnClosed e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="1bd5f-770">The <see cref="T:System.EventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-770">The <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1bd5f-771">Raises the <see cref="E:System.Windows.Forms.Form.Closed" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-771">Raises the <see cref="E:System.Windows.Forms.Form.Closed" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!CAUTION]
>  <span data-ttu-id="1bd5f-772"><xref:System.Windows.Forms.Form.OnClosed%2A>方法已經過時，.NET Framework 2.0 版中，使用<xref:System.Windows.Forms.Form.OnFormClosed%2A>方法改為。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-772">The <xref:System.Windows.Forms.Form.OnClosed%2A> method is obsolete in the .NET Framework version 2.0; use the <xref:System.Windows.Forms.Form.OnFormClosed%2A> method instead.</span></span>  
  
 <span data-ttu-id="1bd5f-773">引發事件會透過委派叫用此事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-773">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="1bd5f-774">如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-774">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="1bd5f-775"><xref:System.Windows.Forms.Form.OnFormClosed%2A> 方法也允許衍生類別處理事件，而不用附加委派。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-775">The <xref:System.Windows.Forms.Form.OnFormClosed%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="1bd5f-776">覆寫這個方法是在衍生類別中處理事件的慣用的技巧。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-776">Overriding this method is the preferred technique for handling the event in a derived class.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="1bd5f-777"><xref:System.Windows.Forms.Form.OnClosed%2A>並<xref:System.Windows.Forms.Form.OnClosing%2A>方法不會呼叫時<xref:System.Windows.Forms.Application.Exit%2A?displayProperty=nameWithType>會呼叫方法以結束您的應用程式。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-777">The <xref:System.Windows.Forms.Form.OnClosed%2A> and <xref:System.Windows.Forms.Form.OnClosing%2A> methods are not called when the <xref:System.Windows.Forms.Application.Exit%2A?displayProperty=nameWithType> method is called to exit your application.</span></span> <span data-ttu-id="1bd5f-778">如果您在驗證程式碼必須執行下列方法之一，就應該呼叫<xref:System.Windows.Forms.Form.Close%2A?displayProperty=nameWithType>方法，為每個開啟的表單，然後再呼叫個別<xref:System.Windows.Forms.Application.Exit%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-778">If you have validation code in either of these methods that must be executed, you should call the <xref:System.Windows.Forms.Form.Close%2A?displayProperty=nameWithType> method for each open form individually before calling the <xref:System.Windows.Forms.Application.Exit%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1bd5f-779">下列程式碼範例示範如何覆寫<xref:System.Windows.Forms.Form.OnClosed%2A>從衍生類別中的方法<xref:System.Windows.Forms.Form>。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-779">The following code example demonstrates how to override the <xref:System.Windows.Forms.Form.OnClosed%2A> method in a class derived from <xref:System.Windows.Forms.Form> .</span></span>  
  
 [!code-cpp[System.Drawing.PointsAndSizes#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.PointsAndSizes/CPP/form1.cpp#6)]
 [!code-csharp[System.Drawing.PointsAndSizes#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.PointsAndSizes/CS/form1.cs#6)]
 [!code-vb[System.Drawing.PointsAndSizes#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.PointsAndSizes/VB/form1.vb#6)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="1bd5f-780">
            <para>當覆寫<see cref="M:System.Windows.Forms.Form.OnClosed(System.EventArgs)" />衍生類別時，請務必呼叫基底類別的<see cref="M:System.Windows.Forms.Form.OnClosed(System.EventArgs)" />方法，讓已註冊的委派收到事件。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-780">
              <para>When overriding <see cref="M:System.Windows.Forms.Form.OnClosed(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Form.OnClosed(System.EventArgs)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
        <altmember cref="E:System.Windows.Forms.Form.Closed" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnClosing">
      <MemberSignature Language="C#" Value="protected virtual void OnClosing (System.ComponentModel.CancelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnClosing(class System.ComponentModel.CancelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnClosing(System.ComponentModel.CancelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnClosing (e As CancelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnClosing(System::ComponentModel::CancelEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnClosing : System.ComponentModel.CancelEventArgs -&gt; unit&#xA;override this.OnClosing : System.ComponentModel.CancelEventArgs -&gt; unit" Usage="form.OnClosing e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.CancelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="1bd5f-781">A <see cref="T:System.ComponentModel.CancelEventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-781">A <see cref="T:System.ComponentModel.CancelEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1bd5f-782">Raises the <see cref="E:System.Windows.Forms.Form.Closing" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-782">Raises the <see cref="E:System.Windows.Forms.Form.Closing" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!CAUTION]
>  <span data-ttu-id="1bd5f-783"><xref:System.Windows.Forms.Form.OnClosing%2A>方法已經過時，.NET Framework 2.0 版中，使用<xref:System.Windows.Forms.Form.OnFormClosing%2A>方法改為。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-783">The <xref:System.Windows.Forms.Form.OnClosing%2A> method is obsolete in the .NET Framework version 2.0; use the <xref:System.Windows.Forms.Form.OnFormClosing%2A> method instead.</span></span>  
  
 <span data-ttu-id="1bd5f-784">引發事件會透過委派叫用此事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-784">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="1bd5f-785">如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-785">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="1bd5f-786"><xref:System.Windows.Forms.Form.OnClosing%2A> 方法也允許衍生類別處理事件，而不用附加委派。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-786">The <xref:System.Windows.Forms.Form.OnClosing%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="1bd5f-787">覆寫這個方法是在衍生類別中處理事件的慣用的技巧。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-787">Overriding this method is the preferred technique for handling the event in a derived class.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="1bd5f-788"><xref:System.Windows.Forms.Form.OnClosed%2A>並<xref:System.Windows.Forms.Form.OnClosing%2A>方法不會呼叫時<xref:System.Windows.Forms.Application.Exit%2A?displayProperty=nameWithType>會呼叫方法以結束您的應用程式。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-788">The <xref:System.Windows.Forms.Form.OnClosed%2A> and <xref:System.Windows.Forms.Form.OnClosing%2A> methods are not called when the <xref:System.Windows.Forms.Application.Exit%2A?displayProperty=nameWithType> method is called to exit your application.</span></span> <span data-ttu-id="1bd5f-789">如果您在驗證程式碼必須執行下列方法之一，就應該呼叫<xref:System.Windows.Forms.Form.Close%2A?displayProperty=nameWithType>方法，為每個開啟的表單，然後再呼叫個別<xref:System.Windows.Forms.Application.Exit%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-789">If you have validation code in either of these methods that must be executed, you should call the <xref:System.Windows.Forms.Form.Close%2A?displayProperty=nameWithType> method for each open form individually before calling the <xref:System.Windows.Forms.Application.Exit%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1bd5f-790">下列程式碼範例會使用<xref:System.Windows.Forms.Form.Closing>若要測試中的文字<xref:System.Windows.Forms.TextBox>已變更。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-790">The following code example uses <xref:System.Windows.Forms.Form.Closing> to test if the text in a <xref:System.Windows.Forms.TextBox> has changed.</span></span> <span data-ttu-id="1bd5f-791">如果是，使用者會詢問是否要將變更儲存至檔案。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-791">If it has, the user is asked whether to save the changes to a file.</span></span>  
  
 [!code-cpp[Form.Closing#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Form.Closing/CPP/form1.cpp#1)]
 [!code-csharp[Form.Closing#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Form.Closing/CS/form1.cs#1)]
 [!code-vb[Form.Closing#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Form.Closing/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="1bd5f-792">
            <para>當覆寫<see cref="M:System.Windows.Forms.Form.OnClosing(System.ComponentModel.CancelEventArgs)" />衍生類別時，請務必呼叫基底類別的<see cref="M:System.Windows.Forms.Form.OnClosing(System.ComponentModel.CancelEventArgs)" />方法，讓已註冊的委派收到事件。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-792">
              <para>When overriding <see cref="M:System.Windows.Forms.Form.OnClosing(System.ComponentModel.CancelEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Form.OnClosing(System.ComponentModel.CancelEventArgs)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
        <altmember cref="E:System.Windows.Forms.Form.Closing" />
        <altmember cref="T:System.ComponentModel.CancelEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnCreateControl">
      <MemberSignature Language="C#" Value="protected override void OnCreateControl ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnCreateControl() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnCreateControl" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnCreateControl ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnCreateControl();" />
      <MemberSignature Language="F#" Value="override this.OnCreateControl : unit -&gt; unit" Usage="form.OnCreateControl " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1bd5f-793">Raises the <see langword="CreateControl" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-793">Raises the <see langword="CreateControl" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bd5f-794">引發事件會透過委派叫用此事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-794">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="1bd5f-795">如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-795">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="1bd5f-796">
            <para>當覆寫<see cref="M:System.Windows.Forms.Form.OnCreateControl" />衍生類別時，請務必呼叫基底類別的<see cref="M:System.Windows.Forms.Form.OnCreateControl" />方法。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-796">
              <para>When overriding <see cref="M:System.Windows.Forms.Form.OnCreateControl" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Form.OnCreateControl" /> method.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnDeactivate">
      <MemberSignature Language="C#" Value="protected virtual void OnDeactivate (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDeactivate(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnDeactivate(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDeactivate (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDeactivate(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDeactivate : EventArgs -&gt; unit&#xA;override this.OnDeactivate : EventArgs -&gt; unit" Usage="form.OnDeactivate e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="1bd5f-797">The <see cref="T:System.EventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-797">The <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1bd5f-798">Raises the <see cref="E:System.Windows.Forms.Form.Deactivate" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-798">Raises the <see cref="E:System.Windows.Forms.Form.Deactivate" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bd5f-799">引發事件會透過委派叫用此事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-799">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="1bd5f-800">如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-800">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="1bd5f-801"><xref:System.Windows.Forms.Form.OnDeactivate%2A> 方法也允許衍生類別處理事件，而不用附加委派。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-801">The <xref:System.Windows.Forms.Form.OnDeactivate%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="1bd5f-802">這是在衍生類別中處理事件的慣用技巧。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-802">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="1bd5f-803">
            <para>當覆寫<see cref="M:System.Windows.Forms.Form.OnDeactivate(System.EventArgs)" />衍生類別時，請務必呼叫基底類別的<see cref="M:System.Windows.Forms.Form.OnDeactivate(System.EventArgs)" />方法，讓已註冊的委派收到事件。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-803">
              <para>When overriding <see cref="M:System.Windows.Forms.Form.OnDeactivate(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Form.OnDeactivate(System.EventArgs)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
        <altmember cref="E:System.Windows.Forms.Form.Deactivate" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnDpiChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnDpiChanged (System.Windows.Forms.DpiChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDpiChanged(class System.Windows.Forms.DpiChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnDpiChanged(System.Windows.Forms.DpiChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDpiChanged (e As DpiChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDpiChanged(System::Windows::Forms::DpiChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDpiChanged : System.Windows.Forms.DpiChangedEventArgs -&gt; unit&#xA;override this.OnDpiChanged : System.Windows.Forms.DpiChangedEventArgs -&gt; unit" Usage="form.OnDpiChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DpiChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="1bd5f-804">An <see cref="T:System.Windows.Forms.DpiChangedEventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-804">An <see cref="T:System.Windows.Forms.DpiChangedEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1bd5f-805">Raises the <see cref="E:System.Windows.Forms.Form.DpiChanged" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-805">Raises the <see cref="E:System.Windows.Forms.Form.DpiChanged" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEnabledChanged">
      <MemberSignature Language="C#" Value="protected override void OnEnabledChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnEnabledChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnEnabledChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnEnabledChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnEnabledChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnEnabledChanged : EventArgs -&gt; unit" Usage="form.OnEnabledChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="1bd5f-806">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-806">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1bd5f-807">Raises the <see cref="E:System.Windows.Forms.Control.EnabledChanged" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-807">Raises the <see cref="E:System.Windows.Forms.Control.EnabledChanged" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnEnabledChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnEnter">
      <MemberSignature Language="C#" Value="protected override void OnEnter (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnEnter(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnEnter(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnEnter (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnEnter(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnEnter : EventArgs -&gt; unit" Usage="form.OnEnter e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="1bd5f-808">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-808">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1bd5f-809">Raises the <see cref="E:System.Windows.Forms.Control.Enter" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-809">Raises the <see cref="E:System.Windows.Forms.Control.Enter" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bd5f-810">引發事件會透過委派叫用此事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-810">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="1bd5f-811">如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-811">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="1bd5f-812"><xref:System.Windows.Forms.Form.OnEnter%2A> 方法也允許衍生類別處理事件，而不用附加委派。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-812">The <xref:System.Windows.Forms.Form.OnEnter%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="1bd5f-813">這是在衍生類別中處理事件的慣用技巧。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-813">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="1bd5f-814">
            <para>當覆寫<see cref="M:System.Windows.Forms.Form.OnEnter(System.EventArgs)" />衍生類別時，請務必呼叫基底類別的<see cref="M:System.Windows.Forms.Form.OnEnter(System.EventArgs)" />方法，讓已註冊的委派收到事件。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-814">
              <para>When overriding <see cref="M:System.Windows.Forms.Form.OnEnter(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Form.OnEnter(System.EventArgs)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnFontChanged">
      <MemberSignature Language="C#" Value="protected override void OnFontChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnFontChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnFontChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnFontChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnFontChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnFontChanged : EventArgs -&gt; unit" Usage="form.OnFontChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="1bd5f-815">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-815">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1bd5f-816">Raises the <see cref="E:System.Windows.Forms.Control.FontChanged" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-816">Raises the <see cref="E:System.Windows.Forms.Control.FontChanged" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.ContainerControl.OnFontChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnFormClosed">
      <MemberSignature Language="C#" Value="protected virtual void OnFormClosed (System.Windows.Forms.FormClosedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnFormClosed(class System.Windows.Forms.FormClosedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnFormClosed(System.Windows.Forms.FormClosedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnFormClosed (e As FormClosedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnFormClosed(System::Windows::Forms::FormClosedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnFormClosed : System.Windows.Forms.FormClosedEventArgs -&gt; unit&#xA;override this.OnFormClosed : System.Windows.Forms.FormClosedEventArgs -&gt; unit" Usage="form.OnFormClosed e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.FormClosedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="1bd5f-817">A <see cref="T:System.Windows.Forms.FormClosedEventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-817">A <see cref="T:System.Windows.Forms.FormClosedEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1bd5f-818">Raises the <see cref="E:System.Windows.Forms.Form.FormClosed" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-818">Raises the <see cref="E:System.Windows.Forms.Form.FormClosed" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bd5f-819"><xref:System.Windows.Forms.Form.OnFormClosing%2A>方法會從目前的表單中移除<xref:System.Windows.Forms.Application.OpenForms%2A>相關聯的集合<xref:System.Windows.Forms.Application>。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-819">The <xref:System.Windows.Forms.Form.OnFormClosing%2A> method removes the current form from the <xref:System.Windows.Forms.Application.OpenForms%2A> collection of the associated <xref:System.Windows.Forms.Application>.</span></span>  
  
 <span data-ttu-id="1bd5f-820">引發事件會透過委派叫用此事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-820">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="1bd5f-821">如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-821">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="1bd5f-822"><xref:System.Windows.Forms.Form.OnFormClosed%2A> 方法也允許衍生類別處理事件，而不用附加委派。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-822">The <xref:System.Windows.Forms.Form.OnFormClosed%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="1bd5f-823">覆寫這個方法是在衍生類別中處理事件的慣用的技巧。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-823">Overriding this method is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="1bd5f-824">
            <para>當覆寫<see cref="M:System.Windows.Forms.Form.OnFormClosed(System.Windows.Forms.FormClosedEventArgs)" />衍生類別時，請務必呼叫基底類別的<see cref="M:System.Windows.Forms.Form.OnFormClosed(System.Windows.Forms.FormClosedEventArgs)" />方法，讓已註冊的委派收到事件。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-824">
              <para>When overriding <see cref="M:System.Windows.Forms.Form.OnFormClosed(System.Windows.Forms.FormClosedEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Form.OnFormClosed(System.Windows.Forms.FormClosedEventArgs)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
        <altmember cref="E:System.Windows.Forms.Form.FormClosed" />
        <altmember cref="M:System.Windows.Forms.Form.OnFormClosing(System.Windows.Forms.FormClosingEventArgs)" />
        <altmember cref="M:System.Windows.Forms.Form.OnActivated(System.EventArgs)" />
        <altmember cref="M:System.Windows.Forms.Form.OnLoad(System.EventArgs)" />
        <altmember cref="M:System.Windows.Forms.Form.OnShown(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnFormClosing">
      <MemberSignature Language="C#" Value="protected virtual void OnFormClosing (System.Windows.Forms.FormClosingEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnFormClosing(class System.Windows.Forms.FormClosingEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnFormClosing(System.Windows.Forms.FormClosingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnFormClosing (e As FormClosingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnFormClosing(System::Windows::Forms::FormClosingEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnFormClosing : System.Windows.Forms.FormClosingEventArgs -&gt; unit&#xA;override this.OnFormClosing : System.Windows.Forms.FormClosingEventArgs -&gt; unit" Usage="form.OnFormClosing e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.FormClosingEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="1bd5f-825">A <see cref="T:System.Windows.Forms.FormClosingEventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-825">A <see cref="T:System.Windows.Forms.FormClosingEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1bd5f-826">Raises the <see cref="E:System.Windows.Forms.Form.FormClosing" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-826">Raises the <see cref="E:System.Windows.Forms.Form.FormClosing" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bd5f-827">引發事件會透過委派叫用此事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-827">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="1bd5f-828">如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-828">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="1bd5f-829"><xref:System.Windows.Forms.Form.OnFormClosing%2A> 方法也允許衍生類別處理事件，而不用附加委派。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-829">The <xref:System.Windows.Forms.Form.OnFormClosing%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="1bd5f-830">這是在衍生類別中處理事件的慣用技巧。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-830">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="1bd5f-831">
            <para>當覆寫<see cref="M:System.Windows.Forms.Form.OnFormClosing(System.Windows.Forms.FormClosingEventArgs)" />衍生類別時，請務必呼叫基底類別的<see cref="M:System.Windows.Forms.Form.OnFormClosing(System.Windows.Forms.FormClosingEventArgs)" />方法，讓已註冊的委派收到事件。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-831">
              <para>When overriding <see cref="M:System.Windows.Forms.Form.OnFormClosing(System.Windows.Forms.FormClosingEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Form.OnFormClosing(System.Windows.Forms.FormClosingEventArgs)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
        <altmember cref="E:System.Windows.Forms.Form.FormClosing" />
        <altmember cref="M:System.Windows.Forms.Form.OnFormClosed(System.Windows.Forms.FormClosedEventArgs)" />
        <altmember cref="M:System.Windows.Forms.Form.OnActivated(System.EventArgs)" />
        <altmember cref="M:System.Windows.Forms.Form.OnLoad(System.EventArgs)" />
        <altmember cref="M:System.Windows.Forms.Form.OnShown(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnGetDpiScaledSize">
      <MemberSignature Language="C#" Value="protected virtual bool OnGetDpiScaledSize (int deviceDpiOld, int deviceDpiNew, ref System.Drawing.Size desiredSize);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool OnGetDpiScaledSize(int32 deviceDpiOld, int32 deviceDpiNew, valuetype System.Drawing.Size&amp; desiredSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnGetDpiScaledSize(System.Int32,System.Int32,System.Drawing.Size@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnGetDpiScaledSize (deviceDpiOld As Integer, deviceDpiNew As Integer, ByRef desiredSize As Size) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool OnGetDpiScaledSize(int deviceDpiOld, int deviceDpiNew, System::Drawing::Size % desiredSize);" />
      <MemberSignature Language="F#" Value="abstract member OnGetDpiScaledSize : int * int *  -&gt; bool&#xA;override this.OnGetDpiScaledSize : int * int *  -&gt; bool" Usage="form.OnGetDpiScaledSize (deviceDpiOld, deviceDpiNew, desiredSize)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deviceDpiOld" Type="System.Int32" />
        <Parameter Name="deviceDpiNew" Type="System.Int32" />
        <Parameter Name="desiredSize" Type="System.Drawing.Size&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="deviceDpiOld">
          <span data-ttu-id="1bd5f-832">The DPI value for the display device where the form was previously displayed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-832">The DPI value for the display device where the form was previously displayed.</span>
          </span>
        </param>
        <param name="deviceDpiNew">
          <span data-ttu-id="1bd5f-833">The DPI value for the display device where the form will be displayed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-833">The DPI value for the display device where the form will be displayed.</span>
          </span>
        </param>
        <param name="desiredSize">
          <span data-ttu-id="1bd5f-834">A <see cref="T:System.Drawing.Size" /> representing the new size of the form based on the new DPI value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-834">A <see cref="T:System.Drawing.Size" /> representing the new size of the form based on the new DPI value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1bd5f-835">Raises the GetDpiScaledSize event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-835">Raises the GetDpiScaledSize event.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1bd5f-836">
            <see langword="true" /> if successful; otherwise <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-836">
              <see langword="true" /> if successful; otherwise <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnHandleCreated">
      <MemberSignature Language="C#" Value="protected override void OnHandleCreated (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnHandleCreated(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnHandleCreated(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnHandleCreated (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnHandleCreated(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnHandleCreated : EventArgs -&gt; unit" Usage="form.OnHandleCreated e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="1bd5f-837">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-837">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1bd5f-838">Raises the <see cref="E:System.Windows.Forms.Control.HandleCreated" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-838">Raises the <see cref="E:System.Windows.Forms.Control.HandleCreated" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnHandleCreated(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnHandleDestroyed">
      <MemberSignature Language="C#" Value="protected override void OnHandleDestroyed (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnHandleDestroyed(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnHandleDestroyed(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnHandleDestroyed (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnHandleDestroyed(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnHandleDestroyed : EventArgs -&gt; unit" Usage="form.OnHandleDestroyed e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="1bd5f-839">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-839">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1bd5f-840">Raises the <see cref="E:System.Windows.Forms.Control.HandleDestroyed" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-840">Raises the <see cref="E:System.Windows.Forms.Control.HandleDestroyed" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnHandleDestroyed(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnHelpButtonClicked">
      <MemberSignature Language="C#" Value="protected virtual void OnHelpButtonClicked (System.ComponentModel.CancelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnHelpButtonClicked(class System.ComponentModel.CancelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnHelpButtonClicked(System.ComponentModel.CancelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnHelpButtonClicked (e As CancelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnHelpButtonClicked(System::ComponentModel::CancelEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnHelpButtonClicked : System.ComponentModel.CancelEventArgs -&gt; unit&#xA;override this.OnHelpButtonClicked : System.ComponentModel.CancelEventArgs -&gt; unit" Usage="form.OnHelpButtonClicked e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.CancelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="1bd5f-841">A <see cref="T:System.ComponentModel.CancelEventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-841">A <see cref="T:System.ComponentModel.CancelEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1bd5f-842">Raises the <see cref="E:System.Windows.Forms.Form.HelpButtonClicked" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-842">Raises the <see cref="E:System.Windows.Forms.Form.HelpButtonClicked" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bd5f-843">引發事件會透過委派叫用此事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-843">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="1bd5f-844">如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-844">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="1bd5f-845"><xref:System.Windows.Forms.Form.OnHelpButtonClicked%2A> 方法也允許衍生類別處理事件，而不用附加委派。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-845">The <xref:System.Windows.Forms.Form.OnHelpButtonClicked%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="1bd5f-846">這是在衍生類別中處理事件的慣用技巧。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-846">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="1bd5f-847">
            <para>當覆寫<see cref="M:System.Windows.Forms.Form.OnHelpButtonClicked(System.ComponentModel.CancelEventArgs)" />衍生類別時，請務必呼叫基底類別的<see cref="M:System.Windows.Forms.Form.OnHelpButtonClicked(System.ComponentModel.CancelEventArgs)" />方法，讓已註冊的委派收到事件。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-847">
              <para>When overriding <see cref="M:System.Windows.Forms.Form.OnHelpButtonClicked(System.ComponentModel.CancelEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Form.OnHelpButtonClicked(System.ComponentModel.CancelEventArgs)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
        <altmember cref="E:System.Windows.Forms.Form.HelpButtonClicked" />
        <altmember cref="E:System.Windows.Forms.Control.QueryAccessibilityHelp" />
        <altmember cref="M:System.Windows.Forms.Control.OnHelpRequested(System.Windows.Forms.HelpEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnInputLanguageChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnInputLanguageChanged (System.Windows.Forms.InputLanguageChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnInputLanguageChanged(class System.Windows.Forms.InputLanguageChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnInputLanguageChanged(System.Windows.Forms.InputLanguageChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnInputLanguageChanged (e As InputLanguageChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnInputLanguageChanged(System::Windows::Forms::InputLanguageChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnInputLanguageChanged : System.Windows.Forms.InputLanguageChangedEventArgs -&gt; unit&#xA;override this.OnInputLanguageChanged : System.Windows.Forms.InputLanguageChangedEventArgs -&gt; unit" Usage="form.OnInputLanguageChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.InputLanguageChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="1bd5f-848">The <see cref="T:System.Windows.Forms.InputLanguageChangedEventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-848">The <see cref="T:System.Windows.Forms.InputLanguageChangedEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1bd5f-849">Raises the <see cref="E:System.Windows.Forms.Form.InputLanguageChanged" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-849">Raises the <see cref="E:System.Windows.Forms.Form.InputLanguageChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bd5f-850">引發事件會透過委派叫用此事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-850">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="1bd5f-851">如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-851">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="1bd5f-852"><xref:System.Windows.Forms.Form.OnInputLanguageChanged%2A> 方法也允許衍生類別處理事件，而不用附加委派。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-852">The <xref:System.Windows.Forms.Form.OnInputLanguageChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="1bd5f-853">這是在衍生類別中處理事件的慣用技巧。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-853">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="1bd5f-854">
            <para>當覆寫<see cref="M:System.Windows.Forms.Form.OnInputLanguageChanged(System.Windows.Forms.InputLanguageChangedEventArgs)" />衍生類別時，請務必呼叫基底類別的<see cref="M:System.Windows.Forms.Form.OnInputLanguageChanged(System.Windows.Forms.InputLanguageChangedEventArgs)" />方法，讓已註冊的委派收到事件。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-854">
              <para>When overriding <see cref="M:System.Windows.Forms.Form.OnInputLanguageChanged(System.Windows.Forms.InputLanguageChangedEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Form.OnInputLanguageChanged(System.Windows.Forms.InputLanguageChangedEventArgs)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
        <altmember cref="E:System.Windows.Forms.Form.InputLanguageChanged" />
        <altmember cref="T:System.Windows.Forms.InputLanguageChangedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnInputLanguageChanging">
      <MemberSignature Language="C#" Value="protected virtual void OnInputLanguageChanging (System.Windows.Forms.InputLanguageChangingEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnInputLanguageChanging(class System.Windows.Forms.InputLanguageChangingEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnInputLanguageChanging(System.Windows.Forms.InputLanguageChangingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnInputLanguageChanging (e As InputLanguageChangingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnInputLanguageChanging(System::Windows::Forms::InputLanguageChangingEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnInputLanguageChanging : System.Windows.Forms.InputLanguageChangingEventArgs -&gt; unit&#xA;override this.OnInputLanguageChanging : System.Windows.Forms.InputLanguageChangingEventArgs -&gt; unit" Usage="form.OnInputLanguageChanging e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.InputLanguageChangingEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="1bd5f-855">The <see cref="T:System.Windows.Forms.InputLanguageChangingEventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-855">The <see cref="T:System.Windows.Forms.InputLanguageChangingEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1bd5f-856">Raises the <see cref="E:System.Windows.Forms.Form.InputLanguageChanging" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-856">Raises the <see cref="E:System.Windows.Forms.Form.InputLanguageChanging" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bd5f-857">引發事件會透過委派叫用此事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-857">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="1bd5f-858">如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-858">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="1bd5f-859"><xref:System.Windows.Forms.Form.OnInputLanguageChanging%2A> 方法也允許衍生類別處理事件，而不用附加委派。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-859">The <xref:System.Windows.Forms.Form.OnInputLanguageChanging%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="1bd5f-860">這是在衍生類別中處理事件的慣用技巧。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-860">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="1bd5f-861">
            <para>當覆寫<see cref="M:System.Windows.Forms.Form.OnInputLanguageChanging(System.Windows.Forms.InputLanguageChangingEventArgs)" />衍生類別時，請務必呼叫基底類別的<see cref="M:System.Windows.Forms.Form.OnInputLanguageChanging(System.Windows.Forms.InputLanguageChangingEventArgs)" />方法，讓已註冊的委派收到事件。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-861">
              <para>When overriding <see cref="M:System.Windows.Forms.Form.OnInputLanguageChanging(System.Windows.Forms.InputLanguageChangingEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Form.OnInputLanguageChanging(System.Windows.Forms.InputLanguageChangingEventArgs)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
        <altmember cref="E:System.Windows.Forms.Form.InputLanguageChanging" />
        <altmember cref="T:System.Windows.Forms.InputLanguageChangingEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnLayout">
      <MemberSignature Language="C#" Value="protected override void OnLayout (System.Windows.Forms.LayoutEventArgs levent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnLayout(class System.Windows.Forms.LayoutEventArgs levent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnLayout(System.Windows.Forms.LayoutEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnLayout (levent As LayoutEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnLayout(System::Windows::Forms::LayoutEventArgs ^ levent);" />
      <MemberSignature Language="F#" Value="override this.OnLayout : System.Windows.Forms.LayoutEventArgs -&gt; unit" Usage="form.OnLayout levent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="levent" Type="System.Windows.Forms.LayoutEventArgs" />
      </Parameters>
      <Docs>
        <param name="levent">
          <span data-ttu-id="1bd5f-862">The event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-862">The event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1bd5f-863">Raises the <see cref="E:System.Windows.Forms.Control.Layout" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-863">Raises the <see cref="E:System.Windows.Forms.Control.Layout" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnLoad">
      <MemberSignature Language="C#" Value="protected virtual void OnLoad (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnLoad(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnLoad(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnLoad (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnLoad(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnLoad : EventArgs -&gt; unit&#xA;override this.OnLoad : EventArgs -&gt; unit" Usage="form.OnLoad e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="1bd5f-864">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-864">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1bd5f-865">Raises the <see cref="E:System.Windows.Forms.Form.Load" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-865">Raises the <see cref="E:System.Windows.Forms.Form.Load" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bd5f-866">引發事件會透過委派叫用此事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-866">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="1bd5f-867">如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-867">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="1bd5f-868"><xref:System.Windows.Forms.Form.OnLoad%2A> 方法也允許衍生類別處理事件，而不用附加委派。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-868">The <xref:System.Windows.Forms.Form.OnLoad%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="1bd5f-869">這是在衍生類別中處理事件的慣用技巧。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-869">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="1bd5f-870">
            <para>當覆寫<see cref="M:System.Windows.Forms.Form.OnLoad(System.EventArgs)" />衍生類別時，請務必呼叫基底類別的<see cref="M:System.Windows.Forms.Form.OnLoad(System.EventArgs)" />方法，讓已註冊的委派收到事件。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-870">
              <para>When overriding <see cref="M:System.Windows.Forms.Form.OnLoad(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Form.OnLoad(System.EventArgs)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
        <altmember cref="E:System.Windows.Forms.Form.Load" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnMaximizedBoundsChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnMaximizedBoundsChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMaximizedBoundsChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnMaximizedBoundsChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMaximizedBoundsChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMaximizedBoundsChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMaximizedBoundsChanged : EventArgs -&gt; unit&#xA;override this.OnMaximizedBoundsChanged : EventArgs -&gt; unit" Usage="form.OnMaximizedBoundsChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="1bd5f-871">The <see cref="T:System.EventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-871">The <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1bd5f-872">Raises the <see cref="E:System.Windows.Forms.Form.MaximizedBoundsChanged" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-872">Raises the <see cref="E:System.Windows.Forms.Form.MaximizedBoundsChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bd5f-873">引發事件會透過委派叫用此事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-873">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="1bd5f-874">如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-874">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="1bd5f-875"><xref:System.Windows.Forms.Form.OnMaximizedBoundsChanged%2A> 方法也允許衍生類別處理事件，而不用附加委派。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-875">The <xref:System.Windows.Forms.Form.OnMaximizedBoundsChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="1bd5f-876">這是在衍生類別中處理事件的慣用技巧。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-876">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="1bd5f-877">
            <para>當覆寫<see cref="M:System.Windows.Forms.Form.OnMaximizedBoundsChanged(System.EventArgs)" />衍生類別時，請務必呼叫基底類別的<see cref="M:System.Windows.Forms.Form.OnMaximizedBoundsChanged(System.EventArgs)" />方法，讓已註冊的委派收到事件。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-877">
              <para>When overriding <see cref="M:System.Windows.Forms.Form.OnMaximizedBoundsChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Form.OnMaximizedBoundsChanged(System.EventArgs)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
        <altmember cref="P:System.Windows.Forms.Form.MaximizedBounds" />
        <altmember cref="E:System.Windows.Forms.Form.MaximizedBoundsChanged" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnMaximumSizeChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnMaximumSizeChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMaximumSizeChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnMaximumSizeChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMaximumSizeChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMaximumSizeChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMaximumSizeChanged : EventArgs -&gt; unit&#xA;override this.OnMaximumSizeChanged : EventArgs -&gt; unit" Usage="form.OnMaximumSizeChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="1bd5f-878">The <see cref="T:System.EventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-878">The <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1bd5f-879">Raises the <see cref="E:System.Windows.Forms.Form.MaximumSizeChanged" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-879">Raises the <see cref="E:System.Windows.Forms.Form.MaximumSizeChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bd5f-880">引發事件會透過委派叫用此事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-880">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="1bd5f-881">如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-881">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="1bd5f-882"><xref:System.Windows.Forms.Form.OnMaximumSizeChanged%2A> 方法也允許衍生類別處理事件，而不用附加委派。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-882">The <xref:System.Windows.Forms.Form.OnMaximumSizeChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="1bd5f-883">這是在衍生類別中處理事件的慣用技巧。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-883">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="1bd5f-884">
            <para>當覆寫<see cref="M:System.Windows.Forms.Form.OnMaximumSizeChanged(System.EventArgs)" />衍生類別時，請務必呼叫基底類別的<see cref="M:System.Windows.Forms.Form.OnMaximumSizeChanged(System.EventArgs)" />方法，讓已註冊的委派收到事件。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-884">
              <para>When overriding <see cref="M:System.Windows.Forms.Form.OnMaximumSizeChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Form.OnMaximumSizeChanged(System.EventArgs)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
        <altmember cref="P:System.Windows.Forms.Form.MaximumSize" />
        <altmember cref="E:System.Windows.Forms.Form.MaximumSizeChanged" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnMdiChildActivate">
      <MemberSignature Language="C#" Value="protected virtual void OnMdiChildActivate (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMdiChildActivate(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnMdiChildActivate(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMdiChildActivate (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMdiChildActivate(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMdiChildActivate : EventArgs -&gt; unit&#xA;override this.OnMdiChildActivate : EventArgs -&gt; unit" Usage="form.OnMdiChildActivate e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="1bd5f-885">The <see cref="T:System.EventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-885">The <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1bd5f-886">Raises the <see cref="E:System.Windows.Forms.Form.MdiChildActivate" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-886">Raises the <see cref="E:System.Windows.Forms.Form.MdiChildActivate" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bd5f-887">引發事件會透過委派叫用此事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-887">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="1bd5f-888">如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-888">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="1bd5f-889"><xref:System.Windows.Forms.Form.OnMdiChildActivate%2A> 方法也允許衍生類別處理事件，而不用附加委派。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-889">The <xref:System.Windows.Forms.Form.OnMdiChildActivate%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="1bd5f-890">這是在衍生類別中處理事件的慣用技巧。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-890">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="1bd5f-891">
            <para>當覆寫<see cref="M:System.Windows.Forms.Form.OnMdiChildActivate(System.EventArgs)" />衍生類別時，請務必呼叫基底類別的<see cref="M:System.Windows.Forms.Form.OnMdiChildActivate(System.EventArgs)" />方法，讓已註冊的委派收到事件。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-891">
              <para>When overriding <see cref="M:System.Windows.Forms.Form.OnMdiChildActivate(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Form.OnMdiChildActivate(System.EventArgs)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
        <altmember cref="E:System.Windows.Forms.Form.MdiChildActivate" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnMenuComplete">
      <MemberSignature Language="C#" Value="protected virtual void OnMenuComplete (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMenuComplete(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnMenuComplete(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMenuComplete (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMenuComplete(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMenuComplete : EventArgs -&gt; unit&#xA;override this.OnMenuComplete : EventArgs -&gt; unit" Usage="form.OnMenuComplete e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="1bd5f-892">The <see cref="T:System.EventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-892">The <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1bd5f-893">Raises the <see cref="E:System.Windows.Forms.Form.MenuComplete" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-893">Raises the <see cref="E:System.Windows.Forms.Form.MenuComplete" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bd5f-894">引發事件會透過委派叫用此事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-894">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="1bd5f-895">如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-895">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="1bd5f-896"><xref:System.Windows.Forms.Form.OnMenuComplete%2A> 方法也允許衍生類別處理事件，而不用附加委派。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-896">The <xref:System.Windows.Forms.Form.OnMenuComplete%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="1bd5f-897">這是在衍生類別中處理事件的慣用技巧。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-897">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="1bd5f-898">
            <para>當覆寫<see cref="M:System.Windows.Forms.Form.OnMenuComplete(System.EventArgs)" />衍生類別時，請務必呼叫基底類別的<see cref="M:System.Windows.Forms.Form.OnMenuComplete(System.EventArgs)" />方法，讓已註冊的委派收到事件。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-898">
              <para>When overriding <see cref="M:System.Windows.Forms.Form.OnMenuComplete(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Form.OnMenuComplete(System.EventArgs)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
        <altmember cref="E:System.Windows.Forms.Form.MenuComplete" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnMenuStart">
      <MemberSignature Language="C#" Value="protected virtual void OnMenuStart (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMenuStart(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnMenuStart(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMenuStart (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMenuStart(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMenuStart : EventArgs -&gt; unit&#xA;override this.OnMenuStart : EventArgs -&gt; unit" Usage="form.OnMenuStart e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="1bd5f-899">The <see cref="T:System.EventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-899">The <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1bd5f-900">Raises the <see cref="E:System.Windows.Forms.Form.MenuStart" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-900">Raises the <see cref="E:System.Windows.Forms.Form.MenuStart" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bd5f-901">引發事件會透過委派叫用此事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-901">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="1bd5f-902">如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-902">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="1bd5f-903"><xref:System.Windows.Forms.Form.OnMenuStart%2A> 方法也允許衍生類別處理事件，而不用附加委派。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-903">The <xref:System.Windows.Forms.Form.OnMenuStart%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="1bd5f-904">這是在衍生類別中處理事件的慣用技巧。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-904">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="1bd5f-905">
            <para>當覆寫<see cref="M:System.Windows.Forms.Form.OnMenuStart(System.EventArgs)" />衍生類別時，請務必呼叫基底類別的<see cref="M:System.Windows.Forms.Form.OnMenuStart(System.EventArgs)" />方法，讓已註冊的委派收到事件。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-905">
              <para>When overriding <see cref="M:System.Windows.Forms.Form.OnMenuStart(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Form.OnMenuStart(System.EventArgs)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
        <altmember cref="E:System.Windows.Forms.Form.MenuStart" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnMinimumSizeChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnMinimumSizeChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMinimumSizeChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnMinimumSizeChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMinimumSizeChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMinimumSizeChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMinimumSizeChanged : EventArgs -&gt; unit&#xA;override this.OnMinimumSizeChanged : EventArgs -&gt; unit" Usage="form.OnMinimumSizeChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="1bd5f-906">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-906">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1bd5f-907">Raises the <see cref="E:System.Windows.Forms.Form.MinimumSizeChanged" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-907">Raises the <see cref="E:System.Windows.Forms.Form.MinimumSizeChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bd5f-908">引發事件會透過委派叫用此事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-908">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="1bd5f-909">如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-909">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="1bd5f-910"><xref:System.Windows.Forms.Form.OnMinimumSizeChanged%2A> 方法也允許衍生類別處理事件，而不用附加委派。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-910">The <xref:System.Windows.Forms.Form.OnMinimumSizeChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="1bd5f-911">這是在衍生類別中處理事件的慣用技巧。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-911">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="1bd5f-912">
            <para>當覆寫<see cref="M:System.Windows.Forms.Form.OnMinimumSizeChanged(System.EventArgs)" />衍生類別時，請務必呼叫基底類別的<see cref="M:System.Windows.Forms.Form.OnMinimumSizeChanged(System.EventArgs)" />方法，讓已註冊的委派收到事件。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-912">
              <para>When overriding <see cref="M:System.Windows.Forms.Form.OnMinimumSizeChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Form.OnMinimumSizeChanged(System.EventArgs)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
        <altmember cref="E:System.Windows.Forms.Form.MinimumSizeChanged" />
        <altmember cref="P:System.Windows.Forms.Form.MinimumSize" />
      </Docs>
    </Member>
    <Member MemberName="OnPaint">
      <MemberSignature Language="C#" Value="protected override void OnPaint (System.Windows.Forms.PaintEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPaint(class System.Windows.Forms.PaintEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnPaint(System.Windows.Forms.PaintEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnPaint (e As PaintEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnPaint(System::Windows::Forms::PaintEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPaint : System.Windows.Forms.PaintEventArgs -&gt; unit" Usage="form.OnPaint e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.PaintEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="1bd5f-913">A <see cref="T:System.Windows.Forms.PaintEventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-913">A <see cref="T:System.Windows.Forms.PaintEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1bd5f-914">Raises the <see cref="E:System.Windows.Forms.Control.Paint" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-914">Raises the <see cref="E:System.Windows.Forms.Control.Paint" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnPaint(System.Windows.Forms.PaintEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnResize">
      <MemberSignature Language="C#" Value="protected override void OnResize (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnResize(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnResize(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnResize (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnResize(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnResize : EventArgs -&gt; unit" Usage="form.OnResize e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="1bd5f-915">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-915">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1bd5f-916">Raises the <see cref="E:System.Windows.Forms.Control.Resize" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-916">Raises the <see cref="E:System.Windows.Forms.Control.Resize" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnResize(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnResizeBegin">
      <MemberSignature Language="C#" Value="protected virtual void OnResizeBegin (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnResizeBegin(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnResizeBegin(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnResizeBegin (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnResizeBegin(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnResizeBegin : EventArgs -&gt; unit&#xA;override this.OnResizeBegin : EventArgs -&gt; unit" Usage="form.OnResizeBegin e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="1bd5f-917">A <see cref="T:System.EventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-917">A <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1bd5f-918">Raises the <see cref="E:System.Windows.Forms.Form.ResizeBegin" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-918">Raises the <see cref="E:System.Windows.Forms.Form.ResizeBegin" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bd5f-919"><xref:System.Windows.Forms.Form.ResizeBegin>就只會引發事件，如果表單的<xref:System.Windows.Forms.Control.CanRaiseEvents%2A>屬性設定為`true`。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-919">The <xref:System.Windows.Forms.Form.ResizeBegin> event will only be raised if the form's <xref:System.Windows.Forms.Control.CanRaiseEvents%2A> property is set to `true`.</span></span>  
  
 <span data-ttu-id="1bd5f-920">引發事件會透過委派叫用此事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-920">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="1bd5f-921">如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-921">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="1bd5f-922"><xref:System.Windows.Forms.Form.OnResizeBegin%2A> 方法也允許衍生類別處理事件，而不用附加委派。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-922">The <xref:System.Windows.Forms.Form.OnResizeBegin%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="1bd5f-923">這是在衍生類別中處理事件的慣用技巧。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-923">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="1bd5f-924">
            <para>當覆寫<see cref="M:System.Windows.Forms.Form.OnResizeBegin(System.EventArgs)" />衍生類別時，請務必呼叫基底類別的<see cref="M:System.Windows.Forms.Form.OnResizeBegin(System.EventArgs)" />方法，讓已註冊的委派收到事件。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-924">
              <para>When overriding <see cref="M:System.Windows.Forms.Form.OnResizeBegin(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Form.OnResizeBegin(System.EventArgs)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
        <altmember cref="E:System.Windows.Forms.Form.ResizeBegin" />
        <altmember cref="M:System.Windows.Forms.Form.OnResizeEnd(System.EventArgs)" />
        <altmember cref="M:System.Windows.Forms.Control.OnMove(System.EventArgs)" />
        <altmember cref="M:System.Windows.Forms.Form.OnMaximumSizeChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnResizeEnd">
      <MemberSignature Language="C#" Value="protected virtual void OnResizeEnd (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnResizeEnd(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnResizeEnd(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnResizeEnd (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnResizeEnd(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnResizeEnd : EventArgs -&gt; unit&#xA;override this.OnResizeEnd : EventArgs -&gt; unit" Usage="form.OnResizeEnd e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="1bd5f-925">A <see cref="T:System.EventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-925">A <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1bd5f-926">Raises the <see cref="E:System.Windows.Forms.Form.ResizeEnd" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-926">Raises the <see cref="E:System.Windows.Forms.Form.ResizeEnd" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bd5f-927"><xref:System.Windows.Forms.Form.ResizeEnd>就只會引發事件，如果表單的<xref:System.Windows.Forms.Control.CanRaiseEvents%2A>屬性設定為`true`。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-927">The <xref:System.Windows.Forms.Form.ResizeEnd> event will only be raised if the form's <xref:System.Windows.Forms.Control.CanRaiseEvents%2A> property is set to `true`.</span></span>  
  
 <span data-ttu-id="1bd5f-928">引發事件會透過委派叫用此事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-928">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="1bd5f-929">如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-929">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="1bd5f-930"><xref:System.Windows.Forms.Form.OnResizeEnd%2A> 方法也允許衍生類別處理事件，而不用附加委派。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-930">The <xref:System.Windows.Forms.Form.OnResizeEnd%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="1bd5f-931">這是在衍生類別中處理事件的慣用技巧。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-931">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="1bd5f-932">
            <para>當覆寫<see cref="M:System.Windows.Forms.Form.OnResizeEnd(System.EventArgs)" />衍生類別時，請務必呼叫基底類別的<see cref="M:System.Windows.Forms.Form.OnResizeEnd(System.EventArgs)" />方法，讓已註冊的委派收到事件。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-932">
              <para>When overriding <see cref="M:System.Windows.Forms.Form.OnResizeEnd(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Form.OnResizeEnd(System.EventArgs)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
        <altmember cref="E:System.Windows.Forms.Form.ResizeEnd" />
        <altmember cref="M:System.Windows.Forms.Form.OnResizeBegin(System.EventArgs)" />
        <altmember cref="M:System.Windows.Forms.Control.OnMove(System.EventArgs)" />
        <altmember cref="M:System.Windows.Forms.Form.OnMaximumSizeChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnRightToLeftLayoutChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnRightToLeftLayoutChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRightToLeftLayoutChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnRightToLeftLayoutChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRightToLeftLayoutChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRightToLeftLayoutChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRightToLeftLayoutChanged : EventArgs -&gt; unit&#xA;override this.OnRightToLeftLayoutChanged : EventArgs -&gt; unit" Usage="form.OnRightToLeftLayoutChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="1bd5f-933">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-933">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1bd5f-934">Raises the <see cref="E:System.Windows.Forms.Form.RightToLeftLayoutChanged" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-934">Raises the <see cref="E:System.Windows.Forms.Form.RightToLeftLayoutChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bd5f-935">如果目前的表單或其父系之一正在處置的資源，<xref:System.Windows.Forms.Form.OnRightToLeftLayoutChanged%2A>方法返回時不會執行任何動作。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-935">If the current form or one of its parents is disposing of resources, the <xref:System.Windows.Forms.Form.OnRightToLeftLayoutChanged%2A> method will return without performing any action.</span></span> <span data-ttu-id="1bd5f-936">如果<xref:System.Windows.Forms.Control.RightToLeft%2A>表單的屬性具有值<xref:System.Windows.Forms.RightToLeft.Yes>，然後將重新建立表單和其子控制項的控制代碼，透過呼叫<xref:System.Windows.Forms.Control.RecreateHandle%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-936">If the <xref:System.Windows.Forms.Control.RightToLeft%2A> property of the form has a value of <xref:System.Windows.Forms.RightToLeft.Yes>, then the handles of the form and its child controls will be recreated through calls to the <xref:System.Windows.Forms.Control.RecreateHandle%2A> method.</span></span>  
  
 <span data-ttu-id="1bd5f-937">引發事件會透過委派叫用此事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-937">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="1bd5f-938">如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-938">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="1bd5f-939"><xref:System.Windows.Forms.Form.OnRightToLeftLayoutChanged%2A> 方法也允許衍生類別處理事件，而不用附加委派。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-939">The <xref:System.Windows.Forms.Form.OnRightToLeftLayoutChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="1bd5f-940">這是在衍生類別中處理事件的慣用技巧。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-940">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="1bd5f-941">
            <para>當覆寫<see cref="M:System.Windows.Forms.Form.OnRightToLeftLayoutChanged(System.EventArgs)" />衍生類別時，請務必呼叫基底類別的<see cref="M:System.Windows.Forms.Form.OnRightToLeftLayoutChanged(System.EventArgs)" />方法，讓已註冊的委派收到事件。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-941">
              <para>When overriding <see cref="M:System.Windows.Forms.Form.OnRightToLeftLayoutChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Form.OnRightToLeftLayoutChanged(System.EventArgs)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
        <altmember cref="E:System.Windows.Forms.Form.RightToLeftLayoutChanged" />
        <altmember cref="P:System.Windows.Forms.Form.RightToLeftLayout" />
        <altmember cref="P:System.Windows.Forms.Control.RightToLeft" />
        <altmember cref="Overload:System.Windows.Forms.Form.Dispose" />
        <altmember cref="M:System.Windows.Forms.Control.RecreateHandle" />
      </Docs>
    </Member>
    <Member MemberName="OnShown">
      <MemberSignature Language="C#" Value="protected virtual void OnShown (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnShown(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnShown(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnShown (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnShown(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnShown : EventArgs -&gt; unit&#xA;override this.OnShown : EventArgs -&gt; unit" Usage="form.OnShown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="1bd5f-942">A <see cref="T:System.EventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-942">A <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1bd5f-943">Raises the <see cref="E:System.Windows.Forms.Form.Shown" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-943">Raises the <see cref="E:System.Windows.Forms.Form.Shown" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bd5f-944"><xref:System.Windows.Forms.Form.Shown>事件發生於表單第一次顯示。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-944">The <xref:System.Windows.Forms.Form.Shown> event occurs whenever the form is first shown.</span></span>  
  
 <span data-ttu-id="1bd5f-945">引發事件會透過委派叫用此事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-945">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="1bd5f-946">如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-946">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="1bd5f-947"><xref:System.Windows.Forms.Form.OnShown%2A> 方法也允許衍生類別處理事件，而不用附加委派。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-947">The <xref:System.Windows.Forms.Form.OnShown%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="1bd5f-948">這是在衍生類別中處理事件的慣用技巧。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-948">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="1bd5f-949">
            <para>當覆寫<see cref="M:System.Windows.Forms.Form.OnShown(System.EventArgs)" />衍生類別時，請務必呼叫基底類別的<see cref="M:System.Windows.Forms.Form.OnShown(System.EventArgs)" />方法，讓已註冊的委派收到事件。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-949">
              <para>When overriding <see cref="M:System.Windows.Forms.Form.OnShown(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Form.OnShown(System.EventArgs)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
        <altmember cref="E:System.Windows.Forms.Form.Shown" />
        <altmember cref="Overload:System.Windows.Forms.Form.Show" />
        <altmember cref="P:System.Windows.Forms.Control.Visible" />
        <altmember cref="M:System.Windows.Forms.Form.OnFormClosing(System.Windows.Forms.FormClosingEventArgs)" />
        <altmember cref="M:System.Windows.Forms.Form.OnFormClosed(System.Windows.Forms.FormClosedEventArgs)" />
        <altmember cref="M:System.Windows.Forms.Form.OnLoad(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnStyleChanged">
      <MemberSignature Language="C#" Value="protected override void OnStyleChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnStyleChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnStyleChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnStyleChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnStyleChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnStyleChanged : EventArgs -&gt; unit" Usage="form.OnStyleChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="1bd5f-950">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-950">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1bd5f-951">Raises the <see cref="E:System.Windows.Forms.Control.StyleChanged" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-951">Raises the <see cref="E:System.Windows.Forms.Control.StyleChanged" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnStyleChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnTextChanged">
      <MemberSignature Language="C#" Value="protected override void OnTextChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnTextChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnTextChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnTextChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnTextChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnTextChanged : EventArgs -&gt; unit" Usage="form.OnTextChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="1bd5f-952">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-952">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1bd5f-953">Raises the <see cref="E:System.Windows.Forms.Control.TextChanged" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-953">Raises the <see cref="E:System.Windows.Forms.Control.TextChanged" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnTextChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnVisibleChanged">
      <MemberSignature Language="C#" Value="protected override void OnVisibleChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnVisibleChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.OnVisibleChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnVisibleChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnVisibleChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnVisibleChanged : EventArgs -&gt; unit" Usage="form.OnVisibleChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="1bd5f-954">The <see cref="T:System.EventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-954">The <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1bd5f-955">Raises the <see cref="E:System.Windows.Forms.Control.VisibleChanged" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-955">Raises the <see cref="E:System.Windows.Forms.Control.VisibleChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bd5f-956">引發事件會透過委派叫用此事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-956">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="1bd5f-957">如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-957">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="1bd5f-958"><xref:System.Windows.Forms.Form.OnVisibleChanged%2A> 方法也允許衍生類別處理事件，而不用附加委派。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-958">The <xref:System.Windows.Forms.Form.OnVisibleChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="1bd5f-959">這是在衍生類別中處理事件的慣用技巧。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-959">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="1bd5f-960">
            <para>當覆寫<see cref="M:System.Windows.Forms.Form.OnVisibleChanged(System.EventArgs)" />衍生類別時，請務必呼叫基底類別的<see cref="M:System.Windows.Forms.Form.OnVisibleChanged(System.EventArgs)" />方法，讓已註冊的委派收到事件。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-960">
              <para>When overriding <see cref="M:System.Windows.Forms.Form.OnVisibleChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Form.OnVisibleChanged(System.EventArgs)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
        <altmember cref="P:System.Windows.Forms.Control.Visible" />
        <altmember cref="M:System.Windows.Forms.Control.Hide" />
        <altmember cref="E:System.Windows.Forms.Control.VisibleChanged" />
      </Docs>
    </Member>
    <Member MemberName="Opacity">
      <MemberSignature Language="C#" Value="public double Opacity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Opacity" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.Opacity" />
      <MemberSignature Language="VB.NET" Value="Public Property Opacity As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Opacity { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.Opacity : double with get, set" Usage="System.Windows.Forms.Form.Opacity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.OpacityConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1bd5f-961">Gets or sets the opacity level of the form.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-961">Gets or sets the opacity level of the form.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1bd5f-962">表單的透明度等級。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-962">The level of opacity for the form.</span>
          </span>
          <span data-ttu-id="1bd5f-963">預設值為 1.00。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-963">The default is 1.00.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bd5f-964"><xref:System.Windows.Forms.Form.Opacity%2A>屬性可讓您指定的表單和其控制項的透明度等級。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-964">The <xref:System.Windows.Forms.Form.Opacity%2A> property enables you to specify a level of transparency for the form and its controls.</span></span> <span data-ttu-id="1bd5f-965">當這個屬性設定為小於 100%($1.00) 的值時，則整個表單，包括框線，變得更為透明。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-965">When this property is set to a value less than 100 percent (1.00), the entire form, including borders, is made more transparent.</span></span> <span data-ttu-id="1bd5f-966">將此屬性設為 0%(0.00) 的值，使表單完全看不見。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-966">Setting this property to a value of 0 percent (0.00) makes the form completely invisible.</span></span> <span data-ttu-id="1bd5f-967">您可以使用這個屬性，以提供不同層級的透明度，或提供例如逐步引入表單，或縮小檢視的效果。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-967">You can use this property to provide different levels of transparency or to provide effects such as phasing a form in or out of view.</span></span> <span data-ttu-id="1bd5f-968">例如，設定成檢視階段表單<xref:System.Windows.Forms.Form.Opacity%2A>屬性設為 0%(0.00)，並逐漸增加的值，直到達到 100%($1.00) 的值。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-968">For example, you can phase a form into view by setting the <xref:System.Windows.Forms.Form.Opacity%2A> property to a value of 0 percent (0.00) and gradually increasing the value until it reaches 100 percent (1.00).</span></span>  
  
 <span data-ttu-id="1bd5f-969"><xref:System.Windows.Forms.Form.Opacity%2A> 不同於所提供的透明度<xref:System.Windows.Forms.Form.TransparencyKey%2A>，這只會使表單和其控制項完全透明的如果它們是相同的色彩中指定的值為<xref:System.Windows.Forms.Form.TransparencyKey%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-969"><xref:System.Windows.Forms.Form.Opacity%2A> differs from the transparency provided by the <xref:System.Windows.Forms.Form.TransparencyKey%2A>, which only makes a form and its controls completely transparent if they are the same color as the value specified in the <xref:System.Windows.Forms.Form.TransparencyKey%2A> property.</span></span>  
  
 <span data-ttu-id="1bd5f-970">這個屬性不支援的時機<xref:System.Windows.Forms.Form.RightToLeftLayout%2A>是`true`。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-970">This property is not supported when <xref:System.Windows.Forms.Form.RightToLeftLayout%2A> is `true`.</span></span>  
  
 <span data-ttu-id="1bd5f-971"><xref:System.Windows.Forms.Form.Opacity%2A>屬性取決於層級 Windows API 所導入 Windows 2000。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-971">The <xref:System.Windows.Forms.Form.Opacity%2A> property depends on the Layered Windows API that was introduced with Windows 2000.</span></span> <span data-ttu-id="1bd5f-972">如需詳細資訊，請參閱 [分層 Windows:: 新的方式來使用半透明和透明度效果在 Windows 應用程式] 中 Platform SDK 文件，網址[ http://msdn.microsoft.com ](http://msdn.microsoft.com/)。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-972">For more information, see the "Layered Windows: A New Way to Use Translucency and Transparency Effects in Windows Applications" in the Platform SDK documentation at [http://msdn.microsoft.com](http://msdn.microsoft.com/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1bd5f-973">下列程式碼範例示範如何建立具有 75%的不透明度層級顯示的表單。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-973">The following code example demonstrates how to create a form that is displayed with an opacity level of 75 percent.</span></span> <span data-ttu-id="1bd5f-974">在程式碼範例會建立位於畫面中央的使用中的新表單<xref:System.Windows.Forms.Form.Opacity%2A>屬性設定為 變更表單的不透明度層級。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-974">The code example creates a new form that is positioned in the center of the screen with an <xref:System.Windows.Forms.Form.Opacity%2A> property set to change the opacity level of the form.</span></span> <span data-ttu-id="1bd5f-975">程式碼範例也會設定<xref:System.Windows.Forms.Form.Size%2A>屬性以提供更大的大小比預設大小的表單的表單。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-975">The code example also sets the <xref:System.Windows.Forms.Form.Size%2A> property to provide a larger sized form than the default size of the form.</span></span> <span data-ttu-id="1bd5f-976">此程式碼範例是在此範例中所定義的方法呼叫從另一種形式的事件處理常式或其他方法中，假設所撰寫。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-976">This code example was written under the assumption that the method defined in this example is called from another form in an event handler or other method.</span></span>  
  
 [!code-cpp[Form.Opacity#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Form.Opacity/CPP/form1.cpp#1)]
 [!code-csharp[Form.Opacity#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Form.Opacity/CS/form1.cs#1)]
 [!code-vb[Form.Opacity#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Form.Opacity/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.TransparencyKey" />
        <altmember cref="F:System.Windows.Forms.OSFeature.LayeredWindows" />
      </Docs>
    </Member>
    <Member MemberName="OwnedForms">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Form[] OwnedForms { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Form[] OwnedForms" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.OwnedForms" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OwnedForms As Form()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Windows::Forms::Form ^&gt; ^ OwnedForms { cli::array &lt;System::Windows::Forms::Form ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OwnedForms : System.Windows.Forms.Form[]" Usage="System.Windows.Forms.Form.OwnedForms" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Form[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1bd5f-977">Gets an array of <see cref="T:System.Windows.Forms.Form" /> objects that represent all forms that are owned by this form.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-977">Gets an array of <see cref="T:System.Windows.Forms.Form" /> objects that represent all forms that are owned by this form.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1bd5f-978">
            <see cref="T:System.Windows.Forms.Form" /> 陣列，代表這個表單擁有的表單。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-978">A <see cref="T:System.Windows.Forms.Form" /> array that represents the owned forms for this form.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bd5f-979">這個屬性會傳回陣列，其中包含此表單所擁有的所有表單。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-979">This property returns an array that contains all forms that are owned by this form.</span></span> <span data-ttu-id="1bd5f-980">若要讓另一種形式所擁有的表單，呼叫<xref:System.Windows.Forms.Form.AddOwnedForm%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-980">To make a form owned by another form, call the <xref:System.Windows.Forms.Form.AddOwnedForm%2A> method.</span></span> <span data-ttu-id="1bd5f-981">指派給主控表單在表單仍擁有直到<xref:System.Windows.Forms.Form.RemoveOwnedForm%2A>呼叫方法。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-981">The form assigned to the owner form will remain owned until the <xref:System.Windows.Forms.Form.RemoveOwnedForm%2A> method is called.</span></span> <span data-ttu-id="1bd5f-982">您也可以進行表單，藉由設定另一個擁有<xref:System.Windows.Forms.Form.Owner%2A>其擁有者的形式參考的屬性。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-982">You can also make a form owned by another by setting the <xref:System.Windows.Forms.Form.Owner%2A> property with a reference to its owner form.</span></span>  
  
 <span data-ttu-id="1bd5f-983">當表單由另一種形式所擁有時，它已關閉或隱藏的擁有者的表單。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-983">When a form is owned by another form, it is closed or hidden with the owner form.</span></span> <span data-ttu-id="1bd5f-984">例如，假設名為的表單`Form2`，這擁有由表單名為`Form1`。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-984">For example, consider a form named `Form2` that is owned by a form named `Form1`.</span></span> <span data-ttu-id="1bd5f-985">如果`Form1`已關閉或最小化`Form2`也已關閉或隱藏。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-985">If `Form1` is closed or minimized, `Form2` is also closed or hidden.</span></span> <span data-ttu-id="1bd5f-986">擁有的表單也永遠不會顯示其主控表單後面。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-986">Owned forms are also never displayed behind their owner form.</span></span> <span data-ttu-id="1bd5f-987">您可以使用擁有的表單適用於 windows，例如尋找並取代 windows，應該不會顯示擁有者表單的後置選取主控表單時。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-987">You can use owned forms for windows such as find and replace windows, which should not be displayed behind the owner form when the owner form is selected.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1bd5f-988">如果表單是多重文件介面 (MDI) 父表單，這個屬性會傳回所有的表單會顯示除了任何目前的 MDI 子表單開啟。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-988">If the form is a multiple-document interface (MDI) parent form, this property will return all forms that are displayed with the exception of any MDI child forms that are currently open.</span></span> <span data-ttu-id="1bd5f-989">若要取得 MDI 子表單在 MDI 父表單中開啟，請使用<xref:System.Windows.Forms.Form.MdiChildren%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-989">To obtain the MDI child forms opened in an MDI parent form, use the <xref:System.Windows.Forms.Form.MdiChildren%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1bd5f-990">下列程式碼範例示範如何使用<xref:System.Windows.Forms.Form.OwnedForms%2A>修改由主控表單所擁有的所有表單的屬性。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-990">The following code example demonstrates how to use the <xref:System.Windows.Forms.Form.OwnedForms%2A> property to modify all forms owned by the owner form.</span></span> <span data-ttu-id="1bd5f-991">在範例中的第一個方法會將表單將擁有的表單所擁有的表單相關聯的陣列。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-991">The first method in the example adds forms to the array of owned forms associated with the owned form.</span></span> <span data-ttu-id="1bd5f-992">第二個方法擁有的所有表單中執行都迴圈，並變更標題。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-992">The second method loops through all owned forms and changes the caption.</span></span> <span data-ttu-id="1bd5f-993">這個範例需要這兩種方法呼叫的事件或表單的其他方法。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-993">This example requires that both methods are called by an event or other method of a form.</span></span>  
  
 [!code-cpp[Form.OwnedForms#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Form.OwnedForms/CPP/form1.cpp#1)]
 [!code-csharp[Form.OwnedForms#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Form.OwnedForms/CS/form1.cs#1)]
 [!code-vb[Form.OwnedForms#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Form.OwnedForms/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Form.AddOwnedForm(System.Windows.Forms.Form)" />
        <altmember cref="M:System.Windows.Forms.Form.RemoveOwnedForm(System.Windows.Forms.Form)" />
        <altmember cref="P:System.Windows.Forms.Form.Owner" />
      </Docs>
    </Member>
    <Member MemberName="Owner">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Form Owner { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Form Owner" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.Owner" />
      <MemberSignature Language="VB.NET" Value="Public Property Owner As Form" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Form ^ Owner { System::Windows::Forms::Form ^ get(); void set(System::Windows::Forms::Form ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Owner : System.Windows.Forms.Form with get, set" Usage="System.Windows.Forms.Form.Owner" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Form</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1bd5f-994">Gets or sets the form that owns this form.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-994">Gets or sets the form that owns this form.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1bd5f-995">
            <see cref="T:System.Windows.Forms.Form" />，代表做為這個表單擁有者的表單。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-995">A <see cref="T:System.Windows.Forms.Form" /> that represents the form that is the owner of this form.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bd5f-996">若要讓另一種形式所擁有的表單，將指派其<xref:System.Windows.Forms.Form.Owner%2A>屬性的參考，就是擁有者的表單。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-996">To make a form owned by another form, assign its <xref:System.Windows.Forms.Form.Owner%2A> property a reference to the form that will be the owner.</span></span>  
  
 <span data-ttu-id="1bd5f-997">當表單由另一種形式所擁有時，它已關閉或隱藏的擁有者的表單。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-997">When a form is owned by another form, it is closed or hidden with the owner form.</span></span> <span data-ttu-id="1bd5f-998">例如，假設名為的表單`Form2`，這擁有由表單名為`Form1`。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-998">For example, consider a form named `Form2` that is owned by a form named `Form1`.</span></span> <span data-ttu-id="1bd5f-999">如果`Form1`已關閉或最小化`Form2`也已關閉或隱藏。擁有的表單也永遠不會顯示其主控表單後面。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-999">If `Form1` is closed or minimized, `Form2` is also closed or hidden.Owned forms are also never displayed behind their owner form.</span></span> <span data-ttu-id="1bd5f-1000">您可以使用擁有的表單適用於 windows，例如尋找和取代視窗，選取主控表單時，應該不會消失。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1000">You can use owned forms for windows such as find and replace windows, which should not disappear when the owner form is selected.</span></span> <span data-ttu-id="1bd5f-1001">若要判斷父表單所擁有的表單，請使用<xref:System.Windows.Forms.Form.OwnedForms%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1001">To determine the forms that are owned by a parent form, use the <xref:System.Windows.Forms.Form.OwnedForms%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">
          <span data-ttu-id="1bd5f-1002">A top-level window cannot have an owner.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-1002">A top-level window cannot have an owner.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Forms.Form.AddOwnedForm(System.Windows.Forms.Form)" />
        <altmember cref="M:System.Windows.Forms.Form.RemoveOwnedForm(System.Windows.Forms.Form)" />
        <altmember cref="P:System.Windows.Forms.Form.OwnedForms" />
      </Docs>
    </Member>
    <Member MemberName="ProcessCmdKey">
      <MemberSignature Language="C#" Value="protected override bool ProcessCmdKey (ref System.Windows.Forms.Message msg, System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool ProcessCmdKey(valuetype System.Windows.Forms.Message&amp; msg, valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ProcessCmdKey (ByRef msg As Message, keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool ProcessCmdKey(System::Windows::Forms::Message % msg, System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="override this.ProcessCmdKey :  * System.Windows.Forms.Keys -&gt; bool" Usage="form.ProcessCmdKey (msg, keyData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Windows.Forms.Message&amp;" RefType="ref" />
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="msg">
          <span data-ttu-id="1bd5f-1003">A <see cref="T:System.Windows.Forms.Message" />, passed by reference, that represents the Win32 message to process.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-1003">A <see cref="T:System.Windows.Forms.Message" />, passed by reference, that represents the Win32 message to process.</span>
          </span>
        </param>
        <param name="keyData">
          <span data-ttu-id="1bd5f-1004">One of the <see cref="T:System.Windows.Forms.Keys" /> values that represents the key to process.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-1004">One of the <see cref="T:System.Windows.Forms.Keys" /> values that represents the key to process.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1bd5f-1005">Processes a command key.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-1005">Processes a command key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1bd5f-1006">
            <see langword="true" /> if the keystroke was processed and consumed by the control; otherwise, <see langword="false" /> to allow further processing.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-1006">
              <see langword="true" /> if the keystroke was processed and consumed by the control; otherwise, <see langword="false" /> to allow further processing.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bd5f-1007"><xref:System.Windows.Forms.Form.ProcessCmdKey%2A>方法會覆寫基底</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1007">The <xref:System.Windows.Forms.Form.ProcessCmdKey%2A> method overrides the base</span></span>  
  
 <span data-ttu-id="1bd5f-1008"><xref:System.Windows.Forms.ContainerControl.ProcessCmdKey%2A?displayProperty=nameWithType> 要提供額外的處理主功能表命令索引鍵和 MDI 加速器的實作。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1008"><xref:System.Windows.Forms.ContainerControl.ProcessCmdKey%2A?displayProperty=nameWithType> implementation to provide additional handling of main menu command keys and MDI accelerators.</span></span>  
  
 <span data-ttu-id="1bd5f-1009">設陷按鍵動作的相關資訊，請參閱 < 如何使用 Visual C# 中攔截在控制項中的按鍵輸入 」 和 「 如何設陷在.NET 中的按鍵輸入控制項使用 Visual Basic.NET"Microsoft 知識庫中在http://support.microsoft.com。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1009">For information about trapping keystrokes, see "How to trap keystrokes in controls by using Visual C#" and "How to trap keystrokes in .NET controls by using Visual Basic .NET" in the Microsoft Knowledge Base at http://support.microsoft.com.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ContainerControl.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)" />
        <altmember cref="T:System.Windows.Forms.Message" />
        <altmember cref="M:System.Windows.Forms.Form.ProcessDialogKey(System.Windows.Forms.Keys)" />
        <altmember cref="M:System.Windows.Forms.Form.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)" />
        <altmember cref="M:System.Windows.Forms.ContainerControl.ProcessMnemonic(System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="ProcessDialogChar">
      <MemberSignature Language="C#" Value="protected override bool ProcessDialogChar (char charCode);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool ProcessDialogChar(char charCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.ProcessDialogChar(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ProcessDialogChar (charCode As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool ProcessDialogChar(char charCode);" />
      <MemberSignature Language="F#" Value="override this.ProcessDialogChar : char -&gt; bool" Usage="form.ProcessDialogChar charCode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charCode" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="charCode">
          <span data-ttu-id="1bd5f-1010">The character to process.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-1010">The character to process.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1bd5f-1011">Processes a dialog character.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-1011">Processes a dialog character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1bd5f-1012">
            <see langword="true" /> if the character was processed by the control; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-1012">
              <see langword="true" /> if the character was processed by the control; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessDialogKey">
      <MemberSignature Language="C#" Value="protected override bool ProcessDialogKey (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool ProcessDialogKey(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.ProcessDialogKey(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ProcessDialogKey (keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool ProcessDialogKey(System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="override this.ProcessDialogKey : System.Windows.Forms.Keys -&gt; bool" Usage="form.ProcessDialogKey keyData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="keyData">
          <span data-ttu-id="1bd5f-1013">One of the <see cref="T:System.Windows.Forms.Keys" /> values that represents the key to process.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-1013">One of the <see cref="T:System.Windows.Forms.Keys" /> values that represents the key to process.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1bd5f-1014">Processes a dialog box key.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-1014">Processes a dialog box key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1bd5f-1015">
            <see langword="true" /> if the keystroke was processed and consumed by the control; otherwise, <see langword="false" /> to allow further processing.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-1015">
              <see langword="true" /> if the keystroke was processed and consumed by the control; otherwise, <see langword="false" /> to allow further processing.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bd5f-1016"><xref:System.Windows.Forms.Form.ProcessDialogKey%2A>方法會覆寫基底<xref:System.Windows.Forms.ContainerControl.ProcessDialogKey%2A?displayProperty=nameWithType>實作，以提供額外的處理，傳回和逸出中索引鍵的對話方塊。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1016">The <xref:System.Windows.Forms.Form.ProcessDialogKey%2A> method overrides the base <xref:System.Windows.Forms.ContainerControl.ProcessDialogKey%2A?displayProperty=nameWithType> implementation to provide additional handling of the RETURN and ESCAPE keys in dialog boxes.</span></span> <span data-ttu-id="1bd5f-1017">方法包含 ALT 或控制項的修飾詞的按鍵動作上，執行任何處理。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1017">The method performs no processing on keystrokes that include the ALT or CONTROL modifiers.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ContainerControl.ProcessDialogKey(System.Windows.Forms.Keys)" />
        <altmember cref="M:System.Windows.Forms.Form.ProcessDialogChar(System.Char)" />
        <altmember cref="M:System.Windows.Forms.Form.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)" />
        <altmember cref="M:System.Windows.Forms.ContainerControl.ProcessMnemonic(System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="ProcessKeyPreview">
      <MemberSignature Language="C#" Value="protected override bool ProcessKeyPreview (ref System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool ProcessKeyPreview(valuetype System.Windows.Forms.Message&amp; m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.ProcessKeyPreview(System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ProcessKeyPreview (ByRef m As Message) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool ProcessKeyPreview(System::Windows::Forms::Message % m);" />
      <MemberSignature Language="F#" Value="override this.ProcessKeyPreview :  -&gt; bool" Usage="form.ProcessKeyPreview m" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m">
          <span data-ttu-id="1bd5f-1018">A <see cref="T:System.Windows.Forms.Message" />, passed by reference, that represents the window message to process.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-1018">A <see cref="T:System.Windows.Forms.Message" />, passed by reference, that represents the window message to process.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1bd5f-1019">Previews a keyboard message.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-1019">Previews a keyboard message.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1bd5f-1020">
            <see langword="true" /> if the message was processed by the control; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-1020">
              <see langword="true" /> if the message was processed by the control; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.ProcessKeyPreview(System.Windows.Forms.Message@)" />
      </Docs>
    </Member>
    <Member MemberName="ProcessMnemonic">
      <MemberSignature Language="C#" Value="protected internal override bool ProcessMnemonic (char charCode);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance bool ProcessMnemonic(char charCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.ProcessMnemonic(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function ProcessMnemonic (charCode As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override bool ProcessMnemonic(char charCode);" />
      <MemberSignature Language="F#" Value="override this.ProcessMnemonic : char -&gt; bool" Usage="form.ProcessMnemonic charCode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charCode" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="charCode">
          <span data-ttu-id="1bd5f-1021">The character to process.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-1021">The character to process.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1bd5f-1022">Processes a mnemonic character.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-1022">Processes a mnemonic character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1bd5f-1023">
            <see langword="true" /> if the character was processed as a mnemonic by the control; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-1023">
              <see langword="true" /> if the character was processed as a mnemonic by the control; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessTabKey">
      <MemberSignature Language="C#" Value="protected override bool ProcessTabKey (bool forward);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool ProcessTabKey(bool forward) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.ProcessTabKey(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ProcessTabKey (forward As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool ProcessTabKey(bool forward);" />
      <MemberSignature Language="F#" Value="override this.ProcessTabKey : bool -&gt; bool" Usage="form.ProcessTabKey forward" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="forward" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="forward">
          <span data-ttu-id="1bd5f-1024">
            <see langword="true" /> to cycle forward through the controls in the ContainerControl; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-1024">
              <see langword="true" /> to cycle forward through the controls in the ContainerControl; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1bd5f-1025">Selects the next available control and makes it the active control.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-1025">Selects the next available control and makes it the active control.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1bd5f-1026">
            <see langword="true" /> if a control is selected; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-1026">
              <see langword="true" /> if a control is selected; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.ContainerControl.ProcessTabKey(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveOwnedForm">
      <MemberSignature Language="C#" Value="public void RemoveOwnedForm (System.Windows.Forms.Form ownedForm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveOwnedForm(class System.Windows.Forms.Form ownedForm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.RemoveOwnedForm(System.Windows.Forms.Form)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveOwnedForm (ownedForm As Form)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveOwnedForm(System::Windows::Forms::Form ^ ownedForm);" />
      <MemberSignature Language="F#" Value="member this.RemoveOwnedForm : System.Windows.Forms.Form -&gt; unit" Usage="form.RemoveOwnedForm ownedForm" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ownedForm" Type="System.Windows.Forms.Form" />
      </Parameters>
      <Docs>
        <param name="ownedForm">
          <span data-ttu-id="1bd5f-1027">A <see cref="T:System.Windows.Forms.Form" /> representing the form to remove from the list of owned forms for this form.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-1027">A <see cref="T:System.Windows.Forms.Form" /> representing the form to remove from the list of owned forms for this form.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1bd5f-1028">Removes an owned form from this form.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-1028">Removes an owned form from this form.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bd5f-1029">指派給主控表單在表單仍擁有直到<xref:System.Windows.Forms.Form.RemoveOwnedForm%2A>呼叫方法。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1029">The form assigned to the owner form remains owned until the <xref:System.Windows.Forms.Form.RemoveOwnedForm%2A> method is called.</span></span> <span data-ttu-id="1bd5f-1030">除了擁有表單的清單中移除附屬的表單，此方法也會設定主控表單`null`。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1030">In addition to removing the owned form from the list of owned form, this method also sets the owner form to `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Form.AddOwnedForm(System.Windows.Forms.Form)" />
        <altmember cref="P:System.Windows.Forms.Form.Owner" />
        <altmember cref="P:System.Windows.Forms.Form.OwnedForms" />
      </Docs>
    </Member>
    <Member MemberName="ResizeBegin">
      <MemberSignature Language="C#" Value="public event EventHandler ResizeBegin;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ResizeBegin" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Form.ResizeBegin" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ResizeBegin As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ResizeBegin;" />
      <MemberSignature Language="F#" Value="member this.ResizeBegin : EventHandler " Usage="member this.ResizeBegin : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1bd5f-1031">Occurs when a form enters resizing mode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-1031">Occurs when a form enters resizing mode.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bd5f-1032"><xref:System.Windows.Forms.Form.ResizeBegin>當使用者開始調整表單時，通常按一下並拖曳其中一個框線或表單的右下角調整大小底框的大小，會引發事件。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1032">The <xref:System.Windows.Forms.Form.ResizeBegin> event is raised when the user begins to resize a form, typically by clicking and dragging one of the borders or the sizing grip located on the lower-right corner of the form.</span></span> <span data-ttu-id="1bd5f-1033">此動作會將表單進入調整大小強制回應迴圈，調整大小作業完成之前。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1033">This action puts the form into a modal sizing loop until the resize operation is completed.</span></span> <span data-ttu-id="1bd5f-1034">通常，調整大小作業期間發生下列的事件集合：</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1034">Typically, the following set of events occurs during a resize operation:</span></span>  
  
1.  <span data-ttu-id="1bd5f-1035">單一<xref:System.Windows.Forms.Form.ResizeBegin>表單進入調整大小模式時，就會發生事件。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1035">A single <xref:System.Windows.Forms.Form.ResizeBegin> event occurs as the form enters resizing mode.</span></span>  
  
2.  <span data-ttu-id="1bd5f-1036">零個或多組<xref:System.Windows.Forms.Control.Resize>並<xref:System.Windows.Forms.Control.SizeChanged>做為表單的發生事件<xref:System.Windows.Forms.Form.Size%2A>修改。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1036">Zero or more pairs of <xref:System.Windows.Forms.Control.Resize> and <xref:System.Windows.Forms.Control.SizeChanged> events occur as the form's <xref:System.Windows.Forms.Form.Size%2A> is modified.</span></span>  
  
3.  <span data-ttu-id="1bd5f-1037">單一<xref:System.Windows.Forms.Form.ResizeEnd>表單結束調整大小模式時，就會發生事件。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1037">A single <xref:System.Windows.Forms.Form.ResizeEnd> event occurs as the form exits resizing mode.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1bd5f-1038">只需按一下即可將上框線拖曳或調整大小底框不會產生<xref:System.Windows.Forms.Form.ResizeBegin>並<xref:System.Windows.Forms.Form.ResizeEnd>事件，而不需要任何中繼<xref:System.Windows.Forms.Control.Resize>和<xref:System.Windows.Forms.Control.SizeChanged>事件組。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1038">Just clicking without dragging on a border or resizing grip will generate the <xref:System.Windows.Forms.Form.ResizeBegin> and <xref:System.Windows.Forms.Form.ResizeEnd> events without any intermediate <xref:System.Windows.Forms.Control.Resize> and <xref:System.Windows.Forms.Control.SizeChanged> event pairs.</span></span>  
  
 <span data-ttu-id="1bd5f-1039"><xref:System.Windows.Forms.Form.ResizeBegin>和<xref:System.Windows.Forms.Form.ResizeEnd>當使用者將表單中，通常按一下並拖曳標題列上，也會引發的事件配對。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1039">The <xref:System.Windows.Forms.Form.ResizeBegin> and <xref:System.Windows.Forms.Form.ResizeEnd> pair of events is also raised when the user moves the form, typically by clicking and dragging on the caption bar.</span></span> <span data-ttu-id="1bd5f-1040">這些事件不會產生的表單，以程式設計方式操作，例如藉由變更<xref:System.Windows.Forms.Form.Size%2A>或<xref:System.Windows.Forms.Control.Location%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1040">These events are not generated by programmatic manipulation of the form, for example by changing the <xref:System.Windows.Forms.Form.Size%2A> or <xref:System.Windows.Forms.Control.Location%2A> properties.</span></span>  
  
 <span data-ttu-id="1bd5f-1041">如需有關如何處理事件的詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1041">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1bd5f-1042">下列程式碼範例示範如何使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1042">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="1bd5f-1043">在範例中，事件處理常式會報告一次<xref:System.Windows.Forms.Form.ResizeBegin>事件。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1043">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Form.ResizeBegin> event.</span></span> <span data-ttu-id="1bd5f-1044">此報表可協助您了解事件發生的時機，並可協助您偵錯。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1044">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="1bd5f-1045">若要報告多個事件或事件經常發生，請考慮更換<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>具有<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>或將訊息附加到多行<xref:System.Windows.Forms.TextBox>。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1045">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="1bd5f-1046">若要執行範例程式碼，將它貼到包含類型的執行個體的專案<xref:System.Windows.Forms.Form>名為`Form1`。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1046">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.Form> named `Form1`.</span></span> <span data-ttu-id="1bd5f-1047">請確定 與關聯的事件處理常式<xref:System.Windows.Forms.Form.ResizeBegin>事件。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1047">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.Form.ResizeBegin> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#404](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#404)]
 [!code-vb[System.Windows.Forms.EventExamples#404](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#404)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Form.OnResizeBegin(System.EventArgs)" />
        <altmember cref="P:System.Windows.Forms.Form.AutoSize" />
        <altmember cref="P:System.Windows.Forms.Form.ClientSize" />
        <altmember cref="P:System.Windows.Forms.Form.DesktopBounds" />
        <altmember cref="P:System.Windows.Forms.Control.Location" />
        <altmember cref="P:System.Windows.Forms.Form.MaximumSize" />
        <altmember cref="P:System.Windows.Forms.Form.MinimumSize" />
        <altmember cref="P:System.Windows.Forms.Control.PreferredSize" />
        <altmember cref="P:System.Windows.Forms.Form.Size" />
        <altmember cref="P:System.Windows.Forms.Form.SizeGripStyle" />
        <altmember cref="E:System.Windows.Forms.Control.Click" />
        <altmember cref="E:System.Windows.Forms.Control.Resize" />
        <altmember cref="E:System.Windows.Forms.Form.ResizeEnd" />
        <altmember cref="E:System.Windows.Forms.Control.SizeChanged" />
      </Docs>
    </Member>
    <Member MemberName="ResizeEnd">
      <MemberSignature Language="C#" Value="public event EventHandler ResizeEnd;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ResizeEnd" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Form.ResizeEnd" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ResizeEnd As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ResizeEnd;" />
      <MemberSignature Language="F#" Value="member this.ResizeEnd : EventHandler " Usage="member this.ResizeEnd : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1bd5f-1048">Occurs when a form exits resizing mode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-1048">Occurs when a form exits resizing mode.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bd5f-1049"><xref:System.Windows.Forms.Form.ResizeEnd>使用者完成調整表單大小通常藉由拖曳框線或調整大小底框右下角的表單，其中之一，再放開它時，會引發事件。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1049">The <xref:System.Windows.Forms.Form.ResizeEnd> event is raised when the user finishes resizing a form, typically by dragging one of the borders or the sizing grip located on the lower-right corner of the form, and then releasing it.</span></span> <span data-ttu-id="1bd5f-1050">如需有關調整作業的詳細資訊，請參閱<xref:System.Windows.Forms.Form.ResizeBegin>事件。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1050">For more information about the resizing operation, see the <xref:System.Windows.Forms.Form.ResizeBegin> event.</span></span>  
  
 <span data-ttu-id="1bd5f-1051"><xref:System.Windows.Forms.Form.ResizeEnd>之後使用者將移至表單時，通常按一下並拖曳標題列上，也會產生事件。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1051">The <xref:System.Windows.Forms.Form.ResizeEnd> event is also generated after the user moves a form, typically by clicking and dragging on the caption bar.</span></span> <span data-ttu-id="1bd5f-1052">此事件不由產生的表單，以程式設計方式操作，例如藉由變更<xref:System.Windows.Forms.Form.Size%2A>或<xref:System.Windows.Forms.Control.Location%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1052">This event is not generated by programmatic manipulation of the form, for example by changing the <xref:System.Windows.Forms.Form.Size%2A> or <xref:System.Windows.Forms.Control.Location%2A> properties.</span></span>  
  
 <span data-ttu-id="1bd5f-1053">如需有關如何處理事件的詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1053">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1bd5f-1054">下列程式碼範例示範如何使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1054">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="1bd5f-1055">在範例中，事件處理常式會報告一次<xref:System.Windows.Forms.Form.ResizeEnd>事件。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1055">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Form.ResizeEnd> event.</span></span> <span data-ttu-id="1bd5f-1056">此報表可協助您了解事件發生的時機，並可協助您偵錯。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1056">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="1bd5f-1057">若要報告多個事件或事件經常發生，請考慮更換<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>具有<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>或將訊息附加到多行<xref:System.Windows.Forms.TextBox>。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1057">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="1bd5f-1058">若要執行範例程式碼，將它貼到包含類型的執行個體的專案<xref:System.Windows.Forms.Form>名為`Form1`。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1058">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.Form> named `Form1`.</span></span> <span data-ttu-id="1bd5f-1059">請確定 與關聯的事件處理常式<xref:System.Windows.Forms.Form.ResizeEnd>事件。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1059">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.Form.ResizeEnd> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#405](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#405)]
 [!code-vb[System.Windows.Forms.EventExamples#405](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#405)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Form.OnResizeEnd(System.EventArgs)" />
        <altmember cref="P:System.Windows.Forms.Form.AutoSize" />
        <altmember cref="P:System.Windows.Forms.Form.ClientSize" />
        <altmember cref="P:System.Windows.Forms.Form.DesktopBounds" />
        <altmember cref="P:System.Windows.Forms.Control.Location" />
        <altmember cref="P:System.Windows.Forms.Form.MaximumSize" />
        <altmember cref="P:System.Windows.Forms.Form.MinimumSize" />
        <altmember cref="P:System.Windows.Forms.Control.PreferredSize" />
        <altmember cref="P:System.Windows.Forms.Form.Size" />
        <altmember cref="P:System.Windows.Forms.Form.SizeGripStyle" />
        <altmember cref="E:System.Windows.Forms.Control.Click" />
        <altmember cref="E:System.Windows.Forms.Control.Resize" />
        <altmember cref="E:System.Windows.Forms.Form.ResizeBegin" />
        <altmember cref="E:System.Windows.Forms.Control.SizeChanged" />
      </Docs>
    </Member>
    <Member MemberName="RestoreBounds">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle RestoreBounds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Rectangle RestoreBounds" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.RestoreBounds" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RestoreBounds As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Rectangle RestoreBounds { System::Drawing::Rectangle get(); };" />
      <MemberSignature Language="F#" Value="member this.RestoreBounds : System.Drawing.Rectangle" Usage="System.Windows.Forms.Form.RestoreBounds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1bd5f-1060">Gets the location and size of the form in its normal window state.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-1060">Gets the location and size of the form in its normal window state.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1bd5f-1061">
            <see cref="T:System.Drawing.Rectangle" />，包含處於正常視窗狀態下的表單位置和大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-1061">A <see cref="T:System.Drawing.Rectangle" /> that contains the location and size of the form in the normal window state.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bd5f-1062">一般而言，您可以使用<xref:System.Windows.Forms.Form.RestoreBounds%2A>來追蹤使用者的視窗大小和位置處於正常視窗狀態的喜好設定表單的屬性。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1062">Typically, you use the <xref:System.Windows.Forms.Form.RestoreBounds%2A> property to track the user's window size and position preferences for the form in its normal window state.</span></span> <span data-ttu-id="1bd5f-1063">您應該追蹤的值<xref:System.Windows.Forms.Form.WindowState%2A>和<xref:System.Windows.Forms.Form.RestoreBounds%2A>時追蹤使用者的視窗喜好設定的屬性。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1063">You should track both the value of the <xref:System.Windows.Forms.Form.WindowState%2A> and <xref:System.Windows.Forms.Form.RestoreBounds%2A> properties when tracking the user's window preferences.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1bd5f-1064">值<xref:System.Windows.Forms.Form.RestoreBounds%2A>屬性是時才有效<xref:System.Windows.Forms.Form.WindowState%2A>屬性<xref:System.Windows.Forms.Form>類別不是等於<xref:System.Windows.Forms.FormWindowState.Normal>。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1064">The value of the <xref:System.Windows.Forms.Form.RestoreBounds%2A> property is valid only when the <xref:System.Windows.Forms.Form.WindowState%2A> property of the <xref:System.Windows.Forms.Form> class is not equal to <xref:System.Windows.Forms.FormWindowState.Normal>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RightToLeftLayout">
      <MemberSignature Language="C#" Value="public virtual bool RightToLeftLayout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RightToLeftLayout" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.RightToLeftLayout" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property RightToLeftLayout As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RightToLeftLayout { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.RightToLeftLayout : bool with get, set" Usage="System.Windows.Forms.Form.RightToLeftLayout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1bd5f-1065">Gets or sets a value indicating whether right-to-left mirror placement is turned on.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-1065">Gets or sets a value indicating whether right-to-left mirror placement is turned on.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1bd5f-1066">如果已開啟右到左的左右反轉位置，則為 <see langword="true" />，否則為表示標準子控制項位置的 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-1066">
              <see langword="true" /> if right-to-left mirror placement is turned on; otherwise, <see langword="false" /> for standard child control placement.</span>
          </span>
          <span data-ttu-id="1bd5f-1067">預設值為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-1067">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bd5f-1068"><xref:System.Windows.Forms.Form.RightToLeftLayout%2A>屬性是主要用於開發世界性的表單，為全球的觀眾。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1068">The <xref:System.Windows.Forms.Form.RightToLeftLayout%2A> property is primarily useful for developing world-ready forms for worldwide audiences.</span></span> <span data-ttu-id="1bd5f-1069">許多表單設計控制項的配置中以左到右的方式在表單上。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1069">Many forms are designed so that controls are laid out on a form in a left-to-right fashion.</span></span> <span data-ttu-id="1bd5f-1070">下列形式會相容於這個方向書寫的語言。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1070">These forms are compatible with languages that follow this writing direction.</span></span> <span data-ttu-id="1bd5f-1071">不過，當您從右至左的語言的使用者顯示的相同形式，最好是通常在表單上控制項的順序相反。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1071">However, when you display the same forms to users of right-to-left languages, it is often preferable to reverse the order of the controls on the form.</span></span> <span data-ttu-id="1bd5f-1072">如果兩個<xref:System.Windows.Forms.Form.RightToLeftLayout%2A>並<xref:System.Windows.Forms.Control.RightToLeft%2A>屬性是`true`、 鏡像將會開啟表單和控制項位置和文字流向會由右至左。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1072">If both the <xref:System.Windows.Forms.Form.RightToLeftLayout%2A> and <xref:System.Windows.Forms.Control.RightToLeft%2A> properties are `true`, mirroring will be turned on for the form, and control placement and text flow will be right-to-left.</span></span>  
  
 <span data-ttu-id="1bd5f-1073">不同於<xref:System.Windows.Forms.Control.RightToLeft%2A>，<xref:System.Windows.Forms.Form.RightToLeftLayout%2A>不會繼承。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1073">Unlike <xref:System.Windows.Forms.Control.RightToLeft%2A>, <xref:System.Windows.Forms.Form.RightToLeftLayout%2A> does not inherit.</span></span> <span data-ttu-id="1bd5f-1074">如果您想要進行子控制項，您必須在每個您想要鏡像的子控制項來進行設定。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1074">If you want it to take effect for child controls, you must set it on each child control that you want mirrored.</span></span>  
  
 <span data-ttu-id="1bd5f-1075">不是擁有者繪製時，支援<xref:System.Windows.Forms.Form.RightToLeftLayout%2A>設為`Yes`。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1075">Owner draw is not supported when <xref:System.Windows.Forms.Form.RightToLeftLayout%2A> is set to `Yes`.</span></span> <span data-ttu-id="1bd5f-1076">主控描繪事件，還是會發生，但您在這些事件中撰寫任何程式碼的行為未定義。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1076">The owner draw events will still occur, but the behavior of any code you author in these events is not defined.</span></span> <span data-ttu-id="1bd5f-1077">此外， <xref:System.Windows.Forms.Control.BackgroundImage%2A>， <xref:System.Windows.Forms.Form.Opacity%2A>， <xref:System.Windows.Forms.Form.TransparencyKey%2A>，而且不支援的繪製事件。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1077">Additionally, <xref:System.Windows.Forms.Control.BackgroundImage%2A>, <xref:System.Windows.Forms.Form.Opacity%2A>, <xref:System.Windows.Forms.Form.TransparencyKey%2A>, and the painting events are not supported.</span></span>  
  
 <span data-ttu-id="1bd5f-1078"><xref:System.Windows.Forms.Form.RightToLeftLayout%2A>和<xref:System.Windows.Forms.Control.RightToLeft%2A>屬性會設定下列的 Win32 API 視窗樣式：</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1078">The <xref:System.Windows.Forms.Form.RightToLeftLayout%2A> and <xref:System.Windows.Forms.Control.RightToLeft%2A> properties cause the following Win32 API window styles to be set:</span></span>  
  
-   <span data-ttu-id="1bd5f-1079">當<xref:System.Windows.Forms.Control.RightToLeft%2A>設為`Yes`並<xref:System.Windows.Forms.Form.RightToLeftLayout%2A>設為`true`，設定 Windows Form`WS_EX_LAYOUTRTL`視窗樣式，並移除`WS_EX_RIGHT`和`WS_EX_RTLREADING`樣式。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1079">When <xref:System.Windows.Forms.Control.RightToLeft%2A> is set to `Yes` and <xref:System.Windows.Forms.Form.RightToLeftLayout%2A> is set to `true`, Windows Forms sets the `WS_EX_LAYOUTRTL` window style, and removes the `WS_EX_RIGHT` and `WS_EX_RTLREADING` styles.</span></span>  
  
-   <span data-ttu-id="1bd5f-1080">當<xref:System.Windows.Forms.Control.RightToLeft%2A>設為`Yes`但<xref:System.Windows.Forms.Form.RightToLeftLayout%2A>設為`No`，設定 Windows Forms`WS_EX_RIGHT`和`WS_EX_RTLREADING`視窗樣式。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1080">When <xref:System.Windows.Forms.Control.RightToLeft%2A> is set to `Yes` but <xref:System.Windows.Forms.Form.RightToLeftLayout%2A> is set to `No`, Windows Forms sets the `WS_EX_RIGHT` and `WS_EX_RTLREADING` window styles.</span></span>  
  
 <span data-ttu-id="1bd5f-1081">變更這個屬性的值會引發<xref:System.Windows.Forms.Form.RightToLeftLayoutChanged>事件。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1081">Changing the value of this property raises the <xref:System.Windows.Forms.Form.RightToLeftLayoutChanged> event.</span></span>  
  
 <span data-ttu-id="1bd5f-1082">如需有關全球化問題的詳細資訊，請參閱[開發世界性的應用程式的最佳作法](~/docs/standard/globalization-localization/best-practices-for-developing-world-ready-apps.md)。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1082">For more information about globalization issues, see [Best Practices for Developing World-Ready Applications](~/docs/standard/globalization-localization/best-practices-for-developing-world-ready-apps.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.RightToLeft" />
        <altmember cref="Overload:System.Windows.Forms.Control.PerformLayout" />
        <altmember cref="E:System.Windows.Forms.Form.RightToLeftLayoutChanged" />
      </Docs>
    </Member>
    <Member MemberName="RightToLeftLayoutChanged">
      <MemberSignature Language="C#" Value="public event EventHandler RightToLeftLayoutChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler RightToLeftLayoutChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Form.RightToLeftLayoutChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RightToLeftLayoutChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ RightToLeftLayoutChanged;" />
      <MemberSignature Language="F#" Value="member this.RightToLeftLayoutChanged : EventHandler " Usage="member this.RightToLeftLayoutChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1bd5f-1083">Occurs after the value of the <see cref="P:System.Windows.Forms.Form.RightToLeftLayout" /> property changes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-1083">Occurs after the value of the <see cref="P:System.Windows.Forms.Form.RightToLeftLayout" /> property changes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bd5f-1084"><xref:System.Windows.Forms.Control.RightToLeft%2A>和<xref:System.Windows.Forms.Form.RightToLeftLayout%2A>屬性通常用於開發世界性的應用程式。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1084">The <xref:System.Windows.Forms.Control.RightToLeft%2A> and <xref:System.Windows.Forms.Form.RightToLeftLayout%2A> properties are typically used in developing World-Ready applications.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1bd5f-1085">下列程式碼範例示範如何使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1085">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="1bd5f-1086">在範例中，事件處理常式會報告一次<xref:System.Windows.Forms.Form.RightToLeftLayoutChanged>事件。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1086">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Form.RightToLeftLayoutChanged> event.</span></span> <span data-ttu-id="1bd5f-1087">此報表可協助您了解事件發生的時機，並可協助您偵錯。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1087">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="1bd5f-1088">若要報告多個事件或事件經常發生，請考慮更換<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>具有<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>或將訊息附加到多行<xref:System.Windows.Forms.TextBox>。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1088">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="1bd5f-1089">若要執行範例程式碼，將它貼到包含類型的執行個體的專案<xref:System.Windows.Forms.Form>名為`Form1`。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1089">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.Form> named `Form1`.</span></span> <span data-ttu-id="1bd5f-1090">請確定 與關聯的事件處理常式<xref:System.Windows.Forms.Form.RightToLeftLayoutChanged>事件。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1090">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.Form.RightToLeftLayoutChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#402](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#402)]
 [!code-vb[System.Windows.Forms.EventExamples#402](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#402)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.RightToLeftLayout" />
        <altmember cref="M:System.Windows.Forms.Form.OnRightToLeftLayoutChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ScaleControl">
      <MemberSignature Language="C#" Value="protected override void ScaleControl (System.Drawing.SizeF factor, System.Windows.Forms.BoundsSpecified specified);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ScaleControl(valuetype System.Drawing.SizeF factor, valuetype System.Windows.Forms.BoundsSpecified specified) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.ScaleControl(System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub ScaleControl (factor As SizeF, specified As BoundsSpecified)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void ScaleControl(System::Drawing::SizeF factor, System::Windows::Forms::BoundsSpecified specified);" />
      <MemberSignature Language="F#" Value="override this.ScaleControl : System.Drawing.SizeF * System.Windows.Forms.BoundsSpecified -&gt; unit" Usage="form.ScaleControl (factor, specified)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="factor" Type="System.Drawing.SizeF" />
        <Parameter Name="specified" Type="System.Windows.Forms.BoundsSpecified" />
      </Parameters>
      <Docs>
        <param name="factor">
          <span data-ttu-id="1bd5f-1091">The factor by which the height and width of the control are scaled.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-1091">The factor by which the height and width of the control are scaled.</span>
          </span>
        </param>
        <param name="specified">
          <span data-ttu-id="1bd5f-1092">A <see cref="T:System.Windows.Forms.BoundsSpecified" /> value that specifies the bounds of the control to use when defining its size and position.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-1092">A <see cref="T:System.Windows.Forms.BoundsSpecified" /> value that specifies the bounds of the control to use when defining its size and position.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1bd5f-1093">Scales the location, size, padding, and margin of a control.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-1093">Scales the location, size, padding, and margin of a control.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScaleCore">
      <MemberSignature Language="C#" Value="protected override void ScaleCore (float x, float y);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ScaleCore(float32 x, float32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.ScaleCore(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub ScaleCore (x As Single, y As Single)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void ScaleCore(float x, float y);" />
      <MemberSignature Language="F#" Value="override this.ScaleCore : single * single -&gt; unit" Usage="form.ScaleCore (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="1bd5f-1094">Percentage to scale the form horizontally</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-1094">Percentage to scale the form horizontally</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="1bd5f-1095">Percentage to scale the form vertically</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-1095">Percentage to scale the form vertically</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1bd5f-1096">Performs scaling of the form.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-1096">Performs scaling of the form.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.ScaleCore(System.Single,System.Single)" />
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="protected override void Select (bool directed, bool forward);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Select(bool directed, bool forward) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.Select(System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Select (directed As Boolean, forward As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Select(bool directed, bool forward);" />
      <MemberSignature Language="F#" Value="override this.Select : bool * bool -&gt; unit" Usage="form.Select (directed, forward)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directed" Type="System.Boolean" />
        <Parameter Name="forward" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="directed">
          <span data-ttu-id="1bd5f-1097">If set to true that the active control is changed</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-1097">If set to true that the active control is changed</span>
          </span>
        </param>
        <param name="forward">
          <span data-ttu-id="1bd5f-1098">If directed is true, then this controls the direction in which focus is moved.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-1098">If directed is true, then this controls the direction in which focus is moved.</span>
          </span>
          <span data-ttu-id="1bd5f-1099">If this is <see langword="true" />, then the next control is selected; otherwise, the previous control is selected.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-1099">If this is <see langword="true" />, then the next control is selected; otherwise, the previous control is selected.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1bd5f-1100">Selects this form, and optionally selects the next or previous control.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-1100">Selects this form, and optionally selects the next or previous control.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="1bd5f-1101">變更焦點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-1101">For changing focus.</span>
          </span>
          <span data-ttu-id="1bd5f-1102">相關聯的列舉型別： <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-1102">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="SetBoundsCore">
      <MemberSignature Language="C#" Value="protected override void SetBoundsCore (int x, int y, int width, int height, System.Windows.Forms.BoundsSpecified specified);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetBoundsCore(int32 x, int32 y, int32 width, int32 height, valuetype System.Windows.Forms.BoundsSpecified specified) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub SetBoundsCore (x As Integer, y As Integer, width As Integer, height As Integer, specified As BoundsSpecified)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void SetBoundsCore(int x, int y, int width, int height, System::Windows::Forms::BoundsSpecified specified);" />
      <MemberSignature Language="F#" Value="override this.SetBoundsCore : int * int * int * int * System.Windows.Forms.BoundsSpecified -&gt; unit" Usage="form.SetBoundsCore (x, y, width, height, specified)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="specified" Type="System.Windows.Forms.BoundsSpecified" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="1bd5f-1103">The new <see cref="P:System.Windows.Forms.Control.Left" /> property value of the control.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-1103">The new <see cref="P:System.Windows.Forms.Control.Left" /> property value of the control.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="1bd5f-1104">The new <see cref="P:System.Windows.Forms.Control.Top" /> property value of the control.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-1104">The new <see cref="P:System.Windows.Forms.Control.Top" /> property value of the control.</span>
          </span>
        </param>
        <param name="width">
          <span data-ttu-id="1bd5f-1105">The new <see cref="P:System.Windows.Forms.Control.Width" /> property value of the control.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-1105">The new <see cref="P:System.Windows.Forms.Control.Width" /> property value of the control.</span>
          </span>
        </param>
        <param name="height">
          <span data-ttu-id="1bd5f-1106">The new <see cref="P:System.Windows.Forms.Control.Height" /> property value of the control.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-1106">The new <see cref="P:System.Windows.Forms.Control.Height" /> property value of the control.</span>
          </span>
        </param>
        <param name="specified">
          <span data-ttu-id="1bd5f-1107">A bitwise combination of the <see cref="T:System.Windows.Forms.BoundsSpecified" /> values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-1107">A bitwise combination of the <see cref="T:System.Windows.Forms.BoundsSpecified" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1bd5f-1108">Performs the work of setting the specified bounds of this control.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-1108">Performs the work of setting the specified bounds of this control.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" />
      </Docs>
    </Member>
    <Member MemberName="SetClientSizeCore">
      <MemberSignature Language="C#" Value="protected override void SetClientSizeCore (int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetClientSizeCore(int32 x, int32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.SetClientSizeCore(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub SetClientSizeCore (x As Integer, y As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void SetClientSizeCore(int x, int y);" />
      <MemberSignature Language="F#" Value="override this.SetClientSizeCore : int * int -&gt; unit" Usage="form.SetClientSizeCore (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="1bd5f-1109">Requested width of the client region.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-1109">Requested width of the client region.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="1bd5f-1110">Requested height of the client region.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-1110">Requested height of the client region.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1bd5f-1111">Sets the client size of the form.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-1111">Sets the client size of the form.</span>
          </span>
          <span data-ttu-id="1bd5f-1112">This will adjust the bounds of the form to make the client size the requested size.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-1112">This will adjust the bounds of the form to make the client size the requested size.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.Form.ClientSize" />
      </Docs>
    </Member>
    <Member MemberName="SetDesktopBounds">
      <MemberSignature Language="C#" Value="public void SetDesktopBounds (int x, int y, int width, int height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetDesktopBounds(int32 x, int32 y, int32 width, int32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.SetDesktopBounds(System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetDesktopBounds (x As Integer, y As Integer, width As Integer, height As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetDesktopBounds(int x, int y, int width, int height);" />
      <MemberSignature Language="F#" Value="member this.SetDesktopBounds : int * int * int * int -&gt; unit" Usage="form.SetDesktopBounds (x, y, width, height)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="1bd5f-1113">The x-coordinate of the form's location.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-1113">The x-coordinate of the form's location.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="1bd5f-1114">The y-coordinate of the form's location.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-1114">The y-coordinate of the form's location.</span>
          </span>
        </param>
        <param name="width">
          <span data-ttu-id="1bd5f-1115">The width of the form.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-1115">The width of the form.</span>
          </span>
        </param>
        <param name="height">
          <span data-ttu-id="1bd5f-1116">The height of the form.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-1116">The height of the form.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1bd5f-1117">Sets the bounds of the form in desktop coordinates.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-1117">Sets the bounds of the form in desktop coordinates.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bd5f-1118">桌面座標根據畫面中，會排除在工作列的工作區域。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1118">Desktop coordinates are based on the working area of the screen, which excludes the taskbar.</span></span> <span data-ttu-id="1bd5f-1119">您可以使用這個方法來設定的位置和您的表單大小，在桌面上。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1119">You can use this method to set the position and size of your form on the desktop.</span></span> <span data-ttu-id="1bd5f-1120">因為桌面座標會根據表單的工作區，您可以使用這個方法，以確保您的表單是在桌面上完全可見。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1120">Since desktop coordinates are based on the working area of the form, you can use this method to ensure that your form is completely visible on the desktop.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1bd5f-1121">下列程式碼範例示範如何使用<xref:System.Windows.Forms.Form.SetDesktopBounds%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1121">The following code example demonstrates using the <xref:System.Windows.Forms.Form.SetDesktopBounds%2A> method.</span></span> <span data-ttu-id="1bd5f-1122">若要執行此範例中，貼上下列程式碼中包含名為按鈕的表單`Button2`。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1122">To run this example, paste the following code in a form that contains a button named `Button2`.</span></span> <span data-ttu-id="1bd5f-1123">請確定其事件處理常式相關聯的所有事件。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1123">Ensure all events are associated with their event handlers.</span></span>  
  
 [!code-cpp[System.Windows.Forms.FormExample#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.FormExample/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.FormExample#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.FormExample/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.FormExample#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.FormExample/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Form.SetDesktopLocation(System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="SetDesktopLocation">
      <MemberSignature Language="C#" Value="public void SetDesktopLocation (int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetDesktopLocation(int32 x, int32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.SetDesktopLocation(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetDesktopLocation (x As Integer, y As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetDesktopLocation(int x, int y);" />
      <MemberSignature Language="F#" Value="member this.SetDesktopLocation : int * int -&gt; unit" Usage="form.SetDesktopLocation (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="1bd5f-1124">The x-coordinate of the form's location.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-1124">The x-coordinate of the form's location.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="1bd5f-1125">The y-coordinate of the form's location.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-1125">The y-coordinate of the form's location.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1bd5f-1126">Sets the location of the form in desktop coordinates.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-1126">Sets the location of the form in desktop coordinates.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bd5f-1127">桌面座標根據畫面中，會排除在工作列的工作區域。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1127">Desktop coordinates are based on the working area of the screen, which excludes the taskbar.</span></span> <span data-ttu-id="1bd5f-1128">您可以使用這個方法在桌面上放置您的表單。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1128">You can use this method to position your form on the desktop.</span></span> <span data-ttu-id="1bd5f-1129">因為桌面座標會根據表單的工作區，您可以使用這個方法，以確保您的表單是在桌面上完全可見。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1129">Since desktop coordinates are based on the working area of the form, you can use this method to ensure that your form is completely visible on the desktop.</span></span> <span data-ttu-id="1bd5f-1130">這個方法是主要用於最上層的表單。使用<xref:System.Windows.Forms.Form.LayoutMdi%2A>放置多個文件介面 (MDI) 子表單的方法。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1130">This method is intended to be used primarily for top-level forms; use the <xref:System.Windows.Forms.Form.LayoutMdi%2A> method to position multiple-document interface (MDI) child forms.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1bd5f-1131">下列程式碼範例示範如何使用<xref:System.Windows.Forms.Form.SetDesktopLocation%2A>，<xref:System.Windows.Forms.Form.Load>和<xref:System.Windows.Forms.Form.Activate%2A>成員。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1131">The following code example demonstrates how to use the <xref:System.Windows.Forms.Form.SetDesktopLocation%2A>, <xref:System.Windows.Forms.Form.Load> and <xref:System.Windows.Forms.Form.Activate%2A> members.</span></span> <span data-ttu-id="1bd5f-1132">若要執行此範例，下列程式碼貼入表單名`Form1`包含一個按鈕名`Button1`並將兩個`Label`控制項，稱為`Label1`和`Label2`。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1132">To run the example, paste the following code in a form called `Form1` containing a button called `Button1` and two `Label` controls called `Label1` and `Label2`.</span></span>  
  
 [!code-cpp[System.Windows.Forms.FormsActivate#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.FormsActivate/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.FormsActivate#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.FormsActivate/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.FormsActivate#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.FormsActivate/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Form.SetDesktopBounds(System.Int32,System.Int32,System.Int32,System.Int32)" />
        <altmember cref="M:System.Windows.Forms.Form.LayoutMdi(System.Windows.Forms.MdiLayout)" />
      </Docs>
    </Member>
    <Member MemberName="SetVisibleCore">
      <MemberSignature Language="C#" Value="protected override void SetVisibleCore (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetVisibleCore(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.SetVisibleCore(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub SetVisibleCore (value As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void SetVisibleCore(bool value);" />
      <MemberSignature Language="F#" Value="override this.SetVisibleCore : bool -&gt; unit" Usage="form.SetVisibleCore value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="1bd5f-1133">
            <see langword="true" /> to make the control visible; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-1133">
              <see langword="true" /> to make the control visible; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1bd5f-1134">Sets the control to the specified visible state.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-1134">Sets the control to the specified visible state.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.SetVisibleCore(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="Show">
      <MemberSignature Language="C#" Value="public void Show (System.Windows.Forms.IWin32Window owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Show(class System.Windows.Forms.IWin32Window owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.Show(System.Windows.Forms.IWin32Window)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Show (owner As IWin32Window)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Show(System::Windows::Forms::IWin32Window ^ owner);" />
      <MemberSignature Language="F#" Value="override this.Show : System.Windows.Forms.IWin32Window -&gt; unit" Usage="form.Show owner" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="owner" Type="System.Windows.Forms.IWin32Window" />
      </Parameters>
      <Docs>
        <param name="owner">
          <span data-ttu-id="1bd5f-1135">Any object that implements <see cref="T:System.Windows.Forms.IWin32Window" /> and represents the top-level window that will own this form.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-1135">Any object that implements <see cref="T:System.Windows.Forms.IWin32Window" /> and represents the top-level window that will own this form.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1bd5f-1136">Shows the form with the specified owner to the user.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-1136">Shows the form with the specified owner to the user.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bd5f-1137">您可以使用這個方法來顯示非強制回應表單。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1137">You can use this method to display a non-modal form.</span></span> <span data-ttu-id="1bd5f-1138">當您使用此方法中，<xref:System.Windows.Forms.Form.Owner%2A>表單的屬性設定為`owner`。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1138">When you use this method, the <xref:System.Windows.Forms.Form.Owner%2A> property of the form is set to `owner`.</span></span> <span data-ttu-id="1bd5f-1139">可以使用非強制回應表單<xref:System.Windows.Forms.Form.Owner%2A>屬性，以取得主控表單的相關資訊。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1139">The non-modal form can use the <xref:System.Windows.Forms.Form.Owner%2A> property to get information about the owning form.</span></span>  <span data-ttu-id="1bd5f-1140">呼叫這個方法相當於設定<xref:System.Windows.Forms.Form.Owner%2A>非強制回應屬性，然後再呼叫<xref:System.Windows.Forms.Control.Show>方法。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1140">Calling this method is identical to setting the <xref:System.Windows.Forms.Form.Owner%2A> property of the non-modal and then calling the <xref:System.Windows.Forms.Control.Show> method.</span></span>  
  
 <span data-ttu-id="1bd5f-1141">顯示表單就相當於<xref:System.Windows.Forms.Control.Visible%2A>屬性設`true`。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1141">Showing the form is equivalent to setting the <xref:System.Windows.Forms.Control.Visible%2A> property to `true`.</span></span> <span data-ttu-id="1bd5f-1142">在後<xref:System.Windows.Forms.Form.Show%2A>呼叫方法時，<xref:System.Windows.Forms.Control.Visible%2A>屬性傳回的值`true`直到<xref:System.Windows.Forms.Control.Hide%2A>呼叫方法。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1142">After the <xref:System.Windows.Forms.Form.Show%2A> method is called, the <xref:System.Windows.Forms.Control.Visible%2A> property returns a value of `true` until the <xref:System.Windows.Forms.Control.Hide%2A> method is called.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="1bd5f-1143">The form being shown is already visible.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-1143">The form being shown is already visible.</span>
          </span>
          <span data-ttu-id="1bd5f-1144">-or-  The form specified in the <paramref name="owner" /> parameter is the same as the form being shown.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-1144">-or-  The form specified in the <paramref name="owner" /> parameter is the same as the form being shown.</span>
          </span>
          <span data-ttu-id="1bd5f-1145">-or-  The form being shown is disabled.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-1145">-or-  The form being shown is disabled.</span>
          </span>
          <span data-ttu-id="1bd5f-1146">-or-  The form being shown is not a top-level window.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-1146">-or-  The form being shown is not a top-level window.</span>
          </span>
          <span data-ttu-id="1bd5f-1147">-or-  The form being shown as a dialog box is already a modal form.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-1147">-or-  The form being shown as a dialog box is already a modal form.</span>
          </span>
          <span data-ttu-id="1bd5f-1148">-or-  The current process is not running in user interactive mode (for more information, see <see cref="P:System.Windows.Forms.SystemInformation.UserInteractive" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-1148">-or-  The current process is not running in user interactive mode (for more information, see <see cref="P:System.Windows.Forms.SystemInformation.UserInteractive" />).</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Windows.Forms.Form.ShowDialog" />
        <altmember cref="P:System.Windows.Forms.Control.Visible" />
        <altmember cref="P:System.Windows.Forms.Form.WindowState" />
        <altmember cref="P:System.Windows.Forms.Form.ShowInTaskbar" />
        <altmember cref="P:System.Windows.Forms.Form.ShowIcon" />
        <altmember cref="E:System.Windows.Forms.Form.Shown" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ShowDialog">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1bd5f-1149">Shows the form as a modal dialog box.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-1149">Shows the form as a modal dialog box.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ShowDialog">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DialogResult ShowDialog ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Forms.DialogResult ShowDialog() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.ShowDialog" />
      <MemberSignature Language="VB.NET" Value="Public Function ShowDialog () As DialogResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::DialogResult ShowDialog();" />
      <MemberSignature Language="F#" Value="member this.ShowDialog : unit -&gt; System.Windows.Forms.DialogResult" Usage="form.ShowDialog " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DialogResult</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1bd5f-1150">Shows the form as a modal dialog box.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-1150">Shows the form as a modal dialog box.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1bd5f-1151">One of the <see cref="T:System.Windows.Forms.DialogResult" /> values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-1151">One of the <see cref="T:System.Windows.Forms.DialogResult" /> values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bd5f-1152">您可以使用這個方法，以在您的應用程式中顯示強制回應對話方塊。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1152">You can use this method to display a modal dialog box in your application.</span></span> <span data-ttu-id="1bd5f-1153">呼叫這個方法時，它後面的程式碼之前不會執行之後在關閉對話方塊。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1153">When this method is called, the code following it is not executed until after the dialog box is closed.</span></span> <span data-ttu-id="1bd5f-1154">可指派的其中一個值對話方塊<xref:System.Windows.Forms.DialogResult>列舉型別，將它指派給<xref:System.Windows.Forms.Button.DialogResult%2A>屬性<xref:System.Windows.Forms.Button>表單上，或藉由設定<xref:System.Windows.Forms.Form.DialogResult%2A>表單程式碼中的屬性。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1154">The dialog box can be assigned one of the values of the <xref:System.Windows.Forms.DialogResult> enumeration by assigning it to the <xref:System.Windows.Forms.Button.DialogResult%2A> property of a <xref:System.Windows.Forms.Button> on the form or by setting the <xref:System.Windows.Forms.Form.DialogResult%2A> property of the form in code.</span></span> <span data-ttu-id="1bd5f-1155">然後會傳回這個值，這個方法。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1155">This value is then returned by this method.</span></span> <span data-ttu-id="1bd5f-1156">您可以使用此傳回值，以決定如何處理發生在對話方塊中的動作。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1156">You can use this return value to determine how to process the actions that occurred in the dialog box.</span></span> <span data-ttu-id="1bd5f-1157">例如，如果對話方塊已關閉，且傳回`DialogResult.Cancel`值，您可透過這種方法，防止之後呼叫的程式碼<xref:System.Windows.Forms.Form.ShowDialog%2A>無法執行。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1157">For example, if the dialog box was closed and returned the `DialogResult.Cancel` value through this method, you could prevent code following the call to <xref:System.Windows.Forms.Form.ShowDialog%2A> from executing.</span></span>  
  
 <span data-ttu-id="1bd5f-1158">當表單顯示為強制回應對話方塊時，按一下**關閉**按鈕 （具有表單右上角的 X 按鈕） 將會隱藏表單並<xref:System.Windows.Forms.Form.DialogResult%2A>屬性設為`DialogResult.Cancel`。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1158">When a form is displayed as a modal dialog box, clicking the **Close** button (the button with an X at the upper-right corner of the form) causes the form to be hidden and the <xref:System.Windows.Forms.Form.DialogResult%2A> property to be set to `DialogResult.Cancel`.</span></span> <span data-ttu-id="1bd5f-1159">不像非強制回應表單<xref:System.Windows.Forms.Form.Close%2A>當使用者按一下對話方塊中的 [關閉表單] 按鈕，或設定值，由.NET Framework 不呼叫方法<xref:System.Windows.Forms.Form.DialogResult%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1159">Unlike non-modal forms, the <xref:System.Windows.Forms.Form.Close%2A> method is not called by the .NET Framework when the user clicks the close form button of a dialog box or sets the value of the <xref:System.Windows.Forms.Form.DialogResult%2A> property.</span></span> <span data-ttu-id="1bd5f-1160">改為此表單會隱藏，並可再次顯示，而不需要建立對話方塊中的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1160">Instead the form is hidden and can be shown again without creating a new instance of the dialog box.</span></span> <span data-ttu-id="1bd5f-1161">因為表單中顯示為對話方塊中會隱藏而不是關閉，您必須呼叫<xref:System.Windows.Forms.Control.Dispose%2A>表單在表單不再需要由您的應用程式時的方法。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1161">Because a form displayed as a dialog box is hidden instead of closed, you must call the <xref:System.Windows.Forms.Control.Dispose%2A> method of the form when the form is no longer needed by your application.</span></span>  
  
 <span data-ttu-id="1bd5f-1162">這個版本的<xref:System.Windows.Forms.Form.ShowDialog%2A>方法未指定表單或控制項為其擁有者。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1162">This version of the <xref:System.Windows.Forms.Form.ShowDialog%2A> method does not specify a form or control as its owner.</span></span> <span data-ttu-id="1bd5f-1163">呼叫此版本時，目前使用中視窗是由對話方塊的 擁有者。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1163">When this version is called, the currently active window is made the owner of the dialog box.</span></span> <span data-ttu-id="1bd5f-1164">如果您想要指定特定的擁有者，請使用這個方法的另一個版本。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1164">If you want to specify a specific owner, use the other version of this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1bd5f-1165">下列程式碼範例顯示為強制回應對話方塊的表單，並評估對話方塊中的傳回值，決定是否要讀取的值之前<xref:System.Windows.Forms.TextBox>對話方塊表單上的控制項。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1165">The following code example displays a form as a modal dialog box and evaluates the return value of the dialog box before determining whether to read the value of a <xref:System.Windows.Forms.TextBox> control on the dialog box form.</span></span> <span data-ttu-id="1bd5f-1166">這個範例需要<xref:System.Windows.Forms.Form>名為`testDialog`建立和它所包含<xref:System.Windows.Forms.TextBox>控制項，名為`TextBox1`。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1166">This example requires that a <xref:System.Windows.Forms.Form> named `testDialog` is created and that it contains a <xref:System.Windows.Forms.TextBox> control named `TextBox1`.</span></span> <span data-ttu-id="1bd5f-1167">此外，此範例需要在此範例中的程式碼是包含，並呼叫來自不同<xref:System.Windows.Forms.Form>以顯示`testDialog`為強制回應對話方塊。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1167">Furthermore, the example requires that code in this example is contained and called from a different <xref:System.Windows.Forms.Form> in order to display `testDialog` as a modal dialog box.</span></span> <span data-ttu-id="1bd5f-1168">此範例會使用新版<xref:System.Windows.Forms.Form.ShowDialog%2A>指定對話方塊中的 「 擁有者。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1168">The example uses the version of <xref:System.Windows.Forms.Form.ShowDialog%2A> that specifies an owner for the dialog box.</span></span>  
  
 [!code-cpp[Classic Form.ShowDialog Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Form.ShowDialog Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Form.ShowDialog Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Form.ShowDialog Example/CS/source.cs#1)]
 [!code-vb[Classic Form.ShowDialog Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Form.ShowDialog Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="1bd5f-1169">The form being shown is already visible.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-1169">The form being shown is already visible.</span>
          </span>
          <span data-ttu-id="1bd5f-1170">-or-  The form being shown is disabled.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-1170">-or-  The form being shown is disabled.</span>
          </span>
          <span data-ttu-id="1bd5f-1171">-or-  The form being shown is not a top-level window.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-1171">-or-  The form being shown is not a top-level window.</span>
          </span>
          <span data-ttu-id="1bd5f-1172">-or-  The form being shown as a dialog box is already a modal form.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-1172">-or-  The form being shown as a dialog box is already a modal form.</span>
          </span>
          <span data-ttu-id="1bd5f-1173">-or-  The current process is not running in user interactive mode (for more information, see <see cref="P:System.Windows.Forms.SystemInformation.UserInteractive" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-1173">-or-  The current process is not running in user interactive mode (for more information, see <see cref="P:System.Windows.Forms.SystemInformation.UserInteractive" />).</span>
          </span>
        </exception>
        <altmember cref="P:System.Windows.Forms.Form.DialogResult" />
      </Docs>
    </Member>
    <Member MemberName="ShowDialog">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DialogResult ShowDialog (System.Windows.Forms.IWin32Window owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Forms.DialogResult ShowDialog(class System.Windows.Forms.IWin32Window owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.ShowDialog(System.Windows.Forms.IWin32Window)" />
      <MemberSignature Language="VB.NET" Value="Public Function ShowDialog (owner As IWin32Window) As DialogResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::DialogResult ShowDialog(System::Windows::Forms::IWin32Window ^ owner);" />
      <MemberSignature Language="F#" Value="member this.ShowDialog : System.Windows.Forms.IWin32Window -&gt; System.Windows.Forms.DialogResult" Usage="form.ShowDialog owner" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DialogResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="owner" Type="System.Windows.Forms.IWin32Window" />
      </Parameters>
      <Docs>
        <param name="owner">
          <span data-ttu-id="1bd5f-1174">Any object that implements <see cref="T:System.Windows.Forms.IWin32Window" /> that represents the top-level window that will own the modal dialog box.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-1174">Any object that implements <see cref="T:System.Windows.Forms.IWin32Window" /> that represents the top-level window that will own the modal dialog box.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1bd5f-1175">Shows the form as a modal dialog box with the specified owner.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-1175">Shows the form as a modal dialog box with the specified owner.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1bd5f-1176">One of the <see cref="T:System.Windows.Forms.DialogResult" /> values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-1176">One of the <see cref="T:System.Windows.Forms.DialogResult" /> values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bd5f-1177">您可以使用這個方法，以在您的應用程式中顯示強制回應對話方塊。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1177">You can use this method to display a modal dialog box in your application.</span></span> <span data-ttu-id="1bd5f-1178">呼叫這個方法時，它後面的程式碼之前不會執行之後在關閉對話方塊。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1178">When this method is called, the code following it is not executed until after the dialog box is closed.</span></span> <span data-ttu-id="1bd5f-1179">可指派的其中一個值對話方塊<xref:System.Windows.Forms.DialogResult>將它指派給<xref:System.Windows.Forms.Button.DialogResult%2A>屬性<xref:System.Windows.Forms.Button>表單上，或藉由設定<xref:System.Windows.Forms.Form.DialogResult%2A>表單程式碼中的屬性。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1179">The dialog box can be assigned one of the values of <xref:System.Windows.Forms.DialogResult> by assigning it to the <xref:System.Windows.Forms.Button.DialogResult%2A> property of a <xref:System.Windows.Forms.Button> on the form or by setting the <xref:System.Windows.Forms.Form.DialogResult%2A> property of the form in code.</span></span> <span data-ttu-id="1bd5f-1180">然後會傳回這個值，這個方法。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1180">This value is then returned by this method.</span></span> <span data-ttu-id="1bd5f-1181">您可以使用此傳回值，以決定如何處理發生在對話方塊中的動作。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1181">You can use this return value to determine how to process the actions that occurred in the dialog box.</span></span> <span data-ttu-id="1bd5f-1182">例如，如果對話方塊已關閉，且傳回`DialogResult.Cancel`值，您可透過這種方法，防止之後呼叫的程式碼<xref:System.Windows.Forms.Form.ShowDialog%2A>無法執行。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1182">For example, if the dialog box was closed and returned the `DialogResult.Cancel` value through this method, you could prevent code following the call to <xref:System.Windows.Forms.Form.ShowDialog%2A> from executing.</span></span>  
  
 <span data-ttu-id="1bd5f-1183">當表單顯示為強制回應對話方塊時，按一下**關閉**按鈕 （具有表單右上角的 X 按鈕） 將會隱藏表單並<xref:System.Windows.Forms.Form.DialogResult%2A>屬性設為`DialogResult.Cancel`。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1183">When a form is displayed as a modal dialog box, clicking the **Close** button (the button with an X at the upper-right corner of the form) causes the form to be hidden and the <xref:System.Windows.Forms.Form.DialogResult%2A> property to be set to `DialogResult.Cancel`.</span></span> <span data-ttu-id="1bd5f-1184">不像非強制回應表單，<xref:System.Windows.Forms.Form.Close%2A>當使用者按一下對話方塊中的 [關閉表單] 按鈕，或設定值，由.NET Framework 不呼叫方法<xref:System.Windows.Forms.Form.DialogResult%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1184">Unlike modeless forms, the <xref:System.Windows.Forms.Form.Close%2A> method is not called by the .NET Framework when the user clicks the close form button of a dialog box or sets the value of the <xref:System.Windows.Forms.Form.DialogResult%2A> property.</span></span> <span data-ttu-id="1bd5f-1185">改為此表單會隱藏，並可再次顯示，而不需要建立對話方塊中的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1185">Instead the form is hidden and can be shown again without creating a new instance of the dialog box.</span></span> <span data-ttu-id="1bd5f-1186">因為表單中顯示為對話方塊中會隱藏而不是關閉，您必須呼叫<xref:System.Windows.Forms.Control.Dispose%2A>表單在表單不再需要由您的應用程式時的方法。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1186">Because a form displayed as a dialog box is hidden instead of closed, you must call the <xref:System.Windows.Forms.Control.Dispose%2A> method of the form when the form is no longer needed by your application.</span></span>  
  
 <span data-ttu-id="1bd5f-1187">這個版本的<xref:System.Windows.Forms.Form.ShowDialog%2A>方法可讓您指定特定的表單將擁有的對話方塊中，會顯示。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1187">This version of the <xref:System.Windows.Forms.Form.ShowDialog%2A> method allows you to specify a specific form that will own the dialog box that is shown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1bd5f-1188">下列程式碼範例顯示為強制回應對話方塊的表單，並評估對話方塊中的傳回值，決定是否要讀取的值之前<xref:System.Windows.Forms.TextBox>對話方塊表單上的控制項。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1188">The following code example displays a form as a modal dialog box and evaluates the return value of the dialog box before determining whether to read the value of a <xref:System.Windows.Forms.TextBox> control on the dialog box form.</span></span> <span data-ttu-id="1bd5f-1189">這個範例需要<xref:System.Windows.Forms.Form>名為`Form2`建立和它所包含<xref:System.Windows.Forms.TextBox>控制項，名為`TextBox1`。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1189">This example requires that a <xref:System.Windows.Forms.Form> named `Form2` is created and that it contains a <xref:System.Windows.Forms.TextBox> control named `TextBox1`.</span></span> <span data-ttu-id="1bd5f-1190">此範例會使用新版<xref:System.Windows.Forms.Form.ShowDialog%2A>指定對話方塊中的 「 擁有者。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1190">The example uses the version of <xref:System.Windows.Forms.Form.ShowDialog%2A> that specifies an owner for the dialog box.</span></span>  
  
 [!code-cpp[Classic Form.ShowDialog Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Form.ShowDialog Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Form.ShowDialog Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Form.ShowDialog Example/CS/source.cs#1)]
 [!code-vb[Classic Form.ShowDialog Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Form.ShowDialog Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1bd5f-1191">The form specified in the <paramref name="owner" /> parameter is the same as the form being shown.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-1191">The form specified in the <paramref name="owner" /> parameter is the same as the form being shown.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="1bd5f-1192">The form being shown is already visible.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-1192">The form being shown is already visible.</span>
          </span>
          <span data-ttu-id="1bd5f-1193">-or-  The form being shown is disabled.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-1193">-or-  The form being shown is disabled.</span>
          </span>
          <span data-ttu-id="1bd5f-1194">-or-  The form being shown is not a top-level window.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-1194">-or-  The form being shown is not a top-level window.</span>
          </span>
          <span data-ttu-id="1bd5f-1195">-or-  The form being shown as a dialog box is already a modal form.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-1195">-or-  The form being shown as a dialog box is already a modal form.</span>
          </span>
          <span data-ttu-id="1bd5f-1196">-or-  The current process is not running in user interactive mode (for more information, see <see cref="P:System.Windows.Forms.SystemInformation.UserInteractive" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-1196">-or-  The current process is not running in user interactive mode (for more information, see <see cref="P:System.Windows.Forms.SystemInformation.UserInteractive" />).</span>
          </span>
        </exception>
        <altmember cref="P:System.Windows.Forms.Form.DialogResult" />
      </Docs>
    </Member>
    <Member MemberName="ShowIcon">
      <MemberSignature Language="C#" Value="public bool ShowIcon { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowIcon" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.ShowIcon" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowIcon As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowIcon { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShowIcon : bool with get, set" Usage="System.Windows.Forms.Form.ShowIcon" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1bd5f-1197">Gets or sets a value indicating whether an icon is displayed in the caption bar of the form.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-1197">Gets or sets a value indicating whether an icon is displayed in the caption bar of the form.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1bd5f-1198">如果表單會在標題列中顯示圖示，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-1198">
              <see langword="true" /> if the form displays an icon in the caption bar; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="1bd5f-1199">預設值為 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-1199">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bd5f-1200"><xref:System.Windows.Forms.Form.ShowIcon%2A>屬性包含<xref:System.Boolean>值，指出是否表單的<xref:System.Windows.Forms.Form.Icon%2A>會顯示在表單的標題列。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1200">The <xref:System.Windows.Forms.Form.ShowIcon%2A> property contains a <xref:System.Boolean> value that indicates whether the form's <xref:System.Windows.Forms.Form.Icon%2A> is displayed in the caption bar of the form.</span></span> <span data-ttu-id="1bd5f-1201">如果<xref:System.Windows.Forms.Form.ControlBox%2A>屬性是`false`，將隱藏的圖示和控制項的方塊。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1201">If the <xref:System.Windows.Forms.Form.ControlBox%2A> property is `false`, both the icon and control box will be suppressed.</span></span>  
  
 <span data-ttu-id="1bd5f-1202">如果<xref:System.Windows.Forms.Form.ShowIcon%2A>是`false`在主要表單顯示，一般的圖示會顯示在應用程式的工作列按鈕。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1202">If <xref:System.Windows.Forms.Form.ShowIcon%2A> is `false` when the primary form is shown, a generic icon will be displayed in the taskbar button for the application.</span></span>  
  
 <span data-ttu-id="1bd5f-1203">如果這個屬性就不會影響<xref:System.Windows.Forms.Form.FormBorderStyle%2A>設為<xref:System.Windows.Forms.FormBorderStyle.FixedDialog>。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1203">This property has no effect if <xref:System.Windows.Forms.Form.FormBorderStyle%2A> is set to <xref:System.Windows.Forms.FormBorderStyle.FixedDialog>.</span></span> <span data-ttu-id="1bd5f-1204">在此情況下，表單不會顯示圖示。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1204">In that case, the form does not display an icon.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.Icon" />
        <altmember cref="P:System.Windows.Forms.Form.ShowInTaskbar" />
        <altmember cref="P:System.Windows.Forms.Form.FormBorderStyle" />
        <altmember cref="P:System.Windows.Forms.Form.WindowState" />
      </Docs>
    </Member>
    <Member MemberName="ShowInTaskbar">
      <MemberSignature Language="C#" Value="public bool ShowInTaskbar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowInTaskbar" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.ShowInTaskbar" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowInTaskbar As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowInTaskbar { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShowInTaskbar : bool with get, set" Usage="System.Windows.Forms.Form.ShowInTaskbar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1bd5f-1205">Gets or sets a value indicating whether the form is displayed in the Windows taskbar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-1205">Gets or sets a value indicating whether the form is displayed in the Windows taskbar.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1bd5f-1206">
            <see langword="true" /> 表示要在執行階段於 Windows 工作列中顯示表單，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-1206">
              <see langword="true" /> to display the form in the Windows taskbar at run time; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="1bd5f-1207">預設值為 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-1207">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bd5f-1208">如果表單另一種形式中成為父代，父代的表單不會顯示在 Windows 工作列中。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1208">If a form is parented within another form, the parented form is not displayed in the Windows taskbar.</span></span>  
  
 <span data-ttu-id="1bd5f-1209">您可以使用這個屬性，以防止使用者選取您的表單，透過 Windows 工作列。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1209">You can use this property to prevent users from selecting your form through the Windows taskbar.</span></span> <span data-ttu-id="1bd5f-1210">比方說，如果您在應用程式中顯示 [尋找和取代] 工具視窗，您可能想要防止該視窗正在選取透過 Windows 工作列中，因為您需要應用程式的主視窗和 [尋找和取代] 工具視窗顯示此選項，以便適當地處理搜尋。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1210">For example, if you display a Find and Replace tool window in your application, you might want to prevent that window from being selected through the Windows taskbar because you would need both the application's main window and the Find and Replace tool window displayed in order to process searches appropriately.</span></span>  
  
 <span data-ttu-id="1bd5f-1211">您通常會想要建立表單時，請使用這個屬性<xref:System.Windows.Forms.FormBorderStyle.FixedToolWindow>樣式。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1211">You will often wish to use this property when creating a form with the <xref:System.Windows.Forms.FormBorderStyle.FixedToolWindow> style.</span></span> <span data-ttu-id="1bd5f-1212">設定<xref:System.Windows.Forms.FormBorderStyle.FixedToolWindow>樣式不單獨保證不會在工作列中出現一個視窗。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1212">Setting the <xref:System.Windows.Forms.FormBorderStyle.FixedToolWindow> style does not alone guarantee that a window will not appear in the taskbar.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1bd5f-1213">下列程式碼範例示範如何使用<xref:System.Windows.Forms.Form.ShowInTaskbar%2A>屬性，以便對話方塊，不會顯示在 Windows 工作列。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1213">The following code example demonstrates how to use the <xref:System.Windows.Forms.Form.ShowInTaskbar%2A> property to make a dialog box that is not displayed in the Windows taskbar.</span></span>  
  
 [!code-cpp[Form.ShowInTaskbar#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Form.ShowInTaskbar/CPP/form1.cpp#1)]
 [!code-csharp[Form.ShowInTaskbar#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Form.ShowInTaskbar/CS/form1.cs#1)]
 [!code-vb[Form.ShowInTaskbar#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Form.ShowInTaskbar/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Shown">
      <MemberSignature Language="C#" Value="public event EventHandler Shown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Shown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Form.Shown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Shown As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Shown;" />
      <MemberSignature Language="F#" Value="member this.Shown : EventHandler " Usage="member this.Shown : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1bd5f-1214">Occurs whenever the form is first displayed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-1214">Occurs whenever the form is first displayed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bd5f-1215"><xref:System.Windows.Forms.Form.Shown>才會引發事件表單會顯示第一次; 後續最小化、 最大化、 還原、 隱藏、 顯示，或讓失效和重新繪製將不會引發此事件。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1215">The <xref:System.Windows.Forms.Form.Shown> event is only raised the first time a form is displayed; subsequently minimizing, maximizing, restoring, hiding, showing, or invalidating and repainting will not raise this event.</span></span> <span data-ttu-id="1bd5f-1216">表單的事件順序的相關資訊，請參閱[順序的 Windows Form 中事件](~/docs/framework/winforms/order-of-events-in-windows-forms.md)。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1216">For more information about the order of events of a form, see [Order of Events in Windows Forms](~/docs/framework/winforms/order-of-events-in-windows-forms.md).</span></span>  
  
 <span data-ttu-id="1bd5f-1217">如需有關如何處理事件的詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1217">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1bd5f-1218">下列程式碼範例示範如何使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1218">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="1bd5f-1219">在範例中，事件處理常式會報告一次<xref:System.Windows.Forms.Form.Shown>事件。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1219">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Form.Shown> event.</span></span> <span data-ttu-id="1bd5f-1220">此報表可協助您了解事件發生的時機，並可協助您偵錯。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1220">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="1bd5f-1221">若要報告多個事件或事件經常發生，請考慮更換<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>具有<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>或將訊息附加到多行<xref:System.Windows.Forms.TextBox>。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1221">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="1bd5f-1222">若要執行範例程式碼，將它貼到包含類型的執行個體的專案<xref:System.Windows.Forms.Form>名為`Form1`。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1222">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.Form> named `Form1`.</span></span> <span data-ttu-id="1bd5f-1223">請確定 與關聯的事件處理常式<xref:System.Windows.Forms.Form.Shown>事件。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1223">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.Form.Shown> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#403](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#403)]
 [!code-vb[System.Windows.Forms.EventExamples#403](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#403)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Form.OnShown(System.EventArgs)" />
        <altmember cref="Overload:System.Windows.Forms.Form.Show" />
        <altmember cref="M:System.Windows.Forms.Form.Close" />
        <altmember cref="P:System.Windows.Forms.Control.Visible" />
        <altmember cref="M:System.Windows.Forms.Control.Hide" />
        <altmember cref="E:System.Windows.Forms.Form.Load" />
        <altmember cref="E:System.Windows.Forms.Form.Activated" />
        <altmember cref="E:System.Windows.Forms.Form.FormClosing" />
        <altmember cref="E:System.Windows.Forms.Form.FormClosed" />
        <altmember cref="M:System.Windows.Forms.Form.LayoutMdi(System.Windows.Forms.MdiLayout)" />
        <altmember cref="E:System.Windows.Forms.Control.Paint" />
      </Docs>
    </Member>
    <Member MemberName="ShowWithoutActivation">
      <MemberSignature Language="C#" Value="protected virtual bool ShowWithoutActivation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowWithoutActivation" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.ShowWithoutActivation" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property ShowWithoutActivation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool ShowWithoutActivation { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.ShowWithoutActivation : bool" Usage="System.Windows.Forms.Form.ShowWithoutActivation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1bd5f-1224">Gets a value indicating whether the window will be activated when it is shown.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-1224">Gets a value indicating whether the window will be activated when it is shown.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1bd5f-1225">如果視窗在其顯示時不啟動，則為 <see langword="True" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-1225">
              <see langword="True" /> if the window will not be activated when it is shown; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="1bd5f-1226">預設值為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-1226">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bd5f-1227">如果您想要顯示最上層的視窗中，但不想要中斷使用者的工作取得輸入的焦點離開目前的視窗，請使用這個屬性。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1227">Use this property if you want to show a top-level window, but don't want to interrupt a user's work by taking the input focus away from the current window.</span></span> <span data-ttu-id="1bd5f-1228">這可以是資訊的快顯視窗或浮動視窗中，例如 [小畫家] 應用程式中的工具調色盤。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1228">This can be an informational pop-up window or a floating window, such as a Tools palette in the Paint application.</span></span>  
  
 <span data-ttu-id="1bd5f-1229">因為此屬性為唯讀，則您只可以藉由覆寫變更其值<xref:System.Windows.Forms.Form.ShowWithoutActivation%2A>在您自己的表單，和程式設計方法傳回`true`。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1229">Because this property is read-only, you can only change its value by overriding <xref:System.Windows.Forms.Form.ShowWithoutActivation%2A> in your own form, and programming it to return `true`.</span></span>  
  
 <span data-ttu-id="1bd5f-1230">如果您未啟用的視窗，就需要使用 UI 控制項，您應該考慮使用<xref:System.Windows.Forms.ToolStrip>控制項，例如<xref:System.Windows.Forms.ToolStripDropDown>。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1230">If your non-activated window needs to use UI controls, you should consider using the <xref:System.Windows.Forms.ToolStrip> controls, such as <xref:System.Windows.Forms.ToolStripDropDown>.</span></span> <span data-ttu-id="1bd5f-1231">這些控制項無視窗，而且不會啟動時就會依照選取的視窗。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1231">These controls are windowless, and will not cause a window to activate when they are selected.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Windows.Forms.Form.Show" />
      </Docs>
    </Member>
    <Member MemberName="Size">
      <MemberSignature Language="C#" Value="public System.Drawing.Size Size { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size Size" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.Size" />
      <MemberSignature Language="VB.NET" Value="Public Property Size As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Size Size { System::Drawing::Size get(); void set(System::Drawing::Size value); };" />
      <MemberSignature Language="F#" Value="member this.Size : System.Drawing.Size with get, set" Usage="System.Windows.Forms.Form.Size" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1bd5f-1232">Gets or sets the size of the form.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-1232">Gets or sets the size of the form.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1bd5f-1233">
            <see cref="T:System.Drawing.Size" />，代表表單的大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-1233">A <see cref="T:System.Drawing.Size" /> that represents the size of the form.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bd5f-1234">這個屬性可讓您設定在相同的時間，而不是設定的高度和寬度 （以像素為單位） 的表單<xref:System.Windows.Forms.Control.Height%2A>和<xref:System.Windows.Forms.Control.Width%2A>屬性個別。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1234">This property allows you to set both the height and width (in pixels) of the form at the same time instead of setting the <xref:System.Windows.Forms.Control.Height%2A> and <xref:System.Windows.Forms.Control.Width%2A> properties individually.</span></span> <span data-ttu-id="1bd5f-1235">如果您想要設定的大小和位置的表單，您可以使用<xref:System.Windows.Forms.Form.DesktopBounds%2A>大小，並找出表單的屬性，根據桌面座標或使用<xref:System.Windows.Forms.Control.Bounds%2A>屬性<xref:System.Windows.Forms.Control>類別，可設定的大小和表單的位置以螢幕座標inates。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1235">If you want to set the size and location of a form, you can use the <xref:System.Windows.Forms.Form.DesktopBounds%2A> property to size and locate the form based on desktop coordinates or use the <xref:System.Windows.Forms.Control.Bounds%2A> property of the <xref:System.Windows.Forms.Control> class to set the size and location of the form based on screen coordinates.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1bd5f-1236">這個屬性的最大值受限於在其上執行表單的螢幕解析度。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1236">The maximum value of this property is limited by the resolution of the screen on which the form runs.</span></span> <span data-ttu-id="1bd5f-1237">值不能針對每個螢幕大小 （水平 + 12 和垂直 + 12） 大於 12 的像素為單位。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1237">The value cannot be greater than 12 pixels over each screen dimension (horizontal + 12 and vertical + 12).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1bd5f-1238">在 Pocket PC 裝置，您可以建立可調整大小的視窗，藉由設定<xref:System.Windows.Forms.Form.FormBorderStyle%2A>要`None`並移除任何<xref:System.Windows.Forms.MainMenu>控制項。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1238">On Pocket PC devices, you can create a resizable window by setting <xref:System.Windows.Forms.Form.FormBorderStyle%2A> to `None` and removing any <xref:System.Windows.Forms.MainMenu> control.</span></span> <span data-ttu-id="1bd5f-1239">在 SmartPhone 裝置，您可以永遠不會調整大小<xref:System.Windows.Forms.Form>-它一律會填滿整個螢幕。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1239">On SmartPhone devices, you can never resize a <xref:System.Windows.Forms.Form> - it will always fill the entire screen.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1bd5f-1240">下列程式碼範例示範如何建立具有 75%的不透明度層級顯示的表單。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1240">The following code example demonstrates how to create a form that is displayed with an opacity level of 75 percent.</span></span> <span data-ttu-id="1bd5f-1241">範例程式碼會建立位於畫面中央的使用中的新表單<xref:System.Windows.Forms.Form.Opacity%2A>屬性設定為 變更表單的不透明度層級。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1241">The example code creates a new form that is positioned in the center of the screen with an <xref:System.Windows.Forms.Form.Opacity%2A> property set to change the opacity level of the form.</span></span> <span data-ttu-id="1bd5f-1242">範例程式碼也會設定<xref:System.Windows.Forms.Form.Size%2A>屬性以提供更大的大小比預設大小的表單的表單。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1242">The example code also sets the <xref:System.Windows.Forms.Form.Size%2A> property to provide a larger sized form than the default size of the form.</span></span> <span data-ttu-id="1bd5f-1243">這個範例需要在此範例中所定義的方法呼叫從另一種形式的事件處理常式或其他方法中。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1243">This example requires that the method defined in this example is called from another form in an event handler or other method.</span></span>  
  
 [!code-cpp[Form.Opacity#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Form.Opacity/CPP/form1.cpp#1)]
 [!code-csharp[Form.Opacity#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Form.Opacity/CS/form1.cs#1)]
 [!code-vb[Form.Opacity#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Form.Opacity/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.Width" />
        <altmember cref="P:System.Windows.Forms.Control.Height" />
        <altmember cref="P:System.Windows.Forms.Form.DesktopBounds" />
        <altmember cref="P:System.Windows.Forms.Control.Bounds" />
      </Docs>
    </Member>
    <Member MemberName="SizeGripStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.SizeGripStyle SizeGripStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.SizeGripStyle SizeGripStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.SizeGripStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property SizeGripStyle As SizeGripStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::SizeGripStyle SizeGripStyle { System::Windows::Forms::SizeGripStyle get(); void set(System::Windows::Forms::SizeGripStyle value); };" />
      <MemberSignature Language="F#" Value="member this.SizeGripStyle : System.Windows.Forms.SizeGripStyle with get, set" Usage="System.Windows.Forms.Form.SizeGripStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.SizeGripStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1bd5f-1244">Gets or sets the style of the size grip to display in the lower-right corner of the form.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-1244">Gets or sets the style of the size grip to display in the lower-right corner of the form.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1bd5f-1245">
            <see cref="T:System.Windows.Forms.SizeGripStyle" />，代表所要顯示的大小底框樣式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-1245">A <see cref="T:System.Windows.Forms.SizeGripStyle" /> that represents the style of the size grip to display.</span>
          </span>
          <span data-ttu-id="1bd5f-1246">預設值為 <see cref="F:System.Windows.Forms.SizeGripStyle.Auto" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-1246">The default is <see cref="F:System.Windows.Forms.SizeGripStyle.Auto" /></span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bd5f-1247">這個屬性可讓您判斷何時大小調整控點會顯示在表單上。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1247">This property enables you to determine when the sizing grip is displayed on the form.</span></span> <span data-ttu-id="1bd5f-1248">您可以設定這個屬性，以顯示調整大小底框或為基礎的設定，讓它自動顯示<xref:System.Windows.Forms.Form.FormBorderStyle%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1248">You can set this property to display the sizing grip or have it automatically displayed based on the setting of the <xref:System.Windows.Forms.Form.FormBorderStyle%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1bd5f-1249">下列程式碼範例示範如何隱藏的調整大小底框<xref:System.Windows.Forms.Form>當<xref:System.Windows.Forms.Form>不是可調整大小。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1249">The following code example demonstrates how to hide the size grip for a <xref:System.Windows.Forms.Form> when the <xref:System.Windows.Forms.Form> is not resizable.</span></span>  
  
 [!code-cpp[Form.SizeGripStyle#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Form.SizeGripStyle/CPP/form1.cpp#1)]
 [!code-csharp[Form.SizeGripStyle#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Form.SizeGripStyle/CS/form1.cs#1)]
 [!code-vb[Form.SizeGripStyle#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Form.SizeGripStyle/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="1bd5f-1250">The value specified is outside the range of valid values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-1250">The value specified is outside the range of valid values.</span>
          </span>
        </exception>
        <altmember cref="P:System.Windows.Forms.Form.FormBorderStyle" />
        <altmember cref="T:System.Windows.Forms.SizeGripStyle" />
      </Docs>
    </Member>
    <Member MemberName="StartPosition">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.FormStartPosition StartPosition { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.FormStartPosition StartPosition" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.StartPosition" />
      <MemberSignature Language="VB.NET" Value="Public Property StartPosition As FormStartPosition" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::FormStartPosition StartPosition { System::Windows::Forms::FormStartPosition get(); void set(System::Windows::Forms::FormStartPosition value); };" />
      <MemberSignature Language="F#" Value="member this.StartPosition : System.Windows.Forms.FormStartPosition with get, set" Usage="System.Windows.Forms.Form.StartPosition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.FormStartPosition</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1bd5f-1251">Gets or sets the starting position of the form at run time.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-1251">Gets or sets the starting position of the form at run time.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1bd5f-1252">
            <see cref="T:System.Windows.Forms.FormStartPosition" />，代表表單的開始位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-1252">A <see cref="T:System.Windows.Forms.FormStartPosition" /> that represents the starting position of the form.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bd5f-1253">這個屬性可讓您設定表單的開始位置，當它顯示在執行階段。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1253">This property enables you to set the starting position of the form when it is displayed at run time.</span></span> <span data-ttu-id="1bd5f-1254">可以手動指定表單的位置，藉由設定<xref:System.Windows.Forms.Form.Location%2A>屬性或使用 Windows 所指定的預設位置。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1254">The form’s position can be specified manually by setting the <xref:System.Windows.Forms.Form.Location%2A> property or use the default location specified by Windows.</span></span> <span data-ttu-id="1bd5f-1255">您也可以放置在螢幕中央，或它的父表單的表單，例如多重文件介面 (MDI) 子表單的中央顯示表單。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1255">You can also position the form to display in the center of the screen or in the center of its parent form for forms such as multiple-document interface (MDI) child forms.</span></span>  
  
 <span data-ttu-id="1bd5f-1256">顯示表單之前，應該設定這個屬性。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1256">This property should be set before the form is shown.</span></span>  <span data-ttu-id="1bd5f-1257">您可以設定此屬性，然後再呼叫<xref:System.Windows.Forms.Form.Show%2A>或<xref:System.Windows.Forms.Form.ShowDialog%2A>方法或表單的建構函式中。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1257">You can set this property before you call the <xref:System.Windows.Forms.Form.Show%2A> or <xref:System.Windows.Forms.Form.ShowDialog%2A> method or in your form's constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1bd5f-1258">下列程式碼範例會建立的新執行個體<xref:System.Windows.Forms.Form>，並呼叫<xref:System.Windows.Forms.Form.ShowDialog%2A>表單顯示為對話方塊中的方法。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1258">The following code example creates a new instance of a <xref:System.Windows.Forms.Form> and calls the <xref:System.Windows.Forms.Form.ShowDialog%2A> method to display the form as a dialog box.</span></span> <span data-ttu-id="1bd5f-1259">範例會設定<xref:System.Windows.Forms.Form.FormBorderStyle%2A>， <xref:System.Windows.Forms.Form.AcceptButton%2A>， <xref:System.Windows.Forms.Form.CancelButton%2A>，和<xref:System.Windows.Forms.Form.StartPosition%2A>內容 對話方塊中變更的外觀和功能的形式。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1259">The example sets the <xref:System.Windows.Forms.Form.FormBorderStyle%2A>, <xref:System.Windows.Forms.Form.AcceptButton%2A>, <xref:System.Windows.Forms.Form.CancelButton%2A>, and <xref:System.Windows.Forms.Form.StartPosition%2A> properties to change the appearance and functionality of the form to a dialog box.</span></span> <span data-ttu-id="1bd5f-1260">此範例也會使用<xref:System.Windows.Forms.Form.ControlCollection.Add%2A>表單的方法<xref:System.Windows.Forms.Control.Controls%2A>要加入兩個集合<xref:System.Windows.Forms.Button>控制項。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1260">The example also uses the <xref:System.Windows.Forms.Form.ControlCollection.Add%2A> method of the form's <xref:System.Windows.Forms.Control.Controls%2A> collection to add two <xref:System.Windows.Forms.Button> controls.</span></span> <span data-ttu-id="1bd5f-1261">此範例會使用<xref:System.Windows.Forms.Form.HelpButton%2A>屬性 對話方塊的標題列中顯示 說明 按鈕。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1261">The example uses the <xref:System.Windows.Forms.Form.HelpButton%2A> property to display a help button in the caption bar of the dialog box.</span></span>  
  
 [!code-cpp[Classic Form.StartPosition Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Form.StartPosition Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Form.StartPosition Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Form.StartPosition Example/CS/source.cs#1)]
 [!code-vb[Classic Form.StartPosition Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Form.StartPosition Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="1bd5f-1262">The value specified is outside the range of valid values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-1262">The value specified is outside the range of valid values.</span>
          </span>
        </exception>
        <altmember cref="T:System.Windows.Forms.FormStartPosition" />
      </Docs>
    </Member>
    <Member MemberName="TabIndex">
      <MemberSignature Language="C#" Value="public int TabIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TabIndex" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.TabIndex" />
      <MemberSignature Language="VB.NET" Value="Public Property TabIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int TabIndex { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.TabIndex : int with get, set" Usage="System.Windows.Forms.Form.TabIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1bd5f-1263">Gets or sets the tab order of the control within its container.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-1263">Gets or sets the tab order of the control within its container.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1bd5f-1264">
            <see cref="T:System.Int32" />，包含依定位順序包含在其容器內之控制項集合中的控制項索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-1264">An <see cref="T:System.Int32" /> containing the index of the control within the set of controls within its container that is included in the tab order.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bd5f-1265">定位順序中不包含表單。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1265">Forms are not included in the tab order.</span></span> <span data-ttu-id="1bd5f-1266">設定<xref:System.Windows.Forms.Form.TabIndex%2A>屬性不會執行任何動作。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1266">Setting the <xref:System.Windows.Forms.Form.TabIndex%2A> property does nothing.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TabIndexChanged">
      <MemberSignature Language="C#" Value="public event EventHandler TabIndexChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler TabIndexChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Form.TabIndexChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TabIndexChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ TabIndexChanged;" />
      <MemberSignature Language="F#" Value="member this.TabIndexChanged : EventHandler " Usage="member this.TabIndexChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1bd5f-1267">Occurs when the value of the <see cref="P:System.Windows.Forms.Form.TabIndex" /> property changes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-1267">Occurs when the value of the <see cref="P:System.Windows.Forms.Form.TabIndex" /> property changes.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TabStop">
      <MemberSignature Language="C#" Value="public bool TabStop { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TabStop" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.TabStop" />
      <MemberSignature Language="VB.NET" Value="Public Property TabStop As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TabStop { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.TabStop : bool with get, set" Usage="System.Windows.Forms.Form.TabStop" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-516)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1bd5f-1268">Gets or sets a value indicating whether the user can give the focus to this control using the TAB key.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-1268">Gets or sets a value indicating whether the user can give the focus to this control using the TAB key.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1bd5f-1269">如果使用者可以使用 TAB 鍵將焦點置於這個控制項，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-1269">
              <see langword="true" /> if the user can give the focus to the control using the TAB key; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="1bd5f-1270">預設值為 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-1270">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TabStopChanged">
      <MemberSignature Language="C#" Value="public event EventHandler TabStopChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler TabStopChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Form.TabStopChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TabStopChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ TabStopChanged;" />
      <MemberSignature Language="F#" Value="member this.TabStopChanged : EventHandler " Usage="member this.TabStopChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1bd5f-1271">Occurs when the <see cref="P:System.Windows.Forms.Form.TabStop" /> property changes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-1271">Occurs when the <see cref="P:System.Windows.Forms.Form.TabStop" /> property changes.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public override string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.Text" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Text : string with get, set" Usage="System.Windows.Forms.Form.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.SettingsBindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1bd5f-1272">Gets or sets the text associated with this control.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-1272">Gets or sets the text associated with this control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1bd5f-1273">與這個控制項關聯的文字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-1273">The text associated with this control.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.Control.Text" />
      </Docs>
    </Member>
    <Member MemberName="TopLevel">
      <MemberSignature Language="C#" Value="public bool TopLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TopLevel" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.TopLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property TopLevel As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TopLevel { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.TopLevel : bool with get, set" Usage="System.Windows.Forms.Form.TopLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1bd5f-1274">Gets or sets a value indicating whether to display the form as a top-level window.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-1274">Gets or sets a value indicating whether to display the form as a top-level window.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1bd5f-1275">
            <see langword="true" /> 表示要顯示表單為最上層視窗，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-1275">
              <see langword="true" /> to display the form as a top-level window; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="1bd5f-1276">預設值為 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-1276">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bd5f-1277">最上層的表單是沒有父表單中，或其父表單是桌面視窗的視窗。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1277">A top-level form is a window that has no parent form, or whose parent form is the desktop window.</span></span> <span data-ttu-id="1bd5f-1278">最上層視窗通常會當做應用程式中的主要表單。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1278">Top-level windows are typically used as the main form in an application.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1bd5f-1279">下列程式碼範例會使用<xref:System.Windows.Forms.Form.Modal%2A>屬性來判斷是否表單會顯示為強制回應表單。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1279">The following code example use the <xref:System.Windows.Forms.Form.Modal%2A> property to determine if a form is displayed as a modal form.</span></span> <span data-ttu-id="1bd5f-1280">如果不是<xref:System.Windows.Forms.Form.FormBorderStyle%2A>和<xref:System.Windows.Forms.Form.TopLevel%2A>屬性已變更，讓表單非最上層表單使用的工具視窗框線。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1280">If it is not the <xref:System.Windows.Forms.Form.FormBorderStyle%2A> and <xref:System.Windows.Forms.Form.TopLevel%2A> properties are changed to make the form non-top-level form with a tool window border.</span></span>  
  
 [!code-cpp[Form.Modal#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Form.Modal/CPP/form1.cpp#1)]
 [!code-csharp[Form.Modal#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Form.Modal/CS/form1.cs#1)]
 [!code-vb[Form.Modal#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Form.Modal/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">
          <span data-ttu-id="1bd5f-1281">A Multiple-document interface (MDI) parent form must be a top-level window.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-1281">A Multiple-document interface (MDI) parent form must be a top-level window.</span>
          </span>
        </exception>
        <altmember cref="P:System.Windows.Forms.Form.TopMost" />
      </Docs>
    </Member>
    <Member MemberName="TopMost">
      <MemberSignature Language="C#" Value="public bool TopMost { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TopMost" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.TopMost" />
      <MemberSignature Language="VB.NET" Value="Public Property TopMost As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TopMost { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.TopMost : bool with get, set" Usage="System.Windows.Forms.Form.TopMost" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1bd5f-1282">Gets or sets a value indicating whether the form should be displayed as a topmost form.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-1282">Gets or sets a value indicating whether the form should be displayed as a topmost form.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1bd5f-1283">
            <see langword="true" /> 表示要將該表單顯示為最上層的表單，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-1283">
              <see langword="true" /> to display the form as a topmost form; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="1bd5f-1284">預設值為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-1284">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bd5f-1285">最上層的表單是重疊的其他 （非最上層） 表單，即使它不是主動] 或 [前景表單的表單。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1285">A topmost form is a form that overlaps all the other (non-topmost) forms even if it is not the active or foreground form.</span></span> <span data-ttu-id="1bd5f-1286">最上層的表單會自動顯示在桌面上的視窗的疊置順序最高點。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1286">Topmost forms are always displayed at the highest point in the z-order of the windows on the desktop.</span></span> <span data-ttu-id="1bd5f-1287">您可以使用這個屬性來建立一律會在您的應用程式，例如 [尋找和取代] 工具視窗中顯示的表單。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1287">You can use this property to create a form that is always displayed in your application, such as a Find and Replace tool window.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1bd5f-1288">下列程式碼範例示範如何建立最上層的表單。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1288">The following code example demonstrates how to create a topmost form.</span></span> <span data-ttu-id="1bd5f-1289">此範例會建立兩種形式，其中一個最大化，其中會顯示為最上層的表單。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1289">The example creates two forms, one that is maximized and one that will be displayed as a topmost form.</span></span> <span data-ttu-id="1bd5f-1290">第一種形式，名為`bottomForm`，會顯示最大化，使用<xref:System.Windows.Forms.Form.WindowState%2A>屬性，以更適當展現最上層的表單的能力。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1290">The first form, named `bottomForm`, is displayed maximized, using the <xref:System.Windows.Forms.Form.WindowState%2A> property, to better demonstrate the abilities of the topmost form.</span></span> <span data-ttu-id="1bd5f-1291">第二個表單名為`topMostForm`，設定<xref:System.Windows.Forms.Form.TopMost%2A>屬性設`true`來顯示表單為最上層的表單。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1291">The second form, named `topMostForm`, sets the <xref:System.Windows.Forms.Form.TopMost%2A> property to `true` to display the form as a topmost form.</span></span> <span data-ttu-id="1bd5f-1292">執行此程式碼時，按一下最大化表單不會造成以最大化表單下方會顯示最上層的表單。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1292">When this code is run, clicking on the maximized form will not cause the topmost form to be displayed below the maximized form.</span></span> <span data-ttu-id="1bd5f-1293">這個範例需要在此範例中所定義的方法呼叫從另一種形式。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1293">The example requires that the method defined in the example is called from another form.</span></span>  
  
 [!code-cpp[Form.TopMost#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Form.TopMost/CPP/form1.cpp#1)]
 [!code-csharp[Form.TopMost#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Form.TopMost/CS/form1.cs#1)]
 [!code-vb[Form.TopMost#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Form.TopMost/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.TopLevel" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="abstract member ToString : unit -&gt; string&#xA;override this.ToString : unit -&gt; string" Usage="form.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1bd5f-1294">Gets a string representing the current instance of the form.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-1294">Gets a string representing the current instance of the form.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1bd5f-1295">A string consisting of the fully qualified name of the form object's class, with the <see cref="P:System.Windows.Forms.Form.Text" /> property of the form appended to the end.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-1295">A string consisting of the fully qualified name of the form object's class, with the <see cref="P:System.Windows.Forms.Form.Text" /> property of the form appended to the end.</span>
          </span>
          <span data-ttu-id="1bd5f-1296">For example, if the form is derived from the class <c>MyForm</c> in the <c>MyNamespace</c> namespace, and the <see cref="P:System.Windows.Forms.Form.Text" /> property is set to <c>Hello, World</c>, this method will return <c>MyNamespace.MyForm, Text: Hello, World</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-1296">For example, if the form is derived from the class <c>MyForm</c> in the <c>MyNamespace</c> namespace, and the <see cref="P:System.Windows.Forms.Form.Text" /> property is set to <c>Hello, World</c>, this method will return <c>MyNamespace.MyForm, Text: Hello, World</c>.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransparencyKey">
      <MemberSignature Language="C#" Value="public System.Drawing.Color TransparencyKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color TransparencyKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.TransparencyKey" />
      <MemberSignature Language="VB.NET" Value="Public Property TransparencyKey As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color TransparencyKey { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.TransparencyKey : System.Drawing.Color with get, set" Usage="System.Windows.Forms.Form.TransparencyKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1bd5f-1297">Gets or sets the color that will represent transparent areas of the form.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-1297">Gets or sets the color that will represent transparent areas of the form.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1bd5f-1298">
            <see cref="T:System.Drawing.Color" />，代表要透明地顯示在表單上的色彩。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-1298">A <see cref="T:System.Drawing.Color" /> that represents the color to display transparently on the form.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bd5f-1299">當<xref:System.Windows.Forms.Form.TransparencyKey%2A>屬性會被指派<xref:System.Drawing.Color>，具有相同的表單區域<xref:System.Windows.Forms.Control.BackColor%2A>將以透明方式顯示。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1299">When the <xref:System.Windows.Forms.Form.TransparencyKey%2A> property is assigned a <xref:System.Drawing.Color>, the areas of the form that have the same <xref:System.Windows.Forms.Control.BackColor%2A> will be displayed transparently.</span></span> <span data-ttu-id="1bd5f-1300">透明區域下方的 windows 會傳輸任何滑鼠動作，例如按一下滑鼠，表單透明區域上執行。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1300">Any mouse actions, such as the click of the mouse, that are performed on the transparent areas of the form will be transferred to the windows below the transparent area.</span></span> <span data-ttu-id="1bd5f-1301">比方說，如果表單的工作區是透明，按一下將滑鼠停在該區域會傳送事件通知的按一下其下方的任何視窗。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1301">For example, if the client region of a form is made transparent, clicking the mouse on that area would send the event notification of the click to any window that is below it.</span></span> <span data-ttu-id="1bd5f-1302">如果色彩指派給<xref:System.Windows.Forms.Form.TransparencyKey%2A>屬性等同於表單上的任何控制項，則也會顯示以透明的方式。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1302">If the color assigned to the <xref:System.Windows.Forms.Form.TransparencyKey%2A> property is the same as any controls on the form, they also will be displayed transparently.</span></span> <span data-ttu-id="1bd5f-1303">比方說，如果您有<xref:System.Windows.Forms.Button>已在表單上的控制項及其<xref:System.Windows.Forms.Form.TransparencyKey%2A>屬性設定為`SystemColors.Control`，除非控制項也會以透明方式顯示<xref:System.Windows.Forms.Control.BackColor%2A>屬性<xref:System.Windows.Forms.Button>控制項變更為不同的色彩。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1303">For example, if you have a <xref:System.Windows.Forms.Button> control on a form that has its <xref:System.Windows.Forms.Form.TransparencyKey%2A> property set to `SystemColors.Control`, the control will be displayed transparently unless the <xref:System.Windows.Forms.Control.BackColor%2A> property of the <xref:System.Windows.Forms.Button> control is changed to a different color.</span></span>  
  
 <span data-ttu-id="1bd5f-1304">這個屬性不支援的時機<xref:System.Windows.Forms.Form.RightToLeftLayout%2A>是`true`。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1304">This property is not supported when <xref:System.Windows.Forms.Form.RightToLeftLayout%2A> is `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1bd5f-1305">下列程式碼範例會建立有透明的工作區，不論表單的背景色彩的視窗。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1305">The following code example creates a window that has a transparent client region regardless of background color of the form.</span></span> <span data-ttu-id="1bd5f-1306">這個範例需要在表單類別內，定義範例方法。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1306">This example requires that the example method is defined within a form class.</span></span>  
  
 [!code-cpp[Classic Form.TransparencyKey Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Form.TransparencyKey Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Form.TransparencyKey Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Form.TransparencyKey Example/CS/source.cs#1)]
 [!code-vb[Classic Form.TransparencyKey Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Form.TransparencyKey Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateDefaultButton">
      <MemberSignature Language="C#" Value="protected override void UpdateDefaultButton ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void UpdateDefaultButton() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.UpdateDefaultButton" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub UpdateDefaultButton ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void UpdateDefaultButton();" />
      <MemberSignature Language="F#" Value="override this.UpdateDefaultButton : unit -&gt; unit" Usage="form.UpdateDefaultButton " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1bd5f-1307">Updates which button is the default button.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-1307">Updates which button is the default button.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bd5f-1308"><xref:System.Windows.Forms.Form.UpdateDefaultButton%2A>方法會判斷哪一個按鈕，在表單上的引發其 Click 事件，當使用者按下 ENTER，根據下列優先順序：</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1308">The <xref:System.Windows.Forms.Form.UpdateDefaultButton%2A> method determines which button on the form raises its Click event when the user presses ENTER, according to the following priority:</span></span>  
  
1.  <span data-ttu-id="1bd5f-1309">如果<xref:System.Windows.Forms.ContainerControl.ActiveControl%2A>屬性會實作<xref:System.Windows.Forms.IButtonControl>介面，控制項為預設按鈕。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1309">If the <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A> property implements the <xref:System.Windows.Forms.IButtonControl> interface, that control is the default button.</span></span>  
  
2.  <span data-ttu-id="1bd5f-1310"><xref:System.Windows.Forms.Form.AcceptButton%2A>屬性為預設按鈕。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1310">The <xref:System.Windows.Forms.Form.AcceptButton%2A> property is the default button.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ContainerControl.ActiveControl" />
        <altmember cref="P:System.Windows.Forms.Form.AcceptButton" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ValidateChildren">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1bd5f-1311">Validates all selectable child controls in the form.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-1311">Validates all selectable child controls in the form.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ValidateChildren">
      <MemberSignature Language="C#" Value="public override bool ValidateChildren ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool ValidateChildren() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.ValidateChildren" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ValidateChildren () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool ValidateChildren();" />
      <MemberSignature Language="F#" Value="override this.ValidateChildren : unit -&gt; bool" Usage="form.ValidateChildren " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1bd5f-1312">Causes all of the child controls within a control that support validation to validate their data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-1312">Causes all of the child controls within a control that support validation to validate their data.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1bd5f-1313">
            <see langword="true" /> if all of the children validated successfully; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-1313">
              <see langword="true" /> if all of the children validated successfully; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="1bd5f-1314">If called from the <see cref="E:System.Windows.Forms.Control.Validating" /> or <see cref="E:System.Windows.Forms.Control.Validated" /> event handlers, this method will always return <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-1314">If called from the <see cref="E:System.Windows.Forms.Control.Validating" /> or <see cref="E:System.Windows.Forms.Control.Validated" /> event handlers, this method will always return <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.ContainerControl.ValidateChildren" />
      </Docs>
    </Member>
    <Member MemberName="ValidateChildren">
      <MemberSignature Language="C#" Value="public override bool ValidateChildren (System.Windows.Forms.ValidationConstraints validationConstraints);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool ValidateChildren(valuetype System.Windows.Forms.ValidationConstraints validationConstraints) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.ValidateChildren(System.Windows.Forms.ValidationConstraints)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool ValidateChildren(System::Windows::Forms::ValidationConstraints validationConstraints);" />
      <MemberSignature Language="F#" Value="override this.ValidateChildren : System.Windows.Forms.ValidationConstraints -&gt; bool" Usage="form.ValidateChildren validationConstraints" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="validationConstraints" Type="System.Windows.Forms.ValidationConstraints" />
      </Parameters>
      <Docs>
        <param name="validationConstraints">
          <span data-ttu-id="1bd5f-1315">Places restrictions on which controls have their <see cref="E:System.Windows.Forms.Control.Validating" /> event raised.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-1315">Places restrictions on which controls have their <see cref="E:System.Windows.Forms.Control.Validating" /> event raised.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1bd5f-1316">Causes all of the child controls within a control that support validation to validate their data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-1316">Causes all of the child controls within a control that support validation to validate their data.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1bd5f-1317">
            <see langword="true" /> if all of the children validated successfully; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-1317">
              <see langword="true" /> if all of the children validated successfully; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="1bd5f-1318">If called from the <see cref="E:System.Windows.Forms.Control.Validating" /> or <see cref="E:System.Windows.Forms.Control.Validated" /> event handlers, this method will always return <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-1318">If called from the <see cref="E:System.Windows.Forms.Control.Validating" /> or <see cref="E:System.Windows.Forms.Control.Validated" /> event handlers, this method will always return <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.ContainerControl.ValidateChildren(System.Windows.Forms.ValidationConstraints)" />
      </Docs>
    </Member>
    <Member MemberName="WindowState">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.FormWindowState WindowState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.FormWindowState WindowState" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Form.WindowState" />
      <MemberSignature Language="VB.NET" Value="Public Property WindowState As FormWindowState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::FormWindowState WindowState { System::Windows::Forms::FormWindowState get(); void set(System::Windows::Forms::FormWindowState value); };" />
      <MemberSignature Language="F#" Value="member this.WindowState : System.Windows.Forms.FormWindowState with get, set" Usage="System.Windows.Forms.Form.WindowState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.FormWindowState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1bd5f-1319">Gets or sets a value that indicates whether form is minimized, maximized, or normal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-1319">Gets or sets a value that indicates whether form is minimized, maximized, or normal.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1bd5f-1320">
            <see cref="T:System.Windows.Forms.FormWindowState" />，代表表單為最小化、最大化還是正常狀態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-1320">A <see cref="T:System.Windows.Forms.FormWindowState" /> that represents whether form is minimized, maximized, or normal.</span>
          </span>
          <span data-ttu-id="1bd5f-1321">預設值為 <see langword="FormWindowState.Normal" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-1321">The default is <see langword="FormWindowState.Normal" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1bd5f-1322">顯示表單之前，請<xref:System.Windows.Forms.Form.WindowState%2A>屬性永遠設為`FormWindowState.Normal`，而不論其初始設定值。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1322">Before a form is displayed, the <xref:System.Windows.Forms.Form.WindowState%2A> property is always set to `FormWindowState.Normal`, regardless of its initial setting.</span></span> <span data-ttu-id="1bd5f-1323">這會反映在<xref:System.Windows.Forms.Control.Height%2A>， <xref:System.Windows.Forms.Control.Left%2A>， <xref:System.Windows.Forms.Control.Top%2A>，和<xref:System.Windows.Forms.Control.Width%2A>屬性設定。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1323">This is reflected in the <xref:System.Windows.Forms.Control.Height%2A>, <xref:System.Windows.Forms.Control.Left%2A>, <xref:System.Windows.Forms.Control.Top%2A>, and <xref:System.Windows.Forms.Control.Width%2A> property settings.</span></span> <span data-ttu-id="1bd5f-1324">如果它顯示之後，會隱藏表單，這些屬性會反映先前的狀態在表單顯示一次，不論所做的變更直到<xref:System.Windows.Forms.Form.WindowState%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1324">If a form is hidden after it has been shown, these properties reflect the previous state until the form is shown again, regardless of any changes made to the <xref:System.Windows.Forms.Form.WindowState%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1bd5f-1325">下列程式碼範例示範如何設定<xref:System.Windows.Forms.Form.WindowState%2A>為最大化。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1325">The following code example demonstrates how to set the <xref:System.Windows.Forms.Form.WindowState%2A> to maximized.</span></span> <span data-ttu-id="1bd5f-1326">程式碼會呼叫從<xref:System.Windows.Forms.Form.Shown>表單建立之後的事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="1bd5f-1326">The code is called from the <xref:System.Windows.Forms.Form.Shown> event handler after the form has been created.</span></span>  
  
```csharp  
private void Form1_Shown(object sender, EventArgs e)  
        {  
            this.WindowState = System.Windows.Forms.FormWindowState.Maximized;  
        }  
```  
  
```vb  
Private  Sub Form1_Shown(ByVal sender As Object, ByVal e As EventArgs)  
            Me.WindowState = System.Windows.Forms.FormWindowState.Maximized  
End Sub  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="1bd5f-1327">The value specified is outside the range of valid values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-1327">The value specified is outside the range of valid values.</span>
          </span>
        </exception>
        <altmember cref="T:System.Windows.Forms.FormWindowState" />
      </Docs>
    </Member>
    <Member MemberName="WndProc">
      <MemberSignature Language="C#" Value="protected override void WndProc (ref System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void WndProc(valuetype System.Windows.Forms.Message&amp; m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.WndProc(System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub WndProc (ByRef m As Message)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void WndProc(System::Windows::Forms::Message % m);" />
      <MemberSignature Language="F#" Value="override this.WndProc :  -&gt; unit" Usage="form.WndProc m" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m">
          <span data-ttu-id="1bd5f-1328">The Windows <see cref="T:System.Windows.Forms.Message" /> to process.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-1328">The Windows <see cref="T:System.Windows.Forms.Message" /> to process.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1bd5f-1329">Processes Windows messages.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1bd5f-1329">Processes Windows messages.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.ContainerControl.WndProc(System.Windows.Forms.Message@)" />
      </Docs>
    </Member>
  </Members>
</Type>