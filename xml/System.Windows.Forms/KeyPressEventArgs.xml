<Type Name="KeyPressEventArgs" FullName="System.Windows.Forms.KeyPressEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="460402bad14b8a1747aa2e5918fdf42b98d773cc" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39991232" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class KeyPressEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit KeyPressEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.KeyPressEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class KeyPressEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class KeyPressEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type KeyPressEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>提供 <see cref="E:System.Windows.Forms.Control.KeyPress" /> 事件的資料。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A<xref:System.Windows.Forms.KeyPressEventArgs>指定當使用者按下按鍵時，由所組成的字元。 例如，當使用者按下 SHIFT + K、<xref:System.Windows.Forms.KeyPressEventArgs.KeyChar%2A>屬性會傳回大寫的 k。  
  
 A<xref:System.Windows.Forms.Control.KeyPress>事件發生於使用者按下按鍵時。 密切相關的兩個事件<xref:System.Windows.Forms.Control.KeyPress>事件<xref:System.Windows.Forms.Control.KeyUp>和<xref:System.Windows.Forms.Control.KeyDown>。 <xref:System.Windows.Forms.Control.KeyDown>事件之前每<xref:System.Windows.Forms.Control.KeyPress>事件，當使用者按下按鍵，和<xref:System.Windows.Forms.Control.KeyUp>事件發生於使用者放開按鍵時。 當使用者按住按鍵時，重複<xref:System.Windows.Forms.Control.KeyDown>和<xref:System.Windows.Forms.Control.KeyPress>字元重複每次發生的事件。 一個<xref:System.Windows.Forms.Control.KeyUp>在發行時，就會產生事件。  
  
 與每個<xref:System.Windows.Forms.Control.KeyPress>事件，<xref:System.Windows.Forms.KeyPressEventArgs>傳遞。 A<xref:System.Windows.Forms.KeyEventArgs>會使用每個傳遞<xref:System.Windows.Forms.Control.KeyDown>和<xref:System.Windows.Forms.Control.KeyUp>事件。 A<xref:System.Windows.Forms.KeyEventArgs>指定是否以及另一個按鍵按下任何輔助按鍵 （CTRL、 shift 鍵或 ALT）。 (此修飾詞資訊也可以透過取得<xref:System.Windows.Forms.Control.ModifierKeys%2A>屬性<xref:System.Windows.Forms.Control>類別。)  
  
 設定<xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A>要`true`取消`KeyPress`事件。 這可防止控制項處理的按鍵。  
  
> [!NOTE]
>  有些控制項將處理上的特定按鍵<xref:System.Windows.Forms.Control.KeyDown>。 例如，<xref:System.Windows.Forms.RichTextBox>處理 Enter 鍵之前<xref:System.Windows.Forms.Control.KeyPress>呼叫。 在此情況下，您無法取消<xref:System.Windows.Forms.Control.KeyPress>事件，且必須取消從索引鍵的筆劃<xref:System.Windows.Forms.Control.KeyDown>改。  
  
 事件模型的相關資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。  
  
   
  
## Examples  
 下列範例說明如何使用<xref:System.Windows.Forms.KeyPressEventArgs>計算使用者按下的索引鍵，並顯示每個按鍵動作之後的結果。 <xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A> 然後設為 true 保持作業系統從進一步處理索引鍵。 此範例假設表單<xref:System.Windows.Forms.TextBox>置於其上。  
  
 [!code-cpp[Classic KeyPressEventArgs Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic KeyPressEventArgs Example/CPP/source.cpp#1)]
 [!code-csharp[Classic KeyPressEventArgs Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic KeyPressEventArgs Example/CS/source.cs#1)]
 [!code-vb[Classic KeyPressEventArgs Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic KeyPressEventArgs Example/VB/source.vb#1)]  
  
 您必須建立這個類別的新執行個體。 您也必須設定的事件處理常式。 您可以在建構函式類別。  
  
 [!code-cpp[Classic KeyPressEventArgs Example#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic KeyPressEventArgs Example/CPP/source2.cpp#2)]
 [!code-csharp[Classic KeyPressEventArgs Example#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic KeyPressEventArgs Example/CS/source2.cs#2)]
 [!code-vb[Classic KeyPressEventArgs Example#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic KeyPressEventArgs Example/VB/source2.vb#2)]  
  
 當控制項中引發指定的事件時，會呼叫附加的方法，應用程式可以執行程式碼，以回應事件。  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Windows.Forms.Control.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)" />
    <altmember cref="E:System.Windows.Forms.Control.KeyPress" />
    <altmember cref="T:System.Windows.Forms.KeyEventArgs" />
    <altmember cref="E:System.Windows.Forms.Control.KeyDown" />
    <altmember cref="E:System.Windows.Forms.Control.KeyUp" />
    <altmember cref="P:System.Windows.Forms.Control.ModifierKeys" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public KeyPressEventArgs (char keyChar);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(char keyChar) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.KeyPressEventArgs.#ctor(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (keyChar As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; KeyPressEventArgs(char keyChar);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.KeyPressEventArgs : char -&gt; System.Windows.Forms.KeyPressEventArgs" Usage="new System.Windows.Forms.KeyPressEventArgs keyChar" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="keyChar" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="keyChar">對應使用者所按下按鍵的 ASCII 字元。</param>
        <summary>初始化 <see cref="T:System.Windows.Forms.KeyPressEventArgs" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Windows.Forms.Control.ModifierKeys%2A?displayProperty=nameWithType>屬性取得的輔助按鍵的目前狀態。  
  
   
  
## Examples  
 下列範例會顯示訊息方塊顯示 SHIFT 鍵的目前狀態。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Handled">
      <MemberSignature Language="C#" Value="public bool Handled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Handled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.KeyPressEventArgs.Handled" />
      <MemberSignature Language="VB.NET" Value="Public Property Handled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Handled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Handled : bool with get, set" Usage="System.Windows.Forms.KeyPressEventArgs.Handled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定數值，表示是否處理 <see cref="E:System.Windows.Forms.Control.KeyPress" /> 事件。</summary>
        <value>如果事件已處理則為 <see langword="true" />，否則為 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果未處理的事件，它會傳送至作業系統的預設處理。 設定<xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A>要`true`取消`KeyPress`事件。  
  
   
  
## Examples  
 下列範例會建立<xref:System.Windows.Forms.TextBox>控制項。 `keypressed`方法會使用<xref:System.Windows.Forms.KeyPressEventArgs.KeyChar%2A>屬性，以檢查是否按下 ENTER 鍵。 如果按下 ENTER 鍵時，<xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A>屬性設定為`true`，這表示事件處理。  
  
 [!code-cpp[KeyPressEventArgs#1](~/samples/snippets/cpp/VS_Snippets_Winforms/KeyPressEventArgs/CPP/form1.cpp#1)]
 [!code-csharp[KeyPressEventArgs#1](~/samples/snippets/csharp/VS_Snippets_Winforms/KeyPressEventArgs/CS/form1.cs#1)]
 [!code-vb[KeyPressEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/KeyPressEventArgs/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Control.KeyPress" />
      </Docs>
    </Member>
    <Member MemberName="KeyChar">
      <MemberSignature Language="C#" Value="public char KeyChar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance char KeyChar" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.KeyPressEventArgs.KeyChar" />
      <MemberSignature Language="VB.NET" Value="Public Property KeyChar As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property char KeyChar { char get(); void set(char value); };" />
      <MemberSignature Language="F#" Value="member this.KeyChar : char with get, set" Usage="System.Windows.Forms.KeyPressEventArgs.KeyChar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定對應於所按下按鍵的字元。</summary>
        <value>組合的 ASCII 字元。 例如，如果使用者按下 SHIFT + K，這個屬性就傳回大寫的 K。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Windows.Forms.KeyPressEventArgs.KeyChar%2A>屬性，以在執行階段，並修改特殊執行階段的情況下的按鍵的按鍵動作範例。 例如，您可以使用<xref:System.Windows.Forms.KeyPressEventArgs.KeyChar%2A>要在使用者輸入郵遞區號時，請停用非數字個按鍵動作之後，變更為大寫的資料輸入欄位中，所有依字母順序排列的按鍵或鍵盤或其他重要的輸入的裝置特定的索引鍵組合來監視。  
  
 您可以取得或設定下列機碼：  
  
-   a-z、 A-Z。  
  
-   CTRL 鍵。  
  
-   標點符號。  
  
-   數字鍵，同時在頂端的鍵盤和數字鍵台上。  
  
-   輸入。  
  
 您無法取得或設定下列機碼：  
  
-   TAB 鍵。  
  
-   插入和刪除。  
  
-   首頁。  
  
-   結束。  
  
-   PAGE UP 和 PAGE down 鍵。  
  
-   F1-F2。  
  
-   ALT 鍵。  
  
-   方向鍵  
  
> [!NOTE]
>  如需有關如何偵測任何先前所述的非字元按鍵的資訊，請參閱<xref:System.Windows.Forms.KeyEventArgs>類別。  
  
-  
  
   
  
## Examples  
 下列範例會建立<xref:System.Windows.Forms.TextBox>控制項。 `keypressed`方法會使用<xref:System.Windows.Forms.KeyPressEventArgs.KeyChar%2A>屬性，以檢查是否按下 ENTER 鍵。 如果按下 ENTER 鍵時，<xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A>屬性設定為`true`，這表示事件處理。  
  
 [!code-cpp[KeyPressEventArgs#1](~/samples/snippets/cpp/VS_Snippets_Winforms/KeyPressEventArgs/CPP/form1.cpp#1)]
 [!code-csharp[KeyPressEventArgs#1](~/samples/snippets/csharp/VS_Snippets_Winforms/KeyPressEventArgs/CS/form1.cs#1)]
 [!code-vb[KeyPressEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/KeyPressEventArgs/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Control.KeyPress" />
        <altmember cref="M:System.Windows.Forms.Control.IsInputChar(System.Char)" />
      </Docs>
    </Member>
  </Members>
</Type>