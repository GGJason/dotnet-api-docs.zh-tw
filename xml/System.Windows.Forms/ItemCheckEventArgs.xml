<Type Name="ItemCheckEventArgs" FullName="System.Windows.Forms.ItemCheckEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4e36065c019366bb0d8240203c76bc2b39c63243" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30647672" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ItemCheckEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ItemCheckEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ItemCheckEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class ItemCheckEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class ItemCheckEventArgs : EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>提供 <see cref="E:System.Windows.Forms.CheckedListBox.ItemCheck" /> 和 <see cref="T:System.Windows.Forms.CheckedListBox" /> 控制項的 <see cref="T:System.Windows.Forms.ListView" /> 事件資料。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.CheckedListBox.ItemCheck>核取的清單方塊中項目的已勾選的狀態變更時，就會發生事件。 <xref:System.Windows.Forms.ItemCheckEventArgs>類別會指定要變更項目的核取方塊的目前值，要設定的核取方塊的新值之項目的索引。  
  
 如需處理事件的詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。  
  
   
  
## Examples  
 下列程式碼範例示範如何檢查<xref:System.Windows.Forms.ListView>處理控制項<xref:System.Windows.Forms.ListView.ItemCheck?displayProperty=nameWithType>事件。 此方法會使用<xref:System.Windows.Forms.ItemCheckEventArgs.CurrentValue%2A>和<xref:System.Windows.Forms.ItemCheckEventArgs.Index%2A>屬性<xref:System.Windows.Forms.ItemCheckEventArgs>物件擷取和清點選取的功能表項目價格。 在表單，其中包含執行此範例中貼上下列程式碼<xref:System.Windows.Forms.ListView>名為`ListView1`和<xref:System.Windows.Forms.TextBox>名為`Textbox1`。 呼叫`InititalizeListView`從表單的建構函式的方法或`Load`方法。 確定所有事件與事件處理方法相關聯。  
  
 [!code-cpp[System.Windows.Forms.ListView2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListView2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView2/VB/form1.vb#1)]  
[!code-cpp[System.Windows.Forms.ListView2#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CPP/form1.cpp#2)]
[!code-csharp[System.Windows.Forms.ListView2#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CS/form1.cs#2)]
[!code-vb[System.Windows.Forms.ListView2#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView2/VB/form1.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.CheckedListBox" />
    <altmember cref="E:System.Windows.Forms.CheckedListBox.ItemCheck" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ItemCheckEventArgs (int index, System.Windows.Forms.CheckState newCheckValue, System.Windows.Forms.CheckState currentValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 index, valuetype System.Windows.Forms.CheckState newCheckValue, valuetype System.Windows.Forms.CheckState currentValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ItemCheckEventArgs.#ctor(System.Int32,System.Windows.Forms.CheckState,System.Windows.Forms.CheckState)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (index As Integer, newCheckValue As CheckState, currentValue As CheckState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ItemCheckEventArgs(int index, System::Windows::Forms::CheckState newCheckValue, System::Windows::Forms::CheckState currentValue);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="newCheckValue" Type="System.Windows.Forms.CheckState" />
        <Parameter Name="currentValue" Type="System.Windows.Forms.CheckState" />
      </Parameters>
      <Docs>
        <param name="index">要變更項目之以零為起始的索引。</param>
        <param name="newCheckValue">其中一個 <see cref="T:System.Windows.Forms.CheckState" /> 值，指出項目的核取方塊是否變更為已核取、未核取或不定。</param>
        <param name="currentValue">其中一個 <see cref="T:System.Windows.Forms.CheckState" /> 值，指出項目的核取方塊目前是已核取、未核取或不定。</param>
        <summary>初始化 <see cref="T:System.Windows.Forms.ItemCheckEventArgs" /> 類別的新執行個體。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.CheckState" />
      </Docs>
    </Member>
    <Member MemberName="CurrentValue">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.CheckState CurrentValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.CheckState CurrentValue" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ItemCheckEventArgs.CurrentValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentValue As CheckState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::CheckState CurrentValue { System::Windows::Forms::CheckState get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.CheckState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得值，指出項目的核取方塊目前的狀態。</summary>
        <value>其中一個 <see cref="T:System.Windows.Forms.CheckState" /> 值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個屬性可讓您判斷指定的項目中的核取狀態<xref:System.Windows.Forms.CheckedListBox>之前檢查狀態套用變更。  
  
   
  
## Examples  
 下列程式碼範例示範如何檢查<xref:System.Windows.Forms.ListView>處理控制項<xref:System.Windows.Forms.ListView.ItemChecked?displayProperty=nameWithType>事件。 此方法會使用<xref:System.Windows.Forms.ItemCheckEventArgs.CurrentValue%2A>和<xref:System.Windows.Forms.ItemCheckEventArgs.Index%2A>屬性<xref:System.Windows.Forms.ItemCheckEventArgs>物件擷取和清點選取的功能表項目價格。 在表單，其中包含執行此範例中貼上下列程式碼<xref:System.Windows.Forms.ListView>名為`ListView1`和<xref:System.Windows.Forms.TextBox>名為`Textbox1`。 呼叫`InititalizeListView`從表單的建構函式的方法或`Load`方法。 確定所有事件與事件處理方法相關聯。  
  
 [!code-cpp[System.Windows.Forms.ListView2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListView2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView2/VB/form1.vb#1)]  
[!code-cpp[System.Windows.Forms.ListView2#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CPP/form1.cpp#2)]
[!code-csharp[System.Windows.Forms.ListView2#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CS/form1.cs#2)]
[!code-vb[System.Windows.Forms.ListView2#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView2/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ItemCheckEventArgs.NewValue" />
      </Docs>
    </Member>
    <Member MemberName="Index">
      <MemberSignature Language="C#" Value="public int Index { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Index" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ItemCheckEventArgs.Index" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Index As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Index { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得要變更項目之以零為起始的索引。</summary>
        <value>要變更項目之以零為起始的索引。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以使用這個屬性來判斷哪一個項目中的核取方塊<xref:System.Windows.Forms.CheckedListBox>正在變更。  
  
   
  
## Examples  
 下列程式碼範例示範如何檢查<xref:System.Windows.Forms.ListView>處理控制項<xref:System.Windows.Forms.ListView.ItemChecked?displayProperty=nameWithType>事件。 此方法會使用<xref:System.Windows.Forms.ItemCheckEventArgs.CurrentValue%2A>和<xref:System.Windows.Forms.ItemCheckEventArgs.Index%2A>屬性<xref:System.Windows.Forms.ItemCheckEventArgs>物件擷取和清點選取的功能表項目價格。 在表單，其中包含執行此範例中貼上下列程式碼<xref:System.Windows.Forms.ListView>名為`ListView1`和<xref:System.Windows.Forms.TextBox>名為`Textbox1`。 呼叫`InititalizeListView`從表單的建構函式的方法或`Load`方法。 確定所有事件與事件處理方法相關聯。  
  
 [!code-cpp[System.Windows.Forms.ListView2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListView2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView2/VB/form1.vb#1)]  
[!code-cpp[System.Windows.Forms.ListView2#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CPP/form1.cpp#2)]
[!code-csharp[System.Windows.Forms.ListView2#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CS/form1.cs#2)]
[!code-vb[System.Windows.Forms.ListView2#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView2/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NewValue">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.CheckState NewValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.CheckState NewValue" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ItemCheckEventArgs.NewValue" />
      <MemberSignature Language="VB.NET" Value="Public Property NewValue As CheckState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::CheckState NewValue { System::Windows::Forms::CheckState get(); void set(System::Windows::Forms::CheckState value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.CheckState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，指出項目的核取方塊要設定為已核取、未核取或是不定。</summary>
        <value>其中一個 <see cref="T:System.Windows.Forms.CheckState" /> 值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此屬性可讓您判斷指定的項目新的核取狀態的核取狀態的變更之前<xref:System.Windows.Forms.CheckedListBox>控制項。 除了判斷新的核取狀態，您可以使用這個屬性中的事件處理常式<xref:System.Windows.Forms.CheckedListBox.ItemCheck>事件，以將狀態變更為比指定不同的核取狀態。 例如，如果使用者用來放置項目旁邊的核取記號<xref:System.Windows.Forms.CheckedListBox>，決定您應該不會檢查根據應用程式的狀態，您可以覆寫核取記號狀態變更此屬性設定為其先前的設定或 to 不同的核取狀態。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用這個成員。 在範例中，事件處理常式會報告一次<xref:System.Windows.Forms.CheckedListBox.ItemCheck?displayProperty=nameWithType>事件。 此報表可協助您了解事件發生的時機，並可協助您偵錯。 若要報告多個事件或事件經常發生，請考慮更換<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>與<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>或將訊息附加到多行<xref:System.Windows.Forms.TextBox>。  
  
 若要執行範例程式碼，將它貼到包含類型的執行個體的專案<xref:System.Windows.Forms.CheckedListBox>名為`CheckedListBox1`。 請確定事件處理常式關聯<xref:System.Windows.Forms.CheckedListBox.ItemCheck?displayProperty=nameWithType>事件。  
  
 [!code-csharp[System.Windows.Forms.EventExamples#156](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#156)]
 [!code-vb[System.Windows.Forms.EventExamples#156](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#156)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ItemCheckEventArgs.CurrentValue" />
      </Docs>
    </Member>
  </Members>
</Type>