<Type Name="IWin32Window" FullName="System.Windows.Forms.IWin32Window">
  <Metadata><Meta Name="ms.openlocfilehash" Value="04ed04bdfd11571b2495079e69e8b1f06e5d89dc" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55329699" /></Metadata><TypeSignature Language="C#" Value="public interface IWin32Window" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IWin32Window" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.IWin32Window" />
  <TypeSignature Language="VB.NET" Value="Public Interface IWin32Window" />
  <TypeSignature Language="C++ CLI" Value="public interface class IWin32Window" />
  <TypeSignature Language="F#" Value="type IWin32Window = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("458AB8A2-A1EA-4d7b-8EBE-DEE5D3D9442C")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="a7c43-101">提供來公開 Win32 HWND 控制代碼的介面。</span><span class="sxs-lookup"><span data-stu-id="a7c43-101">Provides an interface to expose Win32 HWND handles.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7c43-102">實作這個介面會公開 Win32 HWND 控制代碼的物件。</span><span class="sxs-lookup"><span data-stu-id="a7c43-102">This interface is implemented on objects that expose Win32 HWND handles.</span></span> <span data-ttu-id="a7c43-103">產生的控制代碼可以搭配 Win32 API 呼叫。</span><span class="sxs-lookup"><span data-stu-id="a7c43-103">The resultant handle can be used with Win32 API calls.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a7c43-104">下列範例會設定<xref:System.Windows.Forms.Control.Text%2A>的屬性`label1`目前<xref:System.Windows.Forms.IWin32Window.Handle%2A>的`Form1`。</span><span class="sxs-lookup"><span data-stu-id="a7c43-104">The following example sets the <xref:System.Windows.Forms.Control.Text%2A> property of `label1` to the current <xref:System.Windows.Forms.IWin32Window.Handle%2A> of `Form1`.</span></span> <span data-ttu-id="a7c43-105">這個範例假設您擁有<xref:System.Windows.Forms.Form>稱為`Form1`具有<xref:System.Windows.Forms.Label>呼叫`label1`在其上。</span><span class="sxs-lookup"><span data-stu-id="a7c43-105">This example assumes that you have a <xref:System.Windows.Forms.Form> called `Form1` with a <xref:System.Windows.Forms.Label> called `label1` on it.</span></span>  
  
 [!code-cpp[Classic IWin32Window Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic IWin32Window Example/CPP/source.cpp#1)]
 [!code-csharp[Classic IWin32Window Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic IWin32Window Example/CS/source.cs#1)]
 [!code-vb[Classic IWin32Window Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic IWin32Window Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Handle">
      <MemberSignature Language="C#" Value="public IntPtr Handle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int Handle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.IWin32Window.Handle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Handle As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IntPtr Handle { IntPtr get(); };" />
      <MemberSignature Language="F#" Value="member this.Handle : nativeint" Usage="System.Windows.Forms.IWin32Window.Handle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a7c43-106">取得以實作器表示的視窗控制代碼。</span><span class="sxs-lookup"><span data-stu-id="a7c43-106">Gets the handle to the window represented by the implementer.</span></span></summary>
        <value><span data-ttu-id="a7c43-107">以實作器表示的視窗的控制代碼。</span><span class="sxs-lookup"><span data-stu-id="a7c43-107">A handle to the window represented by the implementer.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7c43-108">根據值的實作者，<xref:System.Windows.Forms.IWin32Window.Handle%2A>屬性可以變更視窗的存留期間。</span><span class="sxs-lookup"><span data-stu-id="a7c43-108">Depending on the implementer, the value of the <xref:System.Windows.Forms.IWin32Window.Handle%2A> property could change during the life of the window.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a7c43-109">下列範例會設定<xref:System.Windows.Forms.Control.Text%2A>的屬性`label1`目前<xref:System.Windows.Forms.IWin32Window.Handle%2A>的`Form1`。</span><span class="sxs-lookup"><span data-stu-id="a7c43-109">The following example sets the <xref:System.Windows.Forms.Control.Text%2A> property of `label1` to the current <xref:System.Windows.Forms.IWin32Window.Handle%2A> of `Form1`.</span></span> <span data-ttu-id="a7c43-110">這個範例假設您擁有<xref:System.Windows.Forms.Form>稱為`Form1`具有<xref:System.Windows.Forms.Label>呼叫`label1`在其上。</span><span class="sxs-lookup"><span data-stu-id="a7c43-110">This example assumes that you have a <xref:System.Windows.Forms.Form> called `Form1` with a <xref:System.Windows.Forms.Label> called `label1` on it.</span></span>  
  
 [!code-cpp[Classic IWin32Window Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic IWin32Window Example/CPP/source.cpp#1)]
 [!code-csharp[Classic IWin32Window Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic IWin32Window Example/CS/source.cs#1)]
 [!code-vb[Classic IWin32Window Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic IWin32Window Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>