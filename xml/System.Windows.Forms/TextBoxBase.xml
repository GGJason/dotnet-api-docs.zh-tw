<Type Name="TextBoxBase" FullName="System.Windows.Forms.TextBoxBase">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f306d0b5795c9908bdd1afe36884db0c2cec0b17" />
    <Meta Name="ms.sourcegitcommit" Value="0e1f030650a307c745ee84ed547ef858acaea587" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="11/29/2018" />
    <Meta Name="ms.locfileid" Value="52590721" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class TextBoxBase : System.Windows.Forms.Control" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit TextBoxBase extends System.Windows.Forms.Control" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.TextBoxBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class TextBoxBase&#xA;Inherits Control" />
  <TypeSignature Language="C++ CLI" Value="public ref class TextBoxBase abstract : System::Windows::Forms::Control" />
  <TypeSignature Language="F#" Value="type TextBoxBase = class&#xA;    inherit Control" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.Control</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.DefaultBindingProperty("Text")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.DefaultEvent("TextChanged")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.TextBoxBaseDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ClassInterface</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.TextBoxBaseDesigner, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.TextBoxBaseDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="f5974-101">實作文字控制項要求的基本功能。</span>
      <span class="sxs-lookup">
        <span data-stu-id="f5974-101">Implements the basic functionality required by text controls.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5974-102">這個類別會實作核心功能的文字操作控制項，例如<xref:System.Windows.Forms.TextBox>和<xref:System.Windows.Forms.RichTextBox>。</span><span class="sxs-lookup"><span data-stu-id="f5974-102">This class implements the core features of text manipulation controls, such as <xref:System.Windows.Forms.TextBox> and <xref:System.Windows.Forms.RichTextBox>.</span></span> <span data-ttu-id="f5974-103">其中包括文字選取範圍，**剪貼簿**功能、 多行文字方塊控制項支援，以及許多事件。</span><span class="sxs-lookup"><span data-stu-id="f5974-103">These include text selection, **Clipboard** functionality, multiline text control support, and many events.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f5974-104">下列程式碼範例會使用<xref:System.Windows.Forms.TextBox>的衍生類別，以建立多行<xref:System.Windows.Forms.TextBox>具有垂直捲軸控制項。</span><span class="sxs-lookup"><span data-stu-id="f5974-104">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class, to create a multiline <xref:System.Windows.Forms.TextBox> control with vertical scroll bars.</span></span> <span data-ttu-id="f5974-105">此範例也會使用<xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A>， <xref:System.Windows.Forms.TextBox.AcceptsReturn%2A>，和<xref:System.Windows.Forms.TextBoxBase.WordWrap%2A>屬性，使多行文字方塊控制項適用於建立文字文件。</span><span class="sxs-lookup"><span data-stu-id="f5974-105">This example also uses the <xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A>, <xref:System.Windows.Forms.TextBox.AcceptsReturn%2A>, and <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> properties to make the multiline text box control useful for creating text documents.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.AcceptsTab Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.AcceptsTab Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.AcceptsTab Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.AcceptsTab Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.AcceptsTab Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.AcceptsTab Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>
        <span data-ttu-id="f5974-106">您通常不會從繼承<see cref="T:System.Windows.Forms.TextBoxBase" />。</span>
        <span class="sxs-lookup">
          <span data-stu-id="f5974-106">You do not typically inherit from <see cref="T:System.Windows.Forms.TextBoxBase" />.</span>
        </span>
        <span data-ttu-id="f5974-107">若要建立您自己的文字控制項類別，繼承自<see cref="T:System.Windows.Forms.TextBox" />或<see cref="T:System.Windows.Forms.RichTextBox" />。</span>
        <span class="sxs-lookup">
          <span data-stu-id="f5974-107">To create your own text control class, inherit from <see cref="T:System.Windows.Forms.TextBox" /> or <see cref="T:System.Windows.Forms.RichTextBox" />.</span>
        </span>
      </para>
    </block>
    <altmember cref="T:System.Windows.Forms.TextBox" />
    <altmember cref="T:System.Windows.Forms.RichTextBox" />
  </Docs>
  <Members>
    <Member MemberName="AcceptsTab">
      <MemberSignature Language="C#" Value="public bool AcceptsTab { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AcceptsTab" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.AcceptsTab" />
      <MemberSignature Language="VB.NET" Value="Public Property AcceptsTab As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AcceptsTab { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AcceptsTab : bool with get, set" Usage="System.Windows.Forms.TextBoxBase.AcceptsTab" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f5974-108">取得或設定值，指出在多行文字方塊控制項中按 TAB 鍵時，在控制項中輸入的是 TAB 字元，而不是將焦點 (Focus) 移至定位順序的下一個控制項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-108">Gets or sets a value indicating whether pressing the TAB key in a multiline text box control types a TAB character in the control instead of moving the focus to the next control in the tab order.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f5974-109">如果使用者可以用 TAB 鍵在多行文字方塊中輸入定位點，則為 <see langword="true" />，如果按 TAB 鍵會移動焦點，則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-109">
              <see langword="true" /> if users can enter tabs in a multiline text box using the TAB key; <see langword="false" /> if pressing the TAB key moves the focus.</span>
          </span>
          <span data-ttu-id="f5974-110">預設值為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-110">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5974-111"><xref:System.Windows.Forms.TextBoxBase.Multiline%2A>屬性也必須`true`來取得控制項中的定位字元。</span><span class="sxs-lookup"><span data-stu-id="f5974-111">The <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> property must also be `true` to get a TAB character in the control.</span></span>  
  
 <span data-ttu-id="f5974-112">如果<xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A>屬性設定為`true`，使用者必須按下 CTRL + TAB 鍵將焦點移至定位順序中的下一個控制項。</span><span class="sxs-lookup"><span data-stu-id="f5974-112">If the <xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A> property is set to `true`, the user must press CTRL+TAB to move the focus to the next control in the tab order.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f5974-113">下列程式碼範例會使用<xref:System.Windows.Forms.TextBox>的衍生類別，以建立多行<xref:System.Windows.Forms.TextBox>具有垂直捲軸控制項。</span><span class="sxs-lookup"><span data-stu-id="f5974-113">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class, to create a multiline <xref:System.Windows.Forms.TextBox> control with vertical scroll bars.</span></span> <span data-ttu-id="f5974-114">此範例也會使用<xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A>， <xref:System.Windows.Forms.TextBox.AcceptsReturn%2A>，和<xref:System.Windows.Forms.TextBoxBase.WordWrap%2A>屬性，使多行文字方塊控制項適用於建立文字文件。</span><span class="sxs-lookup"><span data-stu-id="f5974-114">This example also uses the <xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A>, <xref:System.Windows.Forms.TextBox.AcceptsReturn%2A>, and <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> properties to make the multiline text box control useful for creating text documents.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.AcceptsTab Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.AcceptsTab Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.AcceptsTab Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.AcceptsTab Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.AcceptsTab Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.AcceptsTab Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TextBox.AcceptsReturn" />
      </Docs>
    </Member>
    <Member MemberName="AcceptsTabChanged">
      <MemberSignature Language="C#" Value="public event EventHandler AcceptsTabChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler AcceptsTabChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TextBoxBase.AcceptsTabChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event AcceptsTabChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ AcceptsTabChanged;" />
      <MemberSignature Language="F#" Value="member this.AcceptsTabChanged : EventHandler " Usage="member this.AcceptsTabChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f5974-115">發生於 <see cref="P:System.Windows.Forms.TextBoxBase.AcceptsTab" /> 屬性的值已變更時。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-115">Occurs when the value of the <see cref="P:System.Windows.Forms.TextBoxBase.AcceptsTab" /> property has changed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5974-116">如需如何處理事件的詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="f5974-116">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f5974-117">下列程式碼範例示範如何使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="f5974-117">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="f5974-118">在範例中，事件處理常式會報告一次<xref:System.Windows.Forms.TextBoxBase.AcceptsTabChanged>事件。</span><span class="sxs-lookup"><span data-stu-id="f5974-118">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.TextBoxBase.AcceptsTabChanged> event.</span></span> <span data-ttu-id="f5974-119">此報表可協助您了解事件發生的時機，並可協助您偵錯。</span><span class="sxs-lookup"><span data-stu-id="f5974-119">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="f5974-120">若要報告多個事件或事件經常發生，請考慮更換<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>具有<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>或將訊息附加到多行<xref:System.Windows.Forms.TextBox>。</span><span class="sxs-lookup"><span data-stu-id="f5974-120">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="f5974-121">若要執行範例程式碼，將它貼至專案，其中包含繼承自類型的執行個體<xref:System.Windows.Forms.TextBoxBase>，這類<xref:System.Windows.Forms.TextBox>或<xref:System.Windows.Forms.TextBoxBase>。</span><span class="sxs-lookup"><span data-stu-id="f5974-121">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.TextBoxBase>, such as a <xref:System.Windows.Forms.TextBox> or <xref:System.Windows.Forms.TextBoxBase>.</span></span> <span data-ttu-id="f5974-122">然後將其命名執行個體`TextBoxBase1`，並確保與關聯的事件處理常式<xref:System.Windows.Forms.TextBoxBase.AcceptsTabChanged>事件。</span><span class="sxs-lookup"><span data-stu-id="f5974-122">Then name the instance `TextBoxBase1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.TextBoxBase.AcceptsTabChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#241](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#241)]
 [!code-vb[System.Windows.Forms.EventExamples#241](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#241)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.AcceptsTab" />
      </Docs>
    </Member>
    <Member MemberName="AppendText">
      <MemberSignature Language="C#" Value="public void AppendText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.AppendText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendText (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendText(System::String ^ text);" />
      <MemberSignature Language="F#" Value="member this.AppendText : string -&gt; unit" Usage="textBoxBase.AppendText text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">
          <span data-ttu-id="f5974-123">要附加於文字方塊目前的內容中的文字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-123">The text to append to the current contents of the text box.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f5974-124">將文字附加至文字方塊的目前文字中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-124">Appends text to the current text of a text box.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5974-125">您可以將文字加入至現有的文字，而不是使用串連運算子 （+） 來串連文字控制項中使用這個方法，以<xref:System.Windows.Forms.TextBoxBase.Text%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="f5974-125">You can use this method to add text to the existing text in the control instead of using the concatenation operator (+) to concatenate text to the <xref:System.Windows.Forms.TextBoxBase.Text%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f5974-126">下列程式碼範例示範如何使用<xref:System.Windows.Forms.TextBoxBase.AppendText%2A>方法和<xref:System.Windows.Forms.TextBoxBase.TextLength%2A>屬性來從其中一個複製文字<xref:System.Windows.Forms.TextBox>到另一個。</span><span class="sxs-lookup"><span data-stu-id="f5974-126">The following code example demonstrates how to use the <xref:System.Windows.Forms.TextBoxBase.AppendText%2A> method and the <xref:System.Windows.Forms.TextBoxBase.TextLength%2A> property to copy text from one <xref:System.Windows.Forms.TextBox> to another.</span></span> <span data-ttu-id="f5974-127">這個範例需要兩個<xref:System.Windows.Forms.TextBox>控制項名為`textBox1`並`textBox2`，已新增至表單，並`textBox1`文字指派給其<xref:System.Windows.Forms.Control.Text%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="f5974-127">This example requires that two <xref:System.Windows.Forms.TextBox> controls named, `textBox1` and `textBox2`, have been added to a form and that `textBox1` has text assigned to its <xref:System.Windows.Forms.Control.Text%2A> property.</span></span>  
  
 [!code-cpp[TextBoxBase.AppendText#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TextBoxBase.AppendText/CPP/form1.cpp#1)]
 [!code-csharp[TextBoxBase.AppendText#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TextBoxBase.AppendText/CS/form1.cs#1)]
 [!code-vb[TextBoxBase.AppendText#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TextBoxBase.AppendText/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Copy" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Paste" />
      </Docs>
    </Member>
    <Member MemberName="AutoSize">
      <MemberSignature Language="C#" Value="public override bool AutoSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.AutoSize" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property AutoSize As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AutoSize { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoSize : bool with get, set" Usage="System.Windows.Forms.TextBoxBase.AutoSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.Repaint)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f5974-128">取得或設定值，指出當指定給控制項的字型變更時，控制項的高度是否要自動調整。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-128">Gets or sets a value indicating whether the height of the control automatically adjusts when the font assigned to the control is changed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f5974-129">當字型變更時，控制項的高度會自動調整，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-129">
              <see langword="true" /> if the height of the control automatically adjusts when the font is changed; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="f5974-130">預設值為 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-130">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5974-131">當您設定<xref:System.Windows.Forms.TextBoxBase.AutoSize%2A>屬性設`true`如<xref:System.Windows.Forms.TextBox>，當<xref:System.Windows.Forms.Control.Font%2A>變更，<xref:System.Windows.Forms.TextBox>展開或折疊<xref:System.Windows.Forms.Control.Height%2A>以配合放大或縮小文字。</span><span class="sxs-lookup"><span data-stu-id="f5974-131">When you set the <xref:System.Windows.Forms.TextBoxBase.AutoSize%2A> property to `true` for a <xref:System.Windows.Forms.TextBox>, when the <xref:System.Windows.Forms.Control.Font%2A> changes, the <xref:System.Windows.Forms.TextBox> expands or contracts the <xref:System.Windows.Forms.Control.Height%2A> to accommodate the larger or smaller text.</span></span> <span data-ttu-id="f5974-132"><xref:System.Windows.Forms.Control.Width%2A>的<xref:System.Windows.Forms.TextBox>不會變更。</span><span class="sxs-lookup"><span data-stu-id="f5974-132">The <xref:System.Windows.Forms.Control.Width%2A> of the <xref:System.Windows.Forms.TextBox> does not change.</span></span>  
  
 <span data-ttu-id="f5974-133">如果您想要變更控制項的大小，當使用者輸入文字，您可以使用<xref:System.Windows.Forms.RichTextBox>控制項，並使用其<xref:System.Windows.Forms.RichTextBox.ContentsResized>事件來變更其大小。</span><span class="sxs-lookup"><span data-stu-id="f5974-133">If you want to change the size of the control as the user enters text, you can use a <xref:System.Windows.Forms.RichTextBox> control and use its <xref:System.Windows.Forms.RichTextBox.ContentsResized> event to change its size.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f5974-134">這個範例假設您的表單具有兩個文字方塊中，兩個按鈕，並針對每個按鈕的 click 事件。</span><span class="sxs-lookup"><span data-stu-id="f5974-134">This example assumes that you have a form with two text boxes, two buttons, and click events for each of the buttons.</span></span> <span data-ttu-id="f5974-135">此範例會示範<xref:System.Windows.Forms.TextBoxBase.AutoSize%2A>屬性設定為`true`一個文字方塊和`false`其他。</span><span class="sxs-lookup"><span data-stu-id="f5974-135">The example demonstrates the <xref:System.Windows.Forms.TextBoxBase.AutoSize%2A> property by setting it to `true` for one text box and `false` for the other.</span></span> <span data-ttu-id="f5974-136">當您按一下某個按鈕的文字方塊會填入一個較小的文字，且當您按一下 [其他] 按鈕的文字方塊會填入具有較大的文字。</span><span class="sxs-lookup"><span data-stu-id="f5974-136">When you click one button the text boxes are filled with a smaller text, and when you click the other button the text boxes are filled with larger text.</span></span> <span data-ttu-id="f5974-137">文字方塊具有<xref:System.Windows.Forms.TextBoxBase.AutoSize%2A>設定為`true`會展開以容納較大型文字的高度。</span><span class="sxs-lookup"><span data-stu-id="f5974-137">The text box that has <xref:System.Windows.Forms.TextBoxBase.AutoSize%2A> set to `true` expands in height to accommodate the larger text.</span></span> <span data-ttu-id="f5974-138">寬度不會變更。</span><span class="sxs-lookup"><span data-stu-id="f5974-138">The width does not change.</span></span>  
  
 [!code-csharp[SystemWindowsFormsAutoSize#1](~/samples/snippets/csharp/VS_Snippets_Winforms/SystemWindowsFormsAutoSize/CS/Form1.cs#1)]
 [!code-vb[SystemWindowsFormsAutoSize#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/SystemWindowsFormsAutoSize/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoSizeChanged">
      <MemberSignature Language="C#" Value="public event EventHandler AutoSizeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler AutoSizeChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TextBoxBase.AutoSizeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event AutoSizeChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ AutoSizeChanged;" />
      <MemberSignature Language="F#" Value="member this.AutoSizeChanged : EventHandler " Usage="member this.AutoSizeChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f5974-139">這個事件與這個類別無關。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-139">This event is not relevant for this class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5974-140">這個事件與這個類別無關。</span><span class="sxs-lookup"><span data-stu-id="f5974-140">This event is not relevant for this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackColor">
      <MemberSignature Language="C#" Value="public override System.Drawing.Color BackColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BackColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.BackColor" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BackColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Color BackColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.BackColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.TextBoxBase.BackColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.DispId(-501)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f5974-141">取得或設定控制項的背景色彩。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-141">Gets or sets the background color of the control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f5974-142">
            <see cref="T:System.Drawing.Color" />，表示控制項的背景。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-142">A <see cref="T:System.Drawing.Color" /> that represents the background of the control.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5974-143">您可以使用<xref:System.Windows.Forms.TextBoxBase.BackColor%2A>屬性來變更文字控制項融入您的表單的色彩配置的背景色彩。</span><span class="sxs-lookup"><span data-stu-id="f5974-143">You can use the <xref:System.Windows.Forms.TextBoxBase.BackColor%2A> property to change the background color of the text control to blend into the color scheme of your forms.</span></span>  
  
 <span data-ttu-id="f5974-144">若要變更控制項中文字的色彩，請使用<xref:System.Windows.Forms.TextBoxBase.ForeColor%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="f5974-144">To change the color of the text within the control, use the <xref:System.Windows.Forms.TextBoxBase.ForeColor%2A> property.</span></span> <span data-ttu-id="f5974-145">設定時<xref:System.Windows.Forms.TextBoxBase.BackColor%2A>屬性的文字控制項，可讓您確認您選擇的色彩不會消失控制項的文字。</span><span class="sxs-lookup"><span data-stu-id="f5974-145">When setting the <xref:System.Windows.Forms.TextBoxBase.BackColor%2A> property of your text control, ensure that the color you choose does not cause the text of the control to disappear.</span></span> <span data-ttu-id="f5974-146">例如，如果<xref:System.Windows.Forms.TextBoxBase.BackColor%2A>並<xref:System.Windows.Forms.TextBoxBase.ForeColor%2A>屬性都設為`Color.Black`，textbox 控制項內的文字將不會顯示。</span><span class="sxs-lookup"><span data-stu-id="f5974-146">For example, if the <xref:System.Windows.Forms.TextBoxBase.BackColor%2A> and <xref:System.Windows.Forms.TextBoxBase.ForeColor%2A> properties are both set to `Color.Black`, the text within your textbox control will not be visible.</span></span>  
  
 <span data-ttu-id="f5974-147">這個屬性可能比寫 if<xref:System.Windows.Forms.TextBoxBase.ReadOnly%2A>的屬性<xref:System.Windows.Forms.TextBoxBase>設定為`true`。</span><span class="sxs-lookup"><span data-stu-id="f5974-147">This property might be over ridden if the <xref:System.Windows.Forms.TextBoxBase.ReadOnly%2A> property of the <xref:System.Windows.Forms.TextBoxBase> is set to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.ForeColor" />
      </Docs>
    </Member>
    <Member MemberName="BackgroundImage">
      <MemberSignature Language="C#" Value="public override System.Drawing.Image BackgroundImage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Image BackgroundImage" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.BackgroundImage" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BackgroundImage As Image" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Image ^ BackgroundImage { System::Drawing::Image ^ get(); void set(System::Drawing::Image ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BackgroundImage : System.Drawing.Image with get, set" Usage="System.Windows.Forms.TextBoxBase.BackgroundImage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Image</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f5974-148">這個屬性與這個類別無關。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-148">This property is not relevant for this class.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f5974-149">物件的背景影像。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-149">The background image for the object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5974-150">這個屬性與這個類別無關。</span><span class="sxs-lookup"><span data-stu-id="f5974-150">This property is not relevant for this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImageChanged">
      <MemberSignature Language="C#" Value="public event EventHandler BackgroundImageChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BackgroundImageChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TextBoxBase.BackgroundImageChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BackgroundImageChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ BackgroundImageChanged;" />
      <MemberSignature Language="F#" Value="member this.BackgroundImageChanged : EventHandler " Usage="member this.BackgroundImageChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f5974-151">發生於 <see cref="P:System.Windows.Forms.TextBoxBase.BackgroundImage" /> 屬性的值變更時。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-151">Occurs when the value of the <see cref="P:System.Windows.Forms.TextBoxBase.BackgroundImage" /> property changes.</span>
          </span>
          <span data-ttu-id="f5974-152">這個事件與這個類別無關。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-152">This event is not relevant for this class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5974-153">這個事件與這個類別無關。</span><span class="sxs-lookup"><span data-stu-id="f5974-153">This event is not relevant for this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImageLayout">
      <MemberSignature Language="C#" Value="public override System.Windows.Forms.ImageLayout BackgroundImageLayout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ImageLayout BackgroundImageLayout" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.BackgroundImageLayout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BackgroundImageLayout As ImageLayout" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::ImageLayout BackgroundImageLayout { System::Windows::Forms::ImageLayout get(); void set(System::Windows::Forms::ImageLayout value); };" />
      <MemberSignature Language="F#" Value="member this.BackgroundImageLayout : System.Windows.Forms.ImageLayout with get, set" Usage="System.Windows.Forms.TextBoxBase.BackgroundImageLayout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ImageLayout</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f5974-154">這個屬性與這個類別無關。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-154">This property is not relevant for this class.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f5974-155">其中一個 <see cref="T:System.Windows.Forms.ImageLayout" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-155">One of the <see cref="T:System.Windows.Forms.ImageLayout" /> values.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5974-156">這個屬性與這個類別無關。</span><span class="sxs-lookup"><span data-stu-id="f5974-156">This property is not relevant for this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImageLayoutChanged">
      <MemberSignature Language="C#" Value="public event EventHandler BackgroundImageLayoutChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BackgroundImageLayoutChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TextBoxBase.BackgroundImageLayoutChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BackgroundImageLayoutChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ BackgroundImageLayoutChanged;" />
      <MemberSignature Language="F#" Value="member this.BackgroundImageLayoutChanged : EventHandler " Usage="member this.BackgroundImageLayoutChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f5974-157">發生於 <see cref="P:System.Windows.Forms.TextBoxBase.BackgroundImageLayout" /> 屬性的值變更時。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-157">Occurs when the value of the <see cref="P:System.Windows.Forms.TextBoxBase.BackgroundImageLayout" /> property changes.</span>
          </span>
          <span data-ttu-id="f5974-158">這個事件與這個類別無關。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-158">This event is not relevant for this class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5974-159">這個事件與這個類別無關。</span><span class="sxs-lookup"><span data-stu-id="f5974-159">This event is not relevant for this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BorderStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.BorderStyle BorderStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.BorderStyle BorderStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.BorderStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property BorderStyle As BorderStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::BorderStyle BorderStyle { System::Windows::Forms::BorderStyle get(); void set(System::Windows::Forms::BorderStyle value); };" />
      <MemberSignature Language="F#" Value="member this.BorderStyle : System.Windows.Forms.BorderStyle with get, set" Usage="System.Windows.Forms.TextBoxBase.BorderStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.DispId(-504)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.BorderStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f5974-160">取得或設定文字方塊控制項的框線樣式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-160">Gets or sets the border type of the text box control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f5974-161">
            <see cref="T:System.Windows.Forms.BorderStyle" />，表示文字方塊控制項的框線樣式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-161">A <see cref="T:System.Windows.Forms.BorderStyle" /> that represents the border type of the text box control.</span>
          </span>
          <span data-ttu-id="f5974-162">預設值為 <see langword="Fixed3D" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-162">The default is <see langword="Fixed3D" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5974-163">您可以使用<xref:System.Windows.Forms.TextBoxBase.BorderStyle%2A>建立無框線和一般樣式控制項，除了預設的 3d 控制項的屬性。</span><span class="sxs-lookup"><span data-stu-id="f5974-163">You can use the <xref:System.Windows.Forms.TextBoxBase.BorderStyle%2A> property to create borderless and flat style controls, in addition to the default three-dimensional control.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f5974-164">在衍生的類別中， <xref:System.Windows.Forms.RichTextBox>，不支援`BorderStyle.FixedSingle`樣式。</span><span class="sxs-lookup"><span data-stu-id="f5974-164">The derived class, <xref:System.Windows.Forms.RichTextBox>, does not support the `BorderStyle.FixedSingle` style.</span></span> <span data-ttu-id="f5974-165">此樣式會導致<xref:System.Windows.Forms.BorderStyle>使用`BorderStyle.Fixed3D`改為樣式。</span><span class="sxs-lookup"><span data-stu-id="f5974-165">This style will cause the <xref:System.Windows.Forms.BorderStyle> to use the `BorderStyle.Fixed3D` style instead.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f5974-166">下列程式碼範例使用<xref:System.Windows.Forms.TextBox>，衍生類別，以建立可正確顯示文字時，使用 20 級 Arial 具有單一框線的文字方塊。</span><span class="sxs-lookup"><span data-stu-id="f5974-166">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class, to create a text box that can properly display text using 20-point Arial with a single border.</span></span> <span data-ttu-id="f5974-167">這個範例會使用<xref:System.Windows.Forms.TextBoxBase.PreferredHeight%2A>屬性來判斷適當的控制項的高度之後的字型, 和<xref:System.Windows.Forms.TextBoxBase.BorderStyle%2A>已指派給控制項。</span><span class="sxs-lookup"><span data-stu-id="f5974-167">This example uses the <xref:System.Windows.Forms.TextBoxBase.PreferredHeight%2A> property to determine the appropriate height of the control after the font and <xref:System.Windows.Forms.TextBoxBase.BorderStyle%2A> have been assigned to the control.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.BorderStyle Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.BorderStyle Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.BorderStyle Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.BorderStyle Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.BorderStyle Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.BorderStyle Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="f5974-168">不在列舉型別 (Enumeration) 有效值範圍內的值會指派給這個屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-168">A value that is not within the range of valid values for the enumeration was assigned to the property.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BorderStyleChanged">
      <MemberSignature Language="C#" Value="public event EventHandler BorderStyleChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BorderStyleChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TextBoxBase.BorderStyleChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BorderStyleChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ BorderStyleChanged;" />
      <MemberSignature Language="F#" Value="member this.BorderStyleChanged : EventHandler " Usage="member this.BorderStyleChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f5974-169">發生於 <see cref="P:System.Windows.Forms.TextBoxBase.BorderStyle" /> 屬性的值已變更時。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-169">Occurs when the value of the <see cref="P:System.Windows.Forms.TextBoxBase.BorderStyle" /> property has changed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5974-170">如需如何處理事件的詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="f5974-170">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f5974-171">下列程式碼範例示範如何使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="f5974-171">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="f5974-172">在範例中，事件處理常式會報告一次<xref:System.Windows.Forms.TextBoxBase.BorderStyleChanged>事件。</span><span class="sxs-lookup"><span data-stu-id="f5974-172">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.TextBoxBase.BorderStyleChanged> event.</span></span> <span data-ttu-id="f5974-173">此報表可協助您了解事件發生的時機，並可協助您偵錯。</span><span class="sxs-lookup"><span data-stu-id="f5974-173">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="f5974-174">若要報告多個事件或事件經常發生，請考慮更換<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>具有<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>或將訊息附加到多行<xref:System.Windows.Forms.TextBox>。</span><span class="sxs-lookup"><span data-stu-id="f5974-174">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="f5974-175">若要執行範例程式碼，將它貼至專案，其中包含繼承自類型的執行個體<xref:System.Windows.Forms.TextBoxBase>，這類<xref:System.Windows.Forms.TextBox>或<xref:System.Windows.Forms.TextBoxBase>。</span><span class="sxs-lookup"><span data-stu-id="f5974-175">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.TextBoxBase>, such as a <xref:System.Windows.Forms.TextBox> or <xref:System.Windows.Forms.TextBoxBase>.</span></span> <span data-ttu-id="f5974-176">然後將其命名執行個體`TextBoxBase1`，並確保與關聯的事件處理常式<xref:System.Windows.Forms.TextBoxBase.BorderStyleChanged>事件。</span><span class="sxs-lookup"><span data-stu-id="f5974-176">Then name the instance `TextBoxBase1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.TextBoxBase.BorderStyleChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#242](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#242)]
 [!code-vb[System.Windows.Forms.EventExamples#242](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#242)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.BorderStyle" />
      </Docs>
    </Member>
    <Member MemberName="CanEnableIme">
      <MemberSignature Language="C#" Value="protected override bool CanEnableIme { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanEnableIme" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.CanEnableIme" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property CanEnableIme As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool CanEnableIme { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanEnableIme : bool" Usage="System.Windows.Forms.TextBoxBase.CanEnableIme" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f5974-177">取得值，這個值表示 <see cref="P:System.Windows.Forms.Control.ImeMode" /> 屬性是否可以設定為使用中的值，以啟用 IME 支援。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-177">Gets a value indicating whether the <see cref="P:System.Windows.Forms.Control.ImeMode" /> property can be set to an active value, to enable IME support.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f5974-178">如果 <see cref="P:System.Windows.Forms.TextBoxBase.ReadOnly" /> 屬性為 <see langword="false" />，或者這個 <see cref="T:System.Windows.Forms.TextBoxBase" /> 類別設定使用密碼遮罩字元，則為 <see langword="true" />，否則為 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-178">
              <see langword="false" /> if the <see cref="P:System.Windows.Forms.TextBoxBase.ReadOnly" /> property is <see langword="true" /> or if this <see cref="T:System.Windows.Forms.TextBoxBase" /> class is set to use a password mask character; otherwise, <see langword="true" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanUndo">
      <MemberSignature Language="C#" Value="public bool CanUndo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanUndo" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.CanUndo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanUndo As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanUndo { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanUndo : bool" Usage="System.Windows.Forms.TextBoxBase.CanUndo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f5974-179">取得值，指出使用者是否能復原在文字控制項中先前的作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-179">Gets a value indicating whether the user can undo the previous operation in a text box control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f5974-180">如果使用者能夠復原先前在文字控制項中進行的作業，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-180">
              <see langword="true" /> if the user can undo the previous operation performed in a text box control; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5974-181">如果這個方法會傳回`true`，您可以呼叫<xref:System.Windows.Forms.TextBoxBase.Undo%2A>復原最後一個作業，在文字方塊中的方法。</span><span class="sxs-lookup"><span data-stu-id="f5974-181">If this method returns `true`, you can call the <xref:System.Windows.Forms.TextBoxBase.Undo%2A> method to undo the last operation in a text box.</span></span> <span data-ttu-id="f5974-182">您可以使用這個方法中的<xref:System.Windows.Forms.MenuItem.Popup>事件的<xref:System.Windows.Forms.MenuItem>，或在管理的按鍵的狀態的程式碼<xref:System.Windows.Forms.ToolBar>來啟用或停用復原先前的作業中的文字方塊控制項的功能。</span><span class="sxs-lookup"><span data-stu-id="f5974-182">You can use this method in the <xref:System.Windows.Forms.MenuItem.Popup> event of a <xref:System.Windows.Forms.MenuItem>, or in code that manages the state of buttons on a <xref:System.Windows.Forms.ToolBar> to enable or disable the ability to undo the previous operation in a text box control.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f5974-183">下列程式碼範例使用<xref:System.Windows.Forms.TextBox>，衍生的類別。</span><span class="sxs-lookup"><span data-stu-id="f5974-183">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class.</span></span> <span data-ttu-id="f5974-184">它提供<xref:System.Windows.Forms.MenuItem.Click>事件處理常式<xref:System.Windows.Forms.MenuItem>剪下、 複製、 貼上，並復原作業執行的物件。</span><span class="sxs-lookup"><span data-stu-id="f5974-184">It provides <xref:System.Windows.Forms.MenuItem.Click> event handlers for <xref:System.Windows.Forms.MenuItem> objects that perform Cut, Copy, Paste, and Undo operations.</span></span> <span data-ttu-id="f5974-185">這個範例需要<xref:System.Windows.Forms.TextBox>控制項，名為`textBox1`已建立。</span><span class="sxs-lookup"><span data-stu-id="f5974-185">This example requires that a <xref:System.Windows.Forms.TextBox> control named `textBox1` has been created.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.CanUndo Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.CanUndo Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.CanUndo Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.CanUndo Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.CanUndo Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.CanUndo Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Cut" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Copy" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Paste" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Undo" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Clear" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="textBoxBase.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f5974-186">將所有文字從文字方塊控制項清除。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-186">Clears all text from the text box control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5974-187">您可以使用這個方法，以清除內容的控制項，而不是指派<xref:System.Windows.Forms.TextBoxBase.Text%2A>屬性為空字串。</span><span class="sxs-lookup"><span data-stu-id="f5974-187">You can use this method to clear the contents of the control instead of assigning the <xref:System.Windows.Forms.TextBoxBase.Text%2A> property an empty string.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f5974-188">下列程式碼範例會使用<xref:System.Windows.Forms.TextBox>的衍生類別，以建立事件處理常式<xref:System.Windows.Forms.Control.TextChanged>事件。</span><span class="sxs-lookup"><span data-stu-id="f5974-188">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class, to create an event handler for the <xref:System.Windows.Forms.Control.TextChanged> event.</span></span> <span data-ttu-id="f5974-189">中的事件處理常式的程式碼會將資料限制數字。</span><span class="sxs-lookup"><span data-stu-id="f5974-189">The code within the event handler restricts data to numbers.</span></span> <span data-ttu-id="f5974-190">文字輸入控制項中之後，程式碼會判斷是否輸入的文字會是數字。</span><span class="sxs-lookup"><span data-stu-id="f5974-190">After text has been entered in the control, the code determines if the text entered is a number.</span></span> <span data-ttu-id="f5974-191">如果文字不是數字，程式碼，將會清除控制項中的文字和<xref:System.Windows.Forms.MessageBox>來提醒使用者接受的數字，才會顯示。</span><span class="sxs-lookup"><span data-stu-id="f5974-191">If the text is not a number, the code clears the text from the control and a <xref:System.Windows.Forms.MessageBox> is displayed to alert the user that only numbers are accepted.</span></span> <span data-ttu-id="f5974-192">這個範例需要`Boolean`名為變數`flag`並<xref:System.Windows.Forms.TextBox>控制項稱為`textBox1`外這個方法定義。</span><span class="sxs-lookup"><span data-stu-id="f5974-192">The example requires that a `Boolean` variable named `flag` and a <xref:System.Windows.Forms.TextBox> control called `textBox1` are defined outside of this method.</span></span> <span data-ttu-id="f5974-193">此範例示範如何使用旗標變數，以避免中的階層式事件<xref:System.Windows.Forms.Control.TextChanged>事件。</span><span class="sxs-lookup"><span data-stu-id="f5974-193">This example demonstrates how to use a flag variable to avoid a cascading event in the <xref:System.Windows.Forms.Control.TextChanged> event.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.Clear Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.Clear Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.Clear Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.Clear Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.Clear Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.Clear Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Cut" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Copy" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Paste" />
        <altmember cref="P:System.Windows.Forms.TextBoxBase.CanUndo" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.ClearUndo" />
      </Docs>
    </Member>
    <Member MemberName="ClearUndo">
      <MemberSignature Language="C#" Value="public void ClearUndo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearUndo() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.ClearUndo" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearUndo ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearUndo();" />
      <MemberSignature Language="F#" Value="member this.ClearUndo : unit -&gt; unit" Usage="textBoxBase.ClearUndo " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f5974-194">將與最近執行的作業有關的資訊從文字方塊的復原緩衝區清除。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-194">Clears information about the most recent operation from the undo buffer of the text box.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5974-195">您可以使用這個方法，以避免重複，復原作業根據您的應用程式的狀態。</span><span class="sxs-lookup"><span data-stu-id="f5974-195">You can use this method to prevent an undo operation from repeating, based on the state of your application.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f5974-196">下列程式碼範例使用<xref:System.Windows.Forms.TextBox>，衍生的類別。</span><span class="sxs-lookup"><span data-stu-id="f5974-196">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class.</span></span> <span data-ttu-id="f5974-197">它提供<xref:System.Windows.Forms.MenuItem.Click>事件處理常式<xref:System.Windows.Forms.MenuItem>剪下、 複製、 貼上，並復原作業執行的物件。</span><span class="sxs-lookup"><span data-stu-id="f5974-197">It provides <xref:System.Windows.Forms.MenuItem.Click> event handlers for <xref:System.Windows.Forms.MenuItem> objects that perform Cut, Copy, Paste, and Undo operations.</span></span> <span data-ttu-id="f5974-198">這個範例需要<xref:System.Windows.Forms.TextBox>控制項，名為`textBox1`已建立。</span><span class="sxs-lookup"><span data-stu-id="f5974-198">This example requires that a <xref:System.Windows.Forms.TextBox> control named `textBox1` has been created.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Cut" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Copy" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Paste" />
        <altmember cref="P:System.Windows.Forms.TextBoxBase.CanUndo" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Clear" />
      </Docs>
    </Member>
    <Member MemberName="Click">
      <MemberSignature Language="C#" Value="public event EventHandler Click;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Click" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TextBoxBase.Click" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Click As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Click;" />
      <MemberSignature Language="F#" Value="member this.Click : EventHandler " Usage="member this.Click : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Always)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f5974-199">發生於按一下文字方塊時。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-199">Occurs when the text box is clicked.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5974-200">如需如何處理事件的詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="f5974-200">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f5974-201">下列程式碼範例示範如何處理<xref:System.Windows.Forms.TextBoxBase.Click>事件。</span><span class="sxs-lookup"><span data-stu-id="f5974-201">The following code example demonstrates how to handle the <xref:System.Windows.Forms.TextBoxBase.Click> event.</span></span> <span data-ttu-id="f5974-202">若要執行此範例，下列程式碼貼入表單，其中包含<xref:System.Windows.Forms.TextBox>稱為 TextBox1 控制項。</span><span class="sxs-lookup"><span data-stu-id="f5974-202">To run the example, paste the following code in a form containing a <xref:System.Windows.Forms.TextBox> control called TextBox1.</span></span> <span data-ttu-id="f5974-203">這個範例需要已與相關聯的事件處理方法<xref:System.Windows.Forms.TextBoxBase.Click>事件。</span><span class="sxs-lookup"><span data-stu-id="f5974-203">This example requires that the event-handling method has been associated with the <xref:System.Windows.Forms.TextBoxBase.Click> event.</span></span>  
  
 [!code-cpp[System.Windows.Forms.TextBoxBaseScrolling#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.TextBoxBaseScrolling/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.TextBoxBaseScrolling#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TextBoxBaseScrolling/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.TextBoxBaseScrolling#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TextBoxBaseScrolling/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public void Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Sub Copy ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Copy();" />
      <MemberSignature Language="F#" Value="member this.Copy : unit -&gt; unit" Usage="textBoxBase.Copy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f5974-204">將文字方塊中目前的選取範圍複製到 [剪貼簿]。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-204">Copies the current selection in the text box to the **Clipboard**.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5974-205">您可以使用這種方法，而不是使用<xref:System.Windows.Forms.Clipboard>類別，以在文字方塊中複製文字，並將它放在**剪貼簿**。</span><span class="sxs-lookup"><span data-stu-id="f5974-205">You can use this method, instead of using the <xref:System.Windows.Forms.Clipboard> class, to copy text in the text box and place it in the **Clipboard**.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f5974-206">下列程式碼範例使用<xref:System.Windows.Forms.TextBox>，衍生的類別。</span><span class="sxs-lookup"><span data-stu-id="f5974-206">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class.</span></span> <span data-ttu-id="f5974-207">它提供<xref:System.Windows.Forms.MenuItem.Click>事件處理常式<xref:System.Windows.Forms.MenuItem>剪下、 複製、 貼上，並復原作業執行的物件。</span><span class="sxs-lookup"><span data-stu-id="f5974-207">It provides <xref:System.Windows.Forms.MenuItem.Click> event handlers for <xref:System.Windows.Forms.MenuItem> objects that perform Cut, Copy, Paste, and Undo operations.</span></span> <span data-ttu-id="f5974-208">這個範例需要<xref:System.Windows.Forms.TextBox>控制項，名為`textBox1`已建立。</span><span class="sxs-lookup"><span data-stu-id="f5974-208">This example requires that a <xref:System.Windows.Forms.TextBox> control named `textBox1` has been created.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Cut" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Undo" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Paste" />
        <altmember cref="P:System.Windows.Forms.TextBoxBase.CanUndo" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Clear" />
      </Docs>
    </Member>
    <Member MemberName="CreateHandle">
      <MemberSignature Language="C#" Value="protected override void CreateHandle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CreateHandle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.CreateHandle" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CreateHandle ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CreateHandle();" />
      <MemberSignature Language="F#" Value="override this.CreateHandle : unit -&gt; unit" Usage="textBoxBase.CreateHandle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f5974-209">建立控制項的控制代碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-209">Creates a handle for the control.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="f5974-210">操作與 unmanaged 程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-210">for operating with unmanaged code.</span>
          </span>
          <span data-ttu-id="f5974-211">相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-211">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CreateParams">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.CreateParams CreateParams { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.CreateParams CreateParams" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.CreateParams" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property CreateParams As CreateParams" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Windows::Forms::CreateParams ^ CreateParams { System::Windows::Forms::CreateParams ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CreateParams : System.Windows.Forms.CreateParams" Usage="System.Windows.Forms.TextBoxBase.CreateParams" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.CreateParams</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f5974-212">建立控制代碼時，取得必要的建立參數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-212">Gets the required creation parameters when the control handle is created.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f5974-213">
            <see cref="T:System.Windows.Forms.CreateParams" />，包含建立控制項之控制代碼時所需的建立參數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-213">A <see cref="T:System.Windows.Forms.CreateParams" /> that contains the required creation parameters when the handle to the control is created.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.CreateParams" />
        <altmember cref="P:System.Windows.Forms.Control.CreateParams" />
      </Docs>
    </Member>
    <Member MemberName="Cut">
      <MemberSignature Language="C#" Value="public void Cut ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Cut() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.Cut" />
      <MemberSignature Language="VB.NET" Value="Public Sub Cut ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Cut();" />
      <MemberSignature Language="F#" Value="member this.Cut : unit -&gt; unit" Usage="textBoxBase.Cut " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f5974-214">將文字方塊中目前的選取範圍移至 [剪貼簿]。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-214">Moves the current selection in the text box to the **Clipboard**.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5974-215">這個方法會只剪下文字從文字方塊中如果控制項中選取的文字。</span><span class="sxs-lookup"><span data-stu-id="f5974-215">This method will only cut text from the text box if text is selected in the control.</span></span> <span data-ttu-id="f5974-216">您可以使用這種方法，而不是使用<xref:System.Windows.Forms.Clipboard>類別，以在文字方塊中複製文字，並將它移至**剪貼簿**。</span><span class="sxs-lookup"><span data-stu-id="f5974-216">You can use this method, instead of using the <xref:System.Windows.Forms.Clipboard> class, to copy text in the text box and move it to the **Clipboard**.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f5974-217">下列程式碼範例使用<xref:System.Windows.Forms.TextBox>，衍生的類別。</span><span class="sxs-lookup"><span data-stu-id="f5974-217">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class.</span></span> <span data-ttu-id="f5974-218">它提供<xref:System.Windows.Forms.MenuItem.Click>事件處理常式<xref:System.Windows.Forms.MenuItem>剪下、 複製、 貼上，並復原作業執行的物件。</span><span class="sxs-lookup"><span data-stu-id="f5974-218">It provides <xref:System.Windows.Forms.MenuItem.Click> event handlers for <xref:System.Windows.Forms.MenuItem> objects that perform Cut, Copy, Paste, and Undo operations.</span></span> <span data-ttu-id="f5974-219">這個範例需要<xref:System.Windows.Forms.TextBox>控制項，名為`textBox1`已建立。</span><span class="sxs-lookup"><span data-stu-id="f5974-219">This example requires that a <xref:System.Windows.Forms.TextBox> control named `textBox1` has been created.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Undo" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Copy" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Paste" />
        <altmember cref="P:System.Windows.Forms.TextBoxBase.CanUndo" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Clear" />
      </Docs>
    </Member>
    <Member MemberName="DefaultCursor">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.Cursor DefaultCursor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Cursor DefaultCursor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.DefaultCursor" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DefaultCursor As Cursor" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Windows::Forms::Cursor ^ DefaultCursor { System::Windows::Forms::Cursor ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultCursor : System.Windows.Forms.Cursor" Usage="System.Windows.Forms.TextBoxBase.DefaultCursor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Cursor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f5974-220">取得或設定控制項的預設游標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-220">Gets or sets the default cursor for the control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f5974-221">類型 <see cref="T:System.Windows.Forms.Cursor" /> 的物件，代表目前的預設資料指標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-221">An object of type <see cref="T:System.Windows.Forms.Cursor" /> representing the current default cursor.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5974-222">覆寫<xref:System.Windows.Forms.TextBoxBase.DefaultCursor%2A>來設定您的控制項的預設資料指標。</span><span class="sxs-lookup"><span data-stu-id="f5974-222">Override <xref:System.Windows.Forms.TextBoxBase.DefaultCursor%2A> to configure a default cursor for your control.</span></span> <span data-ttu-id="f5974-223">這比在控制項的建構函式，設定資料指標更有效率，並提供自動支援特定資料指標相關的設計工具函式。</span><span class="sxs-lookup"><span data-stu-id="f5974-223">This is more efficient than setting the cursor in the control's constructor, and gives automatic support for certain cursor-related designer functions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultSize">
      <MemberSignature Language="C#" Value="protected override System.Drawing.Size DefaultSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size DefaultSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.DefaultSize" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DefaultSize As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Drawing::Size DefaultSize { System::Drawing::Size get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultSize : System.Drawing.Size" Usage="System.Windows.Forms.TextBoxBase.DefaultSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f5974-224">取得控制項的預設大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-224">Gets the default size of the control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f5974-225">控制項的預設 <see cref="T:System.Drawing.Size" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-225">The default <see cref="T:System.Drawing.Size" /> of the control.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.Control.DefaultSize" />
      </Docs>
    </Member>
    <Member MemberName="DeselectAll">
      <MemberSignature Language="C#" Value="public void DeselectAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DeselectAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.DeselectAll" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeselectAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeselectAll();" />
      <MemberSignature Language="F#" Value="member this.DeselectAll : unit -&gt; unit" Usage="textBoxBase.DeselectAll " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f5974-226">指定 <see cref="P:System.Windows.Forms.TextBoxBase.SelectionLength" /> 屬性的值為零，使得控制項中不會選取任何字元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-226">Specifies that the value of the <see cref="P:System.Windows.Forms.TextBoxBase.SelectionLength" /> property is zero so that no characters are selected in the control.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DoubleBuffered">
      <MemberSignature Language="C#" Value="protected override bool DoubleBuffered { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DoubleBuffered" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.DoubleBuffered" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Property DoubleBuffered As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool DoubleBuffered { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DoubleBuffered : bool with get, set" Usage="System.Windows.Forms.TextBoxBase.DoubleBuffered" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f5974-227">取得或設定值，指出控制項繪製是否在顯示該控制項之前於緩衝區內完成。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-227">Gets or sets a value indicating whether control drawing is done in a buffer before the control is displayed.</span>
          </span>
          <span data-ttu-id="f5974-228">這個屬性與這個類別無關。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-228">This property is not relevant for this class.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f5974-229">
            <see langword="true" /> 表示在控制項上實作雙重緩衝 (Double Buffering)，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-229">
              <see langword="true" /> to implement double buffering on the control; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5974-230">這個屬性與這個類別無關。</span><span class="sxs-lookup"><span data-stu-id="f5974-230">This property is not relevant for this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ForeColor">
      <MemberSignature Language="C#" Value="public override System.Drawing.Color ForeColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color ForeColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.ForeColor" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ForeColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Color ForeColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.ForeColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.TextBoxBase.ForeColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.DispId(-513)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f5974-231">取得或設定控制項的前景色彩。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-231">Gets or sets the foreground color of the control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f5974-232">表示控制項前景色彩的 <see cref="T:System.Drawing.Color" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-232">A <see cref="T:System.Drawing.Color" /> that represents the control's foreground color.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5974-233">您可以使用<xref:System.Windows.Forms.TextBoxBase.ForeColor%2A>屬性來變更以符合您的表單上的其他控制項的文字控制項中文字的色彩。</span><span class="sxs-lookup"><span data-stu-id="f5974-233">You can use the <xref:System.Windows.Forms.TextBoxBase.ForeColor%2A> property to change the color of the text within the control to match the text of other controls on your form.</span></span> <span data-ttu-id="f5974-234">您也可以使用這個屬性來反白顯示特定文字方塊包含無效的值。</span><span class="sxs-lookup"><span data-stu-id="f5974-234">You can also use this property to highlight a specific text box that contains an invalid value.</span></span>  
  
 <span data-ttu-id="f5974-235">若要變更控制項的背景色彩，請使用<xref:System.Windows.Forms.TextBoxBase.BackColor%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="f5974-235">To change the background color of the control, use the <xref:System.Windows.Forms.TextBoxBase.BackColor%2A> property.</span></span> <span data-ttu-id="f5974-236">設定時<xref:System.Windows.Forms.TextBoxBase.ForeColor%2A>屬性的文字控制項，可讓您確認您選擇的色彩不會消失控制項的文字。</span><span class="sxs-lookup"><span data-stu-id="f5974-236">When setting the <xref:System.Windows.Forms.TextBoxBase.ForeColor%2A> property of your text control, ensure that the color you choose does not cause the text of the control to disappear.</span></span> <span data-ttu-id="f5974-237">例如，如果<xref:System.Windows.Forms.TextBoxBase.ForeColor%2A>並<xref:System.Windows.Forms.TextBoxBase.BackColor%2A>屬性都設為`Color.Black`，textbox 控制項內的文字將不會顯示。</span><span class="sxs-lookup"><span data-stu-id="f5974-237">For example, if the <xref:System.Windows.Forms.TextBoxBase.ForeColor%2A> and <xref:System.Windows.Forms.TextBoxBase.BackColor%2A> properties are both set to `Color.Black`, the text within your textbox control will not be visible.</span></span>  
  
 <span data-ttu-id="f5974-238">這個屬性可能比寫 if<xref:System.Windows.Forms.TextBoxBase.ReadOnly%2A>的屬性<xref:System.Windows.Forms.TextBoxBase>設定為`true`。</span><span class="sxs-lookup"><span data-stu-id="f5974-238">This property might be over ridden if the <xref:System.Windows.Forms.TextBoxBase.ReadOnly%2A> property of the <xref:System.Windows.Forms.TextBoxBase> is set to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.BackColor" />
      </Docs>
    </Member>
    <Member MemberName="GetCharFromPosition">
      <MemberSignature Language="C#" Value="public virtual char GetCharFromPosition (System.Drawing.Point pt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance char GetCharFromPosition(valuetype System.Drawing.Point pt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.GetCharFromPosition(System.Drawing.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCharFromPosition (pt As Point) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual char GetCharFromPosition(System::Drawing::Point pt);" />
      <MemberSignature Language="F#" Value="abstract member GetCharFromPosition : System.Drawing.Point -&gt; char&#xA;override this.GetCharFromPosition : System.Drawing.Point -&gt; char" Usage="textBoxBase.GetCharFromPosition pt" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="pt">
          <span data-ttu-id="f5974-239">要從其中尋找最接近字元的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-239">The location from which to seek the nearest character.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f5974-240">擷取最接近控制項內指定位置的字元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-240">Retrieves the character that is closest to the specified location within the control.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f5974-241">在指定位置的字元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-241">The character at the specified location.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5974-242">如果在指定的位置`pt`參數是外部的控制項，第一個字元字串中指定的點最接近的工作區`pt`會傳回。</span><span class="sxs-lookup"><span data-stu-id="f5974-242">If the location specified in the `pt` parameter is outside the client area of the control, the first character of the string closest to the point specified in `pt` is returned.</span></span> <span data-ttu-id="f5974-243">您可以使用這個方法來判斷哪些字元位於接近控制項內的特定位置。</span><span class="sxs-lookup"><span data-stu-id="f5974-243">You can use this method to determine which characters are located near a specific point within the control.</span></span> <span data-ttu-id="f5974-244">您接著可以使用此值，在該位置的文字上執行作業。</span><span class="sxs-lookup"><span data-stu-id="f5974-244">You can then use this value to perform operations on the text at that location.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f5974-245">如果在指定的位置`pt`參數位於右側的控制項，最後一個字元字串中指定的點最接近的工作區`pt`會傳回。</span><span class="sxs-lookup"><span data-stu-id="f5974-245">If the specified location in the `pt` parameter is located on the right side of the client area of the control, the last character of the string closest to the point specified in `pt` is returned.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetCharIndexFromPosition(System.Drawing.Point)" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetLineFromCharIndex(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetPositionFromCharIndex(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetFirstCharIndexFromLine(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetCharIndexFromPosition">
      <MemberSignature Language="C#" Value="public virtual int GetCharIndexFromPosition (System.Drawing.Point pt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetCharIndexFromPosition(valuetype System.Drawing.Point pt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.GetCharIndexFromPosition(System.Drawing.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCharIndexFromPosition (pt As Point) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetCharIndexFromPosition(System::Drawing::Point pt);" />
      <MemberSignature Language="F#" Value="abstract member GetCharIndexFromPosition : System.Drawing.Point -&gt; int&#xA;override this.GetCharIndexFromPosition : System.Drawing.Point -&gt; int" Usage="textBoxBase.GetCharIndexFromPosition pt" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="pt">
          <span data-ttu-id="f5974-246">要搜尋的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-246">The location to search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f5974-247">擷取最接近指定位置之字元的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-247">Retrieves the index of the character nearest to the specified location.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f5974-248">指定位置處的以零為起始的字元索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-248">The zero-based character index at the specified location.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5974-249">這個方法會傳回最接近的位置中指定的字元索引`pt`參數。</span><span class="sxs-lookup"><span data-stu-id="f5974-249">This method returns the character index that is closest to the position specified in the `pt` parameter.</span></span> <span data-ttu-id="f5974-250">字元索引是文字的在控制項中，包含空格的以零為起始索引。</span><span class="sxs-lookup"><span data-stu-id="f5974-250">The character index is a zero-based index of text in the control, including spaces.</span></span> <span data-ttu-id="f5974-251">您可以使用這個方法，以判斷其中文字中的使用者將滑鼠移過將滑鼠座標傳遞給這個方法。</span><span class="sxs-lookup"><span data-stu-id="f5974-251">You can use this method to determine where in the text the user has the mouse over by passing the mouse coordinates to this method.</span></span> <span data-ttu-id="f5974-252">這可以是很有用，如果您想要在使用者將滑鼠指標停留透過某個字在控制項文字中時執行的工作項目。</span><span class="sxs-lookup"><span data-stu-id="f5974-252">This can be useful if you want to perform tasks when the user rests the mouse pointer over a word in the text of the control.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="f5974-253">如果指定的位置不在控制項的用戶端矩形內，或超出控制項中的最後一個字元，則傳回的值會是最後一個字元的索引。</span><span class="sxs-lookup"><span data-stu-id="f5974-253">If the specified location is not within the client rectangle of the control, or is beyond the last character in the control, the return value is the index of the last character.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetCharFromPosition(System.Drawing.Point)" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetLineFromCharIndex(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetPositionFromCharIndex(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetFirstCharIndexFromLine(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetFirstCharIndexFromLine">
      <MemberSignature Language="C#" Value="public int GetFirstCharIndexFromLine (int lineNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetFirstCharIndexFromLine(int32 lineNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.GetFirstCharIndexFromLine(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFirstCharIndexFromLine (lineNumber As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetFirstCharIndexFromLine(int lineNumber);" />
      <MemberSignature Language="F#" Value="member this.GetFirstCharIndexFromLine : int -&gt; int" Usage="textBoxBase.GetFirstCharIndexFromLine lineNumber" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lineNumber" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="lineNumber">
          <span data-ttu-id="f5974-254">要取得其第一個字元之索引的字行。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-254">The line for which to get the index of its first character.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f5974-255">擷取指定行第一個字元的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-255">Retrieves the index of the first character of a given line.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f5974-256">指定行中第一個字元的以零起始的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-256">The zero-based index of the first character in the specified line.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5974-257">[文字] 方塊中的行號從零開始。</span><span class="sxs-lookup"><span data-stu-id="f5974-257">Line numbering in the text box starts at zero.</span></span> <span data-ttu-id="f5974-258">如果`lineNumber`參數會大於在文字方塊中，最後一行<xref:System.Windows.Forms.TextBoxBase.GetFirstCharIndexFromLine%2A>會傳回-1。</span><span class="sxs-lookup"><span data-stu-id="f5974-258">If the `lineNumber` parameter is greater than the last line in the text box, <xref:System.Windows.Forms.TextBoxBase.GetFirstCharIndexFromLine%2A> returns -1.</span></span>  
  
 <span data-ttu-id="f5974-259"><xref:System.Windows.Forms.TextBoxBase.GetFirstCharIndexFromLine%2A> 傳回第一個字元索引之實體的線條。</span><span class="sxs-lookup"><span data-stu-id="f5974-259"><xref:System.Windows.Forms.TextBoxBase.GetFirstCharIndexFromLine%2A> returns the first character index of a physical line.</span></span> <span data-ttu-id="f5974-260">實際的電話線已顯示的行，而不是指派的行。</span><span class="sxs-lookup"><span data-stu-id="f5974-260">The physical line is the displayed line, not the assigned line.</span></span> <span data-ttu-id="f5974-261">顯示的行數可能會大於使用指派的行，因為自動換行數。</span><span class="sxs-lookup"><span data-stu-id="f5974-261">The number of displayed lines can be greater than the number of assigned lines due to word wrap.</span></span> <span data-ttu-id="f5974-262">比方說，如果您指派至兩個長行<xref:System.Windows.Forms.RichTextBox>控制項，並將<xref:System.Windows.Forms.TextBoxBase.Multiline%2A>和<xref:System.Windows.Forms.TextBoxBase.WordWrap%2A>到`true`，長時間指派的並列產生四個實體 （或顯示行）。</span><span class="sxs-lookup"><span data-stu-id="f5974-262">For example, if you assign two long lines to a <xref:System.Windows.Forms.RichTextBox> control and set <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> and <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> to `true`, the two long assigned lines result in four physical (or displayed lines).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f5974-263">
            <paramref name="lineNumber" /> 參數的值小於零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-263">The value of the <paramref name="lineNumber" /> parameter is less than zero.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetCharIndexFromPosition(System.Drawing.Point)" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetLineFromCharIndex(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetPositionFromCharIndex(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetCharFromPosition(System.Drawing.Point)" />
      </Docs>
    </Member>
    <Member MemberName="GetFirstCharIndexOfCurrentLine">
      <MemberSignature Language="C#" Value="public int GetFirstCharIndexOfCurrentLine ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetFirstCharIndexOfCurrentLine() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.GetFirstCharIndexOfCurrentLine" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFirstCharIndexOfCurrentLine () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetFirstCharIndexOfCurrentLine();" />
      <MemberSignature Language="F#" Value="member this.GetFirstCharIndexOfCurrentLine : unit -&gt; int" Usage="textBoxBase.GetFirstCharIndexOfCurrentLine " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f5974-264">擷取目前這行第一個字元的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-264">Retrieves the index of the first character of the current line.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f5974-265">目前字行中以零為起始的字元索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-265">The zero-based character index in the current line.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLineFromCharIndex">
      <MemberSignature Language="C#" Value="public virtual int GetLineFromCharIndex (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetLineFromCharIndex(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.GetLineFromCharIndex(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetLineFromCharIndex (index As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetLineFromCharIndex(int index);" />
      <MemberSignature Language="F#" Value="abstract member GetLineFromCharIndex : int -&gt; int&#xA;override this.GetLineFromCharIndex : int -&gt; int" Usage="textBoxBase.GetLineFromCharIndex index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="f5974-266">要搜尋的字元索引位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-266">The character index position to search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f5974-267">擷取控制項文字內指定字元位置的行號。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-267">Retrieves the line number from the specified character position within the text of the control.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f5974-268">字元索引所在處的以零為起始的行號。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-268">The zero-based line number in which the character index is located.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5974-269">這個方法可讓您判斷中指定的字元索引為基礎的行號`index`方法的參數。</span><span class="sxs-lookup"><span data-stu-id="f5974-269">This method enables you to determine the line number based on the character index specified in the `index` parameter of the method.</span></span> <span data-ttu-id="f5974-270">控制項中文字的第一行會傳回值為零。</span><span class="sxs-lookup"><span data-stu-id="f5974-270">The first line of text in the control returns the value zero.</span></span> <span data-ttu-id="f5974-271"><xref:System.Windows.Forms.TextBoxBase.GetLineFromCharIndex%2A>方法傳回的實體的行號索引的字元位於控制項。</span><span class="sxs-lookup"><span data-stu-id="f5974-271">The <xref:System.Windows.Forms.TextBoxBase.GetLineFromCharIndex%2A> method returns the physical line number where the indexed character is located within the control.</span></span> <span data-ttu-id="f5974-272">例如，如果第一個邏輯程式敘述行中的文字部分控制項換行至下一行，<xref:System.Windows.Forms.TextBoxBase.GetLineFromCharIndex%2A>方法會傳回 1，如果第二個實際的電話線已包裝的指定的字元索引處的字元。</span><span class="sxs-lookup"><span data-stu-id="f5974-272">For example, if a portion of the first logical line of text in the control wraps to the next line, the <xref:System.Windows.Forms.TextBoxBase.GetLineFromCharIndex%2A> method returns 1 if the character at the specified character index has wrapped to the second physical line.</span></span> <span data-ttu-id="f5974-273">如果<xref:System.Windows.Forms.TextBoxBase.WordWrap%2A>設為`false`、 沒有部分的行換行至下一步，而方法會傳回 0，指定的字元索引。</span><span class="sxs-lookup"><span data-stu-id="f5974-273">If <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> is set to `false`, no portion of the line wraps to the next, and the method returns 0 for the specified character index.</span></span> <span data-ttu-id="f5974-274">您可以使用這個方法來判斷哪些行特定的字元索引位於內。</span><span class="sxs-lookup"><span data-stu-id="f5974-274">You can use this method to determine which line a specific character index is located within.</span></span> <span data-ttu-id="f5974-275">例如，在呼叫之後<xref:System.Windows.Forms.RichTextBox.Find%2A>方法來搜尋文字，您可以取得字元索引，要找到搜尋結果。</span><span class="sxs-lookup"><span data-stu-id="f5974-275">For example, after calling the <xref:System.Windows.Forms.RichTextBox.Find%2A> method to search for text, you can obtain the character index to where the search results are found.</span></span> <span data-ttu-id="f5974-276">您可以呼叫這個方法所傳回的字元索引與<xref:System.Windows.Forms.RichTextBox.Find%2A>找不到方法，以判斷哪一行文字。</span><span class="sxs-lookup"><span data-stu-id="f5974-276">You can call this method with the character index returned by the <xref:System.Windows.Forms.RichTextBox.Find%2A> method to determine which line the word was found.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f5974-277">如果在指定的字元索引`index`參數已超出可用的控制項中包含的程式行數目，會傳回最後一個行號。</span><span class="sxs-lookup"><span data-stu-id="f5974-277">If the character index specified in the `index` parameter is beyond the available number of lines contained within the control, the last line number is returned.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetCharIndexFromPosition(System.Drawing.Point)" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetCharFromPosition(System.Drawing.Point)" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetPositionFromCharIndex(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetFirstCharIndexFromLine(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetPositionFromCharIndex">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.Point GetPositionFromCharIndex (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Drawing.Point GetPositionFromCharIndex(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.GetPositionFromCharIndex(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPositionFromCharIndex (index As Integer) As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Drawing::Point GetPositionFromCharIndex(int index);" />
      <MemberSignature Language="F#" Value="abstract member GetPositionFromCharIndex : int -&gt; System.Drawing.Point&#xA;override this.GetPositionFromCharIndex : int -&gt; System.Drawing.Point" Usage="textBoxBase.GetPositionFromCharIndex index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="f5974-278">要擷取位置的字元索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-278">The index of the character for which to retrieve the location.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f5974-279">擷取控制項內指定之字元索引的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-279">Retrieves the location within the control at the specified character index.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f5974-280">控制項之用戶端矩形內指定字元的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-280">The location of the specified character within the client rectangle of the control.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5974-281">這個方法可讓您判斷在控制項中特定的字元索引所在位置。</span><span class="sxs-lookup"><span data-stu-id="f5974-281">This method enables you to determine where in the control a specific character index is located.</span></span> <span data-ttu-id="f5974-282">您可以使用這個方法的工作，例如在控制項中顯示快顯功能表項目或說明資訊的單字。</span><span class="sxs-lookup"><span data-stu-id="f5974-282">You can use this method for such tasks as displaying shortcut menu items or help information for a word in the control.</span></span> <span data-ttu-id="f5974-283">比方說，如果您想要向使用者顯示的功能表選項，當使用者以滑鼠右鍵按一下某個字在控制項中，可以使用這個方法會決定以適當地顯示文字的位置<xref:System.Windows.Forms.ContextMenu>控制項。</span><span class="sxs-lookup"><span data-stu-id="f5974-283">For example, if you wanted to display a menu of options to the user when the user right clicks on a word in the control, you can use this method to determine the position of the word to properly display a <xref:System.Windows.Forms.ContextMenu> control.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetCharIndexFromPosition(System.Drawing.Point)" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetLineFromCharIndex(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetCharFromPosition(System.Drawing.Point)" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetFirstCharIndexFromLine(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="HideSelection">
      <MemberSignature Language="C#" Value="public bool HideSelection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HideSelection" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.HideSelection" />
      <MemberSignature Language="VB.NET" Value="Public Property HideSelection As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HideSelection { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.HideSelection : bool with get, set" Usage="System.Windows.Forms.TextBoxBase.HideSelection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f5974-284">取得或設定值，指出當控制項遺失駐點時，這個值會表示文字方塊控制項中選取的文字是否還是會以反白顯示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-284">Gets or sets a value indicating whether the selected text in the text box control remains highlighted when the control loses focus.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f5974-285">如果文字方塊控制項遺失駐點時，選取的文字不會以反白顯示，則為 <see langword="true" />，如果文字方塊控制項遺失駐點時，選取的文字還是以反白顯示，則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-285">
              <see langword="true" /> if the selected text does not appear highlighted when the text box control loses focus; <see langword="false" />, if the selected text remains highlighted when the text box control loses focus.</span>
          </span>
          <span data-ttu-id="f5974-286">預設值為 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-286">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5974-287">您可以使用這個屬性來保留文字，以反白顯示的文字方塊控制項而另一個表單或對話方塊具有焦點，例如拼字檢查程式對話方塊。</span><span class="sxs-lookup"><span data-stu-id="f5974-287">You can use this property to keep text highlighted in a text box control while another form or a dialog box has focus, such as a spelling checker dialog box.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f5974-288">下列程式碼範例示範如何使用<xref:System.Windows.Forms.TextBoxBase.HideSelection%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="f5974-288">The following code example demonstrates how to use the <xref:System.Windows.Forms.TextBoxBase.HideSelection%2A> property.</span></span> <span data-ttu-id="f5974-289">若要執行此範例，請將下列的程式碼貼在表單中。</span><span class="sxs-lookup"><span data-stu-id="f5974-289">To run the example, paste the following code in a form.</span></span> <span data-ttu-id="f5974-290">呼叫`InitializeTextBox`表單的建構函式中的方法或`Load`方法。</span><span class="sxs-lookup"><span data-stu-id="f5974-290">Call the `InitializeTextBox` method in the form's constructor or `Load` method.</span></span>  
  
 [!code-cpp[System.Windows.Forms.TextBoxBaseScrolling#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.TextBoxBaseScrolling/CPP/form1.cpp#3)]
 [!code-csharp[System.Windows.Forms.TextBoxBaseScrolling#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TextBoxBaseScrolling/CS/form1.cs#3)]
 [!code-vb[System.Windows.Forms.TextBoxBaseScrolling#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TextBoxBaseScrolling/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HideSelectionChanged">
      <MemberSignature Language="C#" Value="public event EventHandler HideSelectionChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler HideSelectionChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TextBoxBase.HideSelectionChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event HideSelectionChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ HideSelectionChanged;" />
      <MemberSignature Language="F#" Value="member this.HideSelectionChanged : EventHandler " Usage="member this.HideSelectionChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f5974-291">發生於 <see cref="P:System.Windows.Forms.TextBoxBase.HideSelection" /> 屬性的值已變更時。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-291">Occurs when the value of the <see cref="P:System.Windows.Forms.TextBoxBase.HideSelection" /> property has changed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5974-292">如需如何處理事件的詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="f5974-292">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f5974-293">下列程式碼範例示範如何使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="f5974-293">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="f5974-294">在範例中，事件處理常式會報告一次<xref:System.Windows.Forms.TextBoxBase.HideSelectionChanged>事件。</span><span class="sxs-lookup"><span data-stu-id="f5974-294">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.TextBoxBase.HideSelectionChanged> event.</span></span> <span data-ttu-id="f5974-295">此報表可協助您了解事件發生的時機，並可協助您偵錯。</span><span class="sxs-lookup"><span data-stu-id="f5974-295">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="f5974-296">若要報告多個事件或事件經常發生，請考慮更換<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>具有<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>或將訊息附加到多行<xref:System.Windows.Forms.TextBox>。</span><span class="sxs-lookup"><span data-stu-id="f5974-296">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="f5974-297">若要執行範例程式碼，將它貼至專案，其中包含繼承自類型的執行個體<xref:System.Windows.Forms.TextBoxBase>，這類<xref:System.Windows.Forms.TextBox>或<xref:System.Windows.Forms.TextBoxBase>。</span><span class="sxs-lookup"><span data-stu-id="f5974-297">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.TextBoxBase>, such as a <xref:System.Windows.Forms.TextBox> or <xref:System.Windows.Forms.TextBoxBase>.</span></span> <span data-ttu-id="f5974-298">然後將其命名執行個體`TextBoxBase1`，並確保與關聯的事件處理常式<xref:System.Windows.Forms.TextBoxBase.HideSelectionChanged>事件。</span><span class="sxs-lookup"><span data-stu-id="f5974-298">Then name the instance `TextBoxBase1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.TextBoxBase.HideSelectionChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#245](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#245)]
 [!code-vb[System.Windows.Forms.EventExamples#245](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#245)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.HideSelection" />
      </Docs>
    </Member>
    <Member MemberName="ImeModeBase">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.ImeMode ImeModeBase { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ImeMode ImeModeBase" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.ImeModeBase" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Property ImeModeBase As ImeMode" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Windows::Forms::ImeMode ImeModeBase { System::Windows::Forms::ImeMode get(); void set(System::Windows::Forms::ImeMode value); };" />
      <MemberSignature Language="F#" Value="member this.ImeModeBase : System.Windows.Forms.ImeMode with get, set" Usage="System.Windows.Forms.TextBoxBase.ImeModeBase" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ImeMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f5974-299">取得或設定控制項的輸入法 (IME) 模式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-299">Gets or sets the Input Method Editor (IME) mode of a control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f5974-300">控制項的 IME 模式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-300">The IME mode of the control.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.Control.ImeMode" />
      </Docs>
    </Member>
    <Member MemberName="IsInputKey">
      <MemberSignature Language="C#" Value="protected override bool IsInputKey (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool IsInputKey(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.IsInputKey(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function IsInputKey (keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool IsInputKey(System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="override this.IsInputKey : System.Windows.Forms.Keys -&gt; bool" Usage="textBoxBase.IsInputKey keyData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="keyData">
          <span data-ttu-id="f5974-301">其中一個 Keys 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-301">One of the Keys value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f5974-302">判斷指定的按鍵是輸入按鍵還是需要前置處理的特殊按鍵。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-302">Determines whether the specified key is an input key or a special key that requires preprocessing.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f5974-303">如果指定的按鍵是輸入按鍵，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-303">
              <see langword="true" /> if the specified key is an input key; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5974-304"><xref:System.Windows.Forms.TextBoxBase.IsInputKey%2A>方法會傳回`true`當`keyData`參數包含<xref:System.Windows.Forms.Keys.Tab>值，而<xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A>屬性是`true`。</span><span class="sxs-lookup"><span data-stu-id="f5974-304">The <xref:System.Windows.Forms.TextBoxBase.IsInputKey%2A> method returns `true` when the `keyData` parameter includes the <xref:System.Windows.Forms.Keys.Tab> value and the <xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A> property is `true`.</span></span> <span data-ttu-id="f5974-305"><xref:System.Windows.Forms.TextBoxBase.IsInputKey%2A> 會傳回`false`如果`keyData`同時包含<xref:System.Windows.Forms.Keys.Tab>和<xref:System.Windows.Forms.Keys.Control>。</span><span class="sxs-lookup"><span data-stu-id="f5974-305"><xref:System.Windows.Forms.TextBoxBase.IsInputKey%2A> returns `false` if `keyData` contains both <xref:System.Windows.Forms.Keys.Tab> and <xref:System.Windows.Forms.Keys.Control>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Lines">
      <MemberSignature Language="C#" Value="public string[] Lines { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] Lines" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.Lines" />
      <MemberSignature Language="VB.NET" Value="Public Property Lines As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ Lines { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Lines : string[] with get, set" Usage="System.Windows.Forms.TextBoxBase.Lines" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.StringArrayEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.StringArrayEditor, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.StringArrayEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f5974-306">取得或設定文字方塊控制項中的文字行數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-306">Gets or sets the lines of text in a text box control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f5974-307">字串陣列，包含文字方塊控制項中的文字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-307">An array of strings that contains the text in a text box control.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5974-308">陣列中的每個項目會變成文字方塊控制項中的文字行。</span><span class="sxs-lookup"><span data-stu-id="f5974-308">Each element in the array becomes a line of text in the text box control.</span></span> <span data-ttu-id="f5974-309">如果<xref:System.Windows.Forms.TextBoxBase.Multiline%2A>的文字方塊控制項的屬性設定為`true`和新行字元出現在文字、 新行字元的文字加入陣列中的新項目，並顯示在不同行上。</span><span class="sxs-lookup"><span data-stu-id="f5974-309">If the <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> property of the text box control is set to `true` and a newline character appears in the text, the text following the newline character is added to a new element in the array and displayed on a separate line.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f5974-310">根據預設，線條的集合是唯讀複本中線條的<xref:System.Windows.Forms.TextBox>。</span><span class="sxs-lookup"><span data-stu-id="f5974-310">By default, the collection of lines is a read-only copy of the lines in the <xref:System.Windows.Forms.TextBox>.</span></span> <span data-ttu-id="f5974-311">若要取得可寫入線條的集合，使用程式碼如下所示： `textBox1.Lines = new string[] { "abcd" };`</span><span class="sxs-lookup"><span data-stu-id="f5974-311">To get a writable collection of lines, use code similar to the following: `textBox1.Lines = new string[] { "abcd" };`</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f5974-312">下列程式碼範例會使用<xref:System.Windows.Forms.TextBox>的衍生類別，來擷取多行文字方塊控制項中的所有文字字串，並顯示使用<xref:System.Diagnostics.Debug.WriteLine%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="f5974-312">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class, to extract all strings of text from a multiline text box control and displays them using the <xref:System.Diagnostics.Debug.WriteLine%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="f5974-313">這個範例需要<xref:System.Windows.Forms.TextBox>建立的控制項，名為`textBox1`，而且它有已填入每一行文字。</span><span class="sxs-lookup"><span data-stu-id="f5974-313">This example requires that a <xref:System.Windows.Forms.TextBox> control has been created, named `textBox1`, and that it has been filled with lines of text.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.Lines Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.Lines Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.Lines Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.Lines Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.Lines Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.Lines Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.Text" />
      </Docs>
    </Member>
    <Member MemberName="MaxLength">
      <MemberSignature Language="C#" Value="public virtual int MaxLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxLength" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.MaxLength" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property MaxLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int MaxLength { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxLength : int with get, set" Usage="System.Windows.Forms.TextBoxBase.MaxLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(32767)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f5974-314">取得或設定使用者能夠輸入或貼入文字方塊控制項中的最大字元數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-314">Gets or sets the maximum number of characters the user can type or paste into the text box control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f5974-315">可以輸入控制項中的字元數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-315">The number of characters that can be entered into the control.</span>
          </span>
          <span data-ttu-id="f5974-316">預設值為 32767。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-316">The default is 32767.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5974-317">您可以使用這個屬性，來限制在控制項中輸入的值，例如郵遞區號和電話號碼的文字的長度，或限制輸入資料時要在資料庫中輸入文字的長度。</span><span class="sxs-lookup"><span data-stu-id="f5974-317">You can use this property to restrict the length of text entered in the control for values such as postal codes and telephone numbers, or to restrict the length of text entered when the data is to be entered in a database.</span></span> <span data-ttu-id="f5974-318">您可以限制的文字輸入控制項，以在資料庫中的對應欄位的最大長度。</span><span class="sxs-lookup"><span data-stu-id="f5974-318">You can limit the text entered into the control to the maximum length of the corresponding field in the database.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f5974-319">在程式碼中，您可以設定的值<xref:System.Windows.Forms.TextBoxBase.Text%2A>屬性設為大於所指定之值的長度值<xref:System.Windows.Forms.TextBoxBase.MaxLength%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="f5974-319">In code, you can set the value of the <xref:System.Windows.Forms.TextBoxBase.Text%2A> property to a value that has a length greater than the value specified by the <xref:System.Windows.Forms.TextBoxBase.MaxLength%2A> property.</span></span> <span data-ttu-id="f5974-320">這個屬性只會影響文字輸入控制項，在執行階段。</span><span class="sxs-lookup"><span data-stu-id="f5974-320">This property only affects text entered into the control at run time.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f5974-321">下列程式碼範例會使用衍生的類別中， <xref:System.Windows.Forms.TextBox>，以建立用來接受密碼的文字方塊。</span><span class="sxs-lookup"><span data-stu-id="f5974-321">The following code example uses the derived class, <xref:System.Windows.Forms.TextBox>, to create a text box that is used to accept a password.</span></span> <span data-ttu-id="f5974-322">這個範例會使用<xref:System.Windows.Forms.TextBox.CharacterCasing%2A>將所有字元都變更的屬性型別為大寫，<xref:System.Windows.Forms.TextBoxBase.MaxLength%2A>將密碼長度限制為八個字元的屬性。</span><span class="sxs-lookup"><span data-stu-id="f5974-322">This example uses the <xref:System.Windows.Forms.TextBox.CharacterCasing%2A> property to change all characters typed to uppercase and the <xref:System.Windows.Forms.TextBoxBase.MaxLength%2A> property to restrict the password length to eight characters.</span></span> <span data-ttu-id="f5974-323">此範例也會使用<xref:System.Windows.Forms.TextBox.TextAlign%2A>置中的密碼屬性<xref:System.Windows.Forms.TextBox>控制項。</span><span class="sxs-lookup"><span data-stu-id="f5974-323">This example also uses the <xref:System.Windows.Forms.TextBox.TextAlign%2A> property to center the password in the <xref:System.Windows.Forms.TextBox> control.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.MaxLength Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.MaxLength Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.MaxLength Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.MaxLength Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.MaxLength Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.MaxLength Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f5974-324">指派給屬性的值小於 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-324">The value assigned to the property is less than 0.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Modified">
      <MemberSignature Language="C#" Value="public bool Modified { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Modified" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.Modified" />
      <MemberSignature Language="VB.NET" Value="Public Property Modified As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Modified { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Modified : bool with get, set" Usage="System.Windows.Forms.TextBoxBase.Modified" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f5974-325">取得或設定值，指出在建立控制項或者上次設定其內容後，文字方塊控制項被使用者修改過。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-325">Gets or sets a value that indicates that the text box control has been modified by the user since the control was created or its contents were last set.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f5974-326">如果控制項的內容已修改過，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-326">
              <see langword="true" /> if the control's contents have been modified; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="f5974-327">預設值為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-327">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5974-328">您可以使用這個屬性來判斷使用者是否已修改文字方塊控制項的內容。</span><span class="sxs-lookup"><span data-stu-id="f5974-328">You can use this property to determine if the user has modified the contents of the text box control.</span></span> <span data-ttu-id="f5974-329">您也可以設定這個屬性來表示，已變更文字方塊控制項的應用程式的程式碼中。</span><span class="sxs-lookup"><span data-stu-id="f5974-329">You can also set this property in code to indicate that changes were made to the text box control by the application.</span></span> <span data-ttu-id="f5974-330">這個屬性可用的驗證和資料儲存方法來判斷如果文字方塊控制項中有任何變更，因此可以驗證或儲存變更的內容。</span><span class="sxs-lookup"><span data-stu-id="f5974-330">This property can be used by validation and data-saving methods to determine if changes were made in a text box control so the changed contents can be validated or saved.</span></span>  
  
 <span data-ttu-id="f5974-331">如果您變更<xref:System.Windows.Forms.TextBoxBase.Text%2A>屬性以程式設計方式<xref:System.Windows.Forms.TextBoxBase.Modified%2A>屬性還原成`false`。</span><span class="sxs-lookup"><span data-stu-id="f5974-331">If you change the <xref:System.Windows.Forms.TextBoxBase.Text%2A> property programmatically, the <xref:System.Windows.Forms.TextBoxBase.Modified%2A> property reverts to `false`.</span></span> <span data-ttu-id="f5974-332">這不會引發<xref:System.Windows.Forms.TextBoxBase.ModifiedChanged>事件。</span><span class="sxs-lookup"><span data-stu-id="f5974-332">This does not raise the <xref:System.Windows.Forms.TextBoxBase.ModifiedChanged> event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f5974-333">下列程式碼範例會使用<xref:System.Windows.Forms.Control.TextChanged>事件<xref:System.Windows.Forms.TextBox>的衍生類別，以判斷的內容<xref:System.Windows.Forms.TextBox>控制項已變更，因為控制項已填入資料。</span><span class="sxs-lookup"><span data-stu-id="f5974-333">The following code example uses the <xref:System.Windows.Forms.Control.TextChanged> event for a <xref:System.Windows.Forms.TextBox>, a derived class, to determine if the contents of the <xref:System.Windows.Forms.TextBox> control have changed since the control was filled with data.</span></span> <span data-ttu-id="f5974-334">此範例會使用字串來儲存控制項的原始內容，並與的內容比較<xref:System.Windows.Forms.TextBox>來判斷是否已變更內容。</span><span class="sxs-lookup"><span data-stu-id="f5974-334">The example uses a string to store the original contents of the control and compares it against the contents of the <xref:System.Windows.Forms.TextBox> to determine if the contents have changed.</span></span> <span data-ttu-id="f5974-335">如果內容已變更，<xref:System.Windows.Forms.TextBoxBase.Modified%2A>屬性設定為`true`。</span><span class="sxs-lookup"><span data-stu-id="f5974-335">If the contents have changed, the <xref:System.Windows.Forms.TextBoxBase.Modified%2A> property is set to `true`.</span></span> <span data-ttu-id="f5974-336">否則，它會重設，為`false`。</span><span class="sxs-lookup"><span data-stu-id="f5974-336">Otherwise, it is reset to `false`.</span></span> <span data-ttu-id="f5974-337">這個範例需要<xref:System.Windows.Forms.TextBox>控制項，名為`textBox1`已建立且`String`名為變數`originalText`已建立來儲存的原始文字<xref:System.Windows.Forms.TextBox>控制項。</span><span class="sxs-lookup"><span data-stu-id="f5974-337">This example requires that a <xref:System.Windows.Forms.TextBox> control named `textBox1` has been created and that a `String` variable named `originalText` has been created to store the original text for the <xref:System.Windows.Forms.TextBox> control.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.Modified Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.Modified Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.Modified Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.Modified Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.Modified Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.Modified Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ModifiedChanged">
      <MemberSignature Language="C#" Value="public event EventHandler ModifiedChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ModifiedChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TextBoxBase.ModifiedChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ModifiedChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ModifiedChanged;" />
      <MemberSignature Language="F#" Value="member this.ModifiedChanged : EventHandler " Usage="member this.ModifiedChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f5974-338">發生於 <see cref="P:System.Windows.Forms.TextBoxBase.Modified" /> 屬性的值已變更時。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-338">Occurs when the value of the <see cref="P:System.Windows.Forms.TextBoxBase.Modified" /> property has changed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5974-339">如果您變更<xref:System.Windows.Forms.TextBoxBase.Text%2A>屬性以程式設計方式<xref:System.Windows.Forms.TextBoxBase.Modified%2A>屬性還原成`false`。</span><span class="sxs-lookup"><span data-stu-id="f5974-339">If you change the <xref:System.Windows.Forms.TextBoxBase.Text%2A> property programmatically, the <xref:System.Windows.Forms.TextBoxBase.Modified%2A> property reverts to `false`.</span></span> <span data-ttu-id="f5974-340">這不會引發<xref:System.Windows.Forms.TextBoxBase.ModifiedChanged>事件。</span><span class="sxs-lookup"><span data-stu-id="f5974-340">This does not raise the <xref:System.Windows.Forms.TextBoxBase.ModifiedChanged> event.</span></span>  
  
 <span data-ttu-id="f5974-341">如需如何處理事件的詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="f5974-341">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f5974-342">下列程式碼範例示範如何使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="f5974-342">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="f5974-343">在範例中，事件處理常式會報告一次<xref:System.Windows.Forms.TextBoxBase.ModifiedChanged>事件。</span><span class="sxs-lookup"><span data-stu-id="f5974-343">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.TextBoxBase.ModifiedChanged> event.</span></span> <span data-ttu-id="f5974-344">此報表可協助您了解事件發生的時機，並可協助您偵錯。</span><span class="sxs-lookup"><span data-stu-id="f5974-344">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="f5974-345">若要報告多個事件或事件經常發生，請考慮更換<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>具有<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>或將訊息附加到多行<xref:System.Windows.Forms.TextBox>。</span><span class="sxs-lookup"><span data-stu-id="f5974-345">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="f5974-346">若要執行範例程式碼，將它貼至專案，其中包含繼承自類型的執行個體<xref:System.Windows.Forms.TextBoxBase>，這類<xref:System.Windows.Forms.TextBox>或<xref:System.Windows.Forms.TextBoxBase>。</span><span class="sxs-lookup"><span data-stu-id="f5974-346">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.TextBoxBase>, such as a <xref:System.Windows.Forms.TextBox> or <xref:System.Windows.Forms.TextBoxBase>.</span></span> <span data-ttu-id="f5974-347">然後將其命名執行個體`TextBoxBase1`，並確保與關聯的事件處理常式<xref:System.Windows.Forms.TextBoxBase.ModifiedChanged>事件。</span><span class="sxs-lookup"><span data-stu-id="f5974-347">Then name the instance `TextBoxBase1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.TextBoxBase.ModifiedChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#246](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#246)]
 [!code-vb[System.Windows.Forms.EventExamples#246](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#246)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.Modified" />
      </Docs>
    </Member>
    <Member MemberName="MouseClick">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.MouseEventHandler MouseClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.MouseEventHandler MouseClick" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TextBoxBase.MouseClick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseClick As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::MouseEventHandler ^ MouseClick;" />
      <MemberSignature Language="F#" Value="member this.MouseClick : System.Windows.Forms.MouseEventHandler " Usage="member this.MouseClick : System.Windows.Forms.MouseEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Always)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f5974-348">發生於以滑鼠按一下控制項時。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-348">Occurs when the control is clicked by the mouse.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5974-349"><xref:System.Windows.Forms.RichTextBox>控制項不會引發<xref:System.Windows.Forms.TextBoxBase.Click>以滑鼠右鍵按一下事件。</span><span class="sxs-lookup"><span data-stu-id="f5974-349">The <xref:System.Windows.Forms.RichTextBox> control does not raise a <xref:System.Windows.Forms.TextBoxBase.Click> event for right clicks.</span></span> <span data-ttu-id="f5974-350"><xref:System.Windows.Forms.TextBoxBase.MouseClick>事件提供的對等功能。</span><span class="sxs-lookup"><span data-stu-id="f5974-350">The <xref:System.Windows.Forms.TextBoxBase.MouseClick> event provides the functional equivalent.</span></span>  
  
 <span data-ttu-id="f5974-351">如需如何處理事件的詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="f5974-351">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f5974-352">下列程式碼範例示範如何使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="f5974-352">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="f5974-353">在範例中，事件處理常式會報告一次<xref:System.Windows.Forms.TextBoxBase.MouseClick>事件。</span><span class="sxs-lookup"><span data-stu-id="f5974-353">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.TextBoxBase.MouseClick> event.</span></span> <span data-ttu-id="f5974-354">此報表可協助您了解事件發生的時機，並可協助您偵錯。</span><span class="sxs-lookup"><span data-stu-id="f5974-354">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="f5974-355">若要報告多個事件或事件經常發生，請考慮更換<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>具有<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>或將訊息附加到多行<xref:System.Windows.Forms.TextBox>。</span><span class="sxs-lookup"><span data-stu-id="f5974-355">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="f5974-356">若要執行範例程式碼，將它貼至專案，其中包含繼承自類型的執行個體<xref:System.Windows.Forms.TextBoxBase>，這類<xref:System.Windows.Forms.TextBox>或<xref:System.Windows.Forms.TextBoxBase>。</span><span class="sxs-lookup"><span data-stu-id="f5974-356">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.TextBoxBase>, such as a <xref:System.Windows.Forms.TextBox> or <xref:System.Windows.Forms.TextBoxBase>.</span></span> <span data-ttu-id="f5974-357">然後將其命名執行個體`TextBoxBase1`，並確保與關聯的事件處理常式<xref:System.Windows.Forms.TextBoxBase.MouseClick>事件。</span><span class="sxs-lookup"><span data-stu-id="f5974-357">Then name the instance `TextBoxBase1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.TextBoxBase.MouseClick> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#244](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#244)]
 [!code-vb[System.Windows.Forms.EventExamples#244](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#244)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Multiline">
      <MemberSignature Language="C#" Value="public virtual bool Multiline { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Multiline" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.Multiline" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Multiline As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Multiline { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Multiline : bool with get, set" Usage="System.Windows.Forms.TextBoxBase.Multiline" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f5974-358">取得或設定值，指出這是否為多行文字方塊控制項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-358">Gets or sets a value indicating whether this is a multiline text box control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f5974-359">如果是多行文字方塊控制項，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-359">
              <see langword="true" /> if the control is a multiline text box control; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="f5974-360">預設值為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-360">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5974-361">多行文字方塊，可讓您在控制項中顯示的文字的一行以上。</span><span class="sxs-lookup"><span data-stu-id="f5974-361">A multiline text box allows you to display more than one line of text in the control.</span></span> <span data-ttu-id="f5974-362">如果<xref:System.Windows.Forms.TextBoxBase.WordWrap%2A>屬性設定為`true`，多行文字方塊中輸入的文字換行至下一行中的控制項。</span><span class="sxs-lookup"><span data-stu-id="f5974-362">If the <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> property is set to `true`, text entered into the multiline text box is wrapped to the next line in the control.</span></span> <span data-ttu-id="f5974-363">如果<xref:System.Windows.Forms.TextBoxBase.WordWrap%2A>屬性設定為`false`，文字方塊中輸入多行文字方塊控制項將會顯示在同一行，直到輸入新行字元。</span><span class="sxs-lookup"><span data-stu-id="f5974-363">If the <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> property is set to `false`, text entered into the multiline text box control will be displayed on the same line until a newline character is entered.</span></span>  
  
 <span data-ttu-id="f5974-364">下列可用來當做新行字元：</span><span class="sxs-lookup"><span data-stu-id="f5974-364">The following can be used as newline characters:</span></span>  
  
-   <xref:System.Environment.NewLine%2A?displayProperty=nameWithType>  
  
-   <span data-ttu-id="f5974-365">ControlChars.CrLf</span><span class="sxs-lookup"><span data-stu-id="f5974-365">ControlChars.CrLf</span></span>  
  
-   <span data-ttu-id="f5974-366">vbCrLf (僅限 Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="f5974-366">vbCrLf (Visual Basic only)</span></span>  
  
 <span data-ttu-id="f5974-367">您可以加入文字 方塊中，使用捲軸<xref:System.Windows.Forms.TextBox.ScrollBars%2A>屬性來顯示水平及/或垂直捲軸。</span><span class="sxs-lookup"><span data-stu-id="f5974-367">You can add scroll bars to a text box using the <xref:System.Windows.Forms.TextBox.ScrollBars%2A> property to display horizontal and/or vertical scroll bars.</span></span> <span data-ttu-id="f5974-368">這可讓使用者捲動文字超出控制項的維度。</span><span class="sxs-lookup"><span data-stu-id="f5974-368">This allows the user to scroll through the text that extends beyond the dimensions of the control.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f5974-369">因為預設值<xref:System.Windows.Forms.TextBoxBase.Multiline%2A>屬性是`false`，預設大小<xref:System.Windows.Forms.TextBox>即使您調整大小時，將會根據字型大小<xref:System.Windows.Forms.TextBox>。</span><span class="sxs-lookup"><span data-stu-id="f5974-369">Because the default value of the <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> property is `false`, the default size of a <xref:System.Windows.Forms.TextBox> will be in accordance with the font size even if you resize the <xref:System.Windows.Forms.TextBox>.</span></span> <span data-ttu-id="f5974-370">若要取得一致的大小，為您<xref:System.Windows.Forms.TextBox>，將其<xref:System.Windows.Forms.TextBox.Multiline%2A>屬性設`true`。</span><span class="sxs-lookup"><span data-stu-id="f5974-370">To get a consistent size for your <xref:System.Windows.Forms.TextBox>, set its <xref:System.Windows.Forms.TextBox.Multiline%2A> property to `true`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f5974-371">在日文作業系統中，如果<xref:System.Windows.Forms.TextBoxBase.Multiline%2A>屬性設定為`true`，將<xref:System.Windows.Forms.TextBox.PasswordChar%2A>屬性會顯示密碼，因而會危害系統安全性的文字。</span><span class="sxs-lookup"><span data-stu-id="f5974-371">On Japanese operating systems, if the <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> property is set to `true`, setting the <xref:System.Windows.Forms.TextBox.PasswordChar%2A> property will display the text of the password, thus compromising system security.</span></span> <span data-ttu-id="f5974-372">因此，在日文的作業系統，設定<xref:System.Windows.Forms.TextBoxBase.Multiline%2A>屬性，以`false`如果您將設定<xref:System.Windows.Forms.TextBox.PasswordChar%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="f5974-372">Therefore, on Japanese operating systems, set the <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> property to `false` if you set the <xref:System.Windows.Forms.TextBox.PasswordChar%2A> property.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f5974-373">這個屬性設定為`false`根據預設，所有衍生類別，但不包括<xref:System.Windows.Forms.RichTextBox>控制項。</span><span class="sxs-lookup"><span data-stu-id="f5974-373">This property is set to `false` by default for all derived classes, with the exception of the <xref:System.Windows.Forms.RichTextBox> control.</span></span>  
  
 <span data-ttu-id="f5974-374">針對<xref:System.Windows.Forms.RichTextBox>控制項，<xref:System.Windows.Forms.RichTextBox.Multiline%2A?displayProperty=nameWithType>屬性會影響是否控制項將自動調整大小，，如下所示：</span><span class="sxs-lookup"><span data-stu-id="f5974-374">For a <xref:System.Windows.Forms.RichTextBox> control, the <xref:System.Windows.Forms.RichTextBox.Multiline%2A?displayProperty=nameWithType> property affects whether or not the control will automatically resize, as follows:</span></span>  
  
-   <span data-ttu-id="f5974-375">如果<xref:System.Windows.Forms.RichTextBox.AutoSize%2A?displayProperty=nameWithType>設定為`true`並<xref:System.Windows.Forms.RichTextBox.Multiline%2A?displayProperty=nameWithType>設定為`true`，<xref:System.Windows.Forms.RichTextBox>並不會自動調整大小。</span><span class="sxs-lookup"><span data-stu-id="f5974-375">If <xref:System.Windows.Forms.RichTextBox.AutoSize%2A?displayProperty=nameWithType> is set to `true` and <xref:System.Windows.Forms.RichTextBox.Multiline%2A?displayProperty=nameWithType> is set to `true`, <xref:System.Windows.Forms.RichTextBox> will not automatically resize.</span></span>  
  
-   <span data-ttu-id="f5974-376">如果<xref:System.Windows.Forms.RichTextBox.AutoSize%2A?displayProperty=nameWithType>設定為`true`並<xref:System.Windows.Forms.RichTextBox.Multiline%2A?displayProperty=nameWithType>設定為`false`，<xref:System.Windows.Forms.RichTextBox>將自動調整大小。</span><span class="sxs-lookup"><span data-stu-id="f5974-376">If <xref:System.Windows.Forms.RichTextBox.AutoSize%2A?displayProperty=nameWithType> is set to `true` and <xref:System.Windows.Forms.RichTextBox.Multiline%2A?displayProperty=nameWithType> is set to `false`, <xref:System.Windows.Forms.RichTextBox> will automatically resize.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f5974-377">下列程式碼範例會使用<xref:System.Windows.Forms.TextBox>的衍生類別，以建立多行<xref:System.Windows.Forms.TextBox>具有垂直捲軸控制項。</span><span class="sxs-lookup"><span data-stu-id="f5974-377">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class, to create a multiline <xref:System.Windows.Forms.TextBox> control with vertical scroll bars.</span></span> <span data-ttu-id="f5974-378">此範例也會使用<xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A>， <xref:System.Windows.Forms.TextBox.AcceptsReturn%2A>，和<xref:System.Windows.Forms.TextBoxBase.WordWrap%2A>屬性，使多行文字方塊控制項適用於建立文字文件。</span><span class="sxs-lookup"><span data-stu-id="f5974-378">This example also uses the <xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A>, <xref:System.Windows.Forms.TextBox.AcceptsReturn%2A>, and <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> properties to make the multiline text box control useful for creating text documents.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.AcceptsTab Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.AcceptsTab Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.AcceptsTab Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.AcceptsTab Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.AcceptsTab Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.AcceptsTab Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.Lines" />
        <altmember cref="P:System.Windows.Forms.TextBoxBase.WordWrap" />
        <altmember cref="P:System.Windows.Forms.TextBox.ScrollBars" />
      </Docs>
    </Member>
    <Member MemberName="MultilineChanged">
      <MemberSignature Language="C#" Value="public event EventHandler MultilineChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler MultilineChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TextBoxBase.MultilineChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MultilineChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ MultilineChanged;" />
      <MemberSignature Language="F#" Value="member this.MultilineChanged : EventHandler " Usage="member this.MultilineChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f5974-379">發生於 <see cref="P:System.Windows.Forms.TextBoxBase.Multiline" /> 屬性的值已變更時。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-379">Occurs when the value of the <see cref="P:System.Windows.Forms.TextBoxBase.Multiline" /> property has changed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5974-380">如需如何處理事件的詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="f5974-380">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f5974-381">下列程式碼範例示範如何使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="f5974-381">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="f5974-382">在範例中，事件處理常式會報告一次<xref:System.Windows.Forms.TextBoxBase.MultilineChanged>事件。</span><span class="sxs-lookup"><span data-stu-id="f5974-382">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.TextBoxBase.MultilineChanged> event.</span></span> <span data-ttu-id="f5974-383">此報表可協助您了解事件發生的時機，並可協助您偵錯。</span><span class="sxs-lookup"><span data-stu-id="f5974-383">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="f5974-384">若要報告多個事件或事件經常發生，請考慮更換<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>具有<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>或將訊息附加到多行<xref:System.Windows.Forms.TextBox>。</span><span class="sxs-lookup"><span data-stu-id="f5974-384">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="f5974-385">若要執行範例程式碼，將它貼至專案，其中包含繼承自類型的執行個體<xref:System.Windows.Forms.TextBoxBase>，這類<xref:System.Windows.Forms.TextBox>或<xref:System.Windows.Forms.TextBoxBase>。</span><span class="sxs-lookup"><span data-stu-id="f5974-385">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.TextBoxBase>, such as a <xref:System.Windows.Forms.TextBox> or <xref:System.Windows.Forms.TextBoxBase>.</span></span> <span data-ttu-id="f5974-386">然後將其命名執行個體`TextBoxBase1`，並確保與關聯的事件處理常式<xref:System.Windows.Forms.TextBoxBase.MultilineChanged>事件。</span><span class="sxs-lookup"><span data-stu-id="f5974-386">Then name the instance `TextBoxBase1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.TextBoxBase.MultilineChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#247](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#247)]
 [!code-vb[System.Windows.Forms.EventExamples#247](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#247)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.Multiline" />
      </Docs>
    </Member>
    <Member MemberName="OnAcceptsTabChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnAcceptsTabChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAcceptsTabChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.OnAcceptsTabChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAcceptsTabChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAcceptsTabChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnAcceptsTabChanged : EventArgs -&gt; unit&#xA;override this.OnAcceptsTabChanged : EventArgs -&gt; unit" Usage="textBoxBase.OnAcceptsTabChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="f5974-387">包含事件資料的 <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-387">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f5974-388">引發 <see cref="E:System.Windows.Forms.TextBoxBase.AcceptsTabChanged" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-388">Raises the <see cref="E:System.Windows.Forms.TextBoxBase.AcceptsTabChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5974-389">引發事件會透過委派叫用此事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="f5974-389">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="f5974-390">如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="f5974-390">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="f5974-391"><xref:System.Windows.Forms.TextBoxBase.OnAcceptsTabChanged%2A> 方法也允許衍生類別處理事件，而不用附加委派。</span><span class="sxs-lookup"><span data-stu-id="f5974-391">The <xref:System.Windows.Forms.TextBoxBase.OnAcceptsTabChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="f5974-392">這是在衍生類別中處理事件的慣用技巧。</span><span class="sxs-lookup"><span data-stu-id="f5974-392">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="f5974-393">當在衍生類別中覆寫 <see cref="M:System.Windows.Forms.TextBoxBase.OnAcceptsTabChanged(System.EventArgs)" /> 時，請確定呼叫基底類別的 <see cref="M:System.Windows.Forms.TextBoxBase.OnAcceptsTabChanged(System.EventArgs)" /> 方法，使已註冊的委派能接收到事件。</span>
            <span class="sxs-lookup">
              <span data-stu-id="f5974-393">When overriding <see cref="M:System.Windows.Forms.TextBoxBase.OnAcceptsTabChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.TextBoxBase.OnAcceptsTabChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.AcceptsTab" />
        <altmember cref="E:System.Windows.Forms.TextBoxBase.AcceptsTabChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnAutoSizeChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnAutoSizeChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAutoSizeChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.OnAutoSizeChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAutoSizeChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAutoSizeChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnAutoSizeChanged : EventArgs -&gt; unit&#xA;override this.OnAutoSizeChanged : EventArgs -&gt; unit" Usage="textBoxBase.OnAutoSizeChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBorderStyleChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnBorderStyleChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnBorderStyleChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.OnBorderStyleChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnBorderStyleChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnBorderStyleChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnBorderStyleChanged : EventArgs -&gt; unit&#xA;override this.OnBorderStyleChanged : EventArgs -&gt; unit" Usage="textBoxBase.OnBorderStyleChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="f5974-394">包含事件資料的 <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-394">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f5974-395">引發 <see cref="E:System.Windows.Forms.TextBoxBase.BorderStyleChanged" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-395">Raises the <see cref="E:System.Windows.Forms.TextBoxBase.BorderStyleChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5974-396">引發事件會透過委派叫用此事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="f5974-396">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="f5974-397">如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="f5974-397">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="f5974-398"><xref:System.Windows.Forms.TextBoxBase.OnBorderStyleChanged%2A> 方法也允許衍生類別處理事件，而不用附加委派。</span><span class="sxs-lookup"><span data-stu-id="f5974-398">The <xref:System.Windows.Forms.TextBoxBase.OnBorderStyleChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="f5974-399">這是在衍生類別中處理事件的慣用技巧。</span><span class="sxs-lookup"><span data-stu-id="f5974-399">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="f5974-400">當在衍生類別中覆寫 <see cref="M:System.Windows.Forms.TextBoxBase.OnBorderStyleChanged(System.EventArgs)" /> 時，請確定呼叫基底類別的 <see cref="M:System.Windows.Forms.TextBoxBase.OnBorderStyleChanged(System.EventArgs)" /> 方法，使已註冊的委派能接收到事件。</span>
            <span class="sxs-lookup">
              <span data-stu-id="f5974-400">When overriding <see cref="M:System.Windows.Forms.TextBoxBase.OnBorderStyleChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.TextBoxBase.OnBorderStyleChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.BorderStyle" />
        <altmember cref="E:System.Windows.Forms.TextBoxBase.BorderStyleChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnFontChanged">
      <MemberSignature Language="C#" Value="protected override void OnFontChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnFontChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.OnFontChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnFontChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnFontChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnFontChanged : EventArgs -&gt; unit" Usage="textBoxBase.OnFontChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="f5974-401">包含事件資料的 <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-401">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f5974-402">引發 <see cref="E:System.Windows.Forms.Control.FontChanged" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-402">Raises the <see cref="E:System.Windows.Forms.Control.FontChanged" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnFontChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnHandleCreated">
      <MemberSignature Language="C#" Value="protected override void OnHandleCreated (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnHandleCreated(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.OnHandleCreated(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnHandleCreated (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnHandleCreated(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnHandleCreated : EventArgs -&gt; unit" Usage="textBoxBase.OnHandleCreated e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="f5974-403">包含事件資料的 <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-403">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f5974-404">引發 <see cref="E:System.Windows.Forms.Control.HandleCreated" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-404">Raises the <see cref="E:System.Windows.Forms.Control.HandleCreated" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnHandleCreated(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnHandleDestroyed">
      <MemberSignature Language="C#" Value="protected override void OnHandleDestroyed (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnHandleDestroyed(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.OnHandleDestroyed(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnHandleDestroyed (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnHandleDestroyed(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnHandleDestroyed : EventArgs -&gt; unit" Usage="textBoxBase.OnHandleDestroyed e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="f5974-405">包含事件資料的 <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-405">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f5974-406">引發 <see cref="E:System.Windows.Forms.Control.HandleDestroyed" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-406">Raises the <see cref="E:System.Windows.Forms.Control.HandleDestroyed" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnHandleDestroyed(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnHideSelectionChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnHideSelectionChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnHideSelectionChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.OnHideSelectionChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnHideSelectionChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnHideSelectionChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnHideSelectionChanged : EventArgs -&gt; unit&#xA;override this.OnHideSelectionChanged : EventArgs -&gt; unit" Usage="textBoxBase.OnHideSelectionChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="f5974-407">包含事件資料的 <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-407">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f5974-408">引發 <see cref="E:System.Windows.Forms.TextBoxBase.HideSelectionChanged" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-408">Raise the <see cref="E:System.Windows.Forms.TextBoxBase.HideSelectionChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5974-409">引發事件會透過委派叫用此事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="f5974-409">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="f5974-410">如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="f5974-410">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="f5974-411"><xref:System.Windows.Forms.TextBoxBase.OnHideSelectionChanged%2A> 方法也允許衍生類別處理事件，而不用附加委派。</span><span class="sxs-lookup"><span data-stu-id="f5974-411">The <xref:System.Windows.Forms.TextBoxBase.OnHideSelectionChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="f5974-412">這是在衍生類別中處理事件的慣用技巧。</span><span class="sxs-lookup"><span data-stu-id="f5974-412">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="f5974-413">當在衍生類別中覆寫 <see cref="M:System.Windows.Forms.TextBoxBase.OnHideSelectionChanged(System.EventArgs)" /> 時，請確定呼叫基底類別的 <see cref="M:System.Windows.Forms.TextBoxBase.OnHideSelectionChanged(System.EventArgs)" /> 方法，使已註冊的委派能接收到事件。</span>
            <span class="sxs-lookup">
              <span data-stu-id="f5974-413">When overriding <see cref="M:System.Windows.Forms.TextBoxBase.OnHideSelectionChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.TextBoxBase.OnHideSelectionChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.HideSelection" />
        <altmember cref="E:System.Windows.Forms.TextBoxBase.HideSelectionChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnModifiedChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnModifiedChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnModifiedChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.OnModifiedChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnModifiedChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnModifiedChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnModifiedChanged : EventArgs -&gt; unit&#xA;override this.OnModifiedChanged : EventArgs -&gt; unit" Usage="textBoxBase.OnModifiedChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="f5974-414">包含事件資料的 <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-414">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f5974-415">引發 <see cref="E:System.Windows.Forms.TextBoxBase.ModifiedChanged" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-415">Raises the <see cref="E:System.Windows.Forms.TextBoxBase.ModifiedChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5974-416">引發事件會透過委派叫用此事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="f5974-416">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="f5974-417">如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="f5974-417">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="f5974-418"><xref:System.Windows.Forms.TextBoxBase.OnModifiedChanged%2A> 方法也允許衍生類別處理事件，而不用附加委派。</span><span class="sxs-lookup"><span data-stu-id="f5974-418">The <xref:System.Windows.Forms.TextBoxBase.OnModifiedChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="f5974-419">這是在衍生類別中處理事件的慣用技巧。</span><span class="sxs-lookup"><span data-stu-id="f5974-419">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="f5974-420">當在衍生類別中覆寫 <see cref="M:System.Windows.Forms.TextBoxBase.OnModifiedChanged(System.EventArgs)" /> 時，請確定呼叫基底類別的 <see cref="M:System.Windows.Forms.TextBoxBase.OnModifiedChanged(System.EventArgs)" /> 方法，使已註冊的委派能接收到事件。</span>
            <span class="sxs-lookup">
              <span data-stu-id="f5974-420">When overriding <see cref="M:System.Windows.Forms.TextBoxBase.OnModifiedChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.TextBoxBase.OnModifiedChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.Modified" />
        <altmember cref="E:System.Windows.Forms.TextBoxBase.ModifiedChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseUp">
      <MemberSignature Language="C#" Value="protected override void OnMouseUp (System.Windows.Forms.MouseEventArgs mevent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseUp(class System.Windows.Forms.MouseEventArgs mevent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.OnMouseUp(System.Windows.Forms.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseUp (mevent As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseUp(System::Windows::Forms::MouseEventArgs ^ mevent);" />
      <MemberSignature Language="F#" Value="override this.OnMouseUp : System.Windows.Forms.MouseEventArgs -&gt; unit" Usage="textBoxBase.OnMouseUp mevent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mevent" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="mevent">
          <span data-ttu-id="f5974-421">事件資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-421">The event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f5974-422">引發 <see cref="E:System.Windows.Forms.Control.MouseUp" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-422">Raises the <see cref="E:System.Windows.Forms.Control.MouseUp" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMultilineChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnMultilineChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMultilineChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.OnMultilineChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMultilineChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMultilineChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMultilineChanged : EventArgs -&gt; unit&#xA;override this.OnMultilineChanged : EventArgs -&gt; unit" Usage="textBoxBase.OnMultilineChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="f5974-423">包含事件資料的 <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-423">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f5974-424">引發 <see cref="E:System.Windows.Forms.TextBoxBase.MultilineChanged" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-424">Raises the <see cref="E:System.Windows.Forms.TextBoxBase.MultilineChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5974-425">引發事件會透過委派叫用此事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="f5974-425">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="f5974-426">如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="f5974-426">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="f5974-427"><xref:System.Windows.Forms.TextBoxBase.OnMultilineChanged%2A> 方法也允許衍生類別處理事件，而不用附加委派。</span><span class="sxs-lookup"><span data-stu-id="f5974-427">The <xref:System.Windows.Forms.TextBoxBase.OnMultilineChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="f5974-428">這是在衍生類別中處理事件的慣用技巧。</span><span class="sxs-lookup"><span data-stu-id="f5974-428">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="f5974-429">當在衍生類別中覆寫 <see cref="M:System.Windows.Forms.TextBoxBase.OnMultilineChanged(System.EventArgs)" /> 時，請確定呼叫基底類別的 <see cref="M:System.Windows.Forms.TextBoxBase.OnMultilineChanged(System.EventArgs)" /> 方法，使已註冊的委派能接收到事件。</span>
            <span class="sxs-lookup">
              <span data-stu-id="f5974-429">When overriding <see cref="M:System.Windows.Forms.TextBoxBase.OnMultilineChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.TextBoxBase.OnMultilineChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.Multiline" />
        <altmember cref="E:System.Windows.Forms.TextBoxBase.MultilineChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnPaddingChanged">
      <MemberSignature Language="C#" Value="protected override void OnPaddingChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPaddingChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.OnPaddingChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnPaddingChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnPaddingChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPaddingChanged : EventArgs -&gt; unit" Usage="textBoxBase.OnPaddingChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="f5974-430">包含事件資料的 <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-430">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f5974-431">這個方法與這個類別無關。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-431">This method is not relevant for this class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5974-432">這個方法與這個類別無關。</span><span class="sxs-lookup"><span data-stu-id="f5974-432">This method is not relevant for this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnReadOnlyChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnReadOnlyChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnReadOnlyChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.OnReadOnlyChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnReadOnlyChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnReadOnlyChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnReadOnlyChanged : EventArgs -&gt; unit&#xA;override this.OnReadOnlyChanged : EventArgs -&gt; unit" Usage="textBoxBase.OnReadOnlyChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="f5974-433">包含事件資料的 <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-433">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f5974-434">引發 <see cref="E:System.Windows.Forms.TextBoxBase.ReadOnlyChanged" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-434">Raises the <see cref="E:System.Windows.Forms.TextBoxBase.ReadOnlyChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5974-435">引發事件會透過委派叫用此事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="f5974-435">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="f5974-436">如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="f5974-436">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="f5974-437"><xref:System.Windows.Forms.TextBoxBase.OnReadOnlyChanged%2A> 方法也允許衍生類別處理事件，而不用附加委派。</span><span class="sxs-lookup"><span data-stu-id="f5974-437">The <xref:System.Windows.Forms.TextBoxBase.OnReadOnlyChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="f5974-438">這是在衍生類別中處理事件的慣用技巧。</span><span class="sxs-lookup"><span data-stu-id="f5974-438">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="f5974-439">當在衍生類別中覆寫 <see cref="M:System.Windows.Forms.TextBoxBase.OnReadOnlyChanged(System.EventArgs)" /> 時，請確定呼叫基底類別的 <see cref="M:System.Windows.Forms.TextBoxBase.OnReadOnlyChanged(System.EventArgs)" /> 方法，使已註冊的委派能接收到事件。</span>
            <span class="sxs-lookup">
              <span data-stu-id="f5974-439">When overriding <see cref="M:System.Windows.Forms.TextBoxBase.OnReadOnlyChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.TextBoxBase.OnReadOnlyChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.ReadOnly" />
        <altmember cref="E:System.Windows.Forms.TextBoxBase.ReadOnlyChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnTextChanged">
      <MemberSignature Language="C#" Value="protected override void OnTextChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnTextChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.OnTextChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnTextChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnTextChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnTextChanged : EventArgs -&gt; unit" Usage="textBoxBase.OnTextChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="f5974-440">包含事件資料的 <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-440">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f5974-441">引發 <see cref="E:System.Windows.Forms.Control.TextChanged" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-441">Raises the <see cref="E:System.Windows.Forms.Control.TextChanged" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnTextChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="Padding">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Padding Padding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.Padding Padding" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.Padding" />
      <MemberSignature Language="VB.NET" Value="Public Property Padding As Padding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Padding Padding { System::Windows::Forms::Padding get(); void set(System::Windows::Forms::Padding value); };" />
      <MemberSignature Language="F#" Value="member this.Padding : System.Windows.Forms.Padding with get, set" Usage="System.Windows.Forms.TextBoxBase.Padding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Padding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f5974-442">這個屬性與這個類別無關。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-442">This property is not relevant for this class.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f5974-443">
            <see cref="T:System.Windows.Forms.Padding" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-443">A <see cref="T:System.Windows.Forms.Padding" /> value.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5974-444">這個屬性與這個類別無關。</span><span class="sxs-lookup"><span data-stu-id="f5974-444">This property is not relevant for this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PaddingChanged">
      <MemberSignature Language="C#" Value="public event EventHandler PaddingChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PaddingChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TextBoxBase.PaddingChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PaddingChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ PaddingChanged;" />
      <MemberSignature Language="F#" Value="member this.PaddingChanged : EventHandler " Usage="member this.PaddingChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f5974-445">這個事件與這個類別無關。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-445">This event is not relevant for this class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5974-446">這個事件與這個類別無關。</span><span class="sxs-lookup"><span data-stu-id="f5974-446">This event is not relevant for this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Paint">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.PaintEventHandler Paint;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.PaintEventHandler Paint" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TextBoxBase.Paint" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Paint As PaintEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::PaintEventHandler ^ Paint;" />
      <MemberSignature Language="F#" Value="member this.Paint : System.Windows.Forms.PaintEventHandler " Usage="member this.Paint : System.Windows.Forms.PaintEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.PaintEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f5974-447">發生於重繪控制項時。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-447">Occurs when the control is redrawn.</span>
          </span>
          <span data-ttu-id="f5974-448">這個事件與這個類別無關。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-448">This event is not relevant for this class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5974-449">這個事件與這個類別無關。</span><span class="sxs-lookup"><span data-stu-id="f5974-449">This event is not relevant for this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Paste">
      <MemberSignature Language="C#" Value="public void Paste ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Paste() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.Paste" />
      <MemberSignature Language="VB.NET" Value="Public Sub Paste ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Paste();" />
      <MemberSignature Language="F#" Value="member this.Paste : unit -&gt; unit" Usage="textBoxBase.Paste " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f5974-450">以 [剪貼簿] 的內容取代文字方塊中目前的選取範圍。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-450">Replaces the current selection in the text box with the contents of the **Clipboard**.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5974-451"><xref:System.Windows.Forms.TextBoxBase.Paste%2A>方法會只貼上文字控制項如果文字為目前儲存在**剪貼簿**。</span><span class="sxs-lookup"><span data-stu-id="f5974-451">The <xref:System.Windows.Forms.TextBoxBase.Paste%2A> method will only paste text into the control if text is currently stored in the **Clipboard**.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f5974-452">下列程式碼範例使用<xref:System.Windows.Forms.TextBox>，衍生的類別。</span><span class="sxs-lookup"><span data-stu-id="f5974-452">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class.</span></span> <span data-ttu-id="f5974-453">它提供<xref:System.Windows.Forms.MenuItem.Click>事件處理常式<xref:System.Windows.Forms.MenuItem>剪下、 複製、 貼上，並復原作業執行的物件。</span><span class="sxs-lookup"><span data-stu-id="f5974-453">It provides <xref:System.Windows.Forms.MenuItem.Click> event handlers for <xref:System.Windows.Forms.MenuItem> objects that perform Cut, Copy, Paste, and Undo operations.</span></span> <span data-ttu-id="f5974-454">這個範例需要<xref:System.Windows.Forms.TextBox>控制項，名為`textBox1`已建立。</span><span class="sxs-lookup"><span data-stu-id="f5974-454">This example requires that a <xref:System.Windows.Forms.TextBox> control named `textBox1` has been created.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="f5974-455">從讀取**剪貼簿**。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-455">for reading from the **Clipboard**.</span>
          </span>
          <span data-ttu-id="f5974-456">相關聯的列舉型別：<see langword="AllClipboard" />的值<see cref="T:System.Security.Permissions.UIPermissionClipboard" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-456">Associated enumeration: the <see langword="AllClipboard" /> value of <see cref="T:System.Security.Permissions.UIPermissionClipboard" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="PreferredHeight">
      <MemberSignature Language="C#" Value="public int PreferredHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PreferredHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.PreferredHeight" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PreferredHeight As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PreferredHeight { int get(); };" />
      <MemberSignature Language="F#" Value="member this.PreferredHeight : int" Usage="System.Windows.Forms.TextBoxBase.PreferredHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f5974-457">取得文字方塊的慣用高度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-457">Gets the preferred height for a text box.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f5974-458">文字方塊的慣用高度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-458">The preferred height of a text box.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5974-459">這個屬性所傳回的大小根據文字方塊的字型高度和框線樣式。</span><span class="sxs-lookup"><span data-stu-id="f5974-459">The size returned by this property is based on the font height and border style of the text box.</span></span> <span data-ttu-id="f5974-460">您可以使用這個屬性來判斷適當的大小，以確保在控制項中，適當地顯示文字的文字方塊。</span><span class="sxs-lookup"><span data-stu-id="f5974-460">You can use this property to determine the appropriate size of the text box to ensure that text is properly displayed in the control.</span></span> <span data-ttu-id="f5974-461">這個屬性所傳回的值是像素為單位。</span><span class="sxs-lookup"><span data-stu-id="f5974-461">The value returned by this property is in pixels.</span></span>  
  
 <span data-ttu-id="f5974-462">值<xref:System.Windows.Forms.TextBoxBase.PreferredHeight%2A>表示文字方塊中必須有以顯示單一文字行，而不裁剪的上方或下方的文字的最小高度。</span><span class="sxs-lookup"><span data-stu-id="f5974-462">The value of <xref:System.Windows.Forms.TextBoxBase.PreferredHeight%2A> represents the minimum height the text box must have in order to display a single line of text without clipping the text on the top or bottom.</span></span> <span data-ttu-id="f5974-463">此值相當於是否<xref:System.Windows.Forms.TextBoxBase.Multiline%2A>屬性設定為`true`或`false`。</span><span class="sxs-lookup"><span data-stu-id="f5974-463">This value is the same whether the <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> property is set to `true` or `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.AutoSize" />
      </Docs>
    </Member>
    <Member MemberName="ProcessCmdKey">
      <MemberSignature Language="C#" Value="protected override bool ProcessCmdKey (ref System.Windows.Forms.Message msg, System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool ProcessCmdKey(valuetype System.Windows.Forms.Message&amp; msg, valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ProcessCmdKey (ByRef msg As Message, keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool ProcessCmdKey(System::Windows::Forms::Message % msg, System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="override this.ProcessCmdKey :  * System.Windows.Forms.Keys -&gt; bool" Usage="textBoxBase.ProcessCmdKey (msg, keyData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Windows.Forms.Message" RefType="ref" />
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="msg">
          <span data-ttu-id="f5974-464">以傳參考方式傳遞的 <see cref="T:System.Windows.Forms.Message" />，它代表要處理的視窗訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-464">A <see cref="T:System.Windows.Forms.Message" />, passed by reference that represents the window message to process.</span>
          </span>
        </param>
        <param name="keyData">
          <span data-ttu-id="f5974-465">其中一個 <see cref="T:System.Windows.Forms.Keys" /> 值，它代表要處理的快速鍵。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-465">One of the <see cref="T:System.Windows.Forms.Keys" /> values that represents the shortcut key to process.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f5974-466">處理命令按鍵。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-466">Processes a command key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f5974-467">若命令按鍵已由控制項處理，則為 <see langword="true" />；否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-467">
              <see langword="true" /> if the command key was processed by the control; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="f5974-468">操作與 unmanaged 程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-468">for operating with unmanaged code.</span>
          </span>
          <span data-ttu-id="f5974-469">相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-469">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="ProcessDialogKey">
      <MemberSignature Language="C#" Value="protected override bool ProcessDialogKey (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool ProcessDialogKey(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.ProcessDialogKey(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ProcessDialogKey (keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool ProcessDialogKey(System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="override this.ProcessDialogKey : System.Windows.Forms.Keys -&gt; bool" Usage="textBoxBase.ProcessDialogKey keyData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="keyData">
          <span data-ttu-id="f5974-470">其中一個 <see cref="T:System.Windows.Forms.Keys" /> 值，表示要處理的按鍵。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-470">One of the <see cref="T:System.Windows.Forms.Keys" /> values that represents the key to process.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f5974-471">處理對話方塊按鍵。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-471">Processes a dialog key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f5974-472">如果按鍵已由控制項處理，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-472">
              <see langword="true" /> if the key was processed by the control; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.ProcessDialogKey(System.Windows.Forms.Keys)" />
      </Docs>
    </Member>
    <Member MemberName="ReadOnly">
      <MemberSignature Language="C#" Value="public bool ReadOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.ReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Property ReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ReadOnly { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ReadOnly : bool with get, set" Usage="System.Windows.Forms.TextBoxBase.ReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.Repaint)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f5974-473">取得或設定值，指出文字方塊中的文字是否為唯讀。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-473">Gets or sets a value indicating whether text in the text box is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f5974-474">如果文字方塊為唯讀，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-474">
              <see langword="true" /> if the text box is read-only; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="f5974-475">預設值為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-475">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5974-476">當這個屬性設定為`true`，在執行階段使用者無法變更控制項的內容。</span><span class="sxs-lookup"><span data-stu-id="f5974-476">When this property is set to `true`, the contents of the control cannot be changed by the user at runtime.</span></span> <span data-ttu-id="f5974-477">此屬性設定為`true`，您仍然可以設定的值<xref:System.Windows.Forms.TextBoxBase.Text%2A>在程式碼中的屬性。</span><span class="sxs-lookup"><span data-stu-id="f5974-477">With this property set to `true`, you can still set the value of the <xref:System.Windows.Forms.TextBoxBase.Text%2A> property in code.</span></span> <span data-ttu-id="f5974-478">您可以使用這項功能，而不是停用控制項<xref:System.Windows.Forms.Control.Enabled%2A>屬性設定為允許複製內容並顯示工具提示。</span><span class="sxs-lookup"><span data-stu-id="f5974-478">You can use this feature instead of disabling the control with the <xref:System.Windows.Forms.Control.Enabled%2A> property to allow the contents to be copied and ToolTips to be shown.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadOnlyChanged">
      <MemberSignature Language="C#" Value="public event EventHandler ReadOnlyChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ReadOnlyChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TextBoxBase.ReadOnlyChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ReadOnlyChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ReadOnlyChanged;" />
      <MemberSignature Language="F#" Value="member this.ReadOnlyChanged : EventHandler " Usage="member this.ReadOnlyChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f5974-479">發生於 <see cref="P:System.Windows.Forms.TextBoxBase.ReadOnly" /> 屬性的值已變更時。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-479">Occurs when the value of the <see cref="P:System.Windows.Forms.TextBoxBase.ReadOnly" /> property has changed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5974-480">如需如何處理事件的詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="f5974-480">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f5974-481">下列程式碼範例示範如何使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="f5974-481">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="f5974-482">在範例中，事件處理常式會報告一次<xref:System.Windows.Forms.TextBoxBase.ReadOnlyChanged>事件。</span><span class="sxs-lookup"><span data-stu-id="f5974-482">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.TextBoxBase.ReadOnlyChanged> event.</span></span> <span data-ttu-id="f5974-483">此報表可協助您了解事件發生的時機，並可協助您偵錯。</span><span class="sxs-lookup"><span data-stu-id="f5974-483">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="f5974-484">若要報告多個事件或事件經常發生，請考慮更換<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>具有<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>或將訊息附加到多行<xref:System.Windows.Forms.TextBox>。</span><span class="sxs-lookup"><span data-stu-id="f5974-484">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="f5974-485">若要執行範例程式碼，將它貼至專案，其中包含繼承自類型的執行個體<xref:System.Windows.Forms.TextBoxBase>，這類<xref:System.Windows.Forms.TextBox>或<xref:System.Windows.Forms.TextBoxBase>。</span><span class="sxs-lookup"><span data-stu-id="f5974-485">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.TextBoxBase>, such as a <xref:System.Windows.Forms.TextBox> or <xref:System.Windows.Forms.TextBoxBase>.</span></span> <span data-ttu-id="f5974-486">然後將其命名執行個體`TextBoxBase1`，並確保與關聯的事件處理常式<xref:System.Windows.Forms.TextBoxBase.ReadOnlyChanged>事件。</span><span class="sxs-lookup"><span data-stu-id="f5974-486">Then name the instance `TextBoxBase1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.TextBoxBase.ReadOnlyChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#248](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#248)]
 [!code-vb[System.Windows.Forms.EventExamples#248](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#248)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.ReadOnly" />
      </Docs>
    </Member>
    <Member MemberName="ScrollToCaret">
      <MemberSignature Language="C#" Value="public void ScrollToCaret ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScrollToCaret() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.ScrollToCaret" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScrollToCaret ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ScrollToCaret();" />
      <MemberSignature Language="F#" Value="member this.ScrollToCaret : unit -&gt; unit" Usage="textBoxBase.ScrollToCaret " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f5974-487">捲動控制項的內容至目前插入號 (Caret) 所在位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-487">Scrolls the contents of the control to the current caret position.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5974-488">這個方法可讓您捲動控制項的內容，直到插入號位於控制項的可見區域。</span><span class="sxs-lookup"><span data-stu-id="f5974-488">This method enables you to scroll the contents of the control until the caret is within the visible region of the control.</span></span> <span data-ttu-id="f5974-489">如果插入號位於下方的控制項的可見區域<xref:System.Windows.Forms.TextBoxBase.ScrollToCaret%2A>方法會捲動控制項的內容，直到插入號會顯示在控制項底部。</span><span class="sxs-lookup"><span data-stu-id="f5974-489">If the caret is positioned below the visible region of the control, the <xref:System.Windows.Forms.TextBoxBase.ScrollToCaret%2A> method will scroll the contents of the control until the caret is visible at the bottom of the control.</span></span> <span data-ttu-id="f5974-490">如果插入號位於上方控制項的可見區域，這個方法會捲動控制項的內容，直到插入號會顯示在控制項的頂端。</span><span class="sxs-lookup"><span data-stu-id="f5974-490">If the caret is positioned above the visible region of the control, this method scrolls the contents of the control until the caret is visible at the top of the control.</span></span> <span data-ttu-id="f5974-491">您可以使用這個方法在多行文字方塊中，以確保目前的文字項目點的控制項之可見區域內。</span><span class="sxs-lookup"><span data-stu-id="f5974-491">You can use this method in a multiline text box to ensure that the current text entry point is within the visible region of the control.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f5974-492">如果控制項沒有焦點，或插入號已放置在控制項的可見區域，這個方法沒有任何作用。</span><span class="sxs-lookup"><span data-stu-id="f5974-492">This method has no effect if the control does not have focus or if the caret is already positioned in the visible region of the control.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f5974-493">下列程式碼範例示範如何使用<xref:System.Windows.Forms.Keys>列舉型別和<xref:System.Windows.Forms.TextBoxBase.ScrollToCaret%2A>方法，以確定所插入號，表示文字插入點是一律在畫面上看到之後已按下 ENTER 鍵。</span><span class="sxs-lookup"><span data-stu-id="f5974-493">The following code example demonstrates how to use the <xref:System.Windows.Forms.Keys> enumeration and the <xref:System.Windows.Forms.TextBoxBase.ScrollToCaret%2A> method to ensure that the text insertion point, represented by the caret, is always visible on the screen after the ENTER key has been pressed.</span></span> <span data-ttu-id="f5974-494">若要執行此範例，下列程式碼貼入表單，其中包含<xref:System.Windows.Forms.TextBox>稱為控制項`TextBox1`並<xref:System.Windows.Forms.RichTextBox>控制項稱為`RichTextBox1`。</span><span class="sxs-lookup"><span data-stu-id="f5974-494">To run the example, paste the following code in a form containing a <xref:System.Windows.Forms.TextBox> control called `TextBox1` and a <xref:System.Windows.Forms.RichTextBox> control called `RichTextBox1`.</span></span> <span data-ttu-id="f5974-495">這個範例需要已與相關聯的事件處理方法<xref:System.Windows.Forms.Control.KeyDown>事件。</span><span class="sxs-lookup"><span data-stu-id="f5974-495">This example requires that the event-handling method has been associated with the <xref:System.Windows.Forms.Control.KeyDown> event.</span></span>  
  
 [!code-cpp[System.Windows.Forms.TextBoxBaseScrolling#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.TextBoxBaseScrolling/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.TextBoxBaseScrolling#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TextBoxBaseScrolling/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.TextBoxBaseScrolling#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TextBoxBaseScrolling/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public void Select (int start, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Select(int32 start, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.Select(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Select (start As Integer, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Select(int start, int length);" />
      <MemberSignature Language="F#" Value="override this.Select : int * int -&gt; unit" Usage="textBoxBase.Select (start, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="start">
          <span data-ttu-id="f5974-496">文字方塊中目前的文字選取範圍中第一個字元的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-496">The position of the first character in the current text selection within the text box.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="f5974-497">要選取的字元數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-497">The number of characters to select.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f5974-498">在文字方塊中選取文字範圍。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-498">Selects a range of text in the text box.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5974-499">如果您想要設定控制項的文字中的第一個字元的起始位置，設定`start`參數設為 0。</span><span class="sxs-lookup"><span data-stu-id="f5974-499">If you want to set the start position to the first character in the control's text, set the `start` parameter to 0.</span></span> <span data-ttu-id="f5974-500">您可以使用這個方法，以選取的文字，例如當子控制項的文字中搜尋和取代的資訊。</span><span class="sxs-lookup"><span data-stu-id="f5974-500">You can use this method to select a substring of text, such as when searching through the text of the control and replacing information.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f5974-501">您可以透過程式設計方式將插入號移文字方塊內藉由設定`start`至您想要將插入號移至，並將 [文字] 方塊內的位置參數`length`參數的值為零 (0)。</span><span class="sxs-lookup"><span data-stu-id="f5974-501">You can programmatically move the caret within the text box by setting the `start` parameter to the position within the text box where you want the caret to move to and set the `length` parameter to a value of zero (0).</span></span> <span data-ttu-id="f5974-502">為了讓將插入號移動文字方塊必須取得焦點。</span><span class="sxs-lookup"><span data-stu-id="f5974-502">The text box must have focus in order for the caret to be moved.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f5974-503">如果呼叫這個方法時，不含任何參數，則會使用替代方法。</span><span class="sxs-lookup"><span data-stu-id="f5974-503">If this method is called without any parameters, an alternative method is used.</span></span> <span data-ttu-id="f5974-504">這個替代的方法繼承自<xref:System.Windows.Forms.Control>類別。</span><span class="sxs-lookup"><span data-stu-id="f5974-504">This alternative method inherits from the <xref:System.Windows.Forms.Control> class.</span></span> <span data-ttu-id="f5974-505">呼叫時，它會將輸入的焦點設定至控制項，並選取控制項的內容。</span><span class="sxs-lookup"><span data-stu-id="f5974-505">When called, it sets the input focus to the control and selects the contents of the control.</span></span> <span data-ttu-id="f5974-506">如需詳細資訊，請參閱 <xref:System.Windows.Forms.Control.Select%2A?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="f5974-506">For more information, see the <xref:System.Windows.Forms.Control.Select%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f5974-507">下列程式碼範例使用<xref:System.Windows.Forms.TextBox>，衍生類別中，若要搜尋的字組"fox"的執行個體控制項的內容。</span><span class="sxs-lookup"><span data-stu-id="f5974-507">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class, to search the contents of the control for the instance of the word "fox".</span></span> <span data-ttu-id="f5974-508">如果找不到，程式碼會選取該文字在控制項中使用<xref:System.Windows.Forms.TextBoxBase.Select%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="f5974-508">If found, the code selects the word in the control using the <xref:System.Windows.Forms.TextBoxBase.Select%2A> method.</span></span> <span data-ttu-id="f5974-509">這個範例需要<xref:System.Windows.Forms.TextBox>名為`textBox1`已建立並將其<xref:System.Windows.Forms.TextBoxBase.Text%2A>屬性包含這個句子"The quick brown fox jumps over the lazy dog"。</span><span class="sxs-lookup"><span data-stu-id="f5974-509">This example requires that a <xref:System.Windows.Forms.TextBox> named `textBox1` has been created and its <xref:System.Windows.Forms.TextBoxBase.Text%2A> property contains the sentence "The quick brown fox jumps over the lazy dog."</span></span>  
  
 [!code-cpp[Classic TextBoxBase.Select Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.Select Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.Select Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.Select Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.Select Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.Select Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f5974-510">
            <paramref name="start" /> 參數的值小於零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-510">The value of the <paramref name="start" /> parameter is less than zero.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Forms.TextBoxBase.SelectAll" />
        <altmember cref="P:System.Windows.Forms.TextBoxBase.SelectionLength" />
        <altmember cref="P:System.Windows.Forms.TextBoxBase.SelectionStart" />
        <altmember cref="P:System.Windows.Forms.TextBoxBase.SelectedText" />
      </Docs>
    </Member>
    <Member MemberName="SelectAll">
      <MemberSignature Language="C#" Value="public void SelectAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SelectAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.SelectAll" />
      <MemberSignature Language="VB.NET" Value="Public Sub SelectAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SelectAll();" />
      <MemberSignature Language="F#" Value="member this.SelectAll : unit -&gt; unit" Usage="textBoxBase.SelectAll " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f5974-511">選取文字方塊中的所有文字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-511">Selects all text in the text box.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5974-512">這個方法可讓您選取的控制項內的所有文字。</span><span class="sxs-lookup"><span data-stu-id="f5974-512">This method enables you to select all text within the control.</span></span> <span data-ttu-id="f5974-513">您可以使用這個方法搭配<xref:System.Windows.Forms.TextBoxBase.Cut%2A>方法，需要在控制項中，若要剪下控制項的整個內容並貼到選取的文字**剪貼簿**。</span><span class="sxs-lookup"><span data-stu-id="f5974-513">You can use this method in conjunction with the <xref:System.Windows.Forms.TextBoxBase.Cut%2A> method, which requires text to be selected in the control, to cut the entire contents of the control and paste them into the **Clipboard**.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f5974-514">下列程式碼範例使用<xref:System.Windows.Forms.TextBox>，衍生類別，來判斷是否在控制項中選取任何文字。</span><span class="sxs-lookup"><span data-stu-id="f5974-514">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class, to determine if any text is selected in the control.</span></span> <span data-ttu-id="f5974-515">如果未不選取任何文字，則進行呼叫<xref:System.Windows.Forms.TextBoxBase.SelectAll%2A>方法，然後再複製到控制項的內容**剪貼簿**。</span><span class="sxs-lookup"><span data-stu-id="f5974-515">If no text is selected, a call is made to the <xref:System.Windows.Forms.TextBoxBase.SelectAll%2A> method before copying the contents of the control to the **Clipboard**.</span></span> <span data-ttu-id="f5974-516">這個範例需要<xref:System.Windows.Forms.TextBox>已建立名為`textBox1`。</span><span class="sxs-lookup"><span data-stu-id="f5974-516">This example requires that a <xref:System.Windows.Forms.TextBox> has been created named `textBox1`.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.SelectAll Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.SelectAll Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.SelectAll Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.SelectAll Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.SelectAll Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.SelectAll Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectedText">
      <MemberSignature Language="C#" Value="public virtual string SelectedText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SelectedText" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.SelectedText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SelectedText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SelectedText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SelectedText : string with get, set" Usage="System.Windows.Forms.TextBoxBase.SelectedText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f5974-517">取得或設定值，指出控制項中目前選取文字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-517">Gets or sets a value indicating the currently selected text in the control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f5974-518">字串，表示文字方塊中目前選取的文字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-518">A string that represents the currently selected text in the text box.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5974-519">您可以將文字指派給這個屬性來變更文字方塊中目前選取的文字。</span><span class="sxs-lookup"><span data-stu-id="f5974-519">You can assign text to this property to change the text currently selected in the text box.</span></span> <span data-ttu-id="f5974-520">如果在文字方塊中目前不選取任何文字，則這個屬性會傳回零長度字串。</span><span class="sxs-lookup"><span data-stu-id="f5974-520">If no text is currently selected in the text box, this property returns a zero-length string.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f5974-521">下列程式碼範例使用<xref:System.Windows.Forms.TextBox>，衍生的類別。</span><span class="sxs-lookup"><span data-stu-id="f5974-521">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class.</span></span> <span data-ttu-id="f5974-522">它提供<xref:System.Windows.Forms.MenuItem.Click>事件處理常式<xref:System.Windows.Forms.MenuItem>剪下、 複製、 貼上，並復原作業執行的物件。</span><span class="sxs-lookup"><span data-stu-id="f5974-522">It provides <xref:System.Windows.Forms.MenuItem.Click> event handlers for <xref:System.Windows.Forms.MenuItem> objects that perform Cut, Copy, Paste, and Undo operations.</span></span> <span data-ttu-id="f5974-523">這個範例需要<xref:System.Windows.Forms.TextBox>控制項，名為`textBox1`已建立。</span><span class="sxs-lookup"><span data-stu-id="f5974-523">This example requires that a <xref:System.Windows.Forms.TextBox> control named `textBox1` has been created.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.SelectedText Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.SelectedText Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.SelectedText Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.SelectedText Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.SelectedText Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.SelectedText Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.SelectionStart" />
        <altmember cref="P:System.Windows.Forms.TextBoxBase.SelectionLength" />
      </Docs>
    </Member>
    <Member MemberName="SelectionLength">
      <MemberSignature Language="C#" Value="public virtual int SelectionLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SelectionLength" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.SelectionLength" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SelectionLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int SelectionLength { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.SelectionLength : int with get, set" Usage="System.Windows.Forms.TextBoxBase.SelectionLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f5974-524">取得或設定文字方塊中所選取的字元數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-524">Gets or sets the number of characters selected in the text box.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f5974-525">文字方塊中所選取的字元數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-525">The number of characters selected in the text box.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5974-526">您可以使用這個屬性來判斷是否任何字元目前選取的文字方塊控制項中選取的文字上執行作業之前。</span><span class="sxs-lookup"><span data-stu-id="f5974-526">You can use this property to determine if any characters are currently selected in the text box control before performing operations on the selected text.</span></span> <span data-ttu-id="f5974-527">時的值<xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A>屬性設定為大於值為控制項文字內的字元數的值為<xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A>屬性設定為減去值控制項中文字的整個長度<xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A>屬性 (如果指定的任何值<xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A>屬性)。</span><span class="sxs-lookup"><span data-stu-id="f5974-527">When the value of the <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> property is set to a value that is larger than the number of characters within the text of the control, the value of the <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> property is set to the entire length of text within the control minus the value of the <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> property (if any value is specified for the <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> property).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f5974-528">您可以透過程式設計方式將插入號移文字方塊內藉由設定<xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A>至您想要將插入號移至，並將 [文字] 方塊內的位置<xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A>屬性設為零 (0) 的值。</span><span class="sxs-lookup"><span data-stu-id="f5974-528">You can programmatically move the caret within the text box by setting the <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> to the position within the text box where you want the caret to move to and set the <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> property to a value of zero (0).</span></span> <span data-ttu-id="f5974-529">為了讓將插入號移動文字方塊必須取得焦點。</span><span class="sxs-lookup"><span data-stu-id="f5974-529">The text box must have focus in order for the caret to be moved.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f5974-530">下列程式碼範例使用<xref:System.Windows.Forms.TextBox>，衍生的類別。</span><span class="sxs-lookup"><span data-stu-id="f5974-530">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class.</span></span> <span data-ttu-id="f5974-531">它提供<xref:System.Windows.Forms.MenuItem.Click>事件處理常式<xref:System.Windows.Forms.MenuItem>剪下、 複製、 貼上，並復原作業執行的物件。</span><span class="sxs-lookup"><span data-stu-id="f5974-531">It provides <xref:System.Windows.Forms.MenuItem.Click> event handlers for <xref:System.Windows.Forms.MenuItem> objects that perform Cut, Copy, Paste, and Undo operations.</span></span> <span data-ttu-id="f5974-532">這個範例需要<xref:System.Windows.Forms.TextBox>控制項，名為`textBox1`已建立。</span><span class="sxs-lookup"><span data-stu-id="f5974-532">This example requires that a <xref:System.Windows.Forms.TextBox> control named `textBox1` has been created.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f5974-533">指派的值小於零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-533">The assigned value is less than zero.</span>
          </span>
        </exception>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.SelectionStart" />
        <altmember cref="P:System.Windows.Forms.TextBoxBase.SelectedText" />
      </Docs>
    </Member>
    <Member MemberName="SelectionStart">
      <MemberSignature Language="C#" Value="public int SelectionStart { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SelectionStart" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.SelectionStart" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectionStart As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SelectionStart { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.SelectionStart : int with get, set" Usage="System.Windows.Forms.TextBoxBase.SelectionStart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f5974-534">取得或設定文字方塊中選取文字的起點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-534">Gets or sets the starting point of text selected in the text box.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f5974-535">文字方塊中選取的文字開始位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-535">The starting position of text selected in the text box.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5974-536">如果控制項中不選取任何文字，則這個屬性會指出插入點或插入號，新的文字。</span><span class="sxs-lookup"><span data-stu-id="f5974-536">If no text is selected in the control, this property indicates the insertion point, or caret, for new text.</span></span> <span data-ttu-id="f5974-537">如果您為控制項中文字的長度超過設定這個屬性，將會在最後一個字元後放選取範圍開始位置。</span><span class="sxs-lookup"><span data-stu-id="f5974-537">If you set this property to a location beyond the length of the text in the control, the selection start position will be placed after the last character.</span></span> <span data-ttu-id="f5974-538">在文字方塊控制項中選取文字時，變更此屬性可能會減少的值<xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="f5974-538">When text is selected in the text box control, changing this property might decrease the value of the <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> property.</span></span> <span data-ttu-id="f5974-539">如果所指定的位置之後控制項中的其餘文字<xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A>屬性是值小於<xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A>屬性、 值<xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A>屬性就會自動減少。</span><span class="sxs-lookup"><span data-stu-id="f5974-539">If the remaining text in the control after the position indicated by the <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> property is less than the value of the <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> property, the value of the <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> property is automatically decreased.</span></span> <span data-ttu-id="f5974-540">值<xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A>屬性永遠不會導致增加<xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="f5974-540">The value of the <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> property never causes an increase in the <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> property.</span></span>  
  
 <span data-ttu-id="f5974-541">您以程式設計的方式可以移動文字方塊內的選取範圍，藉由設定<xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A>而<xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="f5974-541">You can programmatically move the selection within the text box by setting the <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> and the <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> properties.</span></span>  
  
 <span data-ttu-id="f5974-542">您可以透過程式設計方式將插入號移文字方塊內藉由設定<xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A>至您想要將插入號移至，並將 [文字] 方塊內的位置<xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A>屬性設為零 (0) 的值。</span><span class="sxs-lookup"><span data-stu-id="f5974-542">You can programmatically move the caret within the text box by setting the <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> to the position within the text box where you want the caret to move to and set the <xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A> property to a value of zero (0).</span></span>  
  
 <span data-ttu-id="f5974-543"><xref:System.Windows.Forms.TextBox>必須具有焦點的選取範圍或插入點要移動的順序。</span><span class="sxs-lookup"><span data-stu-id="f5974-543">The <xref:System.Windows.Forms.TextBox> must have focus in order for the selection or the caret to be moved.</span></span> <span data-ttu-id="f5974-544">您可以設定<xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A>屬性<xref:System.Windows.Forms.TextBox>也就是說<xref:System.Windows.Forms.TextBoxBase.ReadOnly%2A>，提供<xref:System.Windows.Forms.Control.Focus%2A>第一次。</span><span class="sxs-lookup"><span data-stu-id="f5974-544">You can set the <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> property of a <xref:System.Windows.Forms.TextBox> that is <xref:System.Windows.Forms.TextBoxBase.ReadOnly%2A> by giving it the <xref:System.Windows.Forms.Control.Focus%2A> first.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f5974-545">**範例 1**</span><span class="sxs-lookup"><span data-stu-id="f5974-545">**Example 1**</span></span>  
  
 <span data-ttu-id="f5974-546">下列程式碼範例使用<xref:System.Windows.Forms.TextBox>，衍生的類別。</span><span class="sxs-lookup"><span data-stu-id="f5974-546">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class.</span></span> <span data-ttu-id="f5974-547">它提供<xref:System.Windows.Forms.MenuItem.Click>事件處理常式<xref:System.Windows.Forms.MenuItem>剪下、 複製、 貼上，並復原作業執行的物件。</span><span class="sxs-lookup"><span data-stu-id="f5974-547">It provides <xref:System.Windows.Forms.MenuItem.Click> event handlers for <xref:System.Windows.Forms.MenuItem> objects that perform Cut, Copy, Paste, and Undo operations.</span></span> <span data-ttu-id="f5974-548">這個範例需要<xref:System.Windows.Forms.TextBox>控制項，名為`textBox1`已建立。</span><span class="sxs-lookup"><span data-stu-id="f5974-548">This example requires that a <xref:System.Windows.Forms.TextBox> control named `textBox1` has been created.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/VB/source.vb#1)]  
  
 <span data-ttu-id="f5974-549">**範例 2**</span><span class="sxs-lookup"><span data-stu-id="f5974-549">**Example 2**</span></span>  
  
 <span data-ttu-id="f5974-550">下列範例會設定<xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A>的屬性<xref:System.Windows.Forms.TextBox>也就是說<xref:System.Windows.Forms.TextBoxBase.ReadOnly%2A>，提供<xref:System.Windows.Forms.Control.Focus%2A>第一次。</span><span class="sxs-lookup"><span data-stu-id="f5974-550">The following example sets the <xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A> property of a <xref:System.Windows.Forms.TextBox> that is <xref:System.Windows.Forms.TextBoxBase.ReadOnly%2A> by giving it the <xref:System.Windows.Forms.Control.Focus%2A> first.</span></span>  
  
 [!code-csharp[SystemWindowsFormsTextBoxBase#1](~/samples/snippets/csharp/VS_Snippets_Winforms/SystemWindowsFormsTextBoxBase/CS/Form1.cs#1)]
 [!code-vb[SystemWindowsFormsTextBoxBase#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/SystemWindowsFormsTextBoxBase/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f5974-551">指派的值小於零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-551">The assigned value is less than zero.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SetBoundsCore">
      <MemberSignature Language="C#" Value="protected override void SetBoundsCore (int x, int y, int width, int height, System.Windows.Forms.BoundsSpecified specified);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetBoundsCore(int32 x, int32 y, int32 width, int32 height, valuetype System.Windows.Forms.BoundsSpecified specified) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub SetBoundsCore (x As Integer, y As Integer, width As Integer, height As Integer, specified As BoundsSpecified)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void SetBoundsCore(int x, int y, int width, int height, System::Windows::Forms::BoundsSpecified specified);" />
      <MemberSignature Language="F#" Value="override this.SetBoundsCore : int * int * int * int * System.Windows.Forms.BoundsSpecified -&gt; unit" Usage="textBoxBase.SetBoundsCore (x, y, width, height, specified)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="specified" Type="System.Windows.Forms.BoundsSpecified" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="f5974-552">控制項的新 <see cref="P:System.Windows.Forms.Control.Left" /> 屬性值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-552">The new <see cref="P:System.Windows.Forms.Control.Left" /> property value of the control.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="f5974-553">控制項的新 <see cref="P:System.Windows.Forms.Control.Top" /> 屬性值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-553">The new <see cref="P:System.Windows.Forms.Control.Top" /> property value of the control.</span>
          </span>
        </param>
        <param name="width">
          <span data-ttu-id="f5974-554">控制項的新 <see cref="P:System.Windows.Forms.Control.Width" /> 屬性值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-554">The new <see cref="P:System.Windows.Forms.Control.Width" /> property value of the control.</span>
          </span>
        </param>
        <param name="height">
          <span data-ttu-id="f5974-555">未使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-555">Not used.</span>
          </span>
        </param>
        <param name="specified">
          <span data-ttu-id="f5974-556">
            <see cref="T:System.Windows.Forms.BoundsSpecified" /> 值的位元組合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-556">A bitwise combination of the <see cref="T:System.Windows.Forms.BoundsSpecified" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f5974-557">設定 <see cref="T:System.Windows.Forms.TextBoxBase" /> 控制項的指定繫結。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-557">Sets the specified bounds of the <see cref="T:System.Windows.Forms.TextBoxBase" /> control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5974-558"><xref:System.Windows.Forms.TextBoxBase>控制項會使用<xref:System.Windows.Forms.TextBoxBase.PreferredHeight%2A>屬性來設定界限，如果<xref:System.Windows.Forms.TextBoxBase.AutoSize%2A>屬性是`true`並<xref:System.Windows.Forms.TextBoxBase.Multiline%2A>屬性是`false`。</span><span class="sxs-lookup"><span data-stu-id="f5974-558">The <xref:System.Windows.Forms.TextBoxBase> control uses the <xref:System.Windows.Forms.TextBoxBase.PreferredHeight%2A> property to set the bounds if the <xref:System.Windows.Forms.TextBoxBase.AutoSize%2A> property is `true` and the <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> property is `false`.</span></span>  
  
 <span data-ttu-id="f5974-559">一般而言，對應至不包含在繫結參數`specified`參數傳入其目前值。</span><span class="sxs-lookup"><span data-stu-id="f5974-559">Typically, the parameters that correspond to the bounds not included in the `specified` parameter are passed in with their current values.</span></span> <span data-ttu-id="f5974-560">例如， <xref:System.Windows.Forms.Control.Height%2A>， <xref:System.Windows.Forms.Control.Width%2A>，或<xref:System.Drawing.Point.X%2A>或是<xref:System.Drawing.Point.Y%2A>的屬性<xref:System.Windows.Forms.Control.Location%2A>屬性可以傳入控制項的目前執行個體的參考。</span><span class="sxs-lookup"><span data-stu-id="f5974-560">For example, the <xref:System.Windows.Forms.Control.Height%2A>, <xref:System.Windows.Forms.Control.Width%2A>, or the <xref:System.Drawing.Point.X%2A> or <xref:System.Drawing.Point.Y%2A> properties of the <xref:System.Windows.Forms.Control.Location%2A> property can be passed in with a reference to the current instance of the control.</span></span> <span data-ttu-id="f5974-561">不過的接受傳入的所有值，並套用至控制項。</span><span class="sxs-lookup"><span data-stu-id="f5974-561">However all values passed in are honored and applied to the control.</span></span>  
  
 <span data-ttu-id="f5974-562">`specified`參數代表的控制項項目<xref:System.Windows.Forms.Control.Bounds%2A>變更您的應用程式。</span><span class="sxs-lookup"><span data-stu-id="f5974-562">The `specified` parameter represents the elements of the controls <xref:System.Windows.Forms.Control.Bounds%2A> changed by your application.</span></span> <span data-ttu-id="f5974-563">比方說，如果您變更<xref:System.Windows.Forms.Control.Size%2A>的控制項`specified`參數值是`Size`的值<xref:System.Windows.Forms.BoundsSpecified>。</span><span class="sxs-lookup"><span data-stu-id="f5974-563">For example, if you change the <xref:System.Windows.Forms.Control.Size%2A> of the control, the `specified` parameter value is the `Size` value of <xref:System.Windows.Forms.BoundsSpecified>.</span></span> <span data-ttu-id="f5974-564">不過，如果<xref:System.Windows.Forms.Control.Size%2A>調整以回應<xref:System.Windows.Forms.Control.Dock%2A>所設定的屬性`specified`參數值是`None`的值<xref:System.Windows.Forms.BoundsSpecified>。</span><span class="sxs-lookup"><span data-stu-id="f5974-564">However, if the <xref:System.Windows.Forms.Control.Size%2A> is adjusted in response to the <xref:System.Windows.Forms.Control.Dock%2A> property being set, the `specified` parameter value is the `None` value of <xref:System.Windows.Forms.BoundsSpecified>.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="f5974-565">當覆寫<see cref="M:System.Windows.Forms.TextBoxBase.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" />衍生類別時，請務必呼叫基底類別的<see cref="M:System.Windows.Forms.TextBoxBase.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" />方法，以強制變更控制項的界限。</span>
            <span class="sxs-lookup">
              <span data-stu-id="f5974-565">When overriding <see cref="M:System.Windows.Forms.TextBoxBase.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.TextBoxBase.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" /> method to force the bounds of the control to change.</span>
            </span>
            <span data-ttu-id="f5974-566">在衍生的類別可以加入大小限制<see cref="M:System.Windows.Forms.TextBoxBase.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" />方法。</span>
            <span class="sxs-lookup">
              <span data-stu-id="f5974-566">Derived classes can add size restrictions to the <see cref="M:System.Windows.Forms.TextBoxBase.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" /> method.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="ShortcutsEnabled">
      <MemberSignature Language="C#" Value="public virtual bool ShortcutsEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShortcutsEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.ShortcutsEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ShortcutsEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ShortcutsEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShortcutsEnabled : bool with get, set" Usage="System.Windows.Forms.TextBoxBase.ShortcutsEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f5974-567">取得或設定值，指出是否啟用定義的快速鍵。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-567">Gets or sets a value indicating whether the defined shortcuts are enabled.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f5974-568">
            <see langword="true" /> 表示啟用快速鍵；否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-568">
              <see langword="true" /> to enable the shortcuts; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5974-569">使用<xref:System.Windows.Forms.TextBoxBase.ShortcutsEnabled%2A>屬性來啟用或停用下列快速鍵組合和控制項的捷徑功能表：</span><span class="sxs-lookup"><span data-stu-id="f5974-569">Use the <xref:System.Windows.Forms.TextBoxBase.ShortcutsEnabled%2A> property to enable or disable the following shortcut key combinations and the control's shortcut menu:</span></span>  
  
-   <span data-ttu-id="f5974-570">CTRL+Z</span><span class="sxs-lookup"><span data-stu-id="f5974-570">CTRL+Z</span></span>  
  
-   <span data-ttu-id="f5974-571">CTRL+E</span><span class="sxs-lookup"><span data-stu-id="f5974-571">CTRL+E</span></span>  
  
-   <span data-ttu-id="f5974-572">CTRL+C</span><span class="sxs-lookup"><span data-stu-id="f5974-572">CTRL+C</span></span>  
  
-   <span data-ttu-id="f5974-573">CTRL+Y</span><span class="sxs-lookup"><span data-stu-id="f5974-573">CTRL+Y</span></span>  
  
-   <span data-ttu-id="f5974-574">CTRL+X</span><span class="sxs-lookup"><span data-stu-id="f5974-574">CTRL+X</span></span>  
  
-   <span data-ttu-id="f5974-575">CTRL+BACKSPACE</span><span class="sxs-lookup"><span data-stu-id="f5974-575">CTRL+BACKSPACE</span></span>  
  
-   <span data-ttu-id="f5974-576">CTRL+V</span><span class="sxs-lookup"><span data-stu-id="f5974-576">CTRL+V</span></span>  
  
-   <span data-ttu-id="f5974-577">CTRL+DELETE</span><span class="sxs-lookup"><span data-stu-id="f5974-577">CTRL+DELETE</span></span>  
  
-   <span data-ttu-id="f5974-578">CTRL+A</span><span class="sxs-lookup"><span data-stu-id="f5974-578">CTRL+A</span></span>  
  
-   <span data-ttu-id="f5974-579">SHIFT + DELETE</span><span class="sxs-lookup"><span data-stu-id="f5974-579">SHIFT+DELETE</span></span>  
  
-   <span data-ttu-id="f5974-580">CTRL+L</span><span class="sxs-lookup"><span data-stu-id="f5974-580">CTRL+L</span></span>  
  
-   <span data-ttu-id="f5974-581">SHIFT + INSERT</span><span class="sxs-lookup"><span data-stu-id="f5974-581">SHIFT+INSERT</span></span>  
  
-   <span data-ttu-id="f5974-582">CTRL+R</span><span class="sxs-lookup"><span data-stu-id="f5974-582">CTRL+R</span></span>  
  
 <span data-ttu-id="f5974-583">您可以覆寫這個屬性來指定其他快速鍵。</span><span class="sxs-lookup"><span data-stu-id="f5974-583">You can override this property to specify other shortcut keys.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public override string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.Text" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Text : string with get, set" Usage="System.Windows.Forms.TextBoxBase.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.ComponentModel.Design.MultilineStringEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.ComponentModel.Design.MultilineStringEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f5974-584">取得或設定文字方塊中目前的文字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-584">Gets or sets the current text in the text box.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f5974-585">顯示於控制項中的文字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-585">The text displayed in the control.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5974-586">若要顯示多行文字在文字方塊中，設定<xref:System.Windows.Forms.TextBoxBase.Multiline%2A>屬性設`true`。</span><span class="sxs-lookup"><span data-stu-id="f5974-586">To display multiple lines of text in a text box, set the <xref:System.Windows.Forms.TextBoxBase.Multiline%2A> property to `true`.</span></span> <span data-ttu-id="f5974-587">若要讀取或設定多行文字方塊的文字，使用<xref:System.Windows.Forms.TextBoxBase.Lines%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="f5974-587">To read or set the text of a multiline text box, use the <xref:System.Windows.Forms.TextBoxBase.Lines%2A> property.</span></span> <span data-ttu-id="f5974-588">可在輸入的文字數量<xref:System.Windows.Forms.RichTextBox>控制項只會受到可用系統記憶體。</span><span class="sxs-lookup"><span data-stu-id="f5974-588">The amount of text that can be entered in the <xref:System.Windows.Forms.RichTextBox> control is limited only by available system memory.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f5974-589">下列程式碼範例會使用<xref:System.Windows.Forms.TextBox>的衍生類別，以建立多行<xref:System.Windows.Forms.TextBox>具有垂直捲軸控制項。</span><span class="sxs-lookup"><span data-stu-id="f5974-589">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class, to create a multiline <xref:System.Windows.Forms.TextBox> control with vertical scroll bars.</span></span> <span data-ttu-id="f5974-590">此範例也會使用<xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A>， <xref:System.Windows.Forms.TextBox.AcceptsReturn%2A>，和<xref:System.Windows.Forms.TextBoxBase.WordWrap%2A>屬性，使多行文字方塊控制項適用於建立文字文件。</span><span class="sxs-lookup"><span data-stu-id="f5974-590">This example also uses the <xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A>, <xref:System.Windows.Forms.TextBox.AcceptsReturn%2A>, and <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> properties to make the multiline text box control useful for creating text documents.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.AcceptsTab Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.AcceptsTab Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.AcceptsTab Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.AcceptsTab Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.AcceptsTab Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.AcceptsTab Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.Lines" />
        <altmember cref="P:System.Windows.Forms.TextBoxBase.Multiline" />
      </Docs>
    </Member>
    <Member MemberName="TextLength">
      <MemberSignature Language="C#" Value="public virtual int TextLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TextLength" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.TextLength" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property TextLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int TextLength { int get(); };" />
      <MemberSignature Language="F#" Value="member this.TextLength : int" Usage="System.Windows.Forms.TextBoxBase.TextLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f5974-591">取得控制項中文字的長度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-591">Gets the length of text in the control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f5974-592">包含在控制項文字中的字元數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-592">The number of characters contained in the text of the control.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5974-593">您可以使用這個屬性，來判斷工作，例如搜尋特定的控制項文字內的文字字串的字串中的字元數目的字元總數的知識需要的地方。</span><span class="sxs-lookup"><span data-stu-id="f5974-593">You can use this property to determine the number of characters in a string for tasks such as searching for specific strings of text within the text of the control, where knowledge of the total number of characters is needed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f5974-594">下列程式碼範例示範如何使用<xref:System.Windows.Forms.TextBoxBase.AppendText%2A>方法和<xref:System.Windows.Forms.TextBoxBase.TextLength%2A>屬性來從其中一個複製文字<xref:System.Windows.Forms.TextBox>到另一個。</span><span class="sxs-lookup"><span data-stu-id="f5974-594">The following code example demonstrates how to use the <xref:System.Windows.Forms.TextBoxBase.AppendText%2A> method and the <xref:System.Windows.Forms.TextBoxBase.TextLength%2A> property to copy text from one <xref:System.Windows.Forms.TextBox> to another.</span></span> <span data-ttu-id="f5974-595">這個範例需要兩個<xref:System.Windows.Forms.TextBox>控制項名為`textBox1`並`textBox2`，已新增至表單，並`textBox1`文字指派給其<xref:System.Windows.Forms.Control.Text%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="f5974-595">This example requires that two <xref:System.Windows.Forms.TextBox> controls named, `textBox1` and `textBox2`, have been added to a form and that `textBox1` has text assigned to its <xref:System.Windows.Forms.Control.Text%2A> property.</span></span>  
  
 [!code-cpp[TextBoxBase.AppendText#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TextBoxBase.AppendText/CPP/form1.cpp#1)]
 [!code-csharp[TextBoxBase.AppendText#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TextBoxBase.AppendText/CS/form1.cs#1)]
 [!code-vb[TextBoxBase.AppendText#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TextBoxBase.AppendText/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.Text" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="abstract member ToString : unit -&gt; string&#xA;override this.ToString : unit -&gt; string" Usage="textBoxBase.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f5974-596">傳回字串，代表 <see cref="T:System.Windows.Forms.TextBoxBase" /> 控制項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-596">Returns a string that represents the <see cref="T:System.Windows.Forms.TextBoxBase" /> control.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f5974-597">字串，代表目前的 <see cref="T:System.Windows.Forms.TextBoxBase" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-597">A string that represents the current <see cref="T:System.Windows.Forms.TextBoxBase" />.</span>
          </span>
          <span data-ttu-id="f5974-598">這個字串包括了控制項的類型與 <see cref="T:System.Windows.Forms.TextBoxBase" /> 屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-598">The string includes the type and the <see cref="T:System.Windows.Forms.TextBoxBase" /> property of the control.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Undo">
      <MemberSignature Language="C#" Value="public void Undo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Undo() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.Undo" />
      <MemberSignature Language="VB.NET" Value="Public Sub Undo ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Undo();" />
      <MemberSignature Language="F#" Value="member this.Undo : unit -&gt; unit" Usage="textBoxBase.Undo " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f5974-599">將文字方塊中上次的編輯作業復原。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-599">Undoes the last edit operation in the text box.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5974-600">這個方法將會復原上次**剪貼簿**或文字變更如果文字方塊控制項中執行的作業<xref:System.Windows.Forms.TextBoxBase.CanUndo%2A>屬性會傳回`true`。</span><span class="sxs-lookup"><span data-stu-id="f5974-600">This method will undo the last **Clipboard** or text change operation performed in the text box control if the <xref:System.Windows.Forms.TextBoxBase.CanUndo%2A> property returns `true`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f5974-601"><xref:System.Windows.Forms.TextBoxBase.Undo%2A>方法無法搭配<xref:System.Windows.Forms.Control.KeyPress>或<xref:System.Windows.Forms.Control.TextChanged>事件。</span><span class="sxs-lookup"><span data-stu-id="f5974-601">The <xref:System.Windows.Forms.TextBoxBase.Undo%2A> method does not work with the <xref:System.Windows.Forms.Control.KeyPress> or <xref:System.Windows.Forms.Control.TextChanged> events.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f5974-602">下列程式碼範例使用<xref:System.Windows.Forms.TextBox>，衍生的類別。</span><span class="sxs-lookup"><span data-stu-id="f5974-602">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class.</span></span> <span data-ttu-id="f5974-603">它提供<xref:System.Windows.Forms.MenuItem.Click>事件處理常式<xref:System.Windows.Forms.MenuItem>剪下、 複製、 貼上，並復原作業執行的物件。</span><span class="sxs-lookup"><span data-stu-id="f5974-603">It provides <xref:System.Windows.Forms.MenuItem.Click> event handlers for <xref:System.Windows.Forms.MenuItem> objects that perform Cut, Copy, Paste, and Undo operations.</span></span> <span data-ttu-id="f5974-604">這個範例需要<xref:System.Windows.Forms.TextBox>控制項，名為`textBox1`已建立。</span><span class="sxs-lookup"><span data-stu-id="f5974-604">This example requires that a <xref:System.Windows.Forms.TextBox> control named `textBox1` has been created.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.SelectionLength Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.SelectionLength Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Cut" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Copy" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Paste" />
        <altmember cref="P:System.Windows.Forms.TextBoxBase.CanUndo" />
        <altmember cref="M:System.Windows.Forms.TextBoxBase.Clear" />
      </Docs>
    </Member>
    <Member MemberName="WndProc">
      <MemberSignature Language="C#" Value="protected override void WndProc (ref System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void WndProc(valuetype System.Windows.Forms.Message&amp; m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextBoxBase.WndProc(System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub WndProc (ByRef m As Message)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void WndProc(System::Windows::Forms::Message % m);" />
      <MemberSignature Language="F#" Value="override this.WndProc :  -&gt; unit" Usage="textBoxBase.WndProc m" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m">
          <span data-ttu-id="f5974-605">要處理的 Windows <see cref="T:System.Windows.Forms.Message" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-605">The Windows <see cref="T:System.Windows.Forms.Message" /> to process.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f5974-606">處理 Windows 訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-606">Processes Windows messages.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)" />
      </Docs>
    </Member>
    <Member MemberName="WordWrap">
      <MemberSignature Language="C#" Value="public bool WordWrap { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool WordWrap" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TextBoxBase.WordWrap" />
      <MemberSignature Language="VB.NET" Value="Public Property WordWrap As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool WordWrap { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.WordWrap : bool with get, set" Usage="System.Windows.Forms.TextBoxBase.WordWrap" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f5974-607">指示多行文字方塊控制項是否會在必要時自動將文字換行到下一行的開頭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-607">Indicates whether a multiline text box control automatically wraps words to the beginning of the next line when necessary.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f5974-608">如果多行文字方塊控制項會將文字換行，則為 <see langword="true" />；如果文字方塊控制項會在使用者輸入的文字超過控制項右邊時，自動向水平方向捲動，則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-608">
              <see langword="true" /> if the multiline text box control wraps words; <see langword="false" /> if the text box control automatically scrolls horizontally when the user types past the right edge of the control.</span>
          </span>
          <span data-ttu-id="f5974-609">預設值為 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f5974-609">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5974-610">如果這個屬性設定為`true`，不論將不會顯示水平捲軸<xref:System.Windows.Forms.TextBox.ScrollBars%2A>屬性設定。</span><span class="sxs-lookup"><span data-stu-id="f5974-610">If this property is set to `true`, horizontal scroll bars are not displayed regardless of the <xref:System.Windows.Forms.TextBox.ScrollBars%2A> property setting.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f5974-611">在衍生類別中， <xref:System.Windows.Forms.TextBox>，除非在控制項內的文字一律會不論屬性設定值，這個屬性的包裝<xref:System.Windows.Forms.TextBox.TextAlign%2A>屬性設定為`HorizontalAlignment.Left`。</span><span class="sxs-lookup"><span data-stu-id="f5974-611">In the derived class, <xref:System.Windows.Forms.TextBox>, text within the control will always wrap regardless of the property setting of this property unless the <xref:System.Windows.Forms.TextBox.TextAlign%2A> property is set to `HorizontalAlignment.Left`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f5974-612">下列程式碼範例會使用<xref:System.Windows.Forms.TextBox>的衍生類別，以建立多行<xref:System.Windows.Forms.TextBox>具有垂直捲軸控制項。</span><span class="sxs-lookup"><span data-stu-id="f5974-612">The following code example uses <xref:System.Windows.Forms.TextBox>, a derived class, to create a multiline <xref:System.Windows.Forms.TextBox> control with vertical scroll bars.</span></span> <span data-ttu-id="f5974-613">此範例也會使用<xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A>， <xref:System.Windows.Forms.TextBox.AcceptsReturn%2A>，和<xref:System.Windows.Forms.TextBoxBase.WordWrap%2A>屬性，使多行文字方塊控制項適用於建立文字文件。</span><span class="sxs-lookup"><span data-stu-id="f5974-613">This example also uses the <xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A>, <xref:System.Windows.Forms.TextBox.AcceptsReturn%2A>, and <xref:System.Windows.Forms.TextBoxBase.WordWrap%2A> properties to make the multiline text box control useful for creating text documents.</span></span>  
  
 [!code-cpp[Classic TextBoxBase.AcceptsTab Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TextBoxBase.AcceptsTab Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TextBoxBase.AcceptsTab Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TextBoxBase.AcceptsTab Example/CS/source.cs#1)]
 [!code-vb[Classic TextBoxBase.AcceptsTab Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TextBoxBase.AcceptsTab Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>