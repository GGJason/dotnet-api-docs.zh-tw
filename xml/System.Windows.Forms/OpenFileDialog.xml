<Type Name="OpenFileDialog" FullName="System.Windows.Forms.OpenFileDialog">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d43356d06beb24ff2596bda4c8b955c1e484c2b7" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class OpenFileDialog : System.Windows.Forms.FileDialog" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OpenFileDialog extends System.Windows.Forms.FileDialog" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.OpenFileDialog" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OpenFileDialog&#xA;Inherits FileDialog" />
  <TypeSignature Language="C++ CLI" Value="public ref class OpenFileDialog sealed : System::Windows::Forms::FileDialog" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.FileDialog</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="85b42-101">Displays a standard dialog box that prompts the user to open a file.</span>
      <span class="sxs-lookup">
        <span data-stu-id="85b42-101">Displays a standard dialog box that prompts the user to open a file.</span>
      </span>
      <span data-ttu-id="85b42-102">This class cannot be inherited.</span>
      <span class="sxs-lookup">
        <span data-stu-id="85b42-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85b42-103">這個類別可讓您檢查檔案是否存在，並且將它開啟。</span><span class="sxs-lookup"><span data-stu-id="85b42-103">This class allows you to check whether a file exists and to open it.</span></span> <span data-ttu-id="85b42-104"><xref:System.Windows.Forms.OpenFileDialog.ShowReadOnly%2A>屬性會決定是否唯讀核取方塊會出現在對話方塊中。</span><span class="sxs-lookup"><span data-stu-id="85b42-104">The <xref:System.Windows.Forms.OpenFileDialog.ShowReadOnly%2A> property determines whether a read-only check box appears in the dialog box.</span></span> <span data-ttu-id="85b42-105"><xref:System.Windows.Forms.OpenFileDialog.ReadOnlyChecked%2A>屬性會指出是否選取唯讀核取方塊。</span><span class="sxs-lookup"><span data-stu-id="85b42-105">The <xref:System.Windows.Forms.OpenFileDialog.ReadOnlyChecked%2A> property indicates whether the read-only check box is checked.</span></span>  
  
 <span data-ttu-id="85b42-106">大部分的核心功能的中找到這個類別<xref:System.Windows.Forms.FileDialog>類別。</span><span class="sxs-lookup"><span data-stu-id="85b42-106">Most of the core functionality for this class is found in the <xref:System.Windows.Forms.FileDialog> class.</span></span>  

<span data-ttu-id="85b42-107">由右至左在作業系統上，設定包含表單<xref:System.Windows.Forms.Control.RightToLeft>屬性<xref:System.Windows.Forms.RightToLeft.Yes?displayProperty=nameWithType>當地語系化對話方塊**檔案名稱**，**開啟**，和**取消**按鈕。</span><span class="sxs-lookup"><span data-stu-id="85b42-107">On a right-to-left operating system, setting the containing form's <xref:System.Windows.Forms.Control.RightToLeft> property to <xref:System.Windows.Forms.RightToLeft.Yes?displayProperty=nameWithType> localizes the dialog's **File Name**, **Open**, and **Cancel** buttons.</span></span> <span data-ttu-id="85b42-108">如果屬性未設定為<xref:System.Windows.Forms.RightToLeft.Yes?displayProperty=nameWithType>，改為使用英文文字。</span><span class="sxs-lookup"><span data-stu-id="85b42-108">If the property is not set to <xref:System.Windows.Forms.RightToLeft.Yes?displayProperty=nameWithType>, English text is used instead.</span></span>  

 <span data-ttu-id="85b42-109">如果您想要讓使用者能夠選取而非檔案的資料夾，請使用<xref:System.Windows.Forms.FolderBrowserDialog>改為。</span><span class="sxs-lookup"><span data-stu-id="85b42-109">If you want to give the user the ability to select a folder instead of a file, use <xref:System.Windows.Forms.FolderBrowserDialog> instead.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="85b42-110">下列程式碼範例會建立<xref:System.Windows.Forms.OpenFileDialog>管理員、 設定數個屬性，定義檔案延伸模組篩選器和對話方塊的行為，並顯示對話方塊方塊使用<xref:System.Windows.Forms.CommonDialog.ShowDialog%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="85b42-110">The following code example creates an <xref:System.Windows.Forms.OpenFileDialog>, sets several properties to define the file extension filter and dialog behavior, and displays the dialog box using the <xref:System.Windows.Forms.CommonDialog.ShowDialog%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="85b42-111">這個範例需要的表單具有<xref:System.Windows.Forms.Button>放在它的參考和<xref:System.IO>新增到該命名空間。</span><span class="sxs-lookup"><span data-stu-id="85b42-111">The example requires a form with a <xref:System.Windows.Forms.Button> placed on it and a reference to the <xref:System.IO> namespace added to it.</span></span>  
  
 [!code-cpp[Classic OpenFileDialog Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic OpenFileDialog Example/CPP/source.cpp#1)]
 [!code-csharp[Classic OpenFileDialog Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic OpenFileDialog Example/CS/source.cs#1)]
 [!code-vb[Classic OpenFileDialog Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic OpenFileDialog Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.FileDialog" />
    <altmember cref="T:System.Windows.Forms.CommonDialog" />
    <altmember cref="T:System.Windows.Forms.SaveFileDialog" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OpenFileDialog ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.OpenFileDialog.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OpenFileDialog();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="85b42-112">Initializes an instance of the <see cref="T:System.Windows.Forms.OpenFileDialog" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85b42-112">Initializes an instance of the <see cref="T:System.Windows.Forms.OpenFileDialog" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85b42-113">這是預設值，編譯器提供的建構函式<xref:System.Windows.Forms.OpenFileDialog>類別。</span><span class="sxs-lookup"><span data-stu-id="85b42-113">This is the default, compiler-supplied constructor for the <xref:System.Windows.Forms.OpenFileDialog> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckFileExists">
      <MemberSignature Language="C#" Value="public override bool CheckFileExists { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CheckFileExists" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.OpenFileDialog.CheckFileExists" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property CheckFileExists As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CheckFileExists { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="85b42-114">Gets or sets a value indicating whether the dialog box displays a warning if the user specifies a file name that does not exist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85b42-114">Gets or sets a value indicating whether the dialog box displays a warning if the user specifies a file name that does not exist.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="85b42-115">如果當使用者指定不存在的檔名時對話方塊顯示警告訊息，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="85b42-115">
              <see langword="true" /> if the dialog box displays a warning when the user specifies a file name that does not exist; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="85b42-116">預設值是 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="85b42-116">The default value is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.OpenFileDialog.OpenFile" />
        <altmember cref="P:System.Windows.Forms.OpenFileDialog.ReadOnlyChecked" />
      </Docs>
    </Member>
    <Member MemberName="Multiselect">
      <MemberSignature Language="C#" Value="public bool Multiselect { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Multiselect" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.OpenFileDialog.Multiselect" />
      <MemberSignature Language="VB.NET" Value="Public Property Multiselect As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Multiselect { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="85b42-117">Gets or sets a value indicating whether the dialog box allows multiple files to be selected.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85b42-117">Gets or sets a value indicating whether the dialog box allows multiple files to be selected.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="85b42-118">如果對話方塊允許一起或同時選取多個檔案，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="85b42-118">
              <see langword="true" /> if the dialog box allows multiple files to be selected together or concurrently; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="85b42-119">預設值是 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="85b42-119">The default value is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85b42-120">使用<xref:System.Windows.Forms.FileDialog.FileNames%2A>屬性來存取的完整清單中選取檔案名稱。</span><span class="sxs-lookup"><span data-stu-id="85b42-120">Use the <xref:System.Windows.Forms.FileDialog.FileNames%2A> property to access the full list of selected file names.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="85b42-121">下列程式碼範例可讓使用者選取的映像的數目和其顯示在<xref:System.Windows.Forms.PictureBox>表單上的控制項。</span><span class="sxs-lookup"><span data-stu-id="85b42-121">The following code example allows the user to select a number of images and display them in <xref:System.Windows.Forms.PictureBox> controls on a Form.</span></span> <span data-ttu-id="85b42-122">示範如何初始化<xref:System.Windows.Forms.OpenFileDialog>，設定<xref:System.Windows.Forms.FileDialog.Title%2A>和<xref:System.Windows.Forms.FileDialog.Filter%2A>屬性，以及讓使用者選取多個檔案，藉由設定<xref:System.Windows.Forms.OpenFileDialog.Multiselect%2A>屬性設定為 true。</span><span class="sxs-lookup"><span data-stu-id="85b42-122">It demonstrates initializing an <xref:System.Windows.Forms.OpenFileDialog>, setting the <xref:System.Windows.Forms.FileDialog.Title%2A> and <xref:System.Windows.Forms.FileDialog.Filter%2A> properties, and allowing the user to select multiple files by setting the <xref:System.Windows.Forms.OpenFileDialog.Multiselect%2A> property to true.</span></span> <span data-ttu-id="85b42-123">這個程式碼範例假設您的表單已有<xref:System.Windows.Forms.OpenFileDialog>控制項，名為`openFileDialog1`、<xref:System.Windows.Forms.Button>名為`SelectFileButton`，和<xref:System.Windows.Forms.FlowLayoutPanel>名為`flowLayoutPanel1`。</span><span class="sxs-lookup"><span data-stu-id="85b42-123">This code example assumes that your form already has an <xref:System.Windows.Forms.OpenFileDialog> control named `openFileDialog1`, a <xref:System.Windows.Forms.Button> named `SelectFileButton`, and a <xref:System.Windows.Forms.FlowLayoutPanel> named `flowLayoutPanel1`.</span></span>  
  
 [!code-csharp[System.Windows.Forms.OpenFileDialog.MultiSelect#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.OpenFileDialog.MultiSelect/CS/Form1.cs#1)]
 [!code-vb[System.Windows.Forms.OpenFileDialog.MultiSelect#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.OpenFileDialog.MultiSelect/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.FileDialog.FileNames" />
        <altmember cref="P:System.Windows.Forms.FileDialog.Filter" />
      </Docs>
    </Member>
    <Member MemberName="OpenFile">
      <MemberSignature Language="C#" Value="public System.IO.Stream OpenFile ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Stream OpenFile() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.OpenFileDialog.OpenFile" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenFile () As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Stream ^ OpenFile();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="85b42-124">Opens the file selected by the user, with read-only permission.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85b42-124">Opens the file selected by the user, with read-only permission.</span>
          </span>
          <span data-ttu-id="85b42-125">The file is specified by the <see cref="P:System.Windows.Forms.FileDialog.FileName" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85b42-125">The file is specified by the <see cref="P:System.Windows.Forms.FileDialog.FileName" /> property.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="85b42-126">A <see cref="T:System.IO.Stream" /> that specifies the read-only file selected by the user.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85b42-126">A <see cref="T:System.IO.Stream" /> that specifies the read-only file selected by the user.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85b42-127"><xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A>方法用來提供快速從對話方塊中開啟檔案的功能。</span><span class="sxs-lookup"><span data-stu-id="85b42-127">The <xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A> method is used to provide a facility to quickly open a file from the dialog box.</span></span> <span data-ttu-id="85b42-128">基於安全的唯讀模式中開啟檔案。</span><span class="sxs-lookup"><span data-stu-id="85b42-128">The file is opened in read-only mode for security purposes.</span></span> <span data-ttu-id="85b42-129">若要開啟檔案讀取/寫入模式中，您必須使用另一種方法，例如<xref:System.IO.FileStream>。</span><span class="sxs-lookup"><span data-stu-id="85b42-129">To open a file in read/write mode, you must use another method, such as <xref:System.IO.FileStream>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="85b42-130">下列程式碼範例會示範如何使用 <xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="85b42-130">The following code example demonstrates how to use the <xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A> method.</span></span>  
  
 [!code-cpp[Classic OpenFileDialog Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic OpenFileDialog Example/CPP/source.cpp#1)]
 [!code-csharp[Classic OpenFileDialog Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic OpenFileDialog Example/CS/source.cs#1)]
 [!code-vb[Classic OpenFileDialog Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic OpenFileDialog Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="85b42-131">The file name is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85b42-131">The file name is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileDialogPermission">
          <span data-ttu-id="85b42-132">若要開啟的檔案。</span>
          <span class="sxs-lookup">
            <span data-stu-id="85b42-132">to open a file.</span>
          </span>
          <span data-ttu-id="85b42-133">列舉型別相關聯： <see cref="F:System.Security.Permissions.FileDialogPermissionAccess.Open" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="85b42-133">Associated enumeration: <see cref="F:System.Security.Permissions.FileDialogPermissionAccess.Open" />.</span>
          </span>
        </permission>
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="P:System.Windows.Forms.OpenFileDialog.CheckFileExists" />
        <altmember cref="P:System.Windows.Forms.OpenFileDialog.ReadOnlyChecked" />
      </Docs>
    </Member>
    <Member MemberName="ReadOnlyChecked">
      <MemberSignature Language="C#" Value="public bool ReadOnlyChecked { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReadOnlyChecked" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.OpenFileDialog.ReadOnlyChecked" />
      <MemberSignature Language="VB.NET" Value="Public Property ReadOnlyChecked As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ReadOnlyChecked { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="85b42-134">Gets or sets a value indicating whether the read-only check box is selected.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85b42-134">Gets or sets a value indicating whether the read-only check box is selected.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="85b42-135">如果選取唯讀核取方塊，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="85b42-135">
              <see langword="true" /> if the read-only check box is selected; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="85b42-136">預設值是 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="85b42-136">The default value is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85b42-137"><xref:System.Windows.Forms.OpenFileDialog.ReadOnlyChecked%2A>狀態不會影響讀取/寫入模式，<xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A?displayProperty=nameWithType>使用開啟的對話方塊中選取的檔案。</span><span class="sxs-lookup"><span data-stu-id="85b42-137">The <xref:System.Windows.Forms.OpenFileDialog.ReadOnlyChecked%2A> state does not affect the read/write mode that <xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A?displayProperty=nameWithType> uses to open a file selected in the dialog box.</span></span> <span data-ttu-id="85b42-138"><xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A> 會在唯讀模式開啟檔案。</span><span class="sxs-lookup"><span data-stu-id="85b42-138"><xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A> will always open the file in read-only mode.</span></span>  
  
 <span data-ttu-id="85b42-139"><xref:System.Windows.Forms.OpenFileDialog.ShowReadOnly%2A>屬性必須先設定才會出現在對話方塊中的 [唯讀] 核取方塊的順序。</span><span class="sxs-lookup"><span data-stu-id="85b42-139">The <xref:System.Windows.Forms.OpenFileDialog.ShowReadOnly%2A> property must be set before in order for the read-only check box to appear in the dialog box.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="85b42-140">下列程式碼範例示範如何使用<xref:System.Windows.Forms.OpenFileDialog.ReadOnlyChecked%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="85b42-140">The following code example demonstrates the use of the <xref:System.Windows.Forms.OpenFileDialog.ReadOnlyChecked%2A> property.</span></span> <span data-ttu-id="85b42-141">此範例會顯示<xref:System.Windows.Forms.OpenFileDialog>方塊<xref:System.Windows.Forms.OpenFileDialog.ShowReadOnly%2A>屬性設定為`true`。</span><span class="sxs-lookup"><span data-stu-id="85b42-141">This example displays the <xref:System.Windows.Forms.OpenFileDialog> box with the <xref:System.Windows.Forms.OpenFileDialog.ShowReadOnly%2A> property set to `true`.</span></span> <span data-ttu-id="85b42-142">如果使用者在唯讀模式中，開啟檔案的選項<xref:System.Windows.Forms.OpenFileDialog.ReadOnlyChecked%2A>屬性評估為`true`，而<xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A>方法用來開啟檔案。</span><span class="sxs-lookup"><span data-stu-id="85b42-142">If the user clicks the option to open the file in read-only mode, the <xref:System.Windows.Forms.OpenFileDialog.ReadOnlyChecked%2A> property evaluates to `true`, and the <xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A> method is used to open the file.</span></span> <span data-ttu-id="85b42-143">否則，<xref:System.IO.FileStream>類別用來讀取/寫入模式中開啟檔案。</span><span class="sxs-lookup"><span data-stu-id="85b42-143">Otherwise, the <xref:System.IO.FileStream> class is used to open the file in read/write mode.</span></span>  
  
 [!code-cpp[DlgOpenFileReadOnly#1](~/samples/snippets/cpp/VS_Snippets_Winforms/DlgOpenFileReadOnly/CPP/form1.cpp#1)]
 [!code-csharp[DlgOpenFileReadOnly#1](~/samples/snippets/csharp/VS_Snippets_Winforms/DlgOpenFileReadOnly/CS/form1.cs#1)]
 [!code-vb[DlgOpenFileReadOnly#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DlgOpenFileReadOnly/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.OpenFileDialog.ShowReadOnly" />
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public override void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.OpenFileDialog.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Reset();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="85b42-144">Resets all properties to their default values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85b42-144">Resets all properties to their default values.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SafeFileName">
      <MemberSignature Language="C#" Value="public string SafeFileName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SafeFileName" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.OpenFileDialog.SafeFileName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SafeFileName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SafeFileName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="85b42-145">Gets the file name and extension for the file selected in the dialog box.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85b42-145">Gets the file name and extension for the file selected in the dialog box.</span>
          </span>
          <span data-ttu-id="85b42-146">The file name does not include the path.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85b42-146">The file name does not include the path.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="85b42-147">對話方塊中選取之檔案的檔案名稱和副檔名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="85b42-147">The file name and extension for the file selected in the dialog box.</span>
          </span>
          <span data-ttu-id="85b42-148">檔案名稱不包含路徑。</span>
          <span class="sxs-lookup">
            <span data-stu-id="85b42-148">The file name does not include the path.</span>
          </span>
          <span data-ttu-id="85b42-149">預設值為空字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="85b42-149">The default value is an empty string.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85b42-150">安全的檔案名稱 （只要檔案名稱與不具路徑的延伸模組） 可以用來改善應用程式的安全性，因為它不會公開路徑資訊。</span><span class="sxs-lookup"><span data-stu-id="85b42-150">A safe file name (just the file name and extension without a path) can be used to improve security for applications because it does not expose path information.</span></span> <span data-ttu-id="85b42-151">這個屬性應為使用有限的信任來執行的程式碼存取。</span><span class="sxs-lookup"><span data-stu-id="85b42-151">This property should be accessible to code running with limited trust.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SafeFileNames">
      <MemberSignature Language="C#" Value="public string[] SafeFileNames { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] SafeFileNames" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.OpenFileDialog.SafeFileNames" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SafeFileNames As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ SafeFileNames { cli::array &lt;System::String ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="85b42-152">Gets an array of file names and extensions for all the selected files in the dialog box.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85b42-152">Gets an array of file names and extensions for all the selected files in the dialog box.</span>
          </span>
          <span data-ttu-id="85b42-153">The file names do not include the path.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85b42-153">The file names do not include the path.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="85b42-154">對話方塊中所有選取檔案之檔案名稱和副檔名的陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="85b42-154">An array of file names and extensions for all the selected files in the dialog box.</span>
          </span>
          <span data-ttu-id="85b42-155">檔案名稱不包含路徑。</span>
          <span class="sxs-lookup">
            <span data-stu-id="85b42-155">The file names do not include the path.</span>
          </span>
          <span data-ttu-id="85b42-156">如果未選取檔案，則會傳回空陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="85b42-156">If no files are selected, an empty array is returned.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85b42-157">安全的檔案名稱 （只要檔案名稱與不具路徑的延伸模組） 可以用來改善應用程式的安全性，因為它不會公開路徑資訊。</span><span class="sxs-lookup"><span data-stu-id="85b42-157">A safe file name (just the file name and extension without a path) can be used to improve security for applications because it does not expose path information.</span></span> <span data-ttu-id="85b42-158">這個屬性應為使用有限的信任來執行的程式碼存取。</span><span class="sxs-lookup"><span data-stu-id="85b42-158">This property should be accessible to code running with limited trust.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowReadOnly">
      <MemberSignature Language="C#" Value="public bool ShowReadOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.OpenFileDialog.ShowReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowReadOnly { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="85b42-159">Gets or sets a value indicating whether the dialog box contains a read-only check box.</span>
          <span class="sxs-lookup">
            <span data-stu-id="85b42-159">Gets or sets a value indicating whether the dialog box contains a read-only check box.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="85b42-160">如果對話方塊包含唯讀核取方塊，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="85b42-160">
              <see langword="true" /> if the dialog box contains a read-only check box; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="85b42-161">預設值是 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="85b42-161">The default value is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="85b42-162">下列程式碼範例示範如何使用<xref:System.Windows.Forms.OpenFileDialog.ShowReadOnly%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="85b42-162">The following code example demonstrates the use of the <xref:System.Windows.Forms.OpenFileDialog.ShowReadOnly%2A> property.</span></span> <span data-ttu-id="85b42-163">此範例會顯示<xref:System.Windows.Forms.OpenFileDialog>方塊<xref:System.Windows.Forms.OpenFileDialog.ShowReadOnly%2A>屬性設定為`true`。</span><span class="sxs-lookup"><span data-stu-id="85b42-163">This example displays the <xref:System.Windows.Forms.OpenFileDialog> box with the <xref:System.Windows.Forms.OpenFileDialog.ShowReadOnly%2A> property set to `true`.</span></span> <span data-ttu-id="85b42-164">如果使用者在唯讀模式中，開啟檔案的選項<xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A>方法用來開啟檔案。</span><span class="sxs-lookup"><span data-stu-id="85b42-164">If the user clicks the option to open the file in read-only mode, the <xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A> method is used to open the file.</span></span> <span data-ttu-id="85b42-165">否則，<xref:System.IO.FileStream>類別用來讀取/寫入模式中開啟檔案。</span><span class="sxs-lookup"><span data-stu-id="85b42-165">Otherwise, the <xref:System.IO.FileStream> class is used to open the file in read/write mode.</span></span>  
  
 [!code-cpp[DlgOpenFileReadOnly#1](~/samples/snippets/cpp/VS_Snippets_Winforms/DlgOpenFileReadOnly/CPP/form1.cpp#1)]
 [!code-csharp[DlgOpenFileReadOnly#1](~/samples/snippets/csharp/VS_Snippets_Winforms/DlgOpenFileReadOnly/CS/form1.cs#1)]
 [!code-vb[DlgOpenFileReadOnly#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DlgOpenFileReadOnly/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.OpenFileDialog.ReadOnlyChecked" />
      </Docs>
    </Member>
  </Members>
</Type>