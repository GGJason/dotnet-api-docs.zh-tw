<Type Name="ApplicationContext" FullName="System.Windows.Forms.ApplicationContext">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="170527b2b9bd8d0b547499e1581bacb86fb5c8bd" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30639302" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ApplicationContext : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ApplicationContext extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ApplicationContext" />
  <TypeSignature Language="VB.NET" Value="Public Class ApplicationContext&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class ApplicationContext : IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="0fb25-101">指定應用程式執行緒的內容資訊。</span>
      <span class="sxs-lookup">
        <span data-stu-id="0fb25-101">Specifies the contextual information about an application thread.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0fb25-102">您可以使用<xref:System.Windows.Forms.ApplicationContext>類別重新定義導致訊息迴圈，以結束的情況。</span><span class="sxs-lookup"><span data-stu-id="0fb25-102">You can use the <xref:System.Windows.Forms.ApplicationContext> class to redefine the circumstances that cause a message loop to exit.</span></span> <span data-ttu-id="0fb25-103">根據預設，<xref:System.Windows.Forms.ApplicationContext>接聽<xref:System.Windows.Forms.Form.Closed>事件之應用程式的主要<xref:System.Windows.Forms.Form>，然後結束執行緒的訊息迴圈。</span><span class="sxs-lookup"><span data-stu-id="0fb25-103">By default, the <xref:System.Windows.Forms.ApplicationContext> listens to the <xref:System.Windows.Forms.Form.Closed> event on the application's main <xref:System.Windows.Forms.Form>, then exits the thread's message loop.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0fb25-104">下列程式碼範例會顯示兩種形式，並結束應用程式，這兩個表單關閉時。</span><span class="sxs-lookup"><span data-stu-id="0fb25-104">The following code example displays two forms and exits the application when both forms are closed.</span></span> <span data-ttu-id="0fb25-105">當應用程式啟動，並結束時，會記住每個表單的位置。</span><span class="sxs-lookup"><span data-stu-id="0fb25-105">When the application starts and exits, the position of each form is remembered.</span></span> <span data-ttu-id="0fb25-106">這個範例示範如何使用<xref:System.Windows.Forms.ApplicationContext>，連同`Application.Run(context)`方法，以在應用程式啟動時顯示多個表單。</span><span class="sxs-lookup"><span data-stu-id="0fb25-106">This example demonstrates how to use an <xref:System.Windows.Forms.ApplicationContext>, along with the `Application.Run(context)` method, to display multiple forms when the application starts.</span></span>  
  
 <span data-ttu-id="0fb25-107">類別`MyApplicationContext`繼承自<xref:System.Windows.Forms.ApplicationContext>和會持續追蹤每個表單會關閉，而在這兩個時結束目前的執行緒時。</span><span class="sxs-lookup"><span data-stu-id="0fb25-107">The class `MyApplicationContext` inherits from <xref:System.Windows.Forms.ApplicationContext> and keeps track when each form is closed, and exits the current thread when they both are.</span></span> <span data-ttu-id="0fb25-108">類別會儲存使用者的每個表單的位置。</span><span class="sxs-lookup"><span data-stu-id="0fb25-108">The class stores the positions of each form for the user.</span></span> <span data-ttu-id="0fb25-109">表單位置的資料儲存在檔案標題為`Appdata.txt`位置取決於建立<xref:System.Windows.Forms.Application.UserAppDataPath%2A>。</span><span class="sxs-lookup"><span data-stu-id="0fb25-109">The form position data is stored in a file titled `Appdata.txt` that is created in the location determined by <xref:System.Windows.Forms.Application.UserAppDataPath%2A>.</span></span>  
  
 <span data-ttu-id="0fb25-110">`Main`方法呼叫`Application.Run(context)`啟動應用程式中，指定<xref:System.Windows.Forms.ApplicationContext>。</span><span class="sxs-lookup"><span data-stu-id="0fb25-110">The `Main` method calls `Application.Run(context)` to start the application, given the <xref:System.Windows.Forms.ApplicationContext>.</span></span>  
  
 [!code-cpp[Application#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Application/CPP/source.cpp#1)]
 [!code-csharp[Application#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Application/CS/source.cs#1)]
 [!code-vb[Application#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Application/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0fb25-111">初始化 <see cref="T:System.Windows.Forms.ApplicationContext" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fb25-111">Initializes a new instance of the <see cref="T:System.Windows.Forms.ApplicationContext" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ApplicationContext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ApplicationContext.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ApplicationContext();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0fb25-112">使用無內容的方式，初始化 <see cref="T:System.Windows.Forms.ApplicationContext" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fb25-112">Initializes a new instance of the <see cref="T:System.Windows.Forms.ApplicationContext" /> class with no context.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ApplicationContext (System.Windows.Forms.Form mainForm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.Form mainForm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ApplicationContext.#ctor(System.Windows.Forms.Form)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (mainForm As Form)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ApplicationContext(System::Windows::Forms::Form ^ mainForm);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="mainForm" Type="System.Windows.Forms.Form" />
      </Parameters>
      <Docs>
        <param name="mainForm">
          <span data-ttu-id="0fb25-113">做為內容使用之應用程式的主要 <see cref="T:System.Windows.Forms.Form" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fb25-113">The main <see cref="T:System.Windows.Forms.Form" /> of the application to use for context.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0fb25-114">使用指定的 <see cref="T:System.Windows.Forms.ApplicationContext" /> 初始化 <see cref="T:System.Windows.Forms.Form" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fb25-114">Initializes a new instance of the <see cref="T:System.Windows.Forms.ApplicationContext" /> class with the specified <see cref="T:System.Windows.Forms.Form" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0fb25-115">如果<xref:System.Windows.Forms.ApplicationContext.OnMainFormClosed%2A>是未覆寫，執行緒的訊息迴圈時就會終止<xref:System.Windows.Forms.ApplicationContext.MainForm%2A>已關閉。</span><span class="sxs-lookup"><span data-stu-id="0fb25-115">If <xref:System.Windows.Forms.ApplicationContext.OnMainFormClosed%2A> is not overridden, the message loop of the thread terminates when <xref:System.Windows.Forms.ApplicationContext.MainForm%2A> is closed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0fb25-116">釋放 <see cref="T:System.Windows.Forms.ApplicationContext" /> 使用的資源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fb25-116">Releases the resources used by the <see cref="T:System.Windows.Forms.ApplicationContext" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ApplicationContext.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0fb25-117">釋放 <see cref="T:System.Windows.Forms.ApplicationContext" /> 所使用的所有資源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fb25-117">Releases all resources used by the <see cref="T:System.Windows.Forms.ApplicationContext" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0fb25-118"><xref:System.Windows.Forms.ApplicationContext.Dispose> 使用完畢時，請呼叫 <xref:System.Windows.Forms.ApplicationContext>。</span><span class="sxs-lookup"><span data-stu-id="0fb25-118">Call <xref:System.Windows.Forms.ApplicationContext.Dispose> when you are finished using the <xref:System.Windows.Forms.ApplicationContext>.</span></span> <span data-ttu-id="0fb25-119"><xref:System.Windows.Forms.ApplicationContext.Dispose> 方法會將 <xref:System.Windows.Forms.ApplicationContext> 保留在無法使用的狀態。</span><span class="sxs-lookup"><span data-stu-id="0fb25-119">The <xref:System.Windows.Forms.ApplicationContext.Dispose> method leaves the <xref:System.Windows.Forms.ApplicationContext> in an unusable state.</span></span> <span data-ttu-id="0fb25-120">在呼叫<xref:System.Windows.Forms.ApplicationContext.Dispose>，您必須釋放所有參考<xref:System.Windows.Forms.ApplicationContext>讓記憶體回收行程可以回收記憶體的<xref:System.Windows.Forms.ApplicationContext>所佔用。</span><span class="sxs-lookup"><span data-stu-id="0fb25-120">After calling <xref:System.Windows.Forms.ApplicationContext.Dispose>, you must release all references to the <xref:System.Windows.Forms.ApplicationContext> so the garbage collector can reclaim the memory that the <xref:System.Windows.Forms.ApplicationContext> was occupying.</span></span> <span data-ttu-id="0fb25-121">如需詳細資訊，請參閱[清除 Unmanaged 資源上](~/docs/standard/garbage-collection/unmanaged.md)和[實作 Dispose 方法](~/docs/standard/garbage-collection/implementing-dispose.md)。</span><span class="sxs-lookup"><span data-stu-id="0fb25-121">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0fb25-122">在您釋放最後一個 <xref:System.Windows.Forms.ApplicationContext.Dispose> 參考之前，請務必呼叫 <xref:System.Windows.Forms.ApplicationContext>。</span><span class="sxs-lookup"><span data-stu-id="0fb25-122">Always call <xref:System.Windows.Forms.ApplicationContext.Dispose> before you release your last reference to the <xref:System.Windows.Forms.ApplicationContext>.</span></span> <span data-ttu-id="0fb25-123">否則工作窗格所使用的資源不會釋放，直到記憶體回收行程呼叫 <xref:System.Windows.Forms.ApplicationContext> 物件的 `Finalize` 方法。</span><span class="sxs-lookup"><span data-stu-id="0fb25-123">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Windows.Forms.ApplicationContext> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ApplicationContext.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="0fb25-124">
            <see langword="true" /> 表示釋放 Managed 和 Unmanaged 資源，<see langword="false" /> 則表示只釋放 Unmanaged 資源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fb25-124">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0fb25-125">釋放 <see cref="T:System.Windows.Forms.ApplicationContext" /> 所使用的 Unmanaged 資源，並選擇性地釋放 Managed 資源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fb25-125">Releases the unmanaged resources used by the <see cref="T:System.Windows.Forms.ApplicationContext" /> and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0fb25-126">這個方法會呼叫公用`Dispose()`方法和<xref:System.Object.Finalize%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="0fb25-126">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="0fb25-127">`Dispose()` 叫用受保護<xref:System.Windows.Forms.ApplicationContext.Dispose%28System.Boolean%29>方法`disposing`參數設定為`true`。</span><span class="sxs-lookup"><span data-stu-id="0fb25-127">`Dispose()` invokes the protected <xref:System.Windows.Forms.ApplicationContext.Dispose%28System.Boolean%29> method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="0fb25-128"><xref:System.Object.Finalize%2A> 叫用`Dispose`與`disposing`設`false`。</span><span class="sxs-lookup"><span data-stu-id="0fb25-128"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="0fb25-129">當`disposing`參數為 true，這個方法的任何 managed 物件所持有的資源全部釋出這個<xref:System.Windows.Forms.ApplicationContext>參考。</span><span class="sxs-lookup"><span data-stu-id="0fb25-129">When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.Windows.Forms.ApplicationContext> references.</span></span> <span data-ttu-id="0fb25-130">這個方法會叫用每個參考物件的 `Dispose()` 方法。</span><span class="sxs-lookup"><span data-stu-id="0fb25-130">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="0fb25-131">
              <see langword="Dispose" /> 可以被其他物件呼叫多次。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0fb25-131">
                <see langword="Dispose" /> can be called multiple times by other objects.</span>
            </span>
            <span data-ttu-id="0fb25-132">覆寫 <see langword="Dispose(Boolean)" /> 時，請小心不要參考到先前已在對 <see langword="Dispose" /> 的早期呼叫中被處置 (Dispose) 的物件。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0fb25-132">When overriding <see langword="Dispose(Boolean)" />, be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span>
            </span>
            <span data-ttu-id="0fb25-133">如需有關如何實作<see langword="Dispose(Boolean)" />，請參閱[實作 Dispose 方法](~/docs/standard/garbage-collection/implementing-dispose.md)。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0fb25-133">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span>
            </span>
            <span data-ttu-id="0fb25-134">如需有關<see langword="Dispose" />和<see cref="M:System.Object.Finalize" />，請參閱[清除 Unmanaged 資源上](~/docs/standard/garbage-collection/unmanaged.md)和[覆寫 Finalize 方法](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)。</span>
            <span class="sxs-lookup">
              <span data-stu-id="0fb25-134">For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="ExitThread">
      <MemberSignature Language="C#" Value="public void ExitThread ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ExitThread() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ApplicationContext.ExitThread" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExitThread ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ExitThread();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0fb25-135">結束執行緒的訊息迴圈。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fb25-135">Terminates the message loop of the thread.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0fb25-136">此方法會呼叫 <xref:System.Windows.Forms.ApplicationContext.ExitThreadCore%2A>。</span><span class="sxs-lookup"><span data-stu-id="0fb25-136">This method calls <xref:System.Windows.Forms.ApplicationContext.ExitThreadCore%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0fb25-137"><xref:System.Windows.Forms.ApplicationContext.ExitThread%2A> 和<xref:System.Windows.Forms.ApplicationContext.ExitThreadCore%2A>不要實際上不會造成執行緒終止。</span><span class="sxs-lookup"><span data-stu-id="0fb25-137"><xref:System.Windows.Forms.ApplicationContext.ExitThread%2A> and <xref:System.Windows.Forms.ApplicationContext.ExitThreadCore%2A> do not actually cause the thread to terminate.</span></span> <span data-ttu-id="0fb25-138">這些方法會引發<xref:System.Windows.Forms.Application.ThreadExit>事件要<xref:System.Windows.Forms.Application>物件接聽。</span><span class="sxs-lookup"><span data-stu-id="0fb25-138">These methods raise the <xref:System.Windows.Forms.Application.ThreadExit> event to which the <xref:System.Windows.Forms.Application> object listens.</span></span> <span data-ttu-id="0fb25-139"><xref:System.Windows.Forms.Application>物件接著會結束執行緒。</span><span class="sxs-lookup"><span data-stu-id="0fb25-139">The <xref:System.Windows.Forms.Application> object then terminates the thread.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0fb25-140">下列程式碼範例是在此範例的摘錄<xref:System.Windows.Forms.ApplicationContext>類別概觀。</span><span class="sxs-lookup"><span data-stu-id="0fb25-140">The following code example is an excerpt from the example in the <xref:System.Windows.Forms.ApplicationContext> class overview.</span></span> <span data-ttu-id="0fb25-141">這個範例會追蹤開啟的表單，並關閉所有表單時，結束目前的執行緒。</span><span class="sxs-lookup"><span data-stu-id="0fb25-141">This example keeps track of open forms and exits the current thread when all forms are closed.</span></span> <span data-ttu-id="0fb25-142">`OnFormClosed`方法是事件處理常式<xref:System.Windows.Forms.Form.Closed>事件。</span><span class="sxs-lookup"><span data-stu-id="0fb25-142">The `OnFormClosed` method is an event handler for the <xref:System.Windows.Forms.Form.Closed> event.</span></span> <span data-ttu-id="0fb25-143">開啟表單的數目等於 0 時，目前執行緒已結束藉由呼叫<xref:System.Windows.Forms.ApplicationContext.ExitThread%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="0fb25-143">When the number of open forms is equal to 0, then current thread is exited by calling the <xref:System.Windows.Forms.ApplicationContext.ExitThread%2A> method.</span></span> <span data-ttu-id="0fb25-144">數種格式會追蹤遞增`formCount`變數時顯示表單，並遞減表單關閉時。</span><span class="sxs-lookup"><span data-stu-id="0fb25-144">The number of forms is tracked by incrementing the `formCount` variable when a form is shown, and decrementing it when a form is closed.</span></span>  
  
 <span data-ttu-id="0fb25-145">為了簡潔起見，不會顯示一些程式碼。</span><span class="sxs-lookup"><span data-stu-id="0fb25-145">Some code is not shown for the purpose of brevity.</span></span> <span data-ttu-id="0fb25-146">請參閱<xref:System.Windows.Forms.ApplicationContext>整個程式碼清單。</span><span class="sxs-lookup"><span data-stu-id="0fb25-146">See <xref:System.Windows.Forms.ApplicationContext> for the whole code listing.</span></span>  
  
 [!code-cpp[Application#3](~/samples/snippets/cpp/VS_Snippets_Winforms/Application/CPP/source.cpp#3)]
 [!code-csharp[Application#3](~/samples/snippets/csharp/VS_Snippets_Winforms/Application/CS/source.cs#3)]
 [!code-vb[Application#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Application/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExitThreadCore">
      <MemberSignature Language="C#" Value="protected virtual void ExitThreadCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ExitThreadCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ApplicationContext.ExitThreadCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ExitThreadCore ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ExitThreadCore();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0fb25-147">結束執行緒的訊息迴圈。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fb25-147">Terminates the message loop of the thread.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0fb25-148">這個方法從呼叫<xref:System.Windows.Forms.ApplicationContext.ExitThread%2A>。</span><span class="sxs-lookup"><span data-stu-id="0fb25-148">This method is called from <xref:System.Windows.Forms.ApplicationContext.ExitThread%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0fb25-149"><xref:System.Windows.Forms.ApplicationContext.ExitThread%2A> 和<xref:System.Windows.Forms.ApplicationContext.ExitThreadCore%2A>不要實際上不會造成執行緒終止。</span><span class="sxs-lookup"><span data-stu-id="0fb25-149"><xref:System.Windows.Forms.ApplicationContext.ExitThread%2A> and <xref:System.Windows.Forms.ApplicationContext.ExitThreadCore%2A> do not actually cause the thread to terminate.</span></span> <span data-ttu-id="0fb25-150">這些方法會引發<xref:System.Windows.Forms.Application.ThreadExit>事件要<xref:System.Windows.Forms.Application>物件接聽。</span><span class="sxs-lookup"><span data-stu-id="0fb25-150">These methods raise the <xref:System.Windows.Forms.Application.ThreadExit> event to which the <xref:System.Windows.Forms.Application> object listens.</span></span> <span data-ttu-id="0fb25-151"><xref:System.Windows.Forms.Application>物件接著會結束執行緒。</span><span class="sxs-lookup"><span data-stu-id="0fb25-151">The <xref:System.Windows.Forms.Application> object then terminates the thread.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~ApplicationContext ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ApplicationContext.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!ApplicationContext ()" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0fb25-152">嘗試在應用程式內容經由記憶體回收之前，釋放資源和執行其他的清除作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fb25-152">Attempts to free resources and perform other cleanup operations before the application context is reclaimed by garbage collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0fb25-153">這個方法會覆寫<xref:System.Object.Finalize%2A?displayProperty=nameWithType>並清除資源，藉由呼叫`Dispose(false)`。</span><span class="sxs-lookup"><span data-stu-id="0fb25-153">This method overrides <xref:System.Object.Finalize%2A?displayProperty=nameWithType> and cleans up resources by calling `Dispose(false)`.</span></span> <span data-ttu-id="0fb25-154">覆寫 `Dispose(Boolean)` 以自訂清除。</span><span class="sxs-lookup"><span data-stu-id="0fb25-154">Override `Dispose(Boolean)` to customize the cleanup.</span></span>  
  
 <span data-ttu-id="0fb25-155">應用程式程式碼不應該呼叫這個方法。物件的`Finalize`方法會自動叫用記憶體回收期間，除非已停用記憶體回收行程的最終處理的呼叫所<xref:System.GC.SuppressFinalize%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="0fb25-155">Application code should not call this method; an object's `Finalize` method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the <xref:System.GC.SuppressFinalize%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="0fb25-156">如需詳細資訊，請參閱[Finalize 方法和解構函式](http://msdn.microsoft.com/library/fd376774-1643-499b-869e-9546a3aeea70)，[清除 Unmanaged 資源上](~/docs/standard/garbage-collection/unmanaged.md)，和[覆寫 Finalize 方法](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)。</span><span class="sxs-lookup"><span data-stu-id="0fb25-156">For more information, see [Finalize Methods and Destructors](http://msdn.microsoft.com/library/fd376774-1643-499b-869e-9546a3aeea70), [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md), and [Overriding the Finalize Method](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MainForm">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Form MainForm { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Form MainForm" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ApplicationContext.MainForm" />
      <MemberSignature Language="VB.NET" Value="Public Property MainForm As Form" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Form ^ MainForm { System::Windows::Forms::Form ^ get(); void set(System::Windows::Forms::Form ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Form</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0fb25-157">取得或設定要當做內容使用的 <see cref="T:System.Windows.Forms.Form" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fb25-157">Gets or sets the <see cref="T:System.Windows.Forms.Form" /> to use as context.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0fb25-158">要當做內容使用的 <see cref="T:System.Windows.Forms.Form" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fb25-158">The <see cref="T:System.Windows.Forms.Form" /> to use as context.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0fb25-159">此屬性會決定主要<xref:System.Windows.Forms.Form>此內容。</span><span class="sxs-lookup"><span data-stu-id="0fb25-159">This property determines the main <xref:System.Windows.Forms.Form> for this context.</span></span> <span data-ttu-id="0fb25-160">這個屬性可以隨時變更。</span><span class="sxs-lookup"><span data-stu-id="0fb25-160">This property can change at any time.</span></span> <span data-ttu-id="0fb25-161">如果<xref:System.Windows.Forms.ApplicationContext.OnMainFormClosed%2A>是未覆寫，執行緒的訊息迴圈時就會終止`mainForm`參數會關閉。</span><span class="sxs-lookup"><span data-stu-id="0fb25-161">If <xref:System.Windows.Forms.ApplicationContext.OnMainFormClosed%2A> is not overridden, the message loop of the thread terminates when the `mainForm` parameter closes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMainFormClosed">
      <MemberSignature Language="C#" Value="protected virtual void OnMainFormClosed (object sender, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMainFormClosed(object sender, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ApplicationContext.OnMainFormClosed(System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMainFormClosed (sender As Object, e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMainFormClosed(System::Object ^ sender, EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">
          <span data-ttu-id="0fb25-162">引發事件的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fb25-162">The object that raised the event.</span>
          </span>
        </param>
        <param name="e">
          <span data-ttu-id="0fb25-163">包含事件資料的 <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fb25-163">The <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0fb25-164">呼叫會引發 <see cref="M:System.Windows.Forms.ApplicationContext.ExitThreadCore" /> 事件的 <see cref="E:System.Windows.Forms.ApplicationContext.ThreadExit" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fb25-164">Calls <see cref="M:System.Windows.Forms.ApplicationContext.ExitThreadCore" />, which raises the <see cref="E:System.Windows.Forms.ApplicationContext.ThreadExit" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0fb25-165">這個方法的預設實作會呼叫<xref:System.Windows.Forms.ApplicationContext.ExitThreadCore%2A>。</span><span class="sxs-lookup"><span data-stu-id="0fb25-165">The default implementation of this method calls <xref:System.Windows.Forms.ApplicationContext.ExitThreadCore%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Tag">
      <MemberSignature Language="C#" Value="public object Tag { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Tag" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ApplicationContext.Tag" />
      <MemberSignature Language="VB.NET" Value="Public Property Tag As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Tag { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.StringConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0fb25-166">取得或設定包含控制項相關資料的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fb25-166">Gets or sets an object that contains data about the control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0fb25-167">包含有關控制項資料的 <see cref="T:System.Object" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fb25-167">An <see cref="T:System.Object" /> that contains data about the control.</span>
          </span>
          <span data-ttu-id="0fb25-168">預設值為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fb25-168">The default is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0fb25-169">衍生型別<xref:System.Object>類別可以指派給這個屬性。</span><span class="sxs-lookup"><span data-stu-id="0fb25-169">Any type derived from the <xref:System.Object> class can be assigned to this property.</span></span> <span data-ttu-id="0fb25-170">如果<xref:System.Windows.Forms.ApplicationContext.Tag%2A>屬性透過 Windows Form 設計工具設定，可以指定只會將文字。</span><span class="sxs-lookup"><span data-stu-id="0fb25-170">If the <xref:System.Windows.Forms.ApplicationContext.Tag%2A> property is set through the Windows Forms designer, only text can be assigned.</span></span>  
  
 <span data-ttu-id="0fb25-171">常見用途<xref:System.Windows.Forms.ApplicationContext.Tag%2A>屬性是儲存緊密地與控制項相關聯的資料。</span><span class="sxs-lookup"><span data-stu-id="0fb25-171">A common use for the <xref:System.Windows.Forms.ApplicationContext.Tag%2A> property is to store data that is closely associated with the control.</span></span> <span data-ttu-id="0fb25-172">例如，如果您有顯示客戶的相關資訊的控制項，您可能會儲存<xref:System.Data.DataSet>，其中包含該控制項中的客戶的訂單記錄<xref:System.Windows.Forms.ApplicationContext.Tag%2A>屬性，以便快速存取資料。</span><span class="sxs-lookup"><span data-stu-id="0fb25-172">For example, if you have a control that displays information about a customer, you might store a <xref:System.Data.DataSet> that contains the customer's order history in that control's <xref:System.Windows.Forms.ApplicationContext.Tag%2A> property so the data can be accessed quickly.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThreadExit">
      <MemberSignature Language="C#" Value="public event EventHandler ThreadExit;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ThreadExit" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ApplicationContext.ThreadExit" />
      <MemberSignature Language="VB.NET" Value="Public Event ThreadExit As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ThreadExit;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0fb25-173">發生在執行緒的訊息迴圈應該藉著呼叫 <see cref="M:System.Windows.Forms.ApplicationContext.ExitThread" /> 時結束。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fb25-173">Occurs when the message loop of the thread should be terminated, by calling <see cref="M:System.Windows.Forms.ApplicationContext.ExitThread" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0fb25-174">下列程式碼範例示範如何使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="0fb25-174">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="0fb25-175">在範例中，事件處理常式會報告一次<xref:System.Windows.Forms.ApplicationContext.ThreadExit>事件。</span><span class="sxs-lookup"><span data-stu-id="0fb25-175">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.ApplicationContext.ThreadExit> event.</span></span> <span data-ttu-id="0fb25-176">此報表可協助您了解事件發生的時機，並可協助您偵錯。</span><span class="sxs-lookup"><span data-stu-id="0fb25-176">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="0fb25-177">若要報告多個事件或事件經常發生，請考慮更換<xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>與<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>或將訊息附加到多行<xref:System.Windows.Forms.TextBox>。</span><span class="sxs-lookup"><span data-stu-id="0fb25-177">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="0fb25-178">若要執行範例程式碼，將它貼到包含類型的執行個體的專案<xref:System.Windows.Forms.ApplicationContext>名為`ApplicationContext1`。</span><span class="sxs-lookup"><span data-stu-id="0fb25-178">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.ApplicationContext> named `ApplicationContext1`.</span></span> <span data-ttu-id="0fb25-179">請確定事件處理常式關聯<xref:System.Windows.Forms.ApplicationContext.ThreadExit>事件。</span><span class="sxs-lookup"><span data-stu-id="0fb25-179">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.ApplicationContext.ThreadExit> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#75](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#75)]
 [!code-vb[System.Windows.Forms.EventExamples#75](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#75)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>