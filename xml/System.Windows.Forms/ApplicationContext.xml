<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ApplicationContext.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5170527b2b9bd8d0b547499e1581bacb86fb5c8bd.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">170527b2b9bd8d0b547499e1581bacb86fb5c8bd</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.ApplicationContext">
          <source>Specifies the contextual information about an application thread.</source>
          <target state="translated">指定應用程式執行緒的內容資訊。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.ApplicationContext">
          <source>You can use the <ph id="ph1">&lt;xref:System.Windows.Forms.ApplicationContext&gt;</ph> class to redefine the circumstances that cause a message loop to exit.</source>
          <target state="translated">您可以使用<ph id="ph1">&lt;xref:System.Windows.Forms.ApplicationContext&gt;</ph>類別重新定義導致訊息迴圈，以結束的情況。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.ApplicationContext">
          <source>By default, the <ph id="ph1">&lt;xref:System.Windows.Forms.ApplicationContext&gt;</ph> listens to the <ph id="ph2">&lt;xref:System.Windows.Forms.Form.Closed&gt;</ph> event on the application's main <ph id="ph3">&lt;xref:System.Windows.Forms.Form&gt;</ph>, then exits the thread's message loop.</source>
          <target state="translated">根據預設，<ph id="ph1">&lt;xref:System.Windows.Forms.ApplicationContext&gt;</ph>接聽<ph id="ph2">&lt;xref:System.Windows.Forms.Form.Closed&gt;</ph>事件之應用程式的主要<ph id="ph3">&lt;xref:System.Windows.Forms.Form&gt;</ph>，然後結束執行緒的訊息迴圈。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.ApplicationContext">
          <source>The following code example displays two forms and exits the application when both forms are closed.</source>
          <target state="translated">下列程式碼範例會顯示兩種形式，並結束應用程式，這兩個表單關閉時。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.ApplicationContext">
          <source>When the application starts and exits, the position of each form is remembered.</source>
          <target state="translated">當應用程式啟動，並結束時，會記住每個表單的位置。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.ApplicationContext">
          <source>This example demonstrates how to use an <ph id="ph1">&lt;xref:System.Windows.Forms.ApplicationContext&gt;</ph>, along with the <ph id="ph2">`Application.Run(context)`</ph> method, to display multiple forms when the application starts.</source>
          <target state="translated">這個範例示範如何使用<ph id="ph1">&lt;xref:System.Windows.Forms.ApplicationContext&gt;</ph>，連同<ph id="ph2">`Application.Run(context)`</ph>方法，以在應用程式啟動時顯示多個表單。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.ApplicationContext">
          <source>The class <ph id="ph1">`MyApplicationContext`</ph> inherits from <ph id="ph2">&lt;xref:System.Windows.Forms.ApplicationContext&gt;</ph> and keeps track when each form is closed, and exits the current thread when they both are.</source>
          <target state="translated">類別<ph id="ph1">`MyApplicationContext`</ph>繼承自<ph id="ph2">&lt;xref:System.Windows.Forms.ApplicationContext&gt;</ph>和會持續追蹤每個表單會關閉，而在這兩個時結束目前的執行緒時。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.ApplicationContext">
          <source>The class stores the positions of each form for the user.</source>
          <target state="translated">類別會儲存使用者的每個表單的位置。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.ApplicationContext">
          <source>The form position data is stored in a file titled <ph id="ph1">`Appdata.txt`</ph> that is created in the location determined by <ph id="ph2">&lt;xref:System.Windows.Forms.Application.UserAppDataPath%2A&gt;</ph>.</source>
          <target state="translated">表單位置的資料儲存在檔案標題為<ph id="ph1">`Appdata.txt`</ph>位置取決於建立<ph id="ph2">&lt;xref:System.Windows.Forms.Application.UserAppDataPath%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.ApplicationContext">
          <source>The <ph id="ph1">`Main`</ph> method calls <ph id="ph2">`Application.Run(context)`</ph> to start the application, given the <ph id="ph3">&lt;xref:System.Windows.Forms.ApplicationContext&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">`Main`</ph>方法呼叫<ph id="ph2">`Application.Run(context)`</ph>啟動應用程式中，指定<ph id="ph3">&lt;xref:System.Windows.Forms.ApplicationContext&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.ApplicationContext">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ApplicationContext" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ApplicationContext" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.ApplicationContext.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ApplicationContext" /&gt;</ph> class with no context.</source>
          <target state="translated">使用無內容的方式，初始化 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ApplicationContext" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.ApplicationContext.#ctor(System.Windows.Forms.Form)">
          <source>The main <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph> of the application to use for context.</source>
          <target state="translated">做為內容使用之應用程式的主要 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.ApplicationContext.#ctor(System.Windows.Forms.Form)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ApplicationContext" /&gt;</ph> class with the specified <ph id="ph2">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph>.</source>
          <target state="translated">使用指定的 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ApplicationContext" /&gt;</ph> 初始化 <ph id="ph2">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.ApplicationContext.#ctor(System.Windows.Forms.Form)">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Forms.ApplicationContext.OnMainFormClosed%2A&gt;</ph> is not overridden, the message loop of the thread terminates when <ph id="ph2">&lt;xref:System.Windows.Forms.ApplicationContext.MainForm%2A&gt;</ph> is closed.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Windows.Forms.ApplicationContext.OnMainFormClosed%2A&gt;</ph>是未覆寫，執行緒的訊息迴圈時就會終止<ph id="ph2">&lt;xref:System.Windows.Forms.ApplicationContext.MainForm%2A&gt;</ph>已關閉。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.ApplicationContext">
          <source>Releases the resources used by the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ApplicationContext" /&gt;</ph>.</source>
          <target state="translated">釋放 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ApplicationContext" /&gt;</ph> 使用的資源。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.ApplicationContext.Dispose">
          <source>Releases all resources used by the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ApplicationContext" /&gt;</ph>.</source>
          <target state="translated">釋放 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ApplicationContext" /&gt;</ph> 所使用的所有資源。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.ApplicationContext.Dispose">
          <source>Call <ph id="ph1">&lt;xref:System.Windows.Forms.ApplicationContext.Dispose&gt;</ph> when you are finished using the <ph id="ph2">&lt;xref:System.Windows.Forms.ApplicationContext&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.ApplicationContext.Dispose&gt;</ph> 使用完畢時，請呼叫 <ph id="ph2">&lt;xref:System.Windows.Forms.ApplicationContext&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.ApplicationContext.Dispose">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ApplicationContext.Dispose&gt;</ph> method leaves the <ph id="ph2">&lt;xref:System.Windows.Forms.ApplicationContext&gt;</ph> in an unusable state.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.ApplicationContext.Dispose&gt;</ph> 方法會將 <ph id="ph2">&lt;xref:System.Windows.Forms.ApplicationContext&gt;</ph> 保留在無法使用的狀態。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.ApplicationContext.Dispose">
          <source>After calling <ph id="ph1">&lt;xref:System.Windows.Forms.ApplicationContext.Dispose&gt;</ph>, you must release all references to the <ph id="ph2">&lt;xref:System.Windows.Forms.ApplicationContext&gt;</ph> so the garbage collector can reclaim the memory that the <ph id="ph3">&lt;xref:System.Windows.Forms.ApplicationContext&gt;</ph> was occupying.</source>
          <target state="translated">在呼叫<ph id="ph1">&lt;xref:System.Windows.Forms.ApplicationContext.Dispose&gt;</ph>，您必須釋放所有參考<ph id="ph2">&lt;xref:System.Windows.Forms.ApplicationContext&gt;</ph>讓記憶體回收行程可以回收記憶體的<ph id="ph3">&lt;xref:System.Windows.Forms.ApplicationContext&gt;</ph>所佔用。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.ApplicationContext.Dispose">
          <source>For more information, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Implementing a Dispose Method<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>清除 Unmanaged 資源上<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>和<bpt id="p2">[</bpt>實作 Dispose 方法<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.ApplicationContext.Dispose">
          <source>Always call <ph id="ph1">&lt;xref:System.Windows.Forms.ApplicationContext.Dispose&gt;</ph> before you release your last reference to the <ph id="ph2">&lt;xref:System.Windows.Forms.ApplicationContext&gt;</ph>.</source>
          <target state="translated">在您釋放最後一個 <ph id="ph1">&lt;xref:System.Windows.Forms.ApplicationContext.Dispose&gt;</ph> 參考之前，請務必呼叫 <ph id="ph2">&lt;xref:System.Windows.Forms.ApplicationContext&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.ApplicationContext.Dispose">
          <source>Otherwise, the resources it is using will not be freed until the garbage collector calls the <ph id="ph1">&lt;xref:System.Windows.Forms.ApplicationContext&gt;</ph> object's <ph id="ph2">`Finalize`</ph> method.</source>
          <target state="translated">否則工作窗格所使用的資源不會釋放，直到記憶體回收行程呼叫 <ph id="ph1">&lt;xref:System.Windows.Forms.ApplicationContext&gt;</ph> 物件的 <ph id="ph2">`Finalize`</ph> 方法。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.ApplicationContext.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> 表示釋放 Managed 和 Unmanaged 資源，<ph id="ph2">&lt;see langword="false" /&gt;</ph> 則表示只釋放 Unmanaged 資源。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.ApplicationContext.Dispose(System.Boolean)">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ApplicationContext" /&gt;</ph> and optionally releases the managed resources.</source>
          <target state="translated">釋放 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ApplicationContext" /&gt;</ph> 所使用的 Unmanaged 資源，並選擇性地釋放 Managed 資源。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.ApplicationContext.Dispose(System.Boolean)">
          <source>This method is called by the public <ph id="ph1">`Dispose()`</ph> method and the <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> method.</source>
          <target state="translated">這個方法會呼叫公用<ph id="ph1">`Dispose()`</ph>方法和<ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.ApplicationContext.Dispose(System.Boolean)">
          <source><ph id="ph1">`Dispose()`</ph> invokes the protected <ph id="ph2">&lt;xref:System.Windows.Forms.ApplicationContext.Dispose%28System.Boolean%29&gt;</ph> method with the <ph id="ph3">`disposing`</ph> parameter set to <ph id="ph4">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">`Dispose()`</ph> 叫用受保護<ph id="ph2">&lt;xref:System.Windows.Forms.ApplicationContext.Dispose%28System.Boolean%29&gt;</ph>方法<ph id="ph3">`disposing`</ph>參數設定為<ph id="ph4">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.ApplicationContext.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> invokes <ph id="ph2">`Dispose`</ph> with <ph id="ph3">`disposing`</ph> set to <ph id="ph4">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> 叫用<ph id="ph2">`Dispose`</ph>與<ph id="ph3">`disposing`</ph>設<ph id="ph4">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.ApplicationContext.Dispose(System.Boolean)">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is true, this method releases all resources held by any managed objects that this <ph id="ph2">&lt;xref:System.Windows.Forms.ApplicationContext&gt;</ph> references.</source>
          <target state="translated">當<ph id="ph1">`disposing`</ph>參數為 true，這個方法的任何 managed 物件所持有的資源全部釋出這個<ph id="ph2">&lt;xref:System.Windows.Forms.ApplicationContext&gt;</ph>參考。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.ApplicationContext.Dispose(System.Boolean)">
          <source>This method invokes the <ph id="ph1">`Dispose()`</ph> method of each referenced object.</source>
          <target state="translated">這個方法會叫用每個參考物件的 <ph id="ph1">`Dispose()`</ph> 方法。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.ApplicationContext.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> can be called multiple times by other objects.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> 可以被其他物件呼叫多次。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.ApplicationContext.Dispose(System.Boolean)">
          <source>When overriding <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, be careful not to reference objects that have been previously disposed of in an earlier call to <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>.</source>
          <target state="translated">覆寫 <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph> 時，請小心不要參考到先前已在對 <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph> 的早期呼叫中被處置 (Dispose) 的物件。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.ApplicationContext.Dispose(System.Boolean)">
          <source>For more information about how to implement <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, see <bpt id="p1">[</bpt>Implementing a Dispose Method<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">如需有關如何實作<ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>，請參閱<bpt id="p1">[</bpt>實作 Dispose 方法<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.ApplicationContext.Dispose(System.Boolean)">
          <source>For more information about <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Object.Finalize" /&gt;</ph>, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Overriding the Finalize Method<ept id="p2">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>.</source>
          <target state="translated">如需有關<ph id="ph1">&lt;see langword="Dispose" /&gt;</ph>和<ph id="ph2">&lt;see cref="M:System.Object.Finalize" /&gt;</ph>，請參閱<bpt id="p1">[</bpt>清除 Unmanaged 資源上<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>和<bpt id="p2">[</bpt>覆寫 Finalize 方法<ept id="p2">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.ApplicationContext.ExitThread">
          <source>Terminates the message loop of the thread.</source>
          <target state="translated">結束執行緒的訊息迴圈。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.ApplicationContext.ExitThread">
          <source>This method calls <ph id="ph1">&lt;xref:System.Windows.Forms.ApplicationContext.ExitThreadCore%2A&gt;</ph>.</source>
          <target state="translated">此方法會呼叫 <ph id="ph1">&lt;xref:System.Windows.Forms.ApplicationContext.ExitThreadCore%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.ApplicationContext.ExitThread">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.ApplicationContext.ExitThread%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.ApplicationContext.ExitThreadCore%2A&gt;</ph> do not actually cause the thread to terminate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.ApplicationContext.ExitThread%2A&gt;</ph> 和<ph id="ph2">&lt;xref:System.Windows.Forms.ApplicationContext.ExitThreadCore%2A&gt;</ph>不要實際上不會造成執行緒終止。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.ApplicationContext.ExitThread">
          <source>These methods raise the <ph id="ph1">&lt;xref:System.Windows.Forms.Application.ThreadExit&gt;</ph> event to which the <ph id="ph2">&lt;xref:System.Windows.Forms.Application&gt;</ph> object listens.</source>
          <target state="translated">這些方法會引發<ph id="ph1">&lt;xref:System.Windows.Forms.Application.ThreadExit&gt;</ph>事件要<ph id="ph2">&lt;xref:System.Windows.Forms.Application&gt;</ph>物件接聽。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.ApplicationContext.ExitThread">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Application&gt;</ph> object then terminates the thread.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Application&gt;</ph>物件接著會結束執行緒。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.ApplicationContext.ExitThread">
          <source>The following code example is an excerpt from the example in the <ph id="ph1">&lt;xref:System.Windows.Forms.ApplicationContext&gt;</ph> class overview.</source>
          <target state="translated">下列程式碼範例是在此範例的摘錄<ph id="ph1">&lt;xref:System.Windows.Forms.ApplicationContext&gt;</ph>類別概觀。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.ApplicationContext.ExitThread">
          <source>This example keeps track of open forms and exits the current thread when all forms are closed.</source>
          <target state="translated">這個範例會追蹤開啟的表單，並關閉所有表單時，結束目前的執行緒。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.ApplicationContext.ExitThread">
          <source>The <ph id="ph1">`OnFormClosed`</ph> method is an event handler for the <ph id="ph2">&lt;xref:System.Windows.Forms.Form.Closed&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">`OnFormClosed`</ph>方法是事件處理常式<ph id="ph2">&lt;xref:System.Windows.Forms.Form.Closed&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.ApplicationContext.ExitThread">
          <source>When the number of open forms is equal to 0, then current thread is exited by calling the <ph id="ph1">&lt;xref:System.Windows.Forms.ApplicationContext.ExitThread%2A&gt;</ph> method.</source>
          <target state="translated">開啟表單的數目等於 0 時，目前執行緒已結束藉由呼叫<ph id="ph1">&lt;xref:System.Windows.Forms.ApplicationContext.ExitThread%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.ApplicationContext.ExitThread">
          <source>The number of forms is tracked by incrementing the <ph id="ph1">`formCount`</ph> variable when a form is shown, and decrementing it when a form is closed.</source>
          <target state="translated">數種格式會追蹤遞增<ph id="ph1">`formCount`</ph>變數時顯示表單，並遞減表單關閉時。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.ApplicationContext.ExitThread">
          <source>Some code is not shown for the purpose of brevity.</source>
          <target state="translated">為了簡潔起見，不會顯示一些程式碼。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.ApplicationContext.ExitThread">
          <source>See <ph id="ph1">&lt;xref:System.Windows.Forms.ApplicationContext&gt;</ph> for the whole code listing.</source>
          <target state="translated">請參閱<ph id="ph1">&lt;xref:System.Windows.Forms.ApplicationContext&gt;</ph>整個程式碼清單。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.ApplicationContext.ExitThreadCore">
          <source>Terminates the message loop of the thread.</source>
          <target state="translated">結束執行緒的訊息迴圈。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.ApplicationContext.ExitThreadCore">
          <source>This method is called from <ph id="ph1">&lt;xref:System.Windows.Forms.ApplicationContext.ExitThread%2A&gt;</ph>.</source>
          <target state="translated">這個方法從呼叫<ph id="ph1">&lt;xref:System.Windows.Forms.ApplicationContext.ExitThread%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.ApplicationContext.ExitThreadCore">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.ApplicationContext.ExitThread%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.ApplicationContext.ExitThreadCore%2A&gt;</ph> do not actually cause the thread to terminate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.ApplicationContext.ExitThread%2A&gt;</ph> 和<ph id="ph2">&lt;xref:System.Windows.Forms.ApplicationContext.ExitThreadCore%2A&gt;</ph>不要實際上不會造成執行緒終止。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.ApplicationContext.ExitThreadCore">
          <source>These methods raise the <ph id="ph1">&lt;xref:System.Windows.Forms.Application.ThreadExit&gt;</ph> event to which the <ph id="ph2">&lt;xref:System.Windows.Forms.Application&gt;</ph> object listens.</source>
          <target state="translated">這些方法會引發<ph id="ph1">&lt;xref:System.Windows.Forms.Application.ThreadExit&gt;</ph>事件要<ph id="ph2">&lt;xref:System.Windows.Forms.Application&gt;</ph>物件接聽。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.ApplicationContext.ExitThreadCore">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Application&gt;</ph> object then terminates the thread.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.Application&gt;</ph>物件接著會結束執行緒。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.ApplicationContext.Finalize">
          <source>Attempts to free resources and perform other cleanup operations before the application context is reclaimed by garbage collection.</source>
          <target state="translated">嘗試在應用程式內容經由記憶體回收之前，釋放資源和執行其他的清除作業。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.ApplicationContext.Finalize">
          <source>This method overrides <ph id="ph1">&lt;xref:System.Object.Finalize%2A?displayProperty=nameWithType&gt;</ph> and cleans up resources by calling <ph id="ph2">`Dispose(false)`</ph>.</source>
          <target state="translated">這個方法會覆寫<ph id="ph1">&lt;xref:System.Object.Finalize%2A?displayProperty=nameWithType&gt;</ph>並清除資源，藉由呼叫<ph id="ph2">`Dispose(false)`</ph>。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.ApplicationContext.Finalize">
          <source>Override <ph id="ph1">`Dispose(Boolean)`</ph> to customize the cleanup.</source>
          <target state="translated">覆寫 <ph id="ph1">`Dispose(Boolean)`</ph> 以自訂清除。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.ApplicationContext.Finalize">
          <source>Application code should not call this method; an object's <ph id="ph1">`Finalize`</ph> method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the <ph id="ph2">&lt;xref:System.GC.SuppressFinalize%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">應用程式程式碼不應該呼叫這個方法。物件的<ph id="ph1">`Finalize`</ph>方法會自動叫用記憶體回收期間，除非已停用記憶體回收行程的最終處理的呼叫所<ph id="ph2">&lt;xref:System.GC.SuppressFinalize%2A?displayProperty=nameWithType&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.ApplicationContext.Finalize">
          <source>For more information, see <bpt id="p1">[</bpt>Finalize Methods and Destructors<ept id="p1">](http://msdn.microsoft.com/library/fd376774-1643-499b-869e-9546a3aeea70)</ept>, <bpt id="p2">[</bpt>Cleaning Up Unmanaged Resources<ept id="p2">](~/docs/standard/garbage-collection/unmanaged.md)</ept>, and <bpt id="p3">[</bpt>Overriding the Finalize Method<ept id="p3">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>Finalize 方法和解構函式<ept id="p1">](http://msdn.microsoft.com/library/fd376774-1643-499b-869e-9546a3aeea70)</ept>，<bpt id="p2">[</bpt>清除 Unmanaged 資源上<ept id="p2">](~/docs/standard/garbage-collection/unmanaged.md)</ept>，和<bpt id="p3">[</bpt>覆寫 Finalize 方法<ept id="p3">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.ApplicationContext.MainForm">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph> to use as context.</source>
          <target state="translated">取得或設定要當做內容使用的 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.ApplicationContext.MainForm">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph> to use as context.</source>
          <target state="translated">要當做內容使用的 <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.ApplicationContext.MainForm">
          <source>This property determines the main <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> for this context.</source>
          <target state="translated">此屬性會決定主要<ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph>此內容。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.ApplicationContext.MainForm">
          <source>This property can change at any time.</source>
          <target state="translated">這個屬性可以隨時變更。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.ApplicationContext.MainForm">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Forms.ApplicationContext.OnMainFormClosed%2A&gt;</ph> is not overridden, the message loop of the thread terminates when the <ph id="ph2">`mainForm`</ph> parameter closes.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Windows.Forms.ApplicationContext.OnMainFormClosed%2A&gt;</ph>是未覆寫，執行緒的訊息迴圈時就會終止<ph id="ph2">`mainForm`</ph>參數會關閉。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.ApplicationContext.OnMainFormClosed(System.Object,System.EventArgs)">
          <source>The object that raised the event.</source>
          <target state="translated">引發事件的物件。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.ApplicationContext.OnMainFormClosed(System.Object,System.EventArgs)">
          <source>The <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">包含事件資料的 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.ApplicationContext.OnMainFormClosed(System.Object,System.EventArgs)">
          <source>Calls <ph id="ph1">&lt;see cref="M:System.Windows.Forms.ApplicationContext.ExitThreadCore" /&gt;</ph>, which raises the <ph id="ph2">&lt;see cref="E:System.Windows.Forms.ApplicationContext.ThreadExit" /&gt;</ph> event.</source>
          <target state="translated">呼叫會引發 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.ApplicationContext.ExitThreadCore" /&gt;</ph> 事件的 <ph id="ph2">&lt;see cref="E:System.Windows.Forms.ApplicationContext.ThreadExit" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.ApplicationContext.OnMainFormClosed(System.Object,System.EventArgs)">
          <source>The default implementation of this method calls <ph id="ph1">&lt;xref:System.Windows.Forms.ApplicationContext.ExitThreadCore%2A&gt;</ph>.</source>
          <target state="translated">這個方法的預設實作會呼叫<ph id="ph1">&lt;xref:System.Windows.Forms.ApplicationContext.ExitThreadCore%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.ApplicationContext.Tag">
          <source>Gets or sets an object that contains data about the control.</source>
          <target state="translated">取得或設定包含控制項相關資料的物件。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.ApplicationContext.Tag">
          <source>An <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> that contains data about the control.</source>
          <target state="translated">包含有關控制項資料的 <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.ApplicationContext.Tag">
          <source>The default is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">預設值為 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.ApplicationContext.Tag">
          <source>Any type derived from the <ph id="ph1">&lt;xref:System.Object&gt;</ph> class can be assigned to this property.</source>
          <target state="translated">衍生型別<ph id="ph1">&lt;xref:System.Object&gt;</ph>類別可以指派給這個屬性。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.ApplicationContext.Tag">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.ApplicationContext.Tag%2A&gt;</ph> property is set through the Windows Forms designer, only text can be assigned.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Windows.Forms.ApplicationContext.Tag%2A&gt;</ph>屬性透過 Windows Form 設計工具設定，可以指定只會將文字。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.ApplicationContext.Tag">
          <source>A common use for the <ph id="ph1">&lt;xref:System.Windows.Forms.ApplicationContext.Tag%2A&gt;</ph> property is to store data that is closely associated with the control.</source>
          <target state="translated">常見用途<ph id="ph1">&lt;xref:System.Windows.Forms.ApplicationContext.Tag%2A&gt;</ph>屬性是儲存緊密地與控制項相關聯的資料。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.ApplicationContext.Tag">
          <source>For example, if you have a control that displays information about a customer, you might store a <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> that contains the customer's order history in that control's <ph id="ph2">&lt;xref:System.Windows.Forms.ApplicationContext.Tag%2A&gt;</ph> property so the data can be accessed quickly.</source>
          <target state="translated">例如，如果您有顯示客戶的相關資訊的控制項，您可能會儲存<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>，其中包含該控制項中的客戶的訂單記錄<ph id="ph2">&lt;xref:System.Windows.Forms.ApplicationContext.Tag%2A&gt;</ph>屬性，以便快速存取資料。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.ApplicationContext.ThreadExit">
          <source>Occurs when the message loop of the thread should be terminated, by calling <ph id="ph1">&lt;see cref="M:System.Windows.Forms.ApplicationContext.ExitThread" /&gt;</ph>.</source>
          <target state="translated">發生在執行緒的訊息迴圈應該藉著呼叫 <ph id="ph1">&lt;see cref="M:System.Windows.Forms.ApplicationContext.ExitThread" /&gt;</ph> 時結束。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.ApplicationContext.ThreadExit">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">下列程式碼範例示範如何使用這個成員。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.ApplicationContext.ThreadExit">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.ApplicationContext.ThreadExit&gt;</ph> event.</source>
          <target state="translated">在範例中，事件處理常式會報告一次<ph id="ph1">&lt;xref:System.Windows.Forms.ApplicationContext.ThreadExit&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.ApplicationContext.ThreadExit">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">此報表可協助您了解事件發生的時機，並可協助您偵錯。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.ApplicationContext.ThreadExit">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">若要報告多個事件或事件經常發生，請考慮更換<ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph>與<ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph>或將訊息附加到多行<ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.ApplicationContext.ThreadExit">
          <source>To run the example code, paste it into a project that contains an instance of type <ph id="ph1">&lt;xref:System.Windows.Forms.ApplicationContext&gt;</ph> named <ph id="ph2">`ApplicationContext1`</ph>.</source>
          <target state="translated">若要執行範例程式碼，將它貼到包含類型的執行個體的專案<ph id="ph1">&lt;xref:System.Windows.Forms.ApplicationContext&gt;</ph>名為<ph id="ph2">`ApplicationContext1`</ph>。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.ApplicationContext.ThreadExit">
          <source>Then ensure that the event handler is associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.ApplicationContext.ThreadExit&gt;</ph> event.</source>
          <target state="translated">請確定事件處理常式關聯<ph id="ph1">&lt;xref:System.Windows.Forms.ApplicationContext.ThreadExit&gt;</ph>事件。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>