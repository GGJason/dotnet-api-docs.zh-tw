<Type Name="FontDialog" FullName="System.Windows.Forms.FontDialog">
  <Metadata><Meta Name="ms.openlocfilehash" Value="698238e7bb494c1eef4b10288f58c36a0b617549" /><Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="10/04/2018" /><Meta Name="ms.locfileid" Value="48743628" /></Metadata><TypeSignature Language="C#" Value="public class FontDialog : System.Windows.Forms.CommonDialog" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FontDialog extends System.Windows.Forms.CommonDialog" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.FontDialog" />
  <TypeSignature Language="VB.NET" Value="Public Class FontDialog&#xA;Inherits CommonDialog" />
  <TypeSignature Language="C++ CLI" Value="public ref class FontDialog : System::Windows::Forms::CommonDialog" />
  <TypeSignature Language="F#" Value="type FontDialog = class&#xA;    inherit CommonDialog" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.CommonDialog</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.DefaultEvent("Apply")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.DefaultProperty("Font")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>提示使用者從本機電腦上安裝的字型中，選擇一種字型。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 繼承的成員<xref:System.Windows.Forms.CommonDialog.ShowDialog%2A>必須叫用它來建立這個特定的通用對話方塊。 <xref:System.Windows.Forms.CommonDialog.HookProc%2A> 您可以覆寫實作特定的對話方塊攔截程序功能。  
  
 當您建立的執行個體<xref:System.Windows.Forms.FontDialog>，部分讀取/寫入屬性會設為初始的值。 如需這些值的清單，請參閱<xref:System.Windows.Forms.FontDialog.%23ctor%2A>建構函式。  
  
   
  
## Examples  
 下列程式碼範例會使用<xref:System.Windows.Forms.CommonDialog.ShowDialog%2A>顯示<xref:System.Windows.Forms.FontDialog>。 此程式碼需要<xref:System.Windows.Forms.Form>已建立具有<xref:System.Windows.Forms.TextBox>並放置在其上的按鈕。 它也需要`fontDialog1`已建立。 <xref:System.Drawing.Font>包含大小資訊，但不是色彩資訊。  
  
 [!code-cpp[Classic FontDialog Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic FontDialog Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FontDialog Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic FontDialog Example/CS/source.cs#1)]
 [!code-vb[Classic FontDialog Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic FontDialog Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.CommonDialog" />
    <altmember cref="T:System.Drawing.Font" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FontDialog ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.FontDialog.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FontDialog();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Windows.Forms.FontDialog" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當您建立的執行個體<xref:System.Windows.Forms.FontDialog>，下列的讀取/寫入屬性會初始化。  
  
|屬性|初始值|  
|--------------|-------------------|  
|<xref:System.Windows.Forms.FontDialog.AllowSimulations%2A>|`true`|  
|<xref:System.Windows.Forms.FontDialog.AllowVectorFonts%2A>|`true`|  
|<xref:System.Windows.Forms.FontDialog.AllowVerticalFonts%2A>|`true`|  
|<xref:System.Windows.Forms.FontDialog.AllowScriptChange%2A>|`true`|  
|<xref:System.Windows.Forms.FontDialog.Color%2A>|`Color.Black`|  
|<xref:System.Windows.Forms.FontDialog.FixedPitchOnly%2A>|`false`|  
|<xref:System.Windows.Forms.FontDialog.MaxSize%2A>|0|  
|<xref:System.Windows.Forms.FontDialog.MinSize%2A>|0|  
|<xref:System.Windows.Forms.FontDialog.ScriptsOnly%2A>|`false`|  
|<xref:System.Windows.Forms.FontDialog.ShowApply%2A>|`false`|  
|<xref:System.Windows.Forms.FontDialog.ShowColor%2A>|`false`|  
|<xref:System.Windows.Forms.FontDialog.ShowEffects%2A>|`true`|  
|<xref:System.Windows.Forms.FontDialog.ShowHelp%2A>|`false`|  
  
 您可以變更其中任何一個屬性，透過單獨呼叫屬性的值。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Color" />
      </Docs>
    </Member>
    <Member MemberName="AllowScriptChange">
      <MemberSignature Language="C#" Value="public bool AllowScriptChange { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowScriptChange" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.FontDialog.AllowScriptChange" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowScriptChange As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowScriptChange { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowScriptChange : bool with get, set" Usage="System.Windows.Forms.FontDialog.AllowScriptChange" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，指出使用者是否可以變更 [指令碼] 下拉式方塊中所指定的字元集，以顯示某一字元集，而非目前所顯示的字元集。</summary>
        <value><see langword="true" /> 如果使用者可以變更中指定字元集**指令碼**下拉式方塊，否則<see langword="false" />。 預設值是 <see langword="true" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 **指令碼**下拉式方塊上找到**字型**對話方塊包含與選取的字型相關聯的字元集。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.FontDialog.AllowSimulations" />
        <altmember cref="P:System.Windows.Forms.FontDialog.AllowVectorFonts" />
        <altmember cref="P:System.Windows.Forms.FontDialog.AllowVerticalFonts" />
      </Docs>
    </Member>
    <Member MemberName="AllowSimulations">
      <MemberSignature Language="C#" Value="public bool AllowSimulations { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowSimulations" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.FontDialog.AllowSimulations" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowSimulations As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowSimulations { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowSimulations : bool with get, set" Usage="System.Windows.Forms.FontDialog.AllowSimulations" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，指出對話方塊是否允許繪圖裝置介面 (Graphics Device Interface，GDI) 字型模擬。</summary>
        <value>如果允許字型模擬，則為 <see langword="true" />，否則為 <see langword="false" />。 預設值是 <see langword="true" />。</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.FontDialog.AllowScriptChange" />
        <altmember cref="P:System.Windows.Forms.FontDialog.AllowVectorFonts" />
        <altmember cref="P:System.Windows.Forms.FontDialog.AllowVerticalFonts" />
      </Docs>
    </Member>
    <Member MemberName="AllowVectorFonts">
      <MemberSignature Language="C#" Value="public bool AllowVectorFonts { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowVectorFonts" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.FontDialog.AllowVectorFonts" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowVectorFonts As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowVectorFonts { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowVectorFonts : bool with get, set" Usage="System.Windows.Forms.FontDialog.AllowVectorFonts" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，指出對話方塊是否允許選取向量字型。</summary>
        <value>如果允許選取向量字型，則為 <see langword="true" />，否則為 <see langword="false" />。 預設值是 <see langword="true" />。</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.FontDialog.AllowScriptChange" />
        <altmember cref="P:System.Windows.Forms.FontDialog.AllowSimulations" />
        <altmember cref="P:System.Windows.Forms.FontDialog.AllowVerticalFonts" />
      </Docs>
    </Member>
    <Member MemberName="AllowVerticalFonts">
      <MemberSignature Language="C#" Value="public bool AllowVerticalFonts { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowVerticalFonts" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.FontDialog.AllowVerticalFonts" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowVerticalFonts As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowVerticalFonts { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowVerticalFonts : bool with get, set" Usage="System.Windows.Forms.FontDialog.AllowVerticalFonts" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，指出對話方塊是否可同時顯示垂直和水平字型，或只顯示水平字型。</summary>
        <value>如果允許同時顯示垂直與水平字型，則為 <see langword="true" />，否則為 <see langword="false" />。 預設值是 <see langword="true" />。</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.FontDialog.AllowScriptChange" />
        <altmember cref="P:System.Windows.Forms.FontDialog.AllowSimulations" />
        <altmember cref="P:System.Windows.Forms.FontDialog.AllowVectorFonts" />
      </Docs>
    </Member>
    <Member MemberName="Apply">
      <MemberSignature Language="C#" Value="public event EventHandler Apply;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Apply" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.FontDialog.Apply" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Apply As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Apply;" />
      <MemberSignature Language="F#" Value="member this.Apply : EventHandler " Usage="member this.Apply : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>發生於使用者按一下 [字型] 對話方塊中的 [套用] 按鈕時。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 每次**套用**按一下按鈕時，另一個<xref:System.Windows.Forms.FontDialog.Apply>就會引發事件。  
  
 如需有關如何處理事件的詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Windows.Forms.FontDialog.MinSize%2A>， <xref:System.Windows.Forms.FontDialog.MaxSize%2A>，<xref:System.Windows.Forms.FontDialog.ShowEffects%2A>並<xref:System.Windows.Forms.FontDialog.FontMustExist%2A>成員和處理<xref:System.Windows.Forms.FontDialog.Apply>事件。 若要在表單，其中包含執行此範例中貼上下列程式碼<xref:System.Windows.Forms.FontDialog>名為`FontDialog1`並<xref:System.Windows.Forms.Button>名為`Button1`。  
  
 [!code-cpp[System.Windows.Forms.FontDialogMustExist#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.FontDialogMustExist/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.FontDialogMustExist#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.FontDialogMustExist/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.FontDialogMustExist#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.FontDialogMustExist/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.FontDialog.OnApply(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="Color">
      <MemberSignature Language="C#" Value="public System.Drawing.Color Color { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color Color" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.FontDialog.Color" />
      <MemberSignature Language="VB.NET" Value="Public Property Color As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color Color { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.Color : System.Drawing.Color with get, set" Usage="System.Windows.Forms.FontDialog.Color" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "Black")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定選取的字型色彩。</summary>
        <value>選取字型的色彩。 預設值是 <see cref="P:System.Drawing.Color.Black" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列程式碼範例會使用<xref:System.Windows.Forms.CommonDialog.ShowDialog%2A>顯示<xref:System.Windows.Forms.FontDialog>。 此程式碼需要<xref:System.Windows.Forms.Form>已建立具有<xref:System.Windows.Forms.TextBox>並放置在其上的按鈕。 它也需要`fontDialog1`已建立。 <xref:System.Drawing.Font>包含大小資訊，但不是色彩資訊。  
  
 [!code-cpp[Classic FontDialog Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic FontDialog Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FontDialog Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic FontDialog Example/CS/source.cs#1)]
 [!code-vb[Classic FontDialog Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic FontDialog Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Color" />
        <altmember cref="P:System.Windows.Forms.FontDialog.Font" />
        <altmember cref="P:System.Windows.Forms.FontDialog.ShowColor" />
      </Docs>
    </Member>
    <Member MemberName="EventApply">
      <MemberSignature Language="C#" Value="protected static readonly object EventApply;" />
      <MemberSignature Language="ILAsm" Value=".field family static initonly object EventApply" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.FontDialog.EventApply" />
      <MemberSignature Language="VB.NET" Value="Protected Shared ReadOnly EventApply As Object " />
      <MemberSignature Language="C++ CLI" Value="protected: static initonly System::Object ^ EventApply;" />
      <MemberSignature Language="F#" Value=" staticval mutable EventApply : obj" Usage="System.Windows.Forms.FontDialog.EventApply" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>擁有 <see cref="E:System.Windows.Forms.FontDialog.Apply" /> 事件。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FixedPitchOnly">
      <MemberSignature Language="C#" Value="public bool FixedPitchOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FixedPitchOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.FontDialog.FixedPitchOnly" />
      <MemberSignature Language="VB.NET" Value="Public Property FixedPitchOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool FixedPitchOnly { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.FixedPitchOnly : bool with get, set" Usage="System.Windows.Forms.FontDialog.FixedPitchOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，指出對話方塊是否只允許選取固定字幅 (Fixed-Pitch) 的字型。</summary>
        <value>如果只可選取固定字幅的字型，則為 <see langword="true" />，否則為 <see langword="false" />。 預設值是 <see langword="false" />。</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.FontDialog.FontMustExist" />
        <altmember cref="P:System.Windows.Forms.FontDialog.ScriptsOnly" />
      </Docs>
    </Member>
    <Member MemberName="Font">
      <MemberSignature Language="C#" Value="public System.Drawing.Font Font { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Font Font" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.FontDialog.Font" />
      <MemberSignature Language="VB.NET" Value="Public Property Font As Font" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Font ^ Font { System::Drawing::Font ^ get(); void set(System::Drawing::Font ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Font : System.Drawing.Font with get, set" Usage="System.Windows.Forms.FontDialog.Font" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Font</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定選取的字型。</summary>
        <value>選取的字型。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列程式碼範例會使用<xref:System.Windows.Forms.CommonDialog.ShowDialog%2A>顯示<xref:System.Windows.Forms.FontDialog>。 此程式碼需要<xref:System.Windows.Forms.Form>已建立具有<xref:System.Windows.Forms.TextBox>並放置在其上的按鈕。 它也需要`fontDialog1`已建立。 <xref:System.Drawing.Font>包含大小資訊，但不是色彩資訊。  
  
 [!code-cpp[Classic FontDialog Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic FontDialog Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FontDialog Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic FontDialog Example/CS/source.cs#1)]
 [!code-vb[Classic FontDialog Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic FontDialog Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Font" />
        <altmember cref="P:System.Windows.Forms.FontDialog.Color" />
      </Docs>
    </Member>
    <Member MemberName="FontMustExist">
      <MemberSignature Language="C#" Value="public bool FontMustExist { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FontMustExist" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.FontDialog.FontMustExist" />
      <MemberSignature Language="VB.NET" Value="Public Property FontMustExist As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool FontMustExist { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.FontMustExist : bool with get, set" Usage="System.Windows.Forms.FontDialog.FontMustExist" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，指出如果使用者嘗試選取不存在的字型或樣式，對話方塊是否指示錯誤狀況。</summary>
        <value>如果使用者試圖選取的字型或樣式不存在時，對話方塊指定了錯誤狀況，則為 <see langword="true" />，否則為 <see langword="false" />。 預設值為 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Windows.Forms.FontDialog.MinSize%2A>， <xref:System.Windows.Forms.FontDialog.MaxSize%2A>，<xref:System.Windows.Forms.FontDialog.ShowEffects%2A>並<xref:System.Windows.Forms.FontDialog.FontMustExist%2A>成員和處理<xref:System.Windows.Forms.FontDialog.Apply>事件。 若要在表單，其中包含執行此範例中貼上下列程式碼<xref:System.Windows.Forms.FontDialog>名為`FontDialog1`並<xref:System.Windows.Forms.Button>名為`Button1`。  
  
 [!code-cpp[System.Windows.Forms.FontDialogMustExist#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.FontDialogMustExist/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.FontDialogMustExist#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.FontDialogMustExist/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.FontDialogMustExist#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.FontDialogMustExist/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.FontDialog.FixedPitchOnly" />
        <altmember cref="P:System.Windows.Forms.FontDialog.ScriptsOnly" />
      </Docs>
    </Member>
    <Member MemberName="HookProc">
      <MemberSignature Language="C#" Value="protected override IntPtr HookProc (IntPtr hWnd, int msg, IntPtr wparam, IntPtr lparam);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance native int HookProc(native int hWnd, int32 msg, native int wparam, native int lparam) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.FontDialog.HookProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function HookProc (hWnd As IntPtr, msg As Integer, wparam As IntPtr, lparam As IntPtr) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override IntPtr HookProc(IntPtr hWnd, int msg, IntPtr wparam, IntPtr lparam);" />
      <MemberSignature Language="F#" Value="override this.HookProc : nativeint * int * nativeint * nativeint -&gt; nativeint" Usage="fontDialog.HookProc (hWnd, msg, wparam, lparam)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hWnd" Type="System.IntPtr" />
        <Parameter Name="msg" Type="System.Int32" />
        <Parameter Name="wparam" Type="System.IntPtr" />
        <Parameter Name="lparam" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="hWnd">對話方塊視窗的控制代碼。</param>
        <param name="msg">接收到的訊息。</param>
        <param name="wparam">有關訊息的其他資訊。</param>
        <param name="lparam">有關訊息的其他資訊。</param>
        <summary>指定為了將特定功能加入通用對話方塊而覆寫的通用對話方塊攔截程序。</summary>
        <returns>如果預設對話方塊程序處理訊息，則為零值；如果預設對話方塊程序忽略訊息，則為非零值。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 攔截程序是由此函式可以攔截事件之前到達應用程式的機制。 當您覆寫<xref:System.Windows.Forms.CommonDialog.HookProc%2A?displayProperty=nameWithType>方法<xref:System.Windows.Forms.CommonDialog>類別，作業系統會叫用您要將作業系統的訊息張貼到視窗的函式的覆寫。  
  
   
  
## Examples  
 下列程式碼範例示範如何覆寫<xref:System.Windows.Forms.FontDialog.HookProc%2A>方法。 此範例包含的類別，繼承<xref:System.Windows.Forms.FontDialog>類別。 在類別中<xref:System.Windows.Forms.FontDialog.HookProc%2A>覆寫時，此範例評估結果的方法`msg`參數與特定 Windows 訊息的常數值。 如果`msg`參數等於指定的常數，該範例會寫入追蹤輸出，找出 Windows 訊息傳遞給<xref:System.Windows.Forms.FontDialog.HookProc%2A>方法。 這個範例需要在其中類別<xref:System.Windows.Forms.FontDialog.HookProc%2A>方法會宣告繼承<xref:System.Windows.Forms.FontDialog>類別。  
  
 [!code-cpp[HookProc Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/HookProc Example/CPP/fontdialogoverride.cpp#1)]
 [!code-csharp[HookProc Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/HookProc Example/CS/fontdialogoverride.cs#1)]
 [!code-vb[HookProc Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/HookProc Example/VB/fontdialogoverride.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>當覆寫<see cref="M:System.Windows.Forms.FontDialog.HookProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)" />衍生類別時，請務必呼叫基底類別的<see cref="M:System.Windows.Forms.FontDialog.HookProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)" />方法。</para></block>
        <altmember cref="T:System.Windows.Forms.CommonDialog" />
      </Docs>
    </Member>
    <Member MemberName="MaxSize">
      <MemberSignature Language="C#" Value="public int MaxSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.FontDialog.MaxSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxSize : int with get, set" Usage="System.Windows.Forms.FontDialog.MaxSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定使用者可以選取的最大點數。</summary>
        <value>使用者可以選取的最大點數。 預設值為 0。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 為了讓的最大和最小大小設定才會生效<xref:System.Windows.Forms.FontDialog.MaxSize%2A>必須是大於<xref:System.Windows.Forms.FontDialog.MinSize%2A>，而且兩者都必須是大於 0。  
  
 嘗試將此屬性設定為小於 0 值會導致正在使用的 0 的值。 如果您設定<xref:System.Windows.Forms.FontDialog.MaxSize%2A>的值小於<xref:System.Windows.Forms.FontDialog.MinSize%2A>，<xref:System.Windows.Forms.FontDialog.MinSize%2A>設定為<xref:System.Windows.Forms.FontDialog.MaxSize%2A>。 設定的作用<xref:System.Windows.Forms.FontDialog.MinSize%2A>和<xref:System.Windows.Forms.FontDialog.MaxSize%2A>相同的值是限制為單一的字型大小的 選取的大小。  
  
 點大小為 0 時，沒有字型的大小限制。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Windows.Forms.FontDialog.MinSize%2A>， <xref:System.Windows.Forms.FontDialog.MaxSize%2A>，<xref:System.Windows.Forms.FontDialog.ShowEffects%2A>並<xref:System.Windows.Forms.FontDialog.FontMustExist%2A>成員和處理<xref:System.Windows.Forms.FontDialog.Apply>事件。 若要在表單，其中包含執行此範例中貼上下列程式碼<xref:System.Windows.Forms.FontDialog>名為`FontDialog1`並<xref:System.Windows.Forms.Button>名為`Button1`。  
  
 [!code-cpp[System.Windows.Forms.FontDialogMustExist#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.FontDialogMustExist/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.FontDialogMustExist#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.FontDialogMustExist/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.FontDialogMustExist#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.FontDialogMustExist/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.FontDialog.MinSize" />
      </Docs>
    </Member>
    <Member MemberName="MinSize">
      <MemberSignature Language="C#" Value="public int MinSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MinSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.FontDialog.MinSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MinSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MinSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MinSize : int with get, set" Usage="System.Windows.Forms.FontDialog.MinSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定使用者可以選取的最小點數。</summary>
        <value>使用者可以選取的最小點數。 預設值為 0。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 為了讓的最大和最小大小設定才會生效<xref:System.Windows.Forms.FontDialog.MaxSize%2A>必須是大於<xref:System.Windows.Forms.FontDialog.MinSize%2A>，而且兩者都必須是大於 0。  
  
 嘗試將此屬性設定為小於 0 值會導致正在使用的 0 的值。 如果您設定<xref:System.Windows.Forms.FontDialog.MinSize%2A>的值大於<xref:System.Windows.Forms.FontDialog.MaxSize%2A>，<xref:System.Windows.Forms.FontDialog.MaxSize%2A>設定的值為<xref:System.Windows.Forms.FontDialog.MinSize%2A>。 設定的作用<xref:System.Windows.Forms.FontDialog.MinSize%2A>和<xref:System.Windows.Forms.FontDialog.MaxSize%2A>相同的值是限制為單一的字型大小的 選取的大小。  
  
 點大小為 0 時，沒有字型的大小限制。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Windows.Forms.FontDialog.MinSize%2A>， <xref:System.Windows.Forms.FontDialog.MaxSize%2A>，<xref:System.Windows.Forms.FontDialog.ShowEffects%2A>並<xref:System.Windows.Forms.FontDialog.FontMustExist%2A>成員和處理<xref:System.Windows.Forms.FontDialog.Apply>事件。 若要在表單，其中包含執行此範例中貼上下列程式碼<xref:System.Windows.Forms.FontDialog>名為`FontDialog1`並<xref:System.Windows.Forms.Button>名為`Button1`。  
  
 [!code-cpp[System.Windows.Forms.FontDialogMustExist#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.FontDialogMustExist/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.FontDialogMustExist#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.FontDialogMustExist/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.FontDialogMustExist#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.FontDialogMustExist/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.FontDialog.MaxSize" />
      </Docs>
    </Member>
    <Member MemberName="OnApply">
      <MemberSignature Language="C#" Value="protected virtual void OnApply (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnApply(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.FontDialog.OnApply(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnApply (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnApply(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnApply : EventArgs -&gt; unit&#xA;override this.OnApply : EventArgs -&gt; unit" Usage="fontDialog.OnApply e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.EventArgs" />，包含資料。</param>
        <summary>引發 <see cref="E:System.Windows.Forms.FontDialog.Apply" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 引發事件會透過委派叫用此事件處理常式。 如需概觀，請參閱[處理和引發事件](~/docs/standard/events/index.md)。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>當覆寫<see cref="M:System.Windows.Forms.FontDialog.OnApply(System.EventArgs)" />衍生類別時，請務必呼叫基底類別的<see cref="M:System.Windows.Forms.FontDialog.OnApply(System.EventArgs)" />方法。</para></block>
        <altmember cref="E:System.Windows.Forms.FontDialog.Apply" />
      </Docs>
    </Member>
    <Member MemberName="Options">
      <MemberSignature Language="C#" Value="protected int Options { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Options" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.FontDialog.Options" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Options As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property int Options { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Options : int" Usage="System.Windows.Forms.FontDialog.Options" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得值來初始化 <see cref="T:System.Windows.Forms.FontDialog" />。</summary>
        <value>初始化 <see cref="T:System.Windows.Forms.FontDialog" /> 的內部值的位元 (Bitwise) 組合。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.FontDialog.Options%2A>屬性會對應至用來初始化 [色彩] 對話方塊使用 Win32 的旗標。 使用的屬性<xref:System.Windows.Forms.FontDialog>類別來取得和設定選項。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public override void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.FontDialog.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Reset();" />
      <MemberSignature Language="F#" Value="override this.Reset : unit -&gt; unit" Usage="fontDialog.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>將所有對話方塊選項重設為預設值。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當選項會重設、 刪除線、 底線和色彩效果會啟用。 所列的字型包含只系統所支援的螢幕字型。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RunDialog">
      <MemberSignature Language="C#" Value="protected override bool RunDialog (IntPtr hWndOwner);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool RunDialog(native int hWndOwner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.FontDialog.RunDialog(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function RunDialog (hWndOwner As IntPtr) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool RunDialog(IntPtr hWndOwner);" />
      <MemberSignature Language="F#" Value="override this.RunDialog : nativeint -&gt; bool" Usage="fontDialog.RunDialog hWndOwner" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hWndOwner" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="hWndOwner">通用對話方塊之主控視窗 (Owner Window) 的視窗控制代碼 (Window Handle)。</param>
        <summary>指定檔案對話方塊。</summary>
        <returns>如果對話方塊執行成功，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.FontDialog.RunDialog%2A>字型 對話方塊中的使用者呼叫時，會叫用方法<xref:System.Windows.Forms.CommonDialog.ShowDialog%2A>方法。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScriptsOnly">
      <MemberSignature Language="C#" Value="public bool ScriptsOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ScriptsOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.FontDialog.ScriptsOnly" />
      <MemberSignature Language="VB.NET" Value="Public Property ScriptsOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ScriptsOnly { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ScriptsOnly : bool with get, set" Usage="System.Windows.Forms.FontDialog.ScriptsOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，指出對話方塊是否允許選取所有非 OEM、Symbol 和 ANSI 字元集的字型。</summary>
        <value>如果允許選取所有非 OEM、Symbol 和 ANSI 字元集的字型，則為 <see langword="true" />，否則為 <see langword="false" />。 預設值是 <see langword="false" />。</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.FontDialog.FixedPitchOnly" />
        <altmember cref="P:System.Windows.Forms.FontDialog.FontMustExist" />
      </Docs>
    </Member>
    <Member MemberName="ShowApply">
      <MemberSignature Language="C#" Value="public bool ShowApply { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowApply" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.FontDialog.ShowApply" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowApply As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowApply { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShowApply : bool with get, set" Usage="System.Windows.Forms.FontDialog.ShowApply" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，指出對話方塊是否包含 [套用] 按鈕。</summary>
        <value><see langword="true" /> 如果對話方塊包含**套用**按鈕; 否則<see langword="false" />。 預設值是 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列程式碼範例示範如何套用在選取項目<xref:System.Windows.Forms.FontDialog>中的文字<xref:System.Windows.Forms.RichTextBox>。 在事件處理常式，會顯示對話方塊中，範例會初始化<xref:System.Windows.Forms.FontDialog.ShowApply%2A>屬性，以`true`，然後顯示<xref:System.Windows.Forms.FontDialog>。 在 <xref:System.Windows.Forms.FontDialog.Apply>事件處理常式<xref:System.Windows.Forms.FontDialog.Font%2A>屬性指派給<xref:System.Windows.Forms.Control.Font%2A?displayProperty=nameWithType>屬性。  
  
 [!code-cpp[FontDialog.ShowApply#1](~/samples/snippets/cpp/VS_Snippets_Winforms/FontDialog.ShowApply/CPP/form1.cpp#1)]
 [!code-csharp[FontDialog.ShowApply#1](~/samples/snippets/csharp/VS_Snippets_Winforms/FontDialog.ShowApply/CS/form1.cs#1)]
 [!code-vb[FontDialog.ShowApply#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/FontDialog.ShowApply/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.FontDialog.ShowColor" />
        <altmember cref="P:System.Windows.Forms.FontDialog.ShowEffects" />
        <altmember cref="P:System.Windows.Forms.FontDialog.ShowHelp" />
      </Docs>
    </Member>
    <Member MemberName="ShowColor">
      <MemberSignature Language="C#" Value="public bool ShowColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.FontDialog.ShowColor" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowColor As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowColor { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShowColor : bool with get, set" Usage="System.Windows.Forms.FontDialog.ShowColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，指出對話方塊是否顯示色彩選擇。</summary>
        <value>如果對話方塊顯示色彩選擇，則為 <see langword="true" />，否則為 <see langword="false" />。 預設值是 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列程式碼範例會使用<xref:System.Windows.Forms.CommonDialog.ShowDialog%2A>顯示<xref:System.Windows.Forms.FontDialog>。 此程式碼需要<xref:System.Windows.Forms.Form>已建立具有<xref:System.Windows.Forms.TextBox>並放置在其上的按鈕。 它也需要`fontDialog1`已建立。 <xref:System.Drawing.Font>包含大小資訊，但不是色彩資訊。  
  
 [!code-cpp[Classic FontDialog Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic FontDialog Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FontDialog Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic FontDialog Example/CS/source.cs#1)]
 [!code-vb[Classic FontDialog Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic FontDialog Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.FontDialog.Color" />
        <altmember cref="P:System.Windows.Forms.FontDialog.ShowApply" />
        <altmember cref="P:System.Windows.Forms.FontDialog.ShowEffects" />
        <altmember cref="P:System.Windows.Forms.FontDialog.ShowHelp" />
      </Docs>
    </Member>
    <Member MemberName="ShowEffects">
      <MemberSignature Language="C#" Value="public bool ShowEffects { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowEffects" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.FontDialog.ShowEffects" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowEffects As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowEffects { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShowEffects : bool with get, set" Usage="System.Windows.Forms.FontDialog.ShowEffects" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，指出對話方塊是否包含允許使用者指定刪除線、底線和文字色彩選項的控制項。</summary>
        <value>如果對話方塊包含設定刪除線、底線和文字色彩的選項，則為 <see langword="true" />，否則為 <see langword="false" />。 預設值是 <see langword="true" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Windows.Forms.FontDialog.MinSize%2A>， <xref:System.Windows.Forms.FontDialog.MaxSize%2A>，<xref:System.Windows.Forms.FontDialog.ShowEffects%2A>並<xref:System.Windows.Forms.FontDialog.FontMustExist%2A>成員和處理<xref:System.Windows.Forms.FontDialog.Apply>事件。 若要在表單，其中包含執行此範例中貼上下列程式碼<xref:System.Windows.Forms.FontDialog>名為`FontDialog1`並<xref:System.Windows.Forms.Button>名為`Button1`。  
  
 [!code-cpp[System.Windows.Forms.FontDialogMustExist#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.FontDialogMustExist/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.FontDialogMustExist#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.FontDialogMustExist/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.FontDialogMustExist#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.FontDialogMustExist/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.FontDialog.ShowApply" />
        <altmember cref="P:System.Windows.Forms.FontDialog.ShowColor" />
        <altmember cref="P:System.Windows.Forms.FontDialog.ShowHelp" />
      </Docs>
    </Member>
    <Member MemberName="ShowHelp">
      <MemberSignature Language="C#" Value="public bool ShowHelp { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowHelp" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.FontDialog.ShowHelp" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowHelp As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowHelp { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShowHelp : bool with get, set" Usage="System.Windows.Forms.FontDialog.ShowHelp" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，指出對話方塊是否顯示 [說明] 按鈕。</summary>
        <value>如果對話方塊顯示 [說明] 按鈕，則為 <see langword="true" />，否則為 <see langword="false" />。 預設值是 <see langword="false" />。</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.FontDialog.ShowApply" />
        <altmember cref="P:System.Windows.Forms.FontDialog.ShowColor" />
        <altmember cref="P:System.Windows.Forms.FontDialog.ShowEffects" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.FontDialog.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="abstract member ToString : unit -&gt; string&#xA;override this.ToString : unit -&gt; string" Usage="fontDialog.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>擷取字串，其中包含對話方塊中選取之目前字型的名稱。</summary>
        <returns>字串，其中包含目前選取字型的名稱。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>