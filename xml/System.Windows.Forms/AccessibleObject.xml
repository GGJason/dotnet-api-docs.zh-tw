<Type Name="AccessibleObject" FullName="System.Windows.Forms.AccessibleObject">
  <Metadata><Meta Name="ms.openlocfilehash" Value="14b686f479793cbb7e6fd25b1bc140eeb0bda8e4" /><Meta Name="ms.sourcegitcommit" Value="2dd0eede6edd6dd3d2aa8f79010848658b967609" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="04/18/2019" /><Meta Name="ms.locfileid" Value="58874991" /></Metadata><TypeSignature Language="C#" Value="public class AccessibleObject : System.Runtime.InteropServices.StandardOleMarshalObject, Accessibility.IAccessible, System.Reflection.IReflect" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AccessibleObject extends System.Runtime.InteropServices.StandardOleMarshalObject implements class Accessibility.IAccessible, class System.Reflection.IReflect" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.AccessibleObject" />
  <TypeSignature Language="VB.NET" Value="Public Class AccessibleObject&#xA;Inherits StandardOleMarshalObject&#xA;Implements IAccessible, IReflect" />
  <TypeSignature Language="C++ CLI" Value="public ref class AccessibleObject : System::Runtime::InteropServices::StandardOleMarshalObject, Accessibility::IAccessible, System::Reflection::IReflect" />
  <TypeSignature Language="F#" Value="type AccessibleObject = class&#xA;    inherit StandardOleMarshalObject&#xA;    interface IReflect&#xA;    interface IAccessible" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Runtime.InteropServices.StandardOleMarshalObject</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-1.1">System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Accessibility.IAccessible</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Reflection.IReflect</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>提供資訊，讓協助工具應用程式能用於為殘障使用者調整應用程式的使用者介面 (UI)。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 協助工具應用程式可以調整以提高可用性行動不便的使用者應用程式的功能。  
  
 針對有視力障礙的使用者，您可以調整以符合其需求的軟體和作業系統功能。 比方說，您可以放大文字和影像，並以對比呈現它們。 此外，您可以方便色盲使用適當的色彩。 對於使用者而言是嚴重視障，電腦都可使用螢幕上轉譯的畫面檢閱輔助存取語音或以動態的可重新整理，Braille 顯示器的文字。  
  
 如果使用者是聽障人士中,，您可以設計使用視覺提示，例如閃爍的工具列; 的程式或者，您可以將語音的訊息顯示成文字。 例如，當開啟時，`SoundSentry`在控制台中的協助工具選項的功能，提供視覺警告時，系統會進行警示音效。  
  
 對於不便的使用者，您可以設計控制項可改善或不需要鍵盤和滑鼠使用，藉此改善電腦協助工具。 控制台中可提供協助。 比方說，有一個替代方法是使用數字鍵台而不是滑鼠，以瀏覽。 另一個選項，稱為`StickyKeys`，可以讓使用者無法按住兩個或多個索引鍵 （例如 CTRL + P) 的一次一次輸入一個索引鍵來取得相同的結果。  
  
 使用認知的使用者和語言障礙，您可以設計更能兼容其需求的軟體程式。 例如，使用手機藏起來或被控制項的排序、 簡單的顯示、 較少的字詞和以小學標準為目標的閱讀程度，可以獲得這些使用者。  
  
 使用者有拿取製劑，您可以設計軟體程式，以消除奪取的模式。  
  
 如需有關協助工具，包括協助工具應用程式的相關資訊，請參閱 MSDN library 中或在 Microsoft 網站上的 Microsoft 協助工具的文件。  
  
> [!NOTE]
>  若要使用<xref:System.Windows.Forms.AccessibleObject>，您必須加入的參考`Accessibility`以安裝組件[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]。 Windows Form 僅支援 Active Accessibility 2.0。  
  
   
  
## Examples  
 下列程式碼範例示範如何建立協助工具感知的圖表控制項，使用<xref:System.Windows.Forms.AccessibleObject>和<xref:System.Windows.Forms.Control.ControlAccessibleObject>類別可公開存取的資訊。 控制項會繪製圖例以及兩個曲線。 `ChartControlAccessibleObject`類別，衍生自`ControlAccessibleObject`，會在<xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A>方法，以提供針對 chart 控制項的自訂存取資訊。 因為不是實際圖表圖例<xref:System.Windows.Forms.Control>-為基礎的控制，但改為繪製由圖表控制項，它並沒有任何內建的可存取資訊。 基於這個原因，`ChartControlAccessibleObject`類別會覆寫<xref:System.Windows.Forms.AccessibleObject.GetChild%2A>方法來傳回`CurveLegendAccessibleObject`，表示圖例的每個部分的存取資訊。 當存取感知的應用程式會使用這個控制項時，控制項可以提供所需的存取資訊。  
  
 [!code-cpp[System.Windows.Forms.AccessibleObject#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CPP/chartcontrol.cpp#1)]
 [!code-csharp[System.Windows.Forms.AccessibleObject#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CS/chartcontrol.cs#1)]
 [!code-vb[System.Windows.Forms.AccessibleObject#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/VB/chartcontrol.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para>當您繼承自這個類別時，您可以覆寫所有成員。</para></block>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AccessibleObject ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AccessibleObject();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Windows.Forms.AccessibleObject" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 一般而言，當您使用這個方法來建立可存取物件時，您會提供您自己的實作的屬性和方法的類別，以提供您的應用程式特有的功能。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.accChildCount">
      <MemberSignature Language="C#" Value="int Accessibility.IAccessible.accChildCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Accessibility.IAccessible.accChildCount" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accChildCount" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property accChildCount As Integer Implements IAccessible.accChildCount" />
      <MemberSignature Language="C++ CLI" Value="property int Accessibility::IAccessible::accChildCount { int get(); };" />
      <MemberSignature Language="F#" Usage="Accessibility.IAccessible.accChildCount" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Accessibility.IAccessible.accChildCount</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得屬於這個物件的子介面數目。 如需這個成員的說明，請參閱 <see cref="P:Accessibility.IAccessible.accChildCount" />。</summary>
        <value>屬於這個物件的可存取子物件數目。 如果此物件沒有子物件，這個值會是 0。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個成員是明確介面成員實作， 只有在 <xref:System.Windows.Forms.AccessibleObject> 執行個體轉換成 <xref:Accessibility.IAccessible> 介面時，才能使用這個成員。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.accDoDefaultAction">
      <MemberSignature Language="C#" Value="void IAccessible.accDoDefaultAction (object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void Accessibility.IAccessible.accDoDefaultAction(object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accDoDefaultAction(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub accDoDefaultAction (childID As Object) Implements IAccessible.accDoDefaultAction" />
      <MemberSignature Language="C++ CLI" Value=" virtual void Accessibility.IAccessible.accDoDefaultAction(System::Object ^ childID) = Accessibility::IAccessible::accDoDefaultAction;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.accDoDefaultAction(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="childID">表示可存取物件的 <see cref="T:Accessibility.IAccessible" /> 介面 / 子系 ID 組內的子系 ID。</param>
        <summary>執行指定物件的預設動作。 並非所有的物件都有預設動作。 如需這個成員的說明，請參閱 <see cref="M:Accessibility.IAccessible.accDoDefaultAction(System.Object)" />。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個成員是明確介面成員實作， 只有在 <xref:System.Windows.Forms.AccessibleObject> 執行個體轉換成 <xref:Accessibility.IAccessible> 介面時，才能使用這個成員。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.accFocus">
      <MemberSignature Language="C#" Value="object Accessibility.IAccessible.accFocus { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Accessibility.IAccessible.accFocus" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accFocus" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property accFocus As Object Implements IAccessible.accFocus" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ Accessibility::IAccessible::accFocus { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="Accessibility.IAccessible.accFocus" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Accessibility.IAccessible.accFocus</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得具有鍵盤焦點的物件。 如需這個成員的說明，請參閱 <see cref="P:Accessibility.IAccessible.accFocus" />。</summary>
        <value>具有鍵盤焦點的物件。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 傳回值類型<xref:System.Windows.Forms.AccessibleObject.Accessibility%23IAccessible%23accFocus%2A>屬性相依於具有鍵盤焦點的物件。 下表描述的物件型別<xref:System.Windows.Forms.AccessibleObject.Accessibility%23IAccessible%23accFocus%2A>屬性會傳回。  
  
|類型|描述|  
|----------|-----------------|  
|`null`|此物件沒有鍵盤焦點本身並不包含具有鍵盤焦點的子系。|  
|整數|如果目前的物件有鍵盤焦點，則 0否則，具有鍵盤焦點的子可存取物件的子系 ID。|  
|<xref:Accessibility.IAccessible>|可存取子物件具有鍵盤焦點。|  
  
 這個成員是明確介面成員實作， 只有在 <xref:System.Windows.Forms.AccessibleObject> 執行個體轉換成 <xref:Accessibility.IAccessible> 介面時，才能使用這個成員。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.accHitTest">
      <MemberSignature Language="C#" Value="object IAccessible.accHitTest (int xLeft, int yTop);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object Accessibility.IAccessible.accHitTest(int32 xLeft, int32 yTop) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accHitTest(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Function accHitTest (xLeft As Integer, yTop As Integer) As Object Implements IAccessible.accHitTest" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ Accessibility.IAccessible.accHitTest(int xLeft, int yTop) = Accessibility::IAccessible::accHitTest;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.accHitTest(System.Int32,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xLeft" Type="System.Int32" />
        <Parameter Name="yTop" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="xLeft">水平座標。</param>
        <param name="yTop">垂直座標。</param>
        <summary>取得位於指定螢幕座標的子物件。 如需這個成員的說明，請參閱 <see cref="M:Accessibility.IAccessible.accHitTest(System.Int32,System.Int32)" />。</summary>
        <returns>位於 <paramref name="xLeft" /> 和 <paramref name="yTop" /> 指定的位置上的可存取物件。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 下表描述的物件型別<xref:System.Windows.Forms.AccessibleObject.Accessibility%23IAccessible%23accHitTest%2A>方法可以傳回。  
  
|類型|描述|  
|----------|-----------------|  
|<xref:Accessibility.IAccessible>|在指定的方向可存取的物件。|  
|整數|0 指定的點是否為目前物件或物件的界限; 之外否則，會識別在指定的方向的可存取物件的子系 ID。|  
  
 這個成員是明確介面成員實作， 只有在 <xref:System.Windows.Forms.AccessibleObject> 執行個體轉換成 <xref:Accessibility.IAccessible> 介面時，才能使用這個成員。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.accLocation">
      <MemberSignature Language="C#" Value="void IAccessible.accLocation (out int pxLeft, out int pyTop, out int pcxWidth, out int pcyHeight, object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void Accessibility.IAccessible.accLocation([out] int32&amp; pxLeft, [out] int32&amp; pyTop, [out] int32&amp; pcxWidth, [out] int32&amp; pcyHeight, object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accLocation(System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub accLocation (ByRef pxLeft As Integer, ByRef pyTop As Integer, ByRef pcxWidth As Integer, ByRef pcyHeight As Integer, childID As Object) Implements IAccessible.accLocation" />
      <MemberSignature Language="C++ CLI" Value=" virtual void Accessibility.IAccessible.accLocation([Runtime::InteropServices::Out] int % pxLeft, [Runtime::InteropServices::Out] int % pyTop, [Runtime::InteropServices::Out] int % pcxWidth, [Runtime::InteropServices::Out] int % pcyHeight, System::Object ^ childID) = Accessibility::IAccessible::accLocation;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.accLocation(System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pxLeft" Type="System.Int32" RefType="out" />
        <Parameter Name="pyTop" Type="System.Int32" RefType="out" />
        <Parameter Name="pcxWidth" Type="System.Int32" RefType="out" />
        <Parameter Name="pcyHeight" Type="System.Int32" RefType="out" />
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="pxLeft">當這個方法傳回時，會包含物件左邊緣的 X 座標。 這個參數會以未初始化的狀態傳遞。</param>
        <param name="pyTop">當這個方法傳回時，會包含物件上邊緣的 Y 座標。 這個參數會以未初始化的狀態傳遞。</param>
        <param name="pcxWidth">當這個方法傳回時，會包含物件的寬度。 這個參數會以未初始化的狀態傳遞。</param>
        <param name="pcyHeight">當這個方法傳回時，會包含物件的高度。 這個參數會以未初始化的狀態傳遞。</param>
        <param name="childID">可存取物件的 ID 編號。 這個參數為 0 時，表示要取得物件的位置；如果是子系 ID，則表示要取得其中一個物件的子物件之位置。</param>
        <summary>取得物件的目前螢幕位置。 如需這個成員的說明，請參閱 <see cref="M:Accessibility.IAccessible.accLocation(System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.Object)" />。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個成員是明確介面成員實作， 只有在 <xref:System.Windows.Forms.AccessibleObject> 執行個體轉換成 <xref:Accessibility.IAccessible> 介面時，才能使用這個成員。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.accNavigate">
      <MemberSignature Language="C#" Value="object IAccessible.accNavigate (int navDir, object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object Accessibility.IAccessible.accNavigate(int32 navDir, object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accNavigate(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function accNavigate (navDir As Integer, childID As Object) As Object Implements IAccessible.accNavigate" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ Accessibility.IAccessible.accNavigate(int navDir, System::Object ^ childID) = Accessibility::IAccessible::accNavigate;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.accNavigate(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navDir" Type="System.Int32" />
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="navDir">其中一個 <see cref="T:System.Windows.Forms.AccessibleNavigation" /> 列舉型別，指定要巡覽的方向。</param>
        <param name="childID">可存取物件的 ID 編號。 這個參數為 0 時，表示從物件開始；如果是子系 ID，則表示從其中一個物件的子物件開始。</param>
        <summary>巡覽至相對於目前物件的可存取物件。 如需這個成員的說明，請參閱 <see cref="M:Accessibility.IAccessible.accNavigate(System.Int32,System.Object)" />。</summary>
        <returns>位於 <paramref name="navDir" /> 指定的值的可存取物件。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 下表描述的物件型別<xref:System.Windows.Forms.AccessibleObject.Accessibility%23IAccessible%23accNavigate%2A>方法可以傳回。  
  
|類型|描述|  
|----------|-----------------|  
|`null`|在指定的方向不是可存取的物件。|  
|<xref:Accessibility.IAccessible>|在指定的方向可存取的物件。|  
|整數|識別可存取物件在指定的方向的子系識別碼。 使用父代<xref:Accessibility.IAccessible>並存取可存取物件的子系 ID。|  
  
 這個成員是明確介面成員實作， 只有在 <xref:System.Windows.Forms.AccessibleObject> 執行個體轉換成 <xref:Accessibility.IAccessible> 介面時，才能使用這個成員。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.accParent">
      <MemberSignature Language="C#" Value="object Accessibility.IAccessible.accParent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Accessibility.IAccessible.accParent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accParent" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property accParent As Object Implements IAccessible.accParent" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ Accessibility::IAccessible::accParent { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="Accessibility.IAccessible.accParent" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Accessibility.IAccessible.accParent</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得這個物件的可存取父物件。 如需這個成員的說明，請參閱 <see cref="P:Accessibility.IAccessible.accParent" />。</summary>
        <value><see cref="T:Accessibility.IAccessible" />，表示可存取物件的父系；如果並沒有父物件，則為 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個成員是明確介面成員實作， 只有在 <xref:System.Windows.Forms.AccessibleObject> 執行個體轉換成 <xref:Accessibility.IAccessible> 介面時，才能使用這個成員。 
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.accSelect">
      <MemberSignature Language="C#" Value="void IAccessible.accSelect (int flagsSelect, object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void Accessibility.IAccessible.accSelect(int32 flagsSelect, object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accSelect(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub accSelect (flagsSelect As Integer, childID As Object) Implements IAccessible.accSelect" />
      <MemberSignature Language="C++ CLI" Value=" virtual void Accessibility.IAccessible.accSelect(int flagsSelect, System::Object ^ childID) = Accessibility::IAccessible::accSelect;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.accSelect(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="flagsSelect" Type="System.Int32" />
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="flagsSelect"><see cref="T:System.Windows.Forms.AccessibleSelection" /> 值的位元組合。</param>
        <param name="childID">要在其上變更選擇的可存取物件的 ID 編號。 這個參數為 0 時，表示選取此物件；如果是子系 ID，則表示選取其中一個物件的子物件。</param>
        <summary>修改選取或者移動可存取物件的鍵盤焦點。 如需這個成員的說明，請參閱 <see cref="M:Accessibility.IAccessible.accSelect(System.Int32,System.Object)" />。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 下列程式碼說明這<xref:System.Windows.Forms.AccessibleSelection>值，指定當呼叫`Select`執行複雜的選取作業。  
  
|運算|旗標的組合|  
|---------------|----------------------|  
|若要模擬按一下|<xref:System.Windows.Forms.AccessibleSelection.TakeFocus> OR <xref:System.Windows.Forms.AccessibleSelection.TakeSelection>|  
|若要藉由模擬 CTRL + 按一下選取的目標項目|<xref:System.Windows.Forms.AccessibleSelection.TakeFocus> OR <xref:System.Windows.Forms.AccessibleSelection.AddSelection>|  
|若要取消選取目標項目，藉由模擬 CTRL + 按一下|<xref:System.Windows.Forms.AccessibleSelection.TakeFocus> OR <xref:System.Windows.Forms.AccessibleSelection.RemoveSelection>|  
|模擬 SHIFT + 按一下|<xref:System.Windows.Forms.AccessibleSelection.TakeFocus> OR <xref:System.Windows.Forms.AccessibleSelection.ExtendSelection>|  
|選取某個範圍的物件，並將焦點放在最後一個物件|指定<xref:System.Windows.Forms.AccessibleSelection.TakeFocus>上設定的選取項目錨點開始的物件。 然後呼叫一次選取並指定<xref:System.Windows.Forms.AccessibleSelection.TakeFocus>或<xref:System.Windows.Forms.AccessibleSelection.ExtendSelection>上的最後一個物件。|  
|若要取消選取所有物件|指定<xref:System.Windows.Forms.AccessibleSelection.TakeSelection>任何物件。 這個旗標會取消選取所有選取的物件，只選取除外。 然後呼叫一次選取並指定<xref:System.Windows.Forms.AccessibleSelection.RemoveSelection>相同的物件。|  
  
 這個成員是明確介面成員實作， 只有在 <xref:System.Windows.Forms.AccessibleObject> 執行個體轉換成 <xref:Accessibility.IAccessible> 介面時，才能使用這個成員。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.accSelection">
      <MemberSignature Language="C#" Value="object Accessibility.IAccessible.accSelection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Accessibility.IAccessible.accSelection" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accSelection" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property accSelection As Object Implements IAccessible.accSelection" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ Accessibility::IAccessible::accSelection { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="Accessibility.IAccessible.accSelection" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Accessibility.IAccessible.accSelection</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得可存取物件的選定子物件。 如需這個成員的說明，請參閱 <see cref="P:Accessibility.IAccessible.accSelection" />。</summary>
        <value>可存取物件的選定子物件。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 下表描述的物件型別<xref:System.Windows.Forms.AccessibleObject.Accessibility%23IAccessible%23accSelection%2A>屬性會傳回  
  
|類型|描述|  
|----------|-----------------|  
|`null`|不選取任何子物件。|  
|<xref:Accessibility.IAccessible>|選取子可存取的物件。|  
|整數|識別可存取物件所選取子系 ID。 使用父代<xref:Accessibility.IAccessible>並存取可存取物件的子系 ID。|  
|`IEnumVARIANT`|選取的子物件的清單。|  
  
 這個成員是明確介面成員實作， 只有在 <xref:System.Windows.Forms.AccessibleObject> 執行個體轉換成 <xref:Accessibility.IAccessible> 介面時，才能使用這個成員。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.get_accChild">
      <MemberSignature Language="C#" Value="object IAccessible.get_accChild (object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object Accessibility.IAccessible.get_accChild(object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accChild(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function get_accChild (childID As Object) As Object Implements IAccessible.get_accChild" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ Accessibility.IAccessible.get_accChild(System::Object ^ childID) = Accessibility::IAccessible::get_accChild;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.get_accChild(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="childID">要擷取之子物件的 ID 編號。</param>
        <summary>擷取指定的子物件。</summary>
        <returns>指定的子物件 (如果存在) 或 <see langword="null" /> (如果不存在)。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.get_accDefaultAction">
      <MemberSignature Language="C#" Value="string IAccessible.get_accDefaultAction (object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string Accessibility.IAccessible.get_accDefaultAction(object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accDefaultAction(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function get_accDefaultAction (childID As Object) As String Implements IAccessible.get_accDefaultAction" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ Accessibility.IAccessible.get_accDefaultAction(System::Object ^ childID) = Accessibility::IAccessible::get_accDefaultAction;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.get_accDefaultAction(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="childID">要取得預設動作之可存取物件的 ID 編號。 這個參數為 0 時，表示選取此物件；如果是子系 ID，則表示選取其中一個物件的子物件。</param>
        <summary>傳回字串，指出指定之物件的預設動作。</summary>
        <returns>字串，表示 <paramref name="childID" /> 的預設動作或 <see langword="name" /> (如果 <paramref name="childID" /> 沒有預設動作)。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.get_accDescription">
      <MemberSignature Language="C#" Value="string IAccessible.get_accDescription (object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string Accessibility.IAccessible.get_accDescription(object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accDescription(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function get_accDescription (childID As Object) As String Implements IAccessible.get_accDescription" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ Accessibility.IAccessible.get_accDescription(System::Object ^ childID) = Accessibility::IAccessible::get_accDescription;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.get_accDescription(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="childID">要取得描述之可存取物件的 ID 編號。 這個參數為 0 時，表示選取此物件；如果是子系 ID，則表示選取其中一個物件的子物件。</param>
        <summary>傳回字串，描述指定之可存取物件的視覺外觀。</summary>
        <returns>當地語系化的字串，描述指定的可存取物件。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.get_accHelp">
      <MemberSignature Language="C#" Value="string IAccessible.get_accHelp (object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string Accessibility.IAccessible.get_accHelp(object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accHelp(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function get_accHelp (childID As Object) As String Implements IAccessible.get_accHelp" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ Accessibility.IAccessible.get_accHelp(System::Object ^ childID) = Accessibility::IAccessible::get_accHelp;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.get_accHelp(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="childID">要取得說明資訊之可存取物件的 ID 編號。 這個參數為 0 時，表示選取此物件；如果是子系 ID，則表示選取其中一個物件的子物件。</param>
        <summary>擷取與指定之可存取物件相關聯 WinHelp 檔案的完整路徑。</summary>
        <returns>與 <paramref name="childID" /> 相關聯之 WinHelp 檔案的完整路徑。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.get_accHelpTopic">
      <MemberSignature Language="C#" Value="int IAccessible.get_accHelpTopic (out string pszHelpFile, object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 Accessibility.IAccessible.get_accHelpTopic([out] string&amp; pszHelpFile, object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accHelpTopic(System.String@,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function get_accHelpTopic (ByRef pszHelpFile As String, childID As Object) As Integer Implements IAccessible.get_accHelpTopic" />
      <MemberSignature Language="C++ CLI" Value=" virtual int Accessibility.IAccessible.get_accHelpTopic([Runtime::InteropServices::Out] System::String ^ % pszHelpFile, System::Object ^ childID) = Accessibility::IAccessible::get_accHelpTopic;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.get_accHelpTopic(System.String@,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pszHelpFile" Type="System.String" RefType="out" />
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="pszHelpFile">方法傳回時，與指定之物件相關聯 WinHelp 檔案的完整路徑。</param>
        <param name="childID">要擷取說明主題之可存取物件的 ID 編號。 這個參數為 0 時，表示選取此物件；如果是子系 ID，則表示選取其中一個物件的子物件。</param>
        <summary>擷取與指定之物件相關聯 WinHelp 檔案的完整路徑，以及檔案中特定主題的識別碼。</summary>
        <returns><paramref name="pszHelpFile" /> 中特定主題的識別碼。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.get_accKeyboardShortcut">
      <MemberSignature Language="C#" Value="string IAccessible.get_accKeyboardShortcut (object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string Accessibility.IAccessible.get_accKeyboardShortcut(object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accKeyboardShortcut(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function get_accKeyboardShortcut (childID As Object) As String Implements IAccessible.get_accKeyboardShortcut" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ Accessibility.IAccessible.get_accKeyboardShortcut(System::Object ^ childID) = Accessibility::IAccessible::get_accKeyboardShortcut;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.get_accKeyboardShortcut(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="childID">要取得鍵盤快速鍵之可存取物件的 ID 編號。 這個參數為 0 時，表示選取此物件；如果是子系 ID，則表示選取其中一個物件的子物件。</param>
        <summary>擷取指定之物件的鍵盤快速鍵或存取金鑰。</summary>
        <returns>識別鍵盤快速鍵或 <see langword="null" /> (如果沒有與指定之物件相關聯的鍵盤快速鍵) 的當地語系化字串。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.get_accName">
      <MemberSignature Language="C#" Value="string IAccessible.get_accName (object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string Accessibility.IAccessible.get_accName(object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accName(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function get_accName (childID As Object) As String Implements IAccessible.get_accName" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ Accessibility.IAccessible.get_accName(System::Object ^ childID) = Accessibility::IAccessible::get_accName;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.get_accName(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="childID">要擷取其名稱之可存取物件的 ID 編號。 這個參數為 0 時，表示選取此物件；如果是子系 ID，則表示選取其中一個物件的子物件。</param>
        <summary>擷取指定之物件的名稱。</summary>
        <returns>指定之物件的名稱。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.get_accRole">
      <MemberSignature Language="C#" Value="object IAccessible.get_accRole (object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object Accessibility.IAccessible.get_accRole(object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accRole(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function get_accRole (childID As Object) As Object Implements IAccessible.get_accRole" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ Accessibility.IAccessible.get_accRole(System::Object ^ childID) = Accessibility::IAccessible::get_accRole;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.get_accRole(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="childID">要取得角色資訊之可存取物件的 ID 編號。 這個參數為 0 時，表示選取此物件；如果是子系 ID，則表示選取其中一個物件的子物件。</param>
        <summary>擷取描述指定之物件角色的資訊。</summary>
        <returns>物件，提供所指定可存取物件的角色資訊。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.get_accState">
      <MemberSignature Language="C#" Value="object IAccessible.get_accState (object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object Accessibility.IAccessible.get_accState(object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function get_accState (childID As Object) As Object Implements IAccessible.get_accState" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ Accessibility.IAccessible.get_accState(System::Object ^ childID) = Accessibility::IAccessible::get_accState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.get_accState(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="childID">要取得狀態資訊之可存取物件的 ID 編號。 這個參數為 0 時，表示選取此物件；如果是子系 ID，則表示選取其中一個物件的子物件。</param>
        <summary>擷取指定之可存取物件的目前狀態。</summary>
        <returns>描述指定之可存取物件目前狀態的物件。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.get_accValue">
      <MemberSignature Language="C#" Value="string IAccessible.get_accValue (object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string Accessibility.IAccessible.get_accValue(object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function get_accValue (childID As Object) As String Implements IAccessible.get_accValue" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ Accessibility.IAccessible.get_accValue(System::Object ^ childID) = Accessibility::IAccessible::get_accValue;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.get_accValue(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="childID">要擷取其值之可存取物件的 ID 編號。 這個參數為 0 時，表示選取此物件；如果是子系 ID，則表示選取其中一個物件的子物件。</param>
        <summary>擷取指定之可存取物件的值。 並非所有物件都有值。</summary>
        <returns><paramref name="childID" /> 的值或 <see langword="null" /> (如果物件沒有值)。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.set_accName">
      <MemberSignature Language="C#" Value="void IAccessible.set_accName (object childID, string newName);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void Accessibility.IAccessible.set_accName(object childID, string newName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#set_accName(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub set_accName (childID As Object, newName As String) Implements IAccessible.set_accName" />
      <MemberSignature Language="C++ CLI" Value=" virtual void Accessibility.IAccessible.set_accName(System::Object ^ childID, System::String ^ newName) = Accessibility::IAccessible::set_accName;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.set_accName(System.Object,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="childID" Type="System.Object" />
        <Parameter Name="newName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="childID">要獲指派新名稱之可存取物件的 ID 編號。 這個參數為 0 時，表示選取此物件；如果是子系 ID，則表示選取其中一個物件的子物件。</param>
        <param name="newName">要指派給 <paramref name="childID" /> 的新名稱。</param>
        <summary>將新的可存取名稱指派給指定項目。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.set_accValue">
      <MemberSignature Language="C#" Value="void IAccessible.set_accValue (object childID, string newValue);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void Accessibility.IAccessible.set_accValue(object childID, string newValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#set_accValue(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub set_accValue (childID As Object, newValue As String) Implements IAccessible.set_accValue" />
      <MemberSignature Language="C++ CLI" Value=" virtual void Accessibility.IAccessible.set_accValue(System::Object ^ childID, System::String ^ newValue) = Accessibility::IAccessible::set_accValue;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.set_accValue(System.Object,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="childID" Type="System.Object" />
        <Parameter Name="newValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="childID">要獲指派新值之可存取物件的 ID 編號。 這個參數為 0 時，表示選取此物件；如果是子系 ID，則表示選取其中一個物件的子物件。</param>
        <param name="newValue">要指派給指定之可存取物件的新值。</param>
        <summary>將新的值指派給指定項目。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Bounds">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.Rectangle Bounds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Rectangle Bounds" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.Bounds" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Bounds As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Rectangle Bounds { System::Drawing::Rectangle get(); };" />
      <MemberSignature Language="F#" Value="member this.Bounds : System.Drawing.Rectangle" Usage="System.Windows.Forms.AccessibleObject.Bounds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得可存取物件的位置和大小。</summary>
        <value><see cref="T:System.Drawing.Rectangle" />，表示可存取物件的界限。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.AccessibleObject.Bounds%2A>屬性會擷取螢幕座標中的物件之周框。 如果物件具有非矩形的圖案，這個屬性代表最小完全涵蓋了整個物件區域的矩形。 因此，非矩形物件，例如清單檢視項目，物件的週框矩形的座標可以如果失敗測試，藉由呼叫<xref:System.Windows.Forms.AccessibleObject.HitTest%2A>方法，因為<xref:System.Windows.Forms.AccessibleObject.HitTest%2A>決定物件的界限，以像素 x 像素為基礎。  
  
   
  
## Examples  
 下列範例示範如何建立協助工具感知的圖表控制項，使用<xref:System.Windows.Forms.AccessibleObject>和<xref:System.Windows.Forms.Control.ControlAccessibleObject>類別可公開存取的資訊。 控制項會繪製圖例以及兩個曲線。 `ChartControlAccessibleObject`類別，衍生自`ControlAccessibleObject`，會在<xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A>方法，以提供針對 chart 控制項的自訂存取資訊。 因為圖表圖例不會實際<xref:System.Windows.Forms.Control>-為基礎的控制，但改為繪製由圖表控制項，它並沒有任何內建的可存取資訊。 基於這個原因，`ChartControlAccessibleObject`類別會覆寫<xref:System.Windows.Forms.AccessibleObject.GetChild%2A>方法來傳回`CurveLegendAccessibleObject`，表示圖例的每個部分的存取資訊。 當存取感知的應用程式會使用這個控制項時，控制項可以提供所需的存取資訊。  
  
 此程式碼摘錄會示範如何覆寫<xref:System.Windows.Forms.AccessibleObject.Bounds%2A>屬性。 請參閱<xref:System.Windows.Forms.AccessibleObject>類別的完整程式碼範例的概觀。  
  
 [!code-cpp[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CPP/chartcontrol.cpp#6)]
 [!code-csharp[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CS/chartcontrol.cs#6)]
 [!code-vb[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/VB/chartcontrol.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">無法擷取控制項的界限。</exception>
        <block subset="none" type="overrides"><para>預設實作會傳回可存取物件的週框矩形，如果物件會包裝系統控制項;否則，它會傳回<see cref="F:System.Drawing.Rectangle.Empty" />。 所有可見的可存取物件必須支援這個方法。 音效的物件不支援這個方法。</para></block>
        <altmember cref="P:System.Windows.Forms.AccessibleObject.DefaultAction" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Description" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Help" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.KeyboardShortcut" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Name" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Parent" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Role" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.State" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Value" />
      </Docs>
    </Member>
    <Member MemberName="DefaultAction">
      <MemberSignature Language="C#" Value="public virtual string DefaultAction { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultAction" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.DefaultAction" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DefaultAction As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DefaultAction { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultAction : string" Usage="System.Windows.Forms.AccessibleObject.DefaultAction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得描述物件之預設動作的字串。 並非所有的物件都有預設動作。</summary>
        <value>物件預設動作的描述；若此物件沒有預設動作，則為 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 字串會描述不物件用途結果的物件執行的動作。 也就是列印文件的工具列按鈕有預設動作"Press"，而不是"會列印目前文件。 」 請勿混淆物件的預設動作，並將其值。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">無法擷取控制項的預設動作。</exception>
        <block subset="none" type="overrides"><para>如果物件會包裝; 的預設動作的系統控制項，預設實作會傳回可存取物件的預設動作否則，它會傳回<see langword="null" />。 執行動作的控制項應該支援此方法。 並非所有的物件有預設動作，且有些物件可能會有相關的預設動作其<see cref="P:System.Windows.Forms.AccessibleObject.Value" />屬性，如下列範例所示：選取的核取方塊具有 「 取消核取 」 的預設動作和值的 「 檢查 」。 已清除的核取方塊具有 「 檢查 」 的預設動作，值是 「 未核取 」。 標記為 「 列印 」 的按鈕有預設動作是 「 按下 「 沒有值。 靜態文字控制項或編輯控制項，顯示"Printer"沒有預設動作，不過會有值為"Printer"。 物件的<see cref="P:System.Windows.Forms.AccessibleObject.DefaultAction" />屬性應該是動詞或動詞簡短片語。</para></block>
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Bounds" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Description" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Help" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.KeyboardShortcut" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Name" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Parent" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Role" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.State" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Value" />
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public virtual string Description { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.Description" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Description As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Description { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Description : string" Usage="System.Windows.Forms.AccessibleObject.Description" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得描述指定物件之視覺外觀的字串。 並非所有的物件都有描述。</summary>
        <value>物件對使用者之視覺外觀的描述，如果物件並沒有描述，則為 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個屬性會描述物件的視覺外觀上與使用者。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">無法擷取控制項的描述。</exception>
        <block subset="none" type="overrides"><para>預設實作會傳回可存取物件的描述，如果物件會包裝系統控制項;否則，它會傳回<see langword="null" />。 描述通常用以針對視障或眼盲的使用者提供更高的內容。 它也可以使用搜尋內容或其他應用程式。 伺服器必須支援<see cref="P:System.Windows.Forms.AccessibleObject.Description" />屬性描述項目並不明顯的則它是多餘，根據物件的<see cref="P:System.Windows.Forms.AccessibleObject.Name" />， <see cref="P:System.Windows.Forms.AccessibleObject.Role" />， <see cref="P:System.Windows.Forms.AccessibleObject.State" />，和<see cref="P:System.Windows.Forms.AccessibleObject.Value" />屬性。 比方說，具有 [確定] 的按鈕不需要額外的資訊，但是顯示圖片的仙人掌的按鈕。 <see cref="P:System.Windows.Forms.AccessibleObject.Name" />， <see cref="P:System.Windows.Forms.AccessibleObject.Role" />，也可能<see cref="P:System.Windows.Forms.AccessibleObject.Help" />仙人掌按鈕的屬性會描述其用途，但<see cref="P:System.Windows.Forms.AccessibleObject.Description" />屬性傳達是無形的例如 「 顯示圖片的仙人掌按鈕 」 的資訊。</para></block>
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Bounds" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.DefaultAction" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Help" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.KeyboardShortcut" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Name" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Parent" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Role" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.State" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Value" />
      </Docs>
    </Member>
    <Member MemberName="DoDefaultAction">
      <MemberSignature Language="C#" Value="public virtual void DoDefaultAction ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DoDefaultAction() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.DoDefaultAction" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub DoDefaultAction ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void DoDefaultAction();" />
      <MemberSignature Language="F#" Value="abstract member DoDefaultAction : unit -&gt; unit&#xA;override this.DoDefaultAction : unit -&gt; unit" Usage="accessibleObject.DoDefaultAction " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>執行與這個可存取物件相關的預設動作。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 用戶端可以藉由檢查物件的擷取物件的預設動作<xref:System.Windows.Forms.AccessibleObject.DefaultAction%2A>屬性。 用戶端可以使用自動化 （如果支援） 而不是<xref:System.Windows.Forms.AccessibleObject.DoDefaultAction%2A>執行物件的預設動作。 不過，<xref:System.Windows.Forms.AccessibleObject.DoDefaultAction%2A>可讓您輕鬆地執行物件的最常用的動作。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">無法執行控制項的預設動作。</exception>
        <block subset="none" type="overrides"><para>由系統提供的使用者介面項目執行的預設動作，取決於鍵盤狀態。 也就是說，例如 SHIFT 輔助按鍵，ALT 或 ctrl 鍵是否按下 （無論是由使用者動作或以程式設計方式） 時<see cref="M:System.Windows.Forms.AccessibleObject.DoDefaultAction" />呼叫時，預設值的動作可能不是當這些索引鍵不是向下相同。 並非所有的物件都有預設動作。</para></block>
      </Docs>
    </Member>
    <Member MemberName="GetChild">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.AccessibleObject GetChild (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.AccessibleObject GetChild(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.GetChild(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetChild (index As Integer) As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::AccessibleObject ^ GetChild(int index);" />
      <MemberSignature Language="F#" Value="abstract member GetChild : int -&gt; System.Windows.Forms.AccessibleObject&#xA;override this.GetChild : int -&gt; System.Windows.Forms.AccessibleObject" Usage="accessibleObject.GetChild index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">可存取子系的以零起始的索引。</param>
        <summary>擷取與指定索引相對應的可存取子系。</summary>
        <returns><see cref="T:System.Windows.Forms.AccessibleObject" />，代表與指定索引相對應的可存取子系。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列範例示範如何建立協助工具感知的圖表控制項，使用<xref:System.Windows.Forms.AccessibleObject>和<xref:System.Windows.Forms.Control.ControlAccessibleObject>類別可公開存取的資訊。 控制項會繪製圖例以及兩個曲線。 `ChartControlAccessibleObject`類別，衍生自`ControlAccessibleObject`，會在<xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A>方法，以提供針對 chart 控制項的自訂存取資訊。 因為圖表圖例不會實際<xref:System.Windows.Forms.Control>-為基礎的控制，但改為繪製由圖表控制項，它並沒有任何內建的可存取資訊。 基於這個原因，`ChartControlAccessibleObject`類別會覆寫<xref:System.Windows.Forms.AccessibleObject.GetChild%2A>方法來傳回`CurveLegendAccessibleObject`，表示圖例的每個部分的存取資訊。 當存取感知的應用程式會使用這個控制項時，控制項可以提供所需的存取資訊。  
  
 此程式碼摘錄會示範如何覆寫<xref:System.Windows.Forms.AccessibleObject.GetChild%2A>方法。 請參閱<xref:System.Windows.Forms.AccessibleObject>類別的完整程式碼範例的概觀。  
  
 [!code-cpp[System.Windows.Forms.AccessibleObject#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CPP/chartcontrol.cpp#4)]
 [!code-csharp[System.Windows.Forms.AccessibleObject#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CS/chartcontrol.cs#4)]
 [!code-vb[System.Windows.Forms.AccessibleObject#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/VB/chartcontrol.vb#4)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>所有可存取的物件必須支援這個屬性。 如果不會覆寫方法，它會傳回<see langword="null" />。 可存取的物件必須提供自訂存取子系時，請覆寫這個方法。 如果索引是無效的則此方法應傳回<see langword="null" />。 當您覆寫這個方法時，您也必須覆寫<see cref="M:System.Windows.Forms.AccessibleObject.GetChildCount" />。</para></block>
      </Docs>
    </Member>
    <Member MemberName="GetChildCount">
      <MemberSignature Language="C#" Value="public virtual int GetChildCount ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetChildCount() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.GetChildCount" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetChildCount () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetChildCount();" />
      <MemberSignature Language="F#" Value="abstract member GetChildCount : unit -&gt; int&#xA;override this.GetChildCount : unit -&gt; int" Usage="accessibleObject.GetChildCount " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>擷取屬於可存取物件的子系數目。</summary>
        <returns>屬於可存取物件的子系數目。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列範例示範如何建立協助工具感知的圖表控制項，使用<xref:System.Windows.Forms.AccessibleObject>和<xref:System.Windows.Forms.Control.ControlAccessibleObject>類別可公開存取的資訊。 控制項會繪製圖例以及兩個曲線。 `ChartControlAccessibleObject`類別，衍生自`ControlAccessibleObject`，會在<xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A>方法，以提供針對 chart 控制項的自訂存取資訊。 因為圖表圖例不會實際<xref:System.Windows.Forms.Control>-為基礎的控制，但改為繪製由圖表控制項，它並沒有任何內建的可存取資訊。 基於這個原因，`ChartControlAccessibleObject`類別會覆寫<xref:System.Windows.Forms.AccessibleObject.GetChild%2A>方法來傳回`CurveLegendAccessibleObject`，表示圖例的每個部分的存取資訊。 當存取感知的應用程式會使用這個控制項時，控制項可以提供所需的存取資訊。  
  
 此程式碼示範顯示覆寫<xref:System.Windows.Forms.AccessibleObject.GetChildCount%2A>方法。 請參閱<xref:System.Windows.Forms.AccessibleObject>類別的完整程式碼範例的概觀。  
  
 [!code-cpp[System.Windows.Forms.AccessibleObject#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CPP/chartcontrol.cpp#4)]
 [!code-csharp[System.Windows.Forms.AccessibleObject#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CS/chartcontrol.cs#4)]
 [!code-vb[System.Windows.Forms.AccessibleObject#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/VB/chartcontrol.vb#4)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>所有的物件必須支援這個屬性。 預設的實作會傳回 -1。 可存取的物件必須提供自訂存取子系時，請覆寫這個方法。 當您覆寫這個方法時，您也必須覆寫<see cref="M:System.Windows.Forms.AccessibleObject.GetChild(System.Int32)" />。</para></block>
      </Docs>
    </Member>
    <Member MemberName="GetFocused">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.AccessibleObject GetFocused ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.AccessibleObject GetFocused() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.GetFocused" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFocused () As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::AccessibleObject ^ GetFocused();" />
      <MemberSignature Language="F#" Value="abstract member GetFocused : unit -&gt; System.Windows.Forms.AccessibleObject&#xA;override this.GetFocused : unit -&gt; System.Windows.Forms.AccessibleObject" Usage="accessibleObject.GetFocused " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>擷取具有鍵盤焦點的物件。</summary>
        <returns><see cref="T:System.Windows.Forms.AccessibleObject" />，指定目前焦點集中的子系。 如果物件本身是集中的焦點，這個方法會傳回呼叫物件。 如果沒有物件有焦點，則傳回 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 現用視窗的相關概念的鍵盤焦點。 現用視窗是使用者正在使用的前景視窗。 使用中視窗或作用中視窗的子物件具有鍵盤焦點的物件。  
  
 只有一個物件或容器內的項目可以有焦點，一次。 具有鍵盤焦點的物件不一定是所選的物件。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">無法擷取控制項。</exception>
        <block subset="none" type="overrides"><para>可以接收鍵盤焦點的所有物件都必須都支援這個屬性。</para></block>
        <altmember cref="M:System.Windows.Forms.AccessibleObject.GetChild(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetHelpTopic">
      <MemberSignature Language="C#" Value="public virtual int GetHelpTopic (out string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetHelpTopic([out] string&amp; fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.GetHelpTopic(System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetHelpTopic (ByRef fileName As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetHelpTopic([Runtime::InteropServices::Out] System::String ^ % fileName);" />
      <MemberSignature Language="F#" Value="abstract member GetHelpTopic :  -&gt; int&#xA;override this.GetHelpTopic :  -&gt; int" Usage="accessibleObject.GetHelpTopic fileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="fileName">傳回時，這個屬性會包含與這個可存取物件相關之通往說明檔的路徑。</param>
        <summary>取得說明主題識別項的識別項，以及與這個可存取物件相關之通往說明檔的路徑。</summary>
        <returns>說明主題的識別項，如果沒有說明主題，則為 -1。 傳回時，<paramref name="fileName" /> 參數會包含與這個可存取物件相關之通往說明檔的路徑。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 若要顯示說明<xref:System.Windows.Forms.AccessibleObject>使用 Windows 「 說明 」 系統，您可以傳遞的檔案名稱和主題識別碼至適當<xref:System.Windows.Forms.Help.ShowHelp%2A?displayProperty=nameWithType>方法<xref:System.Windows.Forms.Help>。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">無法擷取控制項的說明主題。</exception>
        <block subset="none" type="overrides"><para>並非所有的物件必須支援這個屬性。</para></block>
        <altmember cref="T:System.Windows.Forms.Help" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Help" />
      </Docs>
    </Member>
    <Member MemberName="GetSelected">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.AccessibleObject GetSelected ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.AccessibleObject GetSelected() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.GetSelected" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSelected () As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::AccessibleObject ^ GetSelected();" />
      <MemberSignature Language="F#" Value="abstract member GetSelected : unit -&gt; System.Windows.Forms.AccessibleObject&#xA;override this.GetSelected : unit -&gt; System.Windows.Forms.AccessibleObject" Usage="accessibleObject.GetSelected " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>擷取目前選取的子系。</summary>
        <returns><see cref="T:System.Windows.Forms.AccessibleObject" />，表示目前選取的子系。 如果物件本身被選取，這個方法會傳回呼叫物件。 如果目前沒有選取子系，且物件本身沒有焦點，則傳回 <see langword="null" />。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">選取的子系無法擷取。</exception>
        <block subset="none" type="overrides"><para>所有可選取的物件應該支援此屬性。</para></block>
      </Docs>
    </Member>
    <Member MemberName="Help">
      <MemberSignature Language="C#" Value="public virtual string Help { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Help" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.Help" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Help As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Help { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Help : string" Usage="System.Windows.Forms.AccessibleObject.Help" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得物件的用途或物件使用方式的描述。</summary>
        <value><see cref="T:System.String" />，包含物件的用途或物件使用方式的描述。 如果沒有定義說明，則傳回 <see langword="null" />。</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">無法擷取控制項的說明字串。</exception>
        <block subset="none" type="overrides"><para>並非所有的物件必須支援這個屬性。 一般而言，此屬性包含的工具提示樣式資訊是用來描述物件用途或如何使用它。 比方說，<see cref="P:System.Windows.Forms.AccessibleObject.Help" />印表機可能會顯示的工具列按鈕的屬性"會列印目前文件。 」 文字<see cref="P:System.Windows.Forms.AccessibleObject.Help" />屬性沒有使用者介面內是唯一的。 伺服器不需要支援<see cref="P:System.Windows.Forms.AccessibleObject.Help" />屬性如果其他屬性提供物件的足夠資訊的用途和物件可能會執行哪些動作。</para></block>
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Bounds" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.DefaultAction" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Description" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.KeyboardShortcut" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Name" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Parent" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Role" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.State" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Value" />
      </Docs>
    </Member>
    <Member MemberName="HitTest">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.AccessibleObject HitTest (int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.AccessibleObject HitTest(int32 x, int32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.HitTest(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function HitTest (x As Integer, y As Integer) As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::AccessibleObject ^ HitTest(int x, int y);" />
      <MemberSignature Language="F#" Value="abstract member HitTest : int * int -&gt; System.Windows.Forms.AccessibleObject&#xA;override this.HitTest : int * int -&gt; System.Windows.Forms.AccessibleObject" Usage="accessibleObject.HitTest (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x">水平的螢幕座標。</param>
        <param name="y">垂直的螢幕座標。</param>
        <summary>擷取位於指定螢幕座標的子物件。</summary>
        <returns><see cref="T:System.Windows.Forms.AccessibleObject" />，代表位於指定螢幕座標的子物件。 如果物件本身位在指定位置，這個方法會傳回呼叫物件。 如果測試的位置沒有物件，則傳回 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 針對非矩形物件，例如清單檢視項目，該物件的座標週框矩形的擷取<xref:System.Windows.Forms.AccessibleObject.Bounds%2A>如果使用測試可能會失敗<xref:System.Windows.Forms.AccessibleObject.HitTest%2A>，因為<xref:System.Windows.Forms.AccessibleObject.HitTest%2A>決定物件的界限，以像素 x 像素為基礎。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">控制項無法接受點擊測試 (Hit Test)。</exception>
        <block subset="none" type="overrides"><para>所有視覺物件必須支援這個方法。音效的物件並不支援它。</para></block>
      </Docs>
    </Member>
    <Member MemberName="KeyboardShortcut">
      <MemberSignature Language="C#" Value="public virtual string KeyboardShortcut { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string KeyboardShortcut" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.KeyboardShortcut" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property KeyboardShortcut As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ KeyboardShortcut { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.KeyboardShortcut : string" Usage="System.Windows.Forms.AccessibleObject.KeyboardShortcut" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得可存取物件的快速鍵或便捷鍵 (Access Key)。</summary>
        <value>可存取物件的快速鍵或便捷鍵；物件如果沒有相關的快速鍵，則為 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 存取金鑰，也就是助憶鍵，是功能表、 功能表項目、 按鈕或一些其他控制項的標籤文字中加底線的字元。 比方說，使用者可以按 ALT 鍵，同時也按指定之底線的按鍵，例如 ALT + F，若要開啟 顯示功能表`File`功能表。 若要使用便捷鍵的功能表項目，包含項目的功能表必須是作用中。 控制項，例如工具列按鈕和功能表項目通常會有相關聯的快速鍵。 功能表項目可以有與其相關聯的快速鍵和便捷鍵。 如果值<xref:System.Windows.Forms.AccessibleObject.KeyboardShortcut%2A>屬性是單一字元，您可以假設它是一種存取金鑰。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">無法擷取控制項的捷徑。</exception>
        <block subset="none" type="overrides"><para>有快速鍵或便捷鍵的所有物件應該都支援此屬性。</para></block>
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Bounds" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.DefaultAction" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Description" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Help" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Name" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Parent" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Role" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.State" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Value" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public virtual string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Windows.Forms.AccessibleObject.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定物件名稱。</summary>
        <value>物件名稱；如果屬性尚未設定，則為 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.AccessibleObject.Name%2A>屬性是用戶端用來識別、 搜尋或宣告的使用者物件的字串。 若要存取子物件的名稱，您必須先呼叫<xref:System.Windows.Forms.AccessibleObject.GetChild%2A>具有您要擷取其名稱之子系的索引。  
  
   
  
## Examples  
 下列範例示範如何建立協助工具感知的圖表控制項，使用<xref:System.Windows.Forms.AccessibleObject>和<xref:System.Windows.Forms.Control.ControlAccessibleObject>類別可公開存取的資訊。 控制項會繪製圖例以及兩個曲線。 `ChartControlAccessibleObject`類別，衍生自`ControlAccessibleObject`，會在<xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A>方法，以提供針對 chart 控制項的自訂存取資訊。 因為圖表圖例不會實際<xref:System.Windows.Forms.Control>-為基礎的控制，但改為繪製由圖表控制項，它並沒有任何內建的可存取資訊。 基於這個原因，`ChartControlAccessibleObject`類別會覆寫<xref:System.Windows.Forms.AccessibleObject.GetChild%2A>方法來傳回`CurveLegendAccessibleObject`，表示圖例的每個部分的存取資訊。 當存取感知的應用程式會使用這個控制項時，控制項可以提供所需的存取資訊。  
  
 此程式碼摘錄會示範如何覆寫<xref:System.Windows.Forms.AccessibleObject.Name%2A>屬性。 請參閱<xref:System.Windows.Forms.AccessibleObject>類別的完整程式碼範例的概觀。  
  
 [!code-cpp[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CPP/chartcontrol.cpp#6)]
 [!code-csharp[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CS/chartcontrol.cs#6)]
 [!code-vb[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/VB/chartcontrol.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">無法擷取或設定控制項的名稱。</exception>
        <block subset="none" type="overrides"><para>所有的物件應該支援此屬性。 物件的名稱應該直覺，讓使用者了解物件的意義或用途。 此外，請確認<see langword="Name" />是唯一相對於父項中任何同層級物件的屬性。 資料表內的瀏覽顯示部分使用者特別困難的問題。 因此，伺服器開發人員應該讓資料表資料格名稱盡量具有描述性。 比方說，您可以建立資料格名稱，藉由結合名稱的資料列和資料行，它會佔用，例如"A1"。 不過，它通常最好是使用更具描述性的名稱，例如"Karin，年 2 月 」。 許多物件，例如圖示、 功能表、 核取方塊、 下拉式方塊和其他控制項中，有會向使用者顯示的標籤。 向使用者顯示任何標籤應用於物件的<see cref="P:System.Windows.Forms.AccessibleObject.Name" />屬性。 如需詳細資訊，請參閱<see cref="P:System.Windows.Forms.AccessibleObject.Name" />屬性。  
  
如果您使用功能表或按鈕文字<see cref="P:System.Windows.Forms.AccessibleObject.Name" />屬性，去除連字號 (&amp;)，將標記鍵盤存取金鑰。</para></block>
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Bounds" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.DefaultAction" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Description" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Help" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.KeyboardShortcut" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Parent" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Role" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.State" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Value" />
      </Docs>
    </Member>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.AccessibleObject Navigate (System.Windows.Forms.AccessibleNavigation navdir);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.AccessibleObject Navigate(valuetype System.Windows.Forms.AccessibleNavigation navdir) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Navigate(System.Windows.Forms.AccessibleNavigation)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Navigate (navdir As AccessibleNavigation) As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::AccessibleObject ^ Navigate(System::Windows::Forms::AccessibleNavigation navdir);" />
      <MemberSignature Language="F#" Value="abstract member Navigate : System.Windows.Forms.AccessibleNavigation -&gt; System.Windows.Forms.AccessibleObject&#xA;override this.Navigate : System.Windows.Forms.AccessibleNavigation -&gt; System.Windows.Forms.AccessibleObject" Usage="accessibleObject.Navigate navdir" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navdir" Type="System.Windows.Forms.AccessibleNavigation" />
      </Parameters>
      <Docs>
        <param name="navdir">其中一個 <see cref="T:System.Windows.Forms.AccessibleNavigation" /> 值。</param>
        <summary>可巡覽到另一個可存取物件。</summary>
        <returns><see cref="T:System.Windows.Forms.AccessibleObject" />，代表其中一個 <see cref="T:System.Windows.Forms.AccessibleNavigation" /> 值。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 一律在容器內的使用者介面項目只有導覽、 空間和邏輯。 使用空間巡覽時，用戶端只能巡覽使用在開始物件的同層級。 根據搭配邏輯巡覽的巡覽旗標，用戶端可以瀏覽到子系或同層級的開始物件。 這個方法不會變更選取範圍或焦點。 若要將焦點變更，或選取的物件，使用<xref:System.Windows.Forms.AccessibleObject.Select%2A>。 <xref:System.Windows.Forms.AccessibleObject.Navigate%2A>方法會擷取僅使用者介面項目有定義的螢幕位置。  
  
   
  
## Examples  
 下列範例示範如何建立協助工具感知的圖表控制項，使用<xref:System.Windows.Forms.AccessibleObject>和<xref:System.Windows.Forms.Control.ControlAccessibleObject>類別可公開存取的資訊。 控制項會繪製圖例以及兩個曲線。 `ChartControlAccessibleObject`類別，衍生自`ControlAccessibleObject`，會在<xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A>方法，以提供針對 chart 控制項的自訂存取資訊。 因為圖表圖例不會實際<xref:System.Windows.Forms.Control>-為基礎的控制，但改為繪製由圖表控制項，它並沒有任何內建的可存取資訊。 基於這個原因，`ChartControlAccessibleObject`類別會覆寫<xref:System.Windows.Forms.AccessibleObject.GetChild%2A>方法來傳回`CurveLegendAccessibleObject`，表示圖例的每個部分的存取資訊。 當存取感知的應用程式會使用這個控制項時，控制項可以提供所需的存取資訊。  
  
 此程式碼示範顯示覆寫<xref:System.Windows.Forms.AccessibleObject.Navigate%2A>方法。 請參閱<xref:System.Windows.Forms.AccessibleObject>類別的完整程式碼範例的概觀。  
  
 [!code-cpp[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CPP/chartcontrol.cpp#6)]
 [!code-csharp[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CS/chartcontrol.cs#6)]
 [!code-vb[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/VB/chartcontrol.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">巡覽的嘗試失敗。</exception>
        <block subset="none" type="overrides"><para>所有視覺物件必須支援這個方法。 如果物件具有狀態<see cref="F:System.Windows.Forms.AccessibleStates.Invisible" />，巡覽至這個隱藏的物件可能會失敗。 部分的系統定義的介面項目，例如功能表、 功能表項目和快顯功能表可讓瀏覽至不可見的物件。 不過，其他的系統定義的使用者介面項目不支援這個。 可能的話，伺服器應該支援巡覽至物件的不可見的但這項支援並不是必要的用戶端不應預期它。</para></block>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.AccessibleObject Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.AccessibleObject Parent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.Parent" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Parent As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::AccessibleObject ^ Parent { System::Windows::Forms::AccessibleObject ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Parent : System.Windows.Forms.AccessibleObject" Usage="System.Windows.Forms.AccessibleObject.Parent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得可存取之物件的父系。</summary>
        <value>表示可存取物件之父系的 <see cref="T:System.Windows.Forms.AccessibleObject" />；如果沒有父物件，則為 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列範例示範如何建立協助工具感知的圖表控制項，使用<xref:System.Windows.Forms.AccessibleObject>和<xref:System.Windows.Forms.Control.ControlAccessibleObject>類別可公開存取的資訊。 控制項會繪製圖例以及兩個曲線。 `ChartControlAccessibleObject`類別，衍生自`ControlAccessibleObject`，會在<xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A>方法，以提供針對 chart 控制項的自訂存取資訊。 因為圖表圖例不會實際<xref:System.Windows.Forms.Control>-為基礎的控制，但改為繪製由圖表控制項，它並沒有任何內建的可存取資訊。 基於這個原因，`ChartControlAccessibleObject`類別會覆寫<xref:System.Windows.Forms.AccessibleObject.GetChild%2A>方法來傳回`CurveLegendAccessibleObject`，表示圖例的每個部分的存取資訊。 當存取感知的應用程式會使用這個控制項時，控制項可以提供所需的存取資訊。  
  
 此程式碼摘錄會示範如何覆寫<xref:System.Windows.Forms.AccessibleObject.Parent%2A>屬性。 請參閱<xref:System.Windows.Forms.AccessibleObject>類別的完整程式碼範例的概觀。  
  
 [!code-cpp[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CPP/chartcontrol.cpp#6)]
 [!code-csharp[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CS/chartcontrol.cs#6)]
 [!code-vb[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/VB/chartcontrol.vb#6)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>所有的物件應該支援此屬性。</para></block>
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Bounds" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.DefaultAction" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Description" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Help" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.KeyboardShortcut" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Name" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Role" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.State" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Value" />
      </Docs>
    </Member>
    <Member MemberName="RaiseAutomationNotification">
      <MemberSignature Language="C#" Value="public bool RaiseAutomationNotification (System.Windows.Forms.Automation.AutomationNotificationKind notificationKind, System.Windows.Forms.Automation.AutomationNotificationProcessing notificationProcessing, string notificationText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RaiseAutomationNotification(valuetype System.Windows.Forms.Automation.AutomationNotificationKind notificationKind, valuetype System.Windows.Forms.Automation.AutomationNotificationProcessing notificationProcessing, string notificationText) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.RaiseAutomationNotification(System.Windows.Forms.Automation.AutomationNotificationKind,System.Windows.Forms.Automation.AutomationNotificationProcessing,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function RaiseAutomationNotification (notificationKind As AutomationNotificationKind, notificationProcessing As AutomationNotificationProcessing, notificationText As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RaiseAutomationNotification(System::Windows::Forms::Automation::AutomationNotificationKind notificationKind, System::Windows::Forms::Automation::AutomationNotificationProcessing notificationProcessing, System::String ^ notificationText);" />
      <MemberSignature Language="F#" Value="member this.RaiseAutomationNotification : System.Windows.Forms.Automation.AutomationNotificationKind * System.Windows.Forms.Automation.AutomationNotificationProcessing * string -&gt; bool" Usage="accessibleObject.RaiseAutomationNotification (notificationKind, notificationProcessing, notificationText)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="notificationKind" Type="System.Windows.Forms.Automation.AutomationNotificationKind" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.8" />
        <Parameter Name="notificationProcessing" Type="System.Windows.Forms.Automation.AutomationNotificationProcessing" Index="1" FrameworkAlternate="netcore-3.0;netframework-4.8" />
        <Parameter Name="notificationText" Type="System.String" Index="2" FrameworkAlternate="netcore-3.0;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="notificationKind">通知類型。</param>
        <param name="notificationProcessing">如何處理通知的指示器。</param>
        <param name="notificationText">通知文字。</param>
        <summary>引發使用者介面自動化通知事件。</summary>
        <returns>如果作業成功，則為 <see langword="true" />；如果基本的 Windows 基礎結構無法使用或作業失敗，則為 <see langword="false" />。 呼叫 <see cref="M:System.Runtime.InteropServices.Marshal.GetLastWin32Error" /> 以查看詳細資料。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks

這個事件是從 Windows 10 1709年版開始提供。
  
       ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RaiseLiveRegionChanged">
      <MemberSignature Language="C#" Value="public virtual bool RaiseLiveRegionChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool RaiseLiveRegionChanged() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.RaiseLiveRegionChanged" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RaiseLiveRegionChanged () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool RaiseLiveRegionChanged();" />
      <MemberSignature Language="F#" Value="abstract member RaiseLiveRegionChanged : unit -&gt; bool&#xA;override this.RaiseLiveRegionChanged : unit -&gt; bool" Usage="accessibleObject.RaiseLiveRegionChanged " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>引發 LiveRegionChanged 使用者介面自動化事件。</summary>
        <returns>若作業成功，則為 <see langword="true" />；否則為 <see langword="False" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks

必須在支援的 UI 自動化即時區域功能的衍生類別中覆寫這個方法。
  
     ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">不支援協助工具物件即時區域。</exception>
      </Docs>
    </Member>
    <Member MemberName="Role">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.AccessibleRole Role { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.AccessibleRole Role" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.Role" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Role As AccessibleRole" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::AccessibleRole Role { System::Windows::Forms::AccessibleRole get(); };" />
      <MemberSignature Language="F#" Value="member this.Role : System.Windows.Forms.AccessibleRole" Usage="System.Windows.Forms.AccessibleObject.Role" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleRole</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得這個可存取之物件的角色。</summary>
        <value>其中一個 <see cref="T:System.Windows.Forms.AccessibleRole" /> 值；如果尚未指定角色，則為 <see cref="F:System.Windows.Forms.AccessibleRole.None" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 物件的角色，可協助說明物件的函數。  
  
   
  
## Examples  
 下列範例示範如何建立協助工具感知的圖表控制項，使用<xref:System.Windows.Forms.AccessibleObject>和<xref:System.Windows.Forms.Control.ControlAccessibleObject>類別可公開存取的資訊。 控制項會繪製圖例以及兩個曲線。 `ChartControlAccessibleObject`類別，衍生自`ControlAccessibleObject`，會在<xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A>方法，以提供針對 chart 控制項的自訂存取資訊。 因為圖表圖例不會實際<xref:System.Windows.Forms.Control>-為基礎的控制，但改為繪製由圖表控制項，它並沒有任何內建的可存取資訊。 基於這個原因，`ChartControlAccessibleObject`類別會覆寫<xref:System.Windows.Forms.AccessibleObject.GetChild%2A>方法來傳回`CurveLegendAccessibleObject`，表示圖例的每個部分的存取資訊。 當存取感知的應用程式會使用這個控制項時，控制項可以提供所需的存取資訊。  
  
 此程式碼摘錄會示範如何覆寫<xref:System.Windows.Forms.AccessibleObject.Role%2A>屬性。 請參閱<xref:System.Windows.Forms.AccessibleObject>類別的完整程式碼範例的概觀。  
  
 [!code-cpp[System.Windows.Forms.AccessibleObject#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CPP/chartcontrol.cpp#4)]
 [!code-csharp[System.Windows.Forms.AccessibleObject#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CS/chartcontrol.cs#4)]
 [!code-vb[System.Windows.Forms.AccessibleObject#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/VB/chartcontrol.vb#4)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>所有的物件應該支援此屬性。</para></block>
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Bounds" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.DefaultAction" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Description" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Help" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.KeyboardShortcut" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Name" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Parent" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.State" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Value" />
      </Docs>
    </Member>
    <Member MemberName="RuntimeIDFirstItem">
      <MemberSignature Language="C#" Value="protected const int RuntimeIDFirstItem = 42;" />
      <MemberSignature Language="ILAsm" Value=".field family static literal int32 RuntimeIDFirstItem = (42)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.AccessibleObject.RuntimeIDFirstItem" />
      <MemberSignature Language="VB.NET" Value="Protected Const RuntimeIDFirstItem As Integer  = 42" />
      <MemberSignature Language="C++ CLI" Value="protected: int RuntimeIDFirstItem = 42;" />
      <MemberSignature Language="F#" Value="val mutable RuntimeIDFirstItem : int" Usage="System.Windows.Forms.AccessibleObject.RuntimeIDFirstItem" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>42</MemberValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public virtual void Select (System.Windows.Forms.AccessibleSelection flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select(valuetype System.Windows.Forms.AccessibleSelection flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Select(System.Windows.Forms.AccessibleSelection)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select (flags As AccessibleSelection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select(System::Windows::Forms::AccessibleSelection flags);" />
      <MemberSignature Language="F#" Value="abstract member Select : System.Windows.Forms.AccessibleSelection -&gt; unit&#xA;override this.Select : System.Windows.Forms.AccessibleSelection -&gt; unit" Usage="accessibleObject.Select flags" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="flags" Type="System.Windows.Forms.AccessibleSelection" />
      </Parameters>
      <Docs>
        <param name="flags">其中一個 <see cref="T:System.Windows.Forms.AccessibleSelection" /> 值。</param>
        <summary>修改選取或者移動可存取物件的鍵盤焦點。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 應用程式可以使用這個方法來執行複雜的選取作業。  
  
 下列程式碼說明這<xref:System.Windows.Forms.AccessibleSelection>值，指定當呼叫<xref:System.Windows.Forms.AccessibleObject.Select%2A>執行複雜的選取作業。  
  
|運算|旗標的組合|  
|---------------|----------------------|  
|若要模擬按一下|<xref:System.Windows.Forms.AccessibleSelection.TakeFocus?displayProperty=nameWithType> `OR` <xref:System.Windows.Forms.AccessibleSelection.TakeSelection?displayProperty=nameWithType> **注意：** 如果從自己的應用程式中呼叫，這種組合將不會選取所需的控制項。 會有想要的效果，不過，如果從外部應用程式呼叫。|  
|若要藉由模擬 CTRL + 按一下選取的目標項目|<xref:System.Windows.Forms.AccessibleSelection.TakeFocus?displayProperty=nameWithType> `OR` <xref:System.Windows.Forms.AccessibleSelection.AddSelection?displayProperty=nameWithType>|  
|若要取消選取目標項目，藉由模擬 CTRL + 按一下|<xref:System.Windows.Forms.AccessibleSelection.TakeFocus?displayProperty=nameWithType> `OR` <xref:System.Windows.Forms.AccessibleSelection.RemoveSelection?displayProperty=nameWithType>|  
|模擬 SHIFT + 按一下|<xref:System.Windows.Forms.AccessibleSelection.TakeFocus?displayProperty=nameWithType> `OR` <xref:System.Windows.Forms.AccessibleSelection.ExtendSelection?displayProperty=nameWithType>|  
|選取某個範圍的物件，並將焦點放在最後一個物件|指定<xref:System.Windows.Forms.AccessibleSelection.TakeFocus?displayProperty=nameWithType>上設定的選取項目錨點開始的物件。 然後呼叫<xref:System.Windows.Forms.AccessibleObject.Select%2A>一次，並指定<xref:System.Windows.Forms.AccessibleSelection.TakeFocus?displayProperty=nameWithType> `OR` <xref:System.Windows.Forms.AccessibleSelection.ExtendSelection?displayProperty=nameWithType>上的最後一個物件。|  
|若要取消選取所有物件|指定<xref:System.Windows.Forms.AccessibleSelection.TakeSelection?displayProperty=nameWithType>任何物件。 這個旗標會取消選取所有選取的物件，只選取除外。 然後呼叫<xref:System.Windows.Forms.AccessibleObject.Select%2A>一次，並指定<xref:System.Windows.Forms.AccessibleSelection.RemoveSelection?displayProperty=nameWithType>相同的物件。|  
  
   
  
## Examples  
 下列範例示範如何建立協助工具感知的圖表控制項，使用<xref:System.Windows.Forms.AccessibleObject>和<xref:System.Windows.Forms.Control.ControlAccessibleObject>類別可公開存取的資訊。 控制項會繪製圖例以及兩個曲線。 `ChartControlAccessibleObject`類別，衍生自`ControlAccessibleObject`，會在<xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A>方法，以提供針對 chart 控制項的自訂存取資訊。 因為圖表圖例不會實際<xref:System.Windows.Forms.Control>-為基礎的控制，但改為繪製由圖表控制項，它並沒有任何內建的可存取資訊。 基於這個原因，`ChartControlAccessibleObject`類別會覆寫<xref:System.Windows.Forms.AccessibleObject.GetChild%2A>方法來傳回`CurveLegendAccessibleObject`，表示圖例的每個部分的存取資訊。 當存取感知的應用程式會使用這個控制項時，控制項可以提供所需的存取資訊。  
  
 此程式碼示範顯示覆寫<xref:System.Windows.Forms.AccessibleObject.Select%2A>方法。 請參閱<xref:System.Windows.Forms.AccessibleObject>類別的完整程式碼範例的概觀。  
  
 [!code-cpp[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CPP/chartcontrol.cpp#6)]
 [!code-csharp[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CS/chartcontrol.cs#6)]
 [!code-vb[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/VB/chartcontrol.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">無法執行選取。</exception>
        <block subset="none" type="overrides"><para>可以選取或接收鍵盤焦點的所有物件都必須都支援這個方法。</para></block>
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.AccessibleStates State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.AccessibleStates State" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.State" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property State As AccessibleStates" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::AccessibleStates State { System::Windows::Forms::AccessibleStates get(); };" />
      <MemberSignature Language="F#" Value="member this.State : System.Windows.Forms.AccessibleStates" Usage="System.Windows.Forms.AccessibleObject.State" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleStates</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得這個可存取物件的狀態。</summary>
        <value>其中一個 <see cref="T:System.Windows.Forms.AccessibleStates" /> 值；如果狀態尚未設定，則為 <see cref="F:System.Windows.Forms.AccessibleStates.None" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列範例示範如何建立協助工具感知的圖表控制項，使用<xref:System.Windows.Forms.AccessibleObject>和<xref:System.Windows.Forms.Control.ControlAccessibleObject>類別可公開存取的資訊。 控制項會繪製圖例以及兩個曲線。 `ChartControlAccessibleObject`類別，衍生自`ControlAccessibleObject`，會在<xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A>方法，以提供針對 chart 控制項的自訂存取資訊。 因為圖表圖例不會實際<xref:System.Windows.Forms.Control>-為基礎的控制，但改為繪製由圖表控制項，它並沒有任何內建的可存取資訊。 基於這個原因，`ChartControlAccessibleObject`類別會覆寫<xref:System.Windows.Forms.AccessibleObject.GetChild%2A>方法來傳回`CurveLegendAccessibleObject`，表示圖例的每個部分的存取資訊。 當存取感知的應用程式會使用這個控制項時，控制項可以提供所需的存取資訊。  
  
 此程式碼摘錄會示範如何覆寫<xref:System.Windows.Forms.AccessibleObject.State%2A>屬性。 請參閱<xref:System.Windows.Forms.AccessibleObject>類別的完整程式碼範例的概觀。  
  
 [!code-cpp[System.Windows.Forms.AccessibleObject#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CPP/chartcontrol.cpp#4)]
 [!code-csharp[System.Windows.Forms.AccessibleObject#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CS/chartcontrol.cs#4)]
 [!code-vb[System.Windows.Forms.AccessibleObject#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/VB/chartcontrol.vb#4)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>所有的物件應該支援此屬性。</para></block>
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Bounds" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.DefaultAction" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Description" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Help" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.KeyboardShortcut" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Name" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Parent" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Role" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Value" />
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.IReflect.GetField">
      <MemberSignature Language="C#" Value="System.Reflection.FieldInfo IReflect.GetField (string name, System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Reflection.FieldInfo System.Reflection.IReflect.GetField(string name, valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetField(System.String,System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Function GetField (name As String, bindingAttr As BindingFlags) As FieldInfo Implements IReflect.GetField" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Reflection::FieldInfo ^ System.Reflection.IReflect.GetField(System::String ^ name, System::Reflection::BindingFlags bindingAttr) = System::Reflection::IReflect::GetField;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetField(System.String,System.Reflection.BindingFlags)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.FieldInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name">要尋找的欄位名稱。</param>
        <param name="bindingAttr">繫結屬性，用來控制搜尋。</param>
        <summary>取得對應到指定欄位和繫結旗標的 <see cref="T:System.Reflection.FieldInfo" /> 物件。 如需這個成員的說明，請參閱 <see cref="M:System.Reflection.IReflect.GetField(System.String,System.Reflection.BindingFlags)" />。</summary>
        <returns><see cref="T:System.Reflection.FieldInfo" /> 物件，包含符合 <paramref name="bindingAttr" /> 中所指定搜尋條件約束 (Constraint) 的具名物件欄位資訊。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個成員是明確介面成員實作， 只有在 <xref:System.Windows.Forms.AccessibleObject> 執行個體轉換成 <xref:System.Reflection.IReflect> 介面時，才能使用這個成員。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Reflection.AmbiguousMatchException">物件會使用相同名稱，實作多重欄位。</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.IReflect.GetFields">
      <MemberSignature Language="C#" Value="System.Reflection.FieldInfo[] IReflect.GetFields (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Reflection.FieldInfo[] System.Reflection.IReflect.GetFields(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetFields(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Function GetFields (bindingAttr As BindingFlags) As FieldInfo() Implements IReflect.GetFields" />
      <MemberSignature Language="C++ CLI" Value=" virtual cli::array &lt;System::Reflection::FieldInfo ^&gt; ^ System.Reflection.IReflect.GetFields(System::Reflection::BindingFlags bindingAttr) = System::Reflection::IReflect::GetFields;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetFields(System.Reflection.BindingFlags)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.FieldInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr">繫結屬性，用來控制搜尋。</param>
        <summary>取得對應到目前類別的所有欄位之 <see cref="T:System.Reflection.FieldInfo" /> 物件陣列。 如需這個成員的說明，請參閱 <see cref="M:System.Reflection.IReflect.GetFields(System.Reflection.BindingFlags)" />。</summary>
        <returns><see cref="T:System.Reflection.FieldInfo" /> 物件陣列，包含符合 <paramref name="bindingAttr" /> 中所指定搜尋條件約束的這個反映物件所有欄位資訊。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 每個欄位都必須有唯一的名稱。 <xref:System.Reflection.BindingFlags.NonPublic?displayProperty=nameWithType>旗標會指定在搜尋中，包含非公用欄位。 <xref:System.Reflection.BindingFlags.Public?displayProperty=nameWithType>旗標會指定在搜尋中，包含公用欄位。  
  
 這個成員是明確介面成員實作， 只有在 <xref:System.Windows.Forms.AccessibleObject> 執行個體轉換成 <xref:System.Reflection.IReflect> 介面時，才能使用這個成員。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.IReflect.GetMember">
      <MemberSignature Language="C#" Value="System.Reflection.MemberInfo[] IReflect.GetMember (string name, System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Reflection.MemberInfo[] System.Reflection.IReflect.GetMember(string name, valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMember(System.String,System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Function GetMember (name As String, bindingAttr As BindingFlags) As MemberInfo() Implements IReflect.GetMember" />
      <MemberSignature Language="C++ CLI" Value=" virtual cli::array &lt;System::Reflection::MemberInfo ^&gt; ^ System.Reflection.IReflect.GetMember(System::String ^ name, System::Reflection::BindingFlags bindingAttr) = System::Reflection::IReflect::GetMember;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetMember(System.String,System.Reflection.BindingFlags)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name">要尋找的成員名稱。</param>
        <param name="bindingAttr">繫結屬性，用來控制搜尋。</param>
        <summary>取得 <see cref="T:System.Reflection.MemberInfo" /> 物件陣列，其會對應到所有公用成員或所有符合指定名稱的成員。 如需這個成員的說明，請參閱 <see cref="M:System.Reflection.IReflect.GetMember(System.String,System.Reflection.BindingFlags)" />。</summary>
        <returns>符合名稱參數的 <see cref="T:System.Reflection.MemberInfo" /> 物件陣列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個成員是明確介面成員實作， 只有在 <xref:System.Windows.Forms.AccessibleObject> 執行個體轉換成 <xref:System.Reflection.IReflect> 介面時，才能使用這個成員。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.IReflect.GetMembers">
      <MemberSignature Language="C#" Value="System.Reflection.MemberInfo[] IReflect.GetMembers (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Reflection.MemberInfo[] System.Reflection.IReflect.GetMembers(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMembers(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Function GetMembers (bindingAttr As BindingFlags) As MemberInfo() Implements IReflect.GetMembers" />
      <MemberSignature Language="C++ CLI" Value=" virtual cli::array &lt;System::Reflection::MemberInfo ^&gt; ^ System.Reflection.IReflect.GetMembers(System::Reflection::BindingFlags bindingAttr) = System::Reflection::IReflect::GetMembers;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetMembers(System.Reflection.BindingFlags)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr">繫結屬性，用來控制搜尋。</param>
        <summary>取得 <see cref="T:System.Reflection.MemberInfo" /> 物件陣列，其會對應到所有公用成員或目前類別的所有成員。 如需這個成員的說明，請參閱 <see cref="M:System.Reflection.IReflect.GetMembers(System.Reflection.BindingFlags)" />。</summary>
        <returns><see cref="T:System.Reflection.MemberInfo" /> 物件陣列，包含這個反映物件的所有成員資訊。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個成員是明確介面成員實作， 只有在 <xref:System.Windows.Forms.AccessibleObject> 執行個體轉換成 <xref:System.Reflection.IReflect> 介面時，才能使用這個成員。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.IReflect.GetMethod">
      <MemberSignature Language="C#" Value="System.Reflection.MethodInfo IReflect.GetMethod (string name, System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Reflection.MethodInfo System.Reflection.IReflect.GetMethod(string name, valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMethod(System.String,System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Function GetMethod (name As String, bindingAttr As BindingFlags) As MethodInfo Implements IReflect.GetMethod" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Reflection::MethodInfo ^ System.Reflection.IReflect.GetMethod(System::String ^ name, System::Reflection::BindingFlags bindingAttr) = System::Reflection::IReflect::GetMethod;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetMethod(System.String,System.Reflection.BindingFlags)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name">要尋找的成員名稱。</param>
        <param name="bindingAttr">繫結屬性，用來控制搜尋。</param>
        <summary>取得 <see cref="T:System.Reflection.MethodInfo" /> 物件，其會對應到指定搜尋條件約束下的指定方法。 如需這個成員的說明，請參閱 <see cref="M:System.Reflection.IReflect.GetMethod(System.String,System.Reflection.BindingFlags)" />。</summary>
        <returns><see cref="T:System.Reflection.MethodInfo" /> 物件，包含方法資訊，並且符合是根據 <paramref name="bindingAttr" /> 中所指定的方法名稱和搜尋條件約束。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個成員是明確介面成員實作， 只有在 <xref:System.Windows.Forms.AccessibleObject> 執行個體轉換成 <xref:System.Reflection.IReflect> 介面時，才能使用這個成員。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Reflection.AmbiguousMatchException">物件會使用相同名稱，實作多重方法。</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.IReflect.GetMethod">
      <MemberSignature Language="C#" Value="System.Reflection.MethodInfo IReflect.GetMethod (string name, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, Type[] types, System.Reflection.ParameterModifier[] modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Reflection.MethodInfo System.Reflection.IReflect.GetMethod(string name, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, class System.Type[] types, valuetype System.Reflection.ParameterModifier[] modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Reflection::MethodInfo ^ System.Reflection.IReflect.GetMethod(System::String ^ name, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, cli::array &lt;Type ^&gt; ^ types, cli::array &lt;System::Reflection::ParameterModifier&gt; ^ modifiers) = System::Reflection::IReflect::GetMethod;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="types" Type="System.Type[]" />
        <Parameter Name="modifiers" Type="System.Reflection.ParameterModifier[]" />
      </Parameters>
      <Docs>
        <param name="name">要尋找的成員名稱。</param>
        <param name="bindingAttr">繫結屬性，用來控制搜尋。</param>
        <param name="binder">該物件會實作 <see cref="T:System.Reflection.Binder" />，其中包含與此方法相關的屬性。</param>
        <param name="types">陣列，用來在多載方法中選擇。</param>
        <param name="modifiers">參數修飾詞的陣列，用來進行與參數簽章的繫結工作，其中該參數簽章的類別已修改。</param>
        <summary>使用 Type 陣列從多載方法中選擇，取得對應到指定方法的 <see cref="T:System.Reflection.MethodInfo" /> 物件。 如需這個成員的說明，請參閱 <see cref="M:System.Reflection.IReflect.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])" />。</summary>
        <returns>要求方法，符合所有指定參數。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 傳回值是根據 方法名稱、 相符項目<xref:System.Reflection.BindingFlags?displayProperty=nameWithType>列舉型別、 型別轉換所指定類型的`binder`參數，多載，而<xref:System.Reflection.ParameterInfo?displayProperty=nameWithType>描述方法的簽章。  
  
 這個成員是明確介面成員實作， 只有在 <xref:System.Windows.Forms.AccessibleObject> 執行個體轉換成 <xref:System.Reflection.IReflect> 介面時，才能使用這個成員。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Reflection.AmbiguousMatchException">物件會使用相同名稱，實作多重方法。</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.IReflect.GetMethods">
      <MemberSignature Language="C#" Value="System.Reflection.MethodInfo[] IReflect.GetMethods (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Reflection.MethodInfo[] System.Reflection.IReflect.GetMethods(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMethods(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Function GetMethods (bindingAttr As BindingFlags) As MethodInfo() Implements IReflect.GetMethods" />
      <MemberSignature Language="C++ CLI" Value=" virtual cli::array &lt;System::Reflection::MethodInfo ^&gt; ^ System.Reflection.IReflect.GetMethods(System::Reflection::BindingFlags bindingAttr) = System::Reflection::IReflect::GetMethods;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetMethods(System.Reflection.BindingFlags)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr">繫結屬性，用來控制搜尋。</param>
        <summary>取得包含所有公用方法或目前類別的所有方法的 <see cref="T:System.Reflection.MethodInfo" /> 物件陣列。 如需這個成員的說明，請參閱 <see cref="M:System.Reflection.IReflect.GetMethods(System.Reflection.BindingFlags)" />。</summary>
        <returns><see cref="T:System.Reflection.MethodInfo" /> 物件陣列，包含為符合 <see langword="bindingAttr" /> 中所指定搜尋條件約束的這個反映物件定義的所有方法。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個成員是明確介面成員實作， 只有在 <xref:System.Windows.Forms.AccessibleObject> 執行個體轉換成 <xref:System.Reflection.IReflect> 介面時，才能使用這個成員。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.IReflect.GetProperties">
      <MemberSignature Language="C#" Value="System.Reflection.PropertyInfo[] IReflect.GetProperties (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Reflection.PropertyInfo[] System.Reflection.IReflect.GetProperties(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetProperties(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Function GetProperties (bindingAttr As BindingFlags) As PropertyInfo() Implements IReflect.GetProperties" />
      <MemberSignature Language="C++ CLI" Value=" virtual cli::array &lt;System::Reflection::PropertyInfo ^&gt; ^ System.Reflection.IReflect.GetProperties(System::Reflection::BindingFlags bindingAttr) = System::Reflection::IReflect::GetProperties;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetProperties(System.Reflection.BindingFlags)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr">繫結屬性，用來控制搜尋。</param>
        <summary>取得 <see cref="T:System.Reflection.PropertyInfo" /> 物件陣列，其會對應到所有公用屬性或目前類別的所有屬性。 如需這個成員的說明，請參閱 <see cref="M:System.Reflection.IReflect.GetProperties(System.Reflection.BindingFlags)" />。</summary>
        <returns>所有屬性的 <see cref="T:System.Reflection.PropertyInfo" /> 物件陣列，定義於反映物件上。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個成員是明確介面成員實作， 只有在 <xref:System.Windows.Forms.AccessibleObject> 執行個體轉換成 <xref:System.Reflection.IReflect> 介面時，才能使用這個成員。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.IReflect.GetProperty">
      <MemberSignature Language="C#" Value="System.Reflection.PropertyInfo IReflect.GetProperty (string name, System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Reflection.PropertyInfo System.Reflection.IReflect.GetProperty(string name, valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetProperty(System.String,System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Function GetProperty (name As String, bindingAttr As BindingFlags) As PropertyInfo Implements IReflect.GetProperty" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Reflection::PropertyInfo ^ System.Reflection.IReflect.GetProperty(System::String ^ name, System::Reflection::BindingFlags bindingAttr) = System::Reflection::IReflect::GetProperty;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetProperty(System.String,System.Reflection.BindingFlags)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name">要尋找的屬性名稱。</param>
        <param name="bindingAttr">繫結屬性，用來控制搜尋。</param>
        <summary>取得 <see cref="T:System.Reflection.PropertyInfo" /> 物件，其會對應到指定搜尋條件約束下的指定屬性。 如需這個成員的說明，請參閱 <see cref="M:System.Reflection.IReflect.GetProperty(System.String,System.Reflection.BindingFlags)" />。</summary>
        <returns>所找到屬性的 <see cref="T:System.Reflection.PropertyInfo" /> 物件 (符合 <paramref name="bindingAttr" /> 中所指定的搜尋條件約束) 或 <see langword="null" /> (如果未找到屬性)。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個成員是明確介面成員實作， 只有在 <xref:System.Windows.Forms.AccessibleObject> 執行個體轉換成 <xref:System.Reflection.IReflect> 介面時，才能使用這個成員。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Reflection.AmbiguousMatchException">物件會使用相同名稱，實作多重方法。</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.IReflect.GetProperty">
      <MemberSignature Language="C#" Value="System.Reflection.PropertyInfo IReflect.GetProperty (string name, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, Type returnType, Type[] types, System.Reflection.ParameterModifier[] modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Reflection.PropertyInfo System.Reflection.IReflect.GetProperty(string name, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, class System.Type returnType, class System.Type[] types, valuetype System.Reflection.ParameterModifier[] modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Reflection::PropertyInfo ^ System.Reflection.IReflect.GetProperty(System::String ^ name, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, Type ^ returnType, cli::array &lt;Type ^&gt; ^ types, cli::array &lt;System::Reflection::ParameterModifier&gt; ^ modifiers) = System::Reflection::IReflect::GetProperty;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="returnType" Type="System.Type" />
        <Parameter Name="types" Type="System.Type[]" />
        <Parameter Name="modifiers" Type="System.Reflection.ParameterModifier[]" />
      </Parameters>
      <Docs>
        <param name="name">要尋找的成員名稱。</param>
        <param name="bindingAttr">繫結屬性，用來控制搜尋。</param>
        <param name="binder">可實作繫結器 (Binder) 的物件，繫結器包含與這個方法相關的屬性。</param>
        <param name="returnType">陣列，用來在多載方法中選擇。</param>
        <param name="types">參數修飾詞的陣列，用來進行與參數簽章的繫結工作，其中該參數簽章的類別已修改。</param>
        <param name="modifiers">陣列，用來選擇參數修飾詞。</param>
        <summary>取得 <see cref="T:System.Reflection.PropertyInfo" /> 物件，其會對應到具有指定搜尋條件約束的指定屬性。 如需這個成員的說明，請參閱 <see cref="M:System.Reflection.IReflect.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])" />。</summary>
        <returns><see cref="T:System.Reflection.PropertyInfo" /> 物件 (用於所找到的屬性，如果在這個反映物件中找到具有指定名稱的屬性) 或 <see langword="null" /> (如果找不到屬性)。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個成員是明確介面成員實作， 只有在 <xref:System.Windows.Forms.AccessibleObject> 執行個體轉換成 <xref:System.Reflection.IReflect> 介面時，才能使用這個成員。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.IReflect.InvokeMember">
      <MemberSignature Language="C#" Value="object IReflect.InvokeMember (string name, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object target, object[] args, System.Reflection.ParameterModifier[] modifiers, System.Globalization.CultureInfo culture, string[] namedParameters);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.Reflection.IReflect.InvokeMember(string name, valuetype System.Reflection.BindingFlags invokeAttr, class System.Reflection.Binder binder, object target, object[] args, valuetype System.Reflection.ParameterModifier[] modifiers, class System.Globalization.CultureInfo culture, string[] namedParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.Reflection.IReflect.InvokeMember(System::String ^ name, System::Reflection::BindingFlags invokeAttr, System::Reflection::Binder ^ binder, System::Object ^ target, cli::array &lt;System::Object ^&gt; ^ args, cli::array &lt;System::Reflection::ParameterModifier&gt; ^ modifiers, System::Globalization::CultureInfo ^ culture, cli::array &lt;System::String ^&gt; ^ namedParameters) = System::Reflection::IReflect::InvokeMember;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="invokeAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="target" Type="System.Object" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="modifiers" Type="System.Reflection.ParameterModifier[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="namedParameters" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="name">要尋找的成員名稱。</param>
        <param name="invokeAttr">其中一個 <see cref="T:System.Reflection.BindingFlags" /> 引動過程屬性。</param>
        <param name="binder">其中一個 <see cref="T:System.Reflection.BindingFlags" /> 位元旗標。 實作繫結器 (Binder)，其包含與這個方法相關的屬性。</param>
        <param name="target">要在其上叫用指定成員的物件。 對於靜態成員來說，會忽略這個參數。</param>
        <param name="args">物件陣列，包含要叫用的成員參數的數目、順序和型別。 如果沒有參數，則這是空陣列。</param>
        <param name="modifiers"><see cref="T:System.Reflection.ParameterModifier" /> 物件的陣列。</param>
        <param name="culture"><see cref="T:System.Globalization.CultureInfo" /> 的執行個體，用於管理類型的強制型轉。</param>
        <param name="namedParameters">參數的字串陣列。</param>
        <summary>叫用指定成員。 如需這個成員的說明，請參閱 <see cref="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />。</summary>
        <returns>指定成員。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `invokeAttr` 參數可能是建構函式、方法、屬性或欄位。 您必須指定適當的引動過程屬性。 藉由將空字串 ("") 傳遞為成員名稱的方式，叫用類別的預設成員。  
  
 `modifiers`參數的長度相同`args`參數，表示叫用的成員的中繼資料中的引數屬性。 參數可以具有下列屬性： pdIn，pdOut，pdRetval，pdOptional，和 pdHasDefault。 這些分別代表 [In]、[Out]、[retval]、[optional] 和預設參數。  
  
 這個成員是明確介面成員實作， 只有在 <xref:System.Windows.Forms.AccessibleObject> 執行個體轉換成 <xref:System.Reflection.IReflect> 介面時，才能使用這個成員。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="invokeAttr" /> 為 <see cref="F:System.Reflection.BindingFlags.CreateInstance" />，並且也設定其他位元旗標。

-或- <paramref name="invokeAttr" /> 不是 <see cref="F:System.Reflection.BindingFlags.CreateInstance" />，且名稱為 <see langword="null" />。

-或-

<paramref name="invokeAttr" /> 不是來自 <see cref="T:System.Reflection.BindingFlags" /> 的引動過程屬性。

-或-

<paramref name="invokeAttr" /> 會為屬性或欄位指定 get 和 set。

-或-

<paramref name="invokeAttr" /> 會指定欄位集和叫用方法。<paramref name="args" /> 會提供給欄位取得作業使用。

-或-

欄位 set 作業會指定一個以上的引數。</exception>
        <exception cref="T:System.MissingFieldException">找不到欄位或屬性。</exception>
        <exception cref="T:System.MissingMethodException">找不到方法。</exception>
        <exception cref="T:System.Security.SecurityException">叫用私用 (Private) 成員，而不使用必要的 <see cref="T:System.Security.Permissions.ReflectionPermission" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.IReflect.UnderlyingSystemType">
      <MemberSignature Language="C#" Value="Type System.Reflection.IReflect.UnderlyingSystemType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type System.Reflection.IReflect.UnderlyingSystemType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#UnderlyingSystemType" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property UnderlyingSystemType As Type Implements IReflect.UnderlyingSystemType" />
      <MemberSignature Language="C++ CLI" Value="property Type ^ System::Reflection::IReflect::UnderlyingSystemType { Type ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Reflection.IReflect.UnderlyingSystemType" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Reflection.IReflect.UnderlyingSystemType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得表示 <see cref="T:System.Reflection.IReflect" /> 物件的基礎型別。 如需這個成員的說明，請參閱 <see cref="P:System.Reflection.IReflect.UnderlyingSystemType" />。</summary>
        <value>表示 <see cref="T:System.Reflection.IReflect" /> 物件的基礎型別。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個成員是明確介面成員實作， 只有在 <xref:System.Windows.Forms.AccessibleObject> 執行個體轉換成 <xref:System.Reflection.IReflect> 介面時，才能使用這個成員。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="UseStdAccessibleObjects">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>將物件與 <see cref="T:System.Windows.Forms.AccessibleObject" /> 的執行個體產生關聯。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UseStdAccessibleObjects">
      <MemberSignature Language="C#" Value="protected void UseStdAccessibleObjects (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void UseStdAccessibleObjects(native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.UseStdAccessibleObjects(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub UseStdAccessibleObjects (handle As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void UseStdAccessibleObjects(IntPtr handle);" />
      <MemberSignature Language="F#" Value="member this.UseStdAccessibleObjects : nativeint -&gt; unit" Usage="accessibleObject.UseStdAccessibleObjects handle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle"><see cref="T:System.IntPtr" />，包含物件的控制代碼。</param>
        <summary>根據物件的控制代碼，將物件與 <see cref="T:System.Windows.Forms.AccessibleObject" /> 的執行個體產生關聯。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 包含自訂的 UI 物件，類似於系統提供的物件時，伺服器應用程式可以呼叫此函式。 伺服器應用程式會呼叫`CreateStdAccessibleObject`，並覆寫<xref:Accessibility.IAccessible>方法和屬性，視需要以符合其自訂的物件。 這種方法將完整實作所有的工作儲存 server 開發人員<xref:Accessibility.IAccessible>屬性和方法。 此函數很相似`CreateStdAccessibleProxy`，只不過`CreateStdAccessibleProxy`可讓您指定的類別名稱做為參數，而`CreateStdAccessibleObject`會使用相關聯的類別名稱`hwnd`。  
  
 呼叫這一版的`UseStdAccessible`等同於呼叫的用戶端 objid 的兩個參數版本。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UseStdAccessibleObjects">
      <MemberSignature Language="C#" Value="protected void UseStdAccessibleObjects (IntPtr handle, int objid);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void UseStdAccessibleObjects(native int handle, int32 objid) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.UseStdAccessibleObjects(System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub UseStdAccessibleObjects (handle As IntPtr, objid As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void UseStdAccessibleObjects(IntPtr handle, int objid);" />
      <MemberSignature Language="F#" Value="member this.UseStdAccessibleObjects : nativeint * int -&gt; unit" Usage="accessibleObject.UseStdAccessibleObjects (handle, objid)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
        <Parameter Name="objid" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="handle"><see cref="T:System.IntPtr" />，包含物件的控制代碼。</param>
        <param name="objid">Int，定義 <paramref name="handle" /> 參數所參考的物件型別。</param>
        <summary>根據物件的控制代碼和物件 ID，將物件與 <see cref="T:System.Windows.Forms.AccessibleObject" /> 的執行個體產生關聯。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 建立可存取物件使用的方法和屬性的指定型別的系統提供的使用者介面項目。  
  
 包含自訂的 UI 物件，類似於系統提供的物件時，伺服器應用程式可以呼叫此函式。 伺服器應用程式會呼叫`CreateStdAccessibleObject`，並覆寫<xref:Accessibility.IAccessible>方法和屬性，視需要以符合其自訂的物件。 這種方法將完整實作所有的工作儲存 server 開發人員<xref:Accessibility.IAccessible>屬性和方法。  
  
 有效`objid`值。  
  
|Object|值|描述|  
|------------|-----------|-----------------|  
|警示|0xFFFFFFF6|指的是與視窗或應用程式相關聯的訊息。|  
|插入號|0xFFFFFFF8|指的是文字插入列 （插入號） 視窗中。|  
|用戶端|0xFFFFFFFC|指的是視窗的工作區。 在大部分情況下，作業系統控制框架項目，並在用戶端物件包含應用程式可控制的所有項目。|  
|資料指標|0xFFFFFFF7|指的是滑鼠指標。 在系統中只有一個滑鼠指標，而且它不是視窗的子系。|  
|HSCROLL|0xFFFFFFFA|指的是視窗的水平捲軸。|  
|MENU|0xFFFFFFFD|指的是視窗的功能表列。|  
|SIZEGRIP|0xFFFFFFF9|指的是視窗的調整大小底框，位於視窗框架的右上角的選擇性框架元件。|  
|音效|0xFFFFFFF5|是指 sound 物件。 音效物件沒有螢幕位置或子系，但沒有名稱和狀態屬性。 也就是播放音效的應用程式的子系。|  
|SYSMENU|0xFFFFFFFF|指的是視窗的 [系統] 功能表。|  
|標題列|0xFFFFFFFE|指的是視窗的標題列。|  
|VSCROLL|0xFFFFFFFB|指的是視窗的垂直捲軸。|  
|視窗|0x00000000|指的是視窗本身而不是子物件。|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public virtual string Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.Value" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Value As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Value { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Value : string with get, set" Usage="System.Windows.Forms.AccessibleObject.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定可存取物件的數值。</summary>
        <value>可存取物件的值，或者，如果未設定物件值，則為 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 一般而言，<xref:System.Windows.Forms.AccessibleObject.Value%2A>屬性表示視覺物件所包含的資訊。 並非所有的物件支援<xref:System.Windows.Forms.AccessibleObject.Value%2A>屬性。  
  
 在大部分情況下，<xref:System.Windows.Forms.AccessibleObject.Value%2A>屬性用來告訴 visual 的物件資訊包含用戶端。 例如，編輯控制項的值是它所包含的文字，但功能表項目沒有任何值。  
  
 <xref:System.Windows.Forms.AccessibleObject.Value%2A>屬性可提供階層式的資訊，例如樹狀檢視控制項的情況下。 雖然樹狀檢視控制項中的父物件不提供資訊中的<xref:System.Windows.Forms.AccessibleObject.Value%2A>屬性，在控制項內的每個項目具有以零為起始的值，表示其在階層內的層級。 最上層的項目有值為零，第二個層級項目有值為 1，依此類推。  
  
> [!NOTE]
>  傳回的值從捲軸和 trackbar 可存取物件表示的百分比，因此它們都是介於 0 到 100 (含) 之間的整數。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">無法設定或擷取數值。</exception>
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Bounds" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.DefaultAction" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Description" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Help" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.KeyboardShortcut" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Name" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Parent" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Role" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.State" />
      </Docs>
    </Member>
  </Members>
</Type>