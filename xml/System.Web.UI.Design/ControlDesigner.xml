<Type Name="ControlDesigner" FullName="System.Web.UI.Design.ControlDesigner">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8c5c896260ea14833069ad421931890bd2df308f" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30591302" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ControlDesigner : System.Web.UI.Design.HtmlControlDesigner" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ControlDesigner extends System.Web.UI.Design.HtmlControlDesigner" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.Design.ControlDesigner" />
  <TypeSignature Language="VB.NET" Value="Public Class ControlDesigner&#xA;Inherits HtmlControlDesigner" />
  <TypeSignature Language="C++ CLI" Value="public ref class ControlDesigner : System::Web::UI::Design::HtmlControlDesigner" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Design.HtmlControlDesigner</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>提供基底控制項設計工具類別，以擴充 Web 伺服器控制項的設計模式行為。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Design.ControlDesigner>類別提供基底控制項設計工具類別可以繼承自和擴充設計主機中的 Web 伺服器控制項提供設計階段支援，例如[!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)]。  
  
 使用設計階段呈現的物件模型被改善對舊版本中，下列新基底類別，以提供簡化的物件模型的存取權：  
  
-   <xref:System.Web.UI.Design.ControlDesigner>這不是新的但已大幅改善。  
  
-   <xref:System.Web.UI.Design.ContainerControlDesigner>。  
  
-   <xref:System.Web.UI.Design.WebControls.CompositeControlDesigner>。  
  
## <a name="automatic-formatting"></a>自動格式化  
 您可以建立各種不同的自動和預先定義的格式，以簡化網頁開發人員會將複雜的樣式變更套用至自訂 Web 伺服器控制項的程序。 例如，<xref:System.Web.UI.Design.WebControls.TableDesigner>控制項是衍生自<xref:System.Web.UI.Design.ControlDesigner>類別，提供許多可供選擇的自動格式。 實作，提供在您的自訂控制項中的自動格式設定，請使用下列功能：  
  
-   <xref:System.Web.UI.Design.ControlDesigner.AutoFormats%2A> 屬性。  
  
-   <xref:System.Web.UI.Design.ControlDesigner.OnAutoFormatApplied%2A> 方法  
  
-   <xref:System.Web.UI.Design.DesignerAutoFormat> 類別。  
  
-   <xref:System.Web.UI.Design.DesignerAutoFormatStyle> 類別。  
  
## <a name="action-lists-smart-tags"></a>動作清單 （智慧標籤）  
 動作清單是功能表的重要或廣泛使用的網頁開發人員使用控制項可以在設計階段使用者介面 (UI) 中執行的工作，例如[!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)]。 例如，您的控制項的設計階段檢視可以提供可用工作的功能表。 這包括自動格式化控制項的工作。 若要深入了解動作清單，開始的下列功能：  
  
-   <xref:System.Web.UI.Design.ControlDesigner.ActionLists%2A> 屬性。  
  
-   <xref:System.ComponentModel.Design.DesignerActionList> 類別。  
  
-   <xref:System.ComponentModel.Design.DesignerActionList.GetSortedActionItems%2A> 方法  
  
-   <xref:System.ComponentModel.Design.DesignerActionListCollection> 類別。  
  
-   <xref:System.ComponentModel.Design.DesignerActionMethodItem> 類別。  
  
-   <xref:System.ComponentModel.Design.DesignerActionPropertyItem> 類別。  
  
## <a name="control-designer-regions"></a>控制項設計工具區域  
 區域是在 Web 伺服器控制項的設計階段檢視中可編輯區域。 這項功能提供了類似於 WYSIWYG 編輯樣板內容、 內部的控制項和屬性在設計階段。 您可以在區域中建立控制項的控制項設計工具，或您可以使用 [工具箱] 拖放控制項的區域。 區域是受管理的下列功能：  
  
-   <xref:System.Web.UI.Design.ControlDesigner.OnClick%2A> 方法  
  
-   <xref:System.Web.UI.Design.DesignerRegion> 類別。  
  
-   <xref:System.Web.UI.Design.EditableDesignerRegion> 類別。  
  
-   <xref:System.Web.UI.Design.ControlDesigner.GetEditableDesignerRegionContent%2A> 方法  
  
-   <xref:System.Web.UI.Design.ControlDesigner.SetEditableDesignerRegionContent%2A> 方法  
  
## <a name="templates"></a>範本  
 模型的設計階段編輯樣板化控制項，例如建立 UI<xref:System.Web.UI.WebControls.GridView>控制項，已經大幅改善從舊的版本。 您可以建立包含控制項的各種組件範本的複雜自訂控制項，而且您自訂控制項的設計工具可協助網頁開發人員正在修改範本的下列功能：  
  
-   <xref:System.Web.UI.Design.ControlDesigner.TemplateGroups%2A> 屬性。  
  
-   <xref:System.Web.UI.Design.ControlDesigner.InTemplateMode%2A> 屬性。  
  
-   <xref:System.Web.UI.Design.TemplateGroup> 類別。  
  
## <a name="design-time-rendering"></a>設計階段呈現  
 <xref:System.Web.UI.Design.ControlDesigner>類別具有下列方法，以支援的 Web 伺服器控制項的設計階段呈現。 大部分的這些方法都是與舊版相同：  
  
-   <xref:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml%2A> 方法  
  
-   <xref:System.Web.UI.Design.ControlDesigner.GetEmptyDesignTimeHtml%2A> 方法  
  
-   <xref:System.Web.UI.Design.ControlDesigner.GetErrorDesignTimeHtml%2A> 方法  
  
-   <xref:System.Web.UI.Design.ControlDesigner.UpdateDesignTimeHtml%2A> 方法  
  
-   <xref:System.Web.UI.Design.ControlDesigner.CreatePlaceHolderDesignTimeHtml%2A> 方法  
  
   
  
## Examples  
 下列程式碼範例示範如何建立簡單的設計工具類別衍生自<xref:System.Web.UI.Design.ControlDesigner>類別。 此控制項設計工具支援自訂`TextControl`類別，並提供變更控制項的大小，在設計階段的命令。 藉由指定控制項設計工具中的控制項的設計工具是與控制項相關聯<xref:System.ComponentModel.DesignerAttribute>物件上宣告`TextControl`類別。 要保存屬性變更的索引鍵，從控制項設計工具的 HTML 標記中找到`ToggleTextSize`方法的自訂`ActionList`類別。  
  
 若要嘗試的範例，請新增 System.Design.dll 組件的參考並編譯程式碼。  
  
 [!code-csharp[ControlDesignerSample#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ControlDesignerSample/cs/TextControlDesigner.cs#1)]
 [!code-vb[ControlDesignerSample#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ControlDesignerSample/vb/TextControlDesigner.vb#1)]  
[!code-aspx-csharp[ControlDesignerSample#8](~/samples/snippets/csharp/VS_Snippets_WebNet/ControlDesignerSample/cs/TextControlDesigner.aspx#8)]
[!code-aspx-vb[ControlDesignerSample#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ControlDesignerSample/vb/TextControlDesigner.aspx#8)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.Design.TemplateGroup" />
    <altmember cref="T:System.Web.UI.Design.DesignerAutoFormat" />
    <altmember cref="T:System.ComponentModel.Design.DesignerActionList" />
    <altmember cref="T:System.Web.UI.Design.DesignerRegion" />
    <altmember cref="T:System.Web.UI.Design.ContainerControlDesigner" />
    <altmember cref="T:System.Web.UI.Design.WebControls.CompositeControlDesigner" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ControlDesigner ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ControlDesigner();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.UI.Design.ControlDesigner" /> 類別的新執行個體。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActionLists">
      <MemberSignature Language="C#" Value="public override System.ComponentModel.Design.DesignerActionListCollection ActionLists { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.Design.DesignerActionListCollection ActionLists" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ControlDesigner.ActionLists" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ActionLists As DesignerActionListCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::ComponentModel::Design::DesignerActionListCollection ^ ActionLists { System::ComponentModel::Design::DesignerActionListCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.DesignerActionListCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得控制項設計工具的動作清單集合。</summary>
        <value>
          <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> 物件，包含控制項設計工具的 <see cref="T:System.ComponentModel.Design.DesignerActionList" /> 項目。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列程式碼範例示範如何建立簡單的複合控制項，與<xref:System.Web.UI.WebControls.Label>和<xref:System.Web.UI.WebControls.TextBox>控制項，及其在兩個內部的控制項上設定文字屬性的屬性以及<xref:System.Web.UI.WebControls.WebControl.Width%2A>和<xref:System.Web.UI.WebControls.WebControl.BackColor%2A>屬性的<xref:System.Web.UI.WebControls.TextBox>控制項。 針對關聯的控制項設計工具類別會建立三個<xref:System.ComponentModel.Design.DesignerActionMethodItem>命令，其中每一個都設定在控制項上的兩個屬性，且可以回復設計主應用程式的恢復功能。  
  
 [!code-csharp[DesignerInvokeTransactedChange#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DesignerInvokeTransactedChange/CS/InvokeTransactedChangeSample.cs#1)]
 [!code-vb[DesignerInvokeTransactedChange#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DesignerInvokeTransactedChange/VB/InvokeTransactedChangeSample.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>若要將動作清單功能表加入至 [設計] 檢視中的自訂控制項，必須覆寫您的自訂控制項設計工具<see cref="P:System.Web.UI.Design.ControlDesigner.ActionLists" />屬性，以傳回自訂控制項類別衍生自<see cref="T:System.ComponentModel.Design.DesignerActionList" />類別。</para>
        </block>
        <altmember cref="T:System.ComponentModel.Design.DesignerActionListCollection" />
      </Docs>
    </Member>
    <Member MemberName="AllowResize">
      <MemberSignature Language="C#" Value="public virtual bool AllowResize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowResize" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ControlDesigner.AllowResize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property AllowResize As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AllowResize { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得值，指出是否可在設計階段環境中調整控制項的大小。</summary>
        <value>
          如果可以調整控制項大小則為 <see langword="true" />，否則為 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列程式碼範例示範如何覆寫<xref:System.Web.UI.Design.ControlDesigner.AllowResize%2A>自訂控制項的設計工具類別中的屬性。  
  
 這個程式碼範例是針對所提供之較大範例的一部分<xref:System.Web.UI.Design.ControlDesigner.TemplateGroups%2A>屬性。  
  
 [!code-csharp[DesignerTemplateGroupSample#3](~/samples/snippets/csharp/VS_Snippets_WebNet/DesignerTemplateGroupSample/CS/TemplateGroupsSample.cs#3)]
 [!code-vb[DesignerTemplateGroupSample#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DesignerTemplateGroupSample/VB/TemplateGroupsSample.vb#3)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>使用<see cref="P:System.Web.UI.Design.ControlDesigner.AllowResize" />啟用或停用網頁開發人員在設計主應用程式中的控制項調整大小的衍生類別中的屬性。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="AutoFormats">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.Design.DesignerAutoFormatCollection AutoFormats { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.Design.DesignerAutoFormatCollection AutoFormats" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ControlDesigner.AutoFormats" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property AutoFormats As DesignerAutoFormatCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::Design::DesignerAutoFormatCollection ^ AutoFormats { System::Web::UI::Design::DesignerAutoFormatCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Design.DesignerAutoFormatCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>針對設計階段的關聯控制項，取得要在 [自動格式化] 對話方塊中顯示的預先定義自動格式化配置集合。</summary>
        <value>
          <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> 物件，包含控制項的預先定義配置。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 完整的 Web 伺服器控制項包括不僅控制項，但此外，可能是相對應的控制項設計工具類別衍生自<xref:System.Web.UI.Design.ControlDesigner>類別和格式設定的類別衍生自<xref:System.Web.UI.Design.DesignerAutoFormat>類別。 <xref:System.Web.UI.Design.ControlDesigner.AutoFormats%2A>屬性為集合的執行個體<xref:System.Web.UI.Design.DesignerAutoFormat>類別。 如需工作的範例中的自動格式化[!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)]，請參閱<xref:System.Web.UI.WebControls.Calendar>。  
  
   
  
## Examples  
 下列程式碼範例示範如何實作<xref:System.Web.UI.Design.ControlDesigner.AutoFormats%2A>自訂控制項設計工具中的屬性。 衍生的控制項設計工具實作<xref:System.Web.UI.Design.ControlDesigner.AutoFormats%2A>屬性加上三個自訂的自動格式，衍生自執行個體<xref:System.Web.UI.Design.DesignerAutoFormat>類別。  
  
 [!code-csharp[DesignerAutoFormat#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DesignerAutoFormat/CS/DesignerAutoFormat.cs#1)]
 [!code-vb[DesignerAutoFormat#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DesignerAutoFormat/VB/DesignerAutoFormat.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>自動公開自動格式設定的控制項可以取得工作清單和內容命令，其格式。 當您使用自動格式時，使用<see cref="P:System.Web.UI.Design.ControlDesigner.ViewControl" />回呼函式中設定屬性的屬性。</para>
        </block>
        <altmember cref="T:System.Web.UI.Design.DesignerAutoFormat" />
        <altmember cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateErrorDesignTimeHtml">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>建立 HTML 標記，以在設計階段顯示錯誤訊息。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateErrorDesignTimeHtml">
      <MemberSignature Language="C#" Value="protected string CreateErrorDesignTimeHtml (string errorMessage);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance string CreateErrorDesignTimeHtml(string errorMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.CreateErrorDesignTimeHtml(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Function CreateErrorDesignTimeHtml (errorMessage As String) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::String ^ CreateErrorDesignTimeHtml(System::String ^ errorMessage);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="errorMessage" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="errorMessage">要在產生之 HTML 標記中包含的錯誤訊息。</param>
        <summary>建立 HTML 標記，以在設計階段顯示指定的錯誤訊息。</summary>
        <returns>HTML 標記字串，包含指定的錯誤訊息。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.Design.ControlDesigner.CreateErrorDesignTimeHtml%2A>方法來建立要在設計階段顯示控制項的錯誤訊息 HTML 標記。 值`errorMessage`指定控制項的使用者顯示在設計階段的當地語系化的字串。  
  
 <xref:System.Web.UI.Design.ControlDesigner>類別實作<xref:System.Web.UI.Design.ControlDesigner.CreateErrorDesignTimeHtml%2A>方法會傳回具有兩個資料列的資料表，如下所示：  
  
-   第一個資料列包含型別名稱和網站名稱以進行<xref:System.ComponentModel.Design.ComponentDesigner.Component%2A>屬性<xref:System.Web.UI.Design.ControlDesigner>物件。  
  
-   第二個資料列都包含輸入的錯誤訊息字串。  
  
 若要產生的例外狀況相關聯的錯誤訊息 HTML 標記，請使用<xref:System.Web.UI.Design.ControlDesigner.CreateErrorDesignTimeHtml%28System.String%2CSystem.Exception%29>多載。 產生例外狀況的 HTML 標記，而不指定當地語系化的錯誤訊息，請使用<xref:System.Web.UI.Design.ControlDesigner.GetErrorDesignTimeHtml%2A>方法。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <see cref="M:System.Web.UI.Design.ControlDesigner.CreateErrorDesignTimeHtml(System.String)" />多載在功能上相當於呼叫<see cref="M:System.Web.UI.Design.ControlDesigner.CreateErrorDesignTimeHtml(System.String,System.Exception)" />方法以設定為 e <see langword="null" />。</para>
        </block>
        <altmember cref="M:System.Web.UI.Design.ControlDesigner.GetErrorDesignTimeHtml(System.Exception)" />
      </Docs>
    </Member>
    <Member MemberName="CreateErrorDesignTimeHtml">
      <MemberSignature Language="C#" Value="protected string CreateErrorDesignTimeHtml (string errorMessage, Exception e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance string CreateErrorDesignTimeHtml(string errorMessage, class System.Exception e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.CreateErrorDesignTimeHtml(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Protected Function CreateErrorDesignTimeHtml (errorMessage As String, e As Exception) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::String ^ CreateErrorDesignTimeHtml(System::String ^ errorMessage, Exception ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="errorMessage" Type="System.String" />
        <Parameter Name="e" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="errorMessage">錯誤訊息會包含於所產生的 HTML 字串中。</param>
        <param name="e">例外狀況包含於所產生的 HTML 字串中。</param>
        <summary>建立 HTML 標記，以在設計階段顯示指定的例外狀況錯誤訊息。</summary>
        <returns>HTML 標記，包含指定的 <paramref name="errorMessage" /> 和 <paramref name="e" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.Design.ControlDesigner.CreateErrorDesignTimeHtml%2A>方法以提供簡單的 HTML 標記可以用來在設計階段顯示控制項的錯誤和例外狀況詳細資料。 值`errorMessage`指定控制項的使用者顯示在設計階段的當地語系化的字串。  
  
 <xref:System.Web.UI.Design.ControlDesigner>類別實作<xref:System.Web.UI.Design.ControlDesigner.CreateErrorDesignTimeHtml%2A>方法會傳回具有兩個資料列的資料表，如下所示：  
  
-   第一個資料列包含型別名稱和網站名稱以進行<xref:System.ComponentModel.Design.ComponentDesigner.Component%2A>屬性<xref:System.Web.UI.Design.ControlDesigner>物件。  
  
-   第二個資料列都包含輸入的錯誤訊息和<xref:System.Exception.Message%2A>例外狀況的字串。  
  
 若要產生錯誤訊息 HTML 標記，但未指定例外狀況，請使用<xref:System.Web.UI.Design.ControlDesigner.CreateErrorDesignTimeHtml%28System.String%29>多載。 產生例外狀況的 HTML 標記，而不指定當地語系化的錯誤訊息，請使用<xref:System.Web.UI.Design.ControlDesigner.GetErrorDesignTimeHtml%2A>方法。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <see cref="M:System.Web.UI.Design.ControlDesigner.CreateErrorDesignTimeHtml(System.String,System.Exception)" />方法應從呼叫<see cref="Overload:System.Web.UI.Design.ControlDesigner.GetViewRendering" />或<see cref="M:System.Web.UI.Design.ControlDesigner.GetErrorDesignTimeHtml(System.Exception)" />方法發生例外狀況時。</para>
        </block>
        <altmember cref="M:System.Web.UI.Design.ControlDesigner.GetErrorDesignTimeHtml(System.Exception)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CreatePlaceHolderDesignTimeHtml">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>提供簡單矩形預留位置表示，顯示控制項的型別和 ID。</summary>
        <block subset="none" type="overrides">
          <para>典型的設計模式是嘗試將透過關聯的控制項，取得 HTML 標記，如果發生錯誤，然後呼叫<see cref="M:System.Web.UI.Design.ControlDesigner.GetErrorDesignTimeHtml(System.Exception)" />方法。 如果控制項不傳回任何標記，則呼叫<see cref="M:System.Web.UI.Design.ControlDesigner.GetEmptyDesignTimeHtml" />方法，如果未提供特定的標記，覆寫呼叫<see cref="M:System.Web.UI.Design.ControlDesigner.CreatePlaceHolderDesignTimeHtml" />方法，它應該包含的類型和控制項的 ID 的相關資訊。</para>
        </block>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreatePlaceHolderDesignTimeHtml">
      <MemberSignature Language="C#" Value="protected string CreatePlaceHolderDesignTimeHtml ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance string CreatePlaceHolderDesignTimeHtml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.CreatePlaceHolderDesignTimeHtml" />
      <MemberSignature Language="VB.NET" Value="Protected Function CreatePlaceHolderDesignTimeHtml () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::String ^ CreatePlaceHolderDesignTimeHtml();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>提供簡單矩形預留位置表示，顯示控制項的型別和 ID。</summary>
        <returns>包含設計階段 HTML 標記的字串，提供有關控制項的基本資訊。</returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para>典型的設計模式是嘗試將透過關聯的控制項，取得 HTML 標記，如果發生錯誤，然後呼叫<see cref="M:System.Web.UI.Design.ControlDesigner.GetErrorDesignTimeHtml(System.Exception)" />方法。 如果控制項不傳回任何標記，則呼叫<see cref="M:System.Web.UI.Design.ControlDesigner.GetEmptyDesignTimeHtml" />方法，如果未提供特定的標記，覆寫呼叫<see cref="M:System.Web.UI.Design.ControlDesigner.CreatePlaceHolderDesignTimeHtml" />方法，它應該包含的類型和控制項的 ID 的相關資訊。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="CreatePlaceHolderDesignTimeHtml">
      <MemberSignature Language="C#" Value="protected string CreatePlaceHolderDesignTimeHtml (string instruction);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance string CreatePlaceHolderDesignTimeHtml(string instruction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.CreatePlaceHolderDesignTimeHtml(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Function CreatePlaceHolderDesignTimeHtml (instruction As String) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::String ^ CreatePlaceHolderDesignTimeHtml(System::String ^ instruction);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instruction" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="instruction">字串，包含要加入至 HTML 輸出的文字和標記。</param>
        <summary>提供簡單矩形預留位置表示，顯示控制項的型別和 ID，以及其他指定的指示或資訊。</summary>
        <returns>包含設計階段 HTML 標記的字串，提供有關控制項的資訊。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列程式碼範例示範如何覆寫<xref:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml%2A>樣板化控制項設計工具中的方法。 字串，然後傳遞做為`instruction`呼叫參數<xref:System.Web.UI.Design.ControlDesigner.CreatePlaceHolderDesignTimeHtml%2A>方法，這會提供設計階段 HTML 標記。  
  
 這個程式碼範例是針對所提供之較大範例的一部分<xref:System.Web.UI.Design.ControlDesigner.TemplateGroups%2A>屬性。  
  
 [!code-csharp[DesignerTemplateGroupSample#4](~/samples/snippets/csharp/VS_Snippets_WebNet/DesignerTemplateGroupSample/CS/TemplateGroupsSample.cs#4)]
 [!code-vb[DesignerTemplateGroupSample#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DesignerTemplateGroupSample/VB/TemplateGroupsSample.vb#4)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>典型的設計模式是嘗試將透過關聯的控制項，取得 HTML 標記，如果發生錯誤，然後呼叫<see cref="M:System.Web.UI.Design.ControlDesigner.GetErrorDesignTimeHtml(System.Exception)" />方法。 如果控制項不傳回任何標記，則呼叫<see cref="M:System.Web.UI.Design.ControlDesigner.GetEmptyDesignTimeHtml" />方法，如果未提供特定的標記，覆寫呼叫<see cref="M:System.Web.UI.Design.ControlDesigner.CreatePlaceHolderDesignTimeHtml" />方法，它應該包含的類型和控制項的 ID 的相關資訊。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="CreateViewControl">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.Control CreateViewControl ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.Control CreateViewControl() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.CreateViewControl" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateViewControl () As Control" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::Control ^ CreateViewControl();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Control</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>傳回關聯控制項的複本，以便在設計介面上檢視或呈現。</summary>
        <returns>Web 伺服器控制項。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataBindingsEnabled">
      <MemberSignature Language="C#" Value="protected virtual bool DataBindingsEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DataBindingsEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ControlDesigner.DataBindingsEnabled" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property DataBindingsEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool DataBindingsEnabled { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得值，指出關聯控制項的包含區域是否支援資料繫結。</summary>
        <value>
          如果控制項的容器支援資料繫結則為 <see langword="true" />，否則為 <see langword="false" />。</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.Design.EditableDesignerRegion.SupportsDataBinding" />
      </Docs>
    </Member>
    <Member MemberName="DesignerState">
      <MemberSignature Language="C#" Value="protected System.Web.UI.Design.ControlDesignerState DesignerState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.Design.ControlDesignerState DesignerState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ControlDesigner.DesignerState" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property DesignerState As ControlDesignerState" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Web::UI::Design::ControlDesignerState ^ DesignerState { System::Web::UI::Design::ControlDesignerState ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Design.ControlDesignerState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得物件，用於在設計階段保存關聯控制項的資料。</summary>
        <value>
          <see cref="P:System.Web.UI.Design.ControlDesigner.DesignerState" /> 屬性，會實作 <see cref="T:System.Collections.IDictionary" /> 並使用 <see cref="T:System.ComponentModel.Design.IComponentDesignerStateService" /> 在設計階段保存關聯控制項的狀態資料。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 值<xref:System.Web.UI.Design.ControlDesigner.DesignerState%2A>屬性會保存，即使使用者從設計切換到原始碼 檢視中，或重新載入文件，或是關閉後重新開啟設計主應用程式。  
  
 您可以取得和設定傳回的物件中的值，您可以按照 IDictionary 值物件時，會自動保存。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DesignTimeElementView">
      <MemberSignature Language="C#" Value="protected object DesignTimeElementView { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DesignTimeElementView" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ControlDesigner.DesignTimeElementView" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property DesignTimeElementView As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Object ^ DesignTimeElementView { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Error: This property can no longer be referenced, and is included to support existing compiled applications. The design-time element view architecture is no longer used. http://go.microsoft.com/fwlink/?linkid=14202", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得控制項設計工具的檢視控制項物件。</summary>
        <value>
          <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <xref:System.Web.UI.Design.ControlDesigner.DesignTimeElementView%2A>屬性已經過時，而且沒有任何取代的功能。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DesignTimeHtmlRequiresLoadComplete">
      <MemberSignature Language="C#" Value="public virtual bool DesignTimeHtmlRequiresLoadComplete { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DesignTimeHtmlRequiresLoadComplete" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ControlDesigner.DesignTimeHtmlRequiresLoadComplete" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DesignTimeHtmlRequiresLoadComplete As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool DesignTimeHtmlRequiresLoadComplete { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("The recommended alternative is SetViewFlags(ViewFlags.DesignTimeHtmlRequiresLoadComplete, true). http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得值，指出設計主應用程式在呼叫 <see cref="Overload:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml" /> 方法之前是否必須完成載入。</summary>
        <value>
          如果在呼叫 <see cref="Overload:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml" /> 方法之前必須完成載入則為 <see langword="true" />，否則為 <see langword="false" />。 預設值為 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 預設實作<xref:System.Web.UI.Design.ControlDesigner.DesignTimeHtmlRequiresLoadComplete%2A>屬性會傳回`false`。  
  
> [!NOTE]
>  <xref:System.Web.UI.Design.ControlDesigner.DesignTimeHtmlRequiresLoadComplete%2A> 屬性已經過時。 使用<xref:System.Web.UI.Design.ControlDesigner.SetViewFlags%2A>對等控制項設計工具功能的方法。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.Design.ViewFlags" />
        <altmember cref="M:System.Web.UI.Design.ControlDesigner.SetViewFlags(System.Web.UI.Design.ViewFlags,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="GetBounds">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle GetBounds ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.Rectangle GetBounds() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.GetBounds" />
      <MemberSignature Language="VB.NET" Value="Public Function GetBounds () As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Rectangle GetBounds();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>擷取矩形的座標，表示設計介面上所顯示控制項的界限。</summary>
        <returns>
          <see cref="T:System.Drawing.Rectangle" /> 物件，表示設計介面上的控制項界限是相對於控制項，而非文件。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.Design.IControlDesignerView.GetBounds(System.Web.UI.Design.DesignerRegion)" />
        <altmember cref="M:System.Web.UI.Design.DesignerRegion.GetBounds" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetDesignTimeHtml">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>擷取在設計階段用來代表控制項的 HTML 標記。</summary>
        <altmember cref="M:System.Web.UI.Design.ControlDesigner.UpdateDesignTimeHtml" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetDesignTimeHtml">
      <MemberSignature Language="C#" Value="public virtual string GetDesignTimeHtml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetDesignTimeHtml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDesignTimeHtml () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetDesignTimeHtml();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>擷取在設計階段用來代表控制項的 HTML 標記。</summary>
        <returns>設計階段用來代表控制項的 HTML 標記。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列程式碼範例示範如何覆寫<xref:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml%2A>自訂控制項設計工具中的方法。 如果相關聯控制項的文字屬性是空的<xref:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml%2A>方法呼叫<xref:System.Web.UI.Design.ControlDesigner.GetEmptyDesignTimeHtml%2A>方法。 否則，<xref:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml%2A>方法會建立，並會轉譯超連結控制項。  
  
 [!code-csharp[System.Web.UI.Design.ControlDesigner_Example#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Design.ControlDesigner_Example/CS/SimpleControlDesigner.cs#5)]
 [!code-vb[System.Web.UI.Design.ControlDesigner_Example#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Design.ControlDesigner_Example/VB/simplecontroldesigner.vb#5)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>如果您要建立自訂容器控制項，請確定在設計階段，而不論是否呈現控制項和所有子控制項<see cref="P:System.Web.UI.Control.Visible" />屬性設定為<see langword="true" />或<see langword="false" />。</para>
        </block>
        <altmember cref="M:System.Web.UI.Design.ControlDesigner.GetEmptyDesignTimeHtml" />
        <altmember cref="M:System.Web.UI.Design.ControlDesigner.GetErrorDesignTimeHtml(System.Exception)" />
        <altmember cref="M:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml(System.Web.UI.Design.DesignerRegionCollection)" />
      </Docs>
    </Member>
    <Member MemberName="GetDesignTimeHtml">
      <MemberSignature Language="C#" Value="public virtual string GetDesignTimeHtml (System.Web.UI.Design.DesignerRegionCollection regions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetDesignTimeHtml(class System.Web.UI.Design.DesignerRegionCollection regions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml(System.Web.UI.Design.DesignerRegionCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDesignTimeHtml (regions As DesignerRegionCollection) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetDesignTimeHtml(System::Web::UI::Design::DesignerRegionCollection ^ regions);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="regions" Type="System.Web.UI.Design.DesignerRegionCollection" />
      </Parameters>
      <Docs>
        <param name="regions">相關聯控制項的控制項設計工具區域集合。</param>
        <summary>擷取要顯示控制項的 HTML 標記，並將目前控制項設計工具區域填入集合中。</summary>
        <returns>相關聯控制項的設計階段 HTML 標記 (包含所有控制項設計工具區域)。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 設計主機呼叫<xref:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml%2A>方法來取得的設計階段 HTML 標記和目前的清單控制項的設計工具區域。 使用 DesignerRegionCollection，設計主應用程式就可以要求每個可編輯的控制項設計工具區域的標記。  
  
 <xref:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml%2A>方法提供衍生的控制項設計工具，例如<xref:System.Web.UI.Design.WebControls.GridViewDesigner>類別，其必須處理之前先呼叫區域內容<xref:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml%2A>方法。  
  
   
  
## Examples  
 下列程式碼範例示範如何建立 HTML 標記使用<xref:System.Web.UI.Design.DesignerRegionCollection>集合。  
  
 [!code-csharp[SimpleMultiRegionControlDesigner#5](~/samples/snippets/csharp/VS_Snippets_WebNet/SimpleMultiRegionControlDesigner/CS/SimpleMultiRegionControlDesigner.cs#5)]
 [!code-vb[SimpleMultiRegionControlDesigner#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/SimpleMultiRegionControlDesigner/VB/SimpleMultiRegionControlDesigner.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.Design.WebControls.GridViewDesigner" />
      </Docs>
    </Member>
    <Member MemberName="GetDesignTimeResourceProviderFactory">
      <MemberSignature Language="C#" Value="public static System.Web.UI.Design.DesignTimeResourceProviderFactory GetDesignTimeResourceProviderFactory (IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.UI.Design.DesignTimeResourceProviderFactory GetDesignTimeResourceProviderFactory(class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.GetDesignTimeResourceProviderFactory(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDesignTimeResourceProviderFactory (serviceProvider As IServiceProvider) As DesignTimeResourceProviderFactory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::UI::Design::DesignTimeResourceProviderFactory ^ GetDesignTimeResourceProviderFactory(IServiceProvider ^ serviceProvider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Design.DesignTimeResourceProviderFactory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="serviceProvider">
          <see cref="T:System.IServiceProvider" /> 物件，可擷取全域和區域服務。</param>
        <summary>根據網站組態檔中的全球化設定，傳回適當的資源提供者 Factory。</summary>
        <returns>如果組態檔中有定義則為 <see cref="T:System.Web.UI.Design.DesignTimeResourceProviderFactory" /> 物件，否則為 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 資源提供者處理站會建立資源提供者和資源的寫入器，根據組態檔 （Machine.config 或 Web.config 檔案的全域和本機資源的 system.web/globalization 區段中的目前設定). 如果找不到任何全球化設定`serviceProvider`參數用來建立<xref:System.Web.UI.Design.DesignTimeResourceProviderFactory>物件的設計主應用程式使用的預設實作。  
  
 一般而言，控制項開發人員不會覆寫<xref:System.Web.UI.Design.ControlDesigner.GetDesignTimeResourceProviderFactory%2A>方法。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.Design.DesignTimeResourceProviderFactory" />
        <altmember cref="T:System.Web.Compilation.ResourceProviderFactory" />
        <altmember cref="T:System.Web.Compilation.IResourceProvider" />
        <altmember cref="T:System.IServiceProvider" />
      </Docs>
    </Member>
    <Member MemberName="GetEditableDesignerRegionContent">
      <MemberSignature Language="C#" Value="public virtual string GetEditableDesignerRegionContent (System.Web.UI.Design.EditableDesignerRegion region);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetEditableDesignerRegionContent(class System.Web.UI.Design.EditableDesignerRegion region) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.GetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEditableDesignerRegionContent (region As EditableDesignerRegion) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetEditableDesignerRegionContent(System::Web::UI::Design::EditableDesignerRegion ^ region);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="region" Type="System.Web.UI.Design.EditableDesignerRegion" />
      </Parameters>
      <Docs>
        <param name="region">要取得內容的 <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> 物件。</param>
        <summary>針對關聯控制項設計階段檢視的可編輯區域，傳回內容。</summary>
        <returns>如果控制項設計工具支援可編輯區域，則為該區域的保存內容；否則為空字串 ("")。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 預設實作<xref:System.Web.UI.Design.ControlDesigner.GetEditableDesignerRegionContent%2A>方法會傳回空字串 ("")。  
  
 類別衍生自<xref:System.Web.UI.Design.ControlDesigner>類別支援區域為基礎的設計介面上編輯和覆寫<xref:System.Web.UI.Design.ControlDesigner.GetEditableDesignerRegionContent%2A>方法以傳回指定區域的內容。  
  
   
  
## Examples  
 下列程式碼範例示範如何取得設計主應用程式的參考，然後使用該參考建立<xref:System.Web.UI.Design.ControlParser>建立的 HTML 標記的物件`region`及其內容。  
  
 [!code-csharp[SimpleMultiRegionControlDesigner#6](~/samples/snippets/csharp/VS_Snippets_WebNet/SimpleMultiRegionControlDesigner/CS/SimpleMultiRegionControlDesigner.cs#6)]
 [!code-vb[SimpleMultiRegionControlDesigner#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/SimpleMultiRegionControlDesigner/VB/SimpleMultiRegionControlDesigner.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Design.ControlDesigner.SetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetEmptyDesignTimeHtml">
      <MemberSignature Language="C#" Value="protected virtual string GetEmptyDesignTimeHtml ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetEmptyDesignTimeHtml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.GetEmptyDesignTimeHtml" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetEmptyDesignTimeHtml () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ GetEmptyDesignTimeHtml();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>擷取 HTML 標記，以在設計階段呈現在執行階段沒有視覺表示的 Web 伺服器控制項。</summary>
        <returns>HTML 標記，用來在設計階段呈現沒有視覺表示的控制項。 預設值是一個包含元件類型和識別碼的矩形。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 預設行為<xref:System.Web.UI.Design.ControlDesigner.GetEmptyDesignTimeHtml%2A>方法會傳回字串，包含元件的名稱。 <xref:System.Web.UI.Design.ControlDesigner.GetEmptyDesignTimeHtml%2A>來呼叫方法的實作中<xref:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml%2A>方法時沒有任何的設計階段 HTML 標記。  
  
   
  
## Examples  
 下列程式碼範例示範如何覆寫<xref:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml%2A>自訂控制項設計工具中的方法。 如果`Text`相關聯控制項的屬性是空的<xref:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml%2A>方法呼叫<xref:System.Web.UI.Design.ControlDesigner.GetEmptyDesignTimeHtml%2A>方法。 否則，<xref:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml%2A>方法會建立並呈現`Hyperlink`控制項。  
  
 [!code-csharp[System.Web.UI.Design.ControlDesigner_Example#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Design.ControlDesigner_Example/CS/SimpleControlDesigner.cs#5)]
 [!code-vb[System.Web.UI.Design.ControlDesigner_Example#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Design.ControlDesigner_Example/VB/simplecontroldesigner.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Design.ControlDesigner.GetErrorDesignTimeHtml(System.Exception)" />
        <altmember cref="Overload:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml" />
      </Docs>
    </Member>
    <Member MemberName="GetErrorDesignTimeHtml">
      <MemberSignature Language="C#" Value="protected virtual string GetErrorDesignTimeHtml (Exception e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetErrorDesignTimeHtml(class System.Exception e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.GetErrorDesignTimeHtml(System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetErrorDesignTimeHtml (e As Exception) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ GetErrorDesignTimeHtml(Exception ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="e">發生的例外狀況。</param>
        <summary>擷取可提供所指定例外狀況之相關資訊的 HTML 標記。</summary>
        <returns>所指定例外狀況的設計階段 HTML 標記。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Design.ControlDesigner.GetErrorDesignTimeHtml%2A>通常呼叫方法，如果擲回例外狀況<xref:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml%2A>方法。  
  
   
  
## Examples  
 下列程式碼範例示範如何產生控制項發生錯誤時，呼叫的設計階段 HTML 標記<xref:System.Web.UI.Design.ControlDesigner.CreatePlaceHolderDesignTimeHtml%2A>方法。  
  
 [!code-csharp[System.Web.UI.Design.WebControls.LoginDesigner#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Design.WebControls.LoginDesigner/CS/LoginDesigner.cs#2)]
 [!code-vb[System.Web.UI.Design.WebControls.LoginDesigner#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Design.WebControls.LoginDesigner/VB/LoginDesigner.vb#2)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>典型的設計模式是嘗試將透過關聯的控制項，取得 HTML 標記，如果發生錯誤，然後呼叫<see cref="M:System.Web.UI.Design.ControlDesigner.GetErrorDesignTimeHtml(System.Exception)" />方法。 如果控制項不傳回任何標記，則呼叫<see cref="M:System.Web.UI.Design.ControlDesigner.GetEmptyDesignTimeHtml" />方法，如果未提供特定的標記，覆寫呼叫<see cref="M:System.Web.UI.Design.ControlDesigner.CreatePlaceHolderDesignTimeHtml" />方法，它應該包含的類型和控制項的 ID 的相關資訊。</para>
        </block>
        <altmember cref="Overload:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml" />
        <altmember cref="Overload:System.Web.UI.Design.ControlDesigner.CreateErrorDesignTimeHtml" />
      </Docs>
    </Member>
    <Member MemberName="GetPersistenceContent">
      <MemberSignature Language="C#" Value="public virtual string GetPersistenceContent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetPersistenceContent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.GetPersistenceContent" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPersistenceContent () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetPersistenceContent();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>在設計階段擷取控制項的永久性內部 HTML 標記。</summary>
        <returns>字串，表示關聯控制項的永久性內部 HTML 標記。 預設值為 <see langword="null" />。</returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para>覆寫<see cref="M:System.Web.UI.Design.ControlDesigner.GetPersistenceContent" />方法以提供自訂的設計主應用程式的內部內容持續性處理。</para>
        </block>
        <altmember cref="T:System.Web.UI.Design.ControlPersister" />
      </Docs>
    </Member>
    <Member MemberName="GetPersistInnerHtml">
      <MemberSignature Language="C#" Value="public virtual string GetPersistInnerHtml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetPersistInnerHtml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.GetPersistInnerHtml" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPersistInnerHtml () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetPersistInnerHtml();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("The recommended alternative is GetPersistenceContent(). http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>擷取控制項的永久性內部 HTML 標記。</summary>
        <returns>永久性的控制項內部 HTML 標記。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <xref:System.Web.UI.Design.ControlDesigner.GetPersistInnerHtml%2A>方法已過時。 使用<xref:System.Web.UI.Design.ControlDesigner.GetPersistenceContent%2A>對等控制項設計工具功能的方法。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Design.ControlDesigner.Tag" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetViewRendering">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>擷取物件，其中包含關聯控制項之內容和區域的設計階段標記。</summary>
        <altmember cref="T:System.Web.UI.Design.ViewRendering" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetViewRendering">
      <MemberSignature Language="C#" Value="public System.Web.UI.Design.ViewRendering GetViewRendering ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.UI.Design.ViewRendering GetViewRendering() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.GetViewRendering" />
      <MemberSignature Language="VB.NET" Value="Public Function GetViewRendering () As ViewRendering" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::Design::ViewRendering ^ GetViewRendering();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Design.ViewRendering</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>擷取物件，其中包含關聯控制項之內容和區域的設計階段標記。</summary>
        <returns>
          <see cref="T:System.Web.UI.Design.ViewRendering" /> 物件。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.Design.ViewRendering" />
      </Docs>
    </Member>
    <Member MemberName="GetViewRendering">
      <MemberSignature Language="C#" Value="public static System.Web.UI.Design.ViewRendering GetViewRendering (System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.UI.Design.ViewRendering GetViewRendering(class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.GetViewRendering(System.Web.UI.Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::UI::Design::ViewRendering ^ GetViewRendering(System::Web::UI::Control ^ control);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Design.ViewRendering</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="control">
          <see cref="T:System.Web.UI.Control" /> 物件。</param>
        <summary>擷取物件，其中包含指定的控制項之內容和區域的設計階段標記。</summary>
        <returns>
          <see cref="T:System.Web.UI.Design.ViewRendering" /> 物件。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.Design.ViewRendering" />
      </Docs>
    </Member>
    <Member MemberName="GetViewRendering">
      <MemberSignature Language="C#" Value="public static System.Web.UI.Design.ViewRendering GetViewRendering (System.Web.UI.Design.ControlDesigner designer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.UI.Design.ViewRendering GetViewRendering(class System.Web.UI.Design.ControlDesigner designer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.GetViewRendering(System.Web.UI.Design.ControlDesigner)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetViewRendering (designer As ControlDesigner) As ViewRendering" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::UI::Design::ViewRendering ^ GetViewRendering(System::Web::UI::Design::ControlDesigner ^ designer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Design.ViewRendering</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="designer" Type="System.Web.UI.Design.ControlDesigner" />
      </Parameters>
      <Docs>
        <param name="designer">衍生自 <see cref="T:System.Web.UI.Design.ControlDesigner" /> 的控制項設計工具。</param>
        <summary>擷取物件，其中包含設計階段標記，用於指定的控制項設計工具之關聯控制項的內容和區域。</summary>
        <returns>
          <see cref="T:System.Web.UI.Design.ViewRendering" /> 物件。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.Design.ViewRendering" />
      </Docs>
    </Member>
    <Member MemberName="HidePropertiesInTemplateMode">
      <MemberSignature Language="C#" Value="protected internal virtual bool HidePropertiesInTemplateMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HidePropertiesInTemplateMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ControlDesigner.HidePropertiesInTemplateMode" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable ReadOnly Property HidePropertiesInTemplateMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property bool HidePropertiesInTemplateMode { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得值，指示當控制項處於樣板模式時，關聯控制項的屬性是否會隱藏。</summary>
        <value>
          當控制項處於樣板模式時，如果關聯控制項的屬性會隱藏則為 <see langword="true" />，否則為 <see langword="false" />。 預設值為 <see langword="true" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 永不隱藏的 ID 屬性。 <xref:System.Web.UI.Design.ControlDesigner.PreFilterProperties%2A>方法會使用<xref:System.Web.UI.Design.ControlDesigner.HidePropertiesInTemplateMode%2A>屬性來判斷是否識別碼屬性以外的內容，應該隱藏從屬性方格控制項處於編輯模式範本時。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ID">
      <MemberSignature Language="C#" Value="public virtual string ID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ControlDesigner.ID" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定控制項的 ID 字串。</summary>
        <value>控制項的 ID 字串。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Design.ControlDesigner.ID%2A>屬性在內部使用，在控制項設計工具內部以及對 [屬性] 視窗的互動。 <xref:System.Web.UI.Design.ControlDesigner.ID%2A>屬性遮蔽執行階段<xref:System.Web.UI.Control.ID%2A>屬性。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.ID" />
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override void Initialize (System.ComponentModel.IComponent component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Initialize(class System.ComponentModel.IComponent component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.Initialize(System.ComponentModel.IComponent)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Initialize (component As IComponent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Initialize(System::ComponentModel::IComponent ^ component);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
      </Parameters>
      <Docs>
        <param name="component">正在設計的控制項。</param>
        <summary>初始化控制項設計工具並載入指定的元件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Design.ControlDesigner.Initialize%2A>方法會呼叫設計主應用程式來完成下列動作：  
  
-   載入控制項設計工具與元件，來設計。  
  
-   設定在控制項中使用檢視<xref:System.Web.UI.Design.ControlDesigner.SetViewFlags%2A>方法。  
  
-   請確認針對關聯的控制項的正確類型。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用控制項類別和控制項的設計工具類別，覆寫<xref:System.Web.UI.Design.ControlDesigner.Initialize%2A>方法來初始化內部變數。  
  
 [!code-csharp[System.Web.UI.Design.ControlDesigner_Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Design.ControlDesigner_Example/CS/SimpleControlDesigner.cs#1)]
 [!code-vb[System.Web.UI.Design.ControlDesigner_Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Design.ControlDesigner_Example/VB/simplecontroldesigner.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.IDesigner" />
      </Docs>
    </Member>
    <Member MemberName="InTemplateMode">
      <MemberSignature Language="C#" Value="protected bool InTemplateMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool InTemplateMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ControlDesigner.InTemplateMode" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property InTemplateMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool InTemplateMode { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得值，指出控制項在設計主應用程式中處於樣板檢視模式還是編輯模式。 <see cref="P:System.Web.UI.Design.ControlDesigner.InTemplateMode" /> 屬性是唯讀的。</summary>
        <value>
          如果控制項處於樣板檢視模式或編輯模式則為 <see langword="true" />，否則為 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 目前檢視的唯讀範本，或例如在設計主機中正在編輯的可編輯的範本時，Web 伺服器控制項是於範本模式下[!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)]。  
  
 <xref:System.Web.UI.Design.ControlDesigner>類別會提供預設值<xref:System.Web.UI.Design.ViewEventHandler>物件更新<xref:System.Web.UI.Design.ControlDesigner.InTemplateMode%2A>時範本模式變更相關聯控制項的值。 衍生自的自訂設計工具<xref:System.Web.UI.Design.TemplatedControlDesigner>類別可以覆寫<xref:System.Web.UI.Design.TemplatedControlDesigner.OnTemplateModeChanged%2A>方法，以執行額外處理時的樣板編輯模式變更設計主機中的控制項。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.Design.TemplatedControlDesigner" />
        <altmember cref="P:System.Web.UI.Design.ControlDesigner.TemplateGroups" />
        <altmember cref="M:System.Web.UI.Design.TemplatedControlDesigner.OnTemplateModeChanged" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Invalidate">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>使控制項在設計介面上顯示時失效，並使設計主應用程式呼叫 <see cref="M:System.Web.UI.Design.ControlDesigner.OnPaint(System.Windows.Forms.PaintEventArgs)" /> 方法。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 呼叫<xref:System.Web.UI.Design.ControlDesigner.UpdateDesignTimeHtml%2A>方法也會呼叫<xref:System.Web.UI.Design.ControlDesigner.Invalidate%2A>方法。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Design.ControlDesigner.OnPaint(System.Windows.Forms.PaintEventArgs)" />
        <altmember cref="M:System.Web.UI.Design.ControlDesigner.UpdateDesignTimeHtml" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Invalidate">
      <MemberSignature Language="C#" Value="public void Invalidate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Invalidate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.Invalidate" />
      <MemberSignature Language="VB.NET" Value="Public Sub Invalidate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Invalidate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>使設計介面上所顯示之控制項的整個區域失效，並傳送信號給控制項設計工具，要求重繪控制項。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 若要啟用的控制項設計工具來處理 [小畫家] 事件，請使用<xref:System.Web.UI.Design.ControlDesigner.SetViewFlags%2A>方法中的<xref:System.Web.UI.Design.ControlDesigner.Initialize%2A>方法。  
  
 <xref:System.Web.UI.Design.ControlDesigner.Invalidate%2A>方法提供一種方式，以指示來進行重繪控制項的控制項設計工具設計主應用程式。 基本上，這等同於呼叫<xref:System.Web.UI.Design.ControlDesigner.UpdateDesignTimeHtml%2A>方法，因為這會導致重新繪製整個控制項。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Invalidate">
      <MemberSignature Language="C#" Value="public void Invalidate (System.Drawing.Rectangle rectangle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Invalidate(valuetype System.Drawing.Rectangle rectangle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.Invalidate(System.Drawing.Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Invalidate(System::Drawing::Rectangle rectangle);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rectangle" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="rectangle">
          <see cref="T:System.Drawing.Rectangle" /> 物件，表示要使其失效的區域，相對於控制項的左上角。</param>
        <summary>使設計介面上所顯示之控制項的指定區域失效，並傳送信號給控制項設計工具，要求重繪控制項。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 若要啟用的控制項設計工具來處理 [小畫家] 事件，請使用<xref:System.Web.UI.Design.ControlDesigner.SetViewFlags%2A>方法中的<xref:System.Web.UI.Design.ControlDesigner.Initialize%2A>方法。  
  
 <xref:System.Web.UI.Design.ControlDesigner.Invalidate%2A>方法提供一種方式，以指示來進行重繪控制項的特定部分控制項設計工具設計主應用程式。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="InvokeTransactedChange">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>使用已指定可以設計主應用程式的復原功能復原為單位的參數，將一系列變更包裝在交易之中。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="InvokeTransactedChange">
      <MemberSignature Language="C#" Value="public static void InvokeTransactedChange (System.ComponentModel.IComponent component, System.Web.UI.Design.TransactedChangeCallback callback, object context, string description);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void InvokeTransactedChange(class System.ComponentModel.IComponent component, class System.Web.UI.Design.TransactedChangeCallback callback, object context, string description) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.InvokeTransactedChange(System.ComponentModel.IComponent,System.Web.UI.Design.TransactedChangeCallback,System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub InvokeTransactedChange (component As IComponent, callback As TransactedChangeCallback, context As Object, description As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void InvokeTransactedChange(System::ComponentModel::IComponent ^ component, System::Web::UI::Design::TransactedChangeCallback ^ callback, System::Object ^ context, System::String ^ description);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
        <Parameter Name="callback" Type="System.Web.UI.Design.TransactedChangeCallback" />
        <Parameter Name="context" Type="System.Object" />
        <Parameter Name="description" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="component">與控制項設計工具相關聯的控制項。</param>
        <param name="callback">
          <see cref="T:System.Web.UI.Design.TransactedChangeCallback" /> 物件，表示要在控制項設計工具中，當做交易之一部分而進行呼叫的函式。</param>
        <param name="context">包含回呼引數的物件。</param>
        <param name="description">允許交易完成的效果描述，它是由設計主機用來給使用者機會，以取消交易。</param>
        <summary>使用已指定可以設計主應用程式的復原功能復原為單位的參數，將一系列變更包裝在交易之中。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 實作<xref:System.Web.UI.Design.ControlDesigner.InvokeTransactedChange%2A>方法會通知由設計主應用程式<xref:System.Web.UI.Control.Site%2A>屬性`component`，變更會發生在相關聯的控制項，且如果設計主應用程式未取消變更則會叫用指定`callback`使用指定`context`，然後通知設計主應用程式已完成變更。  
  
 如果設計主應用程式或相關聯的控制項就會擲回靜態`Canceled`的例外狀況欄位<xref:System.ComponentModel.Design.CheckoutException>例外狀況，交易被取消而不叫用`callback`。  
  
   
  
## Examples  
 下列程式碼範例示範如何建立簡單的複合控制項，與<xref:System.Web.UI.WebControls.Label>和<xref:System.Web.UI.WebControls.TextBox>控制項，及其屬性來設定的標籤文字，以及<xref:System.Web.UI.WebControls.TextBox.Text%2A>， <xref:System.Web.UI.WebControls.WebControl.Width%2A>，和<xref:System.Web.UI.WebControls.WebControl.BackColor%2A>屬性<xref:System.Web.UI.WebControls.TextBox>控制項。 針對關聯的控制項設計工具類別會建立三個<xref:System.ComponentModel.Design.DesignerActionMethodItem>命令，其中每個控制項設定兩個屬性。 使用<xref:System.Web.UI.Design.ControlDesigner.InvokeTransactedChange%2A>方法，您可以使用復原功能的設計主應用程式，例如[!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)]，回復每個已完成的交易，做為一個單位。  
  
 [!code-csharp[DesignerInvokeTransactedChange#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DesignerInvokeTransactedChange/CS/InvokeTransactedChangeSample.cs#1)]
 [!code-vb[DesignerInvokeTransactedChange#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DesignerInvokeTransactedChange/VB/InvokeTransactedChangeSample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="component" /> 為 <see langword="null" />。  
  
 -或-  
  
 <paramref name="callback" /> 為 <see langword="null" />。</exception>
        <altmember cref="T:System.ComponentModel.Design.CheckoutException" />
        <altmember cref="T:System.Web.UI.Design.TransactedChangeCallback" />
      </Docs>
    </Member>
    <Member MemberName="InvokeTransactedChange">
      <MemberSignature Language="C#" Value="public static void InvokeTransactedChange (System.ComponentModel.IComponent component, System.Web.UI.Design.TransactedChangeCallback callback, object context, string description, System.ComponentModel.MemberDescriptor member);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void InvokeTransactedChange(class System.ComponentModel.IComponent component, class System.Web.UI.Design.TransactedChangeCallback callback, object context, string description, class System.ComponentModel.MemberDescriptor member) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.InvokeTransactedChange(System.ComponentModel.IComponent,System.Web.UI.Design.TransactedChangeCallback,System.Object,System.String,System.ComponentModel.MemberDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub InvokeTransactedChange (component As IComponent, callback As TransactedChangeCallback, context As Object, description As String, member As MemberDescriptor)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void InvokeTransactedChange(System::ComponentModel::IComponent ^ component, System::Web::UI::Design::TransactedChangeCallback ^ callback, System::Object ^ context, System::String ^ description, System::ComponentModel::MemberDescriptor ^ member);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
        <Parameter Name="callback" Type="System.Web.UI.Design.TransactedChangeCallback" />
        <Parameter Name="context" Type="System.Object" />
        <Parameter Name="description" Type="System.String" />
        <Parameter Name="member" Type="System.ComponentModel.MemberDescriptor" />
      </Parameters>
      <Docs>
        <param name="component">與控制項設計工具相關聯的控制項。</param>
        <param name="callback">
          <see cref="T:System.Web.UI.Design.TransactedChangeCallback" /> 物件，表示要在控制項設計工具中，當做交易之一部分而進行呼叫的函式。</param>
        <param name="context">包含回呼引數的物件。</param>
        <param name="description">允許交易完成的效果描述，它是由設計主機用來給使用者機會，以取消交易。</param>
        <param name="member">
          <see cref="T:System.ComponentModel.MemberDescriptor" /> 物件 (通常是 <see cref="T:System.ComponentModel.EventDescriptor" /> 或 <see cref="T:System.ComponentModel.PropertyDescriptor" /> 物件)，描述做為交易的一部分而進行叫用的關聯控制項成員。</param>
        <summary>使用已指定可以設計主應用程式的復原功能復原為單位的參數，將一系列變更包裝在交易之中。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 實作<xref:System.Web.UI.Design.ControlDesigner.InvokeTransactedChange%2A>方法會通知由設計主應用程式<xref:System.Web.UI.Control.Site%2A>屬性`component`，變更是否發生指定`member`（屬性或方法） 針對關聯控制項的並在變更不會取消所設計主應用程式、 叫用指定`callback`使用指定`context`做為引數，然後通知設計主應用程式已完成變更。  
  
 如果設計主應用程式或相關聯的控制項就會擲回靜態`Canceled`的例外狀況欄位<xref:System.ComponentModel.Design.CheckoutException>例外狀況，交易被取消而不叫用`callback`。  
  
   
  
## Examples  
 如需程式碼範例，請參閱<xref:System.Web.UI.Design.ControlDesigner.InvokeTransactedChange%28System.ComponentModel.IComponent%2CSystem.Web.UI.Design.TransactedChangeCallback%2CSystem.Object%2CSystem.String%29>。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="component" /> 為 <see langword="null" />。  
  
 -或-  
  
 <paramref name="callback" /> 為 <see langword="null" />。</exception>
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.Web.UI.Design.TransactedChangeCallback" />
      </Docs>
    </Member>
    <Member MemberName="InvokeTransactedChange">
      <MemberSignature Language="C#" Value="public static void InvokeTransactedChange (IServiceProvider serviceProvider, System.ComponentModel.IComponent component, System.Web.UI.Design.TransactedChangeCallback callback, object context, string description, System.ComponentModel.MemberDescriptor member);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void InvokeTransactedChange(class System.IServiceProvider serviceProvider, class System.ComponentModel.IComponent component, class System.Web.UI.Design.TransactedChangeCallback callback, object context, string description, class System.ComponentModel.MemberDescriptor member) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.InvokeTransactedChange(System.IServiceProvider,System.ComponentModel.IComponent,System.Web.UI.Design.TransactedChangeCallback,System.Object,System.String,System.ComponentModel.MemberDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub InvokeTransactedChange (serviceProvider As IServiceProvider, component As IComponent, callback As TransactedChangeCallback, context As Object, description As String, member As MemberDescriptor)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void InvokeTransactedChange(IServiceProvider ^ serviceProvider, System::ComponentModel::IComponent ^ component, System::Web::UI::Design::TransactedChangeCallback ^ callback, System::Object ^ context, System::String ^ description, System::ComponentModel::MemberDescriptor ^ member);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
        <Parameter Name="callback" Type="System.Web.UI.Design.TransactedChangeCallback" />
        <Parameter Name="context" Type="System.Object" />
        <Parameter Name="description" Type="System.String" />
        <Parameter Name="member" Type="System.ComponentModel.MemberDescriptor" />
      </Parameters>
      <Docs>
        <param name="serviceProvider">
          <see cref="T:System.IServiceProvider" /> 物件，表示為關聯的控制項提供控制項設計工具服務的設計主應用程式。</param>
        <param name="component">與控制項設計工具相關聯的控制項。</param>
        <param name="callback">
          <see cref="T:System.Web.UI.Design.TransactedChangeCallback" /> 物件，表示要在控制項設計工具中，當做交易之一部分而進行呼叫的函式。</param>
        <param name="context">包含回呼引數的物件。</param>
        <param name="description">允許交易完成的效果描述，它是由設計主機用來給使用者機會，以取消交易。</param>
        <param name="member">
          <see cref="T:System.ComponentModel.MemberDescriptor" /> 物件 (通常是 <see cref="T:System.ComponentModel.EventDescriptor" /> 或 <see cref="T:System.ComponentModel.PropertyDescriptor" /> 物件)，描述做為交易的一部分而進行叫用的關聯控制項成員。</param>
        <summary>使用已指定可以設計主應用程式的復原功能復原為單位的參數，將一系列變更包裝在交易之中。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 實作<xref:System.Web.UI.Design.ControlDesigner.InvokeTransactedChange%2A>方法會通知由設計主應用程式`serviceProvider`，變更是否發生指定`member`（屬性或方法） 針對關聯控制項的而如果未取消變更設計主機中，叫用指定`callback`使用指定`context`做為引數，然後通知設計主應用程式已完成變更。  
  
 如果設計主應用程式或相關聯的控制項就會擲回靜態`Canceled`的例外狀況欄位<xref:System.ComponentModel.Design.CheckoutException>例外狀況，交易被取消而不叫用`callback`。  
  
   
  
## Examples  
 如需程式碼範例，請參閱<xref:System.Web.UI.Design.ControlDesigner.InvokeTransactedChange%2A>。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="component" /> 為 <see langword="null" />。  
  
 -或-  
  
 <paramref name="callback" /> 為 <see langword="null" />。  
  
 -或-  
  
 <paramref name="serviceProvider" /> 為 <see langword="null" />。</exception>
        <altmember cref="T:System.IServiceProvider" />
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.Web.UI.Design.TransactedChangeCallback" />
      </Docs>
    </Member>
    <Member MemberName="IsDirty">
      <MemberSignature Language="C#" Value="public bool IsDirty { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDirty" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ControlDesigner.IsDirty" />
      <MemberSignature Language="VB.NET" Value="Public Property IsDirty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDirty { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("The recommended alternative is to use Tag.SetDirty() and Tag.IsDirty. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，指出 Web 伺服器控制項是否已標記為變更。</summary>
        <value>
          如果 Web 伺服器控制項自上次保存或載入後已被變更則為 <see langword="true" />，否則為 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <xref:System.Web.UI.Design.ControlDesigner.IsDirty%2A> 屬性已經過時。 使用<xref:System.Web.UI.Design.IControlDesignerTag.IsDirty%2A>屬性和<xref:System.Web.UI.Design.IControlDesignerTag.SetDirty%2A>方法<xref:System.Web.UI.Design.ControlDesigner.Tag%2A>對等控制項設計工具功能的屬性。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Design.IControlDesignerTag.IsDirty" />
        <altmember cref="M:System.Web.UI.Design.IControlDesignerTag.SetDirty(System.Boolean)" />
        <altmember cref="P:System.Web.UI.Design.ControlDesigner.Tag" />
      </Docs>
    </Member>
    <Member MemberName="IsPropertyBound">
      <MemberSignature Language="C#" Value="public bool IsPropertyBound (string propName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsPropertyBound(string propName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.IsPropertyBound(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsPropertyBound (propName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsPropertyBound(System::String ^ propName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("The recommended alternative is DataBindings.Contains(string). The DataBindings collection allows more control of the databindings associated with the control. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propName">測試資料繫結 (Data Binding) 的屬性。</param>
        <summary>擷取值，指出關聯控制項的指定屬性是否已資料繫結。</summary>
        <returns>
          如果屬性已資料繫結則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <xref:System.Web.UI.Design.ControlDesigner.IsPropertyBound%2A>方法已過時。 使用<xref:System.Web.UI.DataBindingCollection.Contains%2A>方法<xref:System.Web.UI.Design.HtmlControlDesigner.DataBindings%2A>對等控制項設計工具功能的屬性。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.DataBindingCollection.Contains(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Localize">
      <MemberSignature Language="C#" Value="public void Localize (System.Web.UI.Design.IDesignTimeResourceWriter resourceWriter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Localize(class System.Web.UI.Design.IDesignTimeResourceWriter resourceWriter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.Localize(System.Web.UI.Design.IDesignTimeResourceWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Localize (resourceWriter As IDesignTimeResourceWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Localize(System::Web::UI::Design::IDesignTimeResourceWriter ^ resourceWriter);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceWriter" Type="System.Web.UI.Design.IDesignTimeResourceWriter" />
      </Parameters>
      <Docs>
        <param name="resourceWriter">衍生自 <see cref="T:System.Web.UI.Design.IDesignTimeResourceWriter" /> 物件的物件，用於將資源寫入設計階段回應資料流。</param>
        <summary>使用提供的資源寫入器將關聯控制項的可當地語系化屬性保存到設計主應用程式的資源中。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Design.ControlDesigner.Localize%2A>方法由設計主應用程式來建立資源項目會標示每一個屬性呼叫<xref:System.ComponentModel.LocalizableAttribute>物件和任何的明確資源運算式做為值的屬性。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAutoFormatApplied">
      <MemberSignature Language="C#" Value="public virtual void OnAutoFormatApplied (System.Web.UI.Design.DesignerAutoFormat appliedAutoFormat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnAutoFormatApplied(class System.Web.UI.Design.DesignerAutoFormat appliedAutoFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.OnAutoFormatApplied(System.Web.UI.Design.DesignerAutoFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnAutoFormatApplied (appliedAutoFormat As DesignerAutoFormat)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnAutoFormatApplied(System::Web::UI::Design::DesignerAutoFormat ^ appliedAutoFormat);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appliedAutoFormat" Type="System.Web.UI.Design.DesignerAutoFormat" />
      </Parameters>
      <Docs>
        <param name="appliedAutoFormat">定義樣式的 <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> 物件。</param>
        <summary>將預先定義的自動格式化配置套用至關聯的控制項時呼叫。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Design.ControlDesigner.OnAutoFormatApplied%2A>方法之後呼叫<xref:System.Web.UI.Design.DesignerAutoFormat>物件已套用至相關聯控制項的預先定義的格式。 A<xref:System.Web.UI.Design.DesignerAutoFormat>物件定義的自動格式化配置名稱和樣式設定套用至控制項。  
  
 類別衍生自<xref:System.Web.UI.Design.ControlDesigner>類別覆寫<xref:System.Web.UI.Design.ControlDesigner.OnAutoFormatApplied%2A>方法來執行其他處理序將自動格式化配置套用至相關聯的控制項時。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.Design.DesignerAutoFormatStyle" />
        <altmember cref="P:System.Web.UI.Design.ControlDesigner.AutoFormats" />
        <altmember cref="T:System.Web.UI.Design.DesignerAutoFormat" />
      </Docs>
    </Member>
    <Member MemberName="OnBindingsCollectionChanged">
      <MemberSignature Language="C#" Value="protected override void OnBindingsCollectionChanged (string propName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnBindingsCollectionChanged(string propName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.OnBindingsCollectionChanged(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnBindingsCollectionChanged (propName As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnBindingsCollectionChanged(System::String ^ propName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("The recommended alternative is to handle the Changed event on the DataBindings collection. The DataBindings collection allows more control of the databindings associated with the control. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propName">測試繫結集合變更的屬性。</param>
        <summary>當資料繫結集合變更時呼叫。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Design.ControlDesigner.OnBindingsCollectionChanged%2A>外部的呼叫端的資料繫結集合已變更時呼叫方法。  
  
> [!NOTE]
>  <xref:System.Web.UI.Design.ControlDesigner.OnBindingsCollectionChanged%2A>方法已過時。 使用<xref:System.Web.UI.DataBindingCollection.Changed>事件<xref:System.Web.UI.Design.HtmlControlDesigner.DataBindings%2A>對等控制項設計工具功能的集合。  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.DataBindingCollection.Changed" />
      </Docs>
    </Member>
    <Member MemberName="OnClick">
      <MemberSignature Language="C#" Value="protected virtual void OnClick (System.Web.UI.Design.DesignerRegionMouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnClick(class System.Web.UI.Design.DesignerRegionMouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.OnClick(System.Web.UI.Design.DesignerRegionMouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnClick (e As DesignerRegionMouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnClick(System::Web::UI::Design::DesignerRegionMouseEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.Design.DesignerRegionMouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Web.UI.Design.DesignerRegionMouseEventArgs" /> 物件，指定使用者點選的位置，可能還有點選的控制項設計工具區域。</param>
        <summary>當使用者在設計階段按一下關聯控制項時，由設計主應用程式呼叫。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Design.IControlDesignerView.ViewEvent>設計主應用程式中設計介面控制項上的某些動作會引發事件。 例如，下列條件引發事件：  
  
-   使用者按一下控制項時。  
  
-   在設計介面上的控制項設計工具繪製。  
  
-   使用者輸入，或結束範本編輯模式的控制項。  
  
 <xref:System.Web.UI.Design.ControlDesigner>類別提供的預設委派處理<xref:System.Web.UI.Design.IControlDesignerView.ViewEvent?displayProperty=nameWithType>事件。 類別衍生自<xref:System.Web.UI.Design.ControlDesigner>覆寫<xref:System.Web.UI.Design.ControlDesigner.OnClick%2A>程序引發的事件，當使用者按一下控制項的方法。  
  
 <xref:System.Web.UI.Design.ControlDesigner.OnClick%2A>方法允許衍生的類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 預設實作<xref:System.Web.UI.Design.ControlDesigner.OnClick%2A>方法傳回時不執行任何處理。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用的處理常式<xref:System.Web.UI.Design.ControlDesigner.OnClick%2A>可點選區域的控制項，然後使用中的事件<xref:System.Web.UI.Design.DesignerRegionMouseEventArgs>物件識別在按下的區域。  
  
 這個程式碼範例是較大的程式碼範例的一部分<xref:System.Web.UI.Design.EditableDesignerRegion>類別。  
  
 [!code-csharp[SimpleMultiRegionControlDesigner#4](~/samples/snippets/csharp/VS_Snippets_WebNet/SimpleMultiRegionControlDesigner/CS/SimpleMultiRegionControlDesigner.cs#4)]
 [!code-vb[SimpleMultiRegionControlDesigner#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/SimpleMultiRegionControlDesigner/VB/SimpleMultiRegionControlDesigner.vb#4)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>覆寫<see cref="M:System.Web.UI.Design.ControlDesigner.OnClick(System.Web.UI.Design.DesignerRegionMouseEventArgs)" />從衍生類別中的方法<see cref="T:System.Web.UI.Design.ControlDesigner" />類別處理設計階段按一下控制項上的事件。 如果<paramref name="e" />不是 null，按下後的區域中，如果在指定的任何，<see cref="P:System.Web.UI.Design.DesignerRegionMouseEventArgs.Region" />屬性。</para>
        </block>
        <altmember cref="T:System.Web.UI.Design.ViewEventHandler" />
        <altmember cref="T:System.Web.UI.Design.DesignerRegionMouseEventArgs" />
        <altmember cref="T:System.Web.UI.Design.DesignerRegion" />
      </Docs>
    </Member>
    <Member MemberName="OnComponentChanged">
      <MemberSignature Language="C#" Value="public virtual void OnComponentChanged (object sender, System.ComponentModel.Design.ComponentChangedEventArgs ce);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnComponentChanged(object sender, class System.ComponentModel.Design.ComponentChangedEventArgs ce) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.OnComponentChanged(System.Object,System.ComponentModel.Design.ComponentChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnComponentChanged (sender As Object, ce As ComponentChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnComponentChanged(System::Object ^ sender, System::ComponentModel::Design::ComponentChangedEventArgs ^ ce);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="ce" Type="System.ComponentModel.Design.ComponentChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">事件的來源。</param>
        <param name="ce">包含事件資料的 <see cref="T:System.ComponentModel.Design.ComponentChangedEventArgs" /> 物件。</param>
        <summary>當關聯的控制項變更時呼叫。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Design.ControlDesigner.OnComponentChanged%2A>方法相關聯的控制項上的屬性變更時呼叫。 它可讓實作器沒有任何屬性變更之後可能需要的處理。 呼叫<xref:System.Web.UI.Design.ControlDesigner.OnComponentChanged%2A>方法會導致設計主應用程式呼叫<xref:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml%2A>方法。 基底實作<xref:System.Web.UI.Design.ControlDesigner.OnComponentChanged%2A>方法也會保存在網頁標記中的控制項。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>覆寫<see cref="M:System.Web.UI.Design.ControlDesigner.OnComponentChanged(System.Object,System.ComponentModel.Design.ComponentChangedEventArgs)" />方法以提供額外的處理保存控制項之前和重新整理的設計階段 HTML 標記之前。  
  
 在覆寫<see cref="M:System.Web.UI.Design.ControlDesigner.OnComponentChanged(System.Object,System.ComponentModel.Design.ComponentChangedEventArgs)" />方法在衍生類別中，請確定您呼叫<see cref="M:System.Web.UI.Design.ControlDesigner.OnComponentChanged(System.Object,System.ComponentModel.Design.ComponentChangedEventArgs)" />方法的基底類別，使已註冊的委派能接收到事件。</para>
        </block>
        <altmember cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnComponentChanging">
      <MemberSignature Language="C#" Value="public virtual void OnComponentChanging (object sender, System.ComponentModel.Design.ComponentChangingEventArgs ce);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnComponentChanging(object sender, class System.ComponentModel.Design.ComponentChangingEventArgs ce) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.OnComponentChanging(System.Object,System.ComponentModel.Design.ComponentChangingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnComponentChanging (sender As Object, ce As ComponentChangingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnComponentChanging(System::Object ^ sender, System::ComponentModel::Design::ComponentChangingEventArgs ^ ce);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="ce" Type="System.ComponentModel.Design.ComponentChangingEventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">做為事件來源的物件。</param>
        <param name="ce">包含事件資料的 <see cref="T:System.ComponentModel.Design.ComponentChangedEventArgs" /> 物件。</param>
        <summary>表示將處理關聯控制項之 <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanging" /> 事件的方法。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當 <xref:System.Web.UI.Design.ControlDesigner.InvokeTransactedChange%2A>或<xref:System.Web.UI.Design.ControlDesigner.Localize%2A>呼叫方法時，<xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanging>至相關聯的控制項進行任何變更之前，就會發生事件。 變更已完成之後,<xref:System.Web.UI.Design.ControlDesigner.OnComponentChanged%2A>方法，就會發生。  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.Design.ControlDesigner.InvokeTransactedChange" />
        <altmember cref="M:System.Web.UI.Design.ControlDesigner.Localize(System.Web.UI.Design.IDesignTimeResourceWriter)" />
        <altmember cref="M:System.Web.UI.Design.ControlDesigner.OnComponentChanging(System.Object,System.ComponentModel.Design.ComponentChangingEventArgs)" />
        <altmember cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnControlResize">
      <MemberSignature Language="C#" Value="protected virtual void OnControlResize ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnControlResize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.OnControlResize" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnControlResize ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnControlResize();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("The recommended alternative is OnComponentChanged(). OnComponentChanged is called when any property of the control is changed. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>於設計階段在設計主應用程式中重新調整關聯之 Web 伺服器控制項的大小時呼叫。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <xref:System.Web.UI.Design.ControlDesigner.OnControlResize%2A>方法已過時。 使用<xref:System.Web.UI.Design.ControlDesigner.OnComponentChanged%2A>對等控制項設計工具功能的方法。  
  
 <xref:System.Web.UI.Design.ControlDesigner.OnControlResize%2A>方法通常只能由設計階段環境時呼叫使用者的動作會導致相關聯的 Web 伺服器控制項來調整大小。 <xref:System.Web.UI.Design.ControlDesigner.OnControlResize%2A>方法可能在調整大小的程序，以顯示更新控制項的大小調整大小完成之前呼叫多次。 控制項的寬度和高度屬性就會更新之前<xref:System.Web.UI.Design.ControlDesigner.OnControlResize%2A>方法呼叫。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Design.ControlDesigner.OnComponentChanged(System.Object,System.ComponentModel.Design.ComponentChangedEventArgs)" />
        <altmember cref="P:System.Web.UI.Design.ControlDesigner.Tag" />
      </Docs>
    </Member>
    <Member MemberName="OnPaint">
      <MemberSignature Language="C#" Value="protected virtual void OnPaint (System.Windows.Forms.PaintEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPaint(class System.Windows.Forms.PaintEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.OnPaint(System.Windows.Forms.PaintEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPaint (e As PaintEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPaint(System::Windows::Forms::PaintEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.PaintEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Forms.PaintEventArgs" /> 物件，指定用於繪製控制項的圖形和方框邊界。</param>
        <summary>在 <see cref="F:System.Web.UI.Design.ViewFlags.CustomPaint" /> 值為 <see langword="true" /> 的情況下，控制項設計工具在設計介面中繪製關聯的控制項便會呼叫。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Design.IControlDesignerView.ViewEvent>設計主應用程式中設計介面控制項上的某些動作會引發事件。 例如，下列條件引發事件：  
  
-   使用者按一下控制項時。  
  
-   設計主機要求 HTML 標記來呈現關聯的控制項的設計介面上。  
  
-   使用者輸入，或結束範本編輯模式的控制項。  
  
 <xref:System.Web.UI.Design.ControlDesigner>類別提供的預設委派處理<xref:System.Web.UI.Design.IControlDesignerView.ViewEvent?displayProperty=nameWithType>事件。 類別衍生自<xref:System.Web.UI.Design.ControlDesigner>應該設定<xref:System.Web.UI.Design.ViewFlags.CustomPaint?displayProperty=nameWithType>值，並覆寫<xref:System.Web.UI.Design.ControlDesigner.OnPaint%2A>設計主應用程式繪製控制項的設計介面上時所引發的程序事件的方法。  
  
 <xref:System.Web.UI.Design.ControlDesigner.OnPaint%2A>方法允許衍生的類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 預設實作<xref:System.Web.UI.Design.ControlDesigner.OnPaint%2A>方法傳回時不執行任何處理。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>覆寫<see cref="M:System.Web.UI.Design.ControlDesigner.OnPaint(System.Windows.Forms.PaintEventArgs)" />從衍生類別中的方法<see cref="T:System.Web.UI.Design.ControlDesigner" />處理控制項的設計介面中的 [小畫家] 事件類別。 不過，事件時才會發生<see cref="F:System.Web.UI.Design.ViewFlags.CustomPaint" />值已設定具有<see cref="M:System.Web.UI.Design.ControlDesigner.SetViewFlags(System.Web.UI.Design.ViewFlags,System.Boolean)" />方法。</para>
        </block>
        <altmember cref="F:System.Web.UI.Design.ViewFlags.CustomPaint" />
        <altmember cref="M:System.Web.UI.Design.ControlDesigner.SetViewFlags(System.Web.UI.Design.ViewFlags,System.Boolean)" />
        <altmember cref="T:System.Web.UI.Design.ViewEventHandler" />
        <altmember cref="T:System.Web.UI.Design.IControlDesignerView" />
      </Docs>
    </Member>
    <Member MemberName="PreFilterProperties">
      <MemberSignature Language="C#" Value="protected override void PreFilterProperties (System.Collections.IDictionary properties);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void PreFilterProperties(class System.Collections.IDictionary properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.PreFilterProperties(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub PreFilterProperties (properties As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void PreFilterProperties(System::Collections::IDictionary ^ properties);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="properties">元件類別的屬性。</param>
        <summary>在設計階段將屬性加入至設計主應用程式中的 [屬性] 方格或從其中移除屬性，或提供新的設計階段屬性，這些屬性可能會對應至關聯控制項的屬性。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 與<xref:System.Web.UI.Design.ControlDesigner.PreFilterProperties%2A>方法，您可以將項目加入控制項設計工具會透過公開的屬性字典<xref:System.ComponentModel.TypeDescriptor>物件。  
  
 屬性字典中的索引鍵是屬性的名稱。 物件是類型<xref:System.ComponentModel.PropertyDescriptor>。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>您可以直接修改存取透過屬性參數的字典，或您可以將它保持不變。 如果您覆寫<see cref="M:System.Web.UI.Design.ControlDesigner.PreFilterProperties(System.Collections.IDictionary)" />方法，呼叫基底實作，才能執行您自己的篩選。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="RaiseResizeEvent">
      <MemberSignature Language="C#" Value="public void RaiseResizeEvent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RaiseResizeEvent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.RaiseResizeEvent" />
      <MemberSignature Language="VB.NET" Value="Public Sub RaiseResizeEvent ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RaiseResizeEvent();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use of this method is not recommended because resizing is handled by the OnComponentChanged() method. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>引發 <see cref="M:System.Web.UI.Design.ControlDesigner.OnControlResize" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Design.ControlDesigner.RaiseResizeEvent%2A>方法已經過時，這項功能沒有替代項目。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Design.ControlDesigner.OnComponentChanged(System.Object,System.ComponentModel.Design.ComponentChangedEventArgs)" />
        <altmember cref="M:System.ComponentModel.Design.ComponentDesigner.RaiseComponentChanged(System.ComponentModel.MemberDescriptor,System.Object,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ReadOnly">
      <MemberSignature Language="C#" Value="public bool ReadOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ControlDesigner.ReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Property ReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ReadOnly { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("The recommended alternative is to inherit from ContainerControlDesigner instead and to use an EditableDesignerRegion. Regions allow for better control of the content in the designer. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，指出控制項屬性於設計階段是否為唯讀。</summary>
        <value>
          如果控制項屬性於設計階段為唯讀則為 <see langword="true" />，否則為 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Design.ControlDesigner>類別是唯讀，本質。 讀取/寫入功能所提供的新增<xref:System.Web.UI.Design.DesignerRegion>物件，或使用基底類別，例如<xref:System.Web.UI.Design.ContainerControlDesigner>類別。  
  
> [!NOTE]
>  <xref:System.Web.UI.Design.ControlDesigner.ReadOnly%2A> 屬性已經過時。 衍生自<xref:System.Web.UI.Design.ContainerControlDesigner>，您可以新增可編輯的設計工具區域的類別或從<xref:System.Web.UI.Design.TemplatedControlDesigner>範本您可以建立可編輯的設計工具區域的物件。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.Design.ControlDesigner" />
        <altmember cref="T:System.Web.UI.Design.ContainerControlDesigner" />
      </Docs>
    </Member>
    <Member MemberName="RegisterClone">
      <MemberSignature Language="C#" Value="public void RegisterClone (object original, object clone);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterClone(object original, object clone) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.RegisterClone(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterClone (original As Object, clone As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterClone(System::Object ^ original, System::Object ^ clone);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="original" Type="System.Object" />
        <Parameter Name="clone" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="original">與控制項設計工具相關聯的控制項。</param>
        <param name="clone">關聯控制項的複本。</param>
        <summary>在複製 (Clone) 的控制項中註冊內部資料。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 每當複製的項目時，可能會有一些內部資料結構，例如`meta:`屬性應該由控制項設計工具包含在複製的控制項。 網頁開發人員可能會加入`meta:`屬性，將控制項的標記和那里任何方法，也沒有要區別這些標記可能會讓控制項的原因。 因此，如果您的控制項設計工具提供方法，以將變更套用至頁面之前，請先編輯複雜的內容或格式，您會建立控制項的複製品，將原始的控制項和複製傳遞至此<xref:System.Web.UI.Design.ControlDesigner.RegisterClone%2A>方法，然後時所做的變更標記會保存所有`meta:`屬性也會保存。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="original" /> 為 null。  
  
 -或-  
  
 <paramref name="clone" /> 為 null。</exception>
      </Docs>
    </Member>
    <Member MemberName="RootDesigner">
      <MemberSignature Language="C#" Value="protected System.Web.UI.Design.WebFormsRootDesigner RootDesigner { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.Design.WebFormsRootDesigner RootDesigner" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ControlDesigner.RootDesigner" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property RootDesigner As WebFormsRootDesigner" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Web::UI::Design::WebFormsRootDesigner ^ RootDesigner { System::Web::UI::Design::WebFormsRootDesigner ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Design.WebFormsRootDesigner</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>為包含關聯控制項的 Web Form 網頁，取得控制項設計工具。</summary>
        <value>
          <see cref="T:System.Web.UI.Design.WebFormsRootDesigner" /> 物件，可在設計階段用來存取包含控制項之 Web Form 網頁上的元件。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Design.ControlDesigner.RootDesigner%2A>屬性表示 Web Form 網頁所包含之控制項的控制項設計工具。 使用<xref:System.Web.UI.Design.ControlDesigner.RootDesigner%2A>來存取及管理包含 Web Forms 網頁設計階段屬性。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.Design.WebFormsRootDesigner" />
      </Docs>
    </Member>
    <Member MemberName="SetEditableDesignerRegionContent">
      <MemberSignature Language="C#" Value="public virtual void SetEditableDesignerRegionContent (System.Web.UI.Design.EditableDesignerRegion region, string content);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetEditableDesignerRegionContent(class System.Web.UI.Design.EditableDesignerRegion region, string content) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.SetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetEditableDesignerRegionContent (region As EditableDesignerRegion, content As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetEditableDesignerRegionContent(System::Web::UI::Design::EditableDesignerRegion ^ region, System::String ^ content);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="region" Type="System.Web.UI.Design.EditableDesignerRegion" />
        <Parameter Name="content" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="region">控制項中包含的可編輯設計區域。</param>
        <param name="content">要指派給可編輯設計區域的內容。</param>
        <summary>在設計階段指定控制項之可編輯區域的內容。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 類別衍生自<xref:System.Web.UI.Design.ControlDesigner>類別支援區域為基礎的設計介面上編輯和覆寫<xref:System.Web.UI.Design.ControlDesigner.SetEditableDesignerRegionContent%2A>方法，以設定為指定的區域的內容。  
  
   
  
## Examples  
 下列程式碼範例示範如何取得設計主應用程式的參考，然後使用該參考建立<xref:System.Web.UI.Design.ControlParser>物件，以開啟`content`的執行個體<xref:System.Web.UI.ITemplate>介面，並指派<xref:System.Web.UI.ITemplate>執行個體適當的檢視。  
  
 [!code-csharp[SimpleMultiRegionControlDesigner#7](~/samples/snippets/csharp/VS_Snippets_WebNet/SimpleMultiRegionControlDesigner/CS/SimpleMultiRegionControlDesigner.cs#7)]
 [!code-vb[SimpleMultiRegionControlDesigner#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/SimpleMultiRegionControlDesigner/VB/SimpleMultiRegionControlDesigner.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Design.ControlDesigner.GetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion)" />
        <altmember cref="T:System.Web.UI.Design.EditableDesignerRegion" />
      </Docs>
    </Member>
    <Member MemberName="SetRegionContent">
      <MemberSignature Language="C#" Value="protected void SetRegionContent (System.Web.UI.Design.EditableDesignerRegion region, string content);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetRegionContent(class System.Web.UI.Design.EditableDesignerRegion region, string content) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.SetRegionContent(System.Web.UI.Design.EditableDesignerRegion,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SetRegionContent (region As EditableDesignerRegion, content As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetRegionContent(System::Web::UI::Design::EditableDesignerRegion ^ region, System::String ^ content);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="region" Type="System.Web.UI.Design.EditableDesignerRegion" />
        <Parameter Name="content" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="region">控制項的設計階段檢視中包含的可編輯設計區域。</param>
        <param name="content">要指派給可編輯設計區域的內容。</param>
        <summary>指定控制項之設計階段檢視的可編輯區域內容。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 一般來說，<xref:System.Web.UI.Design.ControlDesigner.SetRegionContent%2A>方法不會覆寫衍生的設計工具中。 基底類別會導致設計主應用程式呼叫<xref:System.Web.UI.Design.ControlDesigner.SetEditableDesignerRegionContent%2A>區域的方法。 覆寫<xref:System.Web.UI.Design.ControlDesigner.SetRegionContent%2A>方法之前先呼叫控制項的需要自訂的資料時<xref:System.Web.UI.Design.ControlDesigner.SetEditableDesignerRegionContent%2A>方法。  
  
 使用<xref:System.Web.UI.Design.ControlDesigner.SetRegionContent%2A>方法，以插入控制項的區域中的 HTML 標記。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Design.IControlDesignerView.SupportsRegions" />
        <altmember cref="Overload:System.Web.UI.Design.ControlDesigner.GetViewRendering" />
      </Docs>
    </Member>
    <Member MemberName="SetViewFlags">
      <MemberSignature Language="C#" Value="protected void SetViewFlags (System.Web.UI.Design.ViewFlags viewFlags, bool setFlag);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetViewFlags(valuetype System.Web.UI.Design.ViewFlags viewFlags, bool setFlag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.SetViewFlags(System.Web.UI.Design.ViewFlags,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetViewFlags(System::Web::UI::Design::ViewFlags viewFlags, bool setFlag);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewFlags" Type="System.Web.UI.Design.ViewFlags" />
        <Parameter Name="setFlag" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="viewFlags">
          <see cref="T:System.Web.UI.Design.ViewFlags" /> 值。</param>
        <param name="setFlag">
          <see langword="true" /> 表示設定旗標，<see langword="false" /> 則表示移除旗標。</param>
        <summary>指派指定的位元 (Bitwise) <see cref="T:System.Web.UI.Design.ViewFlags" /> 列舉型別給指定的旗標值。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 有數個可以設定的旗標。 例如，使用<xref:System.Web.UI.Design.ControlDesigner.SetViewFlags%2A>方法，以設定<xref:System.Web.UI.Design.ViewFlags.DesignTimeHtmlRequiresLoadComplete>的目前值<xref:System.Web.UI.Design.ControlDesigner.ViewControl%2A>屬性控制項設計工具，而不是 過時<xref:System.Web.UI.Design.ControlDesigner.DesignTimeHtmlRequiresLoadComplete%2A>屬性。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.UI.Design.ControlDesigner.SetViewFlags%2A>方法，以表示範本處於編輯模式。  
  
 [!code-csharp[DesignerTemplateGroupSample#5](~/samples/snippets/csharp/VS_Snippets_WebNet/DesignerTemplateGroupSample/CS/TemplateGroupsSample.cs#5)]
 [!code-vb[DesignerTemplateGroupSample#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DesignerTemplateGroupSample/VB/TemplateGroupsSample.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Design.ControlDesigner.ViewControl" />
        <altmember cref="T:System.Web.UI.Design.ViewFlags" />
      </Docs>
    </Member>
    <Member MemberName="Tag">
      <MemberSignature Language="C#" Value="protected System.Web.UI.Design.IControlDesignerTag Tag { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.Design.IControlDesignerTag Tag" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ControlDesigner.Tag" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Tag As IControlDesignerTag" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Web::UI::Design::IControlDesignerTag ^ Tag { System::Web::UI::Design::IControlDesignerTag ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Design.IControlDesignerTag</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得物件，表示關聯控制項的 HTML 標記項目。</summary>
        <value>
          <see cref="T:System.Web.UI.Design.IControlDesignerTag" /> 物件，表示關聯控制項的 HTML 標記項目。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 一般而言，<xref:System.Web.UI.Design.ControlDesigner.Tag%2A>屬性只能用於設計主應用程式和控制項設計工具之間的通訊，而且不是由控制項開發人員。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.Design.IControlDesignerTag" />
      </Docs>
    </Member>
    <Member MemberName="TemplateGroups">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.Design.TemplateGroupCollection TemplateGroups { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.Design.TemplateGroupCollection TemplateGroups" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ControlDesigner.TemplateGroups" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property TemplateGroups As TemplateGroupCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::Design::TemplateGroupCollection ^ TemplateGroups { System::Web::UI::Design::TemplateGroupCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Design.TemplateGroupCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得範本群組集合，各範本群組包含一個或多個範本定義。</summary>
        <value>
          <see cref="T:System.Web.UI.Design.TemplateGroup" /> 物件的集合。 預設為空的 <see cref="T:System.Web.UI.Design.TemplateGroupCollection" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列程式碼範例示範如何建立控制項的設計工具類別衍生自<xref:System.Web.UI.Design.ControlDesigner>類別。 這個控制項設計工具支援的控制項搭配四個可能的範本。  
  
 若要試用，編譯程式碼，並接著，在設計不會裝載這類[!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)]，在設計檢視中檢視網頁。 選取的控制項，按一下 [動作] 清單選取要修改的範本，然後使用拖放功能將控制項移至範本。  
  
 [!code-csharp[DesignerTemplateGroupSample#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DesignerTemplateGroupSample/CS/TemplateGroupsSample.cs#1)]
 [!code-vb[DesignerTemplateGroupSample#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DesignerTemplateGroupSample/VB/TemplateGroupsSample.vb#1)]  
[!code-aspx-vb[DesignerTemplateGroupSample#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DesignerTemplateGroupSample/VB/TemplateGroupsSample.aspx#2)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>您可以修改<see cref="P:System.Web.UI.Design.ControlDesigner.TemplateGroups" />集合直接管理，或者您可以將它保留不變。 如果您覆寫<see cref="P:System.Web.UI.Design.ControlDesigner.TemplateGroups" />屬性，您將範本群組加入至集合之前，呼叫基底實作。</para>
        </block>
        <altmember cref="T:System.Web.UI.Design.TemplateGroup" />
        <altmember cref="T:System.Web.UI.Design.TemplateDefinition" />
        <altmember cref="T:System.Web.UI.Design.TemplatedControlDesigner" />
      </Docs>
    </Member>
    <Member MemberName="UpdateDesignTimeHtml">
      <MemberSignature Language="C#" Value="public virtual void UpdateDesignTimeHtml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UpdateDesignTimeHtml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.UpdateDesignTimeHtml" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub UpdateDesignTimeHtml ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void UpdateDesignTimeHtml();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>藉由呼叫 <see cref="Overload:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml" /> 方法，為關聯的 Web 伺服器控制項重新整理設計階段 HTML 標記。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Design.ControlDesigner.UpdateDesignTimeHtml%2A>方法由設計主應用程式更新的相關聯的 Web 伺服器控制項顯示在設計階段，例如控制項有修改時呼叫。 此外，控制項設計工具可以呼叫<xref:System.Web.UI.Design.ControlDesigner.UpdateDesignTimeHtml%2A>方法之後修改更新控制項的顯示控制項的值。  
  
> [!NOTE]
>  如果您將會呼叫<xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanged>事件，或使用<xref:System.ComponentModel.PropertyDescriptor>物件來設定屬性，<xref:System.ComponentModel.Design.IComponentChangeService>介面呼叫<xref:System.Web.UI.Design.ControlDesigner.UpdateDesignTimeHtml%2A>您的方法。  
  
   
  
## Examples  
 下列程式碼範例示範如何回應`Click`事件中的控制項設計工具，將多區域控制項中的區域之間的焦點變更，並使用<xref:System.Web.UI.Design.ControlDesigner.UpdateDesignTimeHtml%2A>方法來更新設計主機中控制項的外觀。  
  
 這個程式碼範例是一個較大範例的一部分<xref:System.Web.UI.Design.EditableDesignerRegion>類別。  
  
 [!code-csharp[SimpleMultiRegionControlDesigner#4](~/samples/snippets/csharp/VS_Snippets_WebNet/SimpleMultiRegionControlDesigner/CS/SimpleMultiRegionControlDesigner.cs#4)]
 [!code-vb[SimpleMultiRegionControlDesigner#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/SimpleMultiRegionControlDesigner/VB/SimpleMultiRegionControlDesigner.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanged" />
      </Docs>
    </Member>
    <Member MemberName="UsePreviewControl">
      <MemberSignature Language="C#" Value="protected virtual bool UsePreviewControl { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UsePreviewControl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ControlDesigner.UsePreviewControl" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property UsePreviewControl As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool UsePreviewControl { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得值，其中該值會表示控制項設計工具是否使用暫時預覽控制項以產生設計階段 HTML 標記。</summary>
        <value>
          如果控制項設計工具針對設計階段預覽使用控制項的暫時副本，則為 <see langword="true" />；否則，如果控制項設計工具針對控制項設計工具中所包含的控制項使用 <see cref="P:System.ComponentModel.Design.ComponentDesigner.Component" /> 屬性，則為 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果<xref:System.Web.UI.Design.ControlDesigner.UsePreviewControl%2A>屬性是`true`、<xref:System.Web.UI.Design.ControlDesigner.ViewControl%2A>屬性會傳回控制項的暫存副本。 變更暫存控制項不會保存在文件。  
  
 如果<xref:System.Web.UI.Design.ControlDesigner.UsePreviewControl%2A>屬性是`false`、<xref:System.Web.UI.Design.ControlDesigner.ViewControl%2A>屬性傳回的執行個體<xref:System.ComponentModel.Design.ComponentDesigner.Component%2A>控制項的屬性。 控制項的執行個體的變更會保存。  
  
 <xref:System.Web.UI.Design.SupportsPreviewControlAttribute.SupportsPreviewControl%2A>中設定<xref:System.Web.UI.Design.SupportsPreviewControlAttribute>物件用來設定的值<xref:System.Web.UI.Design.ControlDesigner.UsePreviewControl%2A>屬性。 因此，<xref:System.Web.UI.Design.SupportsPreviewControlAttribute.SupportsPreviewControl%2A>設定會決定所傳回的控制項類型<xref:System.Web.UI.Design.ControlDesigner.ViewControl%2A>屬性的基底中<xref:System.Web.UI.Design.ControlDesigner>類別。 如果<xref:System.Web.UI.Design.SupportsPreviewControlAttribute>控制項設計工具宣告中未指定<xref:System.Web.UI.Design.ControlDesigner>物件行為相當於指定<xref:System.Web.UI.Design.SupportsPreviewControlAttribute.SupportsPreviewControl%2A>屬性做為`false`。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>衍生自的自訂設計工具<see cref="T:System.Web.UI.Design.ControlDesigner" />類別可以覆寫<see cref="P:System.Web.UI.Design.ControlDesigner.UsePreviewControl" />屬性，並忽略<see cref="T:System.Web.UI.Design.SupportsPreviewControlAttribute" />物件。 一般而言，以指出<see cref="P:System.Web.UI.Design.ControlDesigner.ViewControl" />屬性一律會傳回控制項的暫時副本，覆寫<see cref="P:System.Web.UI.Design.ControlDesigner.UsePreviewControl" />屬性一律傳回<see langword="true" />。 表示<see cref="P:System.Web.UI.Design.ControlDesigner.ViewControl" />屬性一律會傳回控制項的執行個體，請覆寫<see cref="P:System.Web.UI.Design.ControlDesigner.UsePreviewControl" />屬性一律傳回<see langword="false" />。 例如，<see cref="T:System.Web.UI.Design.WebControls.PreviewControlDesigner" />類別衍生自<see cref="T:System.Web.UI.Design.ControlDesigner" />且一律會傳回<see langword="true" />如<see cref="P:System.Web.UI.Design.ControlDesigner.UsePreviewControl" />屬性。</para>
        </block>
        <altmember cref="T:System.Web.UI.Design.SupportsPreviewControlAttribute" />
        <altmember cref="P:System.Web.UI.Design.ControlDesigner.ViewControl" />
        <altmember cref="Overload:System.Web.UI.Design.ControlDesigner.GetViewRendering" />
        <altmember cref="T:System.Web.UI.Design.WebControls.PreviewControlDesigner" />
      </Docs>
    </Member>
    <Member MemberName="ViewControl">
      <MemberSignature Language="C#" Value="public System.Web.UI.Control ViewControl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.Control ViewControl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ControlDesigner.ViewControl" />
      <MemberSignature Language="VB.NET" Value="Public Property ViewControl As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::Control ^ ViewControl { System::Web::UI::Control ^ get(); void set(System::Web::UI::Control ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Control</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定 Web 伺服器控制項，可用於預覽設計階段的 HTML 標記。</summary>
        <value>
          <see cref="T:System.Web.UI.Control" /> 物件，可供基底類別產生設計階段 HTML 標記。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Design.ControlDesigner.ViewControl%2A>屬性使用<xref:System.Web.UI.Design.ControlDesigner.UsePreviewControl%2A>屬性來判斷它的傳回值。  
  
 如果<xref:System.Web.UI.Design.ControlDesigner.UsePreviewControl%2A>屬性是`true`、<xref:System.Web.UI.Design.ControlDesigner.ViewControl%2A>屬性會傳回控制項的暫存副本。 不會保存暫存控制項的變更。  
  
 如果<xref:System.Web.UI.Design.ControlDesigner.UsePreviewControl%2A>屬性是`false`、<xref:System.Web.UI.Design.ControlDesigner.ViewControl%2A>屬性傳回的執行個體<xref:System.ComponentModel.Design.ComponentDesigner.Component%2A>控制項的屬性。 控制項的執行個體的變更會保存。  
  
 <xref:System.Web.UI.Design.SupportsPreviewControlAttribute.SupportsPreviewControl%2A>中設定<xref:System.Web.UI.Design.SupportsPreviewControlAttribute>物件用來設定的值<xref:System.Web.UI.Design.ControlDesigner.UsePreviewControl%2A>屬性。 因此，<xref:System.Web.UI.Design.SupportsPreviewControlAttribute.SupportsPreviewControl%2A>設定會決定所傳回的控制項類型<xref:System.Web.UI.Design.ControlDesigner.ViewControl%2A>屬性的基底中<xref:System.Web.UI.Design.ControlDesigner>類別。 如果<xref:System.Web.UI.Design.SupportsPreviewControlAttribute>控制項設計工具宣告中未指定<xref:System.Web.UI.Design.ControlDesigner>物件行為相當於指定<xref:System.Web.UI.Design.SupportsPreviewControlAttribute.SupportsPreviewControl%2A>屬性做為`false`。  
  
   
  
## Examples  
 下列程式碼範例示範如何將標示控制項設計工具與<xref:System.Web.UI.Design.SupportsPreviewControlAttribute>屬性。 程式碼範例衍生從 Web 伺服器控制項<xref:System.Web.UI.WebControls.Label>類別，並將控制項相關聯的自訂控制項設計工具的實作。 控制項設計工具類別，宣告會標示`SupportsPreviewControl`屬性設為`true`。 控制項的設計工具會覆寫<xref:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml%2A>方法，然後按一下 顯示<xref:System.Web.UI.WebControls.Label.Text%2A>以斜體表示在設計階段控制項的屬性。  
  
 [!code-csharp[System.Web.UI.Design.SupportsPreviewControlAttribute#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Design.SupportsPreviewControlAttribute/CS/supportspreviewdesigner.cs#1)]
 [!code-vb[System.Web.UI.Design.SupportsPreviewControlAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Design.SupportsPreviewControlAttribute/VB/supportspreviewdesigner.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.Design.SupportsPreviewControlAttribute" />
        <altmember cref="P:System.Web.UI.Design.ControlDesigner.UsePreviewControl" />
        <altmember cref="Overload:System.Web.UI.Design.ControlDesigner.GetViewRendering" />
        <altmember cref="T:System.Web.UI.Design.WebControls.PreviewControlDesigner" />
      </Docs>
    </Member>
    <Member MemberName="ViewControlCreated">
      <MemberSignature Language="C#" Value="public virtual bool ViewControlCreated { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ViewControlCreated" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ControlDesigner.ViewControlCreated" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ViewControlCreated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ViewControlCreated { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，指出是否已建立 <see langword="View" /> 控制項以在設計介面上顯示。</summary>
        <value>
          如果已建立控制項以在設計介面上檢視則為 <see langword="true" />，否則為 <see langword="false" />。</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.Design.ControlDesigner.UsePreviewControl" />
      </Docs>
    </Member>
    <Member MemberName="Visible">
      <MemberSignature Language="C#" Value="protected virtual bool Visible { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Visible" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ControlDesigner.Visible" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property Visible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool Visible { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得值，這個值表示控制項在設計階段是否為可見的。</summary>
        <value>
          所有情況下都是 <see langword="true" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>