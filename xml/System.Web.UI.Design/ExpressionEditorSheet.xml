<Type Name="ExpressionEditorSheet" FullName="System.Web.UI.Design.ExpressionEditorSheet">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="00a92c41d6071763aeacc5cf80675a148295e317" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30589392" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class ExpressionEditorSheet" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ExpressionEditorSheet extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.Design.ExpressionEditorSheet" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ExpressionEditorSheet" />
  <TypeSignature Language="C++ CLI" Value="public ref class ExpressionEditorSheet abstract" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>表示自訂運算式的設計階段編輯器工作表。 這個類別必須被繼承。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 自訂運算式編輯器工作表可讓開發人員在設計階段自訂運算式上設定屬性。 可以使用運算式的字串; 設定控制項屬性值運算式字串評估的運算式產生器的執行階段和設計階段運算式編輯器。  
  
 當您瀏覽<xref:System.Web.UI.Design.HtmlControlDesigner.Expressions%2A>屬性在設計階段屬性方格控制項的視覺化設計工具會顯示對話方塊，以設定控制項屬性提供值的運算式。 您可以選取清單運算式前置字元為基礎的運算式型別。 當您從清單中選取運算式前置字元時，視覺化設計工具會使用相關聯<xref:System.Web.UI.Design.ExpressionEditor>和<xref:System.Web.UI.Design.ExpressionEditorSheet>為該類型的運算式語法為基礎的評估，並將轉換的運算式字串物件。 視覺化設計工具會使用運算式編輯器工作表屬性提示輸入的一或多個字串結合成自訂運算式字串。  
  
 一般而言，若要在設計階段提供新的運算式型別，您定義的唯一運算式前置詞，並提供自訂<xref:System.Web.Compilation.ExpressionBuilder>和<xref:System.Web.UI.Design.ExpressionEditor>實作。 或者，您可以提供自訂<xref:System.Web.UI.Design.ExpressionEditorSheet>實作可定義用來構成運算式的內容。 若要使用運算式產生器和運算式編輯器關聯運算式前置字元，套用<xref:System.Web.Compilation.ExpressionEditorAttribute>屬性和<xref:System.Web.Compilation.ExpressionPrefixAttribute>屬性加入自訂<xref:System.Web.Configuration.ExpressionBuilder>類別，並接著設定 運算式產生器中的 運算式前置字元`expressionBuilders` Web 組態檔中的項目。  
  
 預設實作<xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A>方法傳回的基本編輯器工作表，來構成運算式中使用單一的輸入的字串。 自訂運算式編輯器，衍生自<xref:System.Web.UI.Design.ExpressionEditor>可以覆寫<xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A>方法以傳回自訂編輯器工作表的實作。 一般而言，自訂編輯器工作表包含用來建立運算式字串的多個屬性。 <xref:System.Web.UI.Design.ExpressionEditorSheet.GetExpression%2A>方法會傳回依據目前的運算式屬性產生的運算式字串。  
  
 例如，<xref:System.Web.UI.Design.ResourceExpressionEditor>類別衍生自<xref:System.Web.UI.Design.ExpressionEditor>類別，並提供用於評估和關聯的控制項屬性中的資源字串參考，在設計階段實作。 <xref:System.Web.Compilation.ResourceExpressionBuilder>類別是運算式前置詞相關聯`Resources`和<xref:System.Web.UI.Design.ResourceExpressionEditor>實作。 <xref:System.Web.UI.Design.ResourceExpressionEditor.GetExpressionEditorSheet%2A>方法會傳回<xref:System.Web.UI.Design.ResourceExpressionEditorSheet>，其定義的個別屬性，以形成資源參考運算式。  
  
 當您繼承自<xref:System.Web.UI.Design.ExpressionEditorSheet>類別，您必須覆寫下列成員：  
  
-   <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A>方法以傳回自訂編輯器工作表的實作。  
  
-   <xref:System.Web.UI.Design.ExpressionEditorSheet.%23ctor%2A>建構函式來實作您的運算式編輯器工作表實作的自訂初始化動作。  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>衍生的自訂運算式編輯器工作表，從<see cref="T:System.Web.UI.Design.ExpressionEditorSheet" />類別，如果您定義新的運算式類型的控制項屬性值，而且您想要建置的運算式字串根據多個運算式的屬性值。 在衍生的類別實作應該包含下列內容：  
  
-   每個相異值的運算式字串中，可以在設計階段設定的公用屬性。  
  
-   實作<see cref="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression" />form 編輯器工作表屬性值的自訂運算式字串的方法。  
  
-   （選擇性） 建構函式實作，以設定編輯器 中的初始值表內容。  
  
 相關聯的自訂運算式編輯器類別建立衍生的編輯器工作表中的執行個體<see cref="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" />方法，以設定控制項的屬性的目前運算式字串初始化該執行個體和視覺化設計工具會傳回執行個體。 視覺化設計工具可讓您設定工作表屬性的運算式，然後呼叫<see cref="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression" />方法，以形成輸入的運算式的工作表屬性值的運算式字串。</para>
    </block>
    <altmember cref="T:System.Web.UI.Design.ExpressionEditor" />
    <altmember cref="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" />
    <altmember cref="T:System.Web.UI.Design.ResourceExpressionEditorSheet" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ExpressionEditorSheet (IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ExpressionEditorSheet.#ctor(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (serviceProvider As IServiceProvider)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ExpressionEditorSheet(IServiceProvider ^ serviceProvider);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="serviceProvider">服務提供者實作，由設計工具主應用程式 (Designer Host) 提供，可以用來取得額外的設計階段服務。</param>
        <summary>初始化 <see cref="T:System.Web.UI.Design.ExpressionEditorSheet" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 因為<xref:System.Web.UI.Design.ExpressionEditorSheet>類別是抽象的您無法建立的執行個體<xref:System.Web.UI.Design.ExpressionEditorSheet>直接使用<xref:System.Web.UI.Design.ExpressionEditorSheet.%23ctor%2A>建構函式。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>衍生自<see cref="T:System.Web.UI.Design.ExpressionEditorSheet" />類別，覆寫<see cref="M:System.Web.UI.Design.ExpressionEditorSheet.#ctor(System.IServiceProvider)" />建構函式來實作您的運算式編輯器工作表實作的自訂初始化動作。  
  
 例如，自訂運算式編輯器表類別中實作其他的運算式屬性可以定義的預設值運算式中的屬性<see cref="M:System.Web.UI.Design.ExpressionEditorSheet.#ctor(System.IServiceProvider)" />建構函式。 自訂運算式編輯器工作表類別可以定義額外的公用建構函式多載，可以使用輸入的參數值來設定運算式屬性的初始值。</para>
        </block>
        <altmember cref="Overload:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor" />
        <altmember cref="T:System.Web.UI.Design.ExpressionEditor" />
        <altmember cref="T:System.Web.UI.Design.ResourceExpressionEditorSheet" />
      </Docs>
    </Member>
    <Member MemberName="GetExpression">
      <MemberSignature Language="C#" Value="public abstract string GetExpression ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetExpression() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetExpression () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::String ^ GetExpression();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>在衍生類別中覆寫時，傳回由運算式編輯器工作表屬性值構成的運算式字串。</summary>
        <returns>目前屬性值的自訂運算式字串。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 自訂運算式編輯器工作表包含多個運算式屬性，結合成一個運算式字串的設計階段設定。 可以使用運算式的字串; 設定控制項屬性值運算式產生器會在執行階段評估的運算式字串。  
  
 <xref:System.Web.UI.Design.ExpressionEditorSheet.GetExpression%2A>方法會從目前的運算式內容傳回內建的運算式字串。 視覺化設計工具可讓您設定工作表屬性的運算式，然後呼叫<xref:System.Web.UI.Design.ExpressionEditorSheet.GetExpression%2A>方法來取得運算式的字串，並設定控制項屬性值。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>衍生的自訂運算式編輯器工作表，從<see cref="T:System.Web.UI.Design.ExpressionEditorSheet" />類別，如果您定義新的運算式類型的控制項屬性值，而且您想要建置的運算式字串根據多個運算式的屬性值。 在衍生的類別實作應該包含下列內容：  
  
-   每個相異值的運算式字串中，可以在設計階段設定的公用屬性。  
  
-   實作<see cref="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression" />form 編輯器工作表屬性值的自訂運算式字串的方法。  
  
-   （選擇性） 建構函式實作，以設定編輯器 中的初始值表內容。  
  
 相關聯的自訂運算式編輯器類別建立衍生的編輯器工作表中的執行個體<see cref="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" />方法，設定控制項的屬性的目前運算式字串，初始化該執行個體，然後傳回視覺效果的 執行個體設計工具。 視覺化設計工具可讓您設定工作表屬性的運算式，然後呼叫<see cref="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression" />方法，以形成輸入的運算式的工作表屬性值的運算式字串。</para>
        </block>
        <altmember cref="T:System.Web.UI.Design.ExpressionEditor" />
        <altmember cref="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" />
        <altmember cref="T:System.Web.UI.Design.ResourceExpressionEditorSheet" />
      </Docs>
    </Member>
    <Member MemberName="IsValid">
      <MemberSignature Language="C#" Value="public virtual bool IsValid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsValid" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ExpressionEditorSheet.IsValid" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsValid As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsValid { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得值，這個值表示運算式字串是否有效。</summary>
        <value>
          如果運算式字串有效則為 <see langword="true" />，否則為 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個基底實作 (Implementation) 永遠傳回 `true`。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.Design.ExpressionEditor" />
        <altmember cref="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" />
        <altmember cref="T:System.Web.UI.Design.ResourceExpressionEditorSheet" />
      </Docs>
    </Member>
    <Member MemberName="ServiceProvider">
      <MemberSignature Language="C#" Value="public IServiceProvider ServiceProvider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IServiceProvider ServiceProvider" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ExpressionEditorSheet.ServiceProvider" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ServiceProvider As IServiceProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IServiceProvider ^ ServiceProvider { IServiceProvider ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IServiceProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得由運算式編輯器工作表使用的服務提供者實作。</summary>
        <value>
          <see cref="T:System.IServiceProvider" />，通常由設計主應用程式提供，可用於取得其他的設計階段服務。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.Design.ExpressionEditorSheet.%23ctor%2A>建構函式來設定<xref:System.Web.UI.Design.ExpressionEditorSheet.ServiceProvider%2A>實作自訂運算式編輯器工作表。  
  
 <xref:System.Web.UI.Design.ExpressionEditorSheet.ServiceProvider%2A>屬性可以用來存取設計工具主應用程式所提供的服務。 例如，呼叫<xref:System.IServiceProvider.GetService%2A>方法<xref:System.Web.UI.Design.IWebApplication>介面，以存取專案項目、 文件或提供視覺化設計工具的組態檔案詳細資料。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" />
        <altmember cref="M:System.Web.UI.Design.ExpressionEditorSheet.#ctor(System.IServiceProvider)" />
      </Docs>
    </Member>
  </Members>
</Type>