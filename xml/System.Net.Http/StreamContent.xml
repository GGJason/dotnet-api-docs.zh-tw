<Type Name="StreamContent" FullName="System.Net.Http.StreamContent">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0d1d48bc3fda43cf27223b86b5fde72690201412" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36552292" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class StreamContent : System.Net.Http.HttpContent" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit StreamContent extends System.Net.Http.HttpContent" />
  <TypeSignature Language="DocId" Value="T:System.Net.Http.StreamContent" />
  <TypeSignature Language="VB.NET" Value="Public Class StreamContent&#xA;Inherits HttpContent" />
  <TypeSignature Language="C++ CLI" Value="public ref class StreamContent : System::Net::Http::HttpContent" />
  <TypeSignature Language="F#" Value="type StreamContent = class&#xA;    inherit HttpContent" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Http</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Net.Http.HttpContent</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="c91d9-101">提供以資料流為基礎的 HTTP 內容。</span>
      <span class="sxs-lookup">
        <span data-stu-id="c91d9-101">Provides HTTP content based on a stream.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c91d9-102">建立 <see cref="T:System.Net.Http.StreamContent" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c91d9-102">Creates a new instance of the <see cref="T:System.Net.Http.StreamContent" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StreamContent (System.IO.Stream content);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream content) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.StreamContent.#ctor(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (content As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StreamContent(System::IO::Stream ^ content);" />
      <MemberSignature Language="F#" Value="new System.Net.Http.StreamContent : System.IO.Stream -&gt; System.Net.Http.StreamContent" Usage="new System.Net.Http.StreamContent content" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="content" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="content">
          <span data-ttu-id="c91d9-103">用來初始化 <see cref="T:System.Net.Http.StreamContent" /> 的內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c91d9-103">The content used to initialize the <see cref="T:System.Net.Http.StreamContent" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c91d9-104">建立 <see cref="T:System.Net.Http.StreamContent" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c91d9-104">Creates a new instance of the <see cref="T:System.Net.Http.StreamContent" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StreamContent (System.IO.Stream content, int bufferSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream content, int32 bufferSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.StreamContent.#ctor(System.IO.Stream,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (content As Stream, bufferSize As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StreamContent(System::IO::Stream ^ content, int bufferSize);" />
      <MemberSignature Language="F#" Value="new System.Net.Http.StreamContent : System.IO.Stream * int -&gt; System.Net.Http.StreamContent" Usage="new System.Net.Http.StreamContent (content, bufferSize)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="content" Type="System.IO.Stream" />
        <Parameter Name="bufferSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="content">
          <span data-ttu-id="c91d9-105">用來初始化 <see cref="T:System.Net.Http.StreamContent" /> 的內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c91d9-105">The content used to initialize the <see cref="T:System.Net.Http.StreamContent" />.</span>
          </span>
        </param>
        <param name="bufferSize">
          <span data-ttu-id="c91d9-106">
            <see cref="T:System.Net.Http.StreamContent" /> 的緩衝區大小，以位元組為單位。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c91d9-106">The size, in bytes, of the buffer for the <see cref="T:System.Net.Http.StreamContent" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c91d9-107">建立 <see cref="T:System.Net.Http.StreamContent" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c91d9-107">Creates a new instance of the <see cref="T:System.Net.Http.StreamContent" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c91d9-108">
            <paramref name="content" /> 以前是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c91d9-108">The <paramref name="content" /> was <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="c91d9-109">
            <paramref name="bufferSize" /> 小於或等於零值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c91d9-109">The <paramref name="bufferSize" /> was less than or equal to zero.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateContentReadStreamAsync">
      <MemberSignature Language="C#" Value="protected override System.Threading.Tasks.Task&lt;System.IO.Stream&gt; CreateContentReadStreamAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Threading.Tasks.Task`1&lt;class System.IO.Stream&gt; CreateContentReadStreamAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.StreamContent.CreateContentReadStreamAsync" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateContentReadStreamAsync () As Task(Of Stream)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Threading::Tasks::Task&lt;System::IO::Stream ^&gt; ^ CreateContentReadStreamAsync();" />
      <MemberSignature Language="F#" Value="override this.CreateContentReadStreamAsync : unit -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;" Usage="streamContent.CreateContentReadStreamAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.IO.Stream&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c91d9-110">以非同步作業方式將 HTTP 資料流內容寫入記憶體資料流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c91d9-110">Write the HTTP stream content to a memory stream as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c91d9-111">工作物件，表示非同步作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c91d9-111">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c91d9-112">這項作業不會封鎖。</span><span class="sxs-lookup"><span data-stu-id="c91d9-112">This operation will not block.</span></span> <span data-ttu-id="c91d9-113">傳回<xref:System.Threading.Tasks.Task%601>物件的所有內容寫入至記憶體資料流之後，會完成。</span><span class="sxs-lookup"><span data-stu-id="c91d9-113">The returned <xref:System.Threading.Tasks.Task%601> object will complete after all of the content has been written to the memory stream.</span></span>  
  
 <span data-ttu-id="c91d9-114"><xref:System.Net.Http.StreamContent.CreateContentReadStreamAsync%2A>方法緩衝到記憶體資料流內容。</span><span class="sxs-lookup"><span data-stu-id="c91d9-114">The <xref:System.Net.Http.StreamContent.CreateContentReadStreamAsync%2A> method buffers the content to a memory stream.</span></span> <span data-ttu-id="c91d9-115">在衍生的類別可以覆寫此行為，如果沒有更好的方法來擷取為資料流的內容。</span><span class="sxs-lookup"><span data-stu-id="c91d9-115">Derived classes can override this behavior if there is a better way to retrieve the content as stream.</span></span> <span data-ttu-id="c91d9-116">例如，位元組陣列或字串，可以使用更有效率的方法方式，例如自動換行的唯讀<xref:System.IO.MemoryStream>位元組或字串周圍。)</span><span class="sxs-lookup"><span data-stu-id="c91d9-116">For example, a byte array or a string could use a more efficient method way such as wrapping a read-only <xref:System.IO.MemoryStream> around the bytes or string.)</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.StreamContent.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="streamContent.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="c91d9-117">
            <see langword="true" /> 表示會同時釋放 Managed 和 Unmanaged 資源；<see langword="false" /> 則表示只釋放 Unmanaged 資源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c91d9-117">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to releases only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c91d9-118">釋放 <see cref="T:System.Net.Http.StreamContent" /> 所使用的 Unmanaged 資源，並選擇性處置 Managed 資源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c91d9-118">Releases the unmanaged resources used by the <see cref="T:System.Net.Http.StreamContent" /> and optionally disposes of the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c91d9-119">這個方法會呼叫公用`Dispose()`方法和<xref:System.Object.Finalize%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="c91d9-119">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="c91d9-120">`Dispose()` 叫用受保護`Dispose(Boolean)`方法`disposing`參數設定為`true`。</span><span class="sxs-lookup"><span data-stu-id="c91d9-120">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="c91d9-121"><xref:System.Object.Finalize%2A> 叫用`Dispose`與`disposing`設`false`。當`disposing`參數是`true`，這個方法的任何 managed 物件所持有的資源全部釋出這個<xref:System.Net.Http.StreamContent>參考。</span><span class="sxs-lookup"><span data-stu-id="c91d9-121"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Net.Http.StreamContent> references.</span></span> <span data-ttu-id="c91d9-122">這個方法會叫用每個參考物件的 `Dispose()` 方法。</span><span class="sxs-lookup"><span data-stu-id="c91d9-122">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SerializeToStreamAsync">
      <MemberSignature Language="C#" Value="protected internal override System.Threading.Tasks.Task SerializeToStreamAsync (System.IO.Stream stream, System.Net.TransportContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance class System.Threading.Tasks.Task SerializeToStreamAsync(class System.IO.Stream stream, class System.Net.TransportContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.StreamContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Threading::Tasks::Task ^ SerializeToStreamAsync(System::IO::Stream ^ stream, System::Net::TransportContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.SerializeToStreamAsync : System.IO.Stream * System.Net.TransportContext -&gt; System.Threading.Tasks.Task" Usage="streamContent.SerializeToStreamAsync (stream, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="context" Type="System.Net.TransportContext" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="c91d9-123">目標資料流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c91d9-123">The target stream.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="c91d9-124">傳輸的相關資訊 (例如通道繫結權杖)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c91d9-124">Information about the transport (channel binding token, for example).</span>
          </span>
          <span data-ttu-id="c91d9-125">此參數可以是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c91d9-125">This parameter may be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c91d9-126">以非同步作業方式將 HTTP 內容序列化為資料流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c91d9-126">Serialize the HTTP content to a stream as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c91d9-127">工作物件，表示非同步作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c91d9-127">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c91d9-128">這項作業不會封鎖。</span><span class="sxs-lookup"><span data-stu-id="c91d9-128">This operation will not block.</span></span> <span data-ttu-id="c91d9-129">傳回<xref:System.Threading.Tasks.Task>之後的所有內容已序列化至目標資料流，物件會完成。</span><span class="sxs-lookup"><span data-stu-id="c91d9-129">The returned <xref:System.Threading.Tasks.Task> object will complete after all of the content has been serialized to the target stream.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryComputeLength">
      <MemberSignature Language="C#" Value="protected internal override bool TryComputeLength (out long length);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance bool TryComputeLength([out] int64&amp; length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.StreamContent.TryComputeLength(System.Int64@)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function TryComputeLength (ByRef length As Long) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override bool TryComputeLength([Runtime::InteropServices::Out] long % length);" />
      <MemberSignature Language="F#" Value="override this.TryComputeLength :  -&gt; bool" Usage="streamContent.TryComputeLength length" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="length" Type="System.Int64&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="length">
          <span data-ttu-id="c91d9-130">資料流內容的位元組長度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c91d9-130">The length in bytes of the stream content.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c91d9-131">判斷資料流內容是否有有效的位元組長度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c91d9-131">Determines whether the stream content has a valid length in bytes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c91d9-132">若 <paramref name="length" /> 為有效的長度則為 <see langword="true" />；否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c91d9-132">
              <see langword="true" /> if <paramref name="length" /> is a valid length; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c91d9-133"><xref:System.Net.Http.StreamContent.TryComputeLength%2A>方法可讓 HTTP 串流處理內容來計算內容的長度。</span><span class="sxs-lookup"><span data-stu-id="c91d9-133">The <xref:System.Net.Http.StreamContent.TryComputeLength%2A> method gives HTTP stream content the ability to calculate the content length.</span></span> <span data-ttu-id="c91d9-134">這是適用於內容的類型，也就是能夠輕易地計算內容的長度。</span><span class="sxs-lookup"><span data-stu-id="c91d9-134">This is useful for content types which are able to easily calculate the content length.</span></span> <span data-ttu-id="c91d9-135">如果計算內容的長度不可能或昂貴 （而需要讓系統用來緩衝整個內容序列化會其中可能高度耗費資源，或需要配置大量記憶體系統），這個方法可以傳回`false`。</span><span class="sxs-lookup"><span data-stu-id="c91d9-135">If computing the content length is not possible or expensive (would require the system to buffer the whole content where the serialization would be expensive or require the system to allocate a lot of memory), this method can return `false`.</span></span> <span data-ttu-id="c91d9-136">如果此方法傳回`false`，這表示，需要區塊的傳輸或內容必須在傳送到伺服器之前會緩衝處理。</span><span class="sxs-lookup"><span data-stu-id="c91d9-136">If this method returns `false`, this implies that either chunked transfer is needed or the content must get buffered before being sent to the server.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>