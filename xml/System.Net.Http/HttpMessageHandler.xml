<Type Name="HttpMessageHandler" FullName="System.Net.Http.HttpMessageHandler">
  <Metadata><Meta Name="ms.openlocfilehash" Value="81fe3d0018ffccf244050603dd56fdbed3e6da56" /><Meta Name="ms.sourcegitcommit" Value="0d6aa6694f157a08fe52cd25b4d9d3dcf913e812" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="10/12/2018" /><Meta Name="ms.locfileid" Value="49139112" /></Metadata><TypeSignature Language="C#" Value="public abstract class HttpMessageHandler : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit HttpMessageHandler extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Net.Http.HttpMessageHandler" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class HttpMessageHandler&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpMessageHandler abstract : IDisposable" />
  <TypeSignature Language="F#" Value="type HttpMessageHandler = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Http</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="f8501-101">HTTP 訊息處理常式的基底類型。</span><span class="sxs-lookup"><span data-stu-id="f8501-101">A base type for HTTP message handlers.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8501-102">有各種可用的 HTTP 訊息處理。</span><span class="sxs-lookup"><span data-stu-id="f8501-102">There are various HTTP message handles that can be used.</span></span> <span data-ttu-id="f8501-103">這些包括下列項目。</span><span class="sxs-lookup"><span data-stu-id="f8501-103">These include the following.</span></span>  
  
1.  <span data-ttu-id="f8501-104"><xref:System.Net.Http.DelegatingHandler> -用來插入處理常式鏈結中的處理常式的類別。</span><span class="sxs-lookup"><span data-stu-id="f8501-104"><xref:System.Net.Http.DelegatingHandler> - A class used to plug a handler into a handler chain.</span></span>  
  
2.  <span data-ttu-id="f8501-105"><xref:System.Net.Http.HttpMessageHandler> -簡單類別衍生自支援大部分的應用程式的最常見的需求。</span><span class="sxs-lookup"><span data-stu-id="f8501-105"><xref:System.Net.Http.HttpMessageHandler> - A simple class to derive from that supports the most common requirements for most applications.</span></span>  
  
3.  <span data-ttu-id="f8501-106"><xref:System.Net.Http.HttpClientHandler> -A 底部是什麼在處理 HTTP 傳輸作業的處理常式鏈結的運作方式的類別。</span><span class="sxs-lookup"><span data-stu-id="f8501-106"><xref:System.Net.Http.HttpClientHandler> - A class that operates at the bottom of the handler chain that actually handles the HTTP transport operations.</span></span>  
  
4.  <span data-ttu-id="f8501-107"><xref:System.Net.Http.WebRequestHandler> -特定類別，操作處理特有的選項使用的 HTTP 傳輸作業的處理常式鏈結類別底部<xref:System.Net.HttpWebRequest?displayProperty=nameWithType>物件。</span><span class="sxs-lookup"><span data-stu-id="f8501-107"><xref:System.Net.Http.WebRequestHandler> - A specialty class that operates at the bottom of the handler chain class that handles HTTP transport operations with options that are specific to the <xref:System.Net.HttpWebRequest?displayProperty=nameWithType> object.</span></span>  
  
 <span data-ttu-id="f8501-108">如果開發人員衍生類別<xref:System.Net.Http.HttpMessageHandler>，並覆寫<xref:System.Net.Http.HttpMessageHandler.SendAsync%2A>方法，他們必須先確定<xref:System.Net.Http.HttpMessageHandler.SendAsync%2A>可以由不同的執行緒同時呼叫。</span><span class="sxs-lookup"><span data-stu-id="f8501-108">If developers derive classes from <xref:System.Net.Http.HttpMessageHandler> and override the <xref:System.Net.Http.HttpMessageHandler.SendAsync%2A> method, they must make sure that <xref:System.Net.Http.HttpMessageHandler.SendAsync%2A> can get called concurrently by different threads.</span></span>  
  
 <span data-ttu-id="f8501-109">這是因為方法上所需<xref:System.Net.Http.HttpClient>可以同時呼叫，而且需要的執行緒安全性保證。</span><span class="sxs-lookup"><span data-stu-id="f8501-109">This is necessary since methods on <xref:System.Net.Http.HttpClient> can be called concurrently and need a guarantee of thread safety.</span></span> <span data-ttu-id="f8501-110">因此，如果處理常式指派給<xref:System.Net.Http.HttpClient>執行個體，請<xref:System.Net.Http.HttpMessageHandler.SendAsync%2A>處理常式的方法可能會同時呼叫<xref:System.Net.Http.HttpClient>執行個體，且必須是安全執行緒。</span><span class="sxs-lookup"><span data-stu-id="f8501-110">So if a handler is assigned to an <xref:System.Net.Http.HttpClient> instance, the <xref:System.Net.Http.HttpMessageHandler.SendAsync%2A> method of the handler may get called concurrently by the <xref:System.Net.Http.HttpClient> instance and needs to be thread safe.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected HttpMessageHandler ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpMessageHandler.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; HttpMessageHandler();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f8501-111">初始化 <see cref="T:System.Net.Http.HttpMessageHandler" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="f8501-111">Initializes a new instance of the <see cref="T:System.Net.Http.HttpMessageHandler" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f8501-112">釋放 <see cref="T:System.Net.Http.HttpMessageHandler" /> 所使用的 Unmanaged 資源，並選擇性處置 Managed 資源。</span><span class="sxs-lookup"><span data-stu-id="f8501-112">Releases the unmanaged resources used by the <see cref="T:System.Net.Http.HttpMessageHandler" /> and optionally disposes of the managed resources.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpMessageHandler.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="httpMessageHandler.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f8501-113">釋放 Unmanaged 資源，並處置 <see cref="T:System.Net.Http.HttpMessageHandler" /> 所使用的 Managed 資源。</span><span class="sxs-lookup"><span data-stu-id="f8501-113">Releases the unmanaged resources and disposes of the managed resources used by the <see cref="T:System.Net.Http.HttpMessageHandler" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpMessageHandler.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="httpMessageHandler.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="f8501-114"><see langword="true" /> 表示會同時釋放 Managed 和 Unmanaged 資源；<see langword="false" /> 則表示只釋放 Unmanaged 資源。</span><span class="sxs-lookup"><span data-stu-id="f8501-114"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to releases only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="f8501-115">釋放 <see cref="T:System.Net.Http.HttpMessageHandler" /> 所使用的 Unmanaged 資源，並選擇性處置 Managed 資源。</span><span class="sxs-lookup"><span data-stu-id="f8501-115">Releases the unmanaged resources used by the <see cref="T:System.Net.Http.HttpMessageHandler" /> and optionally disposes of the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8501-116">這個方法會呼叫公用`Dispose()`方法和<xref:System.Object.Finalize%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="f8501-116">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="f8501-117">`Dispose()` 叫用受保護`Dispose(Boolean)`方法`disposing`參數設為`true`。</span><span class="sxs-lookup"><span data-stu-id="f8501-117">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="f8501-118"><xref:System.Object.Finalize%2A> 叫用`Dispose`具有`disposing`設定為`false`。當`disposing`參數是`true`，這個方法由任何 managed 物件持有的資源全部釋出這個<xref:System.Net.Http.HttpMessageHandler>參考。</span><span class="sxs-lookup"><span data-stu-id="f8501-118"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Net.Http.HttpMessageHandler> references.</span></span> <span data-ttu-id="f8501-119">這個方法會叫用每個參考物件的 `Dispose()` 方法。</span><span class="sxs-lookup"><span data-stu-id="f8501-119">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="protected internal abstract System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; SendAsync (System.Net.Http.HttpRequestMessage request, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; SendAsync(class System.Net.Http.HttpRequestMessage request, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpMessageHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ SendAsync(System::Net::Http::HttpRequestMessage ^ request, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="abstract member SendAsync : System.Net.Http.HttpRequestMessage * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;" Usage="httpMessageHandler.SendAsync (request, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Net.Http.HttpRequestMessage" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="request"><span data-ttu-id="f8501-120">要傳送的 HTTP 要求訊息。</span><span class="sxs-lookup"><span data-stu-id="f8501-120">The HTTP request message to send.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="f8501-121">用於取消作業的取消語彙基元。</span><span class="sxs-lookup"><span data-stu-id="f8501-121">The cancellation token to cancel operation.</span></span></param>
        <summary><span data-ttu-id="f8501-122">以非同步作業的方式，傳送 HTTP 要求。</span><span class="sxs-lookup"><span data-stu-id="f8501-122">Send an HTTP request as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="f8501-123">工作物件，表示非同步作業。</span><span class="sxs-lookup"><span data-stu-id="f8501-123">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8501-124">這項作業不會封鎖。</span><span class="sxs-lookup"><span data-stu-id="f8501-124">This operation will not block.</span></span> <span data-ttu-id="f8501-125">傳回<xref:System.Threading.Tasks.Task%601>物件會在讀取包括內容的整個回應之後完成。</span><span class="sxs-lookup"><span data-stu-id="f8501-125">The returned <xref:System.Threading.Tasks.Task%601> object will complete once the entire response including content is read.</span></span>  
  
 <span data-ttu-id="f8501-126"><xref:System.Net.Http.HttpMessageHandler.SendAsync%2A>方法主要供系統。</span><span class="sxs-lookup"><span data-stu-id="f8501-126">The <xref:System.Net.Http.HttpMessageHandler.SendAsync%2A> method is used primarily by the system.</span></span> <span data-ttu-id="f8501-127">這個方法會呼叫的其中一個系統<xref:System.Net.Http.HttpClient.SendAsync%2A?displayProperty=nameWithType>方法呼叫。</span><span class="sxs-lookup"><span data-stu-id="f8501-127">This method is called by the system one of the  <xref:System.Net.Http.HttpClient.SendAsync%2A?displayProperty=nameWithType> methods is called.</span></span> <span data-ttu-id="f8501-128">大部分的應用程式永遠不會呼叫這個方法。</span><span class="sxs-lookup"><span data-stu-id="f8501-128">Most apps will never call this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f8501-129"><paramref name="request" /> 以前是 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="f8501-129">The <paramref name="request" /> was <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>