<Type Name="MultipartContent" FullName="System.Net.Http.MultipartContent">
  <Metadata><Meta Name="ms.openlocfilehash" Value="960938c22efcb0440bb6ce401f33933f4dd17ec6" /><Meta Name="ms.sourcegitcommit" Value="723b8a6d92667ba86fcda96190bad3b4a03283b3" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="11/09/2018" /><Meta Name="ms.locfileid" Value="51318317" /></Metadata><TypeSignature Language="C#" Value="public class MultipartContent : System.Net.Http.HttpContent, System.Collections.Generic.IEnumerable&lt;System.Net.Http.HttpContent&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MultipartContent extends System.Net.Http.HttpContent implements class System.Collections.Generic.IEnumerable`1&lt;class System.Net.Http.HttpContent&gt;, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Net.Http.MultipartContent" />
  <TypeSignature Language="VB.NET" Value="Public Class MultipartContent&#xA;Inherits HttpContent&#xA;Implements IEnumerable(Of HttpContent)" />
  <TypeSignature Language="C++ CLI" Value="public ref class MultipartContent : System::Net::Http::HttpContent, System::Collections::Generic::IEnumerable&lt;System::Net::Http::HttpContent ^&gt;" />
  <TypeSignature Language="F#" Value="type MultipartContent = class&#xA;    inherit HttpContent&#xA;    interface seq&lt;HttpContent&gt;&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Http</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Net.Http.HttpContent</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;System.Net.Http.HttpContent&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="31c7f-101">提供使用 multipart/\* 內容類型規格進行序列化之 <see cref="T:System.Net.Http.HttpContent" /> 物件的集合。</span><span class="sxs-lookup"><span data-stu-id="31c7f-101">Provides a collection of <see cref="T:System.Net.Http.HttpContent" /> objects that get serialized using the multipart/\* content type specification.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="31c7f-102">建立 <see cref="T:System.Net.Http.MultipartContent" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="31c7f-102">Creates a new instance of the <see cref="T:System.Net.Http.MultipartContent" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MultipartContent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.MultipartContent.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MultipartContent();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="31c7f-103">建立 <see cref="T:System.Net.Http.MultipartContent" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="31c7f-103">Creates a new instance of the <see cref="T:System.Net.Http.MultipartContent" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MultipartContent (string subtype);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string subtype) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.MultipartContent.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (subtype As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MultipartContent(System::String ^ subtype);" />
      <MemberSignature Language="F#" Value="new System.Net.Http.MultipartContent : string -&gt; System.Net.Http.MultipartContent" Usage="new System.Net.Http.MultipartContent subtype" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="subtype" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="subtype"><span data-ttu-id="31c7f-104">多部分內容的子類型。</span><span class="sxs-lookup"><span data-stu-id="31c7f-104">The subtype of the multipart content.</span></span></param>
        <summary><span data-ttu-id="31c7f-105">建立 <see cref="T:System.Net.Http.MultipartContent" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="31c7f-105">Creates a new instance of the <see cref="T:System.Net.Http.MultipartContent" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="31c7f-106"><paramref name="subtype" /> 曾為 <see langword="null" />，或只包含空白字元。</span><span class="sxs-lookup"><span data-stu-id="31c7f-106">The <paramref name="subtype" /> was <see langword="null" /> or contains only white space characters.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MultipartContent (string subtype, string boundary);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string subtype, string boundary) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.MultipartContent.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (subtype As String, boundary As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MultipartContent(System::String ^ subtype, System::String ^ boundary);" />
      <MemberSignature Language="F#" Value="new System.Net.Http.MultipartContent : string * string -&gt; System.Net.Http.MultipartContent" Usage="new System.Net.Http.MultipartContent (subtype, boundary)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="subtype" Type="System.String" />
        <Parameter Name="boundary" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="subtype"><span data-ttu-id="31c7f-107">多部分內容的子類型。</span><span class="sxs-lookup"><span data-stu-id="31c7f-107">The subtype of the multipart content.</span></span></param>
        <param name="boundary"><span data-ttu-id="31c7f-108">多部分內容的界限字串。</span><span class="sxs-lookup"><span data-stu-id="31c7f-108">The boundary string for the multipart content.</span></span></param>
        <summary><span data-ttu-id="31c7f-109">建立 <see cref="T:System.Net.Http.MultipartContent" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="31c7f-109">Creates a new instance of the <see cref="T:System.Net.Http.MultipartContent" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="31c7f-110"><paramref name="subtype" /> 曾為 <see langword="null" /> 或空字串。</span><span class="sxs-lookup"><span data-stu-id="31c7f-110">The <paramref name="subtype" /> was <see langword="null" /> or an empty string.</span></span>  
  
<span data-ttu-id="31c7f-111"><paramref name="boundary" /> 曾為 <see langword="null" />，或只包含空白字元。</span><span class="sxs-lookup"><span data-stu-id="31c7f-111">The <paramref name="boundary" /> was <see langword="null" /> or contains only white space characters.</span></span>  
  
<span data-ttu-id="31c7f-112">-或-</span><span class="sxs-lookup"><span data-stu-id="31c7f-112">-or-</span></span> 
<span data-ttu-id="31c7f-113"><paramref name="boundary" /> 結尾為空格字元。</span><span class="sxs-lookup"><span data-stu-id="31c7f-113">The <paramref name="boundary" /> ends with a space character.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="31c7f-114"><paramref name="boundary" /> 的長度曾大於 70。</span><span class="sxs-lookup"><span data-stu-id="31c7f-114">The length of the <paramref name="boundary" /> was greater than 70.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual void Add (System.Net.Http.HttpContent content);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(class System.Net.Http.HttpContent content) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.MultipartContent.Add(System.Net.Http.HttpContent)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Add (content As HttpContent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Add(System::Net::Http::HttpContent ^ content);" />
      <MemberSignature Language="F#" Value="abstract member Add : System.Net.Http.HttpContent -&gt; unit&#xA;override this.Add : System.Net.Http.HttpContent -&gt; unit" Usage="multipartContent.Add content" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="System.Net.Http.HttpContent" />
      </Parameters>
      <Docs>
        <param name="content"><span data-ttu-id="31c7f-115">要新增至集合中的 HTTP 內容。</span><span class="sxs-lookup"><span data-stu-id="31c7f-115">The HTTP content to add to the collection.</span></span></param>
        <summary><span data-ttu-id="31c7f-116">將多重部分 HTTP 內容加入至使用 multipart/\* 內容類型規格進行序列化之 <see cref="T:System.Net.Http.HttpContent" /> 物件的集合。</span><span class="sxs-lookup"><span data-stu-id="31c7f-116">Add multipart HTTP content to a collection of <see cref="T:System.Net.Http.HttpContent" /> objects that get serialized using the multipart/\* content type specification.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="31c7f-117"><paramref name="content" /> 以前是 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="31c7f-117">The <paramref name="content" /> was <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.MultipartContent.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="multipartContent.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="31c7f-118"><see langword="true" /> 表示會同時釋放 Managed 和 Unmanaged 資源；<see langword="false" /> 則表示只釋放 Unmanaged 資源。</span><span class="sxs-lookup"><span data-stu-id="31c7f-118"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to releases only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="31c7f-119">釋放 <see cref="T:System.Net.Http.MultipartContent" /> 所使用的 Unmanaged 資源，並選擇性處置 Managed 資源。</span><span class="sxs-lookup"><span data-stu-id="31c7f-119">Releases the unmanaged resources used by the <see cref="T:System.Net.Http.MultipartContent" /> and optionally disposes of the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31c7f-120">這個方法會呼叫公用`Dispose()`方法和<xref:System.Object.Finalize%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="31c7f-120">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="31c7f-121">`Dispose()` 叫用受保護`Dispose(Boolean)`方法`disposing`參數設為`true`。</span><span class="sxs-lookup"><span data-stu-id="31c7f-121">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="31c7f-122"><xref:System.Object.Finalize%2A> 叫用`Dispose`具有`disposing`設定為`false`。當`disposing`參數是`true`，這個方法由任何 managed 物件持有的資源全部釋出這個<xref:System.Net.Http.MultipartContent>參考。</span><span class="sxs-lookup"><span data-stu-id="31c7f-122"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Net.Http.MultipartContent> references.</span></span> <span data-ttu-id="31c7f-123">這個方法會叫用每個參考物件的 `Dispose()` 方法。</span><span class="sxs-lookup"><span data-stu-id="31c7f-123">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerator&lt;System.Net.Http.HttpContent&gt; GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;class System.Net.Http.HttpContent&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.MultipartContent.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator(Of HttpContent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerator&lt;System::Net::Http::HttpContent ^&gt; ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;System.Net.Http.HttpContent&gt;&#xA;override this.GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;System.Net.Http.HttpContent&gt;" Usage="multipartContent.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.Net.Http.HttpContent&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="31c7f-124">傳回列舉程式，以逐一查看使用 multipart 內容類型規格進行序列化之 <see cref="T:System.Net.Http.HttpContent" /> 物件的集合。</span><span class="sxs-lookup"><span data-stu-id="31c7f-124">Returns an enumerator that iterates through the collection of <see cref="T:System.Net.Http.HttpContent" /> objects that get serialized using the multipart/\* content type specification..</span></span></summary>
        <returns><span data-ttu-id="31c7f-125">可用於逐一查看集合的物件。</span><span class="sxs-lookup"><span data-stu-id="31c7f-125">An object that can be used to iterate through the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31c7f-126">Foreach 陳述式 （適用於每個 Visual Basic 中） 的 C# 語言會隱藏列舉值的複雜度。</span><span class="sxs-lookup"><span data-stu-id="31c7f-126">The foreach statement of the C# language (For Each in Visual Basic) hides the complexity of the enumerators.</span></span> <span data-ttu-id="31c7f-127">因此，foreach 會建議使用，而不要直接操作列舉值。</span><span class="sxs-lookup"><span data-stu-id="31c7f-127">Therefore, using foreach is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="31c7f-128">列舉程式可以用來讀取集合中的資料，但是無法用來修改基礎集合。</span><span class="sxs-lookup"><span data-stu-id="31c7f-128">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="31c7f-129">一開始，列舉程式位在集合中的第一個項目之前。</span><span class="sxs-lookup"><span data-stu-id="31c7f-129">Initially, the enumerator is positioned before the first element in the collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SerializeToStreamAsync">
      <MemberSignature Language="C#" Value="protected internal override System.Threading.Tasks.Task SerializeToStreamAsync (System.IO.Stream stream, System.Net.TransportContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance class System.Threading.Tasks.Task SerializeToStreamAsync(class System.IO.Stream stream, class System.Net.TransportContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.MultipartContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Threading::Tasks::Task ^ SerializeToStreamAsync(System::IO::Stream ^ stream, System::Net::TransportContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.SerializeToStreamAsync : System.IO.Stream * System.Net.TransportContext -&gt; System.Threading.Tasks.Task" Usage="multipartContent.SerializeToStreamAsync (stream, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="context" Type="System.Net.TransportContext" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="31c7f-130">目標資料流。</span><span class="sxs-lookup"><span data-stu-id="31c7f-130">The target stream.</span></span></param>
        <param name="context"><span data-ttu-id="31c7f-131">傳輸的相關資訊 (例如通道繫結權杖)。</span><span class="sxs-lookup"><span data-stu-id="31c7f-131">Information about the transport (channel binding token, for example).</span></span> <span data-ttu-id="31c7f-132">此參數可以是 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="31c7f-132">This parameter may be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="31c7f-133">以非同步作業方式將多部分 HTTP 內容序列化為資料流。</span><span class="sxs-lookup"><span data-stu-id="31c7f-133">Serialize the multipart HTTP content to a stream as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="31c7f-134">工作物件，表示非同步作業。</span><span class="sxs-lookup"><span data-stu-id="31c7f-134">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31c7f-135">這項作業不會封鎖。</span><span class="sxs-lookup"><span data-stu-id="31c7f-135">This operation will not block.</span></span> <span data-ttu-id="31c7f-136">傳回<xref:System.Threading.Tasks.Task%601>物件會完成之後的所有內容已序列化至的目標資料流。</span><span class="sxs-lookup"><span data-stu-id="31c7f-136">The returned <xref:System.Threading.Tasks.Task%601> object will complete after all of the content has been serialized to the target stream.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.MultipartContent.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="31c7f-137"><see cref="M:System.Net.Http.MultipartContent.GetEnumerator" /> 方法的明確實作。</span><span class="sxs-lookup"><span data-stu-id="31c7f-137">The explicit implementation of the <see cref="M:System.Net.Http.MultipartContent.GetEnumerator" /> method.</span></span></summary>
        <returns><span data-ttu-id="31c7f-138">可用於逐一查看集合的物件。</span><span class="sxs-lookup"><span data-stu-id="31c7f-138">An object that can be used to iterate through the collection.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryComputeLength">
      <MemberSignature Language="C#" Value="protected internal override bool TryComputeLength (out long length);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance bool TryComputeLength([out] int64&amp; length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.MultipartContent.TryComputeLength(System.Int64@)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function TryComputeLength (ByRef length As Long) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override bool TryComputeLength([Runtime::InteropServices::Out] long % length);" />
      <MemberSignature Language="F#" Value="override this.TryComputeLength :  -&gt; bool" Usage="multipartContent.TryComputeLength length" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="length" Type="System.Int64" RefType="out" />
      </Parameters>
      <Docs>
        <param name="length"><span data-ttu-id="31c7f-139">HTTP 內容的位元組長度。</span><span class="sxs-lookup"><span data-stu-id="31c7f-139">The length in bytes of the HHTP content.</span></span></param>
        <summary><span data-ttu-id="31c7f-140">判斷 HTTP 多部分內容是否具備有效的位元組長度。</span><span class="sxs-lookup"><span data-stu-id="31c7f-140">Determines whether the HTTP multipart content has a valid length in bytes.</span></span></summary>
        <returns><span data-ttu-id="31c7f-141">若 <paramref name="length" /> 為有效的長度則為 <see langword="true" />；否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="31c7f-141"><see langword="true" /> if <paramref name="length" /> is a valid length; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31c7f-142"><xref:System.Net.Http.MultipartContent.TryComputeLength%2A>方法可讓 HTTP 多部分內容來計算內容的長度。</span><span class="sxs-lookup"><span data-stu-id="31c7f-142">The <xref:System.Net.Http.MultipartContent.TryComputeLength%2A> method gives HTTP multipart content the ability to calculate the content length.</span></span> <span data-ttu-id="31c7f-143">這是適用於內容的類型，也就是能夠輕易地計算內容的長度。</span><span class="sxs-lookup"><span data-stu-id="31c7f-143">This is useful for content types which are able to easily calculate the content length.</span></span> <span data-ttu-id="31c7f-144">如果計算內容的長度不可能或昂貴 （需要用來緩衝整個內容其中序列化會很耗費資源也不需要系統配置大量記憶體系統），這個方法可以傳回`false`。</span><span class="sxs-lookup"><span data-stu-id="31c7f-144">If computing the content length is not possible or expensive (would require the system to buffer the whole content where the serialization would be expensive or require the system to allocate a lot of memory), this method can return `false`.</span></span> <span data-ttu-id="31c7f-145">如果此方法傳回`false`，這表示可能是需要區塊的傳輸或內容必須在傳送到伺服器之前會緩衝處理。</span><span class="sxs-lookup"><span data-stu-id="31c7f-145">If this method returns `false`, this implies that either chunked transfer is needed or the content must get buffered before being sent to the server.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>