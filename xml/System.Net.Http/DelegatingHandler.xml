<Type Name="DelegatingHandler" FullName="System.Net.Http.DelegatingHandler">
  <Metadata><Meta Name="ms.openlocfilehash" Value="67bd21ba172da744ad60cf729a6b0ad55481d402" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="36475772" /></Metadata><TypeSignature Language="C#" Value="public abstract class DelegatingHandler : System.Net.Http.HttpMessageHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit DelegatingHandler extends System.Net.Http.HttpMessageHandler" />
  <TypeSignature Language="DocId" Value="T:System.Net.Http.DelegatingHandler" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class DelegatingHandler&#xA;Inherits HttpMessageHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class DelegatingHandler abstract : System::Net::Http::HttpMessageHandler" />
  <TypeSignature Language="F#" Value="type DelegatingHandler = class&#xA;    inherit HttpMessageHandler" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Http</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Net.Http.HttpMessageHandler</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="4730c-101">HTTP 處理常式的類型，這些處理常式會將 HTTP 回應訊息的處理委派給另一個處理常式，也稱為內部處理常式。</span><span class="sxs-lookup"><span data-stu-id="4730c-101">A type for HTTP handlers that delegate the processing of HTTP response messages to another handler, called the inner handler.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4730c-102">應用程式應該提供內部處理常式，在建構函式或透過<xref:System.Net.Http.DelegatingHandler.InnerHandler%2A>屬性，然後再呼叫<xref:System.Net.Http.DelegatingHandler.SendAsync%2A>; 否則即為<xref:System.InvalidOperationException>就會擲回。</span><span class="sxs-lookup"><span data-stu-id="4730c-102">An application should provide an inner handler either in the constructor or through the <xref:System.Net.Http.DelegatingHandler.InnerHandler%2A> property before calling <xref:System.Net.Http.DelegatingHandler.SendAsync%2A>; otherwise, an <xref:System.InvalidOperationException> will be thrown.</span></span>
  
 <span data-ttu-id="4730c-103">請注意，<xref:System.Net.Http.DelegatingHandler.InnerHandler%2A>屬性可能是也委派處理常式。</span><span class="sxs-lookup"><span data-stu-id="4730c-103">Note that <xref:System.Net.Http.DelegatingHandler.InnerHandler%2A> property may be a delegating handler as well.</span></span> <span data-ttu-id="4730c-104">這個方法可處理 HTTP 回應訊息的處理常式堆疊建立。</span><span class="sxs-lookup"><span data-stu-id="4730c-104">This approach allows the creation of handler stacks to process the HTTP response messages.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4730c-105">建立 <see cref="T:System.Net.Http.DelegatingHandler" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="4730c-105">Creates a new instance of the <see cref="T:System.Net.Http.DelegatingHandler" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DelegatingHandler ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.DelegatingHandler.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DelegatingHandler();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4730c-106">建立 <see cref="T:System.Net.Http.DelegatingHandler" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="4730c-106">Creates a new instance of the <see cref="T:System.Net.Http.DelegatingHandler" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4730c-107">您可以使用設定的內部控制代碼<xref:System.Net.Http.DelegatingHandler.InnerHandler%2A>。</span><span class="sxs-lookup"><span data-stu-id="4730c-107">The inner handle can be set using the <xref:System.Net.Http.DelegatingHandler.InnerHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DelegatingHandler (System.Net.Http.HttpMessageHandler innerHandler);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Net.Http.HttpMessageHandler innerHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.DelegatingHandler.#ctor(System.Net.Http.HttpMessageHandler)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (innerHandler As HttpMessageHandler)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DelegatingHandler(System::Net::Http::HttpMessageHandler ^ innerHandler);" />
      <MemberSignature Language="F#" Value="new System.Net.Http.DelegatingHandler : System.Net.Http.HttpMessageHandler -&gt; System.Net.Http.DelegatingHandler" Usage="new System.Net.Http.DelegatingHandler innerHandler" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="innerHandler" Type="System.Net.Http.HttpMessageHandler" />
      </Parameters>
      <Docs>
        <param name="innerHandler"><span data-ttu-id="4730c-108">負責處理 HTTP 回應訊息的內部處理常式。</span><span class="sxs-lookup"><span data-stu-id="4730c-108">The inner handler which is responsible for processing the HTTP response messages.</span></span></param>
        <summary><span data-ttu-id="4730c-109">使用特定的內部處理常式，建立 <see cref="T:System.Net.Http.DelegatingHandler" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="4730c-109">Creates a new instance of the <see cref="T:System.Net.Http.DelegatingHandler" /> class with a specific inner handler.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.DelegatingHandler.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="delegatingHandler.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="4730c-110"><see langword="true" /> 表示會同時釋放 Managed 和 Unmanaged 資源；<see langword="false" /> 則表示只釋放 Unmanaged 資源。</span><span class="sxs-lookup"><span data-stu-id="4730c-110"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to releases only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="4730c-111">釋放 <see cref="T:System.Net.Http.DelegatingHandler" /> 所使用的 Unmanaged 資源，並選擇性處置 Managed 資源。</span><span class="sxs-lookup"><span data-stu-id="4730c-111">Releases the unmanaged resources used by the <see cref="T:System.Net.Http.DelegatingHandler" />, and optionally disposes of the managed resources.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InnerHandler">
      <MemberSignature Language="C#" Value="public System.Net.Http.HttpMessageHandler InnerHandler { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Http.HttpMessageHandler InnerHandler" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.DelegatingHandler.InnerHandler" />
      <MemberSignature Language="VB.NET" Value="Public Property InnerHandler As HttpMessageHandler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Http::HttpMessageHandler ^ InnerHandler { System::Net::Http::HttpMessageHandler ^ get(); void set(System::Net::Http::HttpMessageHandler ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InnerHandler : System.Net.Http.HttpMessageHandler with get, set" Usage="System.Net.Http.DelegatingHandler.InnerHandler" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Http.HttpMessageHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4730c-112">取得或設定處理 HTTP 回應訊息的內部處理常式。</span><span class="sxs-lookup"><span data-stu-id="4730c-112">Gets or sets the inner handler which processes the HTTP response messages.</span></span></summary>
        <value><span data-ttu-id="4730c-113">HTTP 回應訊息的內部處理常式。</span><span class="sxs-lookup"><span data-stu-id="4730c-113">The inner handler for HTTP response messages.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4730c-114">這<xref:System.Net.Http.DelegatingHandler.InnerHandler%2A>類別使用之前，可以只設定屬性 (<xref:System.Net.Http.DelegatingHandler.SendAsync%2A>方法呼叫)。</span><span class="sxs-lookup"><span data-stu-id="4730c-114">This <xref:System.Net.Http.DelegatingHandler.InnerHandler%2A> property can only be set before the class is used (the <xref:System.Net.Http.DelegatingHandler.SendAsync%2A> method is called).</span></span>  
  
 <span data-ttu-id="4730c-115">請注意，<xref:System.Net.Http.DelegatingHandler.InnerHandler%2A>屬性可能也是委派的處理常式，雖然這是不常見。</span><span class="sxs-lookup"><span data-stu-id="4730c-115">Note that <xref:System.Net.Http.DelegatingHandler.InnerHandler%2A> property may be a delegating handler too, although this is uncommon.</span></span> <span data-ttu-id="4730c-116">這種方法可讓您建立的 HTTP 回應訊息的處理常式堆疊。</span><span class="sxs-lookup"><span data-stu-id="4730c-116">This approach allows the creation of handler stacks for the HTTP response messages.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="protected internal override System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; SendAsync (System.Net.Http.HttpRequestMessage request, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; SendAsync(class System.Net.Http.HttpRequestMessage request, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.DelegatingHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ SendAsync(System::Net::Http::HttpRequestMessage ^ request, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.SendAsync : System.Net.Http.HttpRequestMessage * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;" Usage="delegatingHandler.SendAsync (request, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Net.Http.HttpRequestMessage" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="request"><span data-ttu-id="4730c-117">要傳送至伺服器的 HTTP 要求訊息。</span><span class="sxs-lookup"><span data-stu-id="4730c-117">The HTTP request message to send to the server.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="4730c-118">用於取消作業的取消語彙基元。</span><span class="sxs-lookup"><span data-stu-id="4730c-118">A cancellation token to cancel operation.</span></span></param>
        <summary><span data-ttu-id="4730c-119">以非同步作業方式將 HTTP 要求傳送到內部處理常式，以傳送到伺服器。</span><span class="sxs-lookup"><span data-stu-id="4730c-119">Sends an HTTP request to the inner handler to send to the server as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="4730c-120">工作物件，表示非同步作業。</span><span class="sxs-lookup"><span data-stu-id="4730c-120">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4730c-121">這項作業不會封鎖。</span><span class="sxs-lookup"><span data-stu-id="4730c-121">This operation does not block.</span></span> <span data-ttu-id="4730c-122">可覆寫這個實作<xref:System.Net.Http.HttpClientHandler.SendAsync%2A>方法會轉送至內部處理常式的 HTTP 要求，傳送到伺服器以非同步作業。</span><span class="sxs-lookup"><span data-stu-id="4730c-122">This overridable implementation of <xref:System.Net.Http.HttpClientHandler.SendAsync%2A> method forwards the HTTP request to the inner handler to send to the server as an asynchronous operation.</span></span>  
  
 <span data-ttu-id="4730c-123"><xref:System.Net.Http.DelegatingHandler.SendAsync%2A>方法主要用於系統，而不是由應用程式。</span><span class="sxs-lookup"><span data-stu-id="4730c-123">The <xref:System.Net.Http.DelegatingHandler.SendAsync%2A> method is mainly used by the system and not by applications.</span></span> <span data-ttu-id="4730c-124">當呼叫這個方法時，它會呼叫<xref:System.Net.Http.DelegatingHandler.SendAsync%2A>上內部處理常式方法。</span><span class="sxs-lookup"><span data-stu-id="4730c-124">When this method is called, it calls the <xref:System.Net.Http.DelegatingHandler.SendAsync%2A> method on the inner handler.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4730c-125"><paramref name="request" /> 以前是 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="4730c-125">The <paramref name="request" /> was <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>