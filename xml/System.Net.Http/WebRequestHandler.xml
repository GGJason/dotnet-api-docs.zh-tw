<Type Name="WebRequestHandler" FullName="System.Net.Http.WebRequestHandler">
  <Metadata><Meta Name="ms.openlocfilehash" Value="78e1210b4a91957a00054abc0eda2dfca311b629" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55323303" /></Metadata><TypeSignature Language="C#" Value="public class WebRequestHandler : System.Net.Http.HttpClientHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WebRequestHandler extends System.Net.Http.HttpClientHandler" />
  <TypeSignature Language="DocId" Value="T:System.Net.Http.WebRequestHandler" />
  <TypeSignature Language="VB.NET" Value="Public Class WebRequestHandler&#xA;Inherits HttpClientHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebRequestHandler : System::Net::Http::HttpClientHandler" />
  <TypeSignature Language="F#" Value="type WebRequestHandler = class&#xA;    inherit HttpClientHandler" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Http.WebRequest</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Net.Http.HttpClientHandler</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="a6f13-101">提供 Windows 市集應用程式或其他環境中所沒有的桌面特定功能。</span><span class="sxs-lookup"><span data-stu-id="a6f13-101">Provides desktop-specific features not available to Windows Store apps or other environments.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6f13-102">這個類別會實作傳輸處理常式使用<xref:System.Net.HttpWebRequest>將 HTTP 要求傳送至伺服器的執行個體。</span><span class="sxs-lookup"><span data-stu-id="a6f13-102">This class implements a transport handler using <xref:System.Net.HttpWebRequest> instances to send HTTP requests to servers.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebRequestHandler ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.WebRequestHandler.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebRequestHandler();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http.WebRequest</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a6f13-103">初始化 <see cref="T:System.Net.Http.WebRequestHandler" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="a6f13-103">Initializes a new instance of the <see cref="T:System.Net.Http.WebRequestHandler" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowPipelining">
      <MemberSignature Language="C#" Value="public bool AllowPipelining { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowPipelining" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.WebRequestHandler.AllowPipelining" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowPipelining As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowPipelining { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowPipelining : bool with get, set" Usage="System.Net.Http.WebRequestHandler.AllowPipelining" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http.WebRequest</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a6f13-104">取得或設定值，指出是否將要求導送至網際網路資源。</span><span class="sxs-lookup"><span data-stu-id="a6f13-104">Gets or sets a value that indicates whether to pipeline the request to the Internet resource.</span></span></summary>
        <value><span data-ttu-id="a6f13-105">傳回 <see cref="T:System.Boolean" />。</span><span class="sxs-lookup"><span data-stu-id="a6f13-105">Returns <see cref="T:System.Boolean" />.</span></span>  
  
 <span data-ttu-id="a6f13-106">如果要求應該要導送，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a6f13-106"><see langword="true" /> if the request should be pipelined; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="a6f13-107">預設為 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="a6f13-107">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6f13-108">應用程式使用<xref:System.Net.Http.WebRequestHandler.AllowPipelining%2A>可指出以管線連接喜好設定的屬性。</span><span class="sxs-lookup"><span data-stu-id="a6f13-108">An application uses the <xref:System.Net.Http.WebRequestHandler.AllowPipelining%2A> property to indicate a preference for pipelined connections.</span></span> <span data-ttu-id="a6f13-109">當<xref:System.Net.Http.WebRequestHandler.AllowPipelining%2A>是`true`，應用程式會以管線的連接的伺服器上支援它們。</span><span class="sxs-lookup"><span data-stu-id="a6f13-109">When <xref:System.Net.Http.WebRequestHandler.AllowPipelining%2A> is `true`, an application makes pipelined connections to the servers that support them.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthenticationLevel">
      <MemberSignature Language="C#" Value="public System.Net.Security.AuthenticationLevel AuthenticationLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.Security.AuthenticationLevel AuthenticationLevel" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.WebRequestHandler.AuthenticationLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property AuthenticationLevel As AuthenticationLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Security::AuthenticationLevel AuthenticationLevel { System::Net::Security::AuthenticationLevel get(); void set(System::Net::Security::AuthenticationLevel value); };" />
      <MemberSignature Language="F#" Value="member this.AuthenticationLevel : System.Net.Security.AuthenticationLevel with get, set" Usage="System.Net.Http.WebRequestHandler.AuthenticationLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http.WebRequest</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Security.AuthenticationLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a6f13-110">取得或設定值，指出用於這個要求的驗證和模擬等級。</span><span class="sxs-lookup"><span data-stu-id="a6f13-110">Gets or sets a value indicating the level of authentication and impersonation used for this request.</span></span></summary>
        <value><span data-ttu-id="a6f13-111"><see cref="T:System.Net.Security.AuthenticationLevel" /> 值的位元組合。</span><span class="sxs-lookup"><span data-stu-id="a6f13-111">A bitwise combination of the <see cref="T:System.Net.Security.AuthenticationLevel" /> values.</span></span> <span data-ttu-id="a6f13-112">預設值為 <see cref="F:System.Net.Security.AuthenticationLevel.MutualAuthRequested" />。</span><span class="sxs-lookup"><span data-stu-id="a6f13-112">The default value is <see cref="F:System.Net.Security.AuthenticationLevel.MutualAuthRequested" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6f13-113">在相互驗證中，用戶端和伺服器都會出示建立其識別的認證。</span><span class="sxs-lookup"><span data-stu-id="a6f13-113">In mutual authentication, both the client and server present credentials to establish their identity.</span></span> <span data-ttu-id="a6f13-114"><xref:System.Net.Security.AuthenticationLevel.MutualAuthRequired> 和 <xref:System.Net.Security.AuthenticationLevel.MutualAuthRequested> 與 Kerberos 驗證有關。</span><span class="sxs-lookup"><span data-stu-id="a6f13-114">The <xref:System.Net.Security.AuthenticationLevel.MutualAuthRequired> and <xref:System.Net.Security.AuthenticationLevel.MutualAuthRequested> values are relevant for Kerberos authentication.</span></span> <span data-ttu-id="a6f13-115">Kerberos 驗證可以直接支援，或在使用交涉安全性通訊協定時，用來選取實際的安全性通訊協定。</span><span class="sxs-lookup"><span data-stu-id="a6f13-115">Kerberos authentication can be supported directly, or can be used if the Negotiate security protocol is used to select the actual security protocol.</span></span> <span data-ttu-id="a6f13-116">如需有關驗證通訊協定的詳細資訊，請參閱 <<c0> [ 網際網路驗證](~/docs/framework/network-programming/internet-authentication.md)。</span><span class="sxs-lookup"><span data-stu-id="a6f13-116">For more information about authentication protocols, see [Internet Authentication](~/docs/framework/network-programming/internet-authentication.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CachePolicy">
      <MemberSignature Language="C#" Value="public System.Net.Cache.RequestCachePolicy CachePolicy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Cache.RequestCachePolicy CachePolicy" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.WebRequestHandler.CachePolicy" />
      <MemberSignature Language="VB.NET" Value="Public Property CachePolicy As RequestCachePolicy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Cache::RequestCachePolicy ^ CachePolicy { System::Net::Cache::RequestCachePolicy ^ get(); void set(System::Net::Cache::RequestCachePolicy ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CachePolicy : System.Net.Cache.RequestCachePolicy with get, set" Usage="System.Net.Http.WebRequestHandler.CachePolicy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http.WebRequest</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Cache.RequestCachePolicy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a6f13-117">取得或設定這個要求的快取原則。</span><span class="sxs-lookup"><span data-stu-id="a6f13-117">Gets or sets the cache policy for this request.</span></span></summary>
        <value><span data-ttu-id="a6f13-118">定義快取原則的 <see cref="T:System.Net.Cache.RequestCachePolicy" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="a6f13-118">A <see cref="T:System.Net.Cache.RequestCachePolicy" /> object that defines a cache policy.</span></span> <span data-ttu-id="a6f13-119">預設為 <see cref="P:System.Net.WebRequest.DefaultCachePolicy" />。</span><span class="sxs-lookup"><span data-stu-id="a6f13-119">The default is <see cref="P:System.Net.WebRequest.DefaultCachePolicy" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6f13-120">目前的快取原則和快取中要求的資源出現與否會決定是否可以從快取中擷取的回應。</span><span class="sxs-lookup"><span data-stu-id="a6f13-120">The current cache policy and the presence of the requested resource in the cache determine whether a response can be retrieved from the cache.</span></span> <span data-ttu-id="a6f13-121">使用快取回的應，通常可改善應用程式效能，但會有風險的快取中的回應不符合伺服器上的回應。</span><span class="sxs-lookup"><span data-stu-id="a6f13-121">Using cached responses usually improves application performance, but there is a risk that the response in the cache does not match the response on the server.</span></span>  
  
 <span data-ttu-id="a6f13-122">您可以在 Machine.config 組態檔中，或藉由設定，指定預設快取原則<xref:System.Net.HttpWebRequest.DefaultCachePolicy%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="a6f13-122">The default cache policy can be specified in the Machine.config configuration file or by setting the <xref:System.Net.HttpWebRequest.DefaultCachePolicy%2A> property.</span></span>  
  
 <span data-ttu-id="a6f13-123">如果資源的回應資料流擷取和讀取資料流末端，則一份資源只會加入至快取。</span><span class="sxs-lookup"><span data-stu-id="a6f13-123">A copy of a resource is only added to the cache if the response stream for the resource is retrieved and read to the end of the stream.</span></span> <span data-ttu-id="a6f13-124">因此針對相同資源的另一個要求可以使用快取的複本，根據此要求的快取原則層級。</span><span class="sxs-lookup"><span data-stu-id="a6f13-124">So another request for the same resource could use a cached copy, depending on the cache policy level for this request.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientCertificates">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X509CertificateCollection ClientCertificates { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.X509Certificates.X509CertificateCollection ClientCertificates" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.WebRequestHandler.ClientCertificates" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClientCertificates As X509CertificateCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::X509Certificates::X509CertificateCollection ^ ClientCertificates { System::Security::Cryptography::X509Certificates::X509CertificateCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ClientCertificates : System.Security.Cryptography.X509Certificates.X509CertificateCollection" Usage="System.Net.Http.WebRequestHandler.ClientCertificates" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http.WebRequest</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509CertificateCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a6f13-125">取得或設定與這個要求關聯的安全憑證集合。</span><span class="sxs-lookup"><span data-stu-id="a6f13-125">Gets or sets the collection of security certificates that are associated with this request.</span></span></summary>
        <value><span data-ttu-id="a6f13-126">與這個要求相關聯的安全憑證的集合。</span><span class="sxs-lookup"><span data-stu-id="a6f13-126">The collection of security certificates associated with this request.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContinueTimeout">
      <MemberSignature Language="C#" Value="public TimeSpan ContinueTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan ContinueTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.WebRequestHandler.ContinueTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property ContinueTimeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan ContinueTimeout { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.ContinueTimeout : TimeSpan with get, set" Usage="System.Net.Http.WebRequestHandler.ContinueTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http.WebRequest</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a6f13-127">取得或設定在上傳資料前，應用程式等待來自伺服器的 100-Continue 的時間長度 (以毫秒為單位)。</span><span class="sxs-lookup"><span data-stu-id="a6f13-127">Gets or sets the amount of time, in milliseconds, the application will wait for 100-continue from the server before uploading data.</span></span></summary>
        <value><span data-ttu-id="a6f13-128">在上傳資料前，應用程式等待來自伺服器的 100-Continue 的時間長度 (以毫秒為單位)。</span><span class="sxs-lookup"><span data-stu-id="a6f13-128">The amount of time, in milliseconds, the application will wait for 100-continue from the server before uploading data.</span></span> <span data-ttu-id="a6f13-129">預設值為 350 毫秒。</span><span class="sxs-lookup"><span data-stu-id="a6f13-129">The default value is 350 milliseconds.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImpersonationLevel">
      <MemberSignature Language="C#" Value="public System.Security.Principal.TokenImpersonationLevel ImpersonationLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Principal.TokenImpersonationLevel ImpersonationLevel" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.WebRequestHandler.ImpersonationLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property ImpersonationLevel As TokenImpersonationLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Principal::TokenImpersonationLevel ImpersonationLevel { System::Security::Principal::TokenImpersonationLevel get(); void set(System::Security::Principal::TokenImpersonationLevel value); };" />
      <MemberSignature Language="F#" Value="member this.ImpersonationLevel : System.Security.Principal.TokenImpersonationLevel with get, set" Usage="System.Net.Http.WebRequestHandler.ImpersonationLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http.WebRequest</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Principal.TokenImpersonationLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a6f13-130">取得或設定目前要求的模擬等級。</span><span class="sxs-lookup"><span data-stu-id="a6f13-130">Gets or sets the impersonation level for the current request.</span></span></summary>
        <value><span data-ttu-id="a6f13-131">要求的模擬層級。</span><span class="sxs-lookup"><span data-stu-id="a6f13-131">The impersonation level for the request.</span></span> <span data-ttu-id="a6f13-132">預設為 <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />。</span><span class="sxs-lookup"><span data-stu-id="a6f13-132">The default is <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6f13-133">模擬等級會決定伺服器如何使用用戶端的認證。</span><span class="sxs-lookup"><span data-stu-id="a6f13-133">The impersonation level determines how the server can use the client's credentials.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxResponseHeadersLength">
      <MemberSignature Language="C#" Value="public int MaxResponseHeadersLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxResponseHeadersLength" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.WebRequestHandler.MaxResponseHeadersLength" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxResponseHeadersLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxResponseHeadersLength { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxResponseHeadersLength : int with get, set" Usage="System.Net.Http.WebRequestHandler.MaxResponseHeadersLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http.WebRequest</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a6f13-134">取得或設定回應標頭的最大允許長度。</span><span class="sxs-lookup"><span data-stu-id="a6f13-134">Gets or sets the maximum allowed length of the response headers.</span></span></summary>
        <value><span data-ttu-id="a6f13-135">回應標頭的長度，以 KB (1024 位元組) 為單位。</span><span class="sxs-lookup"><span data-stu-id="a6f13-135">The length, in kilobytes (1024 bytes), of the response headers.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6f13-136">回應標頭的長度會包含回應狀態行及收到的 HTTP 通訊協定的一部分的任何額外的控制字元。</span><span class="sxs-lookup"><span data-stu-id="a6f13-136">The length of the response header includes the response status line and any extra control characters that are received as part of HTTP protocol.</span></span> <span data-ttu-id="a6f13-137">值為-1 表示沒有限制加諸於回應標頭;值為 0 表示所有的要求會失敗。</span><span class="sxs-lookup"><span data-stu-id="a6f13-137">A value of -1 means no limit is imposed on the response headers; a value of 0 means that all requests fail.</span></span>  
  
 <span data-ttu-id="a6f13-138">如果<xref:System.Net.Http.WebRequestHandler.MaxResponseHeadersLength%2A>屬性未明確設定，則預設值為<xref:System.Net.HttpWebRequest.DefaultMaximumResponseHeadersLength%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="a6f13-138">If the <xref:System.Net.Http.WebRequestHandler.MaxResponseHeadersLength%2A> property is not explicitly set, it defaults to the value of the <xref:System.Net.HttpWebRequest.DefaultMaximumResponseHeadersLength%2A> property.</span></span>  
  
 <span data-ttu-id="a6f13-139">如果收到的回應標頭的長度超過的值<xref:System.Net.Http.WebRequestHandler.MaxResponseHeadersLength%2A>屬性，會擲回例外狀況回應存取時。</span><span class="sxs-lookup"><span data-stu-id="a6f13-139">If the length of the response header received exceeds the value of the <xref:System.Net.Http.WebRequestHandler.MaxResponseHeadersLength%2A> property, an exception is thrown when the response is accessed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadWriteTimeout">
      <MemberSignature Language="C#" Value="public int ReadWriteTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReadWriteTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.WebRequestHandler.ReadWriteTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property ReadWriteTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ReadWriteTimeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ReadWriteTimeout : int with get, set" Usage="System.Net.Http.WebRequestHandler.ReadWriteTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http.WebRequest</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a6f13-140">取得或設定寫入要求或從伺服器讀取回應時的逾時 (以毫秒為單位)。</span><span class="sxs-lookup"><span data-stu-id="a6f13-140">Gets or sets a time-out in milliseconds when writing a request to or reading a response from a server.</span></span></summary>
        <value><span data-ttu-id="a6f13-141">寫入或讀取逾時前的毫秒數。預設值為 300,000 毫秒 (5 分鐘)。</span><span class="sxs-lookup"><span data-stu-id="a6f13-141">The number of milliseconds before the writing or reading times out. The default value is 300,000 milliseconds (5 minutes).</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ServerCertificateValidationCallback">
      <MemberSignature Language="C#" Value="public System.Net.Security.RemoteCertificateValidationCallback ServerCertificateValidationCallback { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Security.RemoteCertificateValidationCallback ServerCertificateValidationCallback" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.WebRequestHandler.ServerCertificateValidationCallback" />
      <MemberSignature Language="VB.NET" Value="Public Property ServerCertificateValidationCallback As RemoteCertificateValidationCallback" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Security::RemoteCertificateValidationCallback ^ ServerCertificateValidationCallback { System::Net::Security::RemoteCertificateValidationCallback ^ get(); void set(System::Net::Security::RemoteCertificateValidationCallback ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ServerCertificateValidationCallback : System.Net.Security.RemoteCertificateValidationCallback with get, set" Usage="System.Net.Http.WebRequestHandler.ServerCertificateValidationCallback" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http.WebRequest</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Security.RemoteCertificateValidationCallback</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a6f13-142">取得或設定驗證伺服器憑證的回呼方法。</span><span class="sxs-lookup"><span data-stu-id="a6f13-142">Gets or sets a callback method to validate the server certificate.</span></span></summary>
        <value><span data-ttu-id="a6f13-143">驗證伺服器憑證的回呼方法。</span><span class="sxs-lookup"><span data-stu-id="a6f13-143">A callback method to validate the server certificate.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6f13-144">如果<xref:System.Net.Http.WebRequestHandler.ServerCertificateValidationCallback%2A>是`null`，將會使用標準的已知憑證授權單位驗證伺服器憑證。</span><span class="sxs-lookup"><span data-stu-id="a6f13-144">If the <xref:System.Net.Http.WebRequestHandler.ServerCertificateValidationCallback%2A> is `null`, the server certificate will be validated using standard well-known  certificate authorities.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnsafeAuthenticatedConnectionSharing">
      <MemberSignature Language="C#" Value="public bool UnsafeAuthenticatedConnectionSharing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UnsafeAuthenticatedConnectionSharing" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.WebRequestHandler.UnsafeAuthenticatedConnectionSharing" />
      <MemberSignature Language="VB.NET" Value="Public Property UnsafeAuthenticatedConnectionSharing As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UnsafeAuthenticatedConnectionSharing { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UnsafeAuthenticatedConnectionSharing : bool with get, set" Usage="System.Net.Http.WebRequestHandler.UnsafeAuthenticatedConnectionSharing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http.WebRequest</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a6f13-145">取得或設定值，指出是否允許高速 NTLM 驗證連接共用。</span><span class="sxs-lookup"><span data-stu-id="a6f13-145">Gets or sets a value that indicates whether to allow high-speed NTLM-authenticated connection sharing.</span></span></summary>
        <value><span data-ttu-id="a6f13-146">傳回 <see cref="T:System.Boolean" />。</span><span class="sxs-lookup"><span data-stu-id="a6f13-146">Returns <see cref="T:System.Boolean" />.</span></span>  
  
 <span data-ttu-id="a6f13-147"><see langword="true" /> 表示保持開啟已驗證的連接，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a6f13-147"><see langword="true" /> to keep the authenticated connection open; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6f13-148">這個屬性的預設值是`false`，因而導致要求完成之後關閉目前的連接。</span><span class="sxs-lookup"><span data-stu-id="a6f13-148">The default value for this property is `false`, which causes the current connection to be closed after a request is completed.</span></span> <span data-ttu-id="a6f13-149">您的應用程式必須通過驗證的順序，每一次，就會發出新的要求。如果這個屬性設定為`true`，執行驗證之後，用來擷取回應的連線保持開啟。</span><span class="sxs-lookup"><span data-stu-id="a6f13-149">Your application must go through the authentication sequence every time it issues a new request.If this property is set to `true`, the connection used to retrieve the response remains open after the authentication has been performed.</span></span> <span data-ttu-id="a6f13-150">在此情況下，其他要求，將此屬性設定為`true`可能使用的連接，而不需重新驗證。</span><span class="sxs-lookup"><span data-stu-id="a6f13-150">In this case, other requests that have this property set to `true` may use the connection without re-authenticating.</span></span> <span data-ttu-id="a6f13-151">換句話說，如果使用者 A 已驗證的連線，使用者 B 可以重複使用 A 的連線;使用者 B 的要求完成根據使用者 a 的認證</span><span class="sxs-lookup"><span data-stu-id="a6f13-151">In other words, if a connection has been authenticated for user A, user B may reuse A's connection; user B's request is fulfilled based on the credentials of user A.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="a6f13-152">因為它可能會有應用程式使用的連接，而不必經過驗證，您必須要確定沒有任何系統管理的弱點可能會在您的系統時將此屬性設定為`true`。</span><span class="sxs-lookup"><span data-stu-id="a6f13-152">Because it is possible for an application to use the connection without being authenticated, you need to be sure that there is no administrative vulnerability in your system when setting this property to `true`.</span></span> <span data-ttu-id="a6f13-153">如果您的應用程式會將要求傳送多個使用者 （會模擬多個使用者帳戶），並需要驗證來保護資源，執行未設定這個屬性為`true`除非您使用連線群組，如下所述。</span><span class="sxs-lookup"><span data-stu-id="a6f13-153">If your application sends requests for multiple users (impersonates multiple user accounts) and relies on authentication to protect resources, do not set this property to `true` unless you use connection groups as described below.</span></span>  
  
 <span data-ttu-id="a6f13-154">您可能要考慮啟用這項機制，如果您有效能問題，並使用整合式 Windows 驗證的 Web 伺服器上執行您的應用程式。</span><span class="sxs-lookup"><span data-stu-id="a6f13-154">You may want to consider enabling this mechanism if your are having performance problems and your application is running on a Web server with integrated Windows authentication.</span></span>  
  
 <span data-ttu-id="a6f13-155">啟用此設定會使系統的安全性風險。</span><span class="sxs-lookup"><span data-stu-id="a6f13-155">Enabling this setting opens the system to security risks.</span></span> <span data-ttu-id="a6f13-156">如果您設定<xref:System.Net.HttpWebRequest.UnsafeAuthenticatedConnectionSharing%2A>屬性設`true`務必採取下列預防措施：</span><span class="sxs-lookup"><span data-stu-id="a6f13-156">If you set the <xref:System.Net.HttpWebRequest.UnsafeAuthenticatedConnectionSharing%2A> property to `true` be sure to take the following precautions:</span></span>  
  
-   <span data-ttu-id="a6f13-157">執行您的應用程式中受保護的環境，可協助避免可能的連接入侵。</span><span class="sxs-lookup"><span data-stu-id="a6f13-157">Run your application in a protected environment to help avoid possible connection exploits.</span></span>  
  
 <span data-ttu-id="a6f13-158">如果您控制後端伺服器，或者您可以考慮關閉驗證持續性。</span><span class="sxs-lookup"><span data-stu-id="a6f13-158">If you control the back-end server, as an alternative you might consider turning off authentication persistence.</span></span> <span data-ttu-id="a6f13-159">這會增加效能，以較小的程度，但是比較安全。</span><span class="sxs-lookup"><span data-stu-id="a6f13-159">This increases performance to a lesser degree, but it is safer.</span></span> <span data-ttu-id="a6f13-160">如需詳細資訊，搜尋 MSDN library 中的 AuthPersistence [ http://msdn.microsoft.com/library ](https://msdn.microsoft.com/library)。</span><span class="sxs-lookup"><span data-stu-id="a6f13-160">For more details, search for AuthPersistence in the MSDN library at [http://msdn.microsoft.com/library](https://msdn.microsoft.com/library).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>