<Type Name="HttpClient" FullName="System.Net.Http.HttpClient">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8bdfa8a28d1505a3cbf22bbc3c44a7b9263ea47c" />
    <Meta Name="ms.sourcegitcommit" Value="81d387351cc43c342755705908f4a5eb8af153d3" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="06/04/2018" />
    <Meta Name="ms.locfileid" Value="34567778" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class HttpClient : System.Net.Http.HttpMessageInvoker" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HttpClient extends System.Net.Http.HttpMessageInvoker" />
  <TypeSignature Language="DocId" Value="T:System.Net.Http.HttpClient" />
  <TypeSignature Language="VB.NET" Value="Public Class HttpClient&#xA;Inherits HttpMessageInvoker" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpClient : System::Net::Http::HttpMessageInvoker" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Http</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Net.Http.HttpMessageInvoker</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="87d94-101">提供基底類別，用來傳送 HTTP 要求，以及從 URI 所識別的資源接收 HTTP 回應。</span>
      <span class="sxs-lookup">
        <span data-stu-id="87d94-101">Provides a base class for sending HTTP requests and receiving HTTP responses from a resource identified by a URI.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="87d94-102"><xref:System.Net.Http.HttpClient>類別執行個體做為傳送 HTTP 要求的工作階段。</span><span class="sxs-lookup"><span data-stu-id="87d94-102">The <xref:System.Net.Http.HttpClient> class instance acts as a session to send HTTP requests.</span></span> <span data-ttu-id="87d94-103"><xref:System.Net.Http.HttpClient>執行個體是設定套用至該執行個體所執行的所有要求的集合。</span><span class="sxs-lookup"><span data-stu-id="87d94-103">An <xref:System.Net.Http.HttpClient> instance is a collection of settings applied to all requests executed by that instance.</span></span> <span data-ttu-id="87d94-104">此外，每個<xref:System.Net.Http.HttpClient>執行個體會使用自己的連接集區，隔離其源自執行其他要求<xref:System.Net.Http.HttpClient>執行個體。</span><span class="sxs-lookup"><span data-stu-id="87d94-104">In addition, every <xref:System.Net.Http.HttpClient> instance uses its own connection pool, isolating its requests from requests executed by other <xref:System.Net.Http.HttpClient> instances.</span></span>  
  
 <span data-ttu-id="87d94-105"><xref:System.Net.Http.HttpClient>也會做為更特定的 HTTP 用戶端的基底類別。</span><span class="sxs-lookup"><span data-stu-id="87d94-105">The <xref:System.Net.Http.HttpClient> also acts as a base class for more specific HTTP clients.</span></span> <span data-ttu-id="87d94-106">範例就是提供特定的 Facebook web 服務的其他方法 FacebookHttpClient (GetFriends 方法，執行個體)。</span><span class="sxs-lookup"><span data-stu-id="87d94-106">An example would be a FacebookHttpClient providing additional methods specific to a Facebook web service (a GetFriends method, for instance).</span></span> <span data-ttu-id="87d94-107">在衍生的類別不應該覆寫類別上的虛擬方法。</span><span class="sxs-lookup"><span data-stu-id="87d94-107">Derived classes should not override the virtual methods on the class.</span></span> <span data-ttu-id="87d94-108">請改用可接受的建構函式多載<xref:System.Net.Http.HttpMessageHandler>設定任何前置或後的要求處理改為。</span><span class="sxs-lookup"><span data-stu-id="87d94-108">Instead, use a constructor overload that accepts <xref:System.Net.Http.HttpMessageHandler> to configure any pre- or post-request processing instead.</span></span>
  
 <span data-ttu-id="87d94-109">根據預設，<xref:System.Net.HttpWebRequest>將用來將要求傳送至伺服器。</span><span class="sxs-lookup"><span data-stu-id="87d94-109">By default, <xref:System.Net.HttpWebRequest> will be used to send requests to the server.</span></span> <span data-ttu-id="87d94-110">可以修改此行為，藉由指定不同的通道，其中一種建構函式多載採用<xref:System.Net.Http.HttpMessageHandler>做為參數的執行個體。</span><span class="sxs-lookup"><span data-stu-id="87d94-110">This behavior can be modified by specifying a different channel in one of the constructor overloads taking a <xref:System.Net.Http.HttpMessageHandler> instance as parameter.</span></span> <span data-ttu-id="87d94-111">如果需要，功能，例如驗證或快取<xref:System.Net.Http.WebRequestHandler>可以用來設定和執行個體傳遞至建構函式。</span><span class="sxs-lookup"><span data-stu-id="87d94-111">If features like authentication or caching are required, <xref:System.Net.Http.WebRequestHandler> can be used to configure settings and the instance can be passed to the constructor.</span></span> <span data-ttu-id="87d94-112">傳回的處理常式可以傳遞至其中一個建構函式多載採用<xref:System.Net.Http.HttpMessageHandler>參數。</span><span class="sxs-lookup"><span data-stu-id="87d94-112">The returned handler can be passed to one of the constructor overloads taking a <xref:System.Net.Http.HttpMessageHandler> parameter.</span></span>  
  
 <span data-ttu-id="87d94-113">如果應用程式使用<xref:System.Net.Http.HttpClient>和相關類別中的<xref:System.Net.Http>命名空間所要下載大量的資料 （50 mb 或以上），則應用程式應該串流處理這些下載項目並不會使用預設的緩衝處理。</span><span class="sxs-lookup"><span data-stu-id="87d94-113">If an app using <xref:System.Net.Http.HttpClient> and related classes in the  <xref:System.Net.Http> namespace intends to download large amounts of data (50 megabytes or more), then the app should stream those downloads and not use the default buffering.</span></span> <span data-ttu-id="87d94-114">如果使用預設的緩衝處理的用戶端記憶體使用量會很大，而且可能會大幅導致效能降低。</span><span class="sxs-lookup"><span data-stu-id="87d94-114">If the default buffering is used the client memory usage will get very large, potentially resulting in substantially reduced performance.</span></span>  
  
 <span data-ttu-id="87d94-115">具備執行緒安全的方法如下：</span><span class="sxs-lookup"><span data-stu-id="87d94-115">The following methods are thread safe:</span></span>  
  
1.  <xref:System.Net.Http.HttpClient.CancelPendingRequests%2A>  
  
2.  <xref:System.Net.Http.HttpClient.DeleteAsync%2A>  
  
3.  <xref:System.Net.Http.HttpClient.GetAsync%2A>  
  
4.  <xref:System.Net.Http.HttpClient.GetByteArrayAsync%2A>  
  
5.  <xref:System.Net.Http.HttpClient.GetStreamAsync%2A>  
  
6.  <xref:System.Net.Http.HttpClient.GetStringAsync%2A>  
  
7.  <xref:System.Net.Http.HttpClient.PostAsync%2A>  
  
8.  <xref:System.Net.Http.HttpClient.PutAsync%2A>  
  
9. <xref:System.Net.Http.HttpClient.SendAsync%2A>  
  
 <span data-ttu-id="87d94-116"><xref:System.Net.Http.HttpClient> 被要具現化一次和存留期的應用程式內重複使用。</span><span class="sxs-lookup"><span data-stu-id="87d94-116"><xref:System.Net.Http.HttpClient> is intended to be instantiated once and re-used throughout the life of an application.</span></span> <span data-ttu-id="87d94-117">每個要求的 HttpClient 類別具現化會耗盡載量下可用的通訊端數目。</span><span class="sxs-lookup"><span data-stu-id="87d94-117">Instantiating an HttpClient class for every request will exhaust the number of sockets available under heavy loads.</span></span> <span data-ttu-id="87d94-118">這會導致 SocketException 錯誤。</span><span class="sxs-lookup"><span data-stu-id="87d94-118">This will result in SocketException errors.</span></span> <span data-ttu-id="87d94-119">以下是正確地使用 HttpClient 範例。</span><span class="sxs-lookup"><span data-stu-id="87d94-119">Below is an example using HttpClient correctly.</span></span>  
  
```csharp  
public class GoodController : ApiController  
{  
    // OK  
    private static readonly HttpClient HttpClient;  
  
    static GoodController()  
    {  
        HttpClient = new HttpClient();  
    }  
}  
  
```  
  
<span data-ttu-id="87d94-120"><xref:System.Net.Http.HttpClient>是包裝在每個平台可用的較低層級功能，其執行所在的高層級 API。</span><span class="sxs-lookup"><span data-stu-id="87d94-120">The <xref:System.Net.Http.HttpClient> is a high-level API that wraps the lower-level functionality available on each platform where it runs.</span></span>

<span data-ttu-id="87d94-121">每個平台上，<xref:System.Net.Http.HttpClient>便會嘗試使用最適合的可用傳輸：</span><span class="sxs-lookup"><span data-stu-id="87d94-121">On each platform, <xref:System.Net.Http.HttpClient> tries to use the best available transport:</span></span>

| <span data-ttu-id="87d94-122">**主機/執行階段**</span><span class="sxs-lookup"><span data-stu-id="87d94-122">**Host/Runtime**</span></span>            | <span data-ttu-id="87d94-123">**後端**</span><span class="sxs-lookup"><span data-stu-id="87d94-123">**Backend**</span></span>                                                                               |
| --------------------------- | ----------------------------------------------------------------------------------------- |
| <span data-ttu-id="87d94-124">Windows/.NET Framework</span><span class="sxs-lookup"><span data-stu-id="87d94-124">Windows/.NET Framework</span></span>      | <xref:System.Net.HttpWebRequest>                                                          |
| <span data-ttu-id="87d94-125">Windows/單聲道</span><span class="sxs-lookup"><span data-stu-id="87d94-125">Windows/Mono</span></span>                | <xref:System.Net.HttpWebRequest>                                                          |
| <span data-ttu-id="87d94-126">Windows/UWP</span><span class="sxs-lookup"><span data-stu-id="87d94-126">Windows/UWP</span></span>                 | <span data-ttu-id="87d94-127">Windows 原生<xref:System.Net.Http.WinHttpHandler>(支援 HTTP 2.0)</span><span class="sxs-lookup"><span data-stu-id="87d94-127">Windows native <xref:System.Net.Http.WinHttpHandler> (HTTP 2.0 capable)</span></span>                   |
| <span data-ttu-id="87d94-128">Windows/.NET Core</span><span class="sxs-lookup"><span data-stu-id="87d94-128">Windows/.NET Core</span></span>           | <span data-ttu-id="87d94-129">Windows 原生<xref:System.Net.Http.WinHttpHandler>(支援 HTTP 2.0)</span><span class="sxs-lookup"><span data-stu-id="87d94-129">Windows native <xref:System.Net.Http.WinHttpHandler> (HTTP 2.0 capable)</span></span>                   |
| <span data-ttu-id="87d94-130">Android/Xamarin</span><span class="sxs-lookup"><span data-stu-id="87d94-130">Android/Xamarin</span></span>             | <span data-ttu-id="87d94-131">選取此選項，在建置階段。</span><span class="sxs-lookup"><span data-stu-id="87d94-131">Selected at build-time.</span></span> <span data-ttu-id="87d94-132">可以使用<xref:System.Net.HttpWebRequest>或設定為使用 Android 的原生 [`HttpURLConnection`](https://developer.xamarin.com/api/type/Java.Net.HttpURLConnection/)</span><span class="sxs-lookup"><span data-stu-id="87d94-132">Can either use <xref:System.Net.HttpWebRequest> or be configured to use Android's native [`HttpURLConnection`](https://developer.xamarin.com/api/type/Java.Net.HttpURLConnection/)</span></span> |
| <span data-ttu-id="87d94-133">iOS、 tvOS、 watchOS/Xamarin</span><span class="sxs-lookup"><span data-stu-id="87d94-133">iOS, tvOS, watchOS/Xamarin</span></span>  | <span data-ttu-id="87d94-134">選取此選項，在建置階段。</span><span class="sxs-lookup"><span data-stu-id="87d94-134">Selected at build-time.</span></span> <span data-ttu-id="87d94-135">可以使用<xref:System.Net.HttpWebRequest>或設定要使用 Apple [ `NSUrlSession` ](https://developer.xamarin.com/api/type/MonoTouch.Foundation.NSUrlSession/) (支援 HTTP 2.0)</span><span class="sxs-lookup"><span data-stu-id="87d94-135">Can either use <xref:System.Net.HttpWebRequest> or be configured to use Apple's [`NSUrlSession`](https://developer.xamarin.com/api/type/MonoTouch.Foundation.NSUrlSession/) (HTTP 2.0 capable)</span></span> |
| <span data-ttu-id="87d94-136">macOS/Xamarin</span><span class="sxs-lookup"><span data-stu-id="87d94-136">macOS/Xamarin</span></span>               | <span data-ttu-id="87d94-137">選取此選項，在建置階段。</span><span class="sxs-lookup"><span data-stu-id="87d94-137">Selected at build-time.</span></span> <span data-ttu-id="87d94-138">可以使用<xref:System.Net.HttpWebRequest>或設定要使用 Apple [ `NSUrlSession` ](https://developer.xamarin.com/api/type/MonoTouch.Foundation.NSUrlSession/) (支援 HTTP 2.0)</span><span class="sxs-lookup"><span data-stu-id="87d94-138">Can either use <xref:System.Net.HttpWebRequest> or be configured to use Apple's [`NSUrlSession`](https://developer.xamarin.com/api/type/MonoTouch.Foundation.NSUrlSession/) (HTTP 2.0 capable)</span></span> |
| <span data-ttu-id="87d94-139">macOS/Mono</span><span class="sxs-lookup"><span data-stu-id="87d94-139">macOS/Mono</span></span>                  | <xref:System.Net.HttpWebRequest>                                                                          |
| <span data-ttu-id="87d94-140">macOS/.NET Core</span><span class="sxs-lookup"><span data-stu-id="87d94-140">macOS/.NET Core</span></span>             | <span data-ttu-id="87d94-141">`libcurl`-基礎 HTTP 傳輸 (支援 HTTP 2.0)</span><span class="sxs-lookup"><span data-stu-id="87d94-141">`libcurl`-based HTTP transport (HTTP 2.0 capable)</span></span>                                         |
| <span data-ttu-id="87d94-142">Linux/單聲道</span><span class="sxs-lookup"><span data-stu-id="87d94-142">Linux/Mono</span></span>                  | <xref:System.Net.HttpWebRequest>                                                          |
| <span data-ttu-id="87d94-143">Linux/.NET Core</span><span class="sxs-lookup"><span data-stu-id="87d94-143">Linux/.NET Core</span></span>             | <span data-ttu-id="87d94-144">`libcurl`-基礎 HTTP 傳輸 (支援 HTTP 2.0)</span><span class="sxs-lookup"><span data-stu-id="87d94-144">`libcurl`-based HTTP transport (HTTP 2.0 capable)</span></span>                                         |

<span data-ttu-id="87d94-145">使用者也可以設定的特定傳輸<xref:System.Net.Http.HttpClient>叫用<xref:System.Net.Http.HttpClient.%23ctor*>建構函式<xref:System.Net.Http.HttpMessageHandler>。</span><span class="sxs-lookup"><span data-stu-id="87d94-145">Users can also configure a specific transport for <xref:System.Net.Http.HttpClient> by invoking the <xref:System.Net.Http.HttpClient.%23ctor*> constructor that takes an <xref:System.Net.Http.HttpMessageHandler>.</span></span>

### <a name="httpclient-and-net-core"></a><span data-ttu-id="87d94-146">HttpClient 和.NET 核心</span><span class="sxs-lookup"><span data-stu-id="87d94-146">HttpClient and .NET Core</span></span>

<span data-ttu-id="87d94-147">開始使用.NET 核心 2.1，<xref:System.Net.Http.SocketsHttpHandler?displayProperty=nameWithType>類別而不是`HttpClientHandler`提供這類的使用更高層級的 HTTP 網路類別的實作`HttpClient`。</span><span class="sxs-lookup"><span data-stu-id="87d94-147">Starting with .NET Core 2.1, the <xref:System.Net.Http.SocketsHttpHandler?displayProperty=nameWithType> class instead of `HttpClientHandler` provides the implementation used by higher-level HTTP networking classes such as `HttpClient`.</span></span> <span data-ttu-id="87d94-148">您可以設定應用程式使用舊版<xref:System.Net.Http.HttpClientHandler?displayProperty=nameWithType>改為藉由呼叫<xref:System.AppContext.SetSwitch%2A>方法，如下所示：</span><span class="sxs-lookup"><span data-stu-id="87d94-148">You can configure your application to use the older <xref:System.Net.Http.HttpClientHandler?displayProperty=nameWithType> instead by calling the <xref:System.AppContext.SetSwitch%2A> method as follows:</span></span>

```csharp
AppContext.SetSwitch("System.Net.Http.useSocketsHttpHandler", false);
```
```vb
AppContext.SetSwitch("System.Net.Http.useSocketsHttpHandler", False)
``` 
  
## Examples  
 [!code-csharp[System.Net.Http.HttpClient#1](~/samples/snippets/csharp/VS_Snippets_Misc/system.net.http.httpclient/cs/source.cs#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="87d94-149">初始化 <see cref="T:System.Net.Http.HttpClient" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-149">Initializes a new instance of the <see cref="T:System.Net.Http.HttpClient" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="87d94-150"><xref:System.Net.Http.HttpClient> 被要具現化一次和存留期的應用程式內重複使用。</span><span class="sxs-lookup"><span data-stu-id="87d94-150"><xref:System.Net.Http.HttpClient> is intended to be instantiated once and re-used throughout the life of an application.</span></span> <span data-ttu-id="87d94-151">每個要求的 HttpClient 類別具現化會耗盡載量下可用的通訊端數目。</span><span class="sxs-lookup"><span data-stu-id="87d94-151">Instantiating an HttpClient class for every request will exhaust the number of sockets available under heavy loads.</span></span> <span data-ttu-id="87d94-152">這會導致 SocketException 錯誤。</span><span class="sxs-lookup"><span data-stu-id="87d94-152">This will result in SocketException errors.</span></span> <span data-ttu-id="87d94-153">以下是正確地使用 HttpClient 範例。</span><span class="sxs-lookup"><span data-stu-id="87d94-153">Below is an example using HttpClient correctly.</span></span>  
  
```csharp  
public class GoodController : ApiController  
{  
    // OK  
    private static readonly HttpClient HttpClient;  
  
    static GoodController()  
    {  
        HttpClient = new HttpClient();  
    }  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpClient ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpClient();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="87d94-154">初始化 <see cref="T:System.Net.Http.HttpClient" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-154">Initializes a new instance of the <see cref="T:System.Net.Http.HttpClient" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpClient (System.Net.Http.HttpMessageHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.Http.HttpMessageHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.#ctor(System.Net.Http.HttpMessageHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (handler As HttpMessageHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpClient(System::Net::Http::HttpMessageHandler ^ handler);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="handler" Type="System.Net.Http.HttpMessageHandler" />
      </Parameters>
      <Docs>
        <param name="handler">
          <span data-ttu-id="87d94-155">要用來傳送要求的 HTTP 處理常式堆疊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-155">The HTTP handler stack to use for sending requests.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="87d94-156">使用特定處理常式，初始化 <see cref="T:System.Net.Http.HttpClient" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-156">Initializes a new instance of the <see cref="T:System.Net.Http.HttpClient" /> class with a specific handler.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="87d94-157">`handler` 會藉由呼叫處置[HttpClient.Dispose](xref:System.Net.Http.HttpMessageInvoker.Dispose)。</span><span class="sxs-lookup"><span data-stu-id="87d94-157">`handler` will be disposed of by calling [HttpClient.Dispose](xref:System.Net.Http.HttpMessageInvoker.Dispose).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="87d94-158">
            <paramref name="handler" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-158">The <paramref name="handler" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpClient (System.Net.Http.HttpMessageHandler handler, bool disposeHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.Http.HttpMessageHandler handler, bool disposeHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.#ctor(System.Net.Http.HttpMessageHandler,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (handler As HttpMessageHandler, disposeHandler As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpClient(System::Net::Http::HttpMessageHandler ^ handler, bool disposeHandler);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="handler" Type="System.Net.Http.HttpMessageHandler" />
        <Parameter Name="disposeHandler" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="handler">
          <span data-ttu-id="87d94-159">負責處理 HTTP 回應訊息的 <see cref="T:System.Net.Http.HttpMessageHandler" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-159">The <see cref="T:System.Net.Http.HttpMessageHandler" /> responsible for processing the HTTP response messages.</span>
          </span>
        </param>
        <param name="disposeHandler">
          <span data-ttu-id="87d94-160">如果內部處理常式應由 [HttpClient.Dispose] (xref:System.Net.Http.HttpMessageInvoker.Dispose) 處置，則為 <see langword="true" />；如果您想要重複使用內部處理常式，則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-160">
              <see langword="true" /> if the inner handler should be disposed of by [HttpClient.Dispose](xref:System.Net.Http.HttpMessageInvoker.Dispose), <see langword="false" /> if you intend to reuse the inner handler.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="87d94-161">使用特定處理常式，初始化 <see cref="T:System.Net.Http.HttpClient" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-161">Initializes a new instance of the <see cref="T:System.Net.Http.HttpClient" /> class with a specific handler.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="87d94-162">
            <paramref name="handler" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-162">The <paramref name="handler" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BaseAddress">
      <MemberSignature Language="C#" Value="public Uri BaseAddress { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri BaseAddress" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClient.BaseAddress" />
      <MemberSignature Language="VB.NET" Value="Public Property BaseAddress As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ BaseAddress { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="87d94-163">取得或設定傳送要求時所使用之網際網路資源的統一資源識別元 (URI) 基底位址。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-163">Gets or sets the base address of Uniform Resource Identifier (URI) of the Internet resource used when sending requests.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="87d94-164">傳送要求時所使用之網際網路資源的統一資源識別元 (URI) 基底位址。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-164">The base address of Uniform Resource Identifier (URI) of the Internet resource used when sending requests.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="87d94-165">當傳送<xref:System.Net.Http.HttpRequestMessage>與相對 Uri，在訊息 Uri 將會加入至<xref:System.Net.Http.HttpClient.BaseAddress%2A>屬性以建立絕對 Uri。</span><span class="sxs-lookup"><span data-stu-id="87d94-165">When sending a <xref:System.Net.Http.HttpRequestMessage> with a relative Uri, the message Uri will be added to the <xref:System.Net.Http.HttpClient.BaseAddress%2A> property to create an absolute Uri.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelPendingRequests">
      <MemberSignature Language="C#" Value="public void CancelPendingRequests ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CancelPendingRequests() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.CancelPendingRequests" />
      <MemberSignature Language="VB.NET" Value="Public Sub CancelPendingRequests ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CancelPendingRequests();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="87d94-166">取消這個執行個體上的所有暫止要求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-166">Cancel all pending requests on this instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="87d94-167">呼叫這個方法後,<xref:System.Net.Http.HttpClient>執行個體仍可用來執行其他的要求。</span><span class="sxs-lookup"><span data-stu-id="87d94-167">After calling this method, the <xref:System.Net.Http.HttpClient> instance can still be used to execute additional requests.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultRequestHeaders">
      <MemberSignature Language="C#" Value="public System.Net.Http.Headers.HttpRequestHeaders DefaultRequestHeaders { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Http.Headers.HttpRequestHeaders DefaultRequestHeaders" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClient.DefaultRequestHeaders" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DefaultRequestHeaders As HttpRequestHeaders" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Http::Headers::HttpRequestHeaders ^ DefaultRequestHeaders { System::Net::Http::Headers::HttpRequestHeaders ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Http.Headers.HttpRequestHeaders</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="87d94-168">取得應該在每個要求中傳送的標頭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-168">Gets the headers which should be sent with each request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="87d94-169">應該藉由每個要求傳送的標頭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-169">The headers which should be sent with each request.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="87d94-170">這個屬性上設定的標頭，不需要再次設定要求訊息上。</span><span class="sxs-lookup"><span data-stu-id="87d94-170">Headers set on this property don't need to be set on request messages again.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DeleteAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="87d94-171">以非同步作業的方式，將 DELETE 要求傳送至指定的 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-171">Send a DELETE request to the specified Uri as an asynchronous operation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DeleteAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; DeleteAsync (string requestUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; DeleteAsync(string requestUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.DeleteAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function DeleteAsync (requestUri As String) As Task(Of HttpResponseMessage)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ DeleteAsync(System::String ^ requestUri);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="requestUri">
          <span data-ttu-id="87d94-172">傳送要求的目標 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-172">The Uri the request is sent to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="87d94-173">以非同步作業的方式，將 DELETE 要求傳送至指定的 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-173">Send a DELETE request to the specified Uri as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="87d94-174">工作物件，表示非同步作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-174">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="87d94-175">這項作業不會封鎖。</span><span class="sxs-lookup"><span data-stu-id="87d94-175">This operation will not block.</span></span> <span data-ttu-id="87d94-176">傳回的 <xref:System.Threading.Tasks.Task%601> 物件會在讀取完整的回應 (包括內容) 之後完成。</span><span class="sxs-lookup"><span data-stu-id="87d94-176">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the whole response (including content) is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="87d94-177">
            <paramref name="requestUri" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-177">The <paramref name="requestUri" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="87d94-178">要求訊息已經透過 <see cref="T:System.Net.Http.HttpClient" /> 執行個體傳送。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-178">The request message was already sent by the <see cref="T:System.Net.Http.HttpClient" /> instance.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
          <span data-ttu-id="87d94-179">要求已因基本問題 (例如網路連線、DNS 失敗、伺服器憑證驗證或逾時) 而失敗。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-179">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; DeleteAsync (Uri requestUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; DeleteAsync(class System.Uri requestUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.DeleteAsync(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function DeleteAsync (requestUri As Uri) As Task(Of HttpResponseMessage)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ DeleteAsync(Uri ^ requestUri);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="requestUri">
          <span data-ttu-id="87d94-180">傳送要求的目標 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-180">The Uri the request is sent to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="87d94-181">以非同步作業的方式，將 DELETE 要求傳送至指定的 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-181">Send a DELETE request to the specified Uri as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="87d94-182">工作物件，表示非同步作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-182">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="87d94-183">這項作業不會封鎖。</span><span class="sxs-lookup"><span data-stu-id="87d94-183">This operation will not block.</span></span> <span data-ttu-id="87d94-184">傳回的 <xref:System.Threading.Tasks.Task%601> 物件會在讀取完整的回應 (包括內容) 之後完成。</span><span class="sxs-lookup"><span data-stu-id="87d94-184">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the whole response (including content) is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="87d94-185">
            <paramref name="requestUri" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-185">The <paramref name="requestUri" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="87d94-186">要求訊息已經透過 <see cref="T:System.Net.Http.HttpClient" /> 執行個體傳送。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-186">The request message was already sent by the <see cref="T:System.Net.Http.HttpClient" /> instance.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
          <span data-ttu-id="87d94-187">要求已因基本問題 (例如網路連線、DNS 失敗、伺服器憑證驗證或逾時) 而失敗。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-187">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; DeleteAsync (string requestUri, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; DeleteAsync(string requestUri, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.DeleteAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ DeleteAsync(System::String ^ requestUri, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="requestUri">
          <span data-ttu-id="87d94-188">傳送要求的目標 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-188">The Uri the request is sent to.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="87d94-189">取消語彙基元，可由其他物件或執行緒用來接收取消通知。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-189">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="87d94-190">以非同步作業的方式，傳送 DELETE 要求和取消權杖至指定的 Uri。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-190">Send a DELETE request to the specified Uri with a cancellation token as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="87d94-191">工作物件，表示非同步作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-191">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="87d94-192">這項作業不會封鎖。</span><span class="sxs-lookup"><span data-stu-id="87d94-192">This operation will not block.</span></span> <span data-ttu-id="87d94-193">傳回的 <xref:System.Threading.Tasks.Task%601> 物件會在讀取完整的回應 (包括內容) 之後完成。</span><span class="sxs-lookup"><span data-stu-id="87d94-193">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the whole response (including content) is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="87d94-194">
            <paramref name="requestUri" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-194">The <paramref name="requestUri" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="87d94-195">要求訊息已經透過 <see cref="T:System.Net.Http.HttpClient" /> 執行個體傳送。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-195">The request message was already sent by the <see cref="T:System.Net.Http.HttpClient" /> instance.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
          <span data-ttu-id="87d94-196">要求已因基本問題 (例如網路連線、DNS 失敗、伺服器憑證驗證或逾時) 而失敗。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-196">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; DeleteAsync (Uri requestUri, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; DeleteAsync(class System.Uri requestUri, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.DeleteAsync(System.Uri,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ DeleteAsync(Uri ^ requestUri, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.Uri" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="requestUri">
          <span data-ttu-id="87d94-197">傳送要求的目標 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-197">The Uri the request is sent to.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="87d94-198">取消語彙基元，可由其他物件或執行緒用來接收取消通知。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-198">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="87d94-199">以非同步作業的方式，傳送 DELETE 要求和取消權杖至指定的 Uri。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-199">Send a DELETE request to the specified Uri with a cancellation token as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="87d94-200">工作物件，表示非同步作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-200">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="87d94-201">這項作業不會封鎖。</span><span class="sxs-lookup"><span data-stu-id="87d94-201">This operation will not block.</span></span> <span data-ttu-id="87d94-202">傳回的 <xref:System.Threading.Tasks.Task%601> 物件會在讀取完整的回應 (包括內容) 之後完成。</span><span class="sxs-lookup"><span data-stu-id="87d94-202">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the whole response (including content) is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="87d94-203">
            <paramref name="requestUri" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-203">The <paramref name="requestUri" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="87d94-204">要求訊息已經透過 <see cref="T:System.Net.Http.HttpClient" /> 執行個體傳送。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-204">The request message was already sent by the <see cref="T:System.Net.Http.HttpClient" /> instance.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
          <span data-ttu-id="87d94-205">要求已因基本問題 (例如網路連線、DNS 失敗、伺服器憑證驗證或逾時) 而失敗。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-205">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="87d94-206">
            <see langword="true" /> 表示會同時釋放 Managed 和 Unmanaged 資源；<see langword="false" /> 則表示只釋放 Unmanaged 資源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-206">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to releases only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="87d94-207">釋放 <see cref="T:System.Net.Http.HttpClient" /> 所使用的 Unmanaged 資源，並選擇性處置 Managed 資源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-207">Releases the unmanaged resources used by the <see cref="T:System.Net.Http.HttpClient" /> and optionally disposes of the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="87d94-208">這個方法會呼叫公用`Dispose()`方法和<xref:System.Object.Finalize%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="87d94-208">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="87d94-209">`Dispose()` 叫用受保護`Dispose(Boolean)`方法`disposing`參數設定為`true`。</span><span class="sxs-lookup"><span data-stu-id="87d94-209">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="87d94-210"><xref:System.Object.Finalize%2A> 叫用`Dispose`與`disposing`設`false`。</span><span class="sxs-lookup"><span data-stu-id="87d94-210"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="87d94-211">`disposing` 參數為 `true` 時，這個方法會釋放 <xref:System.Net.Http.HttpClient> 參考的任何 Managed 物件所掌握的資源。</span><span class="sxs-lookup"><span data-stu-id="87d94-211">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Net.Http.HttpClient> references.</span></span> <span data-ttu-id="87d94-212">這個方法會叫用每個參考物件的 `Dispose()` 方法。</span><span class="sxs-lookup"><span data-stu-id="87d94-212">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 <span data-ttu-id="87d94-213">呼叫這個方法時，<xref:System.Net.Http.HttpClient.CancelPendingRequests%2A>呼叫方法來中止所有暫止要求。</span><span class="sxs-lookup"><span data-stu-id="87d94-213">When this method is called, the <xref:System.Net.Http.HttpClient.CancelPendingRequests%2A> method is called to abort all pending requests.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="87d94-214">以非同步作業的方式，將 GET 要求傳送至指定的 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-214">Send a GET request to the specified Uri as an asynchronous operation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="87d94-215">作業不會封鎖。</span><span class="sxs-lookup"><span data-stu-id="87d94-215">The operation will not block.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; GetAsync (string requestUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; GetAsync(string requestUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.GetAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAsync (requestUri As String) As Task(Of HttpResponseMessage)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ GetAsync(System::String ^ requestUri);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="requestUri">
          <span data-ttu-id="87d94-216">傳送要求的目標 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-216">The Uri the request is sent to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="87d94-217">以非同步作業的方式，將 GET 要求傳送至指定的 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-217">Send a GET request to the specified Uri as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="87d94-218">工作物件，表示非同步作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-218">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="87d94-219">這項作業不會封鎖。</span><span class="sxs-lookup"><span data-stu-id="87d94-219">This operation will not block.</span></span> <span data-ttu-id="87d94-220">傳回的 <xref:System.Threading.Tasks.Task%601> 物件會在讀取完整的回應 (包括內容) 之後完成。</span><span class="sxs-lookup"><span data-stu-id="87d94-220">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the whole response (including content) is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="87d94-221">
            <paramref name="requestUri" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-221">The <paramref name="requestUri" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
          <span data-ttu-id="87d94-222">要求已因基本問題 (例如網路連線、DNS 失敗、伺服器憑證驗證或逾時) 而失敗。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-222">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; GetAsync (Uri requestUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; GetAsync(class System.Uri requestUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.GetAsync(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAsync (requestUri As Uri) As Task(Of HttpResponseMessage)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ GetAsync(Uri ^ requestUri);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="requestUri">
          <span data-ttu-id="87d94-223">傳送要求的目標 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-223">The Uri the request is sent to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="87d94-224">以非同步作業的方式，將 GET 要求傳送至指定的 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-224">Send a GET request to the specified Uri as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="87d94-225">工作物件，表示非同步作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-225">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="87d94-226">這項作業不會封鎖。</span><span class="sxs-lookup"><span data-stu-id="87d94-226">This operation will not block.</span></span> <span data-ttu-id="87d94-227">傳回的 <xref:System.Threading.Tasks.Task%601> 物件會在讀取完整的回應 (包括內容) 之後完成。</span><span class="sxs-lookup"><span data-stu-id="87d94-227">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the whole response (including content) is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="87d94-228">
            <paramref name="requestUri" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-228">The <paramref name="requestUri" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
          <span data-ttu-id="87d94-229">要求已因基本問題 (例如網路連線、DNS 失敗、伺服器憑證驗證或逾時) 而失敗。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-229">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; GetAsync (string requestUri, System.Net.Http.HttpCompletionOption completionOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; GetAsync(string requestUri, valuetype System.Net.Http.HttpCompletionOption completionOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.GetAsync(System.String,System.Net.Http.HttpCompletionOption)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAsync (requestUri As String, completionOption As HttpCompletionOption) As Task(Of HttpResponseMessage)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ GetAsync(System::String ^ requestUri, System::Net::Http::HttpCompletionOption completionOption);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.String" />
        <Parameter Name="completionOption" Type="System.Net.Http.HttpCompletionOption" />
      </Parameters>
      <Docs>
        <param name="requestUri">
          <span data-ttu-id="87d94-230">傳送要求的目標 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-230">The Uri the request is sent to.</span>
          </span>
        </param>
        <param name="completionOption">
          <span data-ttu-id="87d94-231">HTTP 完成選項值，表示作業應該被視為已完成。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-231">An HTTP completion option value that indicates when the operation should be considered completed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="87d94-232">以非同步作業的方式，傳送 GET 要求和 HTTP 完成選項至指定的 Uri。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-232">Send a GET request to the specified Uri with an HTTP completion option as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="87d94-233">工作物件，表示非同步作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-233">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="87d94-234">這項作業不會封鎖。</span><span class="sxs-lookup"><span data-stu-id="87d94-234">This operation will not block.</span></span> <span data-ttu-id="87d94-235">傳回的 <xref:System.Threading.Tasks.Task%601> 物件何時完成，將在讀取部分或所有回應 (包括內容) 之後，根據 `completionOption` 參數決定。</span><span class="sxs-lookup"><span data-stu-id="87d94-235">The returned <xref:System.Threading.Tasks.Task%601> object will complete based on the `completionOption` parameter after the part or all of the response (including content) is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="87d94-236">
            <paramref name="requestUri" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-236">The <paramref name="requestUri" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
          <span data-ttu-id="87d94-237">要求已因基本問題 (例如網路連線、DNS 失敗、伺服器憑證驗證或逾時) 而失敗。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-237">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; GetAsync (string requestUri, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; GetAsync(string requestUri, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.GetAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ GetAsync(System::String ^ requestUri, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="requestUri">
          <span data-ttu-id="87d94-238">傳送要求的目標 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-238">The Uri the request is sent to.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="87d94-239">取消語彙基元，可由其他物件或執行緒用來接收取消通知。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-239">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="87d94-240">以非同步作業的方式，傳送 GET 要求和取消權杖至指定的 Uri。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-240">Send a GET request to the specified Uri with a cancellation token as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="87d94-241">工作物件，表示非同步作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-241">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="87d94-242">這項作業不會封鎖。</span><span class="sxs-lookup"><span data-stu-id="87d94-242">This operation will not block.</span></span> <span data-ttu-id="87d94-243">傳回的 <xref:System.Threading.Tasks.Task%601> 物件會在讀取完整的回應 (包括內容) 之後完成。</span><span class="sxs-lookup"><span data-stu-id="87d94-243">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the whole response (including content) is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="87d94-244">
            <paramref name="requestUri" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-244">The <paramref name="requestUri" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
          <span data-ttu-id="87d94-245">要求已因基本問題 (例如網路連線、DNS 失敗、伺服器憑證驗證或逾時) 而失敗。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-245">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; GetAsync (Uri requestUri, System.Net.Http.HttpCompletionOption completionOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; GetAsync(class System.Uri requestUri, valuetype System.Net.Http.HttpCompletionOption completionOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.GetAsync(System.Uri,System.Net.Http.HttpCompletionOption)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAsync (requestUri As Uri, completionOption As HttpCompletionOption) As Task(Of HttpResponseMessage)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ GetAsync(Uri ^ requestUri, System::Net::Http::HttpCompletionOption completionOption);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.Uri" />
        <Parameter Name="completionOption" Type="System.Net.Http.HttpCompletionOption" />
      </Parameters>
      <Docs>
        <param name="requestUri">
          <span data-ttu-id="87d94-246">傳送要求的目標 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-246">The Uri the request is sent to.</span>
          </span>
        </param>
        <param name="completionOption">
          <span data-ttu-id="87d94-247">HTTP 完成選項值，表示作業應該被視為已完成。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-247">An HTTP completion option value that indicates when the operation should be considered completed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="87d94-248">以非同步作業的方式，傳送 GET 要求和 HTTP 完成選項至指定的 Uri。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-248">Send a GET request to the specified Uri with an HTTP completion option as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="87d94-249">工作物件，表示非同步作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-249">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="87d94-250">這項作業不會封鎖。</span><span class="sxs-lookup"><span data-stu-id="87d94-250">This operation will not block.</span></span> <span data-ttu-id="87d94-251">傳回的 <xref:System.Threading.Tasks.Task%601> 物件何時完成，將在讀取部分或所有回應 (包括內容) 之後，根據 `completionOption` 參數決定。</span><span class="sxs-lookup"><span data-stu-id="87d94-251">The returned <xref:System.Threading.Tasks.Task%601> object will complete based on the `completionOption` parameter after the part or all of the response (including content) is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="87d94-252">
            <paramref name="requestUri" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-252">The <paramref name="requestUri" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
          <span data-ttu-id="87d94-253">要求已因基本問題 (例如網路連線、DNS 失敗、伺服器憑證驗證或逾時) 而失敗。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-253">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; GetAsync (Uri requestUri, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; GetAsync(class System.Uri requestUri, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.GetAsync(System.Uri,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ GetAsync(Uri ^ requestUri, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.Uri" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="requestUri">
          <span data-ttu-id="87d94-254">傳送要求的目標 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-254">The Uri the request is sent to.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="87d94-255">取消語彙基元，可由其他物件或執行緒用來接收取消通知。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-255">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="87d94-256">以非同步作業的方式，傳送 GET 要求和取消權杖至指定的 Uri。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-256">Send a GET request to the specified Uri with a cancellation token as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="87d94-257">工作物件，表示非同步作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-257">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="87d94-258">這項作業不會封鎖。</span><span class="sxs-lookup"><span data-stu-id="87d94-258">This operation will not block.</span></span> <span data-ttu-id="87d94-259">傳回的 <xref:System.Threading.Tasks.Task%601> 物件會在讀取完整的回應 (包括內容) 之後完成。</span><span class="sxs-lookup"><span data-stu-id="87d94-259">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the whole response (including content) is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="87d94-260">
            <paramref name="requestUri" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-260">The <paramref name="requestUri" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
          <span data-ttu-id="87d94-261">要求已因基本問題 (例如網路連線、DNS 失敗、伺服器憑證驗證或逾時) 而失敗。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-261">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; GetAsync (string requestUri, System.Net.Http.HttpCompletionOption completionOption, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; GetAsync(string requestUri, valuetype System.Net.Http.HttpCompletionOption completionOption, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.GetAsync(System.String,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ GetAsync(System::String ^ requestUri, System::Net::Http::HttpCompletionOption completionOption, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.String" />
        <Parameter Name="completionOption" Type="System.Net.Http.HttpCompletionOption" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="requestUri">
          <span data-ttu-id="87d94-262">傳送要求的目標 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-262">The Uri the request is sent to.</span>
          </span>
        </param>
        <param name="completionOption">
          <span data-ttu-id="87d94-263">HTTP 完成選項值，表示作業應該被視為已完成。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-263">An HTTP  completion option value that indicates when the operation should be considered completed.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="87d94-264">取消語彙基元，可由其他物件或執行緒用來接收取消通知。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-264">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="87d94-265">以非同步作業的方式，傳送 GET 要求和 HTTP 完成選項以及取消語彙基元至指定的 Uri。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-265">Send a GET request to the specified Uri with an HTTP completion option and a cancellation token as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="87d94-266">工作物件，表示非同步作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-266">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="87d94-267">這項作業不會封鎖。</span><span class="sxs-lookup"><span data-stu-id="87d94-267">This operation will not block.</span></span> <span data-ttu-id="87d94-268">傳回的 <xref:System.Threading.Tasks.Task%601> 物件何時完成，將在讀取部分或所有回應 (包括內容) 之後，根據 `completionOption` 參數決定。</span><span class="sxs-lookup"><span data-stu-id="87d94-268">The returned <xref:System.Threading.Tasks.Task%601> object will complete based on the `completionOption` parameter after the part or all of the response (including content) is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="87d94-269">
            <paramref name="requestUri" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-269">The <paramref name="requestUri" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
          <span data-ttu-id="87d94-270">要求已因基本問題 (例如網路連線、DNS 失敗、伺服器憑證驗證或逾時) 而失敗。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-270">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; GetAsync (Uri requestUri, System.Net.Http.HttpCompletionOption completionOption, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; GetAsync(class System.Uri requestUri, valuetype System.Net.Http.HttpCompletionOption completionOption, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.GetAsync(System.Uri,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ GetAsync(Uri ^ requestUri, System::Net::Http::HttpCompletionOption completionOption, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.Uri" />
        <Parameter Name="completionOption" Type="System.Net.Http.HttpCompletionOption" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="requestUri">
          <span data-ttu-id="87d94-271">傳送要求的目標 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-271">The Uri the request is sent to.</span>
          </span>
        </param>
        <param name="completionOption">
          <span data-ttu-id="87d94-272">HTTP 完成選項值，表示作業應該被視為已完成。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-272">An HTTP  completion option value that indicates when the operation should be considered completed.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="87d94-273">取消語彙基元，可由其他物件或執行緒用來接收取消通知。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-273">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="87d94-274">以非同步作業的方式，傳送 GET 要求和 HTTP 完成選項以及取消語彙基元至指定的 Uri。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-274">Send a GET request to the specified Uri with an HTTP completion option and a cancellation token as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="87d94-275">工作物件，表示非同步作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-275">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="87d94-276">這項作業不會封鎖。</span><span class="sxs-lookup"><span data-stu-id="87d94-276">This operation will not block.</span></span> <span data-ttu-id="87d94-277">傳回的 <xref:System.Threading.Tasks.Task%601> 物件何時完成，將在讀取部分或所有回應 (包括內容) 之後，根據 `completionOption` 參數決定。</span><span class="sxs-lookup"><span data-stu-id="87d94-277">The returned <xref:System.Threading.Tasks.Task%601> object will complete based on the `completionOption` parameter after the part or all of the response (including content) is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="87d94-278">
            <paramref name="requestUri" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-278">The <paramref name="requestUri" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
          <span data-ttu-id="87d94-279">要求已因基本問題 (例如網路連線、DNS 失敗、伺服器憑證驗證或逾時) 而失敗。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-279">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetByteArrayAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="87d94-280">將 GET 要求傳送至指定的 URI，並透過非同步作業，以位元組陣列形式傳回回應內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-280">Send a GET request to the specified Uri and return the response body as a byte array in an asynchronous operation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="87d94-281">作業不會封鎖。</span><span class="sxs-lookup"><span data-stu-id="87d94-281">The operation will not block.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetByteArrayAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;byte[]&gt; GetByteArrayAsync (string requestUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;unsigned int8[]&gt; GetByteArrayAsync(string requestUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.GetByteArrayAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetByteArrayAsync (requestUri As String) As Task(Of Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;cli::array &lt;System::Byte&gt; ^&gt; ^ GetByteArrayAsync(System::String ^ requestUri);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(System.Net.Http.HttpClient/&lt;GetByteArrayAsync&gt;c__async1))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Byte[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="requestUri">
          <span data-ttu-id="87d94-282">傳送要求的目標 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-282">The Uri the request is sent to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="87d94-283">將 GET 要求傳送至指定的 URI，並透過非同步作業，以位元組陣列形式傳回回應內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-283">Send a GET request to the specified Uri and return the response body as a byte array in an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="87d94-284">工作物件，表示非同步作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-284">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="87d94-285">這項作業不會封鎖。</span><span class="sxs-lookup"><span data-stu-id="87d94-285">This operation will not block.</span></span> <span data-ttu-id="87d94-286">傳回的 <xref:System.Threading.Tasks.Task%601> 物件會在讀取完整的回應主體之後完成。</span><span class="sxs-lookup"><span data-stu-id="87d94-286">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the whole response body is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="87d94-287">
            <paramref name="requestUri" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-287">The <paramref name="requestUri" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
          <span data-ttu-id="87d94-288">要求已因基本問題 (例如網路連線、DNS 失敗、伺服器憑證驗證或逾時) 而失敗。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-288">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetByteArrayAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;byte[]&gt; GetByteArrayAsync (Uri requestUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;unsigned int8[]&gt; GetByteArrayAsync(class System.Uri requestUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.GetByteArrayAsync(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetByteArrayAsync (requestUri As Uri) As Task(Of Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;cli::array &lt;System::Byte&gt; ^&gt; ^ GetByteArrayAsync(Uri ^ requestUri);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(System.Net.Http.HttpClient/&lt;GetByteArrayAsync&gt;c__async2))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Byte[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="requestUri">
          <span data-ttu-id="87d94-289">傳送要求的目標 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-289">The Uri the request is sent to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="87d94-290">將 GET 要求傳送至指定的 URI，並透過非同步作業，以位元組陣列形式傳回回應內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-290">Send a GET request to the specified Uri and return the response body as a byte array in an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="87d94-291">工作物件，表示非同步作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-291">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="87d94-292">這項作業不會封鎖。</span><span class="sxs-lookup"><span data-stu-id="87d94-292">This operation will not block.</span></span> <span data-ttu-id="87d94-293">傳回的 <xref:System.Threading.Tasks.Task%601> 物件會在讀取完整的回應主體之後完成。</span><span class="sxs-lookup"><span data-stu-id="87d94-293">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the whole response body is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="87d94-294">
            <paramref name="requestUri" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-294">The <paramref name="requestUri" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
          <span data-ttu-id="87d94-295">要求已因基本問題 (例如網路連線、DNS 失敗、伺服器憑證驗證或逾時) 而失敗。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-295">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetStreamAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="87d94-296">將 GET 要求傳送至指定的 URI，並透過非同步作業，以資料流形式傳回回應內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-296">Send a GET request to the specified Uri and return the response body as a stream in an asynchronous operation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="87d94-297">作業不會封鎖。</span><span class="sxs-lookup"><span data-stu-id="87d94-297">The operation will not block.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetStreamAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.IO.Stream&gt; GetStreamAsync (string requestUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.IO.Stream&gt; GetStreamAsync(string requestUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.GetStreamAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetStreamAsync (requestUri As String) As Task(Of Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::IO::Stream ^&gt; ^ GetStreamAsync(System::String ^ requestUri);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(System.Net.Http.HttpClient/&lt;GetStreamAsync&gt;c__async3))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.IO.Stream&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="requestUri">
          <span data-ttu-id="87d94-298">傳送要求的目標 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-298">The Uri the request is sent to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="87d94-299">將 GET 要求傳送至指定的 URI，並透過非同步作業，以資料流形式傳回回應內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-299">Send a GET request to the specified Uri and return the response body as a stream in an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="87d94-300">工作物件，表示非同步作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-300">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="87d94-301">這項作業不會封鎖。</span><span class="sxs-lookup"><span data-stu-id="87d94-301">This operation will not block.</span></span> <span data-ttu-id="87d94-302">傳回的 <xref:System.Threading.Tasks.Task%601> 物件會在讀取完整的回應主體之後完成。</span><span class="sxs-lookup"><span data-stu-id="87d94-302">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the whole response body is read.</span></span> <span data-ttu-id="87d94-303">這個方法不緩衝的資料流。</span><span class="sxs-lookup"><span data-stu-id="87d94-303">This method does not buffer the stream.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="87d94-304">
            <paramref name="requestUri" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-304">The <paramref name="requestUri" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
          <span data-ttu-id="87d94-305">要求已因基本問題 (例如網路連線、DNS 失敗、伺服器憑證驗證或逾時) 而失敗。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-305">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetStreamAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.IO.Stream&gt; GetStreamAsync (Uri requestUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.IO.Stream&gt; GetStreamAsync(class System.Uri requestUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.GetStreamAsync(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetStreamAsync (requestUri As Uri) As Task(Of Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::IO::Stream ^&gt; ^ GetStreamAsync(Uri ^ requestUri);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(System.Net.Http.HttpClient/&lt;GetStreamAsync&gt;c__async4))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.IO.Stream&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="requestUri">
          <span data-ttu-id="87d94-306">傳送要求的目標 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-306">The Uri the request is sent to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="87d94-307">將 GET 要求傳送至指定的 URI，並透過非同步作業，以資料流形式傳回回應內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-307">Send a GET request to the specified Uri and return the response body as a stream in an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="87d94-308">工作物件，表示非同步作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-308">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="87d94-309">這項作業不會封鎖。</span><span class="sxs-lookup"><span data-stu-id="87d94-309">This operation will not block.</span></span> <span data-ttu-id="87d94-310">傳回的 <xref:System.Threading.Tasks.Task%601> 物件會在讀取完整的回應主體之後完成。</span><span class="sxs-lookup"><span data-stu-id="87d94-310">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the whole response body is read.</span></span> <span data-ttu-id="87d94-311">這個方法不緩衝的資料流。</span><span class="sxs-lookup"><span data-stu-id="87d94-311">This method does not buffer the stream.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="87d94-312">
            <paramref name="requestUri" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-312">The <paramref name="requestUri" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
          <span data-ttu-id="87d94-313">要求已因基本問題 (例如網路連線、DNS 失敗、伺服器憑證驗證或逾時) 而失敗。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-313">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetStringAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="87d94-314">將 GET 要求傳送至指定的 URI，並透過非同步作業，以字串形式傳回回應內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-314">Send a GET request to the specified Uri and return the response body as a string in an asynchronous operation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="87d94-315">這項作業不會封鎖。</span><span class="sxs-lookup"><span data-stu-id="87d94-315">This operation will not block.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetStringAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;string&gt; GetStringAsync (string requestUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;string&gt; GetStringAsync(string requestUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.GetStringAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetStringAsync (requestUri As String) As Task(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::String ^&gt; ^ GetStringAsync(System::String ^ requestUri);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(System.Net.Http.HttpClient/&lt;GetStringAsync&gt;c__async5))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="requestUri">
          <span data-ttu-id="87d94-316">傳送要求的目標 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-316">The Uri the request is sent to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="87d94-317">將 GET 要求傳送至指定的 URI，並透過非同步作業，以字串形式傳回回應內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-317">Send a GET request to the specified Uri and return the response body as a string in an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="87d94-318">工作物件，表示非同步作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-318">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="87d94-319">這項作業不會封鎖。</span><span class="sxs-lookup"><span data-stu-id="87d94-319">This operation will not block.</span></span> <span data-ttu-id="87d94-320">傳回的 <xref:System.Threading.Tasks.Task%601> 物件會在讀取完整的回應主體之後完成。</span><span class="sxs-lookup"><span data-stu-id="87d94-320">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the whole response body is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="87d94-321">
            <paramref name="requestUri" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-321">The <paramref name="requestUri" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
          <span data-ttu-id="87d94-322">要求已因基本問題 (例如網路連線、DNS 失敗、伺服器憑證驗證或逾時) 而失敗。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-322">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetStringAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;string&gt; GetStringAsync (Uri requestUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;string&gt; GetStringAsync(class System.Uri requestUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.GetStringAsync(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetStringAsync (requestUri As Uri) As Task(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::String ^&gt; ^ GetStringAsync(Uri ^ requestUri);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(System.Net.Http.HttpClient/&lt;GetStringAsync&gt;c__async6))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="requestUri">
          <span data-ttu-id="87d94-323">傳送要求的目標 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-323">The Uri the request is sent to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="87d94-324">將 GET 要求傳送至指定的 URI，並透過非同步作業，以字串形式傳回回應內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-324">Send a GET request to the specified Uri and return the response body as a string in an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="87d94-325">工作物件，表示非同步作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-325">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="87d94-326">這項作業不會封鎖。</span><span class="sxs-lookup"><span data-stu-id="87d94-326">This operation will not block.</span></span> <span data-ttu-id="87d94-327">傳回的 <xref:System.Threading.Tasks.Task%601> 物件會在讀取完整的回應主體之後完成。</span><span class="sxs-lookup"><span data-stu-id="87d94-327">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the whole response body is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="87d94-328">
            <paramref name="requestUri" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-328">The <paramref name="requestUri" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
          <span data-ttu-id="87d94-329">要求已因基本問題 (例如網路連線、DNS 失敗、伺服器憑證驗證或逾時) 而失敗。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-329">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="MaxResponseContentBufferSize">
      <MemberSignature Language="C#" Value="public long MaxResponseContentBufferSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MaxResponseContentBufferSize" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClient.MaxResponseContentBufferSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxResponseContentBufferSize As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long MaxResponseContentBufferSize { long get(); void set(long value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="87d94-330">取得或設定讀取回應內容時要緩衝處理的位元組數目上限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-330">Gets or sets the maximum number of bytes to buffer when reading the response content.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="87d94-331">讀取回應內容時要緩衝處理的位元組數目上限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-331">The maximum number of bytes to buffer when reading the response content.</span>
          </span>
          <span data-ttu-id="87d94-332">此屬性的預設值是 2 GB。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-332">The default value for this property is 2 gigabytes.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="87d94-333">應用程式可以設定<xref:System.Net.Http.HttpClient.MaxResponseContentBufferSize%2A>屬性來限制讀取回應時的回應緩衝區的大小較小的值。</span><span class="sxs-lookup"><span data-stu-id="87d94-333">An app can set the <xref:System.Net.Http.HttpClient.MaxResponseContentBufferSize%2A> property to a lower value to limit the size of the response to buffer when reading the response.</span></span> <span data-ttu-id="87d94-334">回應內容的大小是否大於<xref:System.Net.Http.HttpClient.MaxResponseContentBufferSize%2A>屬性，擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="87d94-334">If the size of the response content is greater than the  <xref:System.Net.Http.HttpClient.MaxResponseContentBufferSize%2A> property, an exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="87d94-335">指定的大小小於或等於零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-335">The size specified is less than or equal to zero.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="87d94-336">作業已經在目前的執行個體上啟動。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-336">An operation has already been started on the current instance.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="87d94-337">目前的執行個體已經過處置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-337">The current instance has been disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="PatchAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; PatchAsync (string requestUri, System.Net.Http.HttpContent content);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; PatchAsync(string requestUri, class System.Net.Http.HttpContent content) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.PatchAsync(System.String,System.Net.Http.HttpContent)" />
      <MemberSignature Language="VB.NET" Value="Public Function PatchAsync (requestUri As String, content As HttpContent) As Task(Of HttpResponseMessage)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ PatchAsync(System::String ^ requestUri, System::Net::Http::HttpContent ^ content);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.String" />
        <Parameter Name="content" Type="System.Net.Http.HttpContent" />
      </Parameters>
      <Docs>
        <param name="requestUri">To be added.</param>
        <param name="content">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PatchAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; PatchAsync (Uri requestUri, System.Net.Http.HttpContent content);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; PatchAsync(class System.Uri requestUri, class System.Net.Http.HttpContent content) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.PatchAsync(System.Uri,System.Net.Http.HttpContent)" />
      <MemberSignature Language="VB.NET" Value="Public Function PatchAsync (requestUri As Uri, content As HttpContent) As Task(Of HttpResponseMessage)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ PatchAsync(Uri ^ requestUri, System::Net::Http::HttpContent ^ content);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.Uri" />
        <Parameter Name="content" Type="System.Net.Http.HttpContent" />
      </Parameters>
      <Docs>
        <param name="requestUri">To be added.</param>
        <param name="content">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PatchAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; PatchAsync (string requestUri, System.Net.Http.HttpContent content, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; PatchAsync(string requestUri, class System.Net.Http.HttpContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.PatchAsync(System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ PatchAsync(System::String ^ requestUri, System::Net::Http::HttpContent ^ content, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.String" />
        <Parameter Name="content" Type="System.Net.Http.HttpContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="requestUri">To be added.</param>
        <param name="content">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PatchAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; PatchAsync (Uri requestUri, System.Net.Http.HttpContent content, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; PatchAsync(class System.Uri requestUri, class System.Net.Http.HttpContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.PatchAsync(System.Uri,System.Net.Http.HttpContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ PatchAsync(Uri ^ requestUri, System::Net::Http::HttpContent ^ content, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.Uri" />
        <Parameter Name="content" Type="System.Net.Http.HttpContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="requestUri">To be added.</param>
        <param name="content">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="PostAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="87d94-338">以非同步作業的方式，將 POST 要求傳送至指定的 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-338">Send a POST request to the specified Uri as an asynchronous operation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="87d94-339">這項作業不會封鎖。</span><span class="sxs-lookup"><span data-stu-id="87d94-339">This operation will not block.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="PostAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; PostAsync (string requestUri, System.Net.Http.HttpContent content);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; PostAsync(string requestUri, class System.Net.Http.HttpContent content) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.PostAsync(System.String,System.Net.Http.HttpContent)" />
      <MemberSignature Language="VB.NET" Value="Public Function PostAsync (requestUri As String, content As HttpContent) As Task(Of HttpResponseMessage)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ PostAsync(System::String ^ requestUri, System::Net::Http::HttpContent ^ content);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.String" />
        <Parameter Name="content" Type="System.Net.Http.HttpContent" />
      </Parameters>
      <Docs>
        <param name="requestUri">
          <span data-ttu-id="87d94-340">傳送要求的目標 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-340">The Uri the request is sent to.</span>
          </span>
        </param>
        <param name="content">
          <span data-ttu-id="87d94-341">傳送至伺服器的 HTTP 要求內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-341">The HTTP request content sent to the server.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="87d94-342">以非同步作業的方式，將 POST 要求傳送至指定的 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-342">Send a POST request to the specified Uri as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="87d94-343">工作物件，表示非同步作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-343">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="87d94-344">這項作業不會封鎖。</span><span class="sxs-lookup"><span data-stu-id="87d94-344">This operation will not block.</span></span> <span data-ttu-id="87d94-345">傳回的 <xref:System.Threading.Tasks.Task%601> 物件會在讀取完整的回應 (包括內容) 之後完成。</span><span class="sxs-lookup"><span data-stu-id="87d94-345">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the whole response (including content) is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="87d94-346">
            <paramref name="requestUri" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-346">The <paramref name="requestUri" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
          <span data-ttu-id="87d94-347">要求已因基本問題 (例如網路連線、DNS 失敗、伺服器憑證驗證或逾時) 而失敗。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-347">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="PostAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; PostAsync (Uri requestUri, System.Net.Http.HttpContent content);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; PostAsync(class System.Uri requestUri, class System.Net.Http.HttpContent content) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.PostAsync(System.Uri,System.Net.Http.HttpContent)" />
      <MemberSignature Language="VB.NET" Value="Public Function PostAsync (requestUri As Uri, content As HttpContent) As Task(Of HttpResponseMessage)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ PostAsync(Uri ^ requestUri, System::Net::Http::HttpContent ^ content);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.Uri" />
        <Parameter Name="content" Type="System.Net.Http.HttpContent" />
      </Parameters>
      <Docs>
        <param name="requestUri">
          <span data-ttu-id="87d94-348">傳送要求的目標 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-348">The Uri the request is sent to.</span>
          </span>
        </param>
        <param name="content">
          <span data-ttu-id="87d94-349">傳送至伺服器的 HTTP 要求內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-349">The HTTP request content sent to the server.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="87d94-350">以非同步作業的方式，將 POST 要求傳送至指定的 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-350">Send a POST request to the specified Uri as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="87d94-351">工作物件，表示非同步作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-351">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="87d94-352">這項作業不會封鎖。</span><span class="sxs-lookup"><span data-stu-id="87d94-352">This operation will not block.</span></span> <span data-ttu-id="87d94-353">傳回的 <xref:System.Threading.Tasks.Task%601> 物件會在讀取完整的回應 (包括內容) 之後完成。</span><span class="sxs-lookup"><span data-stu-id="87d94-353">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the whole response (including content) is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="87d94-354">
            <paramref name="requestUri" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-354">The <paramref name="requestUri" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
          <span data-ttu-id="87d94-355">要求已因基本問題 (例如網路連線、DNS 失敗、伺服器憑證驗證或逾時) 而失敗。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-355">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="PostAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; PostAsync (string requestUri, System.Net.Http.HttpContent content, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; PostAsync(string requestUri, class System.Net.Http.HttpContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.PostAsync(System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ PostAsync(System::String ^ requestUri, System::Net::Http::HttpContent ^ content, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.String" />
        <Parameter Name="content" Type="System.Net.Http.HttpContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="requestUri">
          <span data-ttu-id="87d94-356">傳送要求的目標 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-356">The Uri the request is sent to.</span>
          </span>
        </param>
        <param name="content">
          <span data-ttu-id="87d94-357">傳送至伺服器的 HTTP 要求內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-357">The HTTP request content sent to the server.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="87d94-358">取消語彙基元，可由其他物件或執行緒用來接收取消通知。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-358">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="87d94-359">以非同步作業的方式，傳送 POST 要求和取消語彙基元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-359">Send a POST request with a cancellation token as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="87d94-360">工作物件，表示非同步作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-360">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="87d94-361">這項作業不會封鎖。</span><span class="sxs-lookup"><span data-stu-id="87d94-361">This operation will not block.</span></span> <span data-ttu-id="87d94-362">傳回的 <xref:System.Threading.Tasks.Task%601> 物件會在讀取完整的回應 (包括內容) 之後完成。</span><span class="sxs-lookup"><span data-stu-id="87d94-362">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the whole response (including content) is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="87d94-363">
            <paramref name="requestUri" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-363">The <paramref name="requestUri" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
          <span data-ttu-id="87d94-364">要求已因基本問題 (例如網路連線、DNS 失敗、伺服器憑證驗證或逾時) 而失敗。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-364">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="PostAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; PostAsync (Uri requestUri, System.Net.Http.HttpContent content, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; PostAsync(class System.Uri requestUri, class System.Net.Http.HttpContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.PostAsync(System.Uri,System.Net.Http.HttpContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ PostAsync(Uri ^ requestUri, System::Net::Http::HttpContent ^ content, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.Uri" />
        <Parameter Name="content" Type="System.Net.Http.HttpContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="requestUri">
          <span data-ttu-id="87d94-365">傳送要求的目標 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-365">The Uri the request is sent to.</span>
          </span>
        </param>
        <param name="content">
          <span data-ttu-id="87d94-366">傳送至伺服器的 HTTP 要求內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-366">The HTTP request content sent to the server.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="87d94-367">取消語彙基元，可由其他物件或執行緒用來接收取消通知。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-367">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="87d94-368">以非同步作業的方式，傳送 POST 要求和取消語彙基元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-368">Send a POST request with a cancellation token as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="87d94-369">工作物件，表示非同步作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-369">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="87d94-370">這項作業不會封鎖。</span><span class="sxs-lookup"><span data-stu-id="87d94-370">This operation will not block.</span></span> <span data-ttu-id="87d94-371">傳回的 <xref:System.Threading.Tasks.Task%601> 物件會在讀取完整的回應 (包括內容) 之後完成。</span><span class="sxs-lookup"><span data-stu-id="87d94-371">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the whole response (including content) is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="87d94-372">
            <paramref name="requestUri" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-372">The <paramref name="requestUri" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
          <span data-ttu-id="87d94-373">要求已因基本問題 (例如網路連線、DNS 失敗、伺服器憑證驗證或逾時) 而失敗。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-373">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="PutAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="87d94-374">以非同步作業的方式，將 PUT 要求傳送至指定的 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-374">Send a PUT request to the specified Uri as an asynchronous operation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="87d94-375">這項作業不會封鎖。</span><span class="sxs-lookup"><span data-stu-id="87d94-375">This operation will not block.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="PutAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; PutAsync (string requestUri, System.Net.Http.HttpContent content);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; PutAsync(string requestUri, class System.Net.Http.HttpContent content) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.PutAsync(System.String,System.Net.Http.HttpContent)" />
      <MemberSignature Language="VB.NET" Value="Public Function PutAsync (requestUri As String, content As HttpContent) As Task(Of HttpResponseMessage)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ PutAsync(System::String ^ requestUri, System::Net::Http::HttpContent ^ content);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.String" />
        <Parameter Name="content" Type="System.Net.Http.HttpContent" />
      </Parameters>
      <Docs>
        <param name="requestUri">
          <span data-ttu-id="87d94-376">傳送要求的目標 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-376">The Uri the request is sent to.</span>
          </span>
        </param>
        <param name="content">
          <span data-ttu-id="87d94-377">傳送至伺服器的 HTTP 要求內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-377">The HTTP request content sent to the server.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="87d94-378">以非同步作業的方式，將 PUT 要求傳送至指定的 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-378">Send a PUT request to the specified Uri as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="87d94-379">工作物件，表示非同步作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-379">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="87d94-380">這項作業不會封鎖。</span><span class="sxs-lookup"><span data-stu-id="87d94-380">This operation will not block.</span></span> <span data-ttu-id="87d94-381">傳回的 <xref:System.Threading.Tasks.Task%601> 物件會在讀取完整的回應 (包括內容) 之後完成。</span><span class="sxs-lookup"><span data-stu-id="87d94-381">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the whole response (including content) is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="87d94-382">
            <paramref name="requestUri" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-382">The <paramref name="requestUri" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
          <span data-ttu-id="87d94-383">要求已因基本問題 (例如網路連線、DNS 失敗、伺服器憑證驗證或逾時) 而失敗。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-383">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="PutAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; PutAsync (Uri requestUri, System.Net.Http.HttpContent content);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; PutAsync(class System.Uri requestUri, class System.Net.Http.HttpContent content) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.PutAsync(System.Uri,System.Net.Http.HttpContent)" />
      <MemberSignature Language="VB.NET" Value="Public Function PutAsync (requestUri As Uri, content As HttpContent) As Task(Of HttpResponseMessage)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ PutAsync(Uri ^ requestUri, System::Net::Http::HttpContent ^ content);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.Uri" />
        <Parameter Name="content" Type="System.Net.Http.HttpContent" />
      </Parameters>
      <Docs>
        <param name="requestUri">
          <span data-ttu-id="87d94-384">傳送要求的目標 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-384">The Uri the request is sent to.</span>
          </span>
        </param>
        <param name="content">
          <span data-ttu-id="87d94-385">傳送至伺服器的 HTTP 要求內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-385">The HTTP request content sent to the server.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="87d94-386">以非同步作業的方式，將 PUT 要求傳送至指定的 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-386">Send a PUT request to the specified Uri as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="87d94-387">工作物件，表示非同步作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-387">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="87d94-388">這項作業不會封鎖。</span><span class="sxs-lookup"><span data-stu-id="87d94-388">This operation will not block.</span></span> <span data-ttu-id="87d94-389">傳回的 <xref:System.Threading.Tasks.Task%601> 物件會在讀取完整的回應 (包括內容) 之後完成。</span><span class="sxs-lookup"><span data-stu-id="87d94-389">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the whole response (including content) is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="87d94-390">
            <paramref name="requestUri" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-390">The <paramref name="requestUri" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
          <span data-ttu-id="87d94-391">要求已因基本問題 (例如網路連線、DNS 失敗、伺服器憑證驗證或逾時) 而失敗。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-391">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="PutAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; PutAsync (string requestUri, System.Net.Http.HttpContent content, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; PutAsync(string requestUri, class System.Net.Http.HttpContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.PutAsync(System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ PutAsync(System::String ^ requestUri, System::Net::Http::HttpContent ^ content, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.String" />
        <Parameter Name="content" Type="System.Net.Http.HttpContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="requestUri">
          <span data-ttu-id="87d94-392">傳送要求的目標 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-392">The Uri the request is sent to.</span>
          </span>
        </param>
        <param name="content">
          <span data-ttu-id="87d94-393">傳送至伺服器的 HTTP 要求內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-393">The HTTP request content sent to the server.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="87d94-394">取消語彙基元，可由其他物件或執行緒用來接收取消通知。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-394">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="87d94-395">以非同步作業的方式，傳送 PUT 要求和取消語彙基元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-395">Send a PUT request with a cancellation token as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="87d94-396">工作物件，表示非同步作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-396">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="87d94-397">這項作業不會封鎖。</span><span class="sxs-lookup"><span data-stu-id="87d94-397">This operation will not block.</span></span> <span data-ttu-id="87d94-398">傳回的 <xref:System.Threading.Tasks.Task%601> 物件會在讀取完整的回應 (包括內容) 之後完成。</span><span class="sxs-lookup"><span data-stu-id="87d94-398">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the whole response (including content) is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="87d94-399">
            <paramref name="requestUri" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-399">The <paramref name="requestUri" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
          <span data-ttu-id="87d94-400">要求已因基本問題 (例如網路連線、DNS 失敗、伺服器憑證驗證或逾時) 而失敗。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-400">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="PutAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; PutAsync (Uri requestUri, System.Net.Http.HttpContent content, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; PutAsync(class System.Uri requestUri, class System.Net.Http.HttpContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.PutAsync(System.Uri,System.Net.Http.HttpContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ PutAsync(Uri ^ requestUri, System::Net::Http::HttpContent ^ content, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.Uri" />
        <Parameter Name="content" Type="System.Net.Http.HttpContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="requestUri">
          <span data-ttu-id="87d94-401">傳送要求的目標 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-401">The Uri the request is sent to.</span>
          </span>
        </param>
        <param name="content">
          <span data-ttu-id="87d94-402">傳送至伺服器的 HTTP 要求內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-402">The HTTP request content sent to the server.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="87d94-403">取消語彙基元，可由其他物件或執行緒用來接收取消通知。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-403">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="87d94-404">以非同步作業的方式，傳送 PUT 要求和取消語彙基元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-404">Send a PUT request with a cancellation token as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="87d94-405">工作物件，表示非同步作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-405">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="87d94-406">這項作業不會封鎖。</span><span class="sxs-lookup"><span data-stu-id="87d94-406">This operation will not block.</span></span> <span data-ttu-id="87d94-407">傳回的 <xref:System.Threading.Tasks.Task%601> 物件會在讀取完整的回應 (包括內容) 之後完成。</span><span class="sxs-lookup"><span data-stu-id="87d94-407">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the whole response (including content) is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="87d94-408">
            <paramref name="requestUri" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-408">The <paramref name="requestUri" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
          <span data-ttu-id="87d94-409">要求已因基本問題 (例如網路連線、DNS 失敗、伺服器憑證驗證或逾時) 而失敗。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-409">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="SendAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="87d94-410">以非同步作業的方式，傳送 HTTP 要求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-410">Send an HTTP request as an asynchronous operation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="87d94-411">這項作業不會封鎖。</span><span class="sxs-lookup"><span data-stu-id="87d94-411">This operation will not block.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; SendAsync (System.Net.Http.HttpRequestMessage request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; SendAsync(class System.Net.Http.HttpRequestMessage request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage)" />
      <MemberSignature Language="VB.NET" Value="Public Function SendAsync (request As HttpRequestMessage) As Task(Of HttpResponseMessage)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ SendAsync(System::Net::Http::HttpRequestMessage ^ request);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Net.Http.HttpRequestMessage" />
      </Parameters>
      <Docs>
        <param name="request">
          <span data-ttu-id="87d94-412">要傳送的 HTTP 要求訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-412">The HTTP request message to send.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="87d94-413">以非同步作業的方式，傳送 HTTP 要求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-413">Send an HTTP request as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="87d94-414">工作物件，表示非同步作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-414">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="87d94-415">這項作業不會封鎖。</span><span class="sxs-lookup"><span data-stu-id="87d94-415">This operation will not block.</span></span> <span data-ttu-id="87d94-416">傳回<xref:System.Threading.Tasks.Task%601>物件會在讀取包括內容的整個回應之後完成。</span><span class="sxs-lookup"><span data-stu-id="87d94-416">The returned <xref:System.Threading.Tasks.Task%601> object will complete once the entire response including content is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="87d94-417">
            <paramref name="request" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-417">The <paramref name="request" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="87d94-418">要求訊息已經透過 <see cref="T:System.Net.Http.HttpClient" /> 執行個體傳送。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-418">The request message was already sent by the <see cref="T:System.Net.Http.HttpClient" /> instance.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
          <span data-ttu-id="87d94-419">要求已因基本問題 (例如網路連線、DNS 失敗、伺服器憑證驗證或逾時) 而失敗。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-419">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; SendAsync (System.Net.Http.HttpRequestMessage request, System.Net.Http.HttpCompletionOption completionOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; SendAsync(class System.Net.Http.HttpRequestMessage request, valuetype System.Net.Http.HttpCompletionOption completionOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpCompletionOption)" />
      <MemberSignature Language="VB.NET" Value="Public Function SendAsync (request As HttpRequestMessage, completionOption As HttpCompletionOption) As Task(Of HttpResponseMessage)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ SendAsync(System::Net::Http::HttpRequestMessage ^ request, System::Net::Http::HttpCompletionOption completionOption);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Net.Http.HttpRequestMessage" />
        <Parameter Name="completionOption" Type="System.Net.Http.HttpCompletionOption" />
      </Parameters>
      <Docs>
        <param name="request">
          <span data-ttu-id="87d94-420">要傳送的 HTTP 要求訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-420">The HTTP request message to send.</span>
          </span>
        </param>
        <param name="completionOption">
          <span data-ttu-id="87d94-421">當作業應該完成時 (可取得回應時或讀取整個回應內容之後)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-421">When the operation should complete (as soon as a response is available or after reading the whole response content).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="87d94-422">以非同步作業的方式，傳送 HTTP 要求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-422">Send an HTTP request as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="87d94-423">工作物件，表示非同步作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-423">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="87d94-424">這項作業不會封鎖。</span><span class="sxs-lookup"><span data-stu-id="87d94-424">This operation will not block.</span></span> <span data-ttu-id="87d94-425">值而定`completionOption`參數、 傳回<xref:System.Threading.Tasks.Task%601>物件會完成，只要取得回應之後，或在讀取包括內容的完整回應。</span><span class="sxs-lookup"><span data-stu-id="87d94-425">Depending on the value of the `completionOption` parameter, the returned <xref:System.Threading.Tasks.Task%601> object will complete as soon as a response is available or the entire response including content is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="87d94-426">
            <paramref name="request" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-426">The <paramref name="request" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="87d94-427">要求訊息已經透過 <see cref="T:System.Net.Http.HttpClient" /> 執行個體傳送。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-427">The request message was already sent by the <see cref="T:System.Net.Http.HttpClient" /> instance.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
          <span data-ttu-id="87d94-428">要求已因基本問題 (例如網路連線、DNS 失敗、伺服器憑證驗證或逾時) 而失敗。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-428">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; SendAsync (System.Net.Http.HttpRequestMessage request, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; SendAsync(class System.Net.Http.HttpRequestMessage request, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ SendAsync(System::Net::Http::HttpRequestMessage ^ request, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Net.Http.HttpRequestMessage" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="request">
          <span data-ttu-id="87d94-429">要傳送的 HTTP 要求訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-429">The HTTP request message to send.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="87d94-430">用於取消作業的取消語彙基元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-430">The cancellation token to cancel operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="87d94-431">以非同步作業的方式，傳送 HTTP 要求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-431">Send an HTTP request as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="87d94-432">工作物件，表示非同步作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-432">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="87d94-433">這項作業不會封鎖。</span><span class="sxs-lookup"><span data-stu-id="87d94-433">This operation will not block.</span></span> <span data-ttu-id="87d94-434">傳回<xref:System.Threading.Tasks.Task%601>物件會在讀取包括內容的整個回應之後完成。</span><span class="sxs-lookup"><span data-stu-id="87d94-434">The returned <xref:System.Threading.Tasks.Task%601> object will complete once the entire response including content is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="87d94-435">
            <paramref name="request" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-435">The <paramref name="request" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="87d94-436">要求訊息已經透過 <see cref="T:System.Net.Http.HttpClient" /> 執行個體傳送。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-436">The request message was already sent by the <see cref="T:System.Net.Http.HttpClient" /> instance.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
          <span data-ttu-id="87d94-437">要求已因基本問題 (例如網路連線、DNS 失敗、伺服器憑證驗證或逾時) 而失敗。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-437">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; SendAsync (System.Net.Http.HttpRequestMessage request, System.Net.Http.HttpCompletionOption completionOption, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; SendAsync(class System.Net.Http.HttpRequestMessage request, valuetype System.Net.Http.HttpCompletionOption completionOption, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ SendAsync(System::Net::Http::HttpRequestMessage ^ request, System::Net::Http::HttpCompletionOption completionOption, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Net.Http.HttpRequestMessage" />
        <Parameter Name="completionOption" Type="System.Net.Http.HttpCompletionOption" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="request">
          <span data-ttu-id="87d94-438">要傳送的 HTTP 要求訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-438">The HTTP request message to send.</span>
          </span>
        </param>
        <param name="completionOption">
          <span data-ttu-id="87d94-439">當作業應該完成時 (可取得回應時或讀取整個回應內容之後)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-439">When the operation should complete (as soon as a response is available or after reading the whole response content).</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="87d94-440">用於取消作業的取消語彙基元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-440">The cancellation token to cancel operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="87d94-441">以非同步作業的方式，傳送 HTTP 要求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-441">Send an HTTP request as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="87d94-442">工作物件，表示非同步作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-442">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="87d94-443">這項作業不會封鎖。</span><span class="sxs-lookup"><span data-stu-id="87d94-443">This operation will not block.</span></span> <span data-ttu-id="87d94-444">值而定`completionOption`參數、 傳回<xref:System.Threading.Tasks.Task%601>物件會完成，只要取得回應之後，或在讀取包括內容的完整回應。</span><span class="sxs-lookup"><span data-stu-id="87d94-444">Depending on the value of the `completionOption` parameter, the returned <xref:System.Threading.Tasks.Task%601> object will complete as soon as a response is available or the entire response including content is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="87d94-445">
            <paramref name="request" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-445">The <paramref name="request" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="87d94-446">要求訊息已經透過 <see cref="T:System.Net.Http.HttpClient" /> 執行個體傳送。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-446">The request message was already sent by the <see cref="T:System.Net.Http.HttpClient" /> instance.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
          <span data-ttu-id="87d94-447">要求已因基本問題 (例如網路連線、DNS 失敗、伺服器憑證驗證或逾時) 而失敗。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-447">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Timeout">
      <MemberSignature Language="C#" Value="public TimeSpan Timeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan Timeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClient.Timeout" />
      <MemberSignature Language="VB.NET" Value="Public Property Timeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan Timeout { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="87d94-448">取得或設定要求逾時前等候的時間長度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-448">Gets or sets the timespan to wait before the request times out.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="87d94-449">要求逾時前等候的時間長度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-449">The timespan to wait before the request times out.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="87d94-450">預設值為 100,000 毫秒 (100 秒)。</span><span class="sxs-lookup"><span data-stu-id="87d94-450">The default value is 100,000 milliseconds (100 seconds).</span></span>  
  
 <span data-ttu-id="87d94-451">若要設定無限的逾時，設定屬性值為<xref:System.Threading.Timeout.InfiniteTimeSpan>。</span><span class="sxs-lookup"><span data-stu-id="87d94-451">To set an infinite timeout, set the property value to <xref:System.Threading.Timeout.InfiniteTimeSpan>.</span></span>  
  
 <span data-ttu-id="87d94-452">最多為 15 秒才傳回或逾時，可能需要網域名稱系統 (DNS) 查詢。如果您的要求包含需要解析主機名稱，而且設定<xref:System.Net.Http.HttpClient.Timeout%2A>的值小於 15 秒，可能需要 15 秒以上才能<xref:System.Net.WebException>就會擲回，表示您的要求逾時。</span><span class="sxs-lookup"><span data-stu-id="87d94-452">A Domain Name System (DNS) query may take up to 15 seconds to return or time out. If your request contains a host name that requires resolution and you set <xref:System.Net.Http.HttpClient.Timeout%2A> to a value less than 15 seconds, it may take 15 seconds or more before a <xref:System.Net.WebException> is thrown to indicate a timeout on your request.</span></span>  
  
 <span data-ttu-id="87d94-453">使用這項功能的所有要求會套用都至相同的逾時<xref:System.Net.Http.HttpClient>執行個體。</span><span class="sxs-lookup"><span data-stu-id="87d94-453">The same timeout will apply for all requests using this <xref:System.Net.Http.HttpClient> instance.</span></span>  <span data-ttu-id="87d94-454">您也可以設定不同的逾時使用的個別要求的<xref:System.Threading.CancellationTokenSource>工作。</span><span class="sxs-lookup"><span data-stu-id="87d94-454">You may also set different timeouts for individual requests using a <xref:System.Threading.CancellationTokenSource> on a task.</span></span> <span data-ttu-id="87d94-455">請注意，只有較短的兩個逾時將會套用。</span><span class="sxs-lookup"><span data-stu-id="87d94-455">Note that only the shorter of the two timeouts will apply.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="87d94-456">指定的逾時值小於或等於零，而且不是 <see cref="F:System.Threading.Timeout.InfiniteTimeSpan" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-456">The timeout specified is less than or equal to zero and is not <see cref="F:System.Threading.Timeout.InfiniteTimeSpan" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="87d94-457">作業已經在目前的執行個體上啟動。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-457">An operation has already been started on the current instance.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="87d94-458">目前的執行個體已經過處置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="87d94-458">The current instance has been disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>