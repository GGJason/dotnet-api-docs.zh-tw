<Type Name="HttpClient" FullName="System.Net.Http.HttpClient">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0df4cb455d048adfba86db068764fc6d8be1ae2a" />
    <Meta Name="ms.sourcegitcommit" Value="433e1400f568eb31af1283d895f0fd3b75253bec" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="07/09/2018" />
    <Meta Name="ms.locfileid" Value="37914895" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class HttpClient : System.Net.Http.HttpMessageInvoker" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HttpClient extends System.Net.Http.HttpMessageInvoker" />
  <TypeSignature Language="DocId" Value="T:System.Net.Http.HttpClient" />
  <TypeSignature Language="VB.NET" Value="Public Class HttpClient&#xA;Inherits HttpMessageInvoker" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpClient : System::Net::Http::HttpMessageInvoker" />
  <TypeSignature Language="F#" Value="type HttpClient = class&#xA;    inherit HttpMessageInvoker" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Http</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Net.Http.HttpMessageInvoker</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="44b8b-101">提供基底類別，用來傳送 HTTP 要求，以及從 URI 所識別的資源接收 HTTP 回應。</span>
      <span class="sxs-lookup">
        <span data-stu-id="44b8b-101">Provides a base class for sending HTTP requests and receiving HTTP responses from a resource identified by a URI.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44b8b-102"><xref:System.Net.Http.HttpClient>類別執行個體做為傳送 HTTP 要求的工作階段。</span><span class="sxs-lookup"><span data-stu-id="44b8b-102">The <xref:System.Net.Http.HttpClient> class instance acts as a session to send HTTP requests.</span></span> <span data-ttu-id="44b8b-103"><xref:System.Net.Http.HttpClient>執行個體是設定套用至該執行個體所執行的所有要求的集合。</span><span class="sxs-lookup"><span data-stu-id="44b8b-103">An <xref:System.Net.Http.HttpClient> instance is a collection of settings applied to all requests executed by that instance.</span></span> <span data-ttu-id="44b8b-104">此外，每隔<xref:System.Net.Http.HttpClient>執行個體會使用自己的連接集區，隔離其要求從要求執行其他<xref:System.Net.Http.HttpClient>執行個體。</span><span class="sxs-lookup"><span data-stu-id="44b8b-104">In addition, every <xref:System.Net.Http.HttpClient> instance uses its own connection pool, isolating its requests from requests executed by other <xref:System.Net.Http.HttpClient> instances.</span></span>  
  
 <span data-ttu-id="44b8b-105"><xref:System.Net.Http.HttpClient>也會做為更特定的 HTTP 用戶端的基底類別。</span><span class="sxs-lookup"><span data-stu-id="44b8b-105">The <xref:System.Net.Http.HttpClient> also acts as a base class for more specific HTTP clients.</span></span> <span data-ttu-id="44b8b-106">使用範例會提供特定的 Facebook web 服務的其他方法 FacebookHttpClient (GetFriends 方法中，執行個體)。</span><span class="sxs-lookup"><span data-stu-id="44b8b-106">An example would be a FacebookHttpClient providing additional methods specific to a Facebook web service (a GetFriends method, for instance).</span></span> <span data-ttu-id="44b8b-107">在衍生的類別不應該覆寫類別虛擬方法。</span><span class="sxs-lookup"><span data-stu-id="44b8b-107">Derived classes should not override the virtual methods on the class.</span></span> <span data-ttu-id="44b8b-108">請改用可接受的建構函式多載<xref:System.Net.Http.HttpMessageHandler>設定任何前置或後置要求管線處理。</span><span class="sxs-lookup"><span data-stu-id="44b8b-108">Instead, use a constructor overload that accepts <xref:System.Net.Http.HttpMessageHandler> to configure any pre- or post-request processing instead.</span></span>
  
 <span data-ttu-id="44b8b-109">根據預設，<xref:System.Net.HttpWebRequest>將用來將要求傳送至伺服器。</span><span class="sxs-lookup"><span data-stu-id="44b8b-109">By default, <xref:System.Net.HttpWebRequest> will be used to send requests to the server.</span></span> <span data-ttu-id="44b8b-110">可以修改此行為，藉由指定不同的通道，其中一種建構函式多載採用<xref:System.Net.Http.HttpMessageHandler>做為參數的執行個體。</span><span class="sxs-lookup"><span data-stu-id="44b8b-110">This behavior can be modified by specifying a different channel in one of the constructor overloads taking a <xref:System.Net.Http.HttpMessageHandler> instance as parameter.</span></span> <span data-ttu-id="44b8b-111">如果需要，功能，例如驗證或快取<xref:System.Net.Http.WebRequestHandler>可以用來設定它執行個體可以傳遞至建構函式。</span><span class="sxs-lookup"><span data-stu-id="44b8b-111">If features like authentication or caching are required, <xref:System.Net.Http.WebRequestHandler> can be used to configure settings and the instance can be passed to the constructor.</span></span> <span data-ttu-id="44b8b-112">傳回的處理常式可以傳遞至其中一個建構函式多載採用<xref:System.Net.Http.HttpMessageHandler>參數。</span><span class="sxs-lookup"><span data-stu-id="44b8b-112">The returned handler can be passed to one of the constructor overloads taking a <xref:System.Net.Http.HttpMessageHandler> parameter.</span></span>  
  
 <span data-ttu-id="44b8b-113">如果應用程式使用<xref:System.Net.Http.HttpClient>和相關類別中的<xref:System.Net.Http>命名空間想要下載大量資料 （50 mb 或以上），則應用程式應該串流處理這些下載項目，並使用預設的緩衝處理。</span><span class="sxs-lookup"><span data-stu-id="44b8b-113">If an app using <xref:System.Net.Http.HttpClient> and related classes in the  <xref:System.Net.Http> namespace intends to download large amounts of data (50 megabytes or more), then the app should stream those downloads and not use the default buffering.</span></span> <span data-ttu-id="44b8b-114">如果預設的緩衝處理使用的用戶端記憶體使用量會變得非常大，而且可能會導致大幅降低效能。</span><span class="sxs-lookup"><span data-stu-id="44b8b-114">If the default buffering is used the client memory usage will get very large, potentially resulting in substantially reduced performance.</span></span>  
  
 <span data-ttu-id="44b8b-115">下列方法都是安全執行緒：</span><span class="sxs-lookup"><span data-stu-id="44b8b-115">The following methods are thread safe:</span></span>  
  
1.  <xref:System.Net.Http.HttpClient.CancelPendingRequests%2A>  
  
2.  <xref:System.Net.Http.HttpClient.DeleteAsync%2A>  
  
3.  <xref:System.Net.Http.HttpClient.GetAsync%2A>  
  
4.  <xref:System.Net.Http.HttpClient.GetByteArrayAsync%2A>  
  
5.  <xref:System.Net.Http.HttpClient.GetStreamAsync%2A>  
  
6.  <xref:System.Net.Http.HttpClient.GetStringAsync%2A>  
  
7.  <xref:System.Net.Http.HttpClient.PostAsync%2A>  
  
8.  <xref:System.Net.Http.HttpClient.PutAsync%2A>  
  
9. <xref:System.Net.Http.HttpClient.SendAsync%2A>  
  
 <span data-ttu-id="44b8b-116"><xref:System.Net.Http.HttpClient> 被要具現化一次和重複使用的應用程式生命週期。</span><span class="sxs-lookup"><span data-stu-id="44b8b-116"><xref:System.Net.Http.HttpClient> is intended to be instantiated once and re-used throughout the life of an application.</span></span> <span data-ttu-id="44b8b-117">每個要求的 HttpClient 類別具現化會耗盡可用在沈重負載下的通訊端數目。</span><span class="sxs-lookup"><span data-stu-id="44b8b-117">Instantiating an HttpClient class for every request will exhaust the number of sockets available under heavy loads.</span></span> <span data-ttu-id="44b8b-118">這會導致 SocketException 錯誤。</span><span class="sxs-lookup"><span data-stu-id="44b8b-118">This will result in SocketException errors.</span></span> <span data-ttu-id="44b8b-119">以下是正確地使用 HttpClient 範例。</span><span class="sxs-lookup"><span data-stu-id="44b8b-119">Below is an example using HttpClient correctly.</span></span>  
  
```csharp  
public class GoodController : ApiController  
{  
    // OK  
    private static readonly HttpClient HttpClient;  
  
    static GoodController()  
    {  
        HttpClient = new HttpClient();  
    }  
}  
  
```  
  
<span data-ttu-id="44b8b-120"><xref:System.Net.Http.HttpClient>是包裝在每個平台可用的較低層級功能，其執行所在的高階 API。</span><span class="sxs-lookup"><span data-stu-id="44b8b-120">The <xref:System.Net.Http.HttpClient> is a high-level API that wraps the lower-level functionality available on each platform where it runs.</span></span>

<span data-ttu-id="44b8b-121">每個平台，<xref:System.Net.Http.HttpClient>便會嘗試使用最適合的可用傳輸：</span><span class="sxs-lookup"><span data-stu-id="44b8b-121">On each platform, <xref:System.Net.Http.HttpClient> tries to use the best available transport:</span></span>

| <span data-ttu-id="44b8b-122">**主應用程式/執行階段**</span><span class="sxs-lookup"><span data-stu-id="44b8b-122">**Host/Runtime**</span></span>            | <span data-ttu-id="44b8b-123">**後端**</span><span class="sxs-lookup"><span data-stu-id="44b8b-123">**Backend**</span></span>                                                                               |
| --------------------------- | ----------------------------------------------------------------------------------------- |
| <span data-ttu-id="44b8b-124">Windows/.NET Framework</span><span class="sxs-lookup"><span data-stu-id="44b8b-124">Windows/.NET Framework</span></span>      | <xref:System.Net.HttpWebRequest>                                                          |
| <span data-ttu-id="44b8b-125">Windows/Mono</span><span class="sxs-lookup"><span data-stu-id="44b8b-125">Windows/Mono</span></span>                | <xref:System.Net.HttpWebRequest>                                                          |
| <span data-ttu-id="44b8b-126">Windows/UWP</span><span class="sxs-lookup"><span data-stu-id="44b8b-126">Windows/UWP</span></span>                 | <span data-ttu-id="44b8b-127">Windows 原生<xref:System.Net.Http.WinHttpHandler>(支援 HTTP 2.0)</span><span class="sxs-lookup"><span data-stu-id="44b8b-127">Windows native <xref:System.Net.Http.WinHttpHandler> (HTTP 2.0 capable)</span></span>                   |
| <span data-ttu-id="44b8b-128">Windows/.NET Core</span><span class="sxs-lookup"><span data-stu-id="44b8b-128">Windows/.NET Core</span></span>           | <span data-ttu-id="44b8b-129">Windows 原生<xref:System.Net.Http.WinHttpHandler>(支援 HTTP 2.0)</span><span class="sxs-lookup"><span data-stu-id="44b8b-129">Windows native <xref:System.Net.Http.WinHttpHandler> (HTTP 2.0 capable)</span></span>                   |
| <span data-ttu-id="44b8b-130">Android/Xamarin</span><span class="sxs-lookup"><span data-stu-id="44b8b-130">Android/Xamarin</span></span>             | <span data-ttu-id="44b8b-131">選取此選項，在建置階段。</span><span class="sxs-lookup"><span data-stu-id="44b8b-131">Selected at build-time.</span></span> <span data-ttu-id="44b8b-132">可以使用<xref:System.Net.HttpWebRequest>或設定為使用 Android 的原生 [`HttpURLConnection`](https://developer.xamarin.com/api/type/Java.Net.HttpURLConnection/)</span><span class="sxs-lookup"><span data-stu-id="44b8b-132">Can either use <xref:System.Net.HttpWebRequest> or be configured to use Android's native [`HttpURLConnection`](https://developer.xamarin.com/api/type/Java.Net.HttpURLConnection/)</span></span> |
| <span data-ttu-id="44b8b-133">iOS、 tvOS、 watchOS/Xamarin</span><span class="sxs-lookup"><span data-stu-id="44b8b-133">iOS, tvOS, watchOS/Xamarin</span></span>  | <span data-ttu-id="44b8b-134">選取此選項，在建置階段。</span><span class="sxs-lookup"><span data-stu-id="44b8b-134">Selected at build-time.</span></span> <span data-ttu-id="44b8b-135">可以使用<xref:System.Net.HttpWebRequest>或者設定為使用 Apple [ `NSUrlSession` ](https://developer.xamarin.com/api/type/MonoTouch.Foundation.NSUrlSession/) (支援 HTTP 2.0)</span><span class="sxs-lookup"><span data-stu-id="44b8b-135">Can either use <xref:System.Net.HttpWebRequest> or be configured to use Apple's [`NSUrlSession`](https://developer.xamarin.com/api/type/MonoTouch.Foundation.NSUrlSession/) (HTTP 2.0 capable)</span></span> |
| <span data-ttu-id="44b8b-136">macOS/Xamarin</span><span class="sxs-lookup"><span data-stu-id="44b8b-136">macOS/Xamarin</span></span>               | <span data-ttu-id="44b8b-137">選取此選項，在建置階段。</span><span class="sxs-lookup"><span data-stu-id="44b8b-137">Selected at build-time.</span></span> <span data-ttu-id="44b8b-138">可以使用<xref:System.Net.HttpWebRequest>或者設定為使用 Apple [ `NSUrlSession` ](https://developer.xamarin.com/api/type/MonoTouch.Foundation.NSUrlSession/) (支援 HTTP 2.0)</span><span class="sxs-lookup"><span data-stu-id="44b8b-138">Can either use <xref:System.Net.HttpWebRequest> or be configured to use Apple's [`NSUrlSession`](https://developer.xamarin.com/api/type/MonoTouch.Foundation.NSUrlSession/) (HTTP 2.0 capable)</span></span> |
| <span data-ttu-id="44b8b-139">macOS/Mono</span><span class="sxs-lookup"><span data-stu-id="44b8b-139">macOS/Mono</span></span>                  | <xref:System.Net.HttpWebRequest>                                                                          |
| <span data-ttu-id="44b8b-140">macOS/.NET Core</span><span class="sxs-lookup"><span data-stu-id="44b8b-140">macOS/.NET Core</span></span>             | <span data-ttu-id="44b8b-141">`libcurl`-基礎 HTTP 傳輸 (支援 HTTP 2.0)</span><span class="sxs-lookup"><span data-stu-id="44b8b-141">`libcurl`-based HTTP transport (HTTP 2.0 capable)</span></span>                                         |
| <span data-ttu-id="44b8b-142">Linux/Mono</span><span class="sxs-lookup"><span data-stu-id="44b8b-142">Linux/Mono</span></span>                  | <xref:System.Net.HttpWebRequest>                                                          |
| <span data-ttu-id="44b8b-143">Linux/.NET Core</span><span class="sxs-lookup"><span data-stu-id="44b8b-143">Linux/.NET Core</span></span>             | <span data-ttu-id="44b8b-144">`libcurl`-基礎 HTTP 傳輸 (支援 HTTP 2.0)</span><span class="sxs-lookup"><span data-stu-id="44b8b-144">`libcurl`-based HTTP transport (HTTP 2.0 capable)</span></span>                                         |

<span data-ttu-id="44b8b-145">使用者也可以設定的特定傳輸<xref:System.Net.Http.HttpClient>叫用<xref:System.Net.Http.HttpClient.%23ctor*>建構函式<xref:System.Net.Http.HttpMessageHandler>。</span><span class="sxs-lookup"><span data-stu-id="44b8b-145">Users can also configure a specific transport for <xref:System.Net.Http.HttpClient> by invoking the <xref:System.Net.Http.HttpClient.%23ctor*> constructor that takes an <xref:System.Net.Http.HttpMessageHandler>.</span></span>

### <a name="httpclient-and-net-core"></a><span data-ttu-id="44b8b-146">HttpClient 和.NET Core</span><span class="sxs-lookup"><span data-stu-id="44b8b-146">HttpClient and .NET Core</span></span>

<span data-ttu-id="44b8b-147">.NET Core 2.1 中，從開始<xref:System.Net.Http.SocketsHttpHandler?displayProperty=nameWithType>類別而非`HttpClientHandler`提供這類使用較高層級的 HTTP 網路類別的實作`HttpClient`。</span><span class="sxs-lookup"><span data-stu-id="44b8b-147">Starting with .NET Core 2.1, the <xref:System.Net.Http.SocketsHttpHandler?displayProperty=nameWithType> class instead of `HttpClientHandler` provides the implementation used by higher-level HTTP networking classes such as `HttpClient`.</span></span> <span data-ttu-id="44b8b-148">您可以設定您的應用程式使用較舊<xref:System.Net.Http.HttpClientHandler?displayProperty=nameWithType>改為呼叫<xref:System.AppContext.SetSwitch%2A>方法，如下所示：</span><span class="sxs-lookup"><span data-stu-id="44b8b-148">You can configure your application to use the older <xref:System.Net.Http.HttpClientHandler?displayProperty=nameWithType> instead by calling the <xref:System.AppContext.SetSwitch%2A> method as follows:</span></span>

```csharp
AppContext.SetSwitch("System.Net.Http.useSocketsHttpHandler", false);
```
```vb
AppContext.SetSwitch("System.Net.Http.useSocketsHttpHandler", False)
``` 
  
## Examples  
 [!code-csharp[System.Net.Http.HttpClient#1](~/samples/snippets/csharp/VS_Snippets_Misc/system.net.http.httpclient/cs/source.cs#1)]  
  
 <span data-ttu-id="44b8b-149">上述程式碼範例會使用`async Task Main()`進入點。</span><span class="sxs-lookup"><span data-stu-id="44b8b-149">The preceding code example uses an `async Task Main()` entry point.</span></span> <span data-ttu-id="44b8b-150">該功能需要 C# 7.1 或更新版本。</span><span class="sxs-lookup"><span data-stu-id="44b8b-150">That feature requires C# 7.1 or later.</span></span>
 
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="44b8b-151">初始化 <see cref="T:System.Net.Http.HttpClient" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-151">Initializes a new instance of the <see cref="T:System.Net.Http.HttpClient" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44b8b-152"><xref:System.Net.Http.HttpClient> 被要具現化一次和重複使用的應用程式生命週期。</span><span class="sxs-lookup"><span data-stu-id="44b8b-152"><xref:System.Net.Http.HttpClient> is intended to be instantiated once and re-used throughout the life of an application.</span></span> <span data-ttu-id="44b8b-153">每個要求的 HttpClient 類別具現化會耗盡可用在沈重負載下的通訊端數目。</span><span class="sxs-lookup"><span data-stu-id="44b8b-153">Instantiating an HttpClient class for every request will exhaust the number of sockets available under heavy loads.</span></span> <span data-ttu-id="44b8b-154">這會導致 SocketException 錯誤。</span><span class="sxs-lookup"><span data-stu-id="44b8b-154">This will result in SocketException errors.</span></span> <span data-ttu-id="44b8b-155">以下是正確地使用 HttpClient 範例。</span><span class="sxs-lookup"><span data-stu-id="44b8b-155">Below is an example using HttpClient correctly.</span></span>  
  
```csharp  
public class GoodController : ApiController  
{  
    // OK  
    private static readonly HttpClient HttpClient;  
  
    static GoodController()  
    {  
        HttpClient = new HttpClient();  
    }  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpClient ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpClient();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="44b8b-156">初始化 <see cref="T:System.Net.Http.HttpClient" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-156">Initializes a new instance of the <see cref="T:System.Net.Http.HttpClient" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpClient (System.Net.Http.HttpMessageHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.Http.HttpMessageHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.#ctor(System.Net.Http.HttpMessageHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (handler As HttpMessageHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpClient(System::Net::Http::HttpMessageHandler ^ handler);" />
      <MemberSignature Language="F#" Value="new System.Net.Http.HttpClient : System.Net.Http.HttpMessageHandler -&gt; System.Net.Http.HttpClient" Usage="new System.Net.Http.HttpClient handler" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="handler" Type="System.Net.Http.HttpMessageHandler" />
      </Parameters>
      <Docs>
        <param name="handler">
          <span data-ttu-id="44b8b-157">要用來傳送要求的 HTTP 處理常式堆疊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-157">The HTTP handler stack to use for sending requests.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="44b8b-158">使用特定處理常式，初始化 <see cref="T:System.Net.Http.HttpClient" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-158">Initializes a new instance of the <see cref="T:System.Net.Http.HttpClient" /> class with a specific handler.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44b8b-159">`handler` 會藉由呼叫處置[HttpClient.Dispose](xref:System.Net.Http.HttpMessageInvoker.Dispose)。</span><span class="sxs-lookup"><span data-stu-id="44b8b-159">`handler` will be disposed of by calling [HttpClient.Dispose](xref:System.Net.Http.HttpMessageInvoker.Dispose).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="44b8b-160">
            <paramref name="handler" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-160">The <paramref name="handler" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpClient (System.Net.Http.HttpMessageHandler handler, bool disposeHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.Http.HttpMessageHandler handler, bool disposeHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.#ctor(System.Net.Http.HttpMessageHandler,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (handler As HttpMessageHandler, disposeHandler As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpClient(System::Net::Http::HttpMessageHandler ^ handler, bool disposeHandler);" />
      <MemberSignature Language="F#" Value="new System.Net.Http.HttpClient : System.Net.Http.HttpMessageHandler * bool -&gt; System.Net.Http.HttpClient" Usage="new System.Net.Http.HttpClient (handler, disposeHandler)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="handler" Type="System.Net.Http.HttpMessageHandler" />
        <Parameter Name="disposeHandler" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="handler">
          <span data-ttu-id="44b8b-161">負責處理 HTTP 回應訊息的 <see cref="T:System.Net.Http.HttpMessageHandler" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-161">The <see cref="T:System.Net.Http.HttpMessageHandler" /> responsible for processing the HTTP response messages.</span>
          </span>
        </param>
        <param name="disposeHandler">
          <span data-ttu-id="44b8b-162">如果內部處理常式應由 [HttpClient.Dispose] (xref:System.Net.Http.HttpMessageInvoker.Dispose) 處置，則為 <see langword="true" />；如果您想要重複使用內部處理常式，則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-162">
              <see langword="true" /> if the inner handler should be disposed of by [HttpClient.Dispose](xref:System.Net.Http.HttpMessageInvoker.Dispose), <see langword="false" /> if you intend to reuse the inner handler.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="44b8b-163">使用特定處理常式，初始化 <see cref="T:System.Net.Http.HttpClient" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-163">Initializes a new instance of the <see cref="T:System.Net.Http.HttpClient" /> class with a specific handler.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="44b8b-164">
            <paramref name="handler" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-164">The <paramref name="handler" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BaseAddress">
      <MemberSignature Language="C#" Value="public Uri BaseAddress { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri BaseAddress" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClient.BaseAddress" />
      <MemberSignature Language="VB.NET" Value="Public Property BaseAddress As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ BaseAddress { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BaseAddress : Uri with get, set" Usage="System.Net.Http.HttpClient.BaseAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="44b8b-165">取得或設定傳送要求時所使用之網際網路資源的統一資源識別元 (URI) 基底位址。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-165">Gets or sets the base address of Uniform Resource Identifier (URI) of the Internet resource used when sending requests.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="44b8b-166">傳送要求時所使用之網際網路資源的統一資源識別元 (URI) 基底位址。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-166">The base address of Uniform Resource Identifier (URI) of the Internet resource used when sending requests.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44b8b-167">當傳送<xref:System.Net.Http.HttpRequestMessage>含有相對 Uri，在訊息 Uri 將會新增至<xref:System.Net.Http.HttpClient.BaseAddress%2A>屬性來建立絕對 Uri。</span><span class="sxs-lookup"><span data-stu-id="44b8b-167">When sending a <xref:System.Net.Http.HttpRequestMessage> with a relative Uri, the message Uri will be added to the <xref:System.Net.Http.HttpClient.BaseAddress%2A> property to create an absolute Uri.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelPendingRequests">
      <MemberSignature Language="C#" Value="public void CancelPendingRequests ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CancelPendingRequests() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.CancelPendingRequests" />
      <MemberSignature Language="VB.NET" Value="Public Sub CancelPendingRequests ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CancelPendingRequests();" />
      <MemberSignature Language="F#" Value="member this.CancelPendingRequests : unit -&gt; unit" Usage="httpClient.CancelPendingRequests " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="44b8b-168">取消這個執行個體上的所有暫止要求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-168">Cancel all pending requests on this instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44b8b-169">呼叫這個方法中之後,<xref:System.Net.Http.HttpClient>執行個體仍可用來執行其他的要求。</span><span class="sxs-lookup"><span data-stu-id="44b8b-169">After calling this method, the <xref:System.Net.Http.HttpClient> instance can still be used to execute additional requests.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultRequestHeaders">
      <MemberSignature Language="C#" Value="public System.Net.Http.Headers.HttpRequestHeaders DefaultRequestHeaders { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Http.Headers.HttpRequestHeaders DefaultRequestHeaders" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClient.DefaultRequestHeaders" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DefaultRequestHeaders As HttpRequestHeaders" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Http::Headers::HttpRequestHeaders ^ DefaultRequestHeaders { System::Net::Http::Headers::HttpRequestHeaders ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultRequestHeaders : System.Net.Http.Headers.HttpRequestHeaders" Usage="System.Net.Http.HttpClient.DefaultRequestHeaders" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Http.Headers.HttpRequestHeaders</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="44b8b-170">取得應該在每個要求中傳送的標頭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-170">Gets the headers which should be sent with each request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="44b8b-171">應該藉由每個要求傳送的標頭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-171">The headers which should be sent with each request.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44b8b-172">這個屬性的標頭不需要再次設定要求訊息。</span><span class="sxs-lookup"><span data-stu-id="44b8b-172">Headers set on this property don't need to be set on request messages again.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DeleteAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="44b8b-173">以非同步作業的方式，將 DELETE 要求傳送至指定的 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-173">Send a DELETE request to the specified Uri as an asynchronous operation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DeleteAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; DeleteAsync (string requestUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; DeleteAsync(string requestUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.DeleteAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function DeleteAsync (requestUri As String) As Task(Of HttpResponseMessage)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ DeleteAsync(System::String ^ requestUri);" />
      <MemberSignature Language="F#" Value="member this.DeleteAsync : string -&gt; System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;" Usage="httpClient.DeleteAsync requestUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="requestUri">
          <span data-ttu-id="44b8b-174">傳送要求的目標 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-174">The Uri the request is sent to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="44b8b-175">以非同步作業的方式，將 DELETE 要求傳送至指定的 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-175">Send a DELETE request to the specified Uri as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="44b8b-176">工作物件，表示非同步作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-176">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44b8b-177">這項作業不會封鎖。</span><span class="sxs-lookup"><span data-stu-id="44b8b-177">This operation will not block.</span></span> <span data-ttu-id="44b8b-178">傳回的 <xref:System.Threading.Tasks.Task%601> 物件會在讀取完整的回應 (包括內容) 之後完成。</span><span class="sxs-lookup"><span data-stu-id="44b8b-178">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the whole response (including content) is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="44b8b-179">
            <paramref name="requestUri" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-179">The <paramref name="requestUri" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="44b8b-180">要求訊息已經透過 <see cref="T:System.Net.Http.HttpClient" /> 執行個體傳送。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-180">The request message was already sent by the <see cref="T:System.Net.Http.HttpClient" /> instance.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
          <span data-ttu-id="44b8b-181">要求已因基本問題 (例如網路連線、DNS 失敗、伺服器憑證驗證或逾時) 而失敗。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-181">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; DeleteAsync (Uri requestUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; DeleteAsync(class System.Uri requestUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.DeleteAsync(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function DeleteAsync (requestUri As Uri) As Task(Of HttpResponseMessage)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ DeleteAsync(Uri ^ requestUri);" />
      <MemberSignature Language="F#" Value="member this.DeleteAsync : Uri -&gt; System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;" Usage="httpClient.DeleteAsync requestUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="requestUri">
          <span data-ttu-id="44b8b-182">傳送要求的目標 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-182">The Uri the request is sent to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="44b8b-183">以非同步作業的方式，將 DELETE 要求傳送至指定的 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-183">Send a DELETE request to the specified Uri as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="44b8b-184">工作物件，表示非同步作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-184">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44b8b-185">這項作業不會封鎖。</span><span class="sxs-lookup"><span data-stu-id="44b8b-185">This operation will not block.</span></span> <span data-ttu-id="44b8b-186">傳回的 <xref:System.Threading.Tasks.Task%601> 物件會在讀取完整的回應 (包括內容) 之後完成。</span><span class="sxs-lookup"><span data-stu-id="44b8b-186">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the whole response (including content) is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="44b8b-187">
            <paramref name="requestUri" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-187">The <paramref name="requestUri" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="44b8b-188">要求訊息已經透過 <see cref="T:System.Net.Http.HttpClient" /> 執行個體傳送。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-188">The request message was already sent by the <see cref="T:System.Net.Http.HttpClient" /> instance.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
          <span data-ttu-id="44b8b-189">要求已因基本問題 (例如網路連線、DNS 失敗、伺服器憑證驗證或逾時) 而失敗。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-189">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; DeleteAsync (string requestUri, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; DeleteAsync(string requestUri, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.DeleteAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ DeleteAsync(System::String ^ requestUri, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.DeleteAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;" Usage="httpClient.DeleteAsync (requestUri, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="requestUri">
          <span data-ttu-id="44b8b-190">傳送要求的目標 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-190">The Uri the request is sent to.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="44b8b-191">取消語彙基元，可由其他物件或執行緒用來接收取消通知。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-191">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="44b8b-192">以非同步作業的方式，傳送 DELETE 要求和取消權杖至指定的 Uri。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-192">Send a DELETE request to the specified Uri with a cancellation token as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="44b8b-193">工作物件，表示非同步作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-193">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44b8b-194">這項作業不會封鎖。</span><span class="sxs-lookup"><span data-stu-id="44b8b-194">This operation will not block.</span></span> <span data-ttu-id="44b8b-195">傳回的 <xref:System.Threading.Tasks.Task%601> 物件會在讀取完整的回應 (包括內容) 之後完成。</span><span class="sxs-lookup"><span data-stu-id="44b8b-195">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the whole response (including content) is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="44b8b-196">
            <paramref name="requestUri" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-196">The <paramref name="requestUri" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="44b8b-197">要求訊息已經透過 <see cref="T:System.Net.Http.HttpClient" /> 執行個體傳送。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-197">The request message was already sent by the <see cref="T:System.Net.Http.HttpClient" /> instance.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
          <span data-ttu-id="44b8b-198">要求已因基本問題 (例如網路連線、DNS 失敗、伺服器憑證驗證或逾時) 而失敗。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-198">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; DeleteAsync (Uri requestUri, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; DeleteAsync(class System.Uri requestUri, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.DeleteAsync(System.Uri,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ DeleteAsync(Uri ^ requestUri, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.DeleteAsync : Uri * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;" Usage="httpClient.DeleteAsync (requestUri, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.Uri" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="requestUri">
          <span data-ttu-id="44b8b-199">傳送要求的目標 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-199">The Uri the request is sent to.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="44b8b-200">取消語彙基元，可由其他物件或執行緒用來接收取消通知。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-200">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="44b8b-201">以非同步作業的方式，傳送 DELETE 要求和取消權杖至指定的 Uri。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-201">Send a DELETE request to the specified Uri with a cancellation token as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="44b8b-202">工作物件，表示非同步作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-202">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44b8b-203">這項作業不會封鎖。</span><span class="sxs-lookup"><span data-stu-id="44b8b-203">This operation will not block.</span></span> <span data-ttu-id="44b8b-204">傳回的 <xref:System.Threading.Tasks.Task%601> 物件會在讀取完整的回應 (包括內容) 之後完成。</span><span class="sxs-lookup"><span data-stu-id="44b8b-204">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the whole response (including content) is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="44b8b-205">
            <paramref name="requestUri" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-205">The <paramref name="requestUri" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="44b8b-206">要求訊息已經透過 <see cref="T:System.Net.Http.HttpClient" /> 執行個體傳送。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-206">The request message was already sent by the <see cref="T:System.Net.Http.HttpClient" /> instance.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
          <span data-ttu-id="44b8b-207">要求已因基本問題 (例如網路連線、DNS 失敗、伺服器憑證驗證或逾時) 而失敗。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-207">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="httpClient.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="44b8b-208">
            <see langword="true" /> 表示會同時釋放 Managed 和 Unmanaged 資源；<see langword="false" /> 則表示只釋放 Unmanaged 資源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-208">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to releases only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="44b8b-209">釋放 <see cref="T:System.Net.Http.HttpClient" /> 所使用的 Unmanaged 資源，並選擇性處置 Managed 資源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-209">Releases the unmanaged resources used by the <see cref="T:System.Net.Http.HttpClient" /> and optionally disposes of the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44b8b-210">這個方法會呼叫公用`Dispose()`方法和<xref:System.Object.Finalize%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="44b8b-210">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="44b8b-211">`Dispose()` 叫用受保護`Dispose(Boolean)`方法`disposing`參數設為`true`。</span><span class="sxs-lookup"><span data-stu-id="44b8b-211">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="44b8b-212"><xref:System.Object.Finalize%2A> 叫用`Dispose`具有`disposing`設定為`false`。</span><span class="sxs-lookup"><span data-stu-id="44b8b-212"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="44b8b-213">`disposing` 參數為 `true` 時，這個方法會釋放 <xref:System.Net.Http.HttpClient> 參考的任何 Managed 物件所掌握的資源。</span><span class="sxs-lookup"><span data-stu-id="44b8b-213">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Net.Http.HttpClient> references.</span></span> <span data-ttu-id="44b8b-214">這個方法會叫用每個參考物件的 `Dispose()` 方法。</span><span class="sxs-lookup"><span data-stu-id="44b8b-214">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 <span data-ttu-id="44b8b-215">呼叫這個方法時，<xref:System.Net.Http.HttpClient.CancelPendingRequests%2A>呼叫方法來中止所有暫止要求。</span><span class="sxs-lookup"><span data-stu-id="44b8b-215">When this method is called, the <xref:System.Net.Http.HttpClient.CancelPendingRequests%2A> method is called to abort all pending requests.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="44b8b-216">以非同步作業的方式，將 GET 要求傳送至指定的 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-216">Send a GET request to the specified Uri as an asynchronous operation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44b8b-217">作業不會封鎖。</span><span class="sxs-lookup"><span data-stu-id="44b8b-217">The operation will not block.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; GetAsync (string requestUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; GetAsync(string requestUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.GetAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAsync (requestUri As String) As Task(Of HttpResponseMessage)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ GetAsync(System::String ^ requestUri);" />
      <MemberSignature Language="F#" Value="member this.GetAsync : string -&gt; System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;" Usage="httpClient.GetAsync requestUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="requestUri">
          <span data-ttu-id="44b8b-218">傳送要求的目標 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-218">The Uri the request is sent to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="44b8b-219">以非同步作業的方式，將 GET 要求傳送至指定的 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-219">Send a GET request to the specified Uri as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="44b8b-220">工作物件，表示非同步作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-220">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44b8b-221">這項作業不會封鎖。</span><span class="sxs-lookup"><span data-stu-id="44b8b-221">This operation will not block.</span></span> <span data-ttu-id="44b8b-222">傳回的 <xref:System.Threading.Tasks.Task%601> 物件會在讀取完整的回應 (包括內容) 之後完成。</span><span class="sxs-lookup"><span data-stu-id="44b8b-222">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the whole response (including content) is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="44b8b-223">
            <paramref name="requestUri" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-223">The <paramref name="requestUri" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
          <span data-ttu-id="44b8b-224">要求已因基本問題 (例如網路連線、DNS 失敗、伺服器憑證驗證或逾時) 而失敗。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-224">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; GetAsync (Uri requestUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; GetAsync(class System.Uri requestUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.GetAsync(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAsync (requestUri As Uri) As Task(Of HttpResponseMessage)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ GetAsync(Uri ^ requestUri);" />
      <MemberSignature Language="F#" Value="member this.GetAsync : Uri -&gt; System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;" Usage="httpClient.GetAsync requestUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="requestUri">
          <span data-ttu-id="44b8b-225">傳送要求的目標 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-225">The Uri the request is sent to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="44b8b-226">以非同步作業的方式，將 GET 要求傳送至指定的 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-226">Send a GET request to the specified Uri as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="44b8b-227">工作物件，表示非同步作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-227">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44b8b-228">這項作業不會封鎖。</span><span class="sxs-lookup"><span data-stu-id="44b8b-228">This operation will not block.</span></span> <span data-ttu-id="44b8b-229">傳回的 <xref:System.Threading.Tasks.Task%601> 物件會在讀取完整的回應 (包括內容) 之後完成。</span><span class="sxs-lookup"><span data-stu-id="44b8b-229">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the whole response (including content) is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="44b8b-230">
            <paramref name="requestUri" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-230">The <paramref name="requestUri" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
          <span data-ttu-id="44b8b-231">要求已因基本問題 (例如網路連線、DNS 失敗、伺服器憑證驗證或逾時) 而失敗。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-231">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; GetAsync (string requestUri, System.Net.Http.HttpCompletionOption completionOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; GetAsync(string requestUri, valuetype System.Net.Http.HttpCompletionOption completionOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.GetAsync(System.String,System.Net.Http.HttpCompletionOption)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAsync (requestUri As String, completionOption As HttpCompletionOption) As Task(Of HttpResponseMessage)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ GetAsync(System::String ^ requestUri, System::Net::Http::HttpCompletionOption completionOption);" />
      <MemberSignature Language="F#" Value="member this.GetAsync : string * System.Net.Http.HttpCompletionOption -&gt; System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;" Usage="httpClient.GetAsync (requestUri, completionOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.String" />
        <Parameter Name="completionOption" Type="System.Net.Http.HttpCompletionOption" />
      </Parameters>
      <Docs>
        <param name="requestUri">
          <span data-ttu-id="44b8b-232">傳送要求的目標 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-232">The Uri the request is sent to.</span>
          </span>
        </param>
        <param name="completionOption">
          <span data-ttu-id="44b8b-233">HTTP 完成選項值，表示作業應該被視為已完成。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-233">An HTTP completion option value that indicates when the operation should be considered completed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="44b8b-234">以非同步作業的方式，傳送 GET 要求和 HTTP 完成選項至指定的 Uri。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-234">Send a GET request to the specified Uri with an HTTP completion option as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="44b8b-235">工作物件，表示非同步作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-235">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44b8b-236">這項作業不會封鎖。</span><span class="sxs-lookup"><span data-stu-id="44b8b-236">This operation will not block.</span></span> <span data-ttu-id="44b8b-237">傳回的 <xref:System.Threading.Tasks.Task%601> 物件何時完成，將在讀取部分或所有回應 (包括內容) 之後，根據 `completionOption` 參數決定。</span><span class="sxs-lookup"><span data-stu-id="44b8b-237">The returned <xref:System.Threading.Tasks.Task%601> object will complete based on the `completionOption` parameter after the part or all of the response (including content) is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="44b8b-238">
            <paramref name="requestUri" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-238">The <paramref name="requestUri" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
          <span data-ttu-id="44b8b-239">要求已因基本問題 (例如網路連線、DNS 失敗、伺服器憑證驗證或逾時) 而失敗。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-239">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; GetAsync (string requestUri, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; GetAsync(string requestUri, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.GetAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ GetAsync(System::String ^ requestUri, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.GetAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;" Usage="httpClient.GetAsync (requestUri, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="requestUri">
          <span data-ttu-id="44b8b-240">傳送要求的目標 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-240">The Uri the request is sent to.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="44b8b-241">取消語彙基元，可由其他物件或執行緒用來接收取消通知。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-241">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="44b8b-242">以非同步作業的方式，傳送 GET 要求和取消權杖至指定的 Uri。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-242">Send a GET request to the specified Uri with a cancellation token as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="44b8b-243">工作物件，表示非同步作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-243">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44b8b-244">這項作業不會封鎖。</span><span class="sxs-lookup"><span data-stu-id="44b8b-244">This operation will not block.</span></span> <span data-ttu-id="44b8b-245">傳回的 <xref:System.Threading.Tasks.Task%601> 物件會在讀取完整的回應 (包括內容) 之後完成。</span><span class="sxs-lookup"><span data-stu-id="44b8b-245">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the whole response (including content) is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="44b8b-246">
            <paramref name="requestUri" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-246">The <paramref name="requestUri" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
          <span data-ttu-id="44b8b-247">要求已因基本問題 (例如網路連線、DNS 失敗、伺服器憑證驗證或逾時) 而失敗。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-247">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; GetAsync (Uri requestUri, System.Net.Http.HttpCompletionOption completionOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; GetAsync(class System.Uri requestUri, valuetype System.Net.Http.HttpCompletionOption completionOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.GetAsync(System.Uri,System.Net.Http.HttpCompletionOption)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAsync (requestUri As Uri, completionOption As HttpCompletionOption) As Task(Of HttpResponseMessage)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ GetAsync(Uri ^ requestUri, System::Net::Http::HttpCompletionOption completionOption);" />
      <MemberSignature Language="F#" Value="member this.GetAsync : Uri * System.Net.Http.HttpCompletionOption -&gt; System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;" Usage="httpClient.GetAsync (requestUri, completionOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.Uri" />
        <Parameter Name="completionOption" Type="System.Net.Http.HttpCompletionOption" />
      </Parameters>
      <Docs>
        <param name="requestUri">
          <span data-ttu-id="44b8b-248">傳送要求的目標 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-248">The Uri the request is sent to.</span>
          </span>
        </param>
        <param name="completionOption">
          <span data-ttu-id="44b8b-249">HTTP 完成選項值，表示作業應該被視為已完成。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-249">An HTTP completion option value that indicates when the operation should be considered completed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="44b8b-250">以非同步作業的方式，傳送 GET 要求和 HTTP 完成選項至指定的 Uri。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-250">Send a GET request to the specified Uri with an HTTP completion option as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="44b8b-251">工作物件，表示非同步作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-251">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44b8b-252">這項作業不會封鎖。</span><span class="sxs-lookup"><span data-stu-id="44b8b-252">This operation will not block.</span></span> <span data-ttu-id="44b8b-253">傳回的 <xref:System.Threading.Tasks.Task%601> 物件何時完成，將在讀取部分或所有回應 (包括內容) 之後，根據 `completionOption` 參數決定。</span><span class="sxs-lookup"><span data-stu-id="44b8b-253">The returned <xref:System.Threading.Tasks.Task%601> object will complete based on the `completionOption` parameter after the part or all of the response (including content) is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="44b8b-254">
            <paramref name="requestUri" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-254">The <paramref name="requestUri" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
          <span data-ttu-id="44b8b-255">要求已因基本問題 (例如網路連線、DNS 失敗、伺服器憑證驗證或逾時) 而失敗。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-255">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; GetAsync (Uri requestUri, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; GetAsync(class System.Uri requestUri, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.GetAsync(System.Uri,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ GetAsync(Uri ^ requestUri, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.GetAsync : Uri * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;" Usage="httpClient.GetAsync (requestUri, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.Uri" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="requestUri">
          <span data-ttu-id="44b8b-256">傳送要求的目標 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-256">The Uri the request is sent to.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="44b8b-257">取消語彙基元，可由其他物件或執行緒用來接收取消通知。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-257">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="44b8b-258">以非同步作業的方式，傳送 GET 要求和取消權杖至指定的 Uri。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-258">Send a GET request to the specified Uri with a cancellation token as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="44b8b-259">工作物件，表示非同步作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-259">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44b8b-260">這項作業不會封鎖。</span><span class="sxs-lookup"><span data-stu-id="44b8b-260">This operation will not block.</span></span> <span data-ttu-id="44b8b-261">傳回的 <xref:System.Threading.Tasks.Task%601> 物件會在讀取完整的回應 (包括內容) 之後完成。</span><span class="sxs-lookup"><span data-stu-id="44b8b-261">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the whole response (including content) is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="44b8b-262">
            <paramref name="requestUri" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-262">The <paramref name="requestUri" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
          <span data-ttu-id="44b8b-263">要求已因基本問題 (例如網路連線、DNS 失敗、伺服器憑證驗證或逾時) 而失敗。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-263">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; GetAsync (string requestUri, System.Net.Http.HttpCompletionOption completionOption, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; GetAsync(string requestUri, valuetype System.Net.Http.HttpCompletionOption completionOption, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.GetAsync(System.String,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ GetAsync(System::String ^ requestUri, System::Net::Http::HttpCompletionOption completionOption, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.GetAsync : string * System.Net.Http.HttpCompletionOption * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;" Usage="httpClient.GetAsync (requestUri, completionOption, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.String" />
        <Parameter Name="completionOption" Type="System.Net.Http.HttpCompletionOption" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="requestUri">
          <span data-ttu-id="44b8b-264">傳送要求的目標 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-264">The Uri the request is sent to.</span>
          </span>
        </param>
        <param name="completionOption">
          <span data-ttu-id="44b8b-265">HTTP 完成選項值，表示作業應該被視為已完成。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-265">An HTTP  completion option value that indicates when the operation should be considered completed.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="44b8b-266">取消語彙基元，可由其他物件或執行緒用來接收取消通知。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-266">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="44b8b-267">以非同步作業的方式，傳送 GET 要求和 HTTP 完成選項以及取消語彙基元至指定的 Uri。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-267">Send a GET request to the specified Uri with an HTTP completion option and a cancellation token as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="44b8b-268">工作物件，表示非同步作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-268">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44b8b-269">這項作業不會封鎖。</span><span class="sxs-lookup"><span data-stu-id="44b8b-269">This operation will not block.</span></span> <span data-ttu-id="44b8b-270">傳回的 <xref:System.Threading.Tasks.Task%601> 物件何時完成，將在讀取部分或所有回應 (包括內容) 之後，根據 `completionOption` 參數決定。</span><span class="sxs-lookup"><span data-stu-id="44b8b-270">The returned <xref:System.Threading.Tasks.Task%601> object will complete based on the `completionOption` parameter after the part or all of the response (including content) is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="44b8b-271">
            <paramref name="requestUri" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-271">The <paramref name="requestUri" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
          <span data-ttu-id="44b8b-272">要求已因基本問題 (例如網路連線、DNS 失敗、伺服器憑證驗證或逾時) 而失敗。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-272">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; GetAsync (Uri requestUri, System.Net.Http.HttpCompletionOption completionOption, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; GetAsync(class System.Uri requestUri, valuetype System.Net.Http.HttpCompletionOption completionOption, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.GetAsync(System.Uri,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ GetAsync(Uri ^ requestUri, System::Net::Http::HttpCompletionOption completionOption, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.GetAsync : Uri * System.Net.Http.HttpCompletionOption * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;" Usage="httpClient.GetAsync (requestUri, completionOption, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.Uri" />
        <Parameter Name="completionOption" Type="System.Net.Http.HttpCompletionOption" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="requestUri">
          <span data-ttu-id="44b8b-273">傳送要求的目標 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-273">The Uri the request is sent to.</span>
          </span>
        </param>
        <param name="completionOption">
          <span data-ttu-id="44b8b-274">HTTP 完成選項值，表示作業應該被視為已完成。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-274">An HTTP  completion option value that indicates when the operation should be considered completed.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="44b8b-275">取消語彙基元，可由其他物件或執行緒用來接收取消通知。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-275">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="44b8b-276">以非同步作業的方式，傳送 GET 要求和 HTTP 完成選項以及取消語彙基元至指定的 Uri。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-276">Send a GET request to the specified Uri with an HTTP completion option and a cancellation token as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="44b8b-277">工作物件，表示非同步作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-277">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44b8b-278">這項作業不會封鎖。</span><span class="sxs-lookup"><span data-stu-id="44b8b-278">This operation will not block.</span></span> <span data-ttu-id="44b8b-279">傳回的 <xref:System.Threading.Tasks.Task%601> 物件何時完成，將在讀取部分或所有回應 (包括內容) 之後，根據 `completionOption` 參數決定。</span><span class="sxs-lookup"><span data-stu-id="44b8b-279">The returned <xref:System.Threading.Tasks.Task%601> object will complete based on the `completionOption` parameter after the part or all of the response (including content) is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="44b8b-280">
            <paramref name="requestUri" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-280">The <paramref name="requestUri" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
          <span data-ttu-id="44b8b-281">要求已因基本問題 (例如網路連線、DNS 失敗、伺服器憑證驗證或逾時) 而失敗。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-281">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetByteArrayAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="44b8b-282">將 GET 要求傳送至指定的 URI，並透過非同步作業，以位元組陣列形式傳回回應內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-282">Send a GET request to the specified Uri and return the response body as a byte array in an asynchronous operation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44b8b-283">作業不會封鎖。</span><span class="sxs-lookup"><span data-stu-id="44b8b-283">The operation will not block.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetByteArrayAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;byte[]&gt; GetByteArrayAsync (string requestUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;unsigned int8[]&gt; GetByteArrayAsync(string requestUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.GetByteArrayAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetByteArrayAsync (requestUri As String) As Task(Of Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;cli::array &lt;System::Byte&gt; ^&gt; ^ GetByteArrayAsync(System::String ^ requestUri);" />
      <MemberSignature Language="F#" Value="member this.GetByteArrayAsync : string -&gt; System.Threading.Tasks.Task&lt;byte[]&gt;" Usage="httpClient.GetByteArrayAsync requestUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(System.Net.Http.HttpClient/&lt;GetByteArrayAsync&gt;c__async1))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Byte[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="requestUri">
          <span data-ttu-id="44b8b-284">傳送要求的目標 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-284">The Uri the request is sent to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="44b8b-285">將 GET 要求傳送至指定的 URI，並透過非同步作業，以位元組陣列形式傳回回應內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-285">Send a GET request to the specified Uri and return the response body as a byte array in an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="44b8b-286">工作物件，表示非同步作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-286">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44b8b-287">這項作業不會封鎖。</span><span class="sxs-lookup"><span data-stu-id="44b8b-287">This operation will not block.</span></span> <span data-ttu-id="44b8b-288">傳回的 <xref:System.Threading.Tasks.Task%601> 物件會在讀取完整的回應主體之後完成。</span><span class="sxs-lookup"><span data-stu-id="44b8b-288">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the whole response body is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="44b8b-289">
            <paramref name="requestUri" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-289">The <paramref name="requestUri" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
          <span data-ttu-id="44b8b-290">要求已因基本問題 (例如網路連線、DNS 失敗、伺服器憑證驗證或逾時) 而失敗。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-290">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetByteArrayAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;byte[]&gt; GetByteArrayAsync (Uri requestUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;unsigned int8[]&gt; GetByteArrayAsync(class System.Uri requestUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.GetByteArrayAsync(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetByteArrayAsync (requestUri As Uri) As Task(Of Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;cli::array &lt;System::Byte&gt; ^&gt; ^ GetByteArrayAsync(Uri ^ requestUri);" />
      <MemberSignature Language="F#" Value="member this.GetByteArrayAsync : Uri -&gt; System.Threading.Tasks.Task&lt;byte[]&gt;" Usage="httpClient.GetByteArrayAsync requestUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(System.Net.Http.HttpClient/&lt;GetByteArrayAsync&gt;c__async2))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Byte[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="requestUri">
          <span data-ttu-id="44b8b-291">傳送要求的目標 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-291">The Uri the request is sent to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="44b8b-292">將 GET 要求傳送至指定的 URI，並透過非同步作業，以位元組陣列形式傳回回應內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-292">Send a GET request to the specified Uri and return the response body as a byte array in an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="44b8b-293">工作物件，表示非同步作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-293">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44b8b-294">這項作業不會封鎖。</span><span class="sxs-lookup"><span data-stu-id="44b8b-294">This operation will not block.</span></span> <span data-ttu-id="44b8b-295">傳回的 <xref:System.Threading.Tasks.Task%601> 物件會在讀取完整的回應主體之後完成。</span><span class="sxs-lookup"><span data-stu-id="44b8b-295">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the whole response body is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="44b8b-296">
            <paramref name="requestUri" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-296">The <paramref name="requestUri" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
          <span data-ttu-id="44b8b-297">要求已因基本問題 (例如網路連線、DNS 失敗、伺服器憑證驗證或逾時) 而失敗。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-297">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetStreamAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="44b8b-298">將 GET 要求傳送至指定的 URI，並透過非同步作業，以資料流形式傳回回應內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-298">Send a GET request to the specified Uri and return the response body as a stream in an asynchronous operation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44b8b-299">作業不會封鎖。</span><span class="sxs-lookup"><span data-stu-id="44b8b-299">The operation will not block.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetStreamAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.IO.Stream&gt; GetStreamAsync (string requestUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.IO.Stream&gt; GetStreamAsync(string requestUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.GetStreamAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetStreamAsync (requestUri As String) As Task(Of Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::IO::Stream ^&gt; ^ GetStreamAsync(System::String ^ requestUri);" />
      <MemberSignature Language="F#" Value="member this.GetStreamAsync : string -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;" Usage="httpClient.GetStreamAsync requestUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(System.Net.Http.HttpClient/&lt;GetStreamAsync&gt;c__async3))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.IO.Stream&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="requestUri">
          <span data-ttu-id="44b8b-300">傳送要求的目標 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-300">The Uri the request is sent to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="44b8b-301">將 GET 要求傳送至指定的 URI，並透過非同步作業，以資料流形式傳回回應內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-301">Send a GET request to the specified Uri and return the response body as a stream in an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="44b8b-302">工作物件，表示非同步作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-302">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44b8b-303">這項作業不會封鎖。</span><span class="sxs-lookup"><span data-stu-id="44b8b-303">This operation will not block.</span></span> <span data-ttu-id="44b8b-304">傳回的 <xref:System.Threading.Tasks.Task%601> 物件會在讀取完整的回應主體之後完成。</span><span class="sxs-lookup"><span data-stu-id="44b8b-304">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the whole response body is read.</span></span> <span data-ttu-id="44b8b-305">這個方法未緩衝資料流。</span><span class="sxs-lookup"><span data-stu-id="44b8b-305">This method does not buffer the stream.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="44b8b-306">
            <paramref name="requestUri" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-306">The <paramref name="requestUri" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
          <span data-ttu-id="44b8b-307">要求已因基本問題 (例如網路連線、DNS 失敗、伺服器憑證驗證或逾時) 而失敗。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-307">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetStreamAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.IO.Stream&gt; GetStreamAsync (Uri requestUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.IO.Stream&gt; GetStreamAsync(class System.Uri requestUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.GetStreamAsync(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetStreamAsync (requestUri As Uri) As Task(Of Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::IO::Stream ^&gt; ^ GetStreamAsync(Uri ^ requestUri);" />
      <MemberSignature Language="F#" Value="member this.GetStreamAsync : Uri -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;" Usage="httpClient.GetStreamAsync requestUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(System.Net.Http.HttpClient/&lt;GetStreamAsync&gt;c__async4))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.IO.Stream&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="requestUri">
          <span data-ttu-id="44b8b-308">傳送要求的目標 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-308">The Uri the request is sent to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="44b8b-309">將 GET 要求傳送至指定的 URI，並透過非同步作業，以資料流形式傳回回應內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-309">Send a GET request to the specified Uri and return the response body as a stream in an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="44b8b-310">工作物件，表示非同步作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-310">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44b8b-311">這項作業不會封鎖。</span><span class="sxs-lookup"><span data-stu-id="44b8b-311">This operation will not block.</span></span> <span data-ttu-id="44b8b-312">傳回的 <xref:System.Threading.Tasks.Task%601> 物件會在讀取完整的回應主體之後完成。</span><span class="sxs-lookup"><span data-stu-id="44b8b-312">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the whole response body is read.</span></span> <span data-ttu-id="44b8b-313">這個方法未緩衝資料流。</span><span class="sxs-lookup"><span data-stu-id="44b8b-313">This method does not buffer the stream.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="44b8b-314">
            <paramref name="requestUri" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-314">The <paramref name="requestUri" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
          <span data-ttu-id="44b8b-315">要求已因基本問題 (例如網路連線、DNS 失敗、伺服器憑證驗證或逾時) 而失敗。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-315">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetStringAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="44b8b-316">將 GET 要求傳送至指定的 URI，並透過非同步作業，以字串形式傳回回應內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-316">Send a GET request to the specified Uri and return the response body as a string in an asynchronous operation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44b8b-317">這項作業不會封鎖。</span><span class="sxs-lookup"><span data-stu-id="44b8b-317">This operation will not block.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetStringAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;string&gt; GetStringAsync (string requestUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;string&gt; GetStringAsync(string requestUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.GetStringAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetStringAsync (requestUri As String) As Task(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::String ^&gt; ^ GetStringAsync(System::String ^ requestUri);" />
      <MemberSignature Language="F#" Value="member this.GetStringAsync : string -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="httpClient.GetStringAsync requestUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(System.Net.Http.HttpClient/&lt;GetStringAsync&gt;c__async5))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="requestUri">
          <span data-ttu-id="44b8b-318">傳送要求的目標 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-318">The Uri the request is sent to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="44b8b-319">將 GET 要求傳送至指定的 URI，並透過非同步作業，以字串形式傳回回應內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-319">Send a GET request to the specified Uri and return the response body as a string in an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="44b8b-320">工作物件，表示非同步作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-320">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44b8b-321">這項作業不會封鎖。</span><span class="sxs-lookup"><span data-stu-id="44b8b-321">This operation will not block.</span></span> <span data-ttu-id="44b8b-322">傳回的 <xref:System.Threading.Tasks.Task%601> 物件會在讀取完整的回應主體之後完成。</span><span class="sxs-lookup"><span data-stu-id="44b8b-322">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the whole response body is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="44b8b-323">
            <paramref name="requestUri" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-323">The <paramref name="requestUri" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
          <span data-ttu-id="44b8b-324">要求已因基本問題 (例如網路連線、DNS 失敗、伺服器憑證驗證或逾時) 而失敗。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-324">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetStringAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;string&gt; GetStringAsync (Uri requestUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;string&gt; GetStringAsync(class System.Uri requestUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.GetStringAsync(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetStringAsync (requestUri As Uri) As Task(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::String ^&gt; ^ GetStringAsync(Uri ^ requestUri);" />
      <MemberSignature Language="F#" Value="member this.GetStringAsync : Uri -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="httpClient.GetStringAsync requestUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(System.Net.Http.HttpClient/&lt;GetStringAsync&gt;c__async6))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="requestUri">
          <span data-ttu-id="44b8b-325">傳送要求的目標 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-325">The Uri the request is sent to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="44b8b-326">將 GET 要求傳送至指定的 URI，並透過非同步作業，以字串形式傳回回應內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-326">Send a GET request to the specified Uri and return the response body as a string in an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="44b8b-327">工作物件，表示非同步作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-327">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44b8b-328">這項作業不會封鎖。</span><span class="sxs-lookup"><span data-stu-id="44b8b-328">This operation will not block.</span></span> <span data-ttu-id="44b8b-329">傳回的 <xref:System.Threading.Tasks.Task%601> 物件會在讀取完整的回應主體之後完成。</span><span class="sxs-lookup"><span data-stu-id="44b8b-329">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the whole response body is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="44b8b-330">
            <paramref name="requestUri" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-330">The <paramref name="requestUri" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
          <span data-ttu-id="44b8b-331">要求已因基本問題 (例如網路連線、DNS 失敗、伺服器憑證驗證或逾時) 而失敗。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-331">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="MaxResponseContentBufferSize">
      <MemberSignature Language="C#" Value="public long MaxResponseContentBufferSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MaxResponseContentBufferSize" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClient.MaxResponseContentBufferSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxResponseContentBufferSize As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long MaxResponseContentBufferSize { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.MaxResponseContentBufferSize : int64 with get, set" Usage="System.Net.Http.HttpClient.MaxResponseContentBufferSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="44b8b-332">取得或設定讀取回應內容時要緩衝處理的位元組數目上限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-332">Gets or sets the maximum number of bytes to buffer when reading the response content.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="44b8b-333">讀取回應內容時要緩衝處理的位元組數目上限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-333">The maximum number of bytes to buffer when reading the response content.</span>
          </span>
          <span data-ttu-id="44b8b-334">此屬性的預設值是 2 GB。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-334">The default value for this property is 2 gigabytes.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44b8b-335">應用程式可以設定<xref:System.Net.Http.HttpClient.MaxResponseContentBufferSize%2A>屬性設為較低的值，以便讀取回應時，限制緩衝區之回應的大小。</span><span class="sxs-lookup"><span data-stu-id="44b8b-335">An app can set the <xref:System.Net.Http.HttpClient.MaxResponseContentBufferSize%2A> property to a lower value to limit the size of the response to buffer when reading the response.</span></span> <span data-ttu-id="44b8b-336">回應內容的大小是否大於<xref:System.Net.Http.HttpClient.MaxResponseContentBufferSize%2A> 屬性中擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="44b8b-336">If the size of the response content is greater than the  <xref:System.Net.Http.HttpClient.MaxResponseContentBufferSize%2A> property, an exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="44b8b-337">指定的大小小於或等於零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-337">The size specified is less than or equal to zero.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="44b8b-338">作業已經在目前的執行個體上啟動。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-338">An operation has already been started on the current instance.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="44b8b-339">目前的執行個體已經過處置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-339">The current instance has been disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="PatchAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; PatchAsync (string requestUri, System.Net.Http.HttpContent content);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; PatchAsync(string requestUri, class System.Net.Http.HttpContent content) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.PatchAsync(System.String,System.Net.Http.HttpContent)" />
      <MemberSignature Language="VB.NET" Value="Public Function PatchAsync (requestUri As String, content As HttpContent) As Task(Of HttpResponseMessage)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ PatchAsync(System::String ^ requestUri, System::Net::Http::HttpContent ^ content);" />
      <MemberSignature Language="F#" Value="member this.PatchAsync : string * System.Net.Http.HttpContent -&gt; System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;" Usage="httpClient.PatchAsync (requestUri, content)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.String" />
        <Parameter Name="content" Type="System.Net.Http.HttpContent" />
      </Parameters>
      <Docs>
        <param name="requestUri">To be added.</param>
        <param name="content">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PatchAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; PatchAsync (Uri requestUri, System.Net.Http.HttpContent content);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; PatchAsync(class System.Uri requestUri, class System.Net.Http.HttpContent content) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.PatchAsync(System.Uri,System.Net.Http.HttpContent)" />
      <MemberSignature Language="VB.NET" Value="Public Function PatchAsync (requestUri As Uri, content As HttpContent) As Task(Of HttpResponseMessage)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ PatchAsync(Uri ^ requestUri, System::Net::Http::HttpContent ^ content);" />
      <MemberSignature Language="F#" Value="member this.PatchAsync : Uri * System.Net.Http.HttpContent -&gt; System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;" Usage="httpClient.PatchAsync (requestUri, content)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.Uri" />
        <Parameter Name="content" Type="System.Net.Http.HttpContent" />
      </Parameters>
      <Docs>
        <param name="requestUri">To be added.</param>
        <param name="content">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PatchAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; PatchAsync (string requestUri, System.Net.Http.HttpContent content, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; PatchAsync(string requestUri, class System.Net.Http.HttpContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.PatchAsync(System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ PatchAsync(System::String ^ requestUri, System::Net::Http::HttpContent ^ content, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.PatchAsync : string * System.Net.Http.HttpContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;" Usage="httpClient.PatchAsync (requestUri, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.String" />
        <Parameter Name="content" Type="System.Net.Http.HttpContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="requestUri">To be added.</param>
        <param name="content">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PatchAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; PatchAsync (Uri requestUri, System.Net.Http.HttpContent content, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; PatchAsync(class System.Uri requestUri, class System.Net.Http.HttpContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.PatchAsync(System.Uri,System.Net.Http.HttpContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ PatchAsync(Uri ^ requestUri, System::Net::Http::HttpContent ^ content, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.PatchAsync : Uri * System.Net.Http.HttpContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;" Usage="httpClient.PatchAsync (requestUri, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.Uri" />
        <Parameter Name="content" Type="System.Net.Http.HttpContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="requestUri">To be added.</param>
        <param name="content">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="PostAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="44b8b-340">以非同步作業的方式，將 POST 要求傳送至指定的 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-340">Send a POST request to the specified Uri as an asynchronous operation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44b8b-341">這項作業不會封鎖。</span><span class="sxs-lookup"><span data-stu-id="44b8b-341">This operation will not block.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="PostAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; PostAsync (string requestUri, System.Net.Http.HttpContent content);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; PostAsync(string requestUri, class System.Net.Http.HttpContent content) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.PostAsync(System.String,System.Net.Http.HttpContent)" />
      <MemberSignature Language="VB.NET" Value="Public Function PostAsync (requestUri As String, content As HttpContent) As Task(Of HttpResponseMessage)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ PostAsync(System::String ^ requestUri, System::Net::Http::HttpContent ^ content);" />
      <MemberSignature Language="F#" Value="member this.PostAsync : string * System.Net.Http.HttpContent -&gt; System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;" Usage="httpClient.PostAsync (requestUri, content)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.String" />
        <Parameter Name="content" Type="System.Net.Http.HttpContent" />
      </Parameters>
      <Docs>
        <param name="requestUri">
          <span data-ttu-id="44b8b-342">傳送要求的目標 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-342">The Uri the request is sent to.</span>
          </span>
        </param>
        <param name="content">
          <span data-ttu-id="44b8b-343">傳送至伺服器的 HTTP 要求內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-343">The HTTP request content sent to the server.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="44b8b-344">以非同步作業的方式，將 POST 要求傳送至指定的 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-344">Send a POST request to the specified Uri as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="44b8b-345">工作物件，表示非同步作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-345">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44b8b-346">這項作業不會封鎖。</span><span class="sxs-lookup"><span data-stu-id="44b8b-346">This operation will not block.</span></span> <span data-ttu-id="44b8b-347">傳回的 <xref:System.Threading.Tasks.Task%601> 物件會在讀取完整的回應 (包括內容) 之後完成。</span><span class="sxs-lookup"><span data-stu-id="44b8b-347">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the whole response (including content) is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="44b8b-348">
            <paramref name="requestUri" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-348">The <paramref name="requestUri" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
          <span data-ttu-id="44b8b-349">要求已因基本問題 (例如網路連線、DNS 失敗、伺服器憑證驗證或逾時) 而失敗。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-349">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="PostAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; PostAsync (Uri requestUri, System.Net.Http.HttpContent content);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; PostAsync(class System.Uri requestUri, class System.Net.Http.HttpContent content) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.PostAsync(System.Uri,System.Net.Http.HttpContent)" />
      <MemberSignature Language="VB.NET" Value="Public Function PostAsync (requestUri As Uri, content As HttpContent) As Task(Of HttpResponseMessage)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ PostAsync(Uri ^ requestUri, System::Net::Http::HttpContent ^ content);" />
      <MemberSignature Language="F#" Value="member this.PostAsync : Uri * System.Net.Http.HttpContent -&gt; System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;" Usage="httpClient.PostAsync (requestUri, content)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.Uri" />
        <Parameter Name="content" Type="System.Net.Http.HttpContent" />
      </Parameters>
      <Docs>
        <param name="requestUri">
          <span data-ttu-id="44b8b-350">傳送要求的目標 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-350">The Uri the request is sent to.</span>
          </span>
        </param>
        <param name="content">
          <span data-ttu-id="44b8b-351">傳送至伺服器的 HTTP 要求內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-351">The HTTP request content sent to the server.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="44b8b-352">以非同步作業的方式，將 POST 要求傳送至指定的 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-352">Send a POST request to the specified Uri as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="44b8b-353">工作物件，表示非同步作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-353">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44b8b-354">這項作業不會封鎖。</span><span class="sxs-lookup"><span data-stu-id="44b8b-354">This operation will not block.</span></span> <span data-ttu-id="44b8b-355">傳回的 <xref:System.Threading.Tasks.Task%601> 物件會在讀取完整的回應 (包括內容) 之後完成。</span><span class="sxs-lookup"><span data-stu-id="44b8b-355">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the whole response (including content) is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="44b8b-356">
            <paramref name="requestUri" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-356">The <paramref name="requestUri" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
          <span data-ttu-id="44b8b-357">要求已因基本問題 (例如網路連線、DNS 失敗、伺服器憑證驗證或逾時) 而失敗。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-357">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="PostAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; PostAsync (string requestUri, System.Net.Http.HttpContent content, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; PostAsync(string requestUri, class System.Net.Http.HttpContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.PostAsync(System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ PostAsync(System::String ^ requestUri, System::Net::Http::HttpContent ^ content, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.PostAsync : string * System.Net.Http.HttpContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;" Usage="httpClient.PostAsync (requestUri, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.String" />
        <Parameter Name="content" Type="System.Net.Http.HttpContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="requestUri">
          <span data-ttu-id="44b8b-358">傳送要求的目標 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-358">The Uri the request is sent to.</span>
          </span>
        </param>
        <param name="content">
          <span data-ttu-id="44b8b-359">傳送至伺服器的 HTTP 要求內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-359">The HTTP request content sent to the server.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="44b8b-360">取消語彙基元，可由其他物件或執行緒用來接收取消通知。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-360">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="44b8b-361">以非同步作業的方式，傳送 POST 要求和取消語彙基元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-361">Send a POST request with a cancellation token as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="44b8b-362">工作物件，表示非同步作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-362">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44b8b-363">這項作業不會封鎖。</span><span class="sxs-lookup"><span data-stu-id="44b8b-363">This operation will not block.</span></span> <span data-ttu-id="44b8b-364">傳回的 <xref:System.Threading.Tasks.Task%601> 物件會在讀取完整的回應 (包括內容) 之後完成。</span><span class="sxs-lookup"><span data-stu-id="44b8b-364">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the whole response (including content) is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="44b8b-365">
            <paramref name="requestUri" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-365">The <paramref name="requestUri" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
          <span data-ttu-id="44b8b-366">要求已因基本問題 (例如網路連線、DNS 失敗、伺服器憑證驗證或逾時) 而失敗。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-366">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="PostAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; PostAsync (Uri requestUri, System.Net.Http.HttpContent content, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; PostAsync(class System.Uri requestUri, class System.Net.Http.HttpContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.PostAsync(System.Uri,System.Net.Http.HttpContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ PostAsync(Uri ^ requestUri, System::Net::Http::HttpContent ^ content, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.PostAsync : Uri * System.Net.Http.HttpContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;" Usage="httpClient.PostAsync (requestUri, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.Uri" />
        <Parameter Name="content" Type="System.Net.Http.HttpContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="requestUri">
          <span data-ttu-id="44b8b-367">傳送要求的目標 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-367">The Uri the request is sent to.</span>
          </span>
        </param>
        <param name="content">
          <span data-ttu-id="44b8b-368">傳送至伺服器的 HTTP 要求內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-368">The HTTP request content sent to the server.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="44b8b-369">取消語彙基元，可由其他物件或執行緒用來接收取消通知。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-369">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="44b8b-370">以非同步作業的方式，傳送 POST 要求和取消語彙基元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-370">Send a POST request with a cancellation token as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="44b8b-371">工作物件，表示非同步作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-371">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44b8b-372">這項作業不會封鎖。</span><span class="sxs-lookup"><span data-stu-id="44b8b-372">This operation will not block.</span></span> <span data-ttu-id="44b8b-373">傳回的 <xref:System.Threading.Tasks.Task%601> 物件會在讀取完整的回應 (包括內容) 之後完成。</span><span class="sxs-lookup"><span data-stu-id="44b8b-373">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the whole response (including content) is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="44b8b-374">
            <paramref name="requestUri" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-374">The <paramref name="requestUri" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
          <span data-ttu-id="44b8b-375">要求已因基本問題 (例如網路連線、DNS 失敗、伺服器憑證驗證或逾時) 而失敗。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-375">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="PutAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="44b8b-376">以非同步作業的方式，將 PUT 要求傳送至指定的 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-376">Send a PUT request to the specified Uri as an asynchronous operation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44b8b-377">這項作業不會封鎖。</span><span class="sxs-lookup"><span data-stu-id="44b8b-377">This operation will not block.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="PutAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; PutAsync (string requestUri, System.Net.Http.HttpContent content);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; PutAsync(string requestUri, class System.Net.Http.HttpContent content) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.PutAsync(System.String,System.Net.Http.HttpContent)" />
      <MemberSignature Language="VB.NET" Value="Public Function PutAsync (requestUri As String, content As HttpContent) As Task(Of HttpResponseMessage)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ PutAsync(System::String ^ requestUri, System::Net::Http::HttpContent ^ content);" />
      <MemberSignature Language="F#" Value="member this.PutAsync : string * System.Net.Http.HttpContent -&gt; System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;" Usage="httpClient.PutAsync (requestUri, content)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.String" />
        <Parameter Name="content" Type="System.Net.Http.HttpContent" />
      </Parameters>
      <Docs>
        <param name="requestUri">
          <span data-ttu-id="44b8b-378">傳送要求的目標 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-378">The Uri the request is sent to.</span>
          </span>
        </param>
        <param name="content">
          <span data-ttu-id="44b8b-379">傳送至伺服器的 HTTP 要求內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-379">The HTTP request content sent to the server.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="44b8b-380">以非同步作業的方式，將 PUT 要求傳送至指定的 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-380">Send a PUT request to the specified Uri as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="44b8b-381">工作物件，表示非同步作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-381">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44b8b-382">這項作業不會封鎖。</span><span class="sxs-lookup"><span data-stu-id="44b8b-382">This operation will not block.</span></span> <span data-ttu-id="44b8b-383">傳回的 <xref:System.Threading.Tasks.Task%601> 物件會在讀取完整的回應 (包括內容) 之後完成。</span><span class="sxs-lookup"><span data-stu-id="44b8b-383">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the whole response (including content) is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="44b8b-384">
            <paramref name="requestUri" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-384">The <paramref name="requestUri" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
          <span data-ttu-id="44b8b-385">要求已因基本問題 (例如網路連線、DNS 失敗、伺服器憑證驗證或逾時) 而失敗。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-385">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="PutAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; PutAsync (Uri requestUri, System.Net.Http.HttpContent content);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; PutAsync(class System.Uri requestUri, class System.Net.Http.HttpContent content) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.PutAsync(System.Uri,System.Net.Http.HttpContent)" />
      <MemberSignature Language="VB.NET" Value="Public Function PutAsync (requestUri As Uri, content As HttpContent) As Task(Of HttpResponseMessage)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ PutAsync(Uri ^ requestUri, System::Net::Http::HttpContent ^ content);" />
      <MemberSignature Language="F#" Value="member this.PutAsync : Uri * System.Net.Http.HttpContent -&gt; System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;" Usage="httpClient.PutAsync (requestUri, content)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.Uri" />
        <Parameter Name="content" Type="System.Net.Http.HttpContent" />
      </Parameters>
      <Docs>
        <param name="requestUri">
          <span data-ttu-id="44b8b-386">傳送要求的目標 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-386">The Uri the request is sent to.</span>
          </span>
        </param>
        <param name="content">
          <span data-ttu-id="44b8b-387">傳送至伺服器的 HTTP 要求內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-387">The HTTP request content sent to the server.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="44b8b-388">以非同步作業的方式，將 PUT 要求傳送至指定的 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-388">Send a PUT request to the specified Uri as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="44b8b-389">工作物件，表示非同步作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-389">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44b8b-390">這項作業不會封鎖。</span><span class="sxs-lookup"><span data-stu-id="44b8b-390">This operation will not block.</span></span> <span data-ttu-id="44b8b-391">傳回的 <xref:System.Threading.Tasks.Task%601> 物件會在讀取完整的回應 (包括內容) 之後完成。</span><span class="sxs-lookup"><span data-stu-id="44b8b-391">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the whole response (including content) is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="44b8b-392">
            <paramref name="requestUri" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-392">The <paramref name="requestUri" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
          <span data-ttu-id="44b8b-393">要求已因基本問題 (例如網路連線、DNS 失敗、伺服器憑證驗證或逾時) 而失敗。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-393">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="PutAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; PutAsync (string requestUri, System.Net.Http.HttpContent content, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; PutAsync(string requestUri, class System.Net.Http.HttpContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.PutAsync(System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ PutAsync(System::String ^ requestUri, System::Net::Http::HttpContent ^ content, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.PutAsync : string * System.Net.Http.HttpContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;" Usage="httpClient.PutAsync (requestUri, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.String" />
        <Parameter Name="content" Type="System.Net.Http.HttpContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="requestUri">
          <span data-ttu-id="44b8b-394">傳送要求的目標 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-394">The Uri the request is sent to.</span>
          </span>
        </param>
        <param name="content">
          <span data-ttu-id="44b8b-395">傳送至伺服器的 HTTP 要求內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-395">The HTTP request content sent to the server.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="44b8b-396">取消語彙基元，可由其他物件或執行緒用來接收取消通知。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-396">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="44b8b-397">以非同步作業的方式，傳送 PUT 要求和取消語彙基元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-397">Send a PUT request with a cancellation token as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="44b8b-398">工作物件，表示非同步作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-398">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44b8b-399">這項作業不會封鎖。</span><span class="sxs-lookup"><span data-stu-id="44b8b-399">This operation will not block.</span></span> <span data-ttu-id="44b8b-400">傳回的 <xref:System.Threading.Tasks.Task%601> 物件會在讀取完整的回應 (包括內容) 之後完成。</span><span class="sxs-lookup"><span data-stu-id="44b8b-400">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the whole response (including content) is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="44b8b-401">
            <paramref name="requestUri" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-401">The <paramref name="requestUri" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
          <span data-ttu-id="44b8b-402">要求已因基本問題 (例如網路連線、DNS 失敗、伺服器憑證驗證或逾時) 而失敗。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-402">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="PutAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; PutAsync (Uri requestUri, System.Net.Http.HttpContent content, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; PutAsync(class System.Uri requestUri, class System.Net.Http.HttpContent content, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.PutAsync(System.Uri,System.Net.Http.HttpContent,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ PutAsync(Uri ^ requestUri, System::Net::Http::HttpContent ^ content, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.PutAsync : Uri * System.Net.Http.HttpContent * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;" Usage="httpClient.PutAsync (requestUri, content, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestUri" Type="System.Uri" />
        <Parameter Name="content" Type="System.Net.Http.HttpContent" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="requestUri">
          <span data-ttu-id="44b8b-403">傳送要求的目標 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-403">The Uri the request is sent to.</span>
          </span>
        </param>
        <param name="content">
          <span data-ttu-id="44b8b-404">傳送至伺服器的 HTTP 要求內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-404">The HTTP request content sent to the server.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="44b8b-405">取消語彙基元，可由其他物件或執行緒用來接收取消通知。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-405">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="44b8b-406">以非同步作業的方式，傳送 PUT 要求和取消語彙基元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-406">Send a PUT request with a cancellation token as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="44b8b-407">工作物件，表示非同步作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-407">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44b8b-408">這項作業不會封鎖。</span><span class="sxs-lookup"><span data-stu-id="44b8b-408">This operation will not block.</span></span> <span data-ttu-id="44b8b-409">傳回的 <xref:System.Threading.Tasks.Task%601> 物件會在讀取完整的回應 (包括內容) 之後完成。</span><span class="sxs-lookup"><span data-stu-id="44b8b-409">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the whole response (including content) is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="44b8b-410">
            <paramref name="requestUri" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-410">The <paramref name="requestUri" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
          <span data-ttu-id="44b8b-411">要求已因基本問題 (例如網路連線、DNS 失敗、伺服器憑證驗證或逾時) 而失敗。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-411">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="SendAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="44b8b-412">以非同步作業的方式，傳送 HTTP 要求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-412">Send an HTTP request as an asynchronous operation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44b8b-413">這項作業不會封鎖。</span><span class="sxs-lookup"><span data-stu-id="44b8b-413">This operation will not block.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; SendAsync (System.Net.Http.HttpRequestMessage request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; SendAsync(class System.Net.Http.HttpRequestMessage request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage)" />
      <MemberSignature Language="VB.NET" Value="Public Function SendAsync (request As HttpRequestMessage) As Task(Of HttpResponseMessage)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ SendAsync(System::Net::Http::HttpRequestMessage ^ request);" />
      <MemberSignature Language="F#" Value="override this.SendAsync : System.Net.Http.HttpRequestMessage -&gt; System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;" Usage="httpClient.SendAsync request" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Net.Http.HttpRequestMessage" />
      </Parameters>
      <Docs>
        <param name="request">
          <span data-ttu-id="44b8b-414">要傳送的 HTTP 要求訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-414">The HTTP request message to send.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="44b8b-415">以非同步作業的方式，傳送 HTTP 要求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-415">Send an HTTP request as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="44b8b-416">工作物件，表示非同步作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-416">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44b8b-417">這項作業不會封鎖。</span><span class="sxs-lookup"><span data-stu-id="44b8b-417">This operation will not block.</span></span> <span data-ttu-id="44b8b-418">傳回<xref:System.Threading.Tasks.Task%601>物件會在讀取包括內容的整個回應之後完成。</span><span class="sxs-lookup"><span data-stu-id="44b8b-418">The returned <xref:System.Threading.Tasks.Task%601> object will complete once the entire response including content is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="44b8b-419">
            <paramref name="request" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-419">The <paramref name="request" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="44b8b-420">要求訊息已經透過 <see cref="T:System.Net.Http.HttpClient" /> 執行個體傳送。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-420">The request message was already sent by the <see cref="T:System.Net.Http.HttpClient" /> instance.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
          <span data-ttu-id="44b8b-421">要求已因基本問題 (例如網路連線、DNS 失敗、伺服器憑證驗證或逾時) 而失敗。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-421">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; SendAsync (System.Net.Http.HttpRequestMessage request, System.Net.Http.HttpCompletionOption completionOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; SendAsync(class System.Net.Http.HttpRequestMessage request, valuetype System.Net.Http.HttpCompletionOption completionOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpCompletionOption)" />
      <MemberSignature Language="VB.NET" Value="Public Function SendAsync (request As HttpRequestMessage, completionOption As HttpCompletionOption) As Task(Of HttpResponseMessage)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ SendAsync(System::Net::Http::HttpRequestMessage ^ request, System::Net::Http::HttpCompletionOption completionOption);" />
      <MemberSignature Language="F#" Value="override this.SendAsync : System.Net.Http.HttpRequestMessage * System.Net.Http.HttpCompletionOption -&gt; System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;" Usage="httpClient.SendAsync (request, completionOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Net.Http.HttpRequestMessage" />
        <Parameter Name="completionOption" Type="System.Net.Http.HttpCompletionOption" />
      </Parameters>
      <Docs>
        <param name="request">
          <span data-ttu-id="44b8b-422">要傳送的 HTTP 要求訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-422">The HTTP request message to send.</span>
          </span>
        </param>
        <param name="completionOption">
          <span data-ttu-id="44b8b-423">當作業應該完成時 (可取得回應時或讀取整個回應內容之後)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-423">When the operation should complete (as soon as a response is available or after reading the whole response content).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="44b8b-424">以非同步作業的方式，傳送 HTTP 要求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-424">Send an HTTP request as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="44b8b-425">工作物件，表示非同步作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-425">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44b8b-426">這項作業不會封鎖。</span><span class="sxs-lookup"><span data-stu-id="44b8b-426">This operation will not block.</span></span> <span data-ttu-id="44b8b-427">值而定`completionOption`參數，傳回<xref:System.Threading.Tasks.Task%601>物件會完成，只要取得回應之後，或在讀取包括內容的完整回應。</span><span class="sxs-lookup"><span data-stu-id="44b8b-427">Depending on the value of the `completionOption` parameter, the returned <xref:System.Threading.Tasks.Task%601> object will complete as soon as a response is available or the entire response including content is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="44b8b-428">
            <paramref name="request" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-428">The <paramref name="request" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="44b8b-429">要求訊息已經透過 <see cref="T:System.Net.Http.HttpClient" /> 執行個體傳送。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-429">The request message was already sent by the <see cref="T:System.Net.Http.HttpClient" /> instance.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
          <span data-ttu-id="44b8b-430">要求已因基本問題 (例如網路連線、DNS 失敗、伺服器憑證驗證或逾時) 而失敗。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-430">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; SendAsync (System.Net.Http.HttpRequestMessage request, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; SendAsync(class System.Net.Http.HttpRequestMessage request, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ SendAsync(System::Net::Http::HttpRequestMessage ^ request, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.SendAsync : System.Net.Http.HttpRequestMessage * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;" Usage="httpClient.SendAsync (request, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Net.Http.HttpRequestMessage" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="request">
          <span data-ttu-id="44b8b-431">要傳送的 HTTP 要求訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-431">The HTTP request message to send.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="44b8b-432">用於取消作業的取消語彙基元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-432">The cancellation token to cancel operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="44b8b-433">以非同步作業的方式，傳送 HTTP 要求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-433">Send an HTTP request as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="44b8b-434">工作物件，表示非同步作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-434">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44b8b-435">這項作業不會封鎖。</span><span class="sxs-lookup"><span data-stu-id="44b8b-435">This operation will not block.</span></span> <span data-ttu-id="44b8b-436">傳回<xref:System.Threading.Tasks.Task%601>物件會在讀取包括內容的整個回應之後完成。</span><span class="sxs-lookup"><span data-stu-id="44b8b-436">The returned <xref:System.Threading.Tasks.Task%601> object will complete once the entire response including content is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="44b8b-437">
            <paramref name="request" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-437">The <paramref name="request" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="44b8b-438">要求訊息已經透過 <see cref="T:System.Net.Http.HttpClient" /> 執行個體傳送。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-438">The request message was already sent by the <see cref="T:System.Net.Http.HttpClient" /> instance.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
          <span data-ttu-id="44b8b-439">要求已因基本問題 (例如網路連線、DNS 失敗、伺服器憑證驗證或逾時) 而失敗。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-439">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; SendAsync (System.Net.Http.HttpRequestMessage request, System.Net.Http.HttpCompletionOption completionOption, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; SendAsync(class System.Net.Http.HttpRequestMessage request, valuetype System.Net.Http.HttpCompletionOption completionOption, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ SendAsync(System::Net::Http::HttpRequestMessage ^ request, System::Net::Http::HttpCompletionOption completionOption, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.SendAsync : System.Net.Http.HttpRequestMessage * System.Net.Http.HttpCompletionOption * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;" Usage="httpClient.SendAsync (request, completionOption, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Net.Http.HttpRequestMessage" />
        <Parameter Name="completionOption" Type="System.Net.Http.HttpCompletionOption" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="request">
          <span data-ttu-id="44b8b-440">要傳送的 HTTP 要求訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-440">The HTTP request message to send.</span>
          </span>
        </param>
        <param name="completionOption">
          <span data-ttu-id="44b8b-441">當作業應該完成時 (可取得回應時或讀取整個回應內容之後)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-441">When the operation should complete (as soon as a response is available or after reading the whole response content).</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="44b8b-442">用於取消作業的取消語彙基元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-442">The cancellation token to cancel operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="44b8b-443">以非同步作業的方式，傳送 HTTP 要求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-443">Send an HTTP request as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="44b8b-444">工作物件，表示非同步作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-444">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44b8b-445">這項作業不會封鎖。</span><span class="sxs-lookup"><span data-stu-id="44b8b-445">This operation will not block.</span></span> <span data-ttu-id="44b8b-446">值而定`completionOption`參數，傳回<xref:System.Threading.Tasks.Task%601>物件會完成，只要取得回應之後，或在讀取包括內容的完整回應。</span><span class="sxs-lookup"><span data-stu-id="44b8b-446">Depending on the value of the `completionOption` parameter, the returned <xref:System.Threading.Tasks.Task%601> object will complete as soon as a response is available or the entire response including content is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="44b8b-447">
            <paramref name="request" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-447">The <paramref name="request" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="44b8b-448">要求訊息已經透過 <see cref="T:System.Net.Http.HttpClient" /> 執行個體傳送。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-448">The request message was already sent by the <see cref="T:System.Net.Http.HttpClient" /> instance.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Http.HttpRequestException">
          <span data-ttu-id="44b8b-449">要求已因基本問題 (例如網路連線、DNS 失敗、伺服器憑證驗證或逾時) 而失敗。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-449">The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Timeout">
      <MemberSignature Language="C#" Value="public TimeSpan Timeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan Timeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClient.Timeout" />
      <MemberSignature Language="VB.NET" Value="Public Property Timeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan Timeout { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.Timeout : TimeSpan with get, set" Usage="System.Net.Http.HttpClient.Timeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="44b8b-450">取得或設定要求逾時前等候的時間長度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-450">Gets or sets the timespan to wait before the request times out.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="44b8b-451">要求逾時前等候的時間長度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-451">The timespan to wait before the request times out.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44b8b-452">預設值為 100,000 毫秒 (100 秒)。</span><span class="sxs-lookup"><span data-stu-id="44b8b-452">The default value is 100,000 milliseconds (100 seconds).</span></span>  
  
 <span data-ttu-id="44b8b-453">若要設定無限的逾時，請將屬性值設定為<xref:System.Threading.Timeout.InfiniteTimeSpan>。</span><span class="sxs-lookup"><span data-stu-id="44b8b-453">To set an infinite timeout, set the property value to <xref:System.Threading.Timeout.InfiniteTimeSpan>.</span></span>  
  
 <span data-ttu-id="44b8b-454">網域名稱系統 (DNS) 查詢可能需要最多 15 秒鐘傳回或逾時。如果您的要求包含需要解析的主機名稱，而且您設定<xref:System.Net.Http.HttpClient.Timeout%2A>的值小於 15 秒，可能需要 15 秒以上之前<xref:System.Net.WebException>就會擲回以指出您的要求逾時。</span><span class="sxs-lookup"><span data-stu-id="44b8b-454">A Domain Name System (DNS) query may take up to 15 seconds to return or time out. If your request contains a host name that requires resolution and you set <xref:System.Net.Http.HttpClient.Timeout%2A> to a value less than 15 seconds, it may take 15 seconds or more before a <xref:System.Net.WebException> is thrown to indicate a timeout on your request.</span></span>  
  
 <span data-ttu-id="44b8b-455">在相同的逾時將適用於所有的要求使用此<xref:System.Net.Http.HttpClient>執行個體。</span><span class="sxs-lookup"><span data-stu-id="44b8b-455">The same timeout will apply for all requests using this <xref:System.Net.Http.HttpClient> instance.</span></span>  <span data-ttu-id="44b8b-456">您也可以設定不同的逾時使用的個別要求的<xref:System.Threading.CancellationTokenSource>工作上。</span><span class="sxs-lookup"><span data-stu-id="44b8b-456">You may also set different timeouts for individual requests using a <xref:System.Threading.CancellationTokenSource> on a task.</span></span> <span data-ttu-id="44b8b-457">請注意，只有在較短的兩個逾時將會套用。</span><span class="sxs-lookup"><span data-stu-id="44b8b-457">Note that only the shorter of the two timeouts will apply.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="44b8b-458">指定的逾時值小於或等於零，而且不是 <see cref="F:System.Threading.Timeout.InfiniteTimeSpan" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-458">The timeout specified is less than or equal to zero and is not <see cref="F:System.Threading.Timeout.InfiniteTimeSpan" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="44b8b-459">作業已經在目前的執行個體上啟動。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-459">An operation has already been started on the current instance.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="44b8b-460">目前的執行個體已經過處置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b8b-460">The current instance has been disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>