<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="HttpClient.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac565f3ff05350afbb9dccda0dc1b2898fea192237e.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">65f3ff05350afbb9dccda0dc1b2898fea192237e</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Net.Http.HttpClient">
          <source>Provides a base class for sending HTTP requests and receiving HTTP responses from a resource identified by a URI.</source>
          <target state="translated">提供基底類別，用來傳送 HTTP 要求，以及從 URI 所識別的資源接收 HTTP 回應。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source>The <ph id="ph1">&lt;xref:System.Net.Http.HttpClient&gt;</ph> class instance acts as a session to send HTTP requests.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Http.HttpClient&gt;</ph>類別執行個體做為傳送 HTTP 要求的工作階段。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source>An <ph id="ph1">&lt;xref:System.Net.Http.HttpClient&gt;</ph> instance is a collection of settings applied to all requests executed by that instance.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Http.HttpClient&gt;</ph>執行個體是設定套用至該執行個體所執行的所有要求的集合。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source>In addition, every <ph id="ph1">&lt;xref:System.Net.Http.HttpClient&gt;</ph> instance uses its own connection pool, isolating its requests from requests executed by other <ph id="ph2">&lt;xref:System.Net.Http.HttpClient&gt;</ph> instances.</source>
          <target state="translated">此外，每個<ph id="ph1">&lt;xref:System.Net.Http.HttpClient&gt;</ph>執行個體會使用自己的連接集區，隔離其源自執行其他要求<ph id="ph2">&lt;xref:System.Net.Http.HttpClient&gt;</ph>執行個體。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source>The <ph id="ph1">&lt;xref:System.Net.Http.HttpClient&gt;</ph> also acts as a base class for more specific HTTP clients.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Http.HttpClient&gt;</ph>也會做為更特定的 HTTP 用戶端的基底類別。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source>An example would be a FacebookHttpClient providing additional methods specific to a Facebook web service (a GetFriends method, for instance).</source>
          <target state="translated">範例就是提供特定的 Facebook web 服務的其他方法 FacebookHttpClient (GetFriends 方法，執行個體)。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source>Derived classes should not override the virtual methods on the class.</source>
          <target state="translated">在衍生的類別不應該覆寫類別上的虛擬方法。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source>Instead, use a constructor overload that accepts <ph id="ph1">&lt;xref:System.Net.Http.HttpMessageHandler&gt;</ph> to configure any pre- or post-request processing instead.</source>
          <target state="translated">請改用可接受的建構函式多載<ph id="ph1">&lt;xref:System.Net.Http.HttpMessageHandler&gt;</ph>設定任何前置或後的要求處理改為。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source>By default, <ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph> will be used to send requests to the server.</source>
          <target state="translated">根據預設，<ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph>將用來將要求傳送至伺服器。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source>This behavior can be modified by specifying a different channel in one of the constructor overloads taking a <ph id="ph1">&lt;xref:System.Net.Http.HttpMessageHandler&gt;</ph> instance as parameter.</source>
          <target state="translated">可以修改此行為，藉由指定不同的通道，其中一種建構函式多載採用<ph id="ph1">&lt;xref:System.Net.Http.HttpMessageHandler&gt;</ph>做為參數的執行個體。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source>If features like authentication or caching are required, <ph id="ph1">&lt;xref:System.Net.Http.WebRequestHandler&gt;</ph> can be used to configure settings and the instance can be passed to the constructor.</source>
          <target state="translated">如果需要，功能，例如驗證或快取<ph id="ph1">&lt;xref:System.Net.Http.WebRequestHandler&gt;</ph>可以用來設定和執行個體傳遞至建構函式。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source>The returned handler can be passed to one of the constructor overloads taking a <ph id="ph1">&lt;xref:System.Net.Http.HttpMessageHandler&gt;</ph> parameter.</source>
          <target state="translated">傳回的處理常式可以傳遞至其中一個建構函式多載採用<ph id="ph1">&lt;xref:System.Net.Http.HttpMessageHandler&gt;</ph>參數。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source>If an app using <ph id="ph1">&lt;xref:System.Net.Http.HttpClient&gt;</ph> and related classes in the  <ph id="ph2">&lt;xref:System.Net.Http&gt;</ph> namespace intends to download large amounts of data (50 megabytes or more), then the app should stream those downloads and not use the default buffering.</source>
          <target state="translated">如果應用程式使用<ph id="ph1">&lt;xref:System.Net.Http.HttpClient&gt;</ph>和相關類別中的<ph id="ph2">&lt;xref:System.Net.Http&gt;</ph>命名空間所要下載大量的資料 （50 mb 或以上），則應用程式應該串流處理這些下載項目並不會使用預設的緩衝處理。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source>If the default buffering is used the client memory usage will get very large, potentially resulting in substantially reduced performance.</source>
          <target state="translated">如果使用預設的緩衝處理的用戶端記憶體使用量會很大，而且可能會大幅導致效能降低。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source>The following methods are thread safe:</source>
          <target state="translated">具備執行緒安全的方法如下：</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source><ph id="ph1">&lt;xref:System.Net.Http.HttpClient&gt;</ph> is intended to be instantiated once and re-used throughout the life of an application.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Http.HttpClient&gt;</ph> 被要具現化一次和存留期的應用程式內重複使用。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source>Instantiating an HttpClient class for every request will exhaust the number of sockets available under heavy loads.</source>
          <target state="translated">每個要求的 HttpClient 類別具現化會耗盡載量下可用的通訊端數目。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source>This will result in SocketException errors.</source>
          <target state="translated">這會導致 SocketException 錯誤。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source>Below is an example using HttpClient correctly.</source>
          <target state="translated">以下是正確地使用 HttpClient 範例。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source>The <ph id="ph1">&lt;xref:System.Net.Http.HttpClient&gt;</ph> is a high-level API that wraps the lower-level functionality available on each platform where it runs.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Http.HttpClient&gt;</ph>是包裝在每個平台可用的較低層級功能，其執行所在的高層級 API。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source>On each platform, <ph id="ph1">&lt;xref:System.Net.Http.HttpClient&gt;</ph> tries to use the best available transport:</source>
          <target state="translated">每個平台上，<ph id="ph1">&lt;xref:System.Net.Http.HttpClient&gt;</ph>便會嘗試使用最適合的可用傳輸：</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source><bpt id="p1">**</bpt>Host/Runtime<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Host/Runtime<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source><bpt id="p1">**</bpt>Backend<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>後端<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source>Windows/.NET Framework</source>
          <target state="translated">Windows/.NET Framework</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source>Windows/Mono</source>
          <target state="translated">Windows/Mono</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source>Windows/UWP</source>
          <target state="translated">Windows/UWP</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source>Windows native <ph id="ph1">&lt;xref:System.Net.Http.WinHttpHandler&gt;</ph> (HTTP 2.0 capable)</source>
          <target state="translated">Windows 原生<ph id="ph1">&lt;xref:System.Net.Http.WinHttpHandler&gt;</ph>(支援 HTTP 2.0)</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source>Windows/.NET Core</source>
          <target state="translated">Windows/.NET Core</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source>Windows native <ph id="ph1">&lt;xref:System.Net.Http.WinHttpHandler&gt;</ph> (HTTP 2.0 capable)</source>
          <target state="translated">Windows 原生<ph id="ph1">&lt;xref:System.Net.Http.WinHttpHandler&gt;</ph>(支援 HTTP 2.0)</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source>Android/Xamarin</source>
          <target state="translated">Android/Xamarin</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source>Selected at build-time.</source>
          <target state="translated">選取此選項，在建置階段。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source>Can either use <ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph> or be configured to use Android's native <bpt id="p1">[</bpt><ph id="ph2">`HttpURLConnection`</ph><ept id="p1">](https://developer.xamarin.com/api/type/Java.Net.HttpURLConnection/)</ept></source>
          <target state="translated">可以使用<ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph>或設定為使用 Android 的原生 <bpt id="p1">[</bpt><ph id="ph2">`HttpURLConnection`</ph><ept id="p1">](https://developer.xamarin.com/api/type/Java.Net.HttpURLConnection/)</ept></target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source>iOS, tvOS, watchOS/Xamarin</source>
          <target state="translated">iOS、 tvOS、 watchOS/Xamarin</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source>Selected at build-time.</source>
          <target state="translated">選取此選項，在建置階段。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source>Can either use <ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph> or be configured to use Apple's <bpt id="p1">[</bpt><ph id="ph2">`NSUrlSession`</ph><ept id="p1">](https://developer.xamarin.com/api/type/MonoTouch.Foundation.NSUrlSession/)</ept> (HTTP 2.0 capable)</source>
          <target state="translated">可以使用<ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph>或設定要使用 Apple <bpt id="p1">[</bpt> <ph id="ph2">`NSUrlSession`</ph> <ept id="p1">](https://developer.xamarin.com/api/type/MonoTouch.Foundation.NSUrlSession/)</ept> (支援 HTTP 2.0)</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source>macOS/Xamarin</source>
          <target state="translated">macOS/Xamarin</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source>Selected at build-time.</source>
          <target state="translated">選取此選項，在建置階段。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source>Can either use <ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph> or be configured to use Apple's <bpt id="p1">[</bpt><ph id="ph2">`NSUrlSession`</ph><ept id="p1">](https://developer.xamarin.com/api/type/MonoTouch.Foundation.NSUrlSession/)</ept> (HTTP 2.0 capable)</source>
          <target state="translated">可以使用<ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph>或設定要使用 Apple <bpt id="p1">[</bpt> <ph id="ph2">`NSUrlSession`</ph> <ept id="p1">](https://developer.xamarin.com/api/type/MonoTouch.Foundation.NSUrlSession/)</ept> (支援 HTTP 2.0)</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source>macOS/Mono</source>
          <target state="translated">macOS/Mono</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source>macOS/.NET Core</source>
          <target state="translated">macOS/.NET Core</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source><ph id="ph1">`libcurl`</ph>-based HTTP transport (HTTP 2.0 capable)</source>
          <target state="translated"><ph id="ph1">`libcurl`</ph>-基礎 HTTP 傳輸 (支援 HTTP 2.0)</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source>Linux/Mono</source>
          <target state="translated">Linux/單聲道</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source>Linux/.NET Core</source>
          <target state="translated">Linux/.NET Core</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source><ph id="ph1">`libcurl`</ph>-based HTTP transport (HTTP 2.0 capable)</source>
          <target state="translated"><ph id="ph1">`libcurl`</ph>-基礎 HTTP 傳輸 (支援 HTTP 2.0)</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source>Users can also configure a specific transport for <ph id="ph1">&lt;xref:System.Net.Http.HttpClient&gt;</ph> by invoking the <ph id="ph2">&lt;xref:System.Net.Http.HttpClient.%23ctor*&gt;</ph> constructor that takes an <ph id="ph3">&lt;xref:System.Net.Http.HttpMessageHandler&gt;</ph>.</source>
          <target state="translated">使用者也可以設定的特定傳輸<ph id="ph1">&lt;xref:System.Net.Http.HttpClient&gt;</ph>叫用<ph id="ph2">&lt;xref:System.Net.Http.HttpClient.%23ctor*&gt;</ph>建構函式<ph id="ph3">&lt;xref:System.Net.Http.HttpMessageHandler&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="T:System.Net.Http.HttpClient">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.Http.HttpClient" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Net.Http.HttpClient" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source><ph id="ph1">&lt;xref:System.Net.Http.HttpClient&gt;</ph> is intended to be instantiated once and re-used throughout the life of an application.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Http.HttpClient&gt;</ph> 被要具現化一次和存留期的應用程式內重複使用。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source>Instantiating an HttpClient class for every request will exhaust the number of sockets available under heavy loads.</source>
          <target state="translated">每個要求的 HttpClient 類別具現化會耗盡載量下可用的通訊端數目。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source>This will result in SocketException errors.</source>
          <target state="translated">這會導致 SocketException 錯誤。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source>Below is an example using HttpClient correctly.</source>
          <target state="translated">以下是正確地使用 HttpClient 範例。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.Http.HttpClient" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Net.Http.HttpClient" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.#ctor(System.Net.Http.HttpMessageHandler)">
          <source>The HTTP handler stack to use for sending requests.</source>
          <target state="translated">要用來傳送要求的 HTTP 處理常式堆疊。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.#ctor(System.Net.Http.HttpMessageHandler)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.Http.HttpClient" /&gt;</ph> class with a specific handler.</source>
          <target state="translated">使用特定處理常式，初始化 <ph id="ph1">&lt;see cref="T:System.Net.Http.HttpClient" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.#ctor(System.Net.Http.HttpMessageHandler)">
          <source><ph id="ph1">`handler`</ph> will be disposed of by calling <bpt id="p1">[</bpt>HttpClient.Dispose<ept id="p1">](xref:System.Net.Http.HttpMessageInvoker.Dispose)</ept>.</source>
          <target state="translated"><ph id="ph1">`handler`</ph> 會藉由呼叫處置<bpt id="p1">[</bpt>HttpClient.Dispose<ept id="p1">](xref:System.Net.Http.HttpMessageInvoker.Dispose)</ept>。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.#ctor(System.Net.Http.HttpMessageHandler)">
          <source>The <ph id="ph1">&lt;paramref name="handler" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="handler" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.#ctor(System.Net.Http.HttpMessageHandler,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.Http.HttpMessageHandler" /&gt;</ph> responsible for processing the HTTP response messages.</source>
          <target state="translated">負責處理 HTTP 回應訊息的 <ph id="ph1">&lt;see cref="T:System.Net.Http.HttpMessageHandler" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.#ctor(System.Net.Http.HttpMessageHandler,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the inner handler should be disposed of by <bpt id="p1">[</bpt>HttpClient.Dispose<ept id="p1">](xref:System.Net.Http.HttpMessageInvoker.Dispose)</ept>, <ph id="ph2">&lt;see langword="false" /&gt;</ph> if you intend to reuse the inner handler.</source>
          <target state="translated">如果內部處理常式應由 <bpt id="p1">[</bpt>HttpClient.Dispose<ept id="p1">](xref:System.Net.Http.HttpMessageInvoker.Dispose)</ept> 處置，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，如果您想要重複使用內部處理常式，則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.#ctor(System.Net.Http.HttpMessageHandler,System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.Http.HttpClient" /&gt;</ph> class with a specific handler.</source>
          <target state="translated">使用特定處理常式，初始化 <ph id="ph1">&lt;see cref="T:System.Net.Http.HttpClient" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.#ctor(System.Net.Http.HttpMessageHandler,System.Boolean)">
          <source>The <ph id="ph1">&lt;paramref name="handler" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="handler" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="P:System.Net.Http.HttpClient.BaseAddress">
          <source>Gets or sets the base address of Uniform Resource Identifier (URI) of the Internet resource used when sending requests.</source>
          <target state="translated">取得或設定傳送要求時所使用之網際網路資源的統一資源識別元 (URI) 基底位址。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Http.HttpClient.BaseAddress">
          <source>The base address of Uniform Resource Identifier (URI) of the Internet resource used when sending requests.</source>
          <target state="translated">傳送要求時所使用之網際網路資源的統一資源識別元 (URI) 基底位址。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Http.HttpClient.BaseAddress">
          <source>When sending a <ph id="ph1">&lt;xref:System.Net.Http.HttpRequestMessage&gt;</ph> with a relative Uri, the message Uri will be added to the <ph id="ph2">&lt;xref:System.Net.Http.HttpClient.BaseAddress%2A&gt;</ph> property to create an absolute Uri.</source>
          <target state="translated">當傳送<ph id="ph1">&lt;xref:System.Net.Http.HttpRequestMessage&gt;</ph>與相對 Uri，在訊息 Uri 將會加入至<ph id="ph2">&lt;xref:System.Net.Http.HttpClient.BaseAddress%2A&gt;</ph>屬性以建立絕對 Uri。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.CancelPendingRequests">
          <source>Cancel all pending requests on this instance.</source>
          <target state="translated">取消這個執行個體上的所有暫止要求。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.CancelPendingRequests">
          <source>After calling this method, the <ph id="ph1">&lt;xref:System.Net.Http.HttpClient&gt;</ph> instance can still be used to execute additional requests.</source>
          <target state="translated">呼叫這個方法後,<ph id="ph1">&lt;xref:System.Net.Http.HttpClient&gt;</ph>執行個體仍可用來執行其他的要求。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="P:System.Net.Http.HttpClient.DefaultRequestHeaders">
          <source>Gets the headers which should be sent with each request.</source>
          <target state="translated">取得應該在每個要求中傳送的標頭。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Http.HttpClient.DefaultRequestHeaders">
          <source>The headers which should be sent with each request.</source>
          <target state="translated">應該藉由每個要求傳送的標頭。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Http.HttpClient.DefaultRequestHeaders">
          <source>Headers set on this property don't need to be set on request messages again.</source>
          <target state="translated">這個屬性上設定的標頭，不需要再次設定要求訊息上。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="T:System.Net.Http.HttpClient">
          <source>Send a DELETE request to the specified Uri as an asynchronous operation.</source>
          <target state="translated">以非同步作業的方式，將 DELETE 要求傳送至指定的 URI。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.DeleteAsync(System.String)">
          <source>The Uri the request is sent to.</source>
          <target state="translated">傳送要求的目標 URI。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.DeleteAsync(System.String)">
          <source>Send a DELETE request to the specified Uri as an asynchronous operation.</source>
          <target state="translated">以非同步作業的方式，將 DELETE 要求傳送至指定的 URI。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.DeleteAsync(System.String)">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">工作物件，表示非同步作業。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.DeleteAsync(System.String)">
          <source>This operation will not block.</source>
          <target state="translated">這項作業不會封鎖。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.DeleteAsync(System.String)">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> object will complete after the whole response (including content) is read.</source>
          <target state="translated">傳回的 <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> 物件會在讀取完整的回應 (包括內容) 之後完成。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.DeleteAsync(System.String)">
          <source>The <ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.DeleteAsync(System.String)">
          <source>The request message was already sent by the <ph id="ph1">&lt;see cref="T:System.Net.Http.HttpClient" /&gt;</ph> instance.</source>
          <target state="translated">要求訊息已經透過 <ph id="ph1">&lt;see cref="T:System.Net.Http.HttpClient" /&gt;</ph> 執行個體傳送。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.DeleteAsync(System.String)">
          <source>The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</source>
          <target state="translated">要求已因基本問題 (例如網路連線、DNS 失敗、伺服器憑證驗證或逾時) 而失敗。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.DeleteAsync(System.Uri)">
          <source>The Uri the request is sent to.</source>
          <target state="translated">傳送要求的目標 URI。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.DeleteAsync(System.Uri)">
          <source>Send a DELETE request to the specified Uri as an asynchronous operation.</source>
          <target state="translated">以非同步作業的方式，將 DELETE 要求傳送至指定的 URI。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.DeleteAsync(System.Uri)">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">工作物件，表示非同步作業。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.DeleteAsync(System.Uri)">
          <source>This operation will not block.</source>
          <target state="translated">這項作業不會封鎖。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.DeleteAsync(System.Uri)">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> object will complete after the whole response (including content) is read.</source>
          <target state="translated">傳回的 <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> 物件會在讀取完整的回應 (包括內容) 之後完成。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.DeleteAsync(System.Uri)">
          <source>The <ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.DeleteAsync(System.Uri)">
          <source>The request message was already sent by the <ph id="ph1">&lt;see cref="T:System.Net.Http.HttpClient" /&gt;</ph> instance.</source>
          <target state="translated">要求訊息已經透過 <ph id="ph1">&lt;see cref="T:System.Net.Http.HttpClient" /&gt;</ph> 執行個體傳送。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.DeleteAsync(System.Uri)">
          <source>The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</source>
          <target state="translated">要求已因基本問題 (例如網路連線、DNS 失敗、伺服器憑證驗證或逾時) 而失敗。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.DeleteAsync(System.String,System.Threading.CancellationToken)">
          <source>The Uri the request is sent to.</source>
          <target state="translated">傳送要求的目標 URI。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.DeleteAsync(System.String,System.Threading.CancellationToken)">
          <source>A cancellation token that can be used by other objects or threads to receive notice of cancellation.</source>
          <target state="translated">取消語彙基元，可由其他物件或執行緒用來接收取消通知。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.DeleteAsync(System.String,System.Threading.CancellationToken)">
          <source>Send a DELETE request to the specified Uri with a cancellation token as an asynchronous operation.</source>
          <target state="translated">以非同步作業的方式，傳送 DELETE 要求和取消權杖至指定的 Uri。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.DeleteAsync(System.String,System.Threading.CancellationToken)">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">工作物件，表示非同步作業。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.DeleteAsync(System.String,System.Threading.CancellationToken)">
          <source>This operation will not block.</source>
          <target state="translated">這項作業不會封鎖。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.DeleteAsync(System.String,System.Threading.CancellationToken)">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> object will complete after the whole response (including content) is read.</source>
          <target state="translated">傳回的 <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> 物件會在讀取完整的回應 (包括內容) 之後完成。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.DeleteAsync(System.String,System.Threading.CancellationToken)">
          <source>The <ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.DeleteAsync(System.String,System.Threading.CancellationToken)">
          <source>The request message was already sent by the <ph id="ph1">&lt;see cref="T:System.Net.Http.HttpClient" /&gt;</ph> instance.</source>
          <target state="translated">要求訊息已經透過 <ph id="ph1">&lt;see cref="T:System.Net.Http.HttpClient" /&gt;</ph> 執行個體傳送。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.DeleteAsync(System.String,System.Threading.CancellationToken)">
          <source>The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</source>
          <target state="translated">要求已因基本問題 (例如網路連線、DNS 失敗、伺服器憑證驗證或逾時) 而失敗。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.DeleteAsync(System.Uri,System.Threading.CancellationToken)">
          <source>The Uri the request is sent to.</source>
          <target state="translated">傳送要求的目標 URI。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.DeleteAsync(System.Uri,System.Threading.CancellationToken)">
          <source>A cancellation token that can be used by other objects or threads to receive notice of cancellation.</source>
          <target state="translated">取消語彙基元，可由其他物件或執行緒用來接收取消通知。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.DeleteAsync(System.Uri,System.Threading.CancellationToken)">
          <source>Send a DELETE request to the specified Uri with a cancellation token as an asynchronous operation.</source>
          <target state="translated">以非同步作業的方式，傳送 DELETE 要求和取消權杖至指定的 Uri。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.DeleteAsync(System.Uri,System.Threading.CancellationToken)">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">工作物件，表示非同步作業。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.DeleteAsync(System.Uri,System.Threading.CancellationToken)">
          <source>This operation will not block.</source>
          <target state="translated">這項作業不會封鎖。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.DeleteAsync(System.Uri,System.Threading.CancellationToken)">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> object will complete after the whole response (including content) is read.</source>
          <target state="translated">傳回的 <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> 物件會在讀取完整的回應 (包括內容) 之後完成。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.DeleteAsync(System.Uri,System.Threading.CancellationToken)">
          <source>The <ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.DeleteAsync(System.Uri,System.Threading.CancellationToken)">
          <source>The request message was already sent by the <ph id="ph1">&lt;see cref="T:System.Net.Http.HttpClient" /&gt;</ph> instance.</source>
          <target state="translated">要求訊息已經透過 <ph id="ph1">&lt;see cref="T:System.Net.Http.HttpClient" /&gt;</ph> 執行個體傳送。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.DeleteAsync(System.Uri,System.Threading.CancellationToken)">
          <source>The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</source>
          <target state="translated">要求已因基本問題 (例如網路連線、DNS 失敗、伺服器憑證驗證或逾時) 而失敗。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to releases only unmanaged resources.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> 表示會同時釋放 Managed 和 Unmanaged 資源；<ph id="ph2">&lt;see langword="false" /&gt;</ph> 則表示只釋放 Unmanaged 資源。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.Dispose(System.Boolean)">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.Net.Http.HttpClient" /&gt;</ph> and optionally disposes of the managed resources.</source>
          <target state="translated">釋放 <ph id="ph1">&lt;see cref="T:System.Net.Http.HttpClient" /&gt;</ph> 所使用的 Unmanaged 資源，並選擇性處置 Managed 資源。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.Dispose(System.Boolean)">
          <source>This method is called by the public <ph id="ph1">`Dispose()`</ph> method and the <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> method.</source>
          <target state="translated">這個方法會呼叫公用<ph id="ph1">`Dispose()`</ph>方法和<ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.Dispose(System.Boolean)">
          <source><ph id="ph1">`Dispose()`</ph> invokes the protected <ph id="ph2">`Dispose(Boolean)`</ph> method with the <ph id="ph3">`disposing`</ph> parameter set to <ph id="ph4">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">`Dispose()`</ph> 叫用受保護<ph id="ph2">`Dispose(Boolean)`</ph>方法<ph id="ph3">`disposing`</ph>參數設定為<ph id="ph4">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> invokes <ph id="ph2">`Dispose`</ph> with <ph id="ph3">`disposing`</ph> set to <ph id="ph4">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> 叫用<ph id="ph2">`Dispose`</ph>與<ph id="ph3">`disposing`</ph>設<ph id="ph4">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.Dispose(System.Boolean)">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is <ph id="ph2">`true`</ph>, this method releases all resources held by any managed objects that this <ph id="ph3">&lt;xref:System.Net.Http.HttpClient&gt;</ph> references.</source>
          <target state="translated"><ph id="ph1">`disposing`</ph> 參數為 <ph id="ph2">`true`</ph> 時，這個方法會釋放 <ph id="ph3">&lt;xref:System.Net.Http.HttpClient&gt;</ph> 參考的任何 Managed 物件所掌握的資源。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.Dispose(System.Boolean)">
          <source>This method invokes the <ph id="ph1">`Dispose()`</ph> method of each referenced object.</source>
          <target state="translated">這個方法會叫用每個參考物件的 <ph id="ph1">`Dispose()`</ph> 方法。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.Dispose(System.Boolean)">
          <source>When this method is called, the <ph id="ph1">&lt;xref:System.Net.Http.HttpClient.CancelPendingRequests%2A&gt;</ph> method is called to abort all pending requests.</source>
          <target state="translated">呼叫這個方法時，<ph id="ph1">&lt;xref:System.Net.Http.HttpClient.CancelPendingRequests%2A&gt;</ph>呼叫方法來中止所有暫止要求。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="T:System.Net.Http.HttpClient">
          <source>Send a GET request to the specified Uri as an asynchronous operation.</source>
          <target state="translated">以非同步作業的方式，將 GET 要求傳送至指定的 URI。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source>The operation will not block.</source>
          <target state="translated">作業不會封鎖。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetAsync(System.String)">
          <source>The Uri the request is sent to.</source>
          <target state="translated">傳送要求的目標 URI。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetAsync(System.String)">
          <source>Send a GET request to the specified Uri as an asynchronous operation.</source>
          <target state="translated">以非同步作業的方式，將 GET 要求傳送至指定的 URI。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetAsync(System.String)">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">工作物件，表示非同步作業。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.GetAsync(System.String)">
          <source>This operation will not block.</source>
          <target state="translated">這項作業不會封鎖。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.GetAsync(System.String)">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> object will complete after the whole response (including content) is read.</source>
          <target state="translated">傳回的 <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> 物件會在讀取完整的回應 (包括內容) 之後完成。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetAsync(System.String)">
          <source>The <ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetAsync(System.String)">
          <source>The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</source>
          <target state="translated">要求已因基本問題 (例如網路連線、DNS 失敗、伺服器憑證驗證或逾時) 而失敗。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetAsync(System.Uri)">
          <source>The Uri the request is sent to.</source>
          <target state="translated">傳送要求的目標 URI。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetAsync(System.Uri)">
          <source>Send a GET request to the specified Uri as an asynchronous operation.</source>
          <target state="translated">以非同步作業的方式，將 GET 要求傳送至指定的 URI。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetAsync(System.Uri)">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">工作物件，表示非同步作業。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.GetAsync(System.Uri)">
          <source>This operation will not block.</source>
          <target state="translated">這項作業不會封鎖。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.GetAsync(System.Uri)">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> object will complete after the whole response (including content) is read.</source>
          <target state="translated">傳回的 <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> 物件會在讀取完整的回應 (包括內容) 之後完成。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetAsync(System.Uri)">
          <source>The <ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetAsync(System.Uri)">
          <source>The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</source>
          <target state="translated">要求已因基本問題 (例如網路連線、DNS 失敗、伺服器憑證驗證或逾時) 而失敗。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetAsync(System.String,System.Net.Http.HttpCompletionOption)">
          <source>The Uri the request is sent to.</source>
          <target state="translated">傳送要求的目標 URI。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetAsync(System.String,System.Net.Http.HttpCompletionOption)">
          <source>An HTTP completion option value that indicates when the operation should be considered completed.</source>
          <target state="translated">HTTP 完成選項值，表示作業應該被視為已完成。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetAsync(System.String,System.Net.Http.HttpCompletionOption)">
          <source>Send a GET request to the specified Uri with an HTTP completion option as an asynchronous operation.</source>
          <target state="translated">以非同步作業的方式，傳送 GET 要求和 HTTP 完成選項至指定的 Uri。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetAsync(System.String,System.Net.Http.HttpCompletionOption)">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">工作物件，表示非同步作業。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.GetAsync(System.String,System.Net.Http.HttpCompletionOption)">
          <source>This operation will not block.</source>
          <target state="translated">這項作業不會封鎖。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.GetAsync(System.String,System.Net.Http.HttpCompletionOption)">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> object will complete based on the <ph id="ph2">`completionOption`</ph> parameter after the part or all of the response (including content) is read.</source>
          <target state="translated">傳回的 <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> 物件何時完成，將在讀取部分或所有回應 (包括內容) 之後，根據 <ph id="ph2">`completionOption`</ph> 參數決定。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetAsync(System.String,System.Net.Http.HttpCompletionOption)">
          <source>The <ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetAsync(System.String,System.Net.Http.HttpCompletionOption)">
          <source>The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</source>
          <target state="translated">要求已因基本問題 (例如網路連線、DNS 失敗、伺服器憑證驗證或逾時) 而失敗。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetAsync(System.String,System.Threading.CancellationToken)">
          <source>The Uri the request is sent to.</source>
          <target state="translated">傳送要求的目標 URI。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetAsync(System.String,System.Threading.CancellationToken)">
          <source>A cancellation token that can be used by other objects or threads to receive notice of cancellation.</source>
          <target state="translated">取消語彙基元，可由其他物件或執行緒用來接收取消通知。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetAsync(System.String,System.Threading.CancellationToken)">
          <source>Send a GET request to the specified Uri with a cancellation token as an asynchronous operation.</source>
          <target state="translated">以非同步作業的方式，傳送 GET 要求和取消權杖至指定的 Uri。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetAsync(System.String,System.Threading.CancellationToken)">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">工作物件，表示非同步作業。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.GetAsync(System.String,System.Threading.CancellationToken)">
          <source>This operation will not block.</source>
          <target state="translated">這項作業不會封鎖。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.GetAsync(System.String,System.Threading.CancellationToken)">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> object will complete after the whole response (including content) is read.</source>
          <target state="translated">傳回的 <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> 物件會在讀取完整的回應 (包括內容) 之後完成。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetAsync(System.String,System.Threading.CancellationToken)">
          <source>The <ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetAsync(System.String,System.Threading.CancellationToken)">
          <source>The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</source>
          <target state="translated">要求已因基本問題 (例如網路連線、DNS 失敗、伺服器憑證驗證或逾時) 而失敗。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetAsync(System.Uri,System.Net.Http.HttpCompletionOption)">
          <source>The Uri the request is sent to.</source>
          <target state="translated">傳送要求的目標 URI。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetAsync(System.Uri,System.Net.Http.HttpCompletionOption)">
          <source>An HTTP completion option value that indicates when the operation should be considered completed.</source>
          <target state="translated">HTTP 完成選項值，表示作業應該被視為已完成。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetAsync(System.Uri,System.Net.Http.HttpCompletionOption)">
          <source>Send a GET request to the specified Uri with an HTTP completion option as an asynchronous operation.</source>
          <target state="translated">以非同步作業的方式，傳送 GET 要求和 HTTP 完成選項至指定的 Uri。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetAsync(System.Uri,System.Net.Http.HttpCompletionOption)">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">工作物件，表示非同步作業。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.GetAsync(System.Uri,System.Net.Http.HttpCompletionOption)">
          <source>This operation will not block.</source>
          <target state="translated">這項作業不會封鎖。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.GetAsync(System.Uri,System.Net.Http.HttpCompletionOption)">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> object will complete based on the <ph id="ph2">`completionOption`</ph> parameter after the part or all of the response (including content) is read.</source>
          <target state="translated">傳回的 <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> 物件何時完成，將在讀取部分或所有回應 (包括內容) 之後，根據 <ph id="ph2">`completionOption`</ph> 參數決定。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetAsync(System.Uri,System.Net.Http.HttpCompletionOption)">
          <source>The <ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetAsync(System.Uri,System.Net.Http.HttpCompletionOption)">
          <source>The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</source>
          <target state="translated">要求已因基本問題 (例如網路連線、DNS 失敗、伺服器憑證驗證或逾時) 而失敗。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetAsync(System.Uri,System.Threading.CancellationToken)">
          <source>The Uri the request is sent to.</source>
          <target state="translated">傳送要求的目標 URI。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetAsync(System.Uri,System.Threading.CancellationToken)">
          <source>A cancellation token that can be used by other objects or threads to receive notice of cancellation.</source>
          <target state="translated">取消語彙基元，可由其他物件或執行緒用來接收取消通知。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetAsync(System.Uri,System.Threading.CancellationToken)">
          <source>Send a GET request to the specified Uri with a cancellation token as an asynchronous operation.</source>
          <target state="translated">以非同步作業的方式，傳送 GET 要求和取消權杖至指定的 Uri。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetAsync(System.Uri,System.Threading.CancellationToken)">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">工作物件，表示非同步作業。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.GetAsync(System.Uri,System.Threading.CancellationToken)">
          <source>This operation will not block.</source>
          <target state="translated">這項作業不會封鎖。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.GetAsync(System.Uri,System.Threading.CancellationToken)">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> object will complete after the whole response (including content) is read.</source>
          <target state="translated">傳回的 <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> 物件會在讀取完整的回應 (包括內容) 之後完成。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetAsync(System.Uri,System.Threading.CancellationToken)">
          <source>The <ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetAsync(System.Uri,System.Threading.CancellationToken)">
          <source>The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</source>
          <target state="translated">要求已因基本問題 (例如網路連線、DNS 失敗、伺服器憑證驗證或逾時) 而失敗。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetAsync(System.String,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)">
          <source>The Uri the request is sent to.</source>
          <target state="translated">傳送要求的目標 URI。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetAsync(System.String,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)">
          <source>An HTTP  completion option value that indicates when the operation should be considered completed.</source>
          <target state="translated">HTTP 完成選項值，表示作業應該被視為已完成。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetAsync(System.String,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)">
          <source>A cancellation token that can be used by other objects or threads to receive notice of cancellation.</source>
          <target state="translated">取消語彙基元，可由其他物件或執行緒用來接收取消通知。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetAsync(System.String,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)">
          <source>Send a GET request to the specified Uri with an HTTP completion option and a cancellation token as an asynchronous operation.</source>
          <target state="translated">以非同步作業的方式，傳送 GET 要求和 HTTP 完成選項以及取消語彙基元至指定的 Uri。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetAsync(System.String,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">工作物件，表示非同步作業。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.GetAsync(System.String,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)">
          <source>This operation will not block.</source>
          <target state="translated">這項作業不會封鎖。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.GetAsync(System.String,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> object will complete based on the <ph id="ph2">`completionOption`</ph> parameter after the part or all of the response (including content) is read.</source>
          <target state="translated">傳回的 <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> 物件何時完成，將在讀取部分或所有回應 (包括內容) 之後，根據 <ph id="ph2">`completionOption`</ph> 參數決定。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetAsync(System.String,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)">
          <source>The <ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetAsync(System.String,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)">
          <source>The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</source>
          <target state="translated">要求已因基本問題 (例如網路連線、DNS 失敗、伺服器憑證驗證或逾時) 而失敗。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetAsync(System.Uri,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)">
          <source>The Uri the request is sent to.</source>
          <target state="translated">傳送要求的目標 URI。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetAsync(System.Uri,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)">
          <source>An HTTP  completion option value that indicates when the operation should be considered completed.</source>
          <target state="translated">HTTP 完成選項值，表示作業應該被視為已完成。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetAsync(System.Uri,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)">
          <source>A cancellation token that can be used by other objects or threads to receive notice of cancellation.</source>
          <target state="translated">取消語彙基元，可由其他物件或執行緒用來接收取消通知。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetAsync(System.Uri,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)">
          <source>Send a GET request to the specified Uri with an HTTP completion option and a cancellation token as an asynchronous operation.</source>
          <target state="translated">以非同步作業的方式，傳送 GET 要求和 HTTP 完成選項以及取消語彙基元至指定的 Uri。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetAsync(System.Uri,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">工作物件，表示非同步作業。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.GetAsync(System.Uri,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)">
          <source>This operation will not block.</source>
          <target state="translated">這項作業不會封鎖。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.GetAsync(System.Uri,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> object will complete based on the <ph id="ph2">`completionOption`</ph> parameter after the part or all of the response (including content) is read.</source>
          <target state="translated">傳回的 <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> 物件何時完成，將在讀取部分或所有回應 (包括內容) 之後，根據 <ph id="ph2">`completionOption`</ph> 參數決定。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetAsync(System.Uri,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)">
          <source>The <ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetAsync(System.Uri,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)">
          <source>The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</source>
          <target state="translated">要求已因基本問題 (例如網路連線、DNS 失敗、伺服器憑證驗證或逾時) 而失敗。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="T:System.Net.Http.HttpClient">
          <source>Send a GET request to the specified Uri and return the response body as a byte array in an asynchronous operation.</source>
          <target state="translated">將 GET 要求傳送至指定的 URI，並透過非同步作業，以位元組陣列形式傳回回應內容。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source>The operation will not block.</source>
          <target state="translated">作業不會封鎖。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetByteArrayAsync(System.String)">
          <source>The Uri the request is sent to.</source>
          <target state="translated">傳送要求的目標 URI。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetByteArrayAsync(System.String)">
          <source>Send a GET request to the specified Uri and return the response body as a byte array in an asynchronous operation.</source>
          <target state="translated">將 GET 要求傳送至指定的 URI，並透過非同步作業，以位元組陣列形式傳回回應內容。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetByteArrayAsync(System.String)">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">工作物件，表示非同步作業。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.GetByteArrayAsync(System.String)">
          <source>This operation will not block.</source>
          <target state="translated">這項作業不會封鎖。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.GetByteArrayAsync(System.String)">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> object will complete after the whole response body is read.</source>
          <target state="translated">傳回的 <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> 物件會在讀取完整的回應主體之後完成。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetByteArrayAsync(System.String)">
          <source>The <ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetByteArrayAsync(System.String)">
          <source>The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</source>
          <target state="translated">要求已因基本問題 (例如網路連線、DNS 失敗、伺服器憑證驗證或逾時) 而失敗。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetByteArrayAsync(System.Uri)">
          <source>The Uri the request is sent to.</source>
          <target state="translated">傳送要求的目標 URI。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetByteArrayAsync(System.Uri)">
          <source>Send a GET request to the specified Uri and return the response body as a byte array in an asynchronous operation.</source>
          <target state="translated">將 GET 要求傳送至指定的 URI，並透過非同步作業，以位元組陣列形式傳回回應內容。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetByteArrayAsync(System.Uri)">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">工作物件，表示非同步作業。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.GetByteArrayAsync(System.Uri)">
          <source>This operation will not block.</source>
          <target state="translated">這項作業不會封鎖。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.GetByteArrayAsync(System.Uri)">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> object will complete after the whole response body is read.</source>
          <target state="translated">傳回的 <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> 物件會在讀取完整的回應主體之後完成。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetByteArrayAsync(System.Uri)">
          <source>The <ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetByteArrayAsync(System.Uri)">
          <source>The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</source>
          <target state="translated">要求已因基本問題 (例如網路連線、DNS 失敗、伺服器憑證驗證或逾時) 而失敗。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="T:System.Net.Http.HttpClient">
          <source>Send a GET request to the specified Uri and return the response body as a stream in an asynchronous operation.</source>
          <target state="translated">將 GET 要求傳送至指定的 URI，並透過非同步作業，以資料流形式傳回回應內容。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source>The operation will not block.</source>
          <target state="translated">作業不會封鎖。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetStreamAsync(System.String)">
          <source>The Uri the request is sent to.</source>
          <target state="translated">傳送要求的目標 URI。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetStreamAsync(System.String)">
          <source>Send a GET request to the specified Uri and return the response body as a stream in an asynchronous operation.</source>
          <target state="translated">將 GET 要求傳送至指定的 URI，並透過非同步作業，以資料流形式傳回回應內容。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetStreamAsync(System.String)">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">工作物件，表示非同步作業。</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.GetStreamAsync(System.String)">
          <source>This operation will not block.</source>
          <target state="translated">這項作業不會封鎖。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.GetStreamAsync(System.String)">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> object will complete after the whole response body is read.</source>
          <target state="translated">傳回的 <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> 物件會在讀取完整的回應主體之後完成。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.GetStreamAsync(System.String)">
          <source>This method does not buffer the stream.</source>
          <target state="translated">這個方法不緩衝的資料流。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetStreamAsync(System.String)">
          <source>The <ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetStreamAsync(System.String)">
          <source>The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</source>
          <target state="translated">要求已因基本問題 (例如網路連線、DNS 失敗、伺服器憑證驗證或逾時) 而失敗。</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetStreamAsync(System.Uri)">
          <source>The Uri the request is sent to.</source>
          <target state="translated">傳送要求的目標 URI。</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetStreamAsync(System.Uri)">
          <source>Send a GET request to the specified Uri and return the response body as a stream in an asynchronous operation.</source>
          <target state="translated">將 GET 要求傳送至指定的 URI，並透過非同步作業，以資料流形式傳回回應內容。</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetStreamAsync(System.Uri)">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">工作物件，表示非同步作業。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.GetStreamAsync(System.Uri)">
          <source>This operation will not block.</source>
          <target state="translated">這項作業不會封鎖。</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.GetStreamAsync(System.Uri)">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> object will complete after the whole response body is read.</source>
          <target state="translated">傳回的 <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> 物件會在讀取完整的回應主體之後完成。</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.GetStreamAsync(System.Uri)">
          <source>This method does not buffer the stream.</source>
          <target state="translated">這個方法不緩衝的資料流。</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetStreamAsync(System.Uri)">
          <source>The <ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetStreamAsync(System.Uri)">
          <source>The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</source>
          <target state="translated">要求已因基本問題 (例如網路連線、DNS 失敗、伺服器憑證驗證或逾時) 而失敗。</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="T:System.Net.Http.HttpClient">
          <source>Send a GET request to the specified Uri and return the response body as a string in an asynchronous operation.</source>
          <target state="translated">將 GET 要求傳送至指定的 URI，並透過非同步作業，以字串形式傳回回應內容。</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source>This operation will not block.</source>
          <target state="translated">這項作業不會封鎖。</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetStringAsync(System.String)">
          <source>The Uri the request is sent to.</source>
          <target state="translated">傳送要求的目標 URI。</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetStringAsync(System.String)">
          <source>Send a GET request to the specified Uri and return the response body as a string in an asynchronous operation.</source>
          <target state="translated">將 GET 要求傳送至指定的 URI，並透過非同步作業，以字串形式傳回回應內容。</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetStringAsync(System.String)">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">工作物件，表示非同步作業。</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.GetStringAsync(System.String)">
          <source>This operation will not block.</source>
          <target state="translated">這項作業不會封鎖。</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.GetStringAsync(System.String)">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> object will complete after the whole response body is read.</source>
          <target state="translated">傳回的 <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> 物件會在讀取完整的回應主體之後完成。</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetStringAsync(System.String)">
          <source>The <ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetStringAsync(System.String)">
          <source>The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</source>
          <target state="translated">要求已因基本問題 (例如網路連線、DNS 失敗、伺服器憑證驗證或逾時) 而失敗。</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetStringAsync(System.Uri)">
          <source>The Uri the request is sent to.</source>
          <target state="translated">傳送要求的目標 URI。</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetStringAsync(System.Uri)">
          <source>Send a GET request to the specified Uri and return the response body as a string in an asynchronous operation.</source>
          <target state="translated">將 GET 要求傳送至指定的 URI，並透過非同步作業，以字串形式傳回回應內容。</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetStringAsync(System.Uri)">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">工作物件，表示非同步作業。</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.GetStringAsync(System.Uri)">
          <source>This operation will not block.</source>
          <target state="translated">這項作業不會封鎖。</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.GetStringAsync(System.Uri)">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> object will complete after the whole response body is read.</source>
          <target state="translated">傳回的 <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> 物件會在讀取完整的回應主體之後完成。</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetStringAsync(System.Uri)">
          <source>The <ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.GetStringAsync(System.Uri)">
          <source>The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</source>
          <target state="translated">要求已因基本問題 (例如網路連線、DNS 失敗、伺服器憑證驗證或逾時) 而失敗。</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" uid="P:System.Net.Http.HttpClient.MaxResponseContentBufferSize">
          <source>Gets or sets the maximum number of bytes to buffer when reading the response content.</source>
          <target state="translated">取得或設定讀取回應內容時要緩衝處理的位元組數目上限。</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Http.HttpClient.MaxResponseContentBufferSize">
          <source>The maximum number of bytes to buffer when reading the response content.</source>
          <target state="translated">讀取回應內容時要緩衝處理的位元組數目上限。</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Http.HttpClient.MaxResponseContentBufferSize">
          <source>The default value for this property is 2 gigabytes.</source>
          <target state="translated">此屬性的預設值是 2 GB。</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Http.HttpClient.MaxResponseContentBufferSize">
          <source>An app can set the <ph id="ph1">&lt;xref:System.Net.Http.HttpClient.MaxResponseContentBufferSize%2A&gt;</ph> property to a lower value to limit the size of the response to buffer when reading the response.</source>
          <target state="translated">應用程式可以設定<ph id="ph1">&lt;xref:System.Net.Http.HttpClient.MaxResponseContentBufferSize%2A&gt;</ph>屬性來限制讀取回應時的回應緩衝區的大小較小的值。</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Http.HttpClient.MaxResponseContentBufferSize">
          <source>If the size of the response content is greater than the  <ph id="ph1">&lt;xref:System.Net.Http.HttpClient.MaxResponseContentBufferSize%2A&gt;</ph> property, an exception is thrown.</source>
          <target state="translated">回應內容的大小是否大於<ph id="ph1">&lt;xref:System.Net.Http.HttpClient.MaxResponseContentBufferSize%2A&gt;</ph>屬性，擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" uid="P:System.Net.Http.HttpClient.MaxResponseContentBufferSize">
          <source>The size specified is less than or equal to zero.</source>
          <target state="translated">指定的大小小於或等於零。</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" uid="P:System.Net.Http.HttpClient.MaxResponseContentBufferSize">
          <source>An operation has already been started on the current instance.</source>
          <target state="translated">作業已經在目前的執行個體上啟動。</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" uid="P:System.Net.Http.HttpClient.MaxResponseContentBufferSize">
          <source>The current instance has been disposed.</source>
          <target state="translated">目前的執行個體已經過處置。</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" uid="T:System.Net.Http.HttpClient">
          <source>Send a POST request to the specified Uri as an asynchronous operation.</source>
          <target state="translated">以非同步作業的方式，將 POST 要求傳送至指定的 URI。</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source>This operation will not block.</source>
          <target state="translated">這項作業不會封鎖。</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.PostAsync(System.String,System.Net.Http.HttpContent)">
          <source>The Uri the request is sent to.</source>
          <target state="translated">傳送要求的目標 URI。</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.PostAsync(System.String,System.Net.Http.HttpContent)">
          <source>The HTTP request content sent to the server.</source>
          <target state="translated">傳送至伺服器的 HTTP 要求內容。</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.PostAsync(System.String,System.Net.Http.HttpContent)">
          <source>Send a POST request to the specified Uri as an asynchronous operation.</source>
          <target state="translated">以非同步作業的方式，將 POST 要求傳送至指定的 URI。</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.PostAsync(System.String,System.Net.Http.HttpContent)">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">工作物件，表示非同步作業。</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.PostAsync(System.String,System.Net.Http.HttpContent)">
          <source>This operation will not block.</source>
          <target state="translated">這項作業不會封鎖。</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.PostAsync(System.String,System.Net.Http.HttpContent)">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> object will complete after the whole response (including content) is read.</source>
          <target state="translated">傳回的 <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> 物件會在讀取完整的回應 (包括內容) 之後完成。</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.PostAsync(System.String,System.Net.Http.HttpContent)">
          <source>The <ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.PostAsync(System.String,System.Net.Http.HttpContent)">
          <source>The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</source>
          <target state="translated">要求已因基本問題 (例如網路連線、DNS 失敗、伺服器憑證驗證或逾時) 而失敗。</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.PostAsync(System.Uri,System.Net.Http.HttpContent)">
          <source>The Uri the request is sent to.</source>
          <target state="translated">傳送要求的目標 URI。</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.PostAsync(System.Uri,System.Net.Http.HttpContent)">
          <source>The HTTP request content sent to the server.</source>
          <target state="translated">傳送至伺服器的 HTTP 要求內容。</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.PostAsync(System.Uri,System.Net.Http.HttpContent)">
          <source>Send a POST request to the specified Uri as an asynchronous operation.</source>
          <target state="translated">以非同步作業的方式，將 POST 要求傳送至指定的 URI。</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.PostAsync(System.Uri,System.Net.Http.HttpContent)">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">工作物件，表示非同步作業。</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.PostAsync(System.Uri,System.Net.Http.HttpContent)">
          <source>This operation will not block.</source>
          <target state="translated">這項作業不會封鎖。</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.PostAsync(System.Uri,System.Net.Http.HttpContent)">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> object will complete after the whole response (including content) is read.</source>
          <target state="translated">傳回的 <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> 物件會在讀取完整的回應 (包括內容) 之後完成。</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.PostAsync(System.Uri,System.Net.Http.HttpContent)">
          <source>The <ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.PostAsync(System.Uri,System.Net.Http.HttpContent)">
          <source>The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</source>
          <target state="translated">要求已因基本問題 (例如網路連線、DNS 失敗、伺服器憑證驗證或逾時) 而失敗。</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.PostAsync(System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
          <source>The Uri the request is sent to.</source>
          <target state="translated">傳送要求的目標 URI。</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.PostAsync(System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
          <source>The HTTP request content sent to the server.</source>
          <target state="translated">傳送至伺服器的 HTTP 要求內容。</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.PostAsync(System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
          <source>A cancellation token that can be used by other objects or threads to receive notice of cancellation.</source>
          <target state="translated">取消語彙基元，可由其他物件或執行緒用來接收取消通知。</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.PostAsync(System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
          <source>Send a POST request with a cancellation token as an asynchronous operation.</source>
          <target state="translated">以非同步作業的方式，傳送 POST 要求和取消語彙基元。</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.PostAsync(System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">工作物件，表示非同步作業。</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.PostAsync(System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
          <source>This operation will not block.</source>
          <target state="translated">這項作業不會封鎖。</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.PostAsync(System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> object will complete after the whole response (including content) is read.</source>
          <target state="translated">傳回的 <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> 物件會在讀取完整的回應 (包括內容) 之後完成。</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.PostAsync(System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
          <source>The <ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.PostAsync(System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
          <source>The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</source>
          <target state="translated">要求已因基本問題 (例如網路連線、DNS 失敗、伺服器憑證驗證或逾時) 而失敗。</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.PostAsync(System.Uri,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
          <source>The Uri the request is sent to.</source>
          <target state="translated">傳送要求的目標 URI。</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.PostAsync(System.Uri,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
          <source>The HTTP request content sent to the server.</source>
          <target state="translated">傳送至伺服器的 HTTP 要求內容。</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.PostAsync(System.Uri,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
          <source>A cancellation token that can be used by other objects or threads to receive notice of cancellation.</source>
          <target state="translated">取消語彙基元，可由其他物件或執行緒用來接收取消通知。</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.PostAsync(System.Uri,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
          <source>Send a POST request with a cancellation token as an asynchronous operation.</source>
          <target state="translated">以非同步作業的方式，傳送 POST 要求和取消語彙基元。</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.PostAsync(System.Uri,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">工作物件，表示非同步作業。</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.PostAsync(System.Uri,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
          <source>This operation will not block.</source>
          <target state="translated">這項作業不會封鎖。</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.PostAsync(System.Uri,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> object will complete after the whole response (including content) is read.</source>
          <target state="translated">傳回的 <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> 物件會在讀取完整的回應 (包括內容) 之後完成。</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.PostAsync(System.Uri,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
          <source>The <ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.PostAsync(System.Uri,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
          <source>The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</source>
          <target state="translated">要求已因基本問題 (例如網路連線、DNS 失敗、伺服器憑證驗證或逾時) 而失敗。</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" uid="T:System.Net.Http.HttpClient">
          <source>Send a PUT request to the specified Uri as an asynchronous operation.</source>
          <target state="translated">以非同步作業的方式，將 PUT 要求傳送至指定的 URI。</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source>This operation will not block.</source>
          <target state="translated">這項作業不會封鎖。</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.PutAsync(System.String,System.Net.Http.HttpContent)">
          <source>The Uri the request is sent to.</source>
          <target state="translated">傳送要求的目標 URI。</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.PutAsync(System.String,System.Net.Http.HttpContent)">
          <source>The HTTP request content sent to the server.</source>
          <target state="translated">傳送至伺服器的 HTTP 要求內容。</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.PutAsync(System.String,System.Net.Http.HttpContent)">
          <source>Send a PUT request to the specified Uri as an asynchronous operation.</source>
          <target state="translated">以非同步作業的方式，將 PUT 要求傳送至指定的 URI。</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.PutAsync(System.String,System.Net.Http.HttpContent)">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">工作物件，表示非同步作業。</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.PutAsync(System.String,System.Net.Http.HttpContent)">
          <source>This operation will not block.</source>
          <target state="translated">這項作業不會封鎖。</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.PutAsync(System.String,System.Net.Http.HttpContent)">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> object will complete after the whole response (including content) is read.</source>
          <target state="translated">傳回的 <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> 物件會在讀取完整的回應 (包括內容) 之後完成。</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.PutAsync(System.String,System.Net.Http.HttpContent)">
          <source>The <ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.PutAsync(System.String,System.Net.Http.HttpContent)">
          <source>The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</source>
          <target state="translated">要求已因基本問題 (例如網路連線、DNS 失敗、伺服器憑證驗證或逾時) 而失敗。</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.PutAsync(System.Uri,System.Net.Http.HttpContent)">
          <source>The Uri the request is sent to.</source>
          <target state="translated">傳送要求的目標 URI。</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.PutAsync(System.Uri,System.Net.Http.HttpContent)">
          <source>The HTTP request content sent to the server.</source>
          <target state="translated">傳送至伺服器的 HTTP 要求內容。</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.PutAsync(System.Uri,System.Net.Http.HttpContent)">
          <source>Send a PUT request to the specified Uri as an asynchronous operation.</source>
          <target state="translated">以非同步作業的方式，將 PUT 要求傳送至指定的 URI。</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.PutAsync(System.Uri,System.Net.Http.HttpContent)">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">工作物件，表示非同步作業。</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.PutAsync(System.Uri,System.Net.Http.HttpContent)">
          <source>This operation will not block.</source>
          <target state="translated">這項作業不會封鎖。</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.PutAsync(System.Uri,System.Net.Http.HttpContent)">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> object will complete after the whole response (including content) is read.</source>
          <target state="translated">傳回的 <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> 物件會在讀取完整的回應 (包括內容) 之後完成。</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.PutAsync(System.Uri,System.Net.Http.HttpContent)">
          <source>The <ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.PutAsync(System.Uri,System.Net.Http.HttpContent)">
          <source>The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</source>
          <target state="translated">要求已因基本問題 (例如網路連線、DNS 失敗、伺服器憑證驗證或逾時) 而失敗。</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.PutAsync(System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
          <source>The Uri the request is sent to.</source>
          <target state="translated">傳送要求的目標 URI。</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.PutAsync(System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
          <source>The HTTP request content sent to the server.</source>
          <target state="translated">傳送至伺服器的 HTTP 要求內容。</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.PutAsync(System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
          <source>A cancellation token that can be used by other objects or threads to receive notice of cancellation.</source>
          <target state="translated">取消語彙基元，可由其他物件或執行緒用來接收取消通知。</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.PutAsync(System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
          <source>Send a PUT request with a cancellation token as an asynchronous operation.</source>
          <target state="translated">以非同步作業的方式，傳送 PUT 要求和取消語彙基元。</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.PutAsync(System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">工作物件，表示非同步作業。</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.PutAsync(System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
          <source>This operation will not block.</source>
          <target state="translated">這項作業不會封鎖。</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.PutAsync(System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> object will complete after the whole response (including content) is read.</source>
          <target state="translated">傳回的 <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> 物件會在讀取完整的回應 (包括內容) 之後完成。</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.PutAsync(System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
          <source>The <ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.PutAsync(System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
          <source>The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</source>
          <target state="translated">要求已因基本問題 (例如網路連線、DNS 失敗、伺服器憑證驗證或逾時) 而失敗。</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.PutAsync(System.Uri,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
          <source>The Uri the request is sent to.</source>
          <target state="translated">傳送要求的目標 URI。</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.PutAsync(System.Uri,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
          <source>The HTTP request content sent to the server.</source>
          <target state="translated">傳送至伺服器的 HTTP 要求內容。</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.PutAsync(System.Uri,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
          <source>A cancellation token that can be used by other objects or threads to receive notice of cancellation.</source>
          <target state="translated">取消語彙基元，可由其他物件或執行緒用來接收取消通知。</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.PutAsync(System.Uri,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
          <source>Send a PUT request with a cancellation token as an asynchronous operation.</source>
          <target state="translated">以非同步作業的方式，傳送 PUT 要求和取消語彙基元。</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.PutAsync(System.Uri,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">工作物件，表示非同步作業。</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.PutAsync(System.Uri,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
          <source>This operation will not block.</source>
          <target state="translated">這項作業不會封鎖。</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.PutAsync(System.Uri,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> object will complete after the whole response (including content) is read.</source>
          <target state="translated">傳回的 <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> 物件會在讀取完整的回應 (包括內容) 之後完成。</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.PutAsync(System.Uri,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
          <source>The <ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="requestUri" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.PutAsync(System.Uri,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
          <source>The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</source>
          <target state="translated">要求已因基本問題 (例如網路連線、DNS 失敗、伺服器憑證驗證或逾時) 而失敗。</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" uid="T:System.Net.Http.HttpClient">
          <source>Send an HTTP request as an asynchronous operation.</source>
          <target state="translated">以非同步作業的方式，傳送 HTTP 要求。</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Http.HttpClient">
          <source>This operation will not block.</source>
          <target state="translated">這項作業不會封鎖。</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage)">
          <source>The HTTP request message to send.</source>
          <target state="translated">要傳送的 HTTP 要求訊息。</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage)">
          <source>Send an HTTP request as an asynchronous operation.</source>
          <target state="translated">以非同步作業的方式，傳送 HTTP 要求。</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage)">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">工作物件，表示非同步作業。</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage)">
          <source>This operation will not block.</source>
          <target state="translated">這項作業不會封鎖。</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage)">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> object will complete once the entire response including content is read.</source>
          <target state="translated">傳回<ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph>物件會在讀取包括內容的整個回應之後完成。</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage)">
          <source>The <ph id="ph1">&lt;paramref name="request" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="request" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage)">
          <source>The request message was already sent by the <ph id="ph1">&lt;see cref="T:System.Net.Http.HttpClient" /&gt;</ph> instance.</source>
          <target state="translated">要求訊息已經透過 <ph id="ph1">&lt;see cref="T:System.Net.Http.HttpClient" /&gt;</ph> 執行個體傳送。</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage)">
          <source>The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</source>
          <target state="translated">要求已因基本問題 (例如網路連線、DNS 失敗、伺服器憑證驗證或逾時) 而失敗。</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpCompletionOption)">
          <source>The HTTP request message to send.</source>
          <target state="translated">要傳送的 HTTP 要求訊息。</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpCompletionOption)">
          <source>When the operation should complete (as soon as a response is available or after reading the whole response content).</source>
          <target state="translated">當作業應該完成時 (可取得回應時或讀取整個回應內容之後)。</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpCompletionOption)">
          <source>Send an HTTP request as an asynchronous operation.</source>
          <target state="translated">以非同步作業的方式，傳送 HTTP 要求。</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpCompletionOption)">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">工作物件，表示非同步作業。</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpCompletionOption)">
          <source>This operation will not block.</source>
          <target state="translated">這項作業不會封鎖。</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpCompletionOption)">
          <source>Depending on the value of the <ph id="ph1">`completionOption`</ph> parameter, the returned <ph id="ph2">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> object will complete as soon as a response is available or the entire response including content is read.</source>
          <target state="translated">值而定<ph id="ph1">`completionOption`</ph>參數、 傳回<ph id="ph2">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph>物件會完成，只要取得回應之後，或在讀取包括內容的完整回應。</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpCompletionOption)">
          <source>The <ph id="ph1">&lt;paramref name="request" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="request" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpCompletionOption)">
          <source>The request message was already sent by the <ph id="ph1">&lt;see cref="T:System.Net.Http.HttpClient" /&gt;</ph> instance.</source>
          <target state="translated">要求訊息已經透過 <ph id="ph1">&lt;see cref="T:System.Net.Http.HttpClient" /&gt;</ph> 執行個體傳送。</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpCompletionOption)">
          <source>The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</source>
          <target state="translated">要求已因基本問題 (例如網路連線、DNS 失敗、伺服器憑證驗證或逾時) 而失敗。</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
          <source>The HTTP request message to send.</source>
          <target state="translated">要傳送的 HTTP 要求訊息。</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
          <source>The cancellation token to cancel operation.</source>
          <target state="translated">用於取消作業的取消語彙基元。</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
          <source>Send an HTTP request as an asynchronous operation.</source>
          <target state="translated">以非同步作業的方式，傳送 HTTP 要求。</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">工作物件，表示非同步作業。</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
          <source>This operation will not block.</source>
          <target state="translated">這項作業不會封鎖。</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> object will complete once the entire response including content is read.</source>
          <target state="translated">傳回<ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph>物件會在讀取包括內容的整個回應之後完成。</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
          <source>The <ph id="ph1">&lt;paramref name="request" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="request" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
          <source>The request message was already sent by the <ph id="ph1">&lt;see cref="T:System.Net.Http.HttpClient" /&gt;</ph> instance.</source>
          <target state="translated">要求訊息已經透過 <ph id="ph1">&lt;see cref="T:System.Net.Http.HttpClient" /&gt;</ph> 執行個體傳送。</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
          <source>The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</source>
          <target state="translated">要求已因基本問題 (例如網路連線、DNS 失敗、伺服器憑證驗證或逾時) 而失敗。</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)">
          <source>The HTTP request message to send.</source>
          <target state="translated">要傳送的 HTTP 要求訊息。</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)">
          <source>When the operation should complete (as soon as a response is available or after reading the whole response content).</source>
          <target state="translated">當作業應該完成時 (可取得回應時或讀取整個回應內容之後)。</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)">
          <source>The cancellation token to cancel operation.</source>
          <target state="translated">用於取消作業的取消語彙基元。</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)">
          <source>Send an HTTP request as an asynchronous operation.</source>
          <target state="translated">以非同步作業的方式，傳送 HTTP 要求。</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">工作物件，表示非同步作業。</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)">
          <source>This operation will not block.</source>
          <target state="translated">這項作業不會封鎖。</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)">
          <source>Depending on the value of the <ph id="ph1">`completionOption`</ph> parameter, the returned <ph id="ph2">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> object will complete as soon as a response is available or the entire response including content is read.</source>
          <target state="translated">值而定<ph id="ph1">`completionOption`</ph>參數、 傳回<ph id="ph2">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph>物件會完成，只要取得回應之後，或在讀取包括內容的完整回應。</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)">
          <source>The <ph id="ph1">&lt;paramref name="request" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="request" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)">
          <source>The request message was already sent by the <ph id="ph1">&lt;see cref="T:System.Net.Http.HttpClient" /&gt;</ph> instance.</source>
          <target state="translated">要求訊息已經透過 <ph id="ph1">&lt;see cref="T:System.Net.Http.HttpClient" /&gt;</ph> 執行個體傳送。</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" uid="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)">
          <source>The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</source>
          <target state="translated">要求已因基本問題 (例如網路連線、DNS 失敗、伺服器憑證驗證或逾時) 而失敗。</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" uid="P:System.Net.Http.HttpClient.Timeout">
          <source>Gets or sets the timespan to wait before the request times out.</source>
          <target state="translated">取得或設定要求逾時前等候的時間長度。</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Http.HttpClient.Timeout">
          <source>The timespan to wait before the request times out.</source>
          <target state="translated">要求逾時前等候的時間長度。</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Http.HttpClient.Timeout">
          <source>The default value is 100,000 milliseconds (100 seconds).</source>
          <target state="translated">預設值為 100,000 毫秒 (100 秒)。</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Http.HttpClient.Timeout">
          <source>To set an infinite timeout, set the property value to <ph id="ph1">&lt;xref:System.Threading.Timeout.InfiniteTimeSpan&gt;</ph>.</source>
          <target state="translated">若要設定無限的逾時，設定屬性值為<ph id="ph1">&lt;xref:System.Threading.Timeout.InfiniteTimeSpan&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Http.HttpClient.Timeout">
          <source>A Domain Name System (DNS) query may take up to 15 seconds to return or time out. If your request contains a host name that requires resolution and you set <ph id="ph1">&lt;xref:System.Net.Http.HttpClient.Timeout%2A&gt;</ph> to a value less than 15 seconds, it may take 15 seconds or more before a <ph id="ph2">&lt;xref:System.Net.WebException&gt;</ph> is thrown to indicate a timeout on your request.</source>
          <target state="translated">最多為 15 秒才傳回或逾時，可能需要網域名稱系統 (DNS) 查詢。如果您的要求包含需要解析主機名稱，而且設定<ph id="ph1">&lt;xref:System.Net.Http.HttpClient.Timeout%2A&gt;</ph>的值小於 15 秒，可能需要 15 秒以上才能<ph id="ph2">&lt;xref:System.Net.WebException&gt;</ph>就會擲回，表示您的要求逾時。</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Http.HttpClient.Timeout">
          <source>The same timeout will apply for all requests using this <ph id="ph1">&lt;xref:System.Net.Http.HttpClient&gt;</ph> instance.</source>
          <target state="translated">使用這項功能的所有要求會套用都至相同的逾時<ph id="ph1">&lt;xref:System.Net.Http.HttpClient&gt;</ph>執行個體。</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Http.HttpClient.Timeout">
          <source>You may also set different timeouts for individual requests using a <ph id="ph1">&lt;xref:System.Threading.CancellationTokenSource&gt;</ph> on a task.</source>
          <target state="translated">您也可以設定不同的逾時使用的個別要求的<ph id="ph1">&lt;xref:System.Threading.CancellationTokenSource&gt;</ph>工作。</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Http.HttpClient.Timeout">
          <source>Note that only the shorter of the two timeouts will apply.</source>
          <target state="translated">請注意，只有較短的兩個逾時將會套用。</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" uid="P:System.Net.Http.HttpClient.Timeout">
          <source>The timeout specified is less than or equal to zero and is not <ph id="ph1">&lt;see cref="F:System.Threading.Timeout.InfiniteTimeSpan" /&gt;</ph>.</source>
          <target state="translated">指定的逾時值小於或等於零，而且不是 <ph id="ph1">&lt;see cref="F:System.Threading.Timeout.InfiniteTimeSpan" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" uid="P:System.Net.Http.HttpClient.Timeout">
          <source>An operation has already been started on the current instance.</source>
          <target state="translated">作業已經在目前的執行個體上啟動。</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" uid="P:System.Net.Http.HttpClient.Timeout">
          <source>The current instance has been disposed.</source>
          <target state="translated">目前的執行個體已經過處置。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>