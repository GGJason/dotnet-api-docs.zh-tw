<Type Name="VirtualPathProvider" FullName="System.Web.Hosting.VirtualPathProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="be6c402049d377b680d7bbe7ee3ed7974d42238b" /><Meta Name="ms.sourcegitcommit" Value="d40b35262cbc997b79bf76da3a39ccf59b738efc" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="12/05/2018" /><Meta Name="ms.locfileid" Value="52905617" /></Metadata><TypeSignature Language="C#" Value="public abstract class VirtualPathProvider : MarshalByRefObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit VirtualPathProvider extends System.MarshalByRefObject" />
  <TypeSignature Language="DocId" Value="T:System.Web.Hosting.VirtualPathProvider" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class VirtualPathProvider&#xA;Inherits MarshalByRefObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class VirtualPathProvider abstract : MarshalByRefObject" />
  <TypeSignature Language="F#" Value="type VirtualPathProvider = class&#xA;    inherit MarshalByRefObject" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>提供可讓 Web 應用程式從虛擬檔案系統擷取資源的方法集。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Hosting.VirtualPathProvider>類別提供一組實作 Web 應用程式的虛擬檔案系統的方法。 在虛擬檔案系統中，檔案和目錄是由以外的伺服器作業系統所提供的檔案系統的資料存放區管理。 例如，您可以使用虛擬檔案系統內容儲存在 SQL Server 資料庫。  
  
 虛擬檔案系統中，您可以在要求上儲存已處理的任何檔案。 包括：  
  
-   ASP.NET 網頁、 主版頁面、 使用者控制項和其他物件。  
  
-   副檔名為.jpg.htm 等的標準網頁。  
  
-   任何自訂延伸模組對應至<xref:System.Web.Compilation.BuildProvider>執行個體。  
  
-   在任何具名的主題`App_Theme`資料夾。  
  
 您無法儲存 ASP.NET 應用程式資料夾或虛擬檔案系統中產生應用程式層級組件的檔案。 包括：  
  
-   Global.asax 檔案中。  
  
-   Web.config 檔案。  
  
-   站台所使用的對應資料檔案<xref:System.Web.XmlSiteMapProvider>。  
  
-   包含應用程式的組件，或產生應用程式組件的目錄： `Bin`， `App_Code`， `App_GlobalResources`，任何`App_LocalResources`。  
  
-   應用程式資料資料夾`App_Data`。  
  
> [!NOTE]
>  如果部署先行編譯網站時，所提供的內容<xref:System.Web.Hosting.VirtualPathProvider>就不會編譯執行個體，並沒有<xref:System.Web.Hosting.VirtualPathProvider>執行個體所使用的先行編譯的站台。  
  
## <a name="registering-a-virtualpathprovider"></a>註冊 VirtualPathProvider  
 自訂<xref:System.Web.Hosting.VirtualPathProvider>執行個體應該使用 ASP.NET 編譯系統註冊使用<xref:System.Web.Hosting.HostingEnvironment.RegisterVirtualPathProvider%2A?displayProperty=nameWithType>任何頁面剖析或編譯會在 Web 應用程式執行之前的方法。  
  
 通常<xref:System.Web.Hosting.VirtualPathProvider>執行個體中註冊`AppInitialize`中所定義的方法`App_Code`目錄中，或在`Application_Start`中的事件`Global.asax`檔案。 如需註冊的範例<xref:System.Web.Hosting.VirtualPathProvider>執行個體中`AppInitialize`方法，請參閱 < 範例 > 一節。  
  
 您可以註冊<xref:System.Web.Hosting.VirtualPathProvider>期間其他事件，但頁面的執行個體編譯和快取之前<xref:System.Web.Hosting.VirtualPathProvider>執行個體註冊將不會失效，即使新<xref:System.Web.Hosting.VirtualPathProvider>執行個體現在會提供的來源先前已編譯的網頁。  
  
   
  
## Examples  
 下列程式碼範例<xref:System.Web.Hosting.VirtualPathProvider>會建立使用資訊儲存在虛擬檔案系統的類別實作<xref:System.Data.DataSet>物件。 程式碼範例會使用的程式碼範例<xref:System.Web.Hosting.VirtualFile>並<xref:System.Web.Hosting.VirtualDirectory>類別來提供虛擬資源的資料存放區載入至<xref:System.Data.DataSet>物件。  
  
 此範例包含四個部分：<xref:System.Web.Hosting.VirtualPathProvider>類別實作，用來填入 XML 資料檔<xref:System.Data.DataSet>物件，`AppStart`物件，其中包含`AppInitialize`方法用來註冊<xref:System.Web.Hosting.VirtualPathProvider>編譯類別系統和 ASP.NET 網頁，提供虛擬檔案的連結。  
  
 若要使用此範例程式碼應用程式中，請遵循下列步驟。  
  
1.  在您的 Web 伺服器上建立範例應用程式。  
  
2.  複製自訂的原始程式碼<xref:System.Web.Hosting.VirtualPathProvider>物件 （如下所示） 到應用程式的檔案`App_Code`目錄。  
  
3.  複製自訂的原始程式碼<xref:System.Web.Hosting.VirtualDirectory>物件 (請參閱中的範例 > 一節<xref:System.Web.Hosting.VirtualDirectory>類別的概觀主題) 到應用程式的檔案`App_Code`目錄。  
  
4.  複製自訂的原始程式碼<xref:System.Web.Hosting.VirtualFile>物件 (請參閱中的範例 > 一節<xref:System.Web.Hosting.VirtualFile>類別的概觀主題) 到應用程式的檔案`App_Code`目錄。  
  
5.  複製的原始程式碼`AppStart`物件 （如下所示） 到應用程式的檔案`App_Code`目錄。  
  
6.  將 XML 資料 （如下所示） 複製到名為的檔案`XMLData.xml`至應用程式的檔案`App_Data`目錄。  
  
7.  複製`default.aspx`到範例應用程式根目錄的檔案 （如下所示）。 使用網頁瀏覽器來開啟`default.aspx`檔案，然後再按一下 若要查看虛擬檔案的內容頁面上的連結。  
  
 第一個範例是自訂<xref:System.Web.Hosting.VirtualPathProvider>類別。 <xref:System.Web.Hosting.VirtualPathProvider.DirectoryExists%2A>和<xref:System.Web.Hosting.VirtualPathProvider.FileExists%2A>表示要求的目錄是否存在於虛擬檔案系統中覆寫的方法。 <xref:System.Web.Hosting.VirtualPathProvider.GetDirectory%2A>並<xref:System.Web.Hosting.VirtualPathProvider.GetFile%2A>方法會覆寫以傳回自訂<xref:System.Web.Hosting.VirtualDirectory>和<xref:System.Web.Hosting.VirtualFile>執行個體包含從虛擬檔案系統的資訊。  
  
 類別也會提供`GetVirtualData`所使用的方法<xref:System.Web.Hosting.VirtualDirectory>並<xref:System.Web.Hosting.VirtualFile>類別來存取<xref:System.Data.DataSet>物件，包含虛擬檔案系統資料。 在生產環境實作中，這個方法通常會實作負責與資料存放區互動的商務物件中。  
  
 [!code-csharp[System.Web.Hosting.VirtualPathProvider#20](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/CS/SamplePathProvider.cs#20)]
 [!code-vb[System.Web.Hosting.VirtualPathProvider#20](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/VB/SamplePathProvider.vb#20)]  
  
 第二個範例是用來填入 XML 資料檔案<xref:System.Data.DataSet>傳回的自訂物件<xref:System.Web.Hosting.VirtualPathProvider>物件。 此 XML 資料用來示範如何使用<xref:System.Web.Hosting.VirtualPathProvider>， <xref:System.Web.Hosting.VirtualDirectory>，和<xref:System.Web.Hosting.VirtualFile>物件來擷取外部資料中的資料，並不是要代表的實際執行品質的資料存放區。  
  
```  
<?xml version="1.0" encoding="utf-8" ?>  
  <resource type="dir"   
    path="/vrDir"   
    parentPath=""   
    content="">  
    <resource type="file"   
      path="/vrDir/Level1FileA.vrf"  
      parentPath="/vrDir"   
      content="This is the content of file Level1FileA.">  
    </resource>  
    <resource type="file"   
      path="/vrDir/Level1FileB.vrf"  
      parentPath="/vrDir"   
      content="This is the content of file Level1FileB.">  
    </resource>  
    <resource type="dir"   
      path="/vrDir/Level2DirA"   
      parentPath="/vrDir"   
      content="">  
    <resource type="file"   
      path="/vrDir/Level2DirA/Level2FileA.vrf"   
      parentPath="/vrDir/Level2DirA"   
      content="This is the content of file Level2FileA.">  
    </resource>  
    <resource type="file"   
      path="/vrDir/Level2DirA/Level2FileB.vrf"  
      parentPath="/vrDir/Level2DirA"   
      content="This is the content of file Level2FileB.">  
    </resource>  
  </resource>  
  <resource type="dir"   
    path="/vrDir/Level2DirB"   
    parentPath="/vrDir"   
    content="">  
    <resource type="file"   
      path="/vrDir/Level2DirB/Level2FileA.vrf"   
      parentPath="/vrDir/Level2DirB"   
      content="This is the content of file Level2FileA.">  
    </resource>  
    <resource type="file"   
      path="/vrDir/Level2DirB/Level2FileB.vrf"  
      parentPath="/vrDir/Level2DirB"   
      content="This is the content of file Level2FileB.">  
    </resource>  
  </resource>  
</resource>  
```  
  
 第三個範例會提供`AppStart`物件，其中包含`AppInitialize`方法。 ASP.NET 應用程式執行所需的任何自訂初始設定初始化期間，會呼叫這個方法。 在此情況下，它會註冊自訂<xref:System.Web.Hosting.VirtualPathProvider>物件使用 ASP.NET 建置系統。  
  
 [!code-csharp[System.Web.Hosting.VirtualPathProvider#10](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/CS/AppStart.cs#10)]
 [!code-vb[System.Web.Hosting.VirtualPathProvider#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/VB/AppStart.vb#10)]  
  
 最後一個範例是 ASP.NET 網頁，其中包含虛擬檔案系統中所包含的虛擬檔案的連結。  
  
 [!code-aspx-csharp[System.Web.Hosting.VirtualPathProvider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/CS/Default.aspx#1)]
 [!code-aspx-vb[System.Web.Hosting.VirtualPathProvider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/VB/Default.aspx#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para>當您繼承自<see cref="T:System.Web.Hosting.VirtualPathProvider" />，您必須覆寫下列成員： 
-   <see cref="M:System.Web.Hosting.VirtualPathProvider.FileExists(System.String)" />  
  
-   <see cref="M:System.Web.Hosting.VirtualPathProvider.GetFile(System.String)" />  
  
如果您的自訂<see cref="T:System.Web.Hosting.VirtualPathProvider" />類別支援在虛擬檔案系統中的目錄，您必須覆寫下列成員。  
  
-   <see cref="M:System.Web.Hosting.VirtualPathProvider.DirectoryExists(System.String)" />  
  
-   <see cref="M:System.Web.Hosting.VirtualPathProvider.GetDirectory(System.String)" /><block subset="none" type="note"><para>  
      如果您的虛擬檔案系統將會包含網站的佈景主題 (藉由建立的虛擬<c>App_Themes</c>目錄)，您的自訂<see cref="T:System.Web.Hosting.VirtualPathProvider" />類別必須支援的目錄。
    </para></block>  
  
    自訂<see cref="T:System.Web.Hosting.VirtualPathProvider" />類別會搭配使用衍生自類別<see cref="T:System.Web.Hosting.VirtualFile" />和<see cref="T:System.Web.Hosting.VirtualDirectory" />類別。 您應該實作衍生的類別，從這些型別提供從您的虛擬檔案系統的檔案和目錄資訊。 如需自訂的範例<see cref="T:System.Web.Hosting.VirtualFile" />實作中，請參閱 &lt; 範例 &gt; 一節的<see cref="T:System.Web.Hosting.VirtualFile" />類別概觀主題。 如需自訂的範例<see cref="T:System.Web.Hosting.VirtualDirectory" />實作中，請參閱 &lt; 範例 &gt; 一節的<see cref="T:System.Web.Hosting.VirtualDirectory" />類別概觀主題。</para></block>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected VirtualPathProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.VirtualPathProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; VirtualPathProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>初始化這個類別，以供繼承的類別執行個體使用。 此建構函式只能由繼承的類別呼叫。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當覆寫<xref:System.Web.Hosting.VirtualPathProvider.%23ctor%2A>建構函式，延遲之後必須進行任何初始化<xref:System.Web.Hosting.VirtualPathProvider>物件是否登錄至<xref:System.Web.Hosting.VirtualPathProvider.Initialize%2A>方法。  
  
   
  
## Examples  
 下列程式碼範例會實作<xref:System.Web.Hosting.VirtualPathProvider.%23ctor%2A>建構函式，以初始化自訂<xref:System.Web.Hosting.VirtualPathProvider>類別。 完整的程式碼才能執行範例時，請參閱 < 範例 > 一節的<xref:System.Web.Hosting.VirtualPathProvider>類別概觀主題。  
  
 [!code-csharp[System.Web.Hosting.VirtualPathProvider#25](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/CS/SamplePathProvider.cs#25)]
 [!code-vb[System.Web.Hosting.VirtualPathProvider#25](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/VB/SamplePathProvider.vb#25)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CombineVirtualPaths">
      <MemberSignature Language="C#" Value="public virtual string CombineVirtualPaths (string basePath, string relativePath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string CombineVirtualPaths(string basePath, string relativePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.VirtualPathProvider.CombineVirtualPaths(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CombineVirtualPaths (basePath As String, relativePath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ CombineVirtualPaths(System::String ^ basePath, System::String ^ relativePath);" />
      <MemberSignature Language="F#" Value="abstract member CombineVirtualPaths : string * string -&gt; string&#xA;override this.CombineVirtualPaths : string * string -&gt; string" Usage="virtualPathProvider.CombineVirtualPaths (basePath, relativePath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="basePath" Type="System.String" />
        <Parameter Name="relativePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="basePath">應用程式的基底路徑。</param>
        <param name="relativePath">虛擬資源的路徑，與基底路徑相對。</param>
        <summary>將基底路徑與相對路徑組合，以傳回虛擬資源的完整路徑。</summary>
        <returns>虛擬資源的完整路徑。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.Hosting.VirtualPathProvider.CombineVirtualPaths%2A>方法來檢查虛擬資源的相對路徑的內容，並執行所需的任何修改。  
  
 預設實作會結合`basePath`和`relativePath`參數根據標準的 ASP.NET 路徑處理。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>如果您覆寫的預設實作<see cref="M:System.Web.Hosting.VirtualPathProvider.CombineVirtualPaths(System.String,System.String)" />方法中，您都必須將任何特殊的語法，與<paramref name="relativePath" />有效的虛擬路徑的參數。 您負責語法檢查路徑驗證和處理不正確的輸入，以及為語式正確的輸入的邊緣案例。  
  
在大部分情況下它不會覆寫預設必要<see cref="M:System.Web.Hosting.VirtualPathProvider.CombineVirtualPaths(System.String,System.String)" />方法。 不過，如果您需要修改的路徑，我們建議您限制您<see cref="M:System.Web.Hosting.VirtualPathProvider.CombineVirtualPaths(System.String,System.String)" />實作，以修改您的虛擬路徑提供者中的特定權杖<paramref name="relativeUrl" />參數，而您再呼叫基底實作，以執行正常ASP.NET 路徑處理</para></block>
      </Docs>
    </Member>
    <Member MemberName="DirectoryExists">
      <MemberSignature Language="C#" Value="public virtual bool DirectoryExists (string virtualDir);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool DirectoryExists(string virtualDir) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.VirtualPathProvider.DirectoryExists(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DirectoryExists (virtualDir As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool DirectoryExists(System::String ^ virtualDir);" />
      <MemberSignature Language="F#" Value="abstract member DirectoryExists : string -&gt; bool&#xA;override this.DirectoryExists : string -&gt; bool" Usage="virtualPathProvider.DirectoryExists virtualDir" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualDir" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualDir">虛擬目錄的路徑。</param>
        <summary>取得值，指出目錄是否存在於虛擬檔案系統中。</summary>
        <returns>如果目錄存在於虛擬檔案系統中則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 覆寫<xref:System.Web.Hosting.VirtualPathProvider.DirectoryExists%2A>方法，以表示編譯系統資源代表`virtualDir`存在於虛擬檔案系統，提供由這個<xref:System.Web.Hosting.VirtualPathProvider>執行個體。  
  
 如果您的自訂<xref:System.Web.Hosting.VirtualPathProvider>類別不支援目錄<xref:System.Web.Hosting.VirtualPathProvider.DirectoryExists%2A>方法應傳回`false`。  
  
> [!NOTE]
>  如果您的虛擬檔案系統將會包含網站的佈景主題 (藉由建立的虛擬`App_Themes`目錄)，您的自訂<xref:System.Web.Hosting.VirtualPathProvider>類別必須支援的目錄。  
  
   
  
## Examples  
 下列程式碼範例會實作<xref:System.Web.Hosting.VirtualPathProvider.DirectoryExists%2A>方法，在自訂<xref:System.Web.Hosting.VirtualPathProvider>類別。 完整的程式碼才能執行範例時，請參閱 < 範例 > 一節的<xref:System.Web.Hosting.VirtualPathProvider>類別概觀主題。  
  
 [!code-csharp[System.Web.Hosting.VirtualPathProvider#22](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/CS/SamplePathProvider.cs#22)]
 [!code-vb[System.Web.Hosting.VirtualPathProvider#22](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/VB/SamplePathProvider.vb#22)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FileExists">
      <MemberSignature Language="C#" Value="public virtual bool FileExists (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool FileExists(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.VirtualPathProvider.FileExists(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function FileExists (virtualPath As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool FileExists(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="abstract member FileExists : string -&gt; bool&#xA;override this.FileExists : string -&gt; bool" Usage="virtualPathProvider.FileExists virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">虛擬檔案的路徑。</param>
        <summary>取得值，指出檔案是否存在於虛擬檔案系統中。</summary>
        <returns>如果檔案存在於虛擬檔案系統中則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 覆寫<xref:System.Web.Hosting.VirtualPathProvider.FileExists%2A>方法，以表示編譯系統資源代表`virtualPath`存在於虛擬檔案系統，提供由這個<xref:System.Web.Hosting.VirtualPathProvider>執行個體。  
  
   
  
## Examples  
 下列程式碼範例會實作<xref:System.Web.Hosting.VirtualPathProvider.FileExists%2A>方法，在自訂<xref:System.Web.Hosting.VirtualPathProvider>類別。 完整的程式碼才能執行範例時，請參閱 < 範例 > 一節的<xref:System.Web.Hosting.VirtualPathProvider>類別概觀主題。  
  
 [!code-csharp[System.Web.Hosting.VirtualPathProvider#21](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/CS/SamplePathProvider.cs#21)]
 [!code-vb[System.Web.Hosting.VirtualPathProvider#21](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/VB/SamplePathProvider.vb#21)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCacheDependency">
      <MemberSignature Language="C#" Value="public virtual System.Web.Caching.CacheDependency GetCacheDependency (string virtualPath, System.Collections.IEnumerable virtualPathDependencies, DateTime utcStart);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.Caching.CacheDependency GetCacheDependency(string virtualPath, class System.Collections.IEnumerable virtualPathDependencies, valuetype System.DateTime utcStart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.VirtualPathProvider.GetCacheDependency(System.String,System.Collections.IEnumerable,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCacheDependency (virtualPath As String, virtualPathDependencies As IEnumerable, utcStart As DateTime) As CacheDependency" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::Caching::CacheDependency ^ GetCacheDependency(System::String ^ virtualPath, System::Collections::IEnumerable ^ virtualPathDependencies, DateTime utcStart);" />
      <MemberSignature Language="F#" Value="abstract member GetCacheDependency : string * System.Collections.IEnumerable * DateTime -&gt; System.Web.Caching.CacheDependency&#xA;override this.GetCacheDependency : string * System.Collections.IEnumerable * DateTime -&gt; System.Web.Caching.CacheDependency" Usage="virtualPathProvider.GetCacheDependency (virtualPath, virtualPathDependencies, utcStart)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Caching.CacheDependency</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
        <Parameter Name="virtualPathDependencies" Type="System.Collections.IEnumerable" />
        <Parameter Name="utcStart" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="virtualPath">主要虛擬資源的路徑。</param>
        <param name="virtualPathDependencies">主要虛擬資源所需之其他資源的路徑陣列。</param>
        <param name="utcStart">UTC 時間，會在該期間讀取虛擬資源。</param>
        <summary>基於指定的虛擬路徑建立快取相依性。</summary>
        <returns>指定虛擬資源的 <see cref="T:System.Web.Caching.CacheDependency" /> 物件。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 預設實作<xref:System.Web.Hosting.VirtualPathProvider.GetCacheDependency%2A>方法會傳回`null`。 快取虛擬資源以供稍後使用必須覆寫其中一個<xref:System.Web.Hosting.VirtualPathProvider.GetCacheDependency%2A>方法或<xref:System.Web.Hosting.VirtualPathProvider.GetFileHash%2A>方法。  
  
   
  
## Examples  
 下列程式碼範例會實作<xref:System.Web.Hosting.VirtualPathProvider.GetCacheDependency%2A>方法，自訂<xref:System.Web.Hosting.VirtualPathProvider>類別。 完整的程式碼才能執行範例時，請參閱 < 範例 > 一節的<xref:System.Web.Hosting.VirtualPathProvider>類別概觀主題。  
  
 [!code-csharp[System.Web.Hosting.VirtualPathProvider#28](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/CS/SamplePathProvider.cs#28)]
 [!code-vb[System.Web.Hosting.VirtualPathProvider#28](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/VB/SamplePathProvider.vb#28)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCacheKey">
      <MemberSignature Language="C#" Value="public virtual string GetCacheKey (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetCacheKey(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.VirtualPathProvider.GetCacheKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCacheKey (virtualPath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetCacheKey(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="abstract member GetCacheKey : string -&gt; string&#xA;override this.GetCacheKey : string -&gt; string" Usage="virtualPathProvider.GetCacheKey virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">虛擬資源的路徑。</param>
        <summary>傳回用於指定虛擬路徑的快取索引鍵。</summary>
        <returns>指定虛擬資源的快取索引鍵。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.Hosting.VirtualPathProvider.GetCacheKey%2A>方法，以提供虛擬資源的自訂快取索引鍵。 如果您不會覆寫<xref:System.Web.Hosting.VirtualPathProvider.GetCacheKey%2A>虛擬路徑的方法，用於快取索引鍵。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>只覆寫預設<see cref="M:System.Web.Hosting.VirtualPathProvider.GetCacheKey(System.String)" />如果建立快取索引鍵為基礎的虛擬路徑的方法不適用於您的應用程式。</para></block>
      </Docs>
    </Member>
    <Member MemberName="GetDirectory">
      <MemberSignature Language="C#" Value="public virtual System.Web.Hosting.VirtualDirectory GetDirectory (string virtualDir);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.Hosting.VirtualDirectory GetDirectory(string virtualDir) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.VirtualPathProvider.GetDirectory(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDirectory (virtualDir As String) As VirtualDirectory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::Hosting::VirtualDirectory ^ GetDirectory(System::String ^ virtualDir);" />
      <MemberSignature Language="F#" Value="abstract member GetDirectory : string -&gt; System.Web.Hosting.VirtualDirectory&#xA;override this.GetDirectory : string -&gt; System.Web.Hosting.VirtualDirectory" Usage="virtualPathProvider.GetDirectory virtualDir" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Hosting.VirtualDirectory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualDir" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualDir">虛擬目錄的路徑。</param>
        <summary>從虛擬檔案系統取得虛擬目錄。</summary>
        <returns><see cref="T:System.Web.Hosting.VirtualDirectory" /> 類別的子類別，表示虛擬檔案系統中的目錄。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Hosting.VirtualPathProvider.GetDirectory%2A>方法傳回的子<xref:System.Web.Hosting.VirtualDirectory>類別，其中包含的檔案和目錄中指定的目錄中包含`virtualDir`參數。  
  
 如果您的自訂<xref:System.Web.Hosting.VirtualPathProvider>類別不支援目錄<xref:System.Web.Hosting.VirtualPathProvider.GetDirectory%2A>方法應傳回`null`。  
  
> [!NOTE]
>  如果您的虛擬檔案系統將會包含網站的佈景主題 (藉由建立的虛擬`App_Themes`目錄)，您的自訂<xref:System.Web.Hosting.VirtualPathProvider>類別必須支援的目錄。  
  
   
  
## Examples  
 下列程式碼範例會實作<xref:System.Web.Hosting.VirtualPathProvider.GetDirectory%2A>方法，在自訂<xref:System.Web.Hosting.VirtualPathProvider>類別。 完整的程式碼才能執行範例時，請參閱 < 範例 > 一節的<xref:System.Web.Hosting.VirtualPathProvider>類別概觀主題。  
  
 [!code-csharp[System.Web.Hosting.VirtualPathProvider#24](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/CS/SamplePathProvider.cs#24)]
 [!code-vb[System.Web.Hosting.VirtualPathProvider#24](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/VB/SamplePathProvider.vb#24)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFile">
      <MemberSignature Language="C#" Value="public virtual System.Web.Hosting.VirtualFile GetFile (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.Hosting.VirtualFile GetFile(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.VirtualPathProvider.GetFile(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFile (virtualPath As String) As VirtualFile" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::Hosting::VirtualFile ^ GetFile(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="abstract member GetFile : string -&gt; System.Web.Hosting.VirtualFile&#xA;override this.GetFile : string -&gt; System.Web.Hosting.VirtualFile" Usage="virtualPathProvider.GetFile virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Hosting.VirtualFile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">虛擬檔案的路徑。</param>
        <summary>從虛擬檔案系統取得虛擬檔案。</summary>
        <returns><see cref="T:System.Web.Hosting.VirtualFile" /> 類別的子類別，表示虛擬檔案系統中的檔案。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Hosting.VirtualPathProvider.GetFile%2A>方法傳回的子<xref:System.Web.Hosting.VirtualFile>類別，表示所指定的檔案`virtualPath`參數。  
  
   
  
## Examples  
 下列程式碼範例會實作<xref:System.Web.Hosting.VirtualPathProvider.GetFile%2A>方法，在自訂<xref:System.Web.Hosting.VirtualPathProvider>類別。 完整的程式碼才能執行範例時，請參閱 < 範例 > 一節的<xref:System.Web.Hosting.VirtualPathProvider>類別概觀主題。  
  
 [!code-csharp[System.Web.Hosting.VirtualPathProvider#23](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/CS/SamplePathProvider.cs#23)]
 [!code-vb[System.Web.Hosting.VirtualPathProvider#23](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/VB/SamplePathProvider.vb#23)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFileHash">
      <MemberSignature Language="C#" Value="public virtual string GetFileHash (string virtualPath, System.Collections.IEnumerable virtualPathDependencies);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetFileHash(string virtualPath, class System.Collections.IEnumerable virtualPathDependencies) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.VirtualPathProvider.GetFileHash(System.String,System.Collections.IEnumerable)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFileHash (virtualPath As String, virtualPathDependencies As IEnumerable) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetFileHash(System::String ^ virtualPath, System::Collections::IEnumerable ^ virtualPathDependencies);" />
      <MemberSignature Language="F#" Value="abstract member GetFileHash : string * System.Collections.IEnumerable -&gt; string&#xA;override this.GetFileHash : string * System.Collections.IEnumerable -&gt; string" Usage="virtualPathProvider.GetFileHash (virtualPath, virtualPathDependencies)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
        <Parameter Name="virtualPathDependencies" Type="System.Collections.IEnumerable" />
      </Parameters>
      <Docs>
        <param name="virtualPath">主要虛擬資源的路徑。</param>
        <param name="virtualPathDependencies">主要虛擬資源所需之其他虛擬資源的路徑陣列。</param>
        <summary>傳回指定虛擬路徑的雜湊。</summary>
        <returns>指定之虛擬路徑的雜湊。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.Hosting.VirtualPathProvider.GetFileHash%2A>方法，以提供虛擬檔案系統資源的相依性的雜湊。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="protected virtual void Initialize ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Initialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.VirtualPathProvider.Initialize" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Initialize ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Initialize();" />
      <MemberSignature Language="F#" Value="abstract member Initialize : unit -&gt; unit&#xA;override this.Initialize : unit -&gt; unit" Usage="virtualPathProvider.Initialize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.Hosting.VirtualPathProvider" /> 執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Hosting.VirtualPathProvider.Initialize%2A>之後使用 ASP.NET 編譯系統註冊的提供者會呼叫方法。 <xref:System.Web.Hosting.VirtualPathProvider.Initialize%2A>方法用來提供任何初始設定之後需要<xref:System.Web.Hosting.VirtualPathProvider>執行個體放入應用程式所佔用的環境。  
  
   
  
## Examples  
 下列程式碼範例會實作<xref:System.Web.Hosting.VirtualPathProvider.Initialize%2A>方法，從應用程式的設定資料檔案的路徑<xref:System.Web.Hosting.HostingEnvironment>執行個體。 完整的程式碼才能執行範例時，請參閱 < 範例 > 一節的<xref:System.Web.Hosting.VirtualPathProvider>類別概觀主題。  
  
 [!code-csharp[System.Web.Hosting.VirtualPathProvider#26](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/CS/SamplePathProvider.cs#26)]
 [!code-vb[System.Web.Hosting.VirtualPathProvider#26](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/VB/SamplePathProvider.vb#26)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeLifetimeService">
      <MemberSignature Language="C#" Value="public override object InitializeLifetimeService ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object InitializeLifetimeService() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.VirtualPathProvider.InitializeLifetimeService" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function InitializeLifetimeService () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ InitializeLifetimeService();" />
      <MemberSignature Language="F#" Value="override this.InitializeLifetimeService : unit -&gt; obj" Usage="virtualPathProvider.InitializeLifetimeService " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>藉由防止建立使用期，為 <see cref="T:System.Web.Hosting.VirtualPathProvider" /> 物件提供無限的存留期。</summary>
        <returns>一定是 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法會覆寫<xref:System.MarshalByRefObject.InitializeLifetimeService%2A>其基底類別中的方法。 它會一律傳回`null`，並藉此避免建立會限制的使用期<xref:System.Web.Hosting.VirtualPathProvider>物件的存留期。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenFile">
      <MemberSignature Language="C#" Value="public static System.IO.Stream OpenFile (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Stream OpenFile(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.VirtualPathProvider.OpenFile(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenFile (virtualPath As String) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Stream ^ OpenFile(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="static member OpenFile : string -&gt; System.IO.Stream" Usage="System.Web.Hosting.VirtualPathProvider.OpenFile virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">虛擬檔案的路徑。</param>
        <summary>傳回虛擬檔案的資料流。</summary>
        <returns>指定之虛擬檔案或資源的唯讀 <see cref="T:System.IO.Stream" /> 物件。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Hosting.VirtualPathProvider.OpenFile%2A>方法是很便利的方法，可讓您從虛擬檔案取得資料流，而不建立<xref:System.Web.Hosting.VirtualPathProvider>執行個體。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Previous">
      <MemberSignature Language="C#" Value="protected internal System.Web.Hosting.VirtualPathProvider Previous { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Hosting.VirtualPathProvider Previous" />
      <MemberSignature Language="DocId" Value="P:System.Web.Hosting.VirtualPathProvider.Previous" />
      <MemberSignature Language="VB.NET" Value="Protected Friend ReadOnly Property Previous As VirtualPathProvider" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property System::Web::Hosting::VirtualPathProvider ^ Previous { System::Web::Hosting::VirtualPathProvider ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Previous : System.Web.Hosting.VirtualPathProvider" Usage="System.Web.Hosting.VirtualPathProvider.Previous" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Hosting.VirtualPathProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得編譯系統中先前註冊 <see cref="T:System.Web.Hosting.VirtualPathProvider" /> 物件的參考。</summary>
        <value>編譯系統中的下一個 <see cref="T:System.Web.Hosting.VirtualPathProvider" /> 物件。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當<xref:System.Web.Hosting.VirtualPathProvider>向 ASP.NET 編譯系統註冊物件，它會新增至提供者的鏈結。 使用<xref:System.Web.Hosting.VirtualPathProvider.Previous%2A>屬性來手動處理關閉先前<xref:System.Web.Hosting.VirtualPathProvider>物件的鏈結中，如果要求的路徑不由這提供<xref:System.Web.Hosting.VirtualPathProvider>執行個體。  
  
 路徑提供者的鏈結的結尾一律使用預設 ASP.NET 提供者，可從檔案系統的檔案。  
  
   
  
## Examples  
 下列程式碼範例是實作<xref:System.Web.Hosting.VirtualPathProvider.GetFile%2A>方法。 如果要求的虛擬目錄不是以字串`"/vrdir"`，此方法會使用<xref:System.Web.Hosting.VirtualPathProvider.Previous%2A>屬性，將要求傳遞至下一個<xref:System.Web.Hosting.VirtualPathProvider>鏈結中的物件。 完整的程式碼才能執行範例時，請參閱 < 範例 > 一節的<xref:System.Web.Hosting.VirtualPathProvider>類別概觀主題。  
  
 [!code-csharp[System.Web.Hosting.VirtualPathProvider#23](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/CS/SamplePathProvider.cs#23)]
 [!code-vb[System.Web.Hosting.VirtualPathProvider#23](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/VB/SamplePathProvider.vb#23)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>