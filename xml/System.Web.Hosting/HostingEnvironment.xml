<Type Name="HostingEnvironment" FullName="System.Web.Hosting.HostingEnvironment">
  <Metadata><Meta Name="ms.openlocfilehash" Value="32e1c1d2bda9c0f6dc8753bfa4d6d357a7db9da1" /><Meta Name="ms.sourcegitcommit" Value="0e1f030650a307c745ee84ed547ef858acaea587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="11/29/2018" /><Meta Name="ms.locfileid" Value="52595376" /></Metadata><TypeSignature Language="C#" Value="public sealed class HostingEnvironment : MarshalByRefObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit HostingEnvironment extends System.MarshalByRefObject" />
  <TypeSignature Language="DocId" Value="T:System.Web.Hosting.HostingEnvironment" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HostingEnvironment&#xA;Inherits MarshalByRefObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class HostingEnvironment sealed : MarshalByRefObject" />
  <TypeSignature Language="F#" Value="type HostingEnvironment = class&#xA;    inherit MarshalByRefObject" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="01168-101">在 Managed 應用程式的應用程式定義域中向其提供應用程式管理功能和應用程式服務。</span><span class="sxs-lookup"><span data-stu-id="01168-101">Provides application-management functions and application services to a managed application within its application domain.</span></span> <span data-ttu-id="01168-102">這個類別無法被繼承。</span><span class="sxs-lookup"><span data-stu-id="01168-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01168-103">每個受管理的應用程式定義域中包含的靜態執行個體<xref:System.Web.Hosting.HostingEnvironment>類別，可提供應用程式管理功能和應用程式服務的存取。</span><span class="sxs-lookup"><span data-stu-id="01168-103">Each managed application domain contains a static instance of the <xref:System.Web.Hosting.HostingEnvironment> class, which provides access to application-management functions and application services.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="01168-104">下列程式碼範例是會顯示可從應用程式資訊的網頁<xref:System.Web.Hosting.HostingEnvironment>物件。</span><span class="sxs-lookup"><span data-stu-id="01168-104">The following code example is a webpage that displays the application information available from the <xref:System.Web.Hosting.HostingEnvironment> object.</span></span>  
  
 [!code-aspx-csharp[System.Web.Hosting.HostingEnvironment#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Hosting.HostingEnvironment/CS/hostingEnvironmentcs.aspx#1)]
 [!code-aspx-vb[System.Web.Hosting.HostingEnvironment#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Hosting.HostingEnvironment/VB/hostingEnvironmentvb.aspx#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HostingEnvironment ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.HostingEnvironment.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HostingEnvironment();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="01168-105">初始化 <see cref="T:System.Web.Hosting.HostingEnvironment" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="01168-105">Initializes a new instance of the <see cref="T:System.Web.Hosting.HostingEnvironment" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01168-106"><xref:System.Web.Hosting.HostingEnvironment.%23ctor%2A>建構函式初始化<xref:System.Web.Hosting.HostingEnvironment>物件。</span><span class="sxs-lookup"><span data-stu-id="01168-106">The <xref:System.Web.Hosting.HostingEnvironment.%23ctor%2A> constructor initializes the <xref:System.Web.Hosting.HostingEnvironment> object.</span></span> <span data-ttu-id="01168-107"><xref:System.Web.Hosting.HostingEnvironment.%23ctor%2A>建構函式在應用程式中有不同的呼叫一次<xref:System.Web.Hosting.ApplicationManager>物件。</span><span class="sxs-lookup"><span data-stu-id="01168-107">The <xref:System.Web.Hosting.HostingEnvironment.%23ctor%2A> constructor is called only once by the application's <xref:System.Web.Hosting.ApplicationManager> object.</span></span> <span data-ttu-id="01168-108">呼叫<xref:System.Web.Hosting.HostingEnvironment.%23ctor%2A>建構函式超過一次會造成<xref:System.InvalidOperationException>擲回的例外狀況。</span><span class="sxs-lookup"><span data-stu-id="01168-108">Calling the <xref:System.Web.Hosting.HostingEnvironment.%23ctor%2A> constructor more than once will cause an <xref:System.InvalidOperationException> exception to be thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="01168-109">已多次呼叫 <see cref="M:System.Web.Hosting.HostingEnvironment.#ctor" /> 建構函式。</span><span class="sxs-lookup"><span data-stu-id="01168-109">The <see cref="M:System.Web.Hosting.HostingEnvironment.#ctor" /> constructor is called more than once.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ApplicationHost">
      <MemberSignature Language="C#" Value="public static System.Web.Hosting.IApplicationHost ApplicationHost { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Web.Hosting.IApplicationHost ApplicationHost" />
      <MemberSignature Language="DocId" Value="P:System.Web.Hosting.HostingEnvironment.ApplicationHost" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ApplicationHost As IApplicationHost" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Web::Hosting::IApplicationHost ^ ApplicationHost { System::Web::Hosting::IApplicationHost ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationHost : System.Web.Hosting.IApplicationHost" Usage="System.Web.Hosting.HostingEnvironment.ApplicationHost" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Hosting.IApplicationHost</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="01168-110">這個屬性支援 [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] 基礎結構，但是您不可以從程式碼直接使用它。</span><span class="sxs-lookup"><span data-stu-id="01168-110">This property supports the [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] infrastructure and is not intended to be used directly from your code.</span></span></summary>
        <value><span data-ttu-id="01168-111">包含主應用程式相關資訊的物件。</span><span class="sxs-lookup"><span data-stu-id="01168-111">An object that contains information about the application host.</span></span></value>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/f75a72de-e2f2-4a7a-9574-3f278684ea90"><span data-ttu-id="01168-112">.NET Framework 3.5 架構</span><span class="sxs-lookup"><span data-stu-id="01168-112">The .NET Framework 3.5 Architecture</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ApplicationID">
      <MemberSignature Language="C#" Value="public static string ApplicationID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string ApplicationID" />
      <MemberSignature Language="DocId" Value="P:System.Web.Hosting.HostingEnvironment.ApplicationID" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ApplicationID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ ApplicationID { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationID : string" Usage="System.Web.Hosting.HostingEnvironment.ApplicationID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="01168-113">取得應用程式的唯一識別項。</span><span class="sxs-lookup"><span data-stu-id="01168-113">Gets the unique identifier of the application.</span></span></summary>
        <value><span data-ttu-id="01168-114">應用程式的唯一識別項。</span><span class="sxs-lookup"><span data-stu-id="01168-114">The unique identifier of the application.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01168-115">應用程式必須執行含<xref:System.Web.AspNetHostingPermissionLevel>設定為更高的信任，以存取<xref:System.Web.Hosting.HostingEnvironment.ApplicationID%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="01168-115">The application must be running with <xref:System.Web.AspNetHostingPermissionLevel> set to high trust to access the <xref:System.Web.Hosting.HostingEnvironment.ApplicationID%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplicationMonitors">
      <MemberSignature Language="C#" Value="public static System.Web.Hosting.ApplicationMonitors ApplicationMonitors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Web.Hosting.ApplicationMonitors ApplicationMonitors" />
      <MemberSignature Language="DocId" Value="P:System.Web.Hosting.HostingEnvironment.ApplicationMonitors" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ApplicationMonitors As ApplicationMonitors" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Web::Hosting::ApplicationMonitors ^ ApplicationMonitors { System::Web::Hosting::ApplicationMonitors ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationMonitors : System.Web.Hosting.ApplicationMonitors" Usage="System.Web.Hosting.HostingEnvironment.ApplicationMonitors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Hosting.ApplicationMonitors</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="01168-116">取得可取代的監視器物件群組，ASP.NET 子系統會用此群組來監視應用程式健全狀況。</span><span class="sxs-lookup"><span data-stu-id="01168-116">Gets a group of repleacable monitor objects used by ASP.NET subsystems to maintain application health.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplicationPhysicalPath">
      <MemberSignature Language="C#" Value="public static string ApplicationPhysicalPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string ApplicationPhysicalPath" />
      <MemberSignature Language="DocId" Value="P:System.Web.Hosting.HostingEnvironment.ApplicationPhysicalPath" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ApplicationPhysicalPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ ApplicationPhysicalPath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationPhysicalPath : string" Usage="System.Web.Hosting.HostingEnvironment.ApplicationPhysicalPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="01168-117">取得應用程式之目錄在磁碟上的實體路徑。</span><span class="sxs-lookup"><span data-stu-id="01168-117">Gets the physical path on disk to the application's directory.</span></span></summary>
        <value><span data-ttu-id="01168-118">應用程式之目錄在磁碟上的實體路徑。</span><span class="sxs-lookup"><span data-stu-id="01168-118">The physical path on disk to the application's directory.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="01168-119">下列程式碼範例使用<xref:System.Web.Hosting.HostingEnvironment.ApplicationPhysicalPath%2A>屬性來建構應用程式的 App_Data 目錄中的資料檔的路徑。</span><span class="sxs-lookup"><span data-stu-id="01168-119">The following code example uses the <xref:System.Web.Hosting.HostingEnvironment.ApplicationPhysicalPath%2A> property to construct a path to a data file in the application's App_Data directory.</span></span> <span data-ttu-id="01168-120">完整的程式碼才能執行範例時，請參閱 < 範例 > 一節的<xref:System.Web.Hosting.VirtualPathProvider>類別概觀主題。</span><span class="sxs-lookup"><span data-stu-id="01168-120">For the full code required to run the example, see the Example section of the <xref:System.Web.Hosting.VirtualPathProvider> class overview topic.</span></span>  
  
 [!code-csharp[System.Web.Hosting.VirtualPathProvider#27](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/CS/SamplePathProvider.cs#27)]
 [!code-vb[System.Web.Hosting.VirtualPathProvider#27](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/VB/SamplePathProvider.vb#27)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplicationVirtualPath">
      <MemberSignature Language="C#" Value="public static string ApplicationVirtualPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string ApplicationVirtualPath" />
      <MemberSignature Language="DocId" Value="P:System.Web.Hosting.HostingEnvironment.ApplicationVirtualPath" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ApplicationVirtualPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ ApplicationVirtualPath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationVirtualPath : string" Usage="System.Web.Hosting.HostingEnvironment.ApplicationVirtualPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="01168-121">取得應用程式的根虛擬路徑。</span><span class="sxs-lookup"><span data-stu-id="01168-121">Gets the root virtual path of the application.</span></span></summary>
        <value><span data-ttu-id="01168-122">應用程式的根虛擬路徑 (結尾沒有斜線 (/))。</span><span class="sxs-lookup"><span data-stu-id="01168-122">The root virtual path of the application with no trailing slash (/).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01168-123"><xref:System.Web.Hosting.HostingEnvironment.ApplicationVirtualPath%2A>屬性一律會傳回"`/"`作為傳回值的第一個字元。</span><span class="sxs-lookup"><span data-stu-id="01168-123">The <xref:System.Web.Hosting.HostingEnvironment.ApplicationVirtualPath%2A> property always returns "`/"` as the first character of the returned value.</span></span> <span data-ttu-id="01168-124">如果應用程式位於網站根目錄中，傳回的值只是 「`/"`。</span><span class="sxs-lookup"><span data-stu-id="01168-124">If the application is located in the root of the website, the return value is just "`/"`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Cache">
      <MemberSignature Language="C#" Value="public static System.Web.Caching.Cache Cache { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Web.Caching.Cache Cache" />
      <MemberSignature Language="DocId" Value="P:System.Web.Hosting.HostingEnvironment.Cache" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Cache As Cache" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Web::Caching::Cache ^ Cache { System::Web::Caching::Cache ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Cache : System.Web.Caching.Cache" Usage="System.Web.Hosting.HostingEnvironment.Cache" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Caching.Cache</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="01168-125">取得目前應用程式的 <see cref="T:System.Web.Caching.Cache" /> 執行個體。</span><span class="sxs-lookup"><span data-stu-id="01168-125">Gets the <see cref="T:System.Web.Caching.Cache" /> instance for the current application.</span></span></summary>
        <value><span data-ttu-id="01168-126">目前的 <see cref="T:System.Web.Caching.Cache" /> 執行個體。</span><span class="sxs-lookup"><span data-stu-id="01168-126">The current <see cref="T:System.Web.Caching.Cache" /> instance.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DecrementBusyCount">
      <MemberSignature Language="C#" Value="public static void DecrementBusyCount ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DecrementBusyCount() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.HostingEnvironment.DecrementBusyCount" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub DecrementBusyCount ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DecrementBusyCount();" />
      <MemberSignature Language="F#" Value="static member DecrementBusyCount : unit -&gt; unit" Usage="System.Web.Hosting.HostingEnvironment.DecrementBusyCount " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="01168-127">將裝載環境中的忙碌物件計數減少一個。</span><span class="sxs-lookup"><span data-stu-id="01168-127">Reduces the count of busy objects in the hosted environment by one.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01168-128">當忙碌中已註冊的物件完成其工作時，它會呼叫<xref:System.Web.Hosting.HostingEnvironment.DecrementBusyCount%2A>方法來通知<xref:System.Web.Hosting.HostingEnvironment>物件已完成處理，並由其中一個減少的忙碌物件計數。</span><span class="sxs-lookup"><span data-stu-id="01168-128">When a busy registered object finishes its work, it calls the <xref:System.Web.Hosting.HostingEnvironment.DecrementBusyCount%2A> method to signal the <xref:System.Web.Hosting.HostingEnvironment> object that it has completed processing and to reduce the count of busy objects by one.</span></span>  
  
 <span data-ttu-id="01168-129">如果忙碌的計數小於或等於零，裝載的應用程式會將逾時，即使沒有任何暫止的要求。</span><span class="sxs-lookup"><span data-stu-id="01168-129">If the busy count is greater than zero, the hosting application will not time out even if there are no pending requests.</span></span>  
  
 <span data-ttu-id="01168-130">必須呼叫<xref:System.Web.Hosting.HostingEnvironment.DecrementBusyCount%2A>每次呼叫的方法<xref:System.Web.Hosting.HostingEnvironment.IncrementBusyCount%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="01168-130">There must be a call to the <xref:System.Web.Hosting.HostingEnvironment.DecrementBusyCount%2A> method for each call to the <xref:System.Web.Hosting.HostingEnvironment.IncrementBusyCount%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Impersonate">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="01168-131">允許程式碼模擬不同使用者。</span><span class="sxs-lookup"><span data-stu-id="01168-131">Allows code to impersonate a different user.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Impersonate">
      <MemberSignature Language="C#" Value="public static IDisposable Impersonate ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IDisposable Impersonate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.HostingEnvironment.Impersonate" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Impersonate () As IDisposable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IDisposable ^ Impersonate();" />
      <MemberSignature Language="F#" Value="static member Impersonate : unit -&gt; IDisposable" Usage="System.Web.Hosting.HostingEnvironment.Impersonate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IDisposable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="01168-132">模擬由應用程式識別所表示的使用者。</span><span class="sxs-lookup"><span data-stu-id="01168-132">Impersonates the user represented by the application identity.</span></span></summary>
        <returns><span data-ttu-id="01168-133"><see cref="T:System.IDisposable" /> 物件，表示模擬前的 Windows 使用者，這個物件可以用於還原為原始使用者的內容。</span><span class="sxs-lookup"><span data-stu-id="01168-133">An <see cref="T:System.IDisposable" /> object that represents the Windows user prior to impersonation; this object can be used to revert to the original user's context.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="01168-134">處理序無法模擬。</span><span class="sxs-lookup"><span data-stu-id="01168-134">The process cannot impersonate.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Impersonate">
      <MemberSignature Language="C#" Value="public static IDisposable Impersonate (IntPtr token);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IDisposable Impersonate(native int token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.HostingEnvironment.Impersonate(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Impersonate (token As IntPtr) As IDisposable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IDisposable ^ Impersonate(IntPtr token);" />
      <MemberSignature Language="F#" Value="static member Impersonate : nativeint -&gt; IDisposable" Usage="System.Web.Hosting.HostingEnvironment.Impersonate token" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IDisposable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="token"><span data-ttu-id="01168-135">Windows 帳戶語彙基元的控制代碼。</span><span class="sxs-lookup"><span data-stu-id="01168-135">The handle of a Windows account token.</span></span></param>
        <summary><span data-ttu-id="01168-136">模擬由指定使用者語彙基元所表示的使用者。</span><span class="sxs-lookup"><span data-stu-id="01168-136">Impersonates the user represented by the specified user token.</span></span></summary>
        <returns><span data-ttu-id="01168-137"><see cref="T:System.IDisposable" /> 物件，表示模擬前的 Windows 使用者，這個物件可以用於還原為原始使用者的內容。</span><span class="sxs-lookup"><span data-stu-id="01168-137">An <see cref="T:System.IDisposable" /> object that represents the Windows user prior to impersonation; this object can be used to revert to the original user's context.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="01168-138">處理序無法模擬。</span><span class="sxs-lookup"><span data-stu-id="01168-138">The process cannot impersonate.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Impersonate">
      <MemberSignature Language="C#" Value="public static IDisposable Impersonate (IntPtr userToken, string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IDisposable Impersonate(native int userToken, string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.HostingEnvironment.Impersonate(System.IntPtr,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Impersonate (userToken As IntPtr, virtualPath As String) As IDisposable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IDisposable ^ Impersonate(IntPtr userToken, System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="static member Impersonate : nativeint * string -&gt; IDisposable" Usage="System.Web.Hosting.HostingEnvironment.Impersonate (userToken, virtualPath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IDisposable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userToken" Type="System.IntPtr" />
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="userToken"><span data-ttu-id="01168-139">Windows 帳戶語彙基元的控制代碼。</span><span class="sxs-lookup"><span data-stu-id="01168-139">The handle of a Windows account token.</span></span></param>
        <param name="virtualPath"><span data-ttu-id="01168-140">要求之資源的路徑。</span><span class="sxs-lookup"><span data-stu-id="01168-140">The path to the requested resource.</span></span></param>
        <summary><span data-ttu-id="01168-141">模擬由指定虛擬路徑之組態設定所指定的使用者，或指定的使用者語彙基元。</span><span class="sxs-lookup"><span data-stu-id="01168-141">Impersonates the user specified by the configuration settings for the specified virtual path, or the specified user token.</span></span></summary>
        <returns><span data-ttu-id="01168-142"><see cref="T:System.IDisposable" /> 物件，表示模擬前的 Windows 使用者，這個物件可以用於還原為原始使用者的內容。</span><span class="sxs-lookup"><span data-stu-id="01168-142">An <see cref="T:System.IDisposable" /> object that represents the Windows user prior to impersonation; this object can be used to revert to the original user's context.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01168-143"><xref:System.Web.Hosting.HostingEnvironment.Impersonate%2A>方法會模擬後套用組態設定會影響指定的虛擬路徑中的所有項目所產生的使用者。</span><span class="sxs-lookup"><span data-stu-id="01168-143">The <xref:System.Web.Hosting.HostingEnvironment.Impersonate%2A> method impersonates the user that results after applying all  elements in the configuration settings affecting the specified virtual path.</span></span> <span data-ttu-id="01168-144">如果`identity`項目未指定虛擬路徑，<xref:System.Web.Hosting.HostingEnvironment.Impersonate%2A>方法會模擬指定的 Windows 帳戶。</span><span class="sxs-lookup"><span data-stu-id="01168-144">If an `identity` element is not specified for the virtual path, the <xref:System.Web.Hosting.HostingEnvironment.Impersonate%2A> method impersonates the specified Windows account.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="01168-145">處理序無法模擬。</span><span class="sxs-lookup"><span data-stu-id="01168-145">The process cannot impersonate.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="InClientBuildManager">
      <MemberSignature Language="C#" Value="public static bool InClientBuildManager { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool InClientBuildManager" />
      <MemberSignature Language="DocId" Value="P:System.Web.Hosting.HostingEnvironment.InClientBuildManager" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property InClientBuildManager As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool InClientBuildManager { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.InClientBuildManager : bool" Usage="System.Web.Hosting.HostingEnvironment.InClientBuildManager" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="01168-146">取得值，這個值表示主機環境是否可以存取 ASP.NET 建置系統。</span><span class="sxs-lookup"><span data-stu-id="01168-146">Gets a value that indicates whether the hosting environment has access to the ASP.NET build system.</span></span></summary>
        <value><span data-ttu-id="01168-147">如果應用程式定義域是 <see langword="true" /> 情節中所使用的 ASP.NET 裝載應用程式定義域，則為 <see langword="ClientBuildManager" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="01168-147"><see langword="true" /> if the application domain is the ASP.NET hosted application domain used in <see langword="ClientBuildManager" /> scenarios; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IncrementBusyCount">
      <MemberSignature Language="C#" Value="public static void IncrementBusyCount ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void IncrementBusyCount() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.HostingEnvironment.IncrementBusyCount" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub IncrementBusyCount ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void IncrementBusyCount();" />
      <MemberSignature Language="F#" Value="static member IncrementBusyCount : unit -&gt; unit" Usage="System.Web.Hosting.HostingEnvironment.IncrementBusyCount " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="01168-148">將裝載環境中的忙碌物件計數增加一個。</span><span class="sxs-lookup"><span data-stu-id="01168-148">Increases the count of busy objects in the hosted environment by one.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01168-149">已註冊的物件訊號<xref:System.Web.Hosting.HostingEnvironment>它正在執行的物件以及的忙碌物件計數增加一個。</span><span class="sxs-lookup"><span data-stu-id="01168-149">Registered objects signal the <xref:System.Web.Hosting.HostingEnvironment> object that it is running and to increase the count of busy objects by one.</span></span>  
  
 <span data-ttu-id="01168-150">如果忙碌的計數小於或等於零，裝載的應用程式會將逾時，即使沒有任何暫止的要求。</span><span class="sxs-lookup"><span data-stu-id="01168-150">If the busy count is greater than zero, the hosting application will not time out even if there are no pending requests.</span></span>  
  
 <span data-ttu-id="01168-151">必須呼叫<xref:System.Web.Hosting.HostingEnvironment.DecrementBusyCount%2A>每次呼叫的方法<xref:System.Web.Hosting.HostingEnvironment.IncrementBusyCount%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="01168-151">There must be a call to the <xref:System.Web.Hosting.HostingEnvironment.DecrementBusyCount%2A> method for each call to the <xref:System.Web.Hosting.HostingEnvironment.IncrementBusyCount%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializationException">
      <MemberSignature Language="C#" Value="public static Exception InitializationException { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Exception InitializationException" />
      <MemberSignature Language="DocId" Value="P:System.Web.Hosting.HostingEnvironment.InitializationException" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property InitializationException As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Exception ^ InitializationException { Exception ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InitializationException : Exception" Usage="System.Web.Hosting.HostingEnvironment.InitializationException" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="01168-152">取得 <see cref="T:System.Web.Hosting.HostingEnvironment" /> 物件初始設定期間擲回的例外狀況。</span><span class="sxs-lookup"><span data-stu-id="01168-152">Gets any exception thrown during initialization of the <see cref="T:System.Web.Hosting.HostingEnvironment" /> object.</span></span></summary>
        <value><span data-ttu-id="01168-153"><see cref="T:System.Web.Hosting.HostingEnvironment" /> 物件初始設定期間擲回的例外狀況。</span><span class="sxs-lookup"><span data-stu-id="01168-153">The exception thrown during initialization of the <see cref="T:System.Web.Hosting.HostingEnvironment" /> object.</span></span> <span data-ttu-id="01168-154">如果未擲回例外狀況，則會傳回 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="01168-154">If no exception was thrown, returns <see langword="null" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeLifetimeService">
      <MemberSignature Language="C#" Value="public override object InitializeLifetimeService ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object InitializeLifetimeService() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.HostingEnvironment.InitializeLifetimeService" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function InitializeLifetimeService () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ InitializeLifetimeService();" />
      <MemberSignature Language="F#" Value="override this.InitializeLifetimeService : unit -&gt; obj" Usage="hostingEnvironment.InitializeLifetimeService " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="01168-155">藉由防止建立使用期，為 <see cref="T:System.Web.Hosting.HostingEnvironment" /> 物件提供無限的存留期。</span><span class="sxs-lookup"><span data-stu-id="01168-155">Gives the <see cref="T:System.Web.Hosting.HostingEnvironment" /> object an infinite lifetime by preventing a lease from being created.</span></span></summary>
        <returns><span data-ttu-id="01168-156">一定是 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="01168-156">Always <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01168-157">這個方法會覆寫<xref:System.MarshalByRefObject.InitializeLifetimeService%2A>其基底類別中的方法。</span><span class="sxs-lookup"><span data-stu-id="01168-157">This method overrides the <xref:System.MarshalByRefObject.InitializeLifetimeService%2A> method in its base class.</span></span> <span data-ttu-id="01168-158">它會一律傳回`null`，並避免建立會限制的使用期<xref:System.Web.Hosting.HostingEnvironment>物件的存留期。</span><span class="sxs-lookup"><span data-stu-id="01168-158">It always returns `null` and prevents a lease from being created that would limit the <xref:System.Web.Hosting.HostingEnvironment> object's lifetime.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitiateShutdown">
      <MemberSignature Language="C#" Value="public static void InitiateShutdown ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void InitiateShutdown() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.HostingEnvironment.InitiateShutdown" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub InitiateShutdown ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void InitiateShutdown();" />
      <MemberSignature Language="F#" Value="static member InitiateShutdown : unit -&gt; unit" Usage="System.Web.Hosting.HostingEnvironment.InitiateShutdown " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="01168-159">開始關閉與這個主機關聯的 Web 應用程式，並從系統中移除註冊的物件。</span><span class="sxs-lookup"><span data-stu-id="01168-159">Starts shutting down the web application associated with this host and removes registered objects from the system.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01168-160">使用<xref:System.Web.Hosting.HostingEnvironment.InitiateShutdown%2A>方法來停止 web 應用程式定義域，並移除任何物件向<xref:System.Web.Hosting.HostingEnvironment.RegisterObject%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="01168-160">Use the <xref:System.Web.Hosting.HostingEnvironment.InitiateShutdown%2A> method to stop a web application domain and remove any objects registered with the <xref:System.Web.Hosting.HostingEnvironment.RegisterObject%2A> method.</span></span> <span data-ttu-id="01168-161">這個方法會立即傳回，關機之前完成。</span><span class="sxs-lookup"><span data-stu-id="01168-161">This method returns immediately, before the shutdown is complete.</span></span>  
  
 <span data-ttu-id="01168-162"><xref:System.Web.Hosting.IRegisteredObject.Stop%2A>每個已註冊的物件上呼叫方法，是將它傳遞的參數設定為`false`允許每個已註冊的物件，以非同步方式關閉。</span><span class="sxs-lookup"><span data-stu-id="01168-162">The <xref:System.Web.Hosting.IRegisteredObject.Stop%2A> method is called on each registered object with the passed parameter set to `false` to allow each registered object to shut down asynchronously.</span></span> <span data-ttu-id="01168-163">等候指定的時間量之後`shutdownTimeout`屬性的組態項目<xref:System.Web.Hosting.IRegisteredObject.Stop%2A>傳遞的參數設定為一次呼叫方法`true`剩餘的每個已註冊物件。</span><span class="sxs-lookup"><span data-stu-id="01168-163">After waiting for the amount of time specified in the `shutdownTimeout` attribute of the  configuration element, the <xref:System.Web.Hosting.IRegisteredObject.Stop%2A> method is called again with the passed parameter set to `true` for each registered object remaining.</span></span>  
  
 <span data-ttu-id="01168-164">完成所有已註冊的物件已關閉，<xref:System.Web.Hosting.HostingEnvironment>關閉應用程式定義域的物件。</span><span class="sxs-lookup"><span data-stu-id="01168-164">Once all registered objects have finished shutting down, the <xref:System.Web.Hosting.HostingEnvironment> objects shuts down the application domain.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDevelopmentEnvironment">
      <MemberSignature Language="C#" Value="public static bool IsDevelopmentEnvironment { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsDevelopmentEnvironment" />
      <MemberSignature Language="DocId" Value="P:System.Web.Hosting.HostingEnvironment.IsDevelopmentEnvironment" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IsDevelopmentEnvironment As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool IsDevelopmentEnvironment { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDevelopmentEnvironment : bool" Usage="System.Web.Hosting.HostingEnvironment.IsDevelopmentEnvironment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="01168-165">取得值，這個值表示目前應用程式是否在開發環境中。</span><span class="sxs-lookup"><span data-stu-id="01168-165">Gets a value that indicats whether the current application is in a development environment.</span></span></summary>
        <value><span data-ttu-id="01168-166">如果應用程式是在開發環境中，則為 <see langword="true" />，否則為<see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="01168-166"><see langword="true" /> if the application is in a development environment; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsHosted">
      <MemberSignature Language="C#" Value="public static bool IsHosted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsHosted" />
      <MemberSignature Language="DocId" Value="P:System.Web.Hosting.HostingEnvironment.IsHosted" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IsHosted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool IsHosted { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsHosted : bool" Usage="System.Web.Hosting.HostingEnvironment.IsHosted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="01168-167">取得值，指出目前應用程式定義域是否由 <see cref="T:System.Web.Hosting.ApplicationManager" /> 物件裝載 (Host)。</span><span class="sxs-lookup"><span data-stu-id="01168-167">Gets a value indicating whether the current application domain is being hosted by an <see cref="T:System.Web.Hosting.ApplicationManager" /> object.</span></span></summary>
        <value><span data-ttu-id="01168-168">如果應用程式定義域由 <see cref="T:System.Web.Hosting.ApplicationManager" /> 物件裝載則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="01168-168"><see langword="true" /> if the application domain is hosted by an <see cref="T:System.Web.Hosting.ApplicationManager" /> object; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MapPath">
      <MemberSignature Language="C#" Value="public static string MapPath (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string MapPath(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.HostingEnvironment.MapPath(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MapPath (virtualPath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ MapPath(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="static member MapPath : string -&gt; string" Usage="System.Web.Hosting.HostingEnvironment.MapPath virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath"><span data-ttu-id="01168-169">虛擬路徑 (絕對或相對)。</span><span class="sxs-lookup"><span data-stu-id="01168-169">The virtual path (absolute or relative).</span></span></param>
        <summary><span data-ttu-id="01168-170">將虛擬路徑對應至伺服器上的實體路徑。</span><span class="sxs-lookup"><span data-stu-id="01168-170">Maps a virtual path to a physical path on the server.</span></span></summary>
        <returns><span data-ttu-id="01168-171">伺服器上的實體路徑，由 <paramref name="virtualPath" /> 所指定。</span><span class="sxs-lookup"><span data-stu-id="01168-171">The physical path on the server specified by <paramref name="virtualPath" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.HttpServerUtility.MapPath(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="MaxConcurrentRequestsPerCPU">
      <MemberSignature Language="C#" Value="public static int MaxConcurrentRequestsPerCPU { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 MaxConcurrentRequestsPerCPU" />
      <MemberSignature Language="DocId" Value="P:System.Web.Hosting.HostingEnvironment.MaxConcurrentRequestsPerCPU" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property MaxConcurrentRequestsPerCPU As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int MaxConcurrentRequestsPerCPU { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxConcurrentRequestsPerCPU : int with get, set" Usage="System.Web.Hosting.HostingEnvironment.MaxConcurrentRequestsPerCPU" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="01168-172">取得或設定每一個 CPU 的最大並行要求數目。</span><span class="sxs-lookup"><span data-stu-id="01168-172">Gets or sets the maximum concurrent requests per CPU.</span></span></summary>
        <value><span data-ttu-id="01168-173">每一個 CPU 的最大並行要求數目。</span><span class="sxs-lookup"><span data-stu-id="01168-173">The maximum concurrent requests per CPU.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxConcurrentThreadsPerCPU">
      <MemberSignature Language="C#" Value="public static int MaxConcurrentThreadsPerCPU { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 MaxConcurrentThreadsPerCPU" />
      <MemberSignature Language="DocId" Value="P:System.Web.Hosting.HostingEnvironment.MaxConcurrentThreadsPerCPU" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property MaxConcurrentThreadsPerCPU As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int MaxConcurrentThreadsPerCPU { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxConcurrentThreadsPerCPU : int with get, set" Usage="System.Web.Hosting.HostingEnvironment.MaxConcurrentThreadsPerCPU" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="01168-174">取得或設定每一個 CPU 的最大並行執行緒數目。</span><span class="sxs-lookup"><span data-stu-id="01168-174">Gets or sets the maximum concurrent threads per CPU.</span></span></summary>
        <value><span data-ttu-id="01168-175">每一個 CPU 的最大並行執行緒數目。</span><span class="sxs-lookup"><span data-stu-id="01168-175">The maximum concurrent threads per CPU.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MessageReceived">
      <MemberSignature Language="C#" Value="public static void MessageReceived ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MessageReceived() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.HostingEnvironment.MessageReceived" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub MessageReceived ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void MessageReceived();" />
      <MemberSignature Language="F#" Value="static member MessageReceived : unit -&gt; unit" Usage="System.Web.Hosting.HostingEnvironment.MessageReceived " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="01168-176">這個方法支援 [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] 基礎結構，但是您不可以從程式碼直接使用它。</span><span class="sxs-lookup"><span data-stu-id="01168-176">This method supports the [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] infrastructure and is not intended to be used directly from your code.</span></span></summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/f75a72de-e2f2-4a7a-9574-3f278684ea90"><span data-ttu-id="01168-177">.NET Framework 3.5 架構</span><span class="sxs-lookup"><span data-stu-id="01168-177">The .NET Framework 3.5 Architecture</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="QueueBackgroundWorkItem">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="01168-178">[在 .NET Framework 4.5.2 及更新版本中支援]</span><span class="sxs-lookup"><span data-stu-id="01168-178">[Supported in the .NET Framework 4.5.2 and later versions]</span></span> 
<span data-ttu-id="01168-179">排程可在背景中執行的工作，不受任何要求影響。</span><span class="sxs-lookup"><span data-stu-id="01168-179">Schedules a task which can run in the background, independent of any request.</span></span>  
  
<span data-ttu-id="01168-180">此多載方法不會讓 <see cref="T:System.Threading.ExecutionContext" /> 或 <see cref="T:System.Security.SecurityContext" /> 從呼叫者流動至被呼叫者。</span><span class="sxs-lookup"><span data-stu-id="01168-180">This overloaded method doesn't flow the <see cref="T:System.Threading.ExecutionContext" /> or <see cref="T:System.Security.SecurityContext" /> from the caller to the callee.</span></span> <span data-ttu-id="01168-181">因此，這些物件的成員 (例如 <see cref="P:System.Threading.Thread.CurrentPrincipal" /> 屬性) 都不會從呼叫者流入被呼叫者。</span><span class="sxs-lookup"><span data-stu-id="01168-181">Therefore, members of those objects, such as the <see cref="P:System.Threading.Thread.CurrentPrincipal" /> property, will not flow from the caller to the callee.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="QueueBackgroundWorkItem">
      <MemberSignature Language="C#" Value="public static void QueueBackgroundWorkItem (Action&lt;System.Threading.CancellationToken&gt; workItem);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void QueueBackgroundWorkItem(class System.Action`1&lt;valuetype System.Threading.CancellationToken&gt; workItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.HostingEnvironment.QueueBackgroundWorkItem(System.Action{System.Threading.CancellationToken})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub QueueBackgroundWorkItem (workItem As Action(Of CancellationToken))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void QueueBackgroundWorkItem(Action&lt;System::Threading::CancellationToken&gt; ^ workItem);" />
      <MemberSignature Language="F#" Value="static member QueueBackgroundWorkItem : Action&lt;System.Threading.CancellationToken&gt; -&gt; unit" Usage="System.Web.Hosting.HostingEnvironment.QueueBackgroundWorkItem workItem" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="workItem" Type="System.Action&lt;System.Threading.CancellationToken&gt;" />
      </Parameters>
      <Docs>
        <param name="workItem"><span data-ttu-id="01168-182">執行單位。</span><span class="sxs-lookup"><span data-stu-id="01168-182">A unit of execution.</span></span></param>
        <summary><span data-ttu-id="01168-183">[在 .NET Framework 4.5.2 及更新版本中支援]</span><span class="sxs-lookup"><span data-stu-id="01168-183">[Supported in the .NET Framework 4.5.2 and later versions]</span></span> 
<span data-ttu-id="01168-184">排程可在背景中執行的工作，不受任何要求影響。</span><span class="sxs-lookup"><span data-stu-id="01168-184">Schedules a task which can run in the background, independent of any request.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01168-185">不同於正常的執行緒集區工作項目，ASP.NET 可以追蹤的多少個工作目前正在透過此 API 已註冊的項目，以及 ASP.NET 執行階段會嘗試關閉，直到這些工作項目都已完成執行的 AppDomain 的延遲。</span><span class="sxs-lookup"><span data-stu-id="01168-185">Differs from a normal ThreadPool work item in that ASP.NET can keep track of how many work items registered through this API are currently running, and the ASP.NET runtime will try to delay AppDomain shutdown until these work items have finished executing.</span></span> <span data-ttu-id="01168-186">ASP.NET managed AppDomain 之外，不能呼叫這個 API。</span><span class="sxs-lookup"><span data-stu-id="01168-186">This API cannot be called outside of an ASP.NET-managed AppDomain.</span></span> <span data-ttu-id="01168-187">提供的 CancellationToken 信號會在應用程式正在關閉。</span><span class="sxs-lookup"><span data-stu-id="01168-187">The provided CancellationToken will be signaled when the application is shutting down.</span></span>  
  
 <span data-ttu-id="01168-188"><xref:System.Web.Hosting.HostingEnvironment.QueueBackgroundWorkItem%2A> 會傳回工作的回呼。工作項目會被視為完成回呼傳回時。</span><span class="sxs-lookup"><span data-stu-id="01168-188"><xref:System.Web.Hosting.HostingEnvironment.QueueBackgroundWorkItem%2A> takes a Task-returning callback; the work item will be considered finished when the callback returns.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QueueBackgroundWorkItem">
      <MemberSignature Language="C#" Value="public static void QueueBackgroundWorkItem (Func&lt;System.Threading.CancellationToken,System.Threading.Tasks.Task&gt; workItem);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void QueueBackgroundWorkItem(class System.Func`2&lt;valuetype System.Threading.CancellationToken, class System.Threading.Tasks.Task&gt; workItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.HostingEnvironment.QueueBackgroundWorkItem(System.Func{System.Threading.CancellationToken,System.Threading.Tasks.Task})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub QueueBackgroundWorkItem (workItem As Func(Of CancellationToken, Task))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void QueueBackgroundWorkItem(Func&lt;System::Threading::CancellationToken, System::Threading::Tasks::Task ^&gt; ^ workItem);" />
      <MemberSignature Language="F#" Value="static member QueueBackgroundWorkItem : Func&lt;System.Threading.CancellationToken, System.Threading.Tasks.Task&gt; -&gt; unit" Usage="System.Web.Hosting.HostingEnvironment.QueueBackgroundWorkItem workItem" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="workItem" Type="System.Func&lt;System.Threading.CancellationToken,System.Threading.Tasks.Task&gt;" />
      </Parameters>
      <Docs>
        <param name="workItem"><span data-ttu-id="01168-189">執行單位。</span><span class="sxs-lookup"><span data-stu-id="01168-189">A unit of execution.</span></span></param>
        <summary><span data-ttu-id="01168-190">[在 .NET Framework 4.5.2 及更新版本中支援]</span><span class="sxs-lookup"><span data-stu-id="01168-190">[Supported in the .NET Framework 4.5.2 and later versions]</span></span> 
<span data-ttu-id="01168-191">排程可在背景中執行的工作，不受任何要求影響。</span><span class="sxs-lookup"><span data-stu-id="01168-191">Schedules a task which can run in the background, independent of any request.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01168-192">不同於正常的執行緒集區工作項目，ASP.NET 可以追蹤的多少個工作目前正在透過此 API 已註冊的項目，以及 ASP.NET 執行階段會嘗試關閉，直到這些工作項目都已完成執行的 AppDomain 的延遲。</span><span class="sxs-lookup"><span data-stu-id="01168-192">Differs from a normal ThreadPool work item in that ASP.NET can keep track of how many work items registered through this API are currently running, and the ASP.NET runtime will try to delay AppDomain shutdown until these work items have finished executing.</span></span> <span data-ttu-id="01168-193">ASP.NET managed AppDomain 之外，不能呼叫這個 API。</span><span class="sxs-lookup"><span data-stu-id="01168-193">This API cannot be called outside of an ASP.NET-managed AppDomain.</span></span> <span data-ttu-id="01168-194">提供的 CancellationToken 信號會在應用程式正在關閉。</span><span class="sxs-lookup"><span data-stu-id="01168-194">The provided CancellationToken will be signaled when the application is shutting down.</span></span>  
  
 <span data-ttu-id="01168-195"><xref:System.Web.Hosting.HostingEnvironment.QueueBackgroundWorkItem%2A> 會傳回工作的回呼。工作項目會被視為完成時傳回的工作而轉換至終端機的狀態。</span><span class="sxs-lookup"><span data-stu-id="01168-195"><xref:System.Web.Hosting.HostingEnvironment.QueueBackgroundWorkItem%2A> takes a Task-returning callback; the work item will be considered finished when the returned Task transitions to a terminal state.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterObject">
      <MemberSignature Language="C#" Value="public static void RegisterObject (System.Web.Hosting.IRegisteredObject obj);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterObject(class System.Web.Hosting.IRegisteredObject obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.HostingEnvironment.RegisterObject(System.Web.Hosting.IRegisteredObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RegisterObject (obj As IRegisteredObject)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterObject(System::Web::Hosting::IRegisteredObject ^ obj);" />
      <MemberSignature Language="F#" Value="static member RegisterObject : System.Web.Hosting.IRegisteredObject -&gt; unit" Usage="System.Web.Hosting.HostingEnvironment.RegisterObject obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Web.Hosting.IRegisteredObject" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="01168-196">要註冊的物件。</span><span class="sxs-lookup"><span data-stu-id="01168-196">The object to register.</span></span></param>
        <summary><span data-ttu-id="01168-197">將物件置於應用程式的註冊物件清單中。</span><span class="sxs-lookup"><span data-stu-id="01168-197">Places an object in the list of registered objects for the application.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01168-198"><xref:System.Web.Hosting.ApplicationManager>類別可讓您建立、 管理及終結目前的應用程式定義域內的物件目前的應用程式定義域以外的方法。</span><span class="sxs-lookup"><span data-stu-id="01168-198">The <xref:System.Web.Hosting.ApplicationManager> class enables methods outside the current application domain to create, manage, and destroy objects inside the current application domain.</span></span> <span data-ttu-id="01168-199"><xref:System.Web.Hosting.HostingEnvironment.RegisterObject%2A>方法用來向裝載環境中的先前建立的物件。</span><span class="sxs-lookup"><span data-stu-id="01168-199">The <xref:System.Web.Hosting.HostingEnvironment.RegisterObject%2A> method is used to register previously created objects with the hosting environment.</span></span> <span data-ttu-id="01168-200">物件向<xref:System.Web.Hosting.HostingEnvironment.RegisterObject%2A>方法必須實作<xref:System.Web.Hosting.IRegisteredObject>介面。</span><span class="sxs-lookup"><span data-stu-id="01168-200">Objects registered with the <xref:System.Web.Hosting.HostingEnvironment.RegisterObject%2A> method must implement the <xref:System.Web.Hosting.IRegisteredObject> interface.</span></span>  
  
 <span data-ttu-id="01168-201">若要使用已註冊的物件，請遵循下列步驟：</span><span class="sxs-lookup"><span data-stu-id="01168-201">To use a registered object, follow these steps:</span></span>  
  
1.  <span data-ttu-id="01168-202">建立已註冊的物件的新執行個體，藉由呼叫<xref:System.Web.Hosting.ApplicationManager.CreateObject%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="01168-202">Create a new instance of your registered object by calling the <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A?displayProperty=nameWithType> method.</span></span>  
  
2.  <span data-ttu-id="01168-203">呼叫特定類型的方法，來初始化新的物件。</span><span class="sxs-lookup"><span data-stu-id="01168-203">Call a type-specific method to initialize your new object.</span></span> <span data-ttu-id="01168-204">在初始化方法中，呼叫<xref:System.Web.Hosting.HostingEnvironment.RegisterObject%2A>方法將物件新增至已註冊的物件清單。</span><span class="sxs-lookup"><span data-stu-id="01168-204">In the initialization method, call the <xref:System.Web.Hosting.HostingEnvironment.RegisterObject%2A> method to add the object to the list of registered objects.</span></span>  
  
3.  <span data-ttu-id="01168-205">呼叫<xref:System.Web.Hosting.ApplicationManager.GetObject%2A?displayProperty=nameWithType>返回已註冊的物件時所需的方法。</span><span class="sxs-lookup"><span data-stu-id="01168-205">Call the <xref:System.Web.Hosting.ApplicationManager.GetObject%2A?displayProperty=nameWithType> method to return the registered object when required.</span></span>  
  
4.  <span data-ttu-id="01168-206">當您想要停止您的物件時，呼叫<xref:System.Web.Hosting.ApplicationManager.StopObject%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="01168-206">When you wish to stop your object, call the <xref:System.Web.Hosting.ApplicationManager.StopObject%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="01168-207"><xref:System.Web.Hosting.ApplicationManager.StopObject%2A?displayProperty=nameWithType>方法會呼叫<xref:System.Web.Hosting.IRegisteredObject.Stop%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="01168-207">The <xref:System.Web.Hosting.ApplicationManager.StopObject%2A?displayProperty=nameWithType> method in turn calls the <xref:System.Web.Hosting.IRegisteredObject.Stop%2A?displayProperty=nameWithType> method.</span></span>  
  
5.  <span data-ttu-id="01168-208">在 <xref:System.Web.Hosting.IRegisteredObject.Stop%2A?displayProperty=nameWithType>方法，讓您的物件呼叫<xref:System.Web.Hosting.HostingEnvironment.UnregisterObject%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="01168-208">In the <xref:System.Web.Hosting.IRegisteredObject.Stop%2A?displayProperty=nameWithType> method, have your object call the <xref:System.Web.Hosting.HostingEnvironment.UnregisterObject%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="01168-209">下列程式碼範例是實作`Start`方法註冊的物件。</span><span class="sxs-lookup"><span data-stu-id="01168-209">The following code example is an implementation of a `Start` method for a registered object.</span></span> <span data-ttu-id="01168-210">完整的程式碼才能執行範例時，請參閱 < 範例 > 一節的<xref:System.Web.Hosting.IRegisteredObject>介面的概觀主題。</span><span class="sxs-lookup"><span data-stu-id="01168-210">For the full code required to run the example, see the Example section of the <xref:System.Web.Hosting.IRegisteredObject> interface overview topic.</span></span>  
  
 [!code-csharp[System.Web.Hosting.ApplicationManager#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Hosting.ApplicationManager/CS/appManagercs.aspx.cs#2)]
 [!code-vb[System.Web.Hosting.ApplicationManager#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Hosting.ApplicationManager/VB/appManagervb.aspx.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.Hosting.HostingEnvironment.UnregisterObject(System.Web.Hosting.IRegisteredObject)" />
        <altmember cref="T:System.Web.Hosting.IRegisteredObject" />
        <altmember cref="M:System.Web.Hosting.ApplicationManager.CreateObject(System.String,System.Type,System.String,System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="RegisterVirtualPathProvider">
      <MemberSignature Language="C#" Value="public static void RegisterVirtualPathProvider (System.Web.Hosting.VirtualPathProvider virtualPathProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterVirtualPathProvider(class System.Web.Hosting.VirtualPathProvider virtualPathProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.HostingEnvironment.RegisterVirtualPathProvider(System.Web.Hosting.VirtualPathProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterVirtualPathProvider(System::Web::Hosting::VirtualPathProvider ^ virtualPathProvider);" />
      <MemberSignature Language="F#" Value="static member RegisterVirtualPathProvider : System.Web.Hosting.VirtualPathProvider -&gt; unit" Usage="System.Web.Hosting.HostingEnvironment.RegisterVirtualPathProvider virtualPathProvider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPathProvider" Type="System.Web.Hosting.VirtualPathProvider" />
      </Parameters>
      <Docs>
        <param name="virtualPathProvider"><span data-ttu-id="01168-211">要加入至編譯系統的新 <see cref="T:System.Web.Hosting.VirtualPathProvider" /> 執行個體。</span><span class="sxs-lookup"><span data-stu-id="01168-211">The new <see cref="T:System.Web.Hosting.VirtualPathProvider" /> instance to add to the compilation system.</span></span></param>
        <summary><span data-ttu-id="01168-212">使用 ASP.NET 編譯系統註冊新的 <see cref="T:System.Web.Hosting.VirtualPathProvider" /> 執行個體。</span><span class="sxs-lookup"><span data-stu-id="01168-212">Registers a new <see cref="T:System.Web.Hosting.VirtualPathProvider" /> instance with the ASP.NET compilation system.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01168-213"><xref:System.Web.Hosting.HostingEnvironment.RegisterVirtualPathProvider%2A>方法將指定<xref:System.Web.Hosting.VirtualPathProvider>到應用程式的清單執行個體的虛擬路徑提供者。</span><span class="sxs-lookup"><span data-stu-id="01168-213">The <xref:System.Web.Hosting.HostingEnvironment.RegisterVirtualPathProvider%2A> method adds the specified <xref:System.Web.Hosting.VirtualPathProvider> instance to the application's list of virtual-path providers.</span></span>  
  
 <span data-ttu-id="01168-214">如需詳細資訊，請參閱<xref:System.Web.Hosting.VirtualPathProvider>類別概觀。</span><span class="sxs-lookup"><span data-stu-id="01168-214">For more information, see the <xref:System.Web.Hosting.VirtualPathProvider> class overview.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="01168-215">下列程式碼範例屬於登錄自訂應用程式啟動方法<xref:System.Web.Hosting.VirtualPathProvider>使用編譯系統的執行個體。</span><span class="sxs-lookup"><span data-stu-id="01168-215">The following code example is part of an application startup method that registers a custom <xref:System.Web.Hosting.VirtualPathProvider> instance with the compilation system.</span></span> <span data-ttu-id="01168-216">完整的程式碼才能執行範例時，請參閱 < 範例 > 一節的<xref:System.Web.Hosting.VirtualPathProvider>類別概觀主題。</span><span class="sxs-lookup"><span data-stu-id="01168-216">For the full code required to run the example, see the Example section of the <xref:System.Web.Hosting.VirtualPathProvider> class overview topic.</span></span>  
  
 [!code-csharp[System.Web.Hosting.VirtualPathProvider#11](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/CS/AppStart.cs#11)]
 [!code-vb[System.Web.Hosting.VirtualPathProvider#11](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/VB/AppStart.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetCultures">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="01168-217">設定目前執行緒的文化特性 (Culture) 資訊。</span><span class="sxs-lookup"><span data-stu-id="01168-217">Sets culture information for the current thread.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetCultures">
      <MemberSignature Language="C#" Value="public static IDisposable SetCultures ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IDisposable SetCultures() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.HostingEnvironment.SetCultures" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SetCultures () As IDisposable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IDisposable ^ SetCultures();" />
      <MemberSignature Language="F#" Value="static member SetCultures : unit -&gt; IDisposable" Usage="System.Web.Hosting.HostingEnvironment.SetCultures " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IDisposable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="01168-218">將目前執行緒設為應用程式組態檔中指定的文化特性。</span><span class="sxs-lookup"><span data-stu-id="01168-218">Sets the current thread to the culture specified in the application configuration file.</span></span></summary>
        <returns><span data-ttu-id="01168-219"><see cref="T:System.IDisposable" /> 物件，表示變更前的文化特性，這個物件可用於還原為先前的文化特性。</span><span class="sxs-lookup"><span data-stu-id="01168-219">An <see cref="T:System.IDisposable" /> object that represents the culture prior to changing; this object can be used to revert to the previous culture.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01168-220"><xref:System.Web.Hosting.HostingEnvironment.SetCultures%2A>方法會將目前的執行緒設定中指定的文化特性[globalization 項目 （ASP.NET 設定結構描述）](https://msdn.microsoft.com/library/e2dffc8e-ebd2-439b-a2fd-e3ac5e620da7)應用程式的組態檔中的項目。</span><span class="sxs-lookup"><span data-stu-id="01168-220">The <xref:System.Web.Hosting.HostingEnvironment.SetCultures%2A> method sets the current thread to the culture specified in the [globalization Element (ASP.NET Settings Schema)](https://msdn.microsoft.com/library/e2dffc8e-ebd2-439b-a2fd-e3ac5e620da7) element in the application's configuration file.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetCultures">
      <MemberSignature Language="C#" Value="public static IDisposable SetCultures (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IDisposable SetCultures(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.HostingEnvironment.SetCultures(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SetCultures (virtualPath As String) As IDisposable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IDisposable ^ SetCultures(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="static member SetCultures : string -&gt; IDisposable" Usage="System.Web.Hosting.HostingEnvironment.SetCultures virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IDisposable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath"><span data-ttu-id="01168-221">包含文化特性資訊的路徑。</span><span class="sxs-lookup"><span data-stu-id="01168-221">The path that contains the culture information.</span></span></param>
        <summary><span data-ttu-id="01168-222">將目前執行緒設為指定虛擬路徑的文化特性。</span><span class="sxs-lookup"><span data-stu-id="01168-222">Sets the current thread to the culture of the specified virtual path.</span></span></summary>
        <returns><span data-ttu-id="01168-223"><see cref="T:System.IDisposable" /> 物件，表示變更前的文化特性，這個物件可用於還原為先前的文化特性。</span><span class="sxs-lookup"><span data-stu-id="01168-223">An <see cref="T:System.IDisposable" /> object that represents the culture prior to changing; this object can be used to revert to the previous culture.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01168-224"><xref:System.Web.Hosting.HostingEnvironment.SetCultures%2A>方法會將結果套用會影響指定的虛擬路徑的組態檔中的所有項目之後的文化特性設定目前的執行緒。</span><span class="sxs-lookup"><span data-stu-id="01168-224">The <xref:System.Web.Hosting.HostingEnvironment.SetCultures%2A> method sets the current thread to the culture that results after applying all  elements in the configuration files affecting the specified virtual path.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShutdownReason">
      <MemberSignature Language="C#" Value="public static System.Web.ApplicationShutdownReason ShutdownReason { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Web.ApplicationShutdownReason ShutdownReason" />
      <MemberSignature Language="DocId" Value="P:System.Web.Hosting.HostingEnvironment.ShutdownReason" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ShutdownReason As ApplicationShutdownReason" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Web::ApplicationShutdownReason ShutdownReason { System::Web::ApplicationShutdownReason get(); };" />
      <MemberSignature Language="F#" Value="member this.ShutdownReason : System.Web.ApplicationShutdownReason" Usage="System.Web.Hosting.HostingEnvironment.ShutdownReason" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.ApplicationShutdownReason</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="01168-225">傳回列舉值，表示應用程式結束的原因。</span><span class="sxs-lookup"><span data-stu-id="01168-225">Returns an enumerated value that indicates why the application terminated.</span></span></summary>
        <value><span data-ttu-id="01168-226">其中一個 <see cref="T:System.Web.ApplicationShutdownReason" /> 值。</span><span class="sxs-lookup"><span data-stu-id="01168-226">One of the <see cref="T:System.Web.ApplicationShutdownReason" /> values.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SiteName">
      <MemberSignature Language="C#" Value="public static string SiteName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string SiteName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Hosting.HostingEnvironment.SiteName" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SiteName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ SiteName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SiteName : string" Usage="System.Web.Hosting.HostingEnvironment.SiteName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="01168-227">取得此站台的名稱。</span><span class="sxs-lookup"><span data-stu-id="01168-227">Gets the name of the site.</span></span></summary>
        <value><span data-ttu-id="01168-228">站台的名稱。</span><span class="sxs-lookup"><span data-stu-id="01168-228">The name of the site.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StopListening">
      <MemberSignature Language="C#" Value="public static event EventHandler StopListening;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler StopListening" />
      <MemberSignature Language="DocId" Value="E:System.Web.Hosting.HostingEnvironment.StopListening" />
      <MemberSignature Language="VB.NET" Value="Public Shared Event StopListening As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event EventHandler ^ StopListening;" />
      <MemberSignature Language="F#" Value="member this.StopListening : EventHandler " Usage="member this.StopListening : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="01168-229">[僅在 .NET Framework 4.5.1 中支援]</span><span class="sxs-lookup"><span data-stu-id="01168-229">[Supported in the .NET Framework 4.5.1 only]</span></span> 
<span data-ttu-id="01168-230">發生於與此主機相關聯的背景工作處理序或應用程式集區，已停止接聽新要求且最終將關閉時。</span><span class="sxs-lookup"><span data-stu-id="01168-230">Occurs when the worker process or application pool associated with this host has stopped listening for new requests and will eventually shut down.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01168-231">當應用程式集區和其相關聯的背景工作處理序會關閉 iis 時，例如當應用程式集區已達到排定的回收時間間隔，IIS 會通知應用程式正在關閉 ASP.NET 執行階段和背景工作處理序應用程式集區中，就會停止接聽新要求。</span><span class="sxs-lookup"><span data-stu-id="01168-231">When an application pool and its associated worker processes are being shut down by IIS, for example when an application pool has reached a scheduled recycle interval, IIS notifies the ASP.NET runtime that the application is shutting down and the worker process for the application pool stops listening for new requests.</span></span> <span data-ttu-id="01168-232">使用長時間執行的要求，例如應用程式[SignalR](https://go.microsoft.com/fwlink/?LinkID=285432)應用程式可以接聽<xref:System.Web.Hosting.HostingEnvironment.StopListening>事件和 IIS 已啟動的應用程式關閉時正常關閉其長時間執行的作業集區和其相關聯的背景工作處理序。</span><span class="sxs-lookup"><span data-stu-id="01168-232">Applications that use long-running requests, for example [SignalR](https://go.microsoft.com/fwlink/?LinkID=285432) applications, can listen for the <xref:System.Web.Hosting.HostingEnvironment.StopListening> event and gracefully shut down their long-running operations when IIS has initiated the shutdown of an application pool and its associated worker processes.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="01168-233">有幾個開發人員在實作時必須考慮的設計考量<xref:System.Web.Hosting.HostingEnvironment.StopListening>事件：</span><span class="sxs-lookup"><span data-stu-id="01168-233">There are several design considerations that a developer must consider when implementing the <xref:System.Web.Hosting.HostingEnvironment.StopListening> event:</span></span>  
>   
>  1.  <span data-ttu-id="01168-234"><xref:System.Web.Hosting.HostingEnvironment.StopListening>事件僅適用於已設定為使用 IIS 整合式的管線的應用程式。</span><span class="sxs-lookup"><span data-stu-id="01168-234">The <xref:System.Web.Hosting.HostingEnvironment.StopListening> event is only available for applications that are configured to use the IIS integrated pipeline.</span></span>  
> 2.  <span data-ttu-id="01168-235">開發人員不能擲回的錯誤及其<xref:System.Web.Hosting.HostingEnvironment.StopListening>實作; 擲回錯誤，將會有無法預期的結果。</span><span class="sxs-lookup"><span data-stu-id="01168-235">Developers must not throw errors from their <xref:System.Web.Hosting.HostingEnvironment.StopListening> implementations; throwing errors will have unpredictable results.</span></span>  
> 3.  <span data-ttu-id="01168-236">由於在 ASP.NET 中作業的並行本質，也不會保證，ASP.NET 將呼叫<xref:System.Web.Hosting.HostingEnvironment.StopListening>一旦它已經由開發人員實作的事件。</span><span class="sxs-lookup"><span data-stu-id="01168-236">Due to the concurrent nature of operations within ASP.NET, there is no guarantee that ASP.NET will call a <xref:System.Web.Hosting.HostingEnvironment.StopListening> event once it has been implemented by a developer.</span></span>  
> 4.  <span data-ttu-id="01168-237"><xref:System.Web.Hosting.HostingEnvironment.StopListening>事件可以與其他同時執行<xref:System.Web.Hosting.IRegisteredObject>通知。</span><span class="sxs-lookup"><span data-stu-id="01168-237">The <xref:System.Web.Hosting.HostingEnvironment.StopListening> event can execute concurrently with other <xref:System.Web.Hosting.IRegisteredObject> notifications.</span></span>  
> 5.  <span data-ttu-id="01168-238">開發人員必須要注意，ASP.NET 可以關閉應用程式定義域時其<xref:System.Web.Hosting.HostingEnvironment.StopListening>事件時執行和設計其實作來處理這個可能性。</span><span class="sxs-lookup"><span data-stu-id="01168-238">Developers need to be aware that ASP.NET may shut down the application domain while their <xref:System.Web.Hosting.HostingEnvironment.StopListening> event is executing and design their implementations to handle that possibility.</span></span>  
> 6.  <span data-ttu-id="01168-239"><xref:System.Web.Hosting.HostingEnvironment.StopListening> 事件處理常式不得封鎖;封鎖實作時，會導致死結，並達到快速失敗保護間隔時，IIS 會終止背景工作處理序。</span><span class="sxs-lookup"><span data-stu-id="01168-239"><xref:System.Web.Hosting.HostingEnvironment.StopListening> event handlers must not block; blocking implementations will result in deadlocks, and IIS will terminate the worker process when the rapid fail protection interval is reached.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnregisterObject">
      <MemberSignature Language="C#" Value="public static void UnregisterObject (System.Web.Hosting.IRegisteredObject obj);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void UnregisterObject(class System.Web.Hosting.IRegisteredObject obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.HostingEnvironment.UnregisterObject(System.Web.Hosting.IRegisteredObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub UnregisterObject (obj As IRegisteredObject)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void UnregisterObject(System::Web::Hosting::IRegisteredObject ^ obj);" />
      <MemberSignature Language="F#" Value="static member UnregisterObject : System.Web.Hosting.IRegisteredObject -&gt; unit" Usage="System.Web.Hosting.HostingEnvironment.UnregisterObject obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Web.Hosting.IRegisteredObject" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="01168-240">要移除的物件。</span><span class="sxs-lookup"><span data-stu-id="01168-240">The object to remove.</span></span></param>
        <summary><span data-ttu-id="01168-241">移除於應用程式之註冊物件清單中的物件。</span><span class="sxs-lookup"><span data-stu-id="01168-241">Removes an object from the list of registered objects for the application.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01168-242"><xref:System.Web.Hosting.ApplicationManager>類別可讓您建立、 管理及終結目前的應用程式定義域內的物件目前的應用程式定義域以外的方法。</span><span class="sxs-lookup"><span data-stu-id="01168-242">The <xref:System.Web.Hosting.ApplicationManager> class enables methods outside the current application domain to create, manage, and destroy objects inside the current application domain.</span></span> <span data-ttu-id="01168-243"><xref:System.Web.Hosting.HostingEnvironment.UnregisterObject%2A>方法用來從裝載環境移除先前註冊的物件。</span><span class="sxs-lookup"><span data-stu-id="01168-243">The <xref:System.Web.Hosting.HostingEnvironment.UnregisterObject%2A> method is used to remove previously registered objects from the hosting environment.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="01168-244">下列程式碼範例是<xref:System.Web.Hosting.IRegisteredObject.Stop%2A>方法註冊的物件。</span><span class="sxs-lookup"><span data-stu-id="01168-244">The following code example is the <xref:System.Web.Hosting.IRegisteredObject.Stop%2A> method for a registered object.</span></span> <span data-ttu-id="01168-245">完整的程式碼才能執行範例時，請參閱 < 範例 > 一節的<xref:System.Web.Hosting.IRegisteredObject>介面的概觀主題。</span><span class="sxs-lookup"><span data-stu-id="01168-245">For the full code required to run the example, see the Example section of the <xref:System.Web.Hosting.IRegisteredObject> interface overview topic.</span></span>  
  
 [!code-csharp[System.Web.Hosting.ApplicationManager#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Hosting.ApplicationManager/CS/appManagercs.aspx.cs#3)]
 [!code-vb[System.Web.Hosting.ApplicationManager#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Hosting.ApplicationManager/VB/appManagervb.aspx.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.Hosting.HostingEnvironment.RegisterObject(System.Web.Hosting.IRegisteredObject)" />
        <altmember cref="T:System.Web.Hosting.IRegisteredObject" />
        <altmember cref="M:System.Web.Hosting.ApplicationManager.CreateObject(System.String,System.Type,System.String,System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="VirtualPathProvider">
      <MemberSignature Language="C#" Value="public static System.Web.Hosting.VirtualPathProvider VirtualPathProvider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Web.Hosting.VirtualPathProvider VirtualPathProvider" />
      <MemberSignature Language="DocId" Value="P:System.Web.Hosting.HostingEnvironment.VirtualPathProvider" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property VirtualPathProvider As VirtualPathProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Web::Hosting::VirtualPathProvider ^ VirtualPathProvider { System::Web::Hosting::VirtualPathProvider ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.VirtualPathProvider : System.Web.Hosting.VirtualPathProvider" Usage="System.Web.Hosting.HostingEnvironment.VirtualPathProvider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Hosting.VirtualPathProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="01168-246">取得這個應用程式的虛擬路徑提供者。</span><span class="sxs-lookup"><span data-stu-id="01168-246">Gets the virtual path provider for this application.</span></span></summary>
        <value><span data-ttu-id="01168-247">這個應用程式的 <see cref="T:System.Web.Hosting.VirtualPathProvider" /> 執行個體。</span><span class="sxs-lookup"><span data-stu-id="01168-247">The <see cref="T:System.Web.Hosting.VirtualPathProvider" /> instance for this application.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01168-248">當一個以上<xref:System.Web.Hosting.VirtualPathProvider>執行個體已註冊，<xref:System.Web.Hosting.HostingEnvironment>物件會管理呼叫鏈結。</span><span class="sxs-lookup"><span data-stu-id="01168-248">When more than one <xref:System.Web.Hosting.VirtualPathProvider> instance is registered, the <xref:System.Web.Hosting.HostingEnvironment> object manages the call chain.</span></span> <span data-ttu-id="01168-249">您無法控制在其中呼叫虛擬路徑提供者的順序。</span><span class="sxs-lookup"><span data-stu-id="01168-249">You cannot control the order in which virtual path providers are called.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>