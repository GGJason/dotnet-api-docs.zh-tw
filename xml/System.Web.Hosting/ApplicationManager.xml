<Type Name="ApplicationManager" FullName="System.Web.Hosting.ApplicationManager">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b72a4288d88935d936cc6642a67cd5e4803fe19c" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57939887" /></Metadata><TypeSignature Language="C#" Value="public sealed class ApplicationManager : MarshalByRefObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ApplicationManager extends System.MarshalByRefObject" />
  <TypeSignature Language="DocId" Value="T:System.Web.Hosting.ApplicationManager" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ApplicationManager&#xA;Inherits MarshalByRefObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class ApplicationManager sealed : MarshalByRefObject" />
  <TypeSignature Language="F#" Value="type ApplicationManager = class&#xA;    inherit MarshalByRefObject" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="69169-101">管理 ASP.NET 裝載應用程式的 ASP.NET 應用程式定義域。</span><span class="sxs-lookup"><span data-stu-id="69169-101">Manages ASP.NET application domains for an ASP.NET hosting application.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69169-102"><xref:System.Web.Hosting.ApplicationManager>物件提供的 ASP.NET 應用程式裝載環境中的物件存留期管理。</span><span class="sxs-lookup"><span data-stu-id="69169-102">The <xref:System.Web.Hosting.ApplicationManager> object provides lifetime management of objects in the hosting environment for an ASP.NET application.</span></span> <span data-ttu-id="69169-103">它會負責：</span><span class="sxs-lookup"><span data-stu-id="69169-103">It is responsible for:</span></span>  
  
-   <span data-ttu-id="69169-104">啟用及初始化 ASP.NET 應用程式。</span><span class="sxs-lookup"><span data-stu-id="69169-104">Activating and initializing ASP.NET applications.</span></span>  
  
-   <span data-ttu-id="69169-105">管理應用程式存留期和物件的存留期註冊應用程式中。</span><span class="sxs-lookup"><span data-stu-id="69169-105">Managing the application lifetime and the lifetime of objects registered in the application.</span></span>  
  
-   <span data-ttu-id="69169-106">公開用來處理 ASP.NET 應用程式要求的裝載環境的物件。</span><span class="sxs-lookup"><span data-stu-id="69169-106">Exposing objects used by the hosting environment to process ASP.NET application requests.</span></span>  
  
-   <span data-ttu-id="69169-107">提供一份在任何給定的時刻，裝載處理序中執行的應用程式。</span><span class="sxs-lookup"><span data-stu-id="69169-107">Providing a list of applications running in the hosting process at any given moment.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberSignature Language="F#" Value="member this.Close : unit -&gt; unit" Usage="applicationManager.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="69169-108">關閉全部應用程式定義域。</span><span class="sxs-lookup"><span data-stu-id="69169-108">Shuts down all application domains.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69169-109">如果呼叫<xref:System.Web.Hosting.ApplicationManager.Close%2A>方法可減少使用應用程式管理員設為 0，應用程式的參考計數<xref:System.Web.Hosting.ApplicationManager.Close%2A>方法呼叫<xref:System.Web.Hosting.ApplicationManager.ShutdownAll%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="69169-109">If a call to the <xref:System.Web.Hosting.ApplicationManager.Close%2A> method reduces the reference count of applications using the application manager to 0, the <xref:System.Web.Hosting.ApplicationManager.Close%2A> method calls the <xref:System.Web.Hosting.ApplicationManager.ShutdownAll%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateObject">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="69169-110">建立指定之應用程式定義域的物件和物件型別。</span><span class="sxs-lookup"><span data-stu-id="69169-110">Creates an object for the specified application domain and object type.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateObject">
      <MemberSignature Language="C#" Value="public System.Web.Hosting.IRegisteredObject CreateObject (System.Web.Hosting.IApplicationHost appHost, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.Hosting.IRegisteredObject CreateObject(class System.Web.Hosting.IApplicationHost appHost, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.CreateObject(System.Web.Hosting.IApplicationHost,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::Hosting::IRegisteredObject ^ CreateObject(System::Web::Hosting::IApplicationHost ^ appHost, Type ^ type);" />
      <MemberSignature Language="F#" Value="member this.CreateObject : System.Web.Hosting.IApplicationHost * Type -&gt; System.Web.Hosting.IRegisteredObject" Usage="applicationManager.CreateObject (appHost, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Hosting.IRegisteredObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appHost" Type="System.Web.Hosting.IApplicationHost" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="appHost"><span data-ttu-id="69169-111"><see cref="T:System.Web.Hosting.IApplicationHost" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="69169-111">An <see cref="T:System.Web.Hosting.IApplicationHost" /> object.</span></span></param>
        <param name="type"><span data-ttu-id="69169-112">要建立的物件類型。</span><span class="sxs-lookup"><span data-stu-id="69169-112">The type of the object to create.</span></span></param>
        <summary><span data-ttu-id="69169-113">依據類型，針對指定的應用程式定義域建立物件。</span><span class="sxs-lookup"><span data-stu-id="69169-113">Creates an object for the specified application domain, based on type.</span></span></summary>
        <returns><span data-ttu-id="69169-114"><paramref name="type" /> 中指定之類型的新物件。</span><span class="sxs-lookup"><span data-stu-id="69169-114">A new object of the type specified in <paramref name="type" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69169-115"><xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> .NET Framework 3.5 版中引進。</span><span class="sxs-lookup"><span data-stu-id="69169-115"><xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="69169-116">如需詳細資訊，請參閱[版本和相依性](~/docs/framework/migration-guide/versions-and-dependencies.md)。</span><span class="sxs-lookup"><span data-stu-id="69169-116">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="69169-117">應用程式的實體路徑不存在。</span><span class="sxs-lookup"><span data-stu-id="69169-117">A physical path for the application does not exist.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="69169-118"><paramref name="appHost" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="69169-118"><paramref name="appHost" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="69169-119">-或-</span><span class="sxs-lookup"><span data-stu-id="69169-119">-or-</span></span> 
 <span data-ttu-id="69169-120"><paramref name="type" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="69169-120"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateObject">
      <MemberSignature Language="C#" Value="public System.Web.Hosting.IRegisteredObject CreateObject (string appId, Type type, string virtualPath, string physicalPath, bool failIfExists);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.Hosting.IRegisteredObject CreateObject(string appId, class System.Type type, string virtualPath, string physicalPath, bool failIfExists) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.CreateObject(System.String,System.Type,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::Hosting::IRegisteredObject ^ CreateObject(System::String ^ appId, Type ^ type, System::String ^ virtualPath, System::String ^ physicalPath, bool failIfExists);" />
      <MemberSignature Language="F#" Value="member this.CreateObject : string * Type * string * string * bool -&gt; System.Web.Hosting.IRegisteredObject" Usage="applicationManager.CreateObject (appId, type, virtualPath, physicalPath, failIfExists)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Hosting.IRegisteredObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appId" Type="System.String" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="virtualPath" Type="System.String" />
        <Parameter Name="physicalPath" Type="System.String" />
        <Parameter Name="failIfExists" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="appId"><span data-ttu-id="69169-121">應用程式的唯一識別項，該應用程式擁有物件。</span><span class="sxs-lookup"><span data-stu-id="69169-121">The unique identifier for the application that owns the object.</span></span></param>
        <param name="type"><span data-ttu-id="69169-122">要建立的物件類型。</span><span class="sxs-lookup"><span data-stu-id="69169-122">The type of the object to create.</span></span></param>
        <param name="virtualPath"><span data-ttu-id="69169-123">應用程式的虛擬路徑。</span><span class="sxs-lookup"><span data-stu-id="69169-123">The virtual path to the application.</span></span></param>
        <param name="physicalPath"><span data-ttu-id="69169-124">應用程式的實體路徑。</span><span class="sxs-lookup"><span data-stu-id="69169-124">The physical path to the application.</span></span></param>
        <param name="failIfExists"><span data-ttu-id="69169-125"><see langword="true" /> 表示如果指定型別的物件目前已註冊則擲回例外狀況，<see langword="false" /> 表示傳回指定型別的現有註冊物件。</span><span class="sxs-lookup"><span data-stu-id="69169-125"><see langword="true" /> to throw an exception if an object of the specified type is currently registered; <see langword="false" /> to return the existing registered object of the specified type.</span></span></param>
        <summary><span data-ttu-id="69169-126">根據型別、虛擬路徑和實體路徑建立指定應用程式定義域的物件，如果指定型別的物件已存在，則會使用布林值 (Boolean) 表示失敗行為。</span><span class="sxs-lookup"><span data-stu-id="69169-126">Creates an object for the specified application domain based on type, virtual and physical paths, and a Boolean value indicating failure behavior when an object of the specified type already exists.</span></span></summary>
        <returns><span data-ttu-id="69169-127">指定之 <paramref name="type" /> 的新物件。</span><span class="sxs-lookup"><span data-stu-id="69169-127">A new object of the specified <paramref name="type" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69169-128"><xref:System.Web.Hosting.ApplicationManager.CreateObject%2A>方法用來建立並註冊應用程式中的物件。</span><span class="sxs-lookup"><span data-stu-id="69169-128">The <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> method is used to create and register objects in the application.</span></span> <span data-ttu-id="69169-129">可以建立每個類型只有一個物件。</span><span class="sxs-lookup"><span data-stu-id="69169-129">Only one object of each type can be created.</span></span> <span data-ttu-id="69169-130">如果您需要建立多個相同類型的物件，您必須實作的物件 factory。</span><span class="sxs-lookup"><span data-stu-id="69169-130">If you need to create multiple objects of the same type, you must implement an object factory.</span></span> <span data-ttu-id="69169-131">如需詳細資訊，請參閱本主題的程式碼範例。</span><span class="sxs-lookup"><span data-stu-id="69169-131">For more information, see the code example in this topic.</span></span>  
  
 <span data-ttu-id="69169-132">唯一的應用程式識別碼所識別的每個應用程式，會在自己的應用程式定義域中執行。</span><span class="sxs-lookup"><span data-stu-id="69169-132">Each application, identified by a unique application identifier, runs in its own application domain.</span></span> <span data-ttu-id="69169-133"><xref:System.Web.Hosting.ApplicationManager.CreateObject%2A>方法中指定的應用程式的應用程式定義域建立指定型別的物件`appID`參數。</span><span class="sxs-lookup"><span data-stu-id="69169-133">The <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> method creates an object of the specified type in the application domain of the application specified in the `appID` parameter.</span></span> <span data-ttu-id="69169-134">如果應用程式定義域不存在指定的應用程式，會建立一個之前在建立物件。</span><span class="sxs-lookup"><span data-stu-id="69169-134">If an application domain does not exist for the specified application, one is created before the object is created.</span></span>  
  
 <span data-ttu-id="69169-135">`failIfExists`參數會控制行為的<xref:System.Web.Hosting.ApplicationManager.CreateObject%2A>方法時指定之型別的物件已經存在於應用程式。</span><span class="sxs-lookup"><span data-stu-id="69169-135">The `failIfExists` parameter controls the behavior of the <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> method when an object of the specified type already exists in the application.</span></span> <span data-ttu-id="69169-136">當`failIfExists`已`true`，則<xref:System.Web.Hosting.ApplicationManager.CreateObject%2A>方法會擲回<xref:System.InvalidOperationException>例外狀況。</span><span class="sxs-lookup"><span data-stu-id="69169-136">When `failIfExists` is `true`, the <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> method throws an <xref:System.InvalidOperationException> exception.</span></span>  
  
 <span data-ttu-id="69169-137">當`failIfExists`已`false`，則<xref:System.Web.Hosting.ApplicationManager.CreateObject%2A>方法會傳回指定之型別的現有註冊的物件。</span><span class="sxs-lookup"><span data-stu-id="69169-137">When `failIfExists` is `false`, the <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> method returns the existing registered object of the specified type.</span></span>  
  
 <span data-ttu-id="69169-138"><xref:System.Web.Hosting.ApplicationManager.CreateObject%2A>方法呼叫則會採用額外的多載`throwOnError`參數搭配`throwOnError`設定為`false`。</span><span class="sxs-lookup"><span data-stu-id="69169-138">The <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> method calls the overload that takes an additional `throwOnError` parameter with `throwOnError` set to `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="69169-139">下列程式碼範例是已註冊的物件的物件 factory 設計模式實作。</span><span class="sxs-lookup"><span data-stu-id="69169-139">The following code example is an implementation of the object-factory design pattern for registered objects.</span></span> <span data-ttu-id="69169-140">使用 factory 模式，可讓您註冊多個物件執行個體。</span><span class="sxs-lookup"><span data-stu-id="69169-140">Using the factory pattern enables you to register multiple instances of an object.</span></span> <span data-ttu-id="69169-141">此範例包含兩個物件： `SampleComponent`，它是應用程式的物件會使用多個執行個體，並`SampleComponentFactory`，它負責管理一份`SampleComponent`執行個體。</span><span class="sxs-lookup"><span data-stu-id="69169-141">The example contains two objects: `SampleComponent`, which is the object the application will use multiple instances of, and `SampleComponentFactory`, which manages a list of `SampleComponent` instances.</span></span>  
  
 [!code-csharp[System.Web.Hosting.ApplicationManager#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Hosting.ApplicationManager/CS/appManagercs.aspx.cs#1)]
 [!code-vb[System.Web.Hosting.ApplicationManager#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Hosting.ApplicationManager/VB/appManagervb.aspx.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="69169-142"><paramref name="physicalPath" /> 是 <see langword="null" /></span><span class="sxs-lookup"><span data-stu-id="69169-142"><paramref name="physicalPath" /> is <see langword="null" /></span></span>  
  
<span data-ttu-id="69169-143">-或-</span><span class="sxs-lookup"><span data-stu-id="69169-143">-or-</span></span> 
 <span data-ttu-id="69169-144"><paramref name="physicalPath" /> 不是有效的應用程式路徑。</span><span class="sxs-lookup"><span data-stu-id="69169-144"><paramref name="physicalPath" /> is not a valid application path.</span></span>  
  
<span data-ttu-id="69169-145">-或-</span><span class="sxs-lookup"><span data-stu-id="69169-145">-or-</span></span> 
 <span data-ttu-id="69169-146"><paramref name="type" /> 未實作 <see cref="T:System.Web.Hosting.IRegisteredObject" /> 介面。</span><span class="sxs-lookup"><span data-stu-id="69169-146"><paramref name="type" /> does not implement the <see cref="T:System.Web.Hosting.IRegisteredObject" /> interface.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="69169-147"><paramref name="appID" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="69169-147"><paramref name="appID" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="69169-148">-或-</span><span class="sxs-lookup"><span data-stu-id="69169-148">-or-</span></span> 
 <span data-ttu-id="69169-149"><paramref name="type" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="69169-149"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="69169-150"><paramref name="failIfExists" /> 為 <see langword="true" />，且指定型別的物件已註冊。</span><span class="sxs-lookup"><span data-stu-id="69169-150"><paramref name="failIfExists" /> is <see langword="true" /> and an object of the specified type is already registered.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateObject">
      <MemberSignature Language="C#" Value="public System.Web.Hosting.IRegisteredObject CreateObject (string appId, Type type, string virtualPath, string physicalPath, bool failIfExists, bool throwOnError);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.Hosting.IRegisteredObject CreateObject(string appId, class System.Type type, string virtualPath, string physicalPath, bool failIfExists, bool throwOnError) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.CreateObject(System.String,System.Type,System.String,System.String,System.Boolean,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::Hosting::IRegisteredObject ^ CreateObject(System::String ^ appId, Type ^ type, System::String ^ virtualPath, System::String ^ physicalPath, bool failIfExists, bool throwOnError);" />
      <MemberSignature Language="F#" Value="member this.CreateObject : string * Type * string * string * bool * bool -&gt; System.Web.Hosting.IRegisteredObject" Usage="applicationManager.CreateObject (appId, type, virtualPath, physicalPath, failIfExists, throwOnError)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Hosting.IRegisteredObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appId" Type="System.String" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="virtualPath" Type="System.String" />
        <Parameter Name="physicalPath" Type="System.String" />
        <Parameter Name="failIfExists" Type="System.Boolean" />
        <Parameter Name="throwOnError" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="appId"><span data-ttu-id="69169-151">應用程式的唯一識別項，該應用程式擁有物件。</span><span class="sxs-lookup"><span data-stu-id="69169-151">The unique identifier for the application that owns the object.</span></span></param>
        <param name="type"><span data-ttu-id="69169-152">要建立的物件類型。</span><span class="sxs-lookup"><span data-stu-id="69169-152">The type of the object to create.</span></span></param>
        <param name="virtualPath"><span data-ttu-id="69169-153">應用程式的虛擬路徑。</span><span class="sxs-lookup"><span data-stu-id="69169-153">The virtual path to the application.</span></span></param>
        <param name="physicalPath"><span data-ttu-id="69169-154">應用程式的實體路徑。</span><span class="sxs-lookup"><span data-stu-id="69169-154">The physical path to the application.</span></span></param>
        <param name="failIfExists"><span data-ttu-id="69169-155"><see langword="true" /> 表示如果指定型別的物件目前已註冊則擲回例外狀況，<see langword="false" /> 表示傳回指定型別的現有註冊物件。</span><span class="sxs-lookup"><span data-stu-id="69169-155"><see langword="true" /> to throw an exception if an object of the specified type is currently registered; <see langword="false" /> to return the existing registered object of the specified type.</span></span></param>
        <param name="throwOnError"><span data-ttu-id="69169-156"><see langword="true" />，表示擲回裝載初始設定錯誤的例外狀況，<see langword="false" /> 表示不擲回裝載初始設定例外狀況。</span><span class="sxs-lookup"><span data-stu-id="69169-156"><see langword="true" /> to throw exceptions for hosting initialization errors; <see langword="false" /> to not throw hosting initialization exceptions.</span></span></param>
        <summary><span data-ttu-id="69169-157">根據型別、虛擬路徑和實體路徑建立指定之應用程式定義域的物件，如果指定型別的物件已存在，則會使用布林值表示失敗行為，且布林值會指出是否擲回裝載初始設定錯誤例外狀況。</span><span class="sxs-lookup"><span data-stu-id="69169-157">Creates an object for the specified application domain based on type, virtual and physical paths, a Boolean value indicating failure behavior when an object of the specified type already exists, and a Boolean value indicating whether hosting initialization error exceptions are thrown.</span></span></summary>
        <returns><span data-ttu-id="69169-158">指定之 <paramref name="type" /> 的新物件。</span><span class="sxs-lookup"><span data-stu-id="69169-158">A new object of the specified <paramref name="type" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69169-159">這個多載<xref:System.Web.Hosting.ApplicationManager.CreateObject%2A>方法提供`throwOnError`參數，可讓您控制是否擲回裝載初始設定例外狀況。</span><span class="sxs-lookup"><span data-stu-id="69169-159">This overload of the <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> method provides the `throwOnError` parameter, which allows you to control whether hosting initialization exceptions are thrown.</span></span> <span data-ttu-id="69169-160">多載<xref:System.Web.Hosting.ApplicationManager.CreateObject%2A>方法，不會提供`throwOnError`參數設定為呼叫這個多載`false`。</span><span class="sxs-lookup"><span data-stu-id="69169-160">The overload of the <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> method that does not provide `throwOnError` calls this overload with the parameter set to `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="69169-161"><paramref name="physicalPath" /> 是 <see langword="null" /></span><span class="sxs-lookup"><span data-stu-id="69169-161"><paramref name="physicalPath" /> is <see langword="null" /></span></span>  
  
<span data-ttu-id="69169-162">-或-</span><span class="sxs-lookup"><span data-stu-id="69169-162">-or-</span></span> 
 <span data-ttu-id="69169-163"><paramref name="physicalPath" /> 不是有效的應用程式路徑。</span><span class="sxs-lookup"><span data-stu-id="69169-163"><paramref name="physicalPath" /> is not a valid application path.</span></span>  
  
<span data-ttu-id="69169-164">-或-</span><span class="sxs-lookup"><span data-stu-id="69169-164">-or-</span></span> 
 <span data-ttu-id="69169-165"><paramref name="type" /> 未實作 <see cref="T:System.Web.Hosting.IRegisteredObject" /> 介面。</span><span class="sxs-lookup"><span data-stu-id="69169-165"><paramref name="type" /> does not implement the <see cref="T:System.Web.Hosting.IRegisteredObject" /> interface.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="69169-166"><paramref name="appID" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="69169-166"><paramref name="appID" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="69169-167">-或-</span><span class="sxs-lookup"><span data-stu-id="69169-167">-or-</span></span> 
 <span data-ttu-id="69169-168"><paramref name="type" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="69169-168"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="69169-169"><paramref name="failIfExists" /> 為 <see langword="true" />，且指定型別的物件已註冊。</span><span class="sxs-lookup"><span data-stu-id="69169-169"><paramref name="failIfExists" /> is <see langword="true" /> and an object of the specified type is already registered.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetAppDomain">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="69169-170">取得指定之應用程式的應用程式定義域。</span><span class="sxs-lookup"><span data-stu-id="69169-170">Gets the application domain of a specified application.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAppDomain">
      <MemberSignature Language="C#" Value="public AppDomain GetAppDomain (string appId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.AppDomain GetAppDomain(string appId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.GetAppDomain(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAppDomain (appId As String) As AppDomain" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AppDomain ^ GetAppDomain(System::String ^ appId);" />
      <MemberSignature Language="F#" Value="member this.GetAppDomain : string -&gt; AppDomain" Usage="applicationManager.GetAppDomain appId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AppDomain</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appId" Type="System.String" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="appId"><span data-ttu-id="69169-171">應用程式的唯一識別項。</span><span class="sxs-lookup"><span data-stu-id="69169-171">The unique identifier for the application.</span></span></param>
        <summary><span data-ttu-id="69169-172">取得指定之應用程式的應用程式定義域。</span><span class="sxs-lookup"><span data-stu-id="69169-172">Gets the application domain of the specified application.</span></span></summary>
        <returns><span data-ttu-id="69169-173">應用程式的應用程式定義域。</span><span class="sxs-lookup"><span data-stu-id="69169-173">The application domain of the application.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAppDomain">
      <MemberSignature Language="C#" Value="public AppDomain GetAppDomain (System.Web.Hosting.IApplicationHost appHost);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.AppDomain GetAppDomain(class System.Web.Hosting.IApplicationHost appHost) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.GetAppDomain(System.Web.Hosting.IApplicationHost)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAppDomain (appHost As IApplicationHost) As AppDomain" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AppDomain ^ GetAppDomain(System::Web::Hosting::IApplicationHost ^ appHost);" />
      <MemberSignature Language="F#" Value="member this.GetAppDomain : System.Web.Hosting.IApplicationHost -&gt; AppDomain" Usage="applicationManager.GetAppDomain appHost" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AppDomain</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appHost" Type="System.Web.Hosting.IApplicationHost" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="appHost"><span data-ttu-id="69169-174">要用來取得應用程式定義域的主應用程式。</span><span class="sxs-lookup"><span data-stu-id="69169-174">The host to get the application domain for.</span></span></param>
        <summary><span data-ttu-id="69169-175">使用指定的主機取得應用程式的應用程式定義域。</span><span class="sxs-lookup"><span data-stu-id="69169-175">Gets the application domain of an application using the specified host.</span></span></summary>
        <returns><span data-ttu-id="69169-176">應用程式的應用程式定義域。</span><span class="sxs-lookup"><span data-stu-id="69169-176">The application domain of the application.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApplicationManager">
      <MemberSignature Language="C#" Value="public static System.Web.Hosting.ApplicationManager GetApplicationManager ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Hosting.ApplicationManager GetApplicationManager() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.GetApplicationManager" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetApplicationManager () As ApplicationManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Hosting::ApplicationManager ^ GetApplicationManager();" />
      <MemberSignature Language="F#" Value="static member GetApplicationManager : unit -&gt; System.Web.Hosting.ApplicationManager" Usage="System.Web.Hosting.ApplicationManager.GetApplicationManager " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Hosting.ApplicationManager</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="69169-177">傳回與這個 ASP.NET 主機處理序關聯之 <see cref="T:System.Web.Hosting.ApplicationManager" /> 物件的單一執行個體。</span><span class="sxs-lookup"><span data-stu-id="69169-177">Returns the single instance of the <see cref="T:System.Web.Hosting.ApplicationManager" /> object associated with this ASP.NET host process.</span></span></summary>
        <returns><span data-ttu-id="69169-178">與正在執行的 ASP.NET 主機處理序關聯之 <see cref="T:System.Web.Hosting.ApplicationManager" /> 物件的單一執行個體。</span><span class="sxs-lookup"><span data-stu-id="69169-178">The single instance of the <see cref="T:System.Web.Hosting.ApplicationManager" /> object associated with the ASP.NET host process that is running.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69169-179">只有一個執行個體<xref:System.Web.Hosting.ApplicationManager>物件由預設應用程式定義域中的 ASP.NET 主機處理序。</span><span class="sxs-lookup"><span data-stu-id="69169-179">Only one instance of the <xref:System.Web.Hosting.ApplicationManager> object is created by an ASP.NET host process in the default application domain.</span></span> <span data-ttu-id="69169-180">如果執行個體<xref:System.Web.Hosting.ApplicationManager>類別不是的話<xref:System.Web.Hosting.ApplicationManager.GetApplicationManager%2A>方法會先建立的執行個體<xref:System.Web.Hosting.ApplicationManager>類別，並接著會傳回新建立的物件。</span><span class="sxs-lookup"><span data-stu-id="69169-180">If an instance of the <xref:System.Web.Hosting.ApplicationManager> class is not available, the <xref:System.Web.Hosting.ApplicationManager.GetApplicationManager%2A> method first creates an instance of the <xref:System.Web.Hosting.ApplicationManager> class and then returns the newly created object.</span></span> <span data-ttu-id="69169-181">如果執行個體<xref:System.Web.Hosting.ApplicationManager>先前建立類別，<xref:System.Web.Hosting.ApplicationManager.GetApplicationManager%2A>方法會傳回現有的物件。</span><span class="sxs-lookup"><span data-stu-id="69169-181">If an instance of the <xref:System.Web.Hosting.ApplicationManager> class was previously created, the <xref:System.Web.Hosting.ApplicationManager.GetApplicationManager%2A> method returns the existing object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="69169-182">下列程式碼範例會使用<xref:System.Web.Hosting.ApplicationManager.GetApplicationManager%2A>方法來擷取<xref:System.Web.Hosting.ApplicationManager>Web 應用程式的執行個體。</span><span class="sxs-lookup"><span data-stu-id="69169-182">The following code example uses the <xref:System.Web.Hosting.ApplicationManager.GetApplicationManager%2A> method to retrieve the <xref:System.Web.Hosting.ApplicationManager> instance for a Web application.</span></span>  
  
 [!code-aspx-csharp[System.Web.Hosting.ApplicationInfo#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Hosting.ApplicationInfo/CS/applicationInfocs.aspx#1)]
 [!code-aspx-vb[System.Web.Hosting.ApplicationInfo#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Hosting.ApplicationInfo/VB/applicationInfovb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetObject">
      <MemberSignature Language="C#" Value="public System.Web.Hosting.IRegisteredObject GetObject (string appId, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.Hosting.IRegisteredObject GetObject(string appId, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.GetObject(System.String,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::Hosting::IRegisteredObject ^ GetObject(System::String ^ appId, Type ^ type);" />
      <MemberSignature Language="F#" Value="member this.GetObject : string * Type -&gt; System.Web.Hosting.IRegisteredObject" Usage="applicationManager.GetObject (appId, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Hosting.IRegisteredObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appId" Type="System.String" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="appId"><span data-ttu-id="69169-183">應用程式的唯一識別項，該應用程式擁有物件。</span><span class="sxs-lookup"><span data-stu-id="69169-183">The unique identifier for the application that owns the object.</span></span></param>
        <param name="type"><span data-ttu-id="69169-184">要傳回的物件型別。</span><span class="sxs-lookup"><span data-stu-id="69169-184">The type of the object to return.</span></span></param>
        <summary><span data-ttu-id="69169-185">從指定應用程式傳回指定型別的註冊物件。</span><span class="sxs-lookup"><span data-stu-id="69169-185">Returns the registered object of the specified type from the specified application.</span></span></summary>
        <returns><span data-ttu-id="69169-186">指定型別的註冊物件，否則，如果未透過呼叫 <see cref="M:System.Web.Hosting.ApplicationManager.CreateObject(System.String,System.Type,System.String,System.String,System.Boolean)" /> 方法註冊型別，則為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="69169-186">The registered object of the specified type; or <see langword="null" /> if the type has not been registered through a call to the <see cref="M:System.Web.Hosting.ApplicationManager.CreateObject(System.String,System.Type,System.String,System.String,System.Boolean)" /> method.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="69169-187"><paramref name="appId" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="69169-187"><paramref name="appId" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="69169-188">-或-</span><span class="sxs-lookup"><span data-stu-id="69169-188">-or-</span></span> 
 <span data-ttu-id="69169-189"><paramref name="type" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="69169-189"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetRunningApplications">
      <MemberSignature Language="C#" Value="public System.Web.Hosting.ApplicationInfo[] GetRunningApplications ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.Hosting.ApplicationInfo[] GetRunningApplications() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.GetRunningApplications" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRunningApplications () As ApplicationInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Web::Hosting::ApplicationInfo ^&gt; ^ GetRunningApplications();" />
      <MemberSignature Language="F#" Value="member this.GetRunningApplications : unit -&gt; System.Web.Hosting.ApplicationInfo[]" Usage="applicationManager.GetRunningApplications " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Hosting.ApplicationInfo[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="69169-190">傳回執行應用程式的快照 (Snapshot)。</span><span class="sxs-lookup"><span data-stu-id="69169-190">Returns a snapshot of running applications.</span></span></summary>
        <returns><span data-ttu-id="69169-191"><see cref="T:System.Web.Hosting.ApplicationInfo" /> 物件的陣列，包含由這個 <see cref="T:System.Web.Hosting.ApplicationManager" /> 執行個體管理之應用程式的相關資訊。</span><span class="sxs-lookup"><span data-stu-id="69169-191">An array of <see cref="T:System.Web.Hosting.ApplicationInfo" /> objects that contain information about the applications managed by this <see cref="T:System.Web.Hosting.ApplicationManager" /> instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="69169-192">下列程式碼範例會使用<xref:System.Web.Hosting.ApplicationManager.GetRunningApplications%2A>方法，以顯示由管理的應用程式的相關資訊<xref:System.Web.Hosting.ApplicationManager>執行個體。</span><span class="sxs-lookup"><span data-stu-id="69169-192">The following code example uses the <xref:System.Web.Hosting.ApplicationManager.GetRunningApplications%2A> method to display information about the applications managed by an <xref:System.Web.Hosting.ApplicationManager> instance.</span></span>  
  
 [!code-aspx-csharp[System.Web.Hosting.ApplicationInfo#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Hosting.ApplicationInfo/CS/applicationInfocs.aspx#1)]
 [!code-aspx-vb[System.Web.Hosting.ApplicationInfo#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Hosting.ApplicationInfo/VB/applicationInfovb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeLifetimeService">
      <MemberSignature Language="C#" Value="public override object InitializeLifetimeService ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object InitializeLifetimeService() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.InitializeLifetimeService" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function InitializeLifetimeService () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ InitializeLifetimeService();" />
      <MemberSignature Language="F#" Value="override this.InitializeLifetimeService : unit -&gt; obj" Usage="applicationManager.InitializeLifetimeService " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="69169-193">藉由防止建立使用期 (Lease)，為應用程式定義域提供無限的存留期 (Lifetime)。</span><span class="sxs-lookup"><span data-stu-id="69169-193">Gives the application domain an infinite lifetime by preventing a lease from being created.</span></span></summary>
        <returns><span data-ttu-id="69169-194">一定是 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="69169-194">Always <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69169-195">這個方法會覆寫<xref:System.MarshalByRefObject.InitializeLifetimeService%2A>其基底類別中的方法。</span><span class="sxs-lookup"><span data-stu-id="69169-195">This method overrides the <xref:System.MarshalByRefObject.InitializeLifetimeService%2A> method in its base class.</span></span> <span data-ttu-id="69169-196">它會一律傳回`null`，藉此防止建立會限制應用程式定義域的存留期的使用期。</span><span class="sxs-lookup"><span data-stu-id="69169-196">It always returns `null` and thereby prevents a lease from being created that would limit the application domain's lifetime.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsIdle">
      <MemberSignature Language="C#" Value="public bool IsIdle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsIdle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.IsIdle" />
      <MemberSignature Language="VB.NET" Value="Public Function IsIdle () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsIdle();" />
      <MemberSignature Language="F#" Value="member this.IsIdle : unit -&gt; bool" Usage="applicationManager.IsIdle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="69169-197">傳回值，指出處理序所裝載 (Host) 的全部應用程式是否都在閒置 (Idle) 而未在處理要求。</span><span class="sxs-lookup"><span data-stu-id="69169-197">Returns a value indicating whether all applications hosted by the process are idle and not processing requests.</span></span></summary>
        <returns><span data-ttu-id="69169-198">如果處理序中的全部應用程式都在閒置則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="69169-198"><see langword="true" /> if all applications in the process are idle; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69169-199"><xref:System.Web.Hosting.ApplicationManager.IsIdle%2A>方法會傳回`true`閒置處理序所裝載的所有應用程式時。</span><span class="sxs-lookup"><span data-stu-id="69169-199">The <xref:System.Web.Hosting.ApplicationManager.IsIdle%2A> method returns `true` if all applications hosted by the process are idle.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public void Open ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Open() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.Open" />
      <MemberSignature Language="VB.NET" Value="Public Sub Open ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Open();" />
      <MemberSignature Language="F#" Value="member this.Open : unit -&gt; unit" Usage="applicationManager.Open " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="69169-200">將應用程式管理員執行個體的使用者參考次數 (Reference Count) 進行安全執行緒遞增。</span><span class="sxs-lookup"><span data-stu-id="69169-200">Makes a thread-safe increment to the user reference count of the application manager instance.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShutdownAll">
      <MemberSignature Language="C#" Value="public void ShutdownAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ShutdownAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.ShutdownAll" />
      <MemberSignature Language="VB.NET" Value="Public Sub ShutdownAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ShutdownAll();" />
      <MemberSignature Language="F#" Value="member this.ShutdownAll : unit -&gt; unit" Usage="applicationManager.ShutdownAll " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="69169-201">卸載全部應用程式資源。</span><span class="sxs-lookup"><span data-stu-id="69169-201">Unloads all application resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69169-202">呼叫<xref:System.Web.Hosting.ApplicationManager.ShutdownAll%2A>方法就相當於呼叫<xref:System.Web.Hosting.HostingEnvironment.InitiateShutdown%2A?displayProperty=nameWithType>由這個受管理的所有應用程式定義域中的方法<xref:System.Web.Hosting.ApplicationManager>執行個體; 不過，<xref:System.Web.Hosting.ApplicationManager.ShutdownAll%2A>方法可以從受管理的應用程式定義域之外呼叫。</span><span class="sxs-lookup"><span data-stu-id="69169-202">Calling the <xref:System.Web.Hosting.ApplicationManager.ShutdownAll%2A> method is equivalent to calling the <xref:System.Web.Hosting.HostingEnvironment.InitiateShutdown%2A?displayProperty=nameWithType> method in all application domains managed by this <xref:System.Web.Hosting.ApplicationManager> instance; however, the <xref:System.Web.Hosting.ApplicationManager.ShutdownAll%2A> method can be called from outside the managed application domains.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShutdownApplication">
      <MemberSignature Language="C#" Value="public void ShutdownApplication (string appId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ShutdownApplication(string appId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.ShutdownApplication(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ShutdownApplication (appId As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ShutdownApplication(System::String ^ appId);" />
      <MemberSignature Language="F#" Value="member this.ShutdownApplication : string -&gt; unit" Usage="applicationManager.ShutdownApplication appId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="appId"><span data-ttu-id="69169-203">要卸載之應用程式的唯一識別項。</span><span class="sxs-lookup"><span data-stu-id="69169-203">The unique identifier of the application to unload.</span></span></param>
        <summary><span data-ttu-id="69169-204">卸載指定的應用程式。</span><span class="sxs-lookup"><span data-stu-id="69169-204">Unloads the specified application.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69169-205">呼叫<xref:System.Web.Hosting.ApplicationManager.ShutdownApplication%2A>方法就相當於呼叫<xref:System.Web.Hosting.HostingEnvironment.InitiateShutdown%2A?displayProperty=nameWithType>方法的特定應用程式定義域; 不過，<xref:System.Web.Hosting.ApplicationManager.ShutdownApplication%2A>可以呼叫方法，從外部的受管理應用程式定義域。</span><span class="sxs-lookup"><span data-stu-id="69169-205">Calling the <xref:System.Web.Hosting.ApplicationManager.ShutdownApplication%2A> method is equivalent to calling the <xref:System.Web.Hosting.HostingEnvironment.InitiateShutdown%2A?displayProperty=nameWithType> method for a specific application domain; however, the <xref:System.Web.Hosting.ApplicationManager.ShutdownApplication%2A> method can be called from outside managed application domains.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="69169-206"><paramref name="appId" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="69169-206"><paramref name="appId" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="StopObject">
      <MemberSignature Language="C#" Value="public void StopObject (string appId, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StopObject(string appId, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.StopObject(System.String,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StopObject(System::String ^ appId, Type ^ type);" />
      <MemberSignature Language="F#" Value="member this.StopObject : string * Type -&gt; unit" Usage="applicationManager.StopObject (appId, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appId" Type="System.String" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="appId"><span data-ttu-id="69169-207">應用程式的唯一識別項，該應用程式擁有物件。</span><span class="sxs-lookup"><span data-stu-id="69169-207">The unique identifier for the application that owns the object.</span></span></param>
        <param name="type"><span data-ttu-id="69169-208">要卸載的物件型別。</span><span class="sxs-lookup"><span data-stu-id="69169-208">The type of the object to unload.</span></span></param>
        <summary><span data-ttu-id="69169-209">從應用程式的註冊物件清單中移除指定的物件。</span><span class="sxs-lookup"><span data-stu-id="69169-209">Removes the specified object from the list of registered objects in an application.</span></span> <span data-ttu-id="69169-210">如果要移除的物件是應用程式之已註冊物件清單中的最後一個剩餘物件，則會卸載該應用程式。</span><span class="sxs-lookup"><span data-stu-id="69169-210">If the object to be removed is the last remaining object in the list of registered objects in an application, the application is unloaded.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="69169-211"><paramref name="appId" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="69169-211"><paramref name="appId" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="69169-212">-或-</span><span class="sxs-lookup"><span data-stu-id="69169-212">-or-</span></span> 
 <span data-ttu-id="69169-213"><paramref name="type" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="69169-213"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>