<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="BigInteger.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac57d0dcda34bb31112c320daec112f3dd4b818dc43.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7d0dcda34bb31112c320daec112f3dd4b818dc43</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Numerics.BigInteger">
          <source>Represents an arbitrarily large signed integer.</source>
          <target state="translated">表示任意大、帶正負號的整數。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> type is an immutable type that represents an arbitrarily large integer whose value in theory has no upper or lower bounds.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>類型是不可變的類型表示任意大的整數，其值在理論上沒有上限或下限的界限。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>The members of the <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> type closely parallel those of other integral types (the <ph id="ph2">&lt;xref:System.Byte&gt;</ph>, <ph id="ph3">&lt;xref:System.Int16&gt;</ph>, <ph id="ph4">&lt;xref:System.Int32&gt;</ph>, <ph id="ph5">&lt;xref:System.Int64&gt;</ph>, <ph id="ph6">&lt;xref:System.SByte&gt;</ph>, <ph id="ph7">&lt;xref:System.UInt16&gt;</ph>, <ph id="ph8">&lt;xref:System.UInt32&gt;</ph>, and <ph id="ph9">&lt;xref:System.UInt64&gt;</ph> types).</source>
          <target state="translated">成員<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>類型極為相似的其他整數類資料類型 ( <ph id="ph2">&lt;xref:System.Byte&gt;</ph>， <ph id="ph3">&lt;xref:System.Int16&gt;</ph>， <ph id="ph4">&lt;xref:System.Int32&gt;</ph>， <ph id="ph5">&lt;xref:System.Int64&gt;</ph>， <ph id="ph6">&lt;xref:System.SByte&gt;</ph>， <ph id="ph7">&lt;xref:System.UInt16&gt;</ph>， <ph id="ph8">&lt;xref:System.UInt32&gt;</ph>，和<ph id="ph9">&lt;xref:System.UInt64&gt;</ph>類型)。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>This type differs from the other integral types in the <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>, which have a range indicated by their <ph id="ph2">`MinValue`</ph> and <ph id="ph3">`MaxValue`</ph> properties.</source>
          <target state="translated">此類型不同於其他整數類資料類型中<ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>，以指定的範圍具有其<ph id="ph2">`MinValue`</ph>和<ph id="ph3">`MaxValue`</ph>屬性。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>Because the <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> type is immutable (see <bpt id="p1">[</bpt>Mutability and the BigInteger Structure<ept id="p1">](#mutability)</ept>) and because it has no upper or lower bounds, an <ph id="ph2">&lt;xref:System.OutOfMemoryException&gt;</ph> can be thrown for any operation that causes a <ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph> value to grow too large.</source>
          <target state="translated">因為<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>類型是不可變的 (請參閱<bpt id="p1">[</bpt>可變動性和 BigInteger 結構<ept id="p1">](#mutability)</ept>)，因為它有沒有上限或下限範圍中，<ph id="ph2">&lt;xref:System.OutOfMemoryException&gt;</ph>可能會導致任何作業擲回<ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph>太成長值大型。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>Instantiating a BigInteger Object</source>
          <target state="translated">BigInteger 物件具現化</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>You can instantiate a <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> object in several ways:</source>
          <target state="translated">您可以具現化<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>物件數種方式：</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>You can use the <ph id="ph1">`new`</ph> keyword and provide any integral or floating-point value as a parameter to the <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> constructor.</source>
          <target state="translated">您可以使用<ph id="ph1">`new`</ph>關鍵字，並為參數，以提供的任何整數或浮點值<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>建構函式。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>(Floating-point values are truncated before they are assigned to the <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>.) The following example illustrates how to use the <ph id="ph2">`new`</ph> keyword to instantiate <ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated">(浮點數的值已予截斷之前就會指派給<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>。)下列範例說明如何使用<ph id="ph2">`new`</ph>關鍵字來具現化<ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>You can declare a <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> variable and assign it a value just as you would any numeric type, as long as that value is an integral type.</source>
          <target state="translated">您可以宣告<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>變數並指派值，就像您一樣任何數值類型，只要這個值是整數類型。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>The following example uses assignment to create a <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> value from an <ph id="ph2">&lt;xref:System.Int64&gt;</ph>.</source>
          <target state="translated">下列範例會使用指派建立<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>值<ph id="ph2">&lt;xref:System.Int64&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>You can assign a decimal or floating-point value to a <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> object if you cast the value or convert it first.</source>
          <target state="translated">您可以指定十進位或浮點值<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>物件，如果您將值轉型，或先將它轉換。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>The following example explicitly casts (in C#) or converts (in Visual Basic) a <ph id="ph1">&lt;xref:System.Double&gt;</ph> and a <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> value to a <ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph>.</source>
          <target state="translated">下列範例明確轉換 （C# 中），或將轉換 （在 Visual Basic)<ph id="ph1">&lt;xref:System.Double&gt;</ph>和<ph id="ph2">&lt;xref:System.Decimal&gt;</ph>值設定為<ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>These methods enable you to instantiate a <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> object whose value is in the range of one of the existing numeric types only.</source>
          <target state="translated">這些方法可讓您具現化<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>物件，其值為範圍內的現有數值的其中一個型別。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>You can instantiate a <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> object whose value can exceed the range of the existing numeric types in one of three ways:</source>
          <target state="translated">您可以具現化<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>物件，其值可能會超過其中一種方式中的現有數值類型的範圍：</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>You can use the <ph id="ph1">`new`</ph> keyword and provide a byte array of any size to the <ph id="ph2">&lt;xref:System.Numerics.BigInteger.%23ctor%2A?displayProperty=nameWithType&gt;</ph> constructor.</source>
          <target state="translated">您可以使用<ph id="ph1">`new`</ph>關鍵字並提供任何大小的位元組陣列<ph id="ph2">&lt;xref:System.Numerics.BigInteger.%23ctor%2A?displayProperty=nameWithType&gt;</ph>建構函式。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>For example:</source>
          <target state="translated">例如: </target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>You can call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Parse%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Numerics.BigInteger.TryParse%2A&gt;</ph> methods to convert the string representation of a number to a <ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph>.</source>
          <target state="translated">您可以呼叫<ph id="ph1">&lt;xref:System.Numerics.BigInteger.Parse%2A&gt;</ph>或<ph id="ph2">&lt;xref:System.Numerics.BigInteger.TryParse%2A&gt;</ph>方法，將轉換的數字的字串表示<ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>For example:</source>
          <target state="translated">例如: </target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>You can call a <ph id="ph1">`static`</ph> (<ph id="ph2">`Shared`</ph> in Visual Basic) <ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph> method that performs some operation on a numeric expression and returns a calculated <ph id="ph4">&lt;xref:System.Numerics.BigInteger&gt;</ph> result.</source>
          <target state="translated">您可以呼叫<ph id="ph1">`static`</ph>(<ph id="ph2">`Shared`</ph>在 Visual Basic 中)<ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph>執行某項作業對數值運算式，並傳回導出方法<ph id="ph4">&lt;xref:System.Numerics.BigInteger&gt;</ph>結果。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>The following example does this by cubing <ph id="ph1">&lt;xref:System.UInt64.MaxValue?displayProperty=nameWithType&gt;</ph> and assigning the result to a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>.</source>
          <target state="translated">下列範例會依 cube<ph id="ph1">&lt;xref:System.UInt64.MaxValue?displayProperty=nameWithType&gt;</ph>並指派結果<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>The uninitialized value of a <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> is <ph id="ph2">&lt;xref:System.Numerics.BigInteger.Zero%2A&gt;</ph>.</source>
          <target state="translated">未初始化的值<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>是<ph id="ph2">&lt;xref:System.Numerics.BigInteger.Zero%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>Performing Operations on BigInteger Values</source>
          <target state="translated">BigInteger 值上執行的作業</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>You can use a <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> instance as you would use any other integral type.</source>
          <target state="translated">您可以使用<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>如同您使用任何其他整數類資料類型執行個體。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source><ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> overloads the standard numeric operators to enable you to perform basic mathematical operations such as addition, subtraction, division, multiplication, subtraction, negation, and unary negation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> 多載可讓您執行基本數學運算，例如加法、 減法、 除法、 乘法、 減法、 否定和一元負運算的標準數值運算子。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>You can also use the standard numeric operators to compare two <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> values with each other.</source>
          <target state="translated">您也可以使用標準數值運算子比較兩個<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>彼此的值。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>Like the other integral types, <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> also supports the bitwise <ph id="ph2">`And`</ph>, <ph id="ph3">`Or`</ph>, <ph id="ph4">`XOr`</ph>, left shift, and right shift operators.</source>
          <target state="translated">類似其他整數類資料類型，<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>也支援 位元<ph id="ph2">`And`</ph>， <ph id="ph3">`Or`</ph>， <ph id="ph4">`XOr`</ph>，左 shift 和向右移位運算子。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>For languages that do not support custom operators, the <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> structure also provides equivalent methods for performing mathematical operations.</source>
          <target state="translated">不支援自訂運算子，語言<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>結構也會提供對等的方法，用於執行數學運算。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>These include <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Add%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Numerics.BigInteger.Divide%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Numerics.BigInteger.Multiply%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Numerics.BigInteger.Negate%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Numerics.BigInteger.Subtract%2A&gt;</ph>, and several others.</source>
          <target state="translated">這些包括<ph id="ph1">&lt;xref:System.Numerics.BigInteger.Add%2A&gt;</ph>， <ph id="ph2">&lt;xref:System.Numerics.BigInteger.Divide%2A&gt;</ph>， <ph id="ph3">&lt;xref:System.Numerics.BigInteger.Multiply%2A&gt;</ph>， <ph id="ph4">&lt;xref:System.Numerics.BigInteger.Negate%2A&gt;</ph>， <ph id="ph5">&lt;xref:System.Numerics.BigInteger.Subtract%2A&gt;</ph>，以及其他幾個。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>Many members of the <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> structure correspond directly to members of the other integral types.</source>
          <target state="translated">許多成員的<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>結構直接對應至與其他整數類資料類型的成員。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>In addition, <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> adds members such as the following:</source>
          <target state="translated">此外，<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>加入成員，如下所示：</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source><ph id="ph1">&lt;xref:System.Numerics.BigInteger.Sign%2A&gt;</ph>, which returns a value that indicates the sign of a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.Sign%2A&gt;</ph>它會傳回值，指出的正負號<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source><ph id="ph1">&lt;xref:System.Numerics.BigInteger.Abs%2A&gt;</ph>, which returns the absolute value of a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.Abs%2A&gt;</ph>它會傳回數值的絕對值<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source><ph id="ph1">&lt;xref:System.Numerics.BigInteger.DivRem%2A&gt;</ph>, which returns both the quotient and remainder of a division operation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.DivRem%2A&gt;</ph>它會傳回商數及除法運算的餘數。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source><ph id="ph1">&lt;xref:System.Numerics.BigInteger.GreatestCommonDivisor%2A&gt;</ph>, which returns the greatest common divisor of two <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.GreatestCommonDivisor%2A&gt;</ph>它會傳回兩個最大公因數<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>Many of these additional members correspond to the members of the <ph id="ph1">&lt;xref:System.Math&gt;</ph> class, which provides the functionality to work with the primitive numeric types.</source>
          <target state="translated">許多這些其他成員的成員對應<ph id="ph1">&lt;xref:System.Math&gt;</ph>類別，可提供的功能，才能使用基本數字型別。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>Mutability and the BigInteger Structure</source>
          <target state="translated">可變動性和 BigInteger 結構</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>The following example instantiates a <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> object and then increments its value by one.</source>
          <target state="translated">下列範例會具現化<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>物件，然後將其值會加一。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>Although this example appears to modify the value of the existing object, this is not the case.</source>
          <target state="translated">雖然此範例來修改現有值，但這不是物件的大小寫。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source><ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> objects are immutable, which means that internally, the common language runtime actually creates a new <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> object and assigns it a value one greater than its previous value.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> 物件不可變的這表示在內部，common language runtime 會建立新<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>物件，並將其指派的值大於先前的值。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>This new object is then returned to the caller.</source>
          <target state="translated">然後，此新物件會傳回給呼叫者。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>The other numeric types in the .NET Framework are also immutable.</source>
          <target state="translated">.NET Framework 中的其他數值類型也是不可變的。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>However, because the <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> type has no upper or lower bounds, its values can grow extremely large and have a measurable impact on performance.</source>
          <target state="translated">不過，因為<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>類型沒有上限或下限的界限，其值可以變得非常大，並對效能造成明顯的影響。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>Although this process is transparent to the caller, it does incur a performance penalty.</source>
          <target state="translated">雖然這個程序是對呼叫端，它會產生會對效能帶來負面影響。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>In some cases, especially when repeated operations are performed in a loop on very large <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> values, that performance penalty can be significant.</source>
          <target state="translated">在某些情況下，特別是當重複的作業將會在迴圈中上非常大<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>值，該效能產生負面影響可以顯著。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>For example, in the following example, an operation is performed repetitively up to a million times, and a <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> value is incremented by one every time the operation succeeds.</source>
          <target state="translated">例如，在下列範例中，作業回應至無數次和<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>每次作業成功，值會遞增一。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>In such a case, you can improve performance by performing all intermediate assignments to an <ph id="ph1">&lt;xref:System.Int32&gt;</ph> variable.</source>
          <target state="translated">在這種情況下，您可以執行所有中間的指派，以改善效能<ph id="ph1">&lt;xref:System.Int32&gt;</ph>變數。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>The final value of the variable can then be assigned to the <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> object when the loop exits.</source>
          <target state="translated">最後一個變數的值再指派給<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>迴圈結束時的物件。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>The following example provides an illustration.</source>
          <target state="translated">下列範例提供一個實例。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>Working with Byte Arrays and Hexadecimal Strings</source>
          <target state="translated">使用位元組陣列與十六進位字串</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>If you convert <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> values to byte arrays, or if you convert byte arrays to <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> values, you must consider the order of bytes.</source>
          <target state="translated">如果您要轉換<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>值的位元組陣列，或如果您要轉換的位元組陣列至<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值，您必須考量的位元組順序。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> structure expects the individual bytes in a byte array to appear in little-endian order (that is, the lower-order bytes of the value precede the higher-order bytes).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>結構需要個別的位元組在位元組陣列，才會出現在 little-endian 順序 （也就是值的低序位位元組前面的高序位位元組）。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>You can round-trip a <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> value by calling the <ph id="ph2">&lt;xref:System.Numerics.BigInteger.ToByteArray%2A&gt;</ph> method and then passing the resulting byte array to the <ph id="ph3">&lt;xref:System.Numerics.BigInteger.%23ctor%28System.Byte%5B%5D%29&gt;</ph> constructor, as the following example shows.</source>
          <target state="translated">您可以來回<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>藉由呼叫值<ph id="ph2">&lt;xref:System.Numerics.BigInteger.ToByteArray%2A&gt;</ph>方法，然後再將傳遞產生的位元組陣列至<ph id="ph3">&lt;xref:System.Numerics.BigInteger.%23ctor%28System.Byte%5B%5D%29&gt;</ph>建構函式，如下列範例所示。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>To instantiate a <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> value from a byte array that represents a value of some other integral type, you can pass the integral value to the <ph id="ph2">&lt;xref:System.BitConverter.GetBytes%2A?displayProperty=nameWithType&gt;</ph> method, and then pass the resulting byte array to the <ph id="ph3">&lt;xref:System.Numerics.BigInteger.%23ctor%28System.Byte%5B%5D%29&gt;</ph> constructor.</source>
          <target state="translated">具現化<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>值，您可以從位元組陣列，代表某些其他整數類資料類型的值，傳遞將整數值<ph id="ph2">&lt;xref:System.BitConverter.GetBytes%2A?displayProperty=nameWithType&gt;</ph>方法，然後再傳遞產生的位元組陣列至<ph id="ph3">&lt;xref:System.Numerics.BigInteger.%23ctor%28System.Byte%5B%5D%29&gt;</ph>建構函式。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>The following example instantiates a <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> value from a byte array that represents an <ph id="ph2">&lt;xref:System.Int16&gt;</ph> value.</source>
          <target state="translated">下列範例會具現化<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>值從位元組陣列，代表<ph id="ph2">&lt;xref:System.Int16&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> structure assumes that negative values are stored by using two's complement representation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>結構假設，負值會儲存使用二的補數表示。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>Because the <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> structure represents a numeric value with no fixed length, the <ph id="ph2">&lt;xref:System.Numerics.BigInteger.%23ctor%28System.Byte%5B%5D%29&gt;</ph> constructor always interprets the most significant bit of the last byte in the array as a sign bit.</source>
          <target state="translated">因為<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>結構代表數值，但是沒有固定長度，<ph id="ph2">&lt;xref:System.Numerics.BigInteger.%23ctor%28System.Byte%5B%5D%29&gt;</ph>建構函式一律會解譯為正負號位元陣列中的最後一個位元組的最大顯著性位元。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>To prevent the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.%23ctor%28System.Byte%5B%5D%29&gt;</ph> constructor from confusing the two's complement representation of a negative value with the sign and magnitude representation of a positive value, positive values in which the most significant bit of the last byte in the byte array would ordinarily be set should include an additional byte whose value is 0.</source>
          <target state="translated">若要避免<ph id="ph1">&lt;xref:System.Numerics.BigInteger.%23ctor%28System.Byte%5B%5D%29&gt;</ph>中使人混淆的二的補數負數值表示正值，正號和大小表示法建構函式中的值的最高有效位元的位元組陣列的最後一個位元組一般被視為集合應該包含額外的位元組，其值為 0。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>For example, 0xC0 0xBD 0xF0 0xFF is the little-endian hexadecimal representation of either -1,000,000 or 4,293,967,296.</source>
          <target state="translated">例如，0xC0 0xBD 0xF0 0xFF 是-1,000,000 或 4,293,967,296 由小到大十六進位表示法。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>Because the most significant bit of the last byte in this array is on, the value of the byte array would be interpreted by the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.%23ctor%28System.Byte%5B%5D%29&gt;</ph> constructor as -1,000,000.</source>
          <target state="translated">由於此陣列中的最後一個位元組的最大顯著性位元為開啟，會由解譯的位元組陣列值<ph id="ph1">&lt;xref:System.Numerics.BigInteger.%23ctor%28System.Byte%5B%5D%29&gt;</ph>-1,000,000 建構函式。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>To instantiate a <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> whose value is positive, a byte array whose elements are 0xC0 0xBD 0xF0 0xFF 0x00 must be passed to the constructor.</source>
          <target state="translated">具現化<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>其值是正數，位元組陣列，其元素為 0xC0 0xBD 0xF0 0xFF 0x00 必須傳遞給建構函式。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>The following example illustrates this.</source>
          <target state="translated">下列範例將說明這點。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>Byte arrays created by the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.ToByteArray%2A&gt;</ph> method from positive values include this extra zero-value byte.</source>
          <target state="translated">所建立的位元組陣列<ph id="ph1">&lt;xref:System.Numerics.BigInteger.ToByteArray%2A&gt;</ph>正值方法包含此額外的零值的位元組。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>Therefore, the <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> structure can successfully round-trip values by assigning them to, and then restoring them from, byte arrays, as the following example shows.</source>
          <target state="translated">因此，<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>結構可以成功地反覆存取值的指派，，然後將它們還原從位元組陣列，如下列範例所示。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>However, you may need to add this additional zero-value byte to byte arrays that are created dynamically by the developer or that are returned by methods that convert unsigned integers to byte arrays (such as <ph id="ph1">&lt;xref:System.BitConverter.GetBytes%28System.UInt16%29?displayProperty=nameWithType&gt;</ph>, <ph id="ph2">&lt;xref:System.BitConverter.GetBytes%28System.UInt32%29?displayProperty=nameWithType&gt;</ph>, and <ph id="ph3">&lt;xref:System.BitConverter.GetBytes%28System.UInt64%29?displayProperty=nameWithType&gt;</ph>).</source>
          <target state="translated">不過，您可能需要新增此額外零值的位元組至位元組陣列，開發人員會以動態方式建立，或將不帶正負號的整數轉換成位元組陣列的方法所傳回的 (例如<ph id="ph1">&lt;xref:System.BitConverter.GetBytes%28System.UInt16%29?displayProperty=nameWithType&gt;</ph>， <ph id="ph2">&lt;xref:System.BitConverter.GetBytes%28System.UInt32%29?displayProperty=nameWithType&gt;</ph>，和<ph id="ph3">&lt;xref:System.BitConverter.GetBytes%28System.UInt64%29?displayProperty=nameWithType&gt;</ph>)。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>When parsing a hexadecimal string, the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType&gt;</ph> methods assume that if the most significant bit of the first byte in the string is set, or if the first hexadecimal digit of the string represents the lower four bits of a byte value, the value is represented by using two's complement representation.</source>
          <target state="translated">當剖析十六進位的字串，<ph id="ph1">&lt;xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType&gt;</ph>和<ph id="ph2">&lt;xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType&gt;</ph>方法假設，如果設定字串中的第一個位元組的最大顯著性位元，或是如果字串的第一個十六進位數字表示較低的四位元的位元組值，這個值是利用二的補數表示法來表示。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>For example, both "FF01" and "F01" represent the decimal value -255.</source>
          <target state="translated">例如，"FF01"和"F01"代表-255 的十進位值。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>To differentiate positive from negative values, positive values should include a leading zero.</source>
          <target state="translated">若要區別正從負數值，正值應包含前置的零。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>The relevant overloads of the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.ToString%2A&gt;</ph> method, when they are passed the "X" format string, add a leading zero to the returned hexadecimal string for positive values.</source>
          <target state="translated">相關的多載<ph id="ph1">&lt;xref:System.Numerics.BigInteger.ToString%2A&gt;</ph>方法，傳遞"X"格式字串時加入前置零的正數值傳回十六進位的字串。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>This makes it possible to round-trip <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> values by using the <ph id="ph2">&lt;xref:System.Numerics.BigInteger.ToString%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Numerics.BigInteger.Parse%2A&gt;</ph> methods, as the following example shows.</source>
          <target state="translated">這可讓，往返<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>藉由使用<ph id="ph2">&lt;xref:System.Numerics.BigInteger.ToString%2A&gt;</ph>和<ph id="ph3">&lt;xref:System.Numerics.BigInteger.Parse%2A&gt;</ph>方法，如下列範例所示。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>However, the hexadecimal strings created by calling the <ph id="ph1">`ToString`</ph> methods of the other integral types or the overloads of the <ph id="ph2">&lt;xref:System.Convert.ToString%2A&gt;</ph> method that include a <ph id="ph3">`toBase`</ph> parameter do not indicate the sign of the value or the source data type from which the hexadecimal string was derived.</source>
          <target state="translated">不過，十六進位字串建立藉由呼叫<ph id="ph1">`ToString`</ph>其他整數類資料類型或的多載的方法<ph id="ph2">&lt;xref:System.Convert.ToString%2A&gt;</ph>方法包含<ph id="ph3">`toBase`</ph>參數不表示的值或從其來源資料類型的正負號衍生的十六進位字串。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>Successfully instantiating a <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> value from such a string requires some additional logic.</source>
          <target state="translated">成功地具現化<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>從這類字串值需要一些額外的邏輯。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.BigInteger">
          <source>The following example provides one possible implementation.</source>
          <target state="translated">下列範例提供一個可能的實作。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="T:System.Numerics.BigInteger">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> structure.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 結構的新執行個體。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.#ctor(System.Byte[])">
          <source>An array of byte values in little-endian order.</source>
          <target state="translated">位元組由小到大順序的位元組值陣列。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.#ctor(System.Byte[])">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> structure using the values in a byte array.</source>
          <target state="translated">使用位元組陣列中的值，初始化 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 結構的新執行個體。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Byte[])">
          <source>The individual bytes in the <ph id="ph1">`value`</ph> array should be in little-endian order, from lowest-order byte to highest-order byte.</source>
          <target state="translated">中的個別位元組<ph id="ph1">`value`</ph>陣列應該採用位元組由小到大的順序，從最低順序最高序位位元組的位元組。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Byte[])">
          <source>For example, the numeric value 1,000,000,000,000 is represented as shown in the following table:</source>
          <target state="translated">例如，數值 1,000,000,000,000 代表下表所示：</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Byte[])">
          <source>Hexadecimal string</source>
          <target state="translated">十六進位字串</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Byte[])">
          <source>E8D4A51000</source>
          <target state="translated">E8D4A51000</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Byte[])">
          <source>Byte array (lowest index first)</source>
          <target state="translated">位元組陣列 （第一次最低索引）</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Byte[])">
          <source>00 10 A5 D4 E8 00</source>
          <target state="translated">00 10 A5 D4 E8 00</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Byte[])">
          <source>Most methods that convert numeric values to byte arrays, such as <ph id="ph1">&lt;xref:System.Numerics.BigInteger.ToByteArray%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.BitConverter.GetBytes%2A?displayProperty=nameWithType&gt;</ph>, return byte arrays in little-endian order.</source>
          <target state="translated">大部分的方法，例如將數值轉換成位元組陣列<ph id="ph1">&lt;xref:System.Numerics.BigInteger.ToByteArray%2A?displayProperty=nameWithType&gt;</ph>和<ph id="ph2">&lt;xref:System.BitConverter.GetBytes%2A?displayProperty=nameWithType&gt;</ph>，以位元組由小到大的順序傳回位元組陣列。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Byte[])">
          <source>The constructor expects positive values in the byte array to use sign-and-magnitude representation, and negative values to use two's complement representation.</source>
          <target state="translated">建構函式使用正負號和大小表示和負數值，使用二的補數表示位元組陣列中預期的正數值。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Byte[])">
          <source>In other words, if the highest-order bit of the highest-order byte in <ph id="ph1">`value`</ph> is set, the resulting <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value is negative.</source>
          <target state="translated">換句話說，如果最高序位位元中的最高序位位元組<ph id="ph1">`value`</ph>設定時，所產生的<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值為負數。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Byte[])">
          <source>Depending on the source of the byte array, this may cause a positive value to be misinterpreted as a negative value.</source>
          <target state="translated">根據位元組陣列中的來源，這可能會造成正值以被錯誤解譯為負數值。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Byte[])">
          <source>Byte arrays are typically generated in the following ways:</source>
          <target state="translated">位元組陣列通常會以下列方式產生：</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Byte[])">
          <source>By calling the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.ToByteArray%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">藉由呼叫<ph id="ph1">&lt;xref:System.Numerics.BigInteger.ToByteArray%2A?displayProperty=nameWithType&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Byte[])">
          <source>Because this method returns a byte array with the highest-order bit of the highest-order byte in the array set to zero for positive values, there is no chance of misinterpreting a positive value as negative.</source>
          <target state="translated">這個方法會傳回最高序位位元組的最高序位位元的位元組陣列中的陣列設定為零的正數值，因為沒有機會讓的錯誤解譯為負數的正數值。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Byte[])">
          <source>Unmodified byte arrays created by the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.ToByteArray%2A&gt;</ph> method always successfully round-trip when they are passed to the <ph id="ph2">&lt;xref:System.Numerics.BigInteger.%23ctor%28System.Byte%5B%5D%29&gt;</ph> constructor.</source>
          <target state="translated">未修改位元組陣列由<ph id="ph1">&lt;xref:System.Numerics.BigInteger.ToByteArray%2A&gt;</ph>方法一律會成功反覆存取時傳遞至<ph id="ph2">&lt;xref:System.Numerics.BigInteger.%23ctor%28System.Byte%5B%5D%29&gt;</ph>建構函式。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Byte[])">
          <source>By calling the <ph id="ph1">&lt;xref:System.BitConverter.GetBytes%2A?displayProperty=nameWithType&gt;</ph> method and passing it a signed integer as a parameter.</source>
          <target state="translated">藉由呼叫<ph id="ph1">&lt;xref:System.BitConverter.GetBytes%2A?displayProperty=nameWithType&gt;</ph>方法，並將其做為參數傳遞的帶正負號的整數。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Byte[])">
          <source>Because signed integers handle both sign-and-magnitude representation and two's complement representation, there is no chance of misinterpreting a positive value as negative.</source>
          <target state="translated">帶正負號的整數處理標誌大小表示和二的補數表示法，因為沒有機會讓的錯誤解譯為負數的正數值。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Byte[])">
          <source>By calling the <ph id="ph1">&lt;xref:System.BitConverter.GetBytes%2A?displayProperty=nameWithType&gt;</ph> method and passing it an unsigned integer as a parameter.</source>
          <target state="translated">藉由呼叫<ph id="ph1">&lt;xref:System.BitConverter.GetBytes%2A?displayProperty=nameWithType&gt;</ph>方法，並將其做為參數傳遞的不帶正負號的整數。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Byte[])">
          <source>Because unsigned integers are represented by their magnitude only, positive values can be misinterpreted as negative values.</source>
          <target state="translated">不帶正負號的整數表示依據其重要性僅，因為正數值可以被錯誤解譯為負數值。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Byte[])">
          <source>To prevent this misinterpretation, you can add a zero-byte value to the end of the array.</source>
          <target state="translated">若要避免這個錯誤解譯，您可以將零位元組值加入陣列的結尾。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Byte[])">
          <source>The example in the next section provides an illustration.</source>
          <target state="translated">下一節中的範例提供一個實例。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Byte[])">
          <source>By creating a byte array either dynamically or statically without necessarily calling any of the previous methods, or by modifying an existing byte array.</source>
          <target state="translated">藉由建立的位元組陣列以動態方式或以靜態方式沒有一定呼叫任何先前的方法，或是藉由修改現有的位元組陣列。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Byte[])">
          <source>To prevent positive values from being misinterpreted as negative values, you can add a zero-byte value to the end of the array.</source>
          <target state="translated">若要防止正值被錯譯為負數值，您可以將零位元組值加入陣列的結尾。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Byte[])">
          <source>If <ph id="ph1">`value`</ph> is an empty <ph id="ph2">&lt;xref:System.Byte&gt;</ph> array, the new <ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph> object is initialized to a value of <ph id="ph4">&lt;xref:System.Numerics.BigInteger.Zero%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">如果<ph id="ph1">`value`</ph>是空白<ph id="ph2">&lt;xref:System.Byte&gt;</ph>陣列，則新<ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph>物件會初始化為值<ph id="ph4">&lt;xref:System.Numerics.BigInteger.Zero%2A?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Byte[])">
          <source>If <ph id="ph1">`value`</ph> is <ph id="ph2">`null`</ph>, the constructor throws an <ph id="ph3">&lt;xref:System.ArgumentNullException&gt;</ph>.</source>
          <target state="translated">如果<ph id="ph1">`value`</ph>是<ph id="ph2">`null`</ph>，建構函式會擲回<ph id="ph3">&lt;xref:System.ArgumentNullException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Byte[])">
          <source>The following example instantiates a <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> object from a 5-element byte array whose value is {5, 4, 3, 2, 1}.</source>
          <target state="translated">下列範例會具現化<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>從 5 個元素的位元組陣列，其值為 {5，4，3，2，1} 的物件。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Byte[])">
          <source>It then displays the <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> value, represented as both decimal and hexadecimal numbers, to the console.</source>
          <target state="translated">接著會顯示<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>值，表示為十進位和十六進位數字，到主控台。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Byte[])">
          <source>A comparison of the input array with the text output makes it clear why this overload of the <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> class constructor creates a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> object whose value is 4328719365 (or 0x102030405).</source>
          <target state="translated">輸入的文字輸出陣列比較可以清楚原因的這個多載<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>類別建構函式建立<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>物件，其值為 4328719365 （或 0x102030405）。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Byte[])">
          <source>The first element of the byte array, whose value is 5, defines the value of the lowest-order byte of the <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> object, which is 0x05.</source>
          <target state="translated">位元組陣列，其值為 5，第一個項目定義值的最低訂單位元組的<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>物件，它是 0x05。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Byte[])">
          <source>The second element of the byte array, whose value is 4, defines the value of the second byte of the <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> object, which is 0x04, and so on.</source>
          <target state="translated">位元組陣列，其值為 4，第二個元素定義的第二個位元組的值<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>物件，它是 0x04，依此類推。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Byte[])">
          <source>The following example instantiates a positive and a negative <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> value, passes them to the <ph id="ph2">&lt;xref:System.Numerics.BigInteger.ToByteArray%2A&gt;</ph> method, and then restores the original <ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph> values from the resulting byte array.</source>
          <target state="translated">下列範例會具現化正數或負數<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>值，請將它們傳遞<ph id="ph2">&lt;xref:System.Numerics.BigInteger.ToByteArray%2A&gt;</ph>方法，然後還原原始<ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph>產生的位元組陣列中的值。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Byte[])">
          <source>Note that the two values are represented by identical byte arrays.</source>
          <target state="translated">請注意兩個值都由相同的位元組陣列。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Byte[])">
          <source>The only difference between them is in the most significant bit of the last element in the byte array.</source>
          <target state="translated">它們之間的唯一差異是在最高有效位元的位元組陣列中的最後一個項目。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Byte[])">
          <source>This bit is set (the value of the byte is 0xFF) if the array is created from a negative <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> value.</source>
          <target state="translated">此位元是設定 （位元組的值是 0xFF），如果陣列從負建立<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Byte[])">
          <source>The bit is not set (the value of the byte is zero), if the array is created from a positive <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> value.</source>
          <target state="translated">位元未設定 （位元組的值是零），如果陣列從正建立<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Byte[])">
          <source>The following example illustrates how to make sure that a positive value is not incorrectly instantiated as a negative value by adding a byte whose value is zero to the end of the array.</source>
          <target state="translated">下列範例說明如何確認，正數值會不正確具現化為負值加入其值為陣列結尾的零位元組。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.#ctor(System.Byte[])">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.#ctor(System.Decimal)">
          <source>A decimal number.</source>
          <target state="translated">十進位數字。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.#ctor(System.Decimal)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> structure using a <ph id="ph2">&lt;see cref="T:System.Decimal" /&gt;</ph> value.</source>
          <target state="translated">使用 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 值，初始化 <ph id="ph2">&lt;see cref="T:System.Decimal" /&gt;</ph> 結構的新執行個體。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Decimal)">
          <source>The result of calling this constructor is identical to explicitly assigning a <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> value to a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> variable.</source>
          <target state="translated">呼叫這個建構函式的結果相當明確指派<ph id="ph1">&lt;xref:System.Decimal&gt;</ph>值設定為<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>變數。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Decimal)">
          <source>Calling this constructor can cause data loss; any fractional part of <ph id="ph1">`value`</ph> is truncated when instantiating a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> object.</source>
          <target state="translated">呼叫這個建構函式可能會導致資料遺失。任何小數部分<ph id="ph1">`value`</ph>具現化時，會截斷<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Decimal)">
          <source>The following example illustrates the use of the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.%23ctor%28System.Decimal%29&gt;</ph> constructor to instantiate a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> object.</source>
          <target state="translated">下列範例說明使用<ph id="ph1">&lt;xref:System.Numerics.BigInteger.%23ctor%28System.Decimal%29&gt;</ph>建構函式來具現化<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Decimal)">
          <source>It defines an array of <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> values, and then passes each value to the <ph id="ph2">&lt;xref:System.Numerics.BigInteger.%23ctor%28System.Decimal%29&gt;</ph> constructor.</source>
          <target state="translated">它會定義陣列<ph id="ph1">&lt;xref:System.Decimal&gt;</ph>值，然後再傳遞到每個值<ph id="ph2">&lt;xref:System.Numerics.BigInteger.%23ctor%28System.Decimal%29&gt;</ph>建構函式。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Decimal)">
          <source>Note that the <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> value is truncated instead of rounded when it is assigned to the <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> object.</source>
          <target state="translated">請注意，<ph id="ph1">&lt;xref:System.Decimal&gt;</ph>會截斷的值而不是四捨五入時指派給<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.#ctor(System.Double)">
          <source>A double-precision floating-point value.</source>
          <target state="translated">雙精確度浮點值。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.#ctor(System.Double)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> structure using a double-precision floating-point value.</source>
          <target state="translated">使用雙精確度浮點值，初始化 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 結構的新執行個體。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Double)">
          <source>Any fractional part of the <ph id="ph1">`value`</ph> parameter is truncated when instantiating a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> object.</source>
          <target state="translated">任何小數部分<ph id="ph1">`value`</ph>當參數具現化時，會截斷<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Double)">
          <source>Because of the lack of precision of the <ph id="ph1">&lt;xref:System.Double&gt;</ph> data type, calling this constructor can cause data loss.</source>
          <target state="translated">因為缺乏的有效位數<ph id="ph1">&lt;xref:System.Double&gt;</ph>呼叫這個建構函式的資料類型可能會導致資料遺失。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Double)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> value that results from calling this constructor is identical to the value that results from explicitly assigning a <ph id="ph2">&lt;xref:System.Double&gt;</ph> value to a <ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>天時，呼叫這個建構函式的值等於值所產生明確指派<ph id="ph2">&lt;xref:System.Double&gt;</ph>值設定為<ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Double)">
          <source>The following example illustrates the use of the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.%23ctor%28System.Double%29&gt;</ph> constructor to instantiate a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> object.</source>
          <target state="translated">下列範例說明使用<ph id="ph1">&lt;xref:System.Numerics.BigInteger.%23ctor%28System.Double%29&gt;</ph>建構函式來具現化<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Double)">
          <source>It also illustrates the loss of precision that may occur when you use the <ph id="ph1">&lt;xref:System.Double&gt;</ph> data type.</source>
          <target state="translated">它也會說明如何使用時可能發生的精確度遺失的<ph id="ph1">&lt;xref:System.Double&gt;</ph>資料型別。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Double)">
          <source>A <ph id="ph1">&lt;xref:System.Double&gt;</ph> is assigned a large value, which is then assigned to a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> object.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Double&gt;</ph>指派較大的值，然後指派給<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Double)">
          <source>As the output shows, this assignment involves a loss of precision.</source>
          <target state="translated">如輸出所示，這項指派牽涉到遺失有效位數。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Double)">
          <source>Both values are then incremented by one.</source>
          <target state="translated">這兩個值然後會遞增一。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Double)">
          <source>The output shows that the <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> object reflects the changed value, whereas the <ph id="ph2">&lt;xref:System.Double&gt;</ph> object does not.</source>
          <target state="translated">輸出顯示<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>物件會反映變更的值，而<ph id="ph2">&lt;xref:System.Double&gt;</ph>物件並不會。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.#ctor(System.Double)">
          <source>The value of <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <ph id="ph2">&lt;see cref="F:System.Double.NaN" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> 的值是 <ph id="ph2">&lt;see cref="F:System.Double.NaN" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.#ctor(System.Double)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.#ctor(System.Double)">
          <source>The value of <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <ph id="ph2">&lt;see cref="F:System.Double.NegativeInfinity" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> 的值是 <ph id="ph2">&lt;see cref="F:System.Double.NegativeInfinity" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.#ctor(System.Double)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.#ctor(System.Double)">
          <source>The value of <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <ph id="ph2">&lt;see cref="F:System.Double.PositiveInfinity" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> 的值是 <ph id="ph2">&lt;see cref="F:System.Double.PositiveInfinity" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.#ctor(System.Int32)">
          <source>A 32-bit signed integer.</source>
          <target state="translated">32 位元帶正負號的整數。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.#ctor(System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> structure using a 32-bit signed integer value.</source>
          <target state="translated">使用 32 位元帶正負號的整數值，初始化 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 結構的新執行個體。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Int32)">
          <source>There is no loss of precision when instantiating a <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> object by using this constructor.</source>
          <target state="translated">具現化時不會遺失有效位數的任何<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>使用這個建構函式的物件。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> value that results from calling this constructor is identical to the value that results from assigning an <ph id="ph2">&lt;xref:System.Int32&gt;</ph> value to a <ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>天時，呼叫這個建構函式的值是否完全相同的值所產生的指派<ph id="ph2">&lt;xref:System.Int32&gt;</ph>值設定為<ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> structure does not include constructors with a parameter of type <ph id="ph2">&lt;xref:System.Byte&gt;</ph>, <ph id="ph3">&lt;xref:System.Int16&gt;</ph>, <ph id="ph4">&lt;xref:System.SByte&gt;</ph>, or <ph id="ph5">&lt;xref:System.UInt16&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>結構不包含型別參數的建構函式<ph id="ph2">&lt;xref:System.Byte&gt;</ph>， <ph id="ph3">&lt;xref:System.Int16&gt;</ph>， <ph id="ph4">&lt;xref:System.SByte&gt;</ph>，或<ph id="ph5">&lt;xref:System.UInt16&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Int32)">
          <source>However, the <ph id="ph1">&lt;xref:System.Int32&gt;</ph> type supports the implicit conversion of 8-bit and 16-bit signed and unsigned integers to signed 32-bit integers.</source>
          <target state="translated">不過，<ph id="ph1">&lt;xref:System.Int32&gt;</ph>類型支援的 8 位元和 16 位元帶正負號和不帶正負號的整數隱含轉換成帶正負號的 32 位元整數。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Int32)">
          <source>As a result, this constructor is called if <ph id="ph1">`value`</ph> is any one of these four integral types.</source>
          <target state="translated">如果，如此一來，呼叫這個建構函式<ph id="ph1">`value`</ph>會是這四個整數類資料類型的任何一個。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Int32)">
          <source>The following example calls the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.%23ctor%28System.Int32%29&gt;</ph> constructor to instantiate <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> values from an array of 32-bit integers.</source>
          <target state="translated">下列範例會呼叫<ph id="ph1">&lt;xref:System.Numerics.BigInteger.%23ctor%28System.Int32%29&gt;</ph>建構函式來具現化<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>32 位元整數的陣列中的值。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Int32)">
          <source>It also uses implicit conversion to assign each 32-bit integer value to a <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> variable.</source>
          <target state="translated">它也會使用隱含轉換每個 32 位元整數值指派至<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>變數。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Int32)">
          <source>It then compares the two values to establish that the resulting <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> values are the same.</source>
          <target state="translated">然後它會比較兩個值來建立產生<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>值都是一樣。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.#ctor(System.Int64)">
          <source>A 64-bit signed integer.</source>
          <target state="translated">64 位元帶正負號的整數。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.#ctor(System.Int64)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> structure using a 64-bit signed integer value.</source>
          <target state="translated">使用 64 位元帶正負號的整數值，初始化 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 結構的新執行個體。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Int64)">
          <source>There is no loss of precision when instantiating a <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> object by using this constructor.</source>
          <target state="translated">具現化時不會遺失有效位數的任何<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>使用這個建構函式的物件。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Int64)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> value that results from calling this constructor is identical to the value that results from assigning an <ph id="ph2">&lt;xref:System.Int64&gt;</ph> value to a <ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>天時，呼叫這個建構函式的值是否完全相同的值所產生的指派<ph id="ph2">&lt;xref:System.Int64&gt;</ph>值設定為<ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Int64)">
          <source>The following example calls the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.%23ctor%28System.Int64%29&gt;</ph> constructor to instantiate <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> values from an array of 64-bit integers.</source>
          <target state="translated">下列範例會呼叫<ph id="ph1">&lt;xref:System.Numerics.BigInteger.%23ctor%28System.Int64%29&gt;</ph>建構函式來具現化<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>64 位元整數的陣列中的值。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Int64)">
          <source>It also uses implicit conversion to assign each 64-bit integer value to a <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> variable.</source>
          <target state="translated">它也會使用隱含轉換每個 64 位元整數值指派至<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>變數。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Int64)">
          <source>It then compares the two values to establish that the resulting <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> values are the same.</source>
          <target state="translated">然後它會比較兩個值來建立產生<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>值都是一樣。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.#ctor(System.Single)">
          <source>A single-precision floating-point value.</source>
          <target state="translated">單精確度浮點值。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.#ctor(System.Single)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> structure using a single-precision floating-point value.</source>
          <target state="translated">使用單精確度浮點值，初始化 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 結構的新執行個體。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Single)">
          <source>Any fractional part of the <ph id="ph1">`value`</ph> parameter is truncated when instantiating a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> object.</source>
          <target state="translated">任何小數部分<ph id="ph1">`value`</ph>當參數具現化時，會截斷<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Single)">
          <source>Because of the lack of precision of the <ph id="ph1">&lt;xref:System.Single&gt;</ph> data type, calling this constructor can result in data loss.</source>
          <target state="translated">因為缺乏的有效位數<ph id="ph1">&lt;xref:System.Single&gt;</ph>呼叫這個建構函式的資料類型可能會導致資料遺失。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Single)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> value that results from calling this constructor is identical to the value that results from explicitly assigning a <ph id="ph2">&lt;xref:System.Single&gt;</ph> value to a <ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>天時，呼叫這個建構函式的值等於值所產生明確指派<ph id="ph2">&lt;xref:System.Single&gt;</ph>值設定為<ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Single)">
          <source>The following example illustrates the use of the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.%23ctor%28System.Single%29&gt;</ph> constructor to instantiate a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> object.</source>
          <target state="translated">下列範例說明使用<ph id="ph1">&lt;xref:System.Numerics.BigInteger.%23ctor%28System.Single%29&gt;</ph>建構函式來具現化<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Single)">
          <source>It also illustrates the loss of precision that may occur when you use the <ph id="ph1">&lt;xref:System.Single&gt;</ph> data type.</source>
          <target state="translated">它也會說明如何使用時可能發生的精確度遺失的<ph id="ph1">&lt;xref:System.Single&gt;</ph>資料型別。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Single)">
          <source>A <ph id="ph1">&lt;xref:System.Single&gt;</ph> is assigned a large negative value, which is then assigned to a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> object.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Single&gt;</ph>指派一個大型的負數值，它接著會指派給<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Single)">
          <source>As the output shows, this assignment involves a loss of precision.</source>
          <target state="translated">如輸出所示，這項指派牽涉到遺失有效位數。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Single)">
          <source>Both values are then incremented by one.</source>
          <target state="translated">這兩個值然後會遞增一。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.Single)">
          <source>The output shows that the <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> object reflects the changed value, whereas the <ph id="ph2">&lt;xref:System.Single&gt;</ph> object does not.</source>
          <target state="translated">輸出顯示<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>物件會反映變更的值，而<ph id="ph2">&lt;xref:System.Single&gt;</ph>物件並不會。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.#ctor(System.Single)">
          <source>The value of <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <ph id="ph2">&lt;see cref="F:System.Single.NaN" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> 的值是 <ph id="ph2">&lt;see cref="F:System.Single.NaN" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.#ctor(System.Single)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.#ctor(System.Single)">
          <source>The value of <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <ph id="ph2">&lt;see cref="F:System.Single.NegativeInfinity" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> 的值是 <ph id="ph2">&lt;see cref="F:System.Single.NegativeInfinity" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.#ctor(System.Single)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.#ctor(System.Single)">
          <source>The value of <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <ph id="ph2">&lt;see cref="F:System.Single.PositiveInfinity" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> 的值是 <ph id="ph2">&lt;see cref="F:System.Single.PositiveInfinity" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.#ctor(System.UInt32)">
          <source>An unsigned 32-bit integer value.</source>
          <target state="translated">32 位元不帶正負號的整數值。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.#ctor(System.UInt32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> structure using an unsigned 32-bit integer value.</source>
          <target state="translated">使用不帶正負號的 32 位元整數值，初始化 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 結構的新執行個體。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.UInt32)">
          <source>There is no loss of precision when instantiating a <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> using this constructor.</source>
          <target state="translated">具現化時不會遺失有效位數的任何<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>使用這個建構函式。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.UInt32)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> value that results from calling this constructor is identical to the value that results from assigning a <ph id="ph2">&lt;xref:System.UInt32&gt;</ph> value to a <ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>天時，呼叫這個建構函式的值是否完全相同的值所產生的指派<ph id="ph2">&lt;xref:System.UInt32&gt;</ph>值設定為<ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.UInt32)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.%23ctor%28System.UInt32%29&gt;</ph> constructor and an assignment statement to initialize <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> values from an array of unsigned 32-bit integers.</source>
          <target state="translated">下列範例會使用<ph id="ph1">&lt;xref:System.Numerics.BigInteger.%23ctor%28System.UInt32%29&gt;</ph>建構函式和指派陳述式來初始化<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>不帶正負號的 32 位元整數的陣列中的值。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.UInt32)">
          <source>It then compares the two values to demonstrate that the two methods of initializing a <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> value produce identical results.</source>
          <target state="translated">然後它會比較兩個值来示範兩種初始化<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>值產生相同的結果。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.#ctor(System.UInt64)">
          <source>An unsigned 64-bit integer.</source>
          <target state="translated">不帶正負號的 64 位元整數。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.#ctor(System.UInt64)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> structure with an unsigned 64-bit integer value.</source>
          <target state="translated">使用不帶正負號的 64 位元整數值，初始化 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 結構的新執行個體。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.UInt64)">
          <source>There is no loss of precision when instantiating a <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> using this constructor.</source>
          <target state="translated">具現化時不會遺失有效位數的任何<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>使用這個建構函式。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.UInt64)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> value that results from calling this constructor is identical to the value that results from assigning a <ph id="ph2">&lt;xref:System.UInt64&gt;</ph> value to a <ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>天時，呼叫這個建構函式的值是否完全相同的值所產生的指派<ph id="ph2">&lt;xref:System.UInt64&gt;</ph>值設定為<ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.#ctor(System.UInt64)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.%23ctor%28System.UInt64%29&gt;</ph> constructor to instantiate a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> object whose value is equal to <ph id="ph3">&lt;xref:System.UInt64.MaxValue&gt;</ph>.</source>
          <target state="translated">下列範例會使用<ph id="ph1">&lt;xref:System.Numerics.BigInteger.%23ctor%28System.UInt64%29&gt;</ph>建構函式來具現化<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>物件，其值為等於<ph id="ph3">&lt;xref:System.UInt64.MaxValue&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Abs(System.Numerics.BigInteger)">
          <source>A number.</source>
          <target state="translated">數字。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Abs(System.Numerics.BigInteger)">
          <source>Gets the absolute value of a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> object.</source>
          <target state="translated">取得 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 物件的絕對值。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Abs(System.Numerics.BigInteger)">
          <source>The absolute value of <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> 的絕對值。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Abs(System.Numerics.BigInteger)">
          <source>The absolute value of a number is that number without its sign, as shown in the following table.</source>
          <target state="translated">下表中所示，則數字的絕對值是沒有正負號，該數字。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Abs(System.Numerics.BigInteger)">
          <source><ph id="ph1">`value`</ph> parameter</source>
          <target state="translated"><ph id="ph1">`value`</ph> 參數</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Abs(System.Numerics.BigInteger)">
          <source>Return value</source>
          <target state="translated">傳回值</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Abs(System.Numerics.BigInteger)">
          <source><ph id="ph1">`value`</ph> &gt;= 0</source>
          <target state="translated"><ph id="ph1">`value`</ph> &gt;= 0</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Abs(System.Numerics.BigInteger)">
          <source><ph id="ph1">`value`</ph> &lt; 0</source>
          <target state="translated"><ph id="ph1">`value`</ph> &lt; 0</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Abs(System.Numerics.BigInteger)">
          <source><ph id="ph1">`value`</ph> * -1</source>
          <target state="translated"><ph id="ph1">`value`</ph> * -1</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Abs(System.Numerics.BigInteger)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Abs%2A&gt;</ph> method is equivalent to the <ph id="ph2">&lt;xref:System.Math.Abs%2A?displayProperty=nameWithType&gt;</ph> method for the primitive numeric types.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.Abs%2A&gt;</ph>方法相當於<ph id="ph2">&lt;xref:System.Math.Abs%2A?displayProperty=nameWithType&gt;</ph>基本數值類型的方法。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Abs(System.Numerics.BigInteger)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Abs%2A&gt;</ph> method to convert a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value from two's complement representation to sign-and-magnitude representation before serializing it to a file.</source>
          <target state="translated">下列範例會使用<ph id="ph1">&lt;xref:System.Numerics.BigInteger.Abs%2A&gt;</ph>方法，將轉換<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>二的補數表示序列化至檔案之前的標誌大小表示的值。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Abs(System.Numerics.BigInteger)">
          <source>Data in the file is then deserialized and assigned to a new <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> object.</source>
          <target state="translated">然後還原序列化並指派給新檔案中的資料<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Add(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The first value to add.</source>
          <target state="translated">要相加的第一個值。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Add(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The second value to add.</source>
          <target state="translated">要相加的第二個值。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Add(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Adds two <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> values and returns the result.</source>
          <target state="translated">兩個 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 值相加，並傳回結果。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Add(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The sum of <ph id="ph1">&lt;paramref name="left" /&gt;</ph> and <ph id="ph2">&lt;paramref name="right" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="left" /&gt;</ph> 和 <ph id="ph2">&lt;paramref name="right" /&gt;</ph> 的總和。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Add(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Languages that do not support operator overloading or custom operators can use the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Add%2A&gt;</ph> method to perform addition using <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated">不支援運算子多載或自訂運算子的語言可以使用<ph id="ph1">&lt;xref:System.Numerics.BigInteger.Add%2A&gt;</ph>方法，以執行使用加法<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Add(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Add%2A&gt;</ph> method is a useful substitute for the addition operator when instantiating a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> variable by assigning it a sum that results from addition, as shown in the following example.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.Add%2A&gt;</ph>方法在具現化時，加法運算子的實用替代方案<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>變數指派總和所產生的新增功能，如下列範例所示。</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Compare(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The first value to compare.</source>
          <target state="translated">要比較的第一個值。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Compare(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The second value to compare.</source>
          <target state="translated">要比較的第二個值。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Compare(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Compares two <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> values and returns an integer that indicates whether the first value is less than, equal to, or greater than the second value.</source>
          <target state="translated">比較兩個 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 值並傳回整數，這個整數表示第一個值小於、等於或大於第二個值。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Compare(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>A signed integer that indicates the relative values of <ph id="ph1">&lt;paramref name="left" /&gt;</ph> and <ph id="ph2">&lt;paramref name="right" /&gt;</ph>, as shown in the following table.</source>
          <target state="translated">帶正負號的整數，表示 <ph id="ph1">&lt;paramref name="left" /&gt;</ph> 和 <ph id="ph2">&lt;paramref name="right" /&gt;</ph> 的相對值，如下表所示。</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Compare(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Value</source>
          <target state="translated"><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> 值</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Compare(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Condition</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph>條件</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Compare(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Less than zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph>小於零</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Compare(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph><ph id="ph3">&lt;paramref name="left" /&gt;</ph> is less than <ph id="ph4">&lt;paramref name="right" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph><ph id="ph3">&lt;paramref name="left" /&gt;</ph> 小於 <ph id="ph4">&lt;paramref name="right" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Compare(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 零</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Compare(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph><ph id="ph3">&lt;paramref name="left" /&gt;</ph> equals <ph id="ph4">&lt;paramref name="right" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph><ph id="ph3">&lt;paramref name="left" /&gt;</ph> 等於 <ph id="ph4">&lt;paramref name="right" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Compare(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Greater than zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 大於零</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Compare(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph><ph id="ph3">&lt;paramref name="left" /&gt;</ph> is greater than <ph id="ph4">&lt;paramref name="right" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph><ph id="ph3">&lt;paramref name="left" /&gt;</ph> 大於 <ph id="ph4">&lt;paramref name="right" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Compare(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Although the <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> type has no fixed range, comparisons of <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> values are not characterized by the lack of precision that characterizes the comparison of floating-point numbers.</source>
          <target state="translated">雖然<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>類型有沒有固定的範圍之間的比較<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值的精確度的浮點數的比較沒有不加以區分。</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Compare(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The following example compares two <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> values that differ by one and that each have 1,896 digits.</source>
          <target state="translated">下列範例會比較兩個<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>一個與每個不同的值有 1,896 的數字。</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Compare(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Compare%2A&gt;</ph> method correctly reports that the two values are not equal.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.Compare%2A&gt;</ph>方法會正確報告在兩個值是否不相等。</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="T:System.Numerics.BigInteger">
          <source>Compares the value of this instance with another value and returns an integer that indicates whether the value of this instance is less than, equal to, or greater than the other value.</source>
          <target state="translated">比較這個執行個體的值與另一個值，並且傳回整數，這個整數表示這個執行個體的值小於、等於或大於另一個值。</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.CompareTo(System.Int64)">
          <source>The signed 64-bit integer to compare.</source>
          <target state="translated">要比較的帶正負號 64 位元整數。</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.CompareTo(System.Int64)">
          <source>Compares this instance to a signed 64-bit integer and returns an integer that indicates whether the value of this instance is less than, equal to, or greater than the value of the signed 64-bit integer.</source>
          <target state="translated">比較這個執行個體與帶正負號的 64 位元整數，並且傳回整數，這個整數表示這個執行個體的值小於、等於或大於帶正負號 64 位元整數的值。</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.CompareTo(System.Int64)">
          <source>A signed integer value that indicates the relationship of this instance to <ph id="ph1">&lt;paramref name="other" /&gt;</ph>, as shown in the following table.</source>
          <target state="translated">帶正負號的整數值，表示這個執行個體與 <ph id="ph1">&lt;paramref name="other" /&gt;</ph> 的關聯性，如下表所示。</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.CompareTo(System.Int64)">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Return value</source>
          <target state="translated"><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph>傳回值</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.CompareTo(System.Int64)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Description</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 描述</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.CompareTo(System.Int64)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Less than zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph>小於零</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.CompareTo(System.Int64)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> The current instance is less than <ph id="ph3">&lt;paramref name="other" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 目前的執行個體小於 <ph id="ph3">&lt;paramref name="other" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.CompareTo(System.Int64)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 零</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.CompareTo(System.Int64)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> The current instance equals <ph id="ph3">&lt;paramref name="other" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 目前的執行個體等於 <ph id="ph3">&lt;paramref name="other" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.CompareTo(System.Int64)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Greater than zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 大於零</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.CompareTo(System.Int64)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> The current instance is greater than <ph id="ph3">&lt;paramref name="other" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 目前的執行個體大於 <ph id="ph3">&lt;paramref name="other" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.CompareTo(System.Int64)">
          <source>If <ph id="ph1">`other`</ph> is a <ph id="ph2">&lt;xref:System.Byte&gt;</ph>, <ph id="ph3">&lt;xref:System.Int16&gt;</ph>, <ph id="ph4">&lt;xref:System.Int32&gt;</ph>, <ph id="ph5">&lt;xref:System.SByte&gt;</ph>, <ph id="ph6">&lt;xref:System.UInt16&gt;</ph>, or <ph id="ph7">&lt;xref:System.UInt32&gt;</ph> value, it is implicitly converted to an <ph id="ph8">&lt;xref:System.Int64&gt;</ph> value when the <ph id="ph9">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29&gt;</ph> method is called.</source>
          <target state="translated">如果<ph id="ph1">`other`</ph>是<ph id="ph2">&lt;xref:System.Byte&gt;</ph>， <ph id="ph3">&lt;xref:System.Int16&gt;</ph>， <ph id="ph4">&lt;xref:System.Int32&gt;</ph>， <ph id="ph5">&lt;xref:System.SByte&gt;</ph>， <ph id="ph6">&lt;xref:System.UInt16&gt;</ph>，或<ph id="ph7">&lt;xref:System.UInt32&gt;</ph>值，它會隱含地轉換成<ph id="ph8">&lt;xref:System.Int64&gt;</ph>值時<ph id="ph9">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29&gt;</ph>方法呼叫。</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.CompareTo(System.Int64)">
          <source>The following example illustrates the result of calling the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29&gt;</ph> method with integral values.</source>
          <target state="translated">下列範例說明呼叫<ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29&gt;</ph>具有整數值的方法。</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.CompareTo(System.Numerics.BigInteger)">
          <source>The object to compare.</source>
          <target state="translated">要比較的物件。</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.CompareTo(System.Numerics.BigInteger)">
          <source>Compares this instance to a second <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> and returns an integer that indicates whether the value of this instance is less than, equal to, or greater than the value of the specified object.</source>
          <target state="translated">比較這個執行個體與第二個 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph>，並且傳回整數，這個整數表示這個執行個體的值小於、等於或大於指定之物件的值。</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.CompareTo(System.Numerics.BigInteger)">
          <source>A signed integer value that indicates the relationship of this instance to <ph id="ph1">&lt;paramref name="other" /&gt;</ph>, as shown in the following table.</source>
          <target state="translated">帶正負號的整數值，表示這個執行個體與 <ph id="ph1">&lt;paramref name="other" /&gt;</ph> 的關聯性，如下表所示。</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.CompareTo(System.Numerics.BigInteger)">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Return value</source>
          <target state="translated"><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph>傳回值</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.CompareTo(System.Numerics.BigInteger)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Description</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 描述</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.CompareTo(System.Numerics.BigInteger)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Less than zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph>小於零</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.CompareTo(System.Numerics.BigInteger)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> The current instance is less than <ph id="ph3">&lt;paramref name="other" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 目前的執行個體小於 <ph id="ph3">&lt;paramref name="other" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.CompareTo(System.Numerics.BigInteger)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 零</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.CompareTo(System.Numerics.BigInteger)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> The current instance equals <ph id="ph3">&lt;paramref name="other" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 目前的執行個體等於 <ph id="ph3">&lt;paramref name="other" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.CompareTo(System.Numerics.BigInteger)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Greater than zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 大於零</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.CompareTo(System.Numerics.BigInteger)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> The current instance is greater than <ph id="ph3">&lt;paramref name="other" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 目前的執行個體大於 <ph id="ph3">&lt;paramref name="other" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.CompareTo(System.Numerics.BigInteger)">
          <source>This overload of the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%2A&gt;</ph> method implements the <ph id="ph2">&lt;xref:System.IComparable%601.CompareTo%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">這個多載<ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%2A&gt;</ph>方法實作<ph id="ph2">&lt;xref:System.IComparable%601.CompareTo%2A?displayProperty=nameWithType&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.CompareTo(System.Numerics.BigInteger)">
          <source>It is used by generic collection objects to order the items in the collection.</source>
          <target state="translated">泛型集合物件使用來排序集合中的項目。</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.CompareTo(System.Numerics.BigInteger)">
          <source>The following example illustrates the use of the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.Numerics.BigInteger%29&gt;</ph> method to order a list of <ph id="ph2">`StarInfo`</ph> objects.</source>
          <target state="translated">下列範例說明使用<ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.Numerics.BigInteger%29&gt;</ph>方法來排序的清單<ph id="ph2">`StarInfo`</ph>物件。</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.CompareTo(System.Numerics.BigInteger)">
          <source>Each <ph id="ph1">`StarInfo`</ph> object provides information about a star's name and its distance from the Earth in miles.</source>
          <target state="translated">每個<ph id="ph1">`StarInfo`</ph>物件提供星號的名稱和距離英里地球的相關資訊。</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.CompareTo(System.Numerics.BigInteger)">
          <source><ph id="ph1">`StarInfo`</ph> implements the <ph id="ph2">&lt;xref:System.IComparable%601&gt;</ph> interface, which enables <ph id="ph3">`StarInfo`</ph> objects to be sorted by generic collection classes.</source>
          <target state="translated"><ph id="ph1">`StarInfo`</ph> 實作<ph id="ph2">&lt;xref:System.IComparable%601&gt;</ph>介面，讓<ph id="ph3">`StarInfo`</ph>排序的泛型集合類別的物件。</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.CompareTo(System.Numerics.BigInteger)">
          <source>Its <ph id="ph1">&lt;xref:System.IComparable%601.CompareTo%2A?displayProperty=nameWithType&gt;</ph> implementation just wraps a call to <ph id="ph2">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.Numerics.BigInteger%29&gt;</ph>.</source>
          <target state="translated">其<ph id="ph1">&lt;xref:System.IComparable%601.CompareTo%2A?displayProperty=nameWithType&gt;</ph>實作只會在呼叫包裝<ph id="ph2">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.Numerics.BigInteger%29&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.CompareTo(System.Numerics.BigInteger)">
          <source>The following code then instantiates four <ph id="ph1">`StarInfo`</ph> objects and stores them in a generic <ph id="ph2">&lt;xref:System.Collections.Generic.List%601&gt;</ph> object.</source>
          <target state="translated">下列程式碼接著會執行個體化四個<ph id="ph1">`StarInfo`</ph>物件，並將它們儲存在泛型<ph id="ph2">&lt;xref:System.Collections.Generic.List%601&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.CompareTo(System.Numerics.BigInteger)">
          <source>After the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Sort%2A?displayProperty=nameWithType&gt;</ph> method is called, <ph id="ph2">`StarInfo`</ph> objects are displayed in order of their distance from the Earth.</source>
          <target state="translated">之後<ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Sort%2A?displayProperty=nameWithType&gt;</ph>呼叫方法時，<ph id="ph2">`StarInfo`</ph>物件都會從地球其距離的順序顯示。</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.CompareTo(System.Object)">
          <source>The object to compare.</source>
          <target state="translated">要比較的物件。</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.CompareTo(System.Object)">
          <source>Compares this instance to a specified object and returns an integer that indicates whether the value of this instance is less than, equal to, or greater than the value of the specified object.</source>
          <target state="translated">比較這個執行個體與特定物件，並且傳回一個整數，指出這個執行個體的值是小於、等於或大於特定物件的值。</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.CompareTo(System.Object)">
          <source>A signed integer that indicates the relationship of the current instance to the <ph id="ph1">&lt;paramref name="obj" /&gt;</ph> parameter, as shown in the following table.</source>
          <target state="translated">帶正負號的整數，表示目前執行個體與 <ph id="ph1">&lt;paramref name="obj" /&gt;</ph> 參數的關聯性，如下表所示。</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Return value</source>
          <target state="translated"><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph>傳回值</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Description</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 描述</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Less than zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph>小於零</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> The current instance is less than <ph id="ph3">&lt;paramref name="obj" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 目前的執行個體小於 <ph id="ph3">&lt;paramref name="obj" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 零</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> The current instance equals <ph id="ph3">&lt;paramref name="obj" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 目前的執行個體等於 <ph id="ph3">&lt;paramref name="obj" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Greater than zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 大於零</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> The current instance is greater than <ph id="ph3">&lt;paramref name="obj" /&gt;</ph>, or the <ph id="ph4">&lt;paramref name="obj" /&gt;</ph> parameter is <ph id="ph5">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 目前的執行個體大於 <ph id="ph3">&lt;paramref name="obj" /&gt;</ph>，或 <ph id="ph4">&lt;paramref name="obj" /&gt;</ph> 參數為 <ph id="ph5">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.CompareTo(System.Object)">
          <source>This overload of the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%2A&gt;</ph> method implements the <ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">這個多載<ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%2A&gt;</ph>方法實作<ph id="ph2">&lt;xref:System.IComparable.CompareTo%2A?displayProperty=nameWithType&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.CompareTo(System.Object)">
          <source>It is used by non-generic collection objects to order the items in the collection.</source>
          <target state="translated">它可由非泛型集合物件來排序集合中的項目。</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.CompareTo(System.Object)">
          <source>The <ph id="ph1">`obj`</ph> parameter must be one of the following:</source>
          <target state="translated"><ph id="ph1">`obj`</ph>參數必須是下列其中之一：</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.CompareTo(System.Object)">
          <source>An object whose run-time type is <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>.</source>
          <target state="translated">物件，其執行階段型別為<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.CompareTo(System.Object)">
          <source>An <ph id="ph1">&lt;xref:System.Object&gt;</ph> variable whose value is <ph id="ph2">`null`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Object&gt;</ph>其值的變數<ph id="ph2">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.CompareTo(System.Object)">
          <source>If the value of the <ph id="ph1">`obj`</ph> parameter is <ph id="ph2">`null`</ph>, the method returns 1, which indicates that that the current instance is greater than <ph id="ph3">`obj`</ph>.</source>
          <target state="translated">如果值<ph id="ph1">`obj`</ph>參數是<ph id="ph2">`null`</ph>，方法會傳回 1，表示目前的執行個體大於<ph id="ph3">`obj`</ph>。</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.CompareTo(System.Object)">
          <source>The following example calls the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.Object%29&gt;</ph> method to compare a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value with each element in an object array</source>
          <target state="translated">下列範例會呼叫<ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.Object%29&gt;</ph>方法來比較<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>物件陣列中每個元素的值</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;paramref name="obj" /&gt;</ph> is not a <ph id="ph2">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="obj" /&gt;</ph> 不是 <ph id="ph2">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.CompareTo(System.UInt64)">
          <source>The unsigned 64-bit integer to compare.</source>
          <target state="translated">要比較的不帶正負號 64 位元整數。</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.CompareTo(System.UInt64)">
          <source>Compares this instance to an unsigned 64-bit integer and returns an integer that indicates whether the value of this instance is less than, equal to, or greater than the value of the unsigned 64-bit integer.</source>
          <target state="translated">比較這個執行個體與不帶正負號的 64 位元整數，並且傳回整數，這個整數表示這個執行個體的值小於、等於或大於不帶正負號 64 位元整數的值。</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.CompareTo(System.UInt64)">
          <source>A signed integer that indicates the relative value of this instance and <ph id="ph1">&lt;paramref name="other" /&gt;</ph>, as shown in the following table.</source>
          <target state="translated">帶正負號的整數，表示這個執行個體與 <ph id="ph1">&lt;paramref name="other" /&gt;</ph> 的相對值，如下表所示。</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.CompareTo(System.UInt64)">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Return value</source>
          <target state="translated"><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph>傳回值</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.CompareTo(System.UInt64)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Description</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 描述</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.CompareTo(System.UInt64)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Less than zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph>小於零</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.CompareTo(System.UInt64)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> The current instance is less than <ph id="ph3">&lt;paramref name="other" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 目前的執行個體小於 <ph id="ph3">&lt;paramref name="other" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.CompareTo(System.UInt64)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 零</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.CompareTo(System.UInt64)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> The current instance equals <ph id="ph3">&lt;paramref name="other" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 目前的執行個體等於 <ph id="ph3">&lt;paramref name="other" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.CompareTo(System.UInt64)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Greater than zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 大於零</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.CompareTo(System.UInt64)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> The current instance is greater than <ph id="ph3">&lt;paramref name="other" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 目前的執行個體大於 <ph id="ph3">&lt;paramref name="other" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Divide(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The value to be divided.</source>
          <target state="translated">做為被除數的值。</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Divide(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The value to divide by.</source>
          <target state="translated">做為除數的值。</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Divide(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Divides one <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value by another and returns the result.</source>
          <target state="translated">某個 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 值除以另一個值，並且傳回結果。</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Divide(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The quotient of the division.</source>
          <target state="translated">相除的商數。</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Divide(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Divide%2A&gt;</ph> method performs integer division; any remainder that results from the division is discarded.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.Divide%2A&gt;</ph>方法會執行整數除法; 會捨棄任何相除所得到的餘數。</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Divide(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>To perform integer division while preserving the remainder, call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.DivRem%2A&gt;</ph> method.</source>
          <target state="translated">若要執行同時保留其餘部分的整數除法，呼叫<ph id="ph1">&lt;xref:System.Numerics.BigInteger.DivRem%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Divide(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>To retrieve only the remainder, call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Remainder%2A&gt;</ph> method.</source>
          <target state="translated">若要擷取的其餘部分，請呼叫<ph id="ph1">&lt;xref:System.Numerics.BigInteger.Remainder%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Divide(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Divide%2A&gt;</ph> method can be used by languages that do not support operator overloading.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.Divide%2A&gt;</ph>方法可用的語言不支援運算子多載。</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Divide(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Its behavior is identical to division using the division operator.</source>
          <target state="translated">其行為等同於使用除法運算子的除法。</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Divide(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The following example creates an array of <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated">下列範例會建立的陣列<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Divide(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>It then uses each element as the quotient in a division operation that uses the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Divide%2A&gt;</ph> method, the division operator (/), and the <ph id="ph2">&lt;xref:System.Numerics.BigInteger.DivRem%2A&gt;</ph> method.</source>
          <target state="translated">然後它會使用每個項目中使用的除法運算的商數為<ph id="ph1">&lt;xref:System.Numerics.BigInteger.Divide%2A&gt;</ph>方法，除法運算子 （/），而<ph id="ph2">&lt;xref:System.Numerics.BigInteger.DivRem%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Divide(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source><ph id="ph1">&lt;paramref name="divisor" /&gt;</ph> is 0 (zero).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="divisor" /&gt;</ph> 是 0 (零)。</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.DivRem(System.Numerics.BigInteger,System.Numerics.BigInteger,System.Numerics.BigInteger@)">
          <source>The value to be divided.</source>
          <target state="translated">做為被除數的值。</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.DivRem(System.Numerics.BigInteger,System.Numerics.BigInteger,System.Numerics.BigInteger@)">
          <source>The value to divide by.</source>
          <target state="translated">做為除數的值。</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.DivRem(System.Numerics.BigInteger,System.Numerics.BigInteger,System.Numerics.BigInteger@)">
          <source>When this method returns, contains a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value that represents the remainder from the division.</source>
          <target state="translated">當這個方法傳回時，會包含表示相除餘數的 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 值。</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.DivRem(System.Numerics.BigInteger,System.Numerics.BigInteger,System.Numerics.BigInteger@)">
          <source>This parameter is passed uninitialized.</source>
          <target state="translated">這個參數會以未初始化的狀態傳遞。</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.DivRem(System.Numerics.BigInteger,System.Numerics.BigInteger,System.Numerics.BigInteger@)">
          <source>Divides one <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value by another, returns the result, and returns the remainder in an output parameter.</source>
          <target state="translated">某個 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 值除以另一個值，傳回結果，並在輸出參數中傳回餘數。</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.DivRem(System.Numerics.BigInteger,System.Numerics.BigInteger,System.Numerics.BigInteger@)">
          <source>The quotient of the division.</source>
          <target state="translated">相除的商數。</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.DivRem(System.Numerics.BigInteger,System.Numerics.BigInteger,System.Numerics.BigInteger@)">
          <source>This method preserves both the quotient and the remainder that results from integer division.</source>
          <target state="translated">這個方法會保留商和所產生的整數除法的餘數。</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.DivRem(System.Numerics.BigInteger,System.Numerics.BigInteger,System.Numerics.BigInteger@)">
          <source>If you are not interested in the remainder, use the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Divide%2A&gt;</ph> method or the division operator; if you are only interested in the remainder, use the <ph id="ph2">&lt;xref:System.Numerics.BigInteger.Remainder%2A&gt;</ph> method.</source>
          <target state="translated">如果您不感興趣的其餘部分，使用<ph id="ph1">&lt;xref:System.Numerics.BigInteger.Divide%2A&gt;</ph>方法或除法運算子; 如果您只有興趣其餘部分，便可使用<ph id="ph2">&lt;xref:System.Numerics.BigInteger.Remainder%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.DivRem(System.Numerics.BigInteger,System.Numerics.BigInteger,System.Numerics.BigInteger@)">
          <source>The sign of the returned <ph id="ph1">`remainder`</ph> value is the same as the sign of the <ph id="ph2">`dividend`</ph> parameter.</source>
          <target state="translated">傳回的正負號<ph id="ph1">`remainder`</ph>值時相同的正負號<ph id="ph2">`dividend`</ph>參數。</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.DivRem(System.Numerics.BigInteger,System.Numerics.BigInteger,System.Numerics.BigInteger@)">
          <source>The behavior of the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.DivRem%2A&gt;</ph> method is identical to that of the <ph id="ph2">&lt;xref:System.Math.DivRem%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">行為<ph id="ph1">&lt;xref:System.Numerics.BigInteger.DivRem%2A&gt;</ph>方法有相同的<ph id="ph2">&lt;xref:System.Math.DivRem%2A?displayProperty=nameWithType&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.DivRem(System.Numerics.BigInteger,System.Numerics.BigInteger,System.Numerics.BigInteger@)">
          <source>The following example creates an array of <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated">下列範例會建立的陣列<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.DivRem(System.Numerics.BigInteger,System.Numerics.BigInteger,System.Numerics.BigInteger@)">
          <source>It then uses each element as the quotient in a division operation that uses the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Divide%2A&gt;</ph> method, the division operator (/), and the <ph id="ph2">&lt;xref:System.Numerics.BigInteger.DivRem%2A&gt;</ph> method.</source>
          <target state="translated">然後它會使用每個項目中使用的除法運算的商數為<ph id="ph1">&lt;xref:System.Numerics.BigInteger.Divide%2A&gt;</ph>方法，除法運算子 （/），而<ph id="ph2">&lt;xref:System.Numerics.BigInteger.DivRem%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.DivRem(System.Numerics.BigInteger,System.Numerics.BigInteger,System.Numerics.BigInteger@)">
          <source><ph id="ph1">&lt;paramref name="divisor" /&gt;</ph> is 0 (zero).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="divisor" /&gt;</ph> 是 0 (零)。</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" uid="T:System.Numerics.BigInteger">
          <source>Returns a value that indicates whether two numeric values are equal.</source>
          <target state="translated">傳回值，這個值表示兩個數值是否相等。</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Equals(System.Int64)">
          <source>The signed 64-bit integer value to compare.</source>
          <target state="translated">要比較的帶正負號 64 位元整數值。</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Equals(System.Int64)">
          <source>Returns a value that indicates whether the current instance and a signed 64-bit integer have the same value.</source>
          <target state="translated">傳回值，這個值表示目前執行個體與帶正負號的 64 位元整數是否有相同的值。</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Equals(System.Int64)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the signed 64-bit integer and the current instance have the same value; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果帶正負號的 64 位元整數與目前執行個體有相同的值，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Equals(System.Int64)">
          <source>If <ph id="ph1">`other`</ph> is a <ph id="ph2">&lt;xref:System.Byte&gt;</ph>, <ph id="ph3">&lt;xref:System.Int16&gt;</ph>, <ph id="ph4">&lt;xref:System.Int32&gt;</ph>, <ph id="ph5">&lt;xref:System.SByte&gt;</ph>, <ph id="ph6">&lt;xref:System.UInt16&gt;</ph>, or <ph id="ph7">&lt;xref:System.UInt32&gt;</ph> value, it is implicitly converted to an <ph id="ph8">&lt;xref:System.Int64&gt;</ph> value when the method is called.</source>
          <target state="translated">如果<ph id="ph1">`other`</ph>是<ph id="ph2">&lt;xref:System.Byte&gt;</ph>， <ph id="ph3">&lt;xref:System.Int16&gt;</ph>， <ph id="ph4">&lt;xref:System.Int32&gt;</ph>， <ph id="ph5">&lt;xref:System.SByte&gt;</ph>， <ph id="ph6">&lt;xref:System.UInt16&gt;</ph>，或<ph id="ph7">&lt;xref:System.UInt32&gt;</ph>值，它會隱含地轉換成<ph id="ph8">&lt;xref:System.Int64&gt;</ph>時呼叫該方法的值。</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Equals(System.Int64)">
          <source>To determine the relationship between the two objects instead of just testing for equality, call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">若要判斷兩個物件，而不是只測試是否相等之間的關聯性，請呼叫<ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Equals(System.Int64)">
          <source>The following example instantiates a <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> object from each integral type except <ph id="ph2">&lt;xref:System.UInt64&gt;</ph>.</source>
          <target state="translated">下列範例會具現化<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>物件以外的每個整數類資料類型從<ph id="ph2">&lt;xref:System.UInt64&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Equals(System.Int64)">
          <source>It then calls the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Equals%28System.Int64%29&gt;</ph> method to compare the <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value with the original integer value that was passed to the <ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph> constructor.</source>
          <target state="translated">然後它會呼叫<ph id="ph1">&lt;xref:System.Numerics.BigInteger.Equals%28System.Int64%29&gt;</ph>方法來比較<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值與原始的整數值傳遞給<ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph>建構函式。</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Equals(System.Int64)">
          <source>As the output shows, the values are equal in each case.</source>
          <target state="translated">如輸出所示，就有一個值相等的每個案例中。</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Equals(System.Numerics.BigInteger)">
          <source>The object to compare.</source>
          <target state="translated">要比較的物件。</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Equals(System.Numerics.BigInteger)">
          <source>Returns a value that indicates whether the current instance and a specified <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> object have the same value.</source>
          <target state="translated">傳回值，這個值表示目前執行個體與指定的 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 物件是否有相同的值。</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Equals(System.Numerics.BigInteger)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this <ph id="ph2">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> object and <ph id="ph3">&lt;paramref name="other" /&gt;</ph> have the same value; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果這個 <ph id="ph2">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 物件與 <ph id="ph3">&lt;paramref name="other" /&gt;</ph> 有相同的值，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Equals(System.Numerics.BigInteger)">
          <source>This method implements the <ph id="ph1">&lt;xref:System.IEquatable%601&gt;</ph> interface and performs slightly better than <ph id="ph2">&lt;xref:System.Numerics.BigInteger.Equals%28System.Object%29&gt;</ph> because it does not have to convert the <ph id="ph3">`other`</ph> parameter to a <ph id="ph4">&lt;xref:System.Numerics.BigInteger&gt;</ph> object.</source>
          <target state="translated">這個方法會實作<ph id="ph1">&lt;xref:System.IEquatable%601&gt;</ph>介面並執行稍微優於<ph id="ph2">&lt;xref:System.Numerics.BigInteger.Equals%28System.Object%29&gt;</ph>因為並沒有轉換<ph id="ph3">`other`</ph>參數<ph id="ph4">&lt;xref:System.Numerics.BigInteger&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Equals(System.Numerics.BigInteger)">
          <source>To determine the relationship between the two <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> objects instead of just testing for equality, call the <ph id="ph2">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.Numerics.BigInteger%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">若要判斷兩者之間的關聯性<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>物件，而非只測試是否相等，呼叫<ph id="ph2">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.Numerics.BigInteger%29?displayProperty=nameWithType&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Equals(System.Numerics.BigInteger)">
          <source>The following example compares the approximate distance of several stars from Earth with the distance of Epsilon Indi from Earth to determine whether they are equal.</source>
          <target state="translated">下列範例會比較 Epsilon 指出從地球，以判斷它們是否相等的距離，以從地球幾顆星的近似距離。</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Equals(System.Numerics.BigInteger)">
          <source>The example uses each overload of the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Equals%2A&gt;</ph> method to test for equality.</source>
          <target state="translated">此範例會使用的每個多載<ph id="ph1">&lt;xref:System.Numerics.BigInteger.Equals%2A&gt;</ph>方法來測試是否相等。</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Equals(System.Object)">
          <source>The object to compare.</source>
          <target state="translated">要比較的物件。</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Equals(System.Object)">
          <source>Returns a value that indicates whether the current instance and a specified object have the same value.</source>
          <target state="translated">傳回值，這個值表示目前執行個體與指定的物件是否有相同的值。</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Equals(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;paramref name="obj" /&gt;</ph> argument is a <ph id="ph3">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> object, and its value is equal to the value of the current <ph id="ph4">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> instance; otherwise, <ph id="ph5">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph2">&lt;paramref name="obj" /&gt;</ph> 引數為 <ph id="ph3">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 物件，且其值等於目前 <ph id="ph4">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 執行個體的值，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否則為 <ph id="ph5">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Equals(System.Object)">
          <source>If the <ph id="ph1">`obj`</ph> argument is not a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value, the method returns <ph id="ph3">`false`</ph>.</source>
          <target state="translated">如果<ph id="ph1">`obj`</ph>引數不是<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值，此方法會傳回<ph id="ph3">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Equals(System.Object)">
          <source>The method returns <ph id="ph1">`true`</ph> only if <ph id="ph2">`obj`</ph> is a <ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph> instance whose value is equal to the current instance.</source>
          <target state="translated">方法會傳回<ph id="ph1">`true`</ph>才<ph id="ph2">`obj`</ph>是<ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph>其值是否等於目前的執行個體的執行個體。</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Equals(System.Object)">
          <source>To determine the relationship between the two objects instead of just testing for equality, call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.Object%29&gt;</ph> method.</source>
          <target state="translated">若要判斷兩個物件，而不是只測試是否相等之間的關聯性，請呼叫<ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.Object%29&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Equals(System.Object)">
          <source>The following example defines parallel <ph id="ph1">&lt;xref:System.Object&gt;</ph> and <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> arrays.</source>
          <target state="translated">下列範例會定義平行<ph id="ph1">&lt;xref:System.Object&gt;</ph>和<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>陣列。</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Equals(System.Object)">
          <source>Each element of one array has the same value as the corresponding element of the second array.</source>
          <target state="translated">一個陣列的每個元素具有相同的值做為第二個陣列的對應項目。</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Equals(System.Object)">
          <source>As the output from the example shows, the instance in the <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> array is considered to be equal to the instance in the <ph id="ph2">&lt;xref:System.Object&gt;</ph> array only if the latter is a <ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph> and their values are equal.</source>
          <target state="translated">此範例將示範中的執行個體的輸出<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>陣列會被視為等於中的執行個體<ph id="ph2">&lt;xref:System.Object&gt;</ph>陣列只有後者是<ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph>和其值是否相等。</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Equals(System.UInt64)">
          <source>The unsigned 64-bit integer to compare.</source>
          <target state="translated">要比較的不帶正負號 64 位元整數。</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Equals(System.UInt64)">
          <source>Returns a value that indicates whether the current instance and an unsigned 64-bit integer have the same value.</source>
          <target state="translated">傳回值，這個值表示目前執行個體與不帶正負號的 64 位元整數是否有相同的值。</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Equals(System.UInt64)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current instance and the unsigned 64-bit integer have the same value; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果目前執行個體與不帶正負號的 64 位元整數有相同的值，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Equals(System.UInt64)">
          <source>To determine the relationship between the two objects instead of just testing for equality, call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">若要判斷兩個物件，而不是只測試是否相等之間的關聯性，請呼叫<ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Equals(System.UInt64)">
          <source>The following example compares the approximate distance of several stars from Earth with the distance of Epsilon Indi from Earth to determine whether they are equal.</source>
          <target state="translated">下列範例會比較 Epsilon 指出從地球，以判斷它們是否相等的距離，以從地球幾顆星的近似距離。</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Equals(System.UInt64)">
          <source>The example uses each overload of the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Equals%2A&gt;</ph> method to test for equality.</source>
          <target state="translated">此範例會使用的每個多載<ph id="ph1">&lt;xref:System.Numerics.BigInteger.Equals%2A&gt;</ph>方法來測試是否相等。</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.GetHashCode">
          <source>Returns the hash code for the current <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> object.</source>
          <target state="translated">傳回目前 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 物件的雜湊碼。</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.GetHashCode">
          <source>A 32-bit signed integer hash code.</source>
          <target state="translated">32 位元帶正負號的整數雜湊碼。</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.GreatestCommonDivisor(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The first value.</source>
          <target state="translated">第一個值。</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.GreatestCommonDivisor(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The second value.</source>
          <target state="translated">第二個值。</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.GreatestCommonDivisor(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Finds the greatest common divisor of two <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> values.</source>
          <target state="translated">求兩個 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 值的最大公因數。</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.GreatestCommonDivisor(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The greatest common divisor of <ph id="ph1">&lt;paramref name="left" /&gt;</ph> and <ph id="ph2">&lt;paramref name="right" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="left" /&gt;</ph> 和 <ph id="ph2">&lt;paramref name="right" /&gt;</ph> 的最大公因數。</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.GreatestCommonDivisor(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The greatest common divisor is the largest number into which the two <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> values can be divided without returning a remainder.</source>
          <target state="translated">最大公因數是最大數目，其中兩個<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>值可以分割而不需傳回餘數。</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.GreatestCommonDivisor(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>If the <ph id="ph1">`left`</ph> and <ph id="ph2">`right`</ph> parameters are non-zero numbers, the method always returns at least a value of 1 because all numbers can be divided by 1.</source>
          <target state="translated">如果<ph id="ph1">`left`</ph>和<ph id="ph2">`right`</ph>參數為非零的數字，則方法一律傳回最小值為 1，因為所有數字除以 1。</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.GreatestCommonDivisor(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>If either parameter is zero, the method returns the absolute value of the non-zero parameter.</source>
          <target state="translated">如果其中一個參數為零，則方法會傳回非零參數的絕對值。</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.GreatestCommonDivisor(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>If both values are zero, the method returns zero.</source>
          <target state="translated">如果這兩個值都是零，則該方法會傳回零。</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.GreatestCommonDivisor(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Computing the greatest common divisor of very large values of <ph id="ph1">`left`</ph> and <ph id="ph2">`right`</ph> can be a very time-consuming operation.</source>
          <target state="translated">計算非常大的值的最大公因數<ph id="ph1">`left`</ph>和<ph id="ph2">`right`</ph>可以是非常耗時的作業。</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.GreatestCommonDivisor(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The value returned by the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.GreatestCommonDivisor%2A&gt;</ph> method is always positive regardless of the sign of the <ph id="ph2">`left`</ph> and <ph id="ph3">`right`</ph> parameters.</source>
          <target state="translated">所傳回的值<ph id="ph1">&lt;xref:System.Numerics.BigInteger.GreatestCommonDivisor%2A&gt;</ph>方法永遠為正數的正負號不論<ph id="ph2">`left`</ph>和<ph id="ph3">`right`</ph>參數。</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.GreatestCommonDivisor(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The following example illustrates a call to the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.GreatestCommonDivisor%2A&gt;</ph> method and the exception handling necessary to provide useful information about an <ph id="ph2">&lt;xref:System.ArgumentOutOfRangeException&gt;</ph>.</source>
          <target state="translated">下列範例說明呼叫<ph id="ph1">&lt;xref:System.Numerics.BigInteger.GreatestCommonDivisor%2A&gt;</ph>方法和例外狀況處理需要提供有用的資訊關於<ph id="ph2">&lt;xref:System.ArgumentOutOfRangeException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.GreatestCommonDivisor(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The result indicates that the greatest common divisor of these two numbers is 1.</source>
          <target state="translated">結果會指出這些兩個數字的最大公因數為 1。</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" uid="P:System.Numerics.BigInteger.IsEven">
          <source>Indicates whether the value of the current <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> object is an even number.</source>
          <target state="translated">表示目前 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 物件的值是否為偶數。</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.BigInteger.IsEven">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the value of the <ph id="ph2">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> object is an even number; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph2">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 物件的值為偶數，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.BigInteger.IsEven">
          <source>This property is a convenience feature that indicates whether a <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> value is evenly divisible by two.</source>
          <target state="translated">這個屬性是方便的功能，指出是否<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>值是由兩個整除。</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.BigInteger.IsEven">
          <source>It is equivalent to the following expression:</source>
          <target state="translated">相當於下列運算式：</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.BigInteger.IsEven">
          <source>If the value of the current <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> object is <ph id="ph2">&lt;xref:System.Numerics.BigInteger.Zero%2A?displayProperty=nameWithType&gt;</ph>, the property returns <ph id="ph3">`true`</ph>.</source>
          <target state="translated">如果目前的值<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>物件是<ph id="ph2">&lt;xref:System.Numerics.BigInteger.Zero%2A?displayProperty=nameWithType&gt;</ph>，該屬性傳回<ph id="ph3">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" uid="P:System.Numerics.BigInteger.IsOne">
          <source>Indicates whether the value of the current <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> object is <ph id="ph2">&lt;see cref="P:System.Numerics.BigInteger.One" /&gt;</ph>.</source>
          <target state="translated">表示目前 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 物件的值是否為 <ph id="ph2">&lt;see cref="P:System.Numerics.BigInteger.One" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.BigInteger.IsOne">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the value of the <ph id="ph2">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> object is <ph id="ph3">&lt;see cref="P:System.Numerics.BigInteger.One" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph2">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 物件的值為 <ph id="ph3">&lt;see cref="P:System.Numerics.BigInteger.One" /&gt;</ph>，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.BigInteger.IsOne">
          <source>This property offers significantly better performance than other comparisons with one, such as <ph id="ph1">`thisBigInteger.Equals(BigInteger.One)`</ph>.</source>
          <target state="translated">這個屬性會提供效能明顯優於其他的比較，其中包含一個項目，例如<ph id="ph1">`thisBigInteger.Equals(BigInteger.One)`</ph>。</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" uid="P:System.Numerics.BigInteger.IsPowerOfTwo">
          <source>Indicates whether the value of the current <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> object is a power of two.</source>
          <target state="translated">表示目前 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 物件的值是否為二乘冪。</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.BigInteger.IsPowerOfTwo">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the value of the <ph id="ph2">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> object is a power of two; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph2">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 物件的值為二乘冪，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.BigInteger.IsPowerOfTwo">
          <source>This property determines whether a <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> value has a single non-zero bit set.</source>
          <target state="translated">此屬性會決定是否<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>值具有單一的非零位元集。</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.BigInteger.IsPowerOfTwo">
          <source>This means that it returns <ph id="ph1">`true`</ph> if the value of the current <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> object is 1 (that is, 2<bpt id="p1">&lt;sup&gt;</bpt>0<ept id="p1">&lt;/sup&gt;</ept>) or any greater power of two.</source>
          <target state="translated">這表示，它會傳回<ph id="ph1">`true`</ph>如果目前的值<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>物件為 1 (也就是 2<bpt id="p1">&lt;sup&gt;</bpt>0<ept id="p1">&lt;/sup&gt;</ept>) 或任何大於 2 的乘冪。</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.BigInteger.IsPowerOfTwo">
          <source>It returns <ph id="ph1">`false`</ph> if the value of the current <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> object is 0.</source>
          <target state="translated">它會傳回<ph id="ph1">`false`</ph>如果目前的值<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>物件為 0。</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" uid="P:System.Numerics.BigInteger.IsZero">
          <source>Indicates whether the value of the current <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> object is <ph id="ph2">&lt;see cref="P:System.Numerics.BigInteger.Zero" /&gt;</ph>.</source>
          <target state="translated">表示目前 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 物件的值是否為 <ph id="ph2">&lt;see cref="P:System.Numerics.BigInteger.Zero" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.BigInteger.IsZero">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the value of the <ph id="ph2">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> object is <ph id="ph3">&lt;see cref="P:System.Numerics.BigInteger.Zero" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph2">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 物件的值為 <ph id="ph3">&lt;see cref="P:System.Numerics.BigInteger.Zero" /&gt;</ph>，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.BigInteger.IsZero">
          <source>This property offers significantly better performance than <ph id="ph1">`BigInteger.Equals(BigInteger.Zero)`</ph>.</source>
          <target state="translated">這個屬性會提供效能明顯優於<ph id="ph1">`BigInteger.Equals(BigInteger.Zero)`</ph>。</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" uid="T:System.Numerics.BigInteger">
          <source>Returns the logarithm of a specified number.</source>
          <target state="translated">傳回指定數字的對數。</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger)">
          <source>The number whose logarithm is to be found.</source>
          <target state="translated">要找出其對數的數字。</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger)">
          <source>Returns the natural (base <ph id="ph1">&lt;see langword="e" /&gt;</ph>) logarithm of a specified number.</source>
          <target state="translated">傳回指定數字的自然 (底數為 <ph id="ph1">&lt;see langword="e" /&gt;</ph>) 對數。</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger)">
          <source>The natural (base <ph id="ph1">&lt;see langword="e" /&gt;</ph>) logarithm of <ph id="ph2">&lt;paramref name="value" /&gt;</ph>, as shown in the table in the Remarks section.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="value" /&gt;</ph> 的 (以 <ph id="ph1">&lt;see langword="e" /&gt;</ph> 為底數) 自然對數，如＜備註＞一節中的表格所示。</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger)">
          <source>The <ph id="ph1">`value`</ph> parameter is specified as a base 10 number.</source>
          <target state="translated"><ph id="ph1">`value`</ph>參數指定為基底 10 的數字。</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger)">
          <source>The precise return value of this method depends on the sign of <ph id="ph1">`value`</ph>, as the following table shows.</source>
          <target state="translated">取決於的正負號的值，這個方法會傳回精確<ph id="ph1">`value`</ph>，如下表所示。</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger)">
          <source>Sign of <ph id="ph1">`value`</ph> parameter</source>
          <target state="translated">登入的<ph id="ph1">`value`</ph>參數</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger)">
          <source>Return value</source>
          <target state="translated">傳回值</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger)">
          <source>Positive</source>
          <target state="translated">正</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger)">
          <source>The natural logarithm of <ph id="ph1">`value`</ph>; that is, ln <ph id="ph2">`value`</ph>, or log e<ph id="ph3">`value`</ph>.</source>
          <target state="translated">自然對數<ph id="ph1">`value`</ph>; 也就是 ln <ph id="ph2">`value`</ph>，或記錄檔 e<ph id="ph3">`value`</ph>。</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger)">
          <source>Zero</source>
          <target state="translated">零</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger)">
          <source><ph id="ph1">&lt;xref:System.Double.NegativeInfinity&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Double.NegativeInfinity&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger)">
          <source>Negative</source>
          <target state="translated">負</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger)">
          <source><ph id="ph1">&lt;xref:System.Double.NaN&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Double.NaN&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger)">
          <source>To calculate the base 10 logarithm of a <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> value, call the <ph id="ph2">&lt;xref:System.Numerics.BigInteger.Log10%2A&gt;</ph> method.</source>
          <target state="translated">若要計算基底 10 對數<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>值，請呼叫<ph id="ph2">&lt;xref:System.Numerics.BigInteger.Log10%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger)">
          <source>To calculate the logarithm of a number in another base, call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Log%28System.Numerics.BigInteger%2CSystem.Double%29&gt;</ph> method.</source>
          <target state="translated">若要計算的另一個基底中數字的對數，呼叫<ph id="ph1">&lt;xref:System.Numerics.BigInteger.Log%28System.Numerics.BigInteger%2CSystem.Double%29&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger)">
          <source>You can find the square root of a number by calling the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Log%2A&gt;</ph> method along with the <ph id="ph2">&lt;xref:System.Math.Exp%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">您可以找到數字的平方根，藉由呼叫<ph id="ph1">&lt;xref:System.Numerics.BigInteger.Log%2A&gt;</ph>連同方法<ph id="ph2">&lt;xref:System.Math.Exp%2A?displayProperty=nameWithType&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger)">
          <source>Note that the result is <ph id="ph1">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph> if the result is greater than <ph id="ph2">&lt;xref:System.Double.MaxValue?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">請注意，結果是<ph id="ph1">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph>如果結果大於<ph id="ph2">&lt;xref:System.Double.MaxValue?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger)">
          <source>The following example calculates the square root of each element in an array of <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated">下列範例會計算每個項目的陣列中的平方根<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger)">
          <source>This method corresponds to the <ph id="ph1">&lt;xref:System.Math.Log%28System.Double%29?displayProperty=nameWithType&gt;</ph> method for the primitive numeric types.</source>
          <target state="translated">這個方法會對應至<ph id="ph1">&lt;xref:System.Math.Log%28System.Double%29?displayProperty=nameWithType&gt;</ph>基本數值類型的方法。</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger)">
          <source>The natural log of <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is out of range of the <ph id="ph2">&lt;see cref="T:System.Double" /&gt;</ph> data type.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> 的自然對數超出 <ph id="ph2">&lt;see cref="T:System.Double" /&gt;</ph> 資料型別範圍。</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger,System.Double)">
          <source>A number whose logarithm is to be found.</source>
          <target state="translated">要找出其對數的數字。</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger,System.Double)">
          <source>The base of the logarithm.</source>
          <target state="translated">對數的底數。</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger,System.Double)">
          <source>Returns the logarithm of a specified number in a specified base.</source>
          <target state="translated">傳回指定底數中指定數字的對數。</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger,System.Double)">
          <source>The base <ph id="ph1">&lt;paramref name="baseValue" /&gt;</ph> logarithm of <ph id="ph2">&lt;paramref name="value" /&gt;</ph>, as shown in the table in the Remarks section.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="baseValue" /&gt;</ph> 的以 <ph id="ph2">&lt;paramref name="value" /&gt;</ph> 為底數的對數，如＜備註＞一節中的表格所示。</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger,System.Double)">
          <source>The <ph id="ph1">`value`</ph> and <ph id="ph2">`baseValue`</ph> parameters are specified as base 10 numbers.</source>
          <target state="translated"><ph id="ph1">`value`</ph>和<ph id="ph2">`baseValue`</ph>參數會指定為基底 10 個數字。</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger,System.Double)">
          <source>The precise return value of the method depends on the sign of <ph id="ph1">`value`</ph> and on the sign and value of <ph id="ph2">`baseValue`</ph>, as the following table shows.</source>
          <target state="translated">方法的值而定的正負號的精確傳回<ph id="ph1">`value`</ph>的符號和值在<ph id="ph2">`baseValue`</ph>，如下表所示。</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger,System.Double)">
          <source><ph id="ph1">`value`</ph> parameter</source>
          <target state="translated"><ph id="ph1">`value`</ph> 參數</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger,System.Double)">
          <source><ph id="ph1">`baseValue`</ph> parameter</source>
          <target state="translated"><ph id="ph1">`baseValue`</ph> 參數</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger,System.Double)">
          <source>Return value</source>
          <target state="translated">傳回值</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger,System.Double)">
          <source><ph id="ph1">`value`</ph> &gt; 0</source>
          <target state="translated"><ph id="ph1">`value`</ph> &gt; 0</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger,System.Double)">
          <source>(0 &lt; <ph id="ph1">`baseValue`</ph> &lt; 1) -or-(<ph id="ph2">`baseValue`</ph> &gt; 1)</source>
          <target state="translated">(0 &lt; <ph id="ph1">`baseValue`</ph> &lt; 1) -or-(<ph id="ph2">`baseValue`</ph> &gt; 1)</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger,System.Double)">
          <source>logbaseValue(<ph id="ph1">`value`</ph>)</source>
          <target state="translated">logbaseValue(<ph id="ph1">`value`</ph>)</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger,System.Double)">
          <source><ph id="ph1">`value`</ph> &lt; 0</source>
          <target state="translated"><ph id="ph1">`value`</ph> &lt; 0</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger,System.Double)">
          <source>(any value)</source>
          <target state="translated">(任意值)</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger,System.Double)">
          <source>(any value)</source>
          <target state="translated">(任意值)</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger,System.Double)">
          <source><ph id="ph1">`baseValue`</ph> &lt; 0</source>
          <target state="translated"><ph id="ph1">`baseValue`</ph> &lt; 0</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger,System.Double)">
          <source><ph id="ph1">`value`</ph> != 1</source>
          <target state="translated"><ph id="ph1">`value`</ph> != 1</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger,System.Double)">
          <source><ph id="ph1">`baseValue`</ph> = 0</source>
          <target state="translated"><ph id="ph1">`baseValue`</ph> = 0</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger,System.Double)">
          <source><ph id="ph1">`value`</ph> != 1</source>
          <target state="translated"><ph id="ph1">`value`</ph> != 1</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger,System.Double)">
          <source>(any value)</source>
          <target state="translated">(任意值)</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger,System.Double)">
          <source>(any value)</source>
          <target state="translated">(任意值)</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger,System.Double)">
          <source><ph id="ph1">`baseValue`</ph> = 1</source>
          <target state="translated"><ph id="ph1">`baseValue`</ph> = 1</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger,System.Double)">
          <source><ph id="ph1">`value`</ph> = 0</source>
          <target state="translated"><ph id="ph1">`value`</ph> = 0</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger,System.Double)">
          <source>0 &lt; <ph id="ph1">`baseValue`</ph> &lt; 1</source>
          <target state="translated">0 &lt; <ph id="ph1">`baseValue`</ph> &lt; 1</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger,System.Double)">
          <source><ph id="ph1">`value`</ph> = 0</source>
          <target state="translated"><ph id="ph1">`value`</ph> = 0</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger,System.Double)">
          <source><ph id="ph1">`baseValue`</ph> &gt; 1</source>
          <target state="translated"><ph id="ph1">`baseValue`</ph> &gt; 1</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger,System.Double)">
          <source><ph id="ph1">`value`</ph> = 1</source>
          <target state="translated"><ph id="ph1">`value`</ph> = 1</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger,System.Double)">
          <source><ph id="ph1">`baseValue`</ph> = 0</source>
          <target state="translated"><ph id="ph1">`baseValue`</ph> = 0</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger,System.Double)">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger,System.Double)">
          <source><ph id="ph1">`value`</ph> = 1</source>
          <target state="translated"><ph id="ph1">`value`</ph> = 1</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger,System.Double)">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger,System.Double)">
          <source>To calculate the base 10 logarithm of a <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> value, call the <ph id="ph2">&lt;xref:System.Numerics.BigInteger.Log10%2A&gt;</ph> method.</source>
          <target state="translated">若要計算基底 10 對數<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>值，請呼叫<ph id="ph2">&lt;xref:System.Numerics.BigInteger.Log10%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger,System.Double)">
          <source>To calculate the natural logarithm of a number, call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Log%28System.Numerics.BigInteger%29&gt;</ph> method.</source>
          <target state="translated">若要計算數字的自然對數，呼叫<ph id="ph1">&lt;xref:System.Numerics.BigInteger.Log%28System.Numerics.BigInteger%29&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger,System.Double)">
          <source>This method corresponds to the <ph id="ph1">&lt;xref:System.Math.Log%2A?displayProperty=nameWithType&gt;</ph> method for the primitive numeric types.</source>
          <target state="translated">這個方法會對應至<ph id="ph1">&lt;xref:System.Math.Log%2A?displayProperty=nameWithType&gt;</ph>基本數值類型的方法。</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger,System.Double)">
          <source>The log of <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is out of range of the <ph id="ph2">&lt;see cref="T:System.Double" /&gt;</ph> data type.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> 的對數超出 <ph id="ph2">&lt;see cref="T:System.Double" /&gt;</ph> 資料型別範圍。</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Log10(System.Numerics.BigInteger)">
          <source>A number whose logarithm is to be found.</source>
          <target state="translated">要找出其對數的數字。</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Log10(System.Numerics.BigInteger)">
          <source>Returns the base 10 logarithm of a specified number.</source>
          <target state="translated">傳回指定數字的以 10 為底數的對數。</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Log10(System.Numerics.BigInteger)">
          <source>The base 10 logarithm of <ph id="ph1">&lt;paramref name="value" /&gt;</ph>, as shown in the table in the Remarks section.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> 的以 10 為底數的對數，如＜備註＞一節中的表格所示。</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log10(System.Numerics.BigInteger)">
          <source>The <ph id="ph1">`value`</ph> parameter is specified as a base 10 number.</source>
          <target state="translated"><ph id="ph1">`value`</ph>參數指定為基底 10 的數字。</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log10(System.Numerics.BigInteger)">
          <source>The precise return value of the method depends on the sign of <ph id="ph1">`value`</ph>, as the following table shows.</source>
          <target state="translated">方法的值而定的正負號的精確傳回<ph id="ph1">`value`</ph>，如下表所示。</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log10(System.Numerics.BigInteger)">
          <source>Sign of value parameter</source>
          <target state="translated">參數值的正負號</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log10(System.Numerics.BigInteger)">
          <source>Return value</source>
          <target state="translated">傳回值</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log10(System.Numerics.BigInteger)">
          <source>Positive</source>
          <target state="translated">正</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log10(System.Numerics.BigInteger)">
          <source>The base 10 log of <ph id="ph1">`value`</ph>; that is, log10<ph id="ph2">`value`</ph>.</source>
          <target state="translated">基底 10 記錄<ph id="ph1">`value`</ph>; 也就是說，log10<ph id="ph2">`value`</ph>。</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log10(System.Numerics.BigInteger)">
          <source>Zero</source>
          <target state="translated">零</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log10(System.Numerics.BigInteger)">
          <source><ph id="ph1">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log10(System.Numerics.BigInteger)">
          <source>Negative</source>
          <target state="translated">負</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log10(System.Numerics.BigInteger)">
          <source><ph id="ph1">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log10(System.Numerics.BigInteger)">
          <source>To calculate the natural logarithm of a <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> value, call the <ph id="ph2">&lt;xref:System.Numerics.BigInteger.Log%28System.Numerics.BigInteger%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">若要計算之自然對數<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>值，請呼叫<ph id="ph2">&lt;xref:System.Numerics.BigInteger.Log%28System.Numerics.BigInteger%29?displayProperty=nameWithType&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log10(System.Numerics.BigInteger)">
          <source>To calculate the logarithm of a number in another base, call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Log%28System.Numerics.BigInteger%2CSystem.Double%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">若要計算的另一個基底中數字的對數，呼叫<ph id="ph1">&lt;xref:System.Numerics.BigInteger.Log%28System.Numerics.BigInteger%2CSystem.Double%29?displayProperty=nameWithType&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Log10(System.Numerics.BigInteger)">
          <source>This method corresponds to the <ph id="ph1">&lt;xref:System.Math.Log10%2A?displayProperty=nameWithType&gt;</ph> method for the primitive numeric types.</source>
          <target state="translated">這個方法會對應至<ph id="ph1">&lt;xref:System.Math.Log10%2A?displayProperty=nameWithType&gt;</ph>基本數值類型的方法。</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Log10(System.Numerics.BigInteger)">
          <source>The base 10 log of <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is out of range of the <ph id="ph2">&lt;see cref="T:System.Double" /&gt;</ph> data type.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> 的底數 10 對數超出 <ph id="ph2">&lt;see cref="T:System.Double" /&gt;</ph> 資料型別範圍。</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Max(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The first value to compare.</source>
          <target state="translated">要比較的第一個值。</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Max(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The second value to compare.</source>
          <target state="translated">要比較的第二個值。</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Max(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Returns the larger of two <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> values.</source>
          <target state="translated">傳回兩個 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 值的較大值。</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Max(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The <ph id="ph1">&lt;paramref name="left" /&gt;</ph> or <ph id="ph2">&lt;paramref name="right" /&gt;</ph> parameter, whichever is larger.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="left" /&gt;</ph> 或 <ph id="ph2">&lt;paramref name="right" /&gt;</ph> 參數，擇一較大者。</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Max(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>This method corresponds to the <ph id="ph1">&lt;xref:System.Math.Max%2A?displayProperty=nameWithType&gt;</ph> method for primitive numeric types.</source>
          <target state="translated">這個方法會對應至<ph id="ph1">&lt;xref:System.Math.Max%2A?displayProperty=nameWithType&gt;</ph>基本數值類型的方法。</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Max(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Max%2A&gt;</ph> method to select the largest number in an array of <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated">下列範例會使用<ph id="ph1">&lt;xref:System.Numerics.BigInteger.Max%2A&gt;</ph>方法來選取陣列中的最大數字<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Min(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The first value to compare.</source>
          <target state="translated">要比較的第一個值。</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Min(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The second value to compare.</source>
          <target state="translated">要比較的第二個值。</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Min(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Returns the smaller of two <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> values.</source>
          <target state="translated">傳回兩個 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 值的較小值。</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Min(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The <ph id="ph1">&lt;paramref name="left" /&gt;</ph> or <ph id="ph2">&lt;paramref name="right" /&gt;</ph> parameter, whichever is smaller.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="left" /&gt;</ph> 或 <ph id="ph2">&lt;paramref name="right" /&gt;</ph> 參數，擇一較小者。</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Min(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>This method corresponds to the <ph id="ph1">&lt;xref:System.Math.Min%2A?displayProperty=nameWithType&gt;</ph> method for primitive numeric types.</source>
          <target state="translated">這個方法會對應至<ph id="ph1">&lt;xref:System.Math.Min%2A?displayProperty=nameWithType&gt;</ph>基本數值類型的方法。</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Min(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Min%2A&gt;</ph> method to select the smallest number in an array of <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated">下列範例會使用<ph id="ph1">&lt;xref:System.Numerics.BigInteger.Min%2A&gt;</ph>方法來選取陣列中的最小數字<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" uid="P:System.Numerics.BigInteger.MinusOne">
          <source>Gets a value that represents the number negative one (-1).</source>
          <target state="translated">取得表示數字負一 (-1) 的值。</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.BigInteger.MinusOne">
          <source>An integer whose value is negative one (-1).</source>
          <target state="translated">值為負一 (-1) 的整數。</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.BigInteger.MinusOne">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.MinusOne%2A&gt;</ph> property is used to compare a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value to -1 or to assign -1 to a <ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.MinusOne%2A&gt;</ph>屬性用來比較<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值為-1，或指定 – 1，<ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.ModPow(System.Numerics.BigInteger,System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The number to raise to the <bpt id="p1">&lt;c&gt;</bpt>exponent<ept id="p1">&lt;/c&gt;</ept> power.</source>
          <target state="translated">具有 <bpt id="p1">&lt;c&gt;</bpt>指數<ept id="p1">&lt;/c&gt;</ept> 乘冪數的數字。</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.ModPow(System.Numerics.BigInteger,System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The exponent to raise <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> by.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>值<ept id="p1">&lt;/c&gt;</ept> 的乘冪指數。</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.ModPow(System.Numerics.BigInteger,System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The number by which to divide <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> raised to the <bpt id="p2">&lt;c&gt;</bpt>exponent<ept id="p2">&lt;/c&gt;</ept> power.</source>
          <target state="translated">要除以具有乘冪數 <bpt id="p2">&lt;c&gt;</bpt>指數<ept id="p2">&lt;/c&gt;</ept> 之 <bpt id="p1">&lt;c&gt;</bpt>值<ept id="p1">&lt;/c&gt;</ept> 的數字。</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.ModPow(System.Numerics.BigInteger,System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Performs modulus division on a number raised to the power of another number.</source>
          <target state="translated">一個數目自乘至另一個數目的乘冪後，執行模數除法。</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.ModPow(System.Numerics.BigInteger,System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The remainder after dividing <ph id="ph1">&lt;paramref name="value" /&gt;</ph><bpt id="p1">&lt;sup&gt;</bpt>exponent<ept id="p1">&lt;/sup&gt;</ept> by <ph id="ph2">&lt;paramref name="modulus" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph><bpt id="p1">&lt;sup&gt;</bpt>指數<ept id="p1">&lt;/sup&gt;</ept> 除以 <ph id="ph2">&lt;paramref name="modulus" /&gt;</ph> 後的餘數。</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ModPow(System.Numerics.BigInteger,System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.ModPow%2A&gt;</ph> method evaluates the following expression:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.ModPow%2A&gt;</ph>方法會評估下列運算式：</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ModPow(System.Numerics.BigInteger,System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>(baseValue ^ exponent) Mod modulus</source>
          <target state="translated">(baseValue ^ 指數)Mod 的模數</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ModPow(System.Numerics.BigInteger,System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>To perform exponentiation on <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> values without modulus division, use the <ph id="ph2">&lt;xref:System.Numerics.BigInteger.Pow%2A&gt;</ph> method.</source>
          <target state="translated">若要執行上的乘冪<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>值而模數除法不使用<ph id="ph2">&lt;xref:System.Numerics.BigInteger.Pow%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ModPow(System.Numerics.BigInteger,System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The following example provides a simple illustration of calling the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.ModPow%2A&gt;</ph> method.</source>
          <target state="translated">下列範例提供一個簡單的範例，於呼叫<ph id="ph1">&lt;xref:System.Numerics.BigInteger.ModPow%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.ModPow(System.Numerics.BigInteger,System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source><ph id="ph1">&lt;paramref name="modulus" /&gt;</ph> is zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="modulus" /&gt;</ph> 為零。</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.ModPow(System.Numerics.BigInteger,System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source><ph id="ph1">&lt;paramref name="exponent" /&gt;</ph> is negative.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="exponent" /&gt;</ph> 為負。</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Multiply(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The first number to multiply.</source>
          <target state="translated">要相乘的第一個數字。</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Multiply(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The second number to multiply.</source>
          <target state="translated">要相乘的第二個數字。</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Multiply(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Returns the product of two <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> values.</source>
          <target state="translated">傳回兩個 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 值的乘積。</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Multiply(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The product of the <ph id="ph1">&lt;paramref name="left" /&gt;</ph> and <ph id="ph2">&lt;paramref name="right" /&gt;</ph> parameters.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="left" /&gt;</ph> 和 <ph id="ph2">&lt;paramref name="right" /&gt;</ph> 參數的乘積。</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Multiply(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Multiply%2A&gt;</ph> method is implemented for languages that do not support operator overloading.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.Multiply%2A&gt;</ph>方法實作不支援運算子多載的語言。</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Multiply(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Its behavior is identical to multiplication using the multiplication operator.</source>
          <target state="translated">其行為等同於使用乘法運算子的乘法。</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Multiply(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>In addition, the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Multiply%2A&gt;</ph> method is a useful substitute for the multiplication operator when instantiating a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> variable by assigning it a product that results from multiplication, as shown in the following example.</source>
          <target state="translated">此外，<ph id="ph1">&lt;xref:System.Numerics.BigInteger.Multiply%2A&gt;</ph>具現化時，方法是乘法運算子的實用替代<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>變數所指定產品所產生的乘法，如下列範例所示。</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Multiply(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>If necessary, this method automatically performs implicit conversion of other integral types to <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> objects.</source>
          <target state="translated">如果有必要，這個方法會自動執行以其他整數類資料類型的隱含轉換<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Multiply(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>This is illustrated in the example in the next section, where the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Multiply%2A&gt;</ph> method is passed two <ph id="ph2">&lt;xref:System.Int64&gt;</ph> values.</source>
          <target state="translated">這下一節中的範例中所述其中<ph id="ph1">&lt;xref:System.Numerics.BigInteger.Multiply%2A&gt;</ph>方法會傳遞兩個<ph id="ph2">&lt;xref:System.Int64&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Multiply(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The following example tries to perform multiplication with two long integers.</source>
          <target state="translated">下列範例會嘗試執行乘法與兩個長整數。</target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Multiply(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Because the result exceeds the range of a long integer, an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> is thrown, and the <ph id="ph2">&lt;xref:System.Numerics.BigInteger.Multiply%2A&gt;</ph> method is called to handle the multiplication.</source>
          <target state="translated">因為結果超出範圍的長整數<ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>擲回，而<ph id="ph2">&lt;xref:System.Numerics.BigInteger.Multiply%2A&gt;</ph>方法會呼叫處理乘法運算。</target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Multiply(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Note that C# requires that you use either the <ph id="ph1">`checked`</ph> keyword (as in this example) or the <ph id="ph2">`/checked+`</ph> compiler option to make sure an exception is thrown on a numeric overflow.</source>
          <target state="translated">請注意，C# 需要您使用 <ph id="ph1">`checked`</ph>關鍵字 （如此範例所示） 或<ph id="ph2">`/checked+`</ph>編譯器選項，請確定數值溢位會擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Negate(System.Numerics.BigInteger)">
          <source>The value to negate.</source>
          <target state="translated">要變換正負號的值。</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Negate(System.Numerics.BigInteger)">
          <source>Negates a specified <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value.</source>
          <target state="translated">將指定的 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 值變換正負號。</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Negate(System.Numerics.BigInteger)">
          <source>The result of the <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parameter multiplied by negative one (-1).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> 參數乘以負一 (-1) 的結果。</target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Negate(System.Numerics.BigInteger)">
          <source>Negation obtains the additive inverse of a number.</source>
          <target state="translated">否定取得之數字的加法反元素。</target>       </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Negate(System.Numerics.BigInteger)">
          <source>The additive inverse of a number is a number that produces a value of zero when it is added to the original number.</source>
          <target state="translated">數字的加法反元素為它加入至原始的編號時，會產生的值為零的數字。</target>       </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Negate(System.Numerics.BigInteger)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Negate%2A&gt;</ph> method is implemented for languages that do not support custom operators.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.Negate%2A&gt;</ph>方法實作不支援自訂運算子的語言。</target>       </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Negate(System.Numerics.BigInteger)">
          <source>Its behavior is identical to negation using the unary negation operator.</source>
          <target state="translated">其行為等同於使用一元負運算子的否定運算。</target>       </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Negate(System.Numerics.BigInteger)">
          <source>In addition, the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Negate%2A&gt;</ph> method is a useful substitute for the negation operator when instantiating a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> variable, as shown in the following example.</source>
          <target state="translated">此外，<ph id="ph1">&lt;xref:System.Numerics.BigInteger.Negate%2A&gt;</ph>方法在具現化時，負運算子的實用替代方案<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>變數，如下列範例所示。</target>       </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Negate(System.Numerics.BigInteger)">
          <source>The following example illustrates three ways to negate the value of a <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> object.</source>
          <target state="translated">下列範例說明要變換正負號的值的三種方式<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve" uid="P:System.Numerics.BigInteger.One">
          <source>Gets a value that represents the number one (1).</source>
          <target state="translated">取得表示數字一 (1) 的值。</target>       </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.BigInteger.One">
          <source>An object whose value is one (1).</source>
          <target state="translated">值為一 (1) 的物件。</target>       </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.BigInteger.One">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.One%2A&gt;</ph> property is usually used to compare a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value to 1 or to assign 1 to a <ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.One%2A&gt;</ph>屬性通常用來比較<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值為 1，或指派 1 到<ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Addition(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The first value to add.</source>
          <target state="translated">要相加的第一個值。</target>       </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Addition(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The second value to add.</source>
          <target state="translated">要相加的第二個值。</target>       </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Addition(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Adds the values of two specified <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> objects.</source>
          <target state="translated">兩個指定之 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 物件的值相加。</target>       </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Addition(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The sum of <ph id="ph1">&lt;paramref name="left" /&gt;</ph> and <ph id="ph2">&lt;paramref name="right" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="left" /&gt;</ph> 和 <ph id="ph2">&lt;paramref name="right" /&gt;</ph> 的總和。</target>       </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Addition(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Addition%2A&gt;</ph> method defines the addition operation for <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Addition%2A&gt;</ph>方法定義加法運算，如<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Addition(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>It enables code such as the following:</source>
          <target state="translated">它可讓程式碼如下所示：</target>       </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Addition(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Languages that do not support custom operators can call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Add%2A&gt;</ph> method instead.</source>
          <target state="translated">不支援自訂運算子的語言可以呼叫<ph id="ph1">&lt;xref:System.Numerics.BigInteger.Add%2A&gt;</ph>方法改為。</target>       </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_BitwiseAnd(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The first value.</source>
          <target state="translated">第一個值。</target>       </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_BitwiseAnd(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The second value.</source>
          <target state="translated">第二個值。</target>       </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_BitwiseAnd(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Performs a bitwise <ph id="ph1">&lt;see langword="And" /&gt;</ph> operation on two <ph id="ph2">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> values.</source>
          <target state="translated">對兩個 <ph id="ph2">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 值執行位元 <ph id="ph1">&lt;see langword="And" /&gt;</ph> 運算。</target>       </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_BitwiseAnd(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The result of the bitwise <ph id="ph1">&lt;see langword="And" /&gt;</ph> operation.</source>
          <target state="translated">位元 <ph id="ph1">&lt;see langword="And" /&gt;</ph> 運算的結果。</target>       </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_BitwiseAnd(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_BitwiseAnd%2A&gt;</ph> method defines the bitwise <ph id="ph2">`And`</ph> operation for <ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_BitwiseAnd%2A&gt;</ph>方法所定義的位元<ph id="ph2">`And`</ph>作業<ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_BitwiseAnd(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The bitwise <ph id="ph1">`And`</ph> operation sets a result bit only if the corresponding bits in <ph id="ph2">`left`</ph> and <ph id="ph3">`right`</ph> are also set, as shown in the following table.</source>
          <target state="translated">位元<ph id="ph1">`And`</ph>作業可設定的結果位元只有當對應的位元<ph id="ph2">`left`</ph>和<ph id="ph3">`right`</ph>也會設定下, 表所示。</target>       </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_BitwiseAnd(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Bit in <ph id="ph1">`left`</ph></source>
          <target state="translated">位元 <ph id="ph1">`left`</ph></target>       </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_BitwiseAnd(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Bit in <ph id="ph1">`right`</ph></source>
          <target state="translated">位元 <ph id="ph1">`right`</ph></target>       </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_BitwiseAnd(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Bit in result</source>
          <target state="translated">在結果中的位元</target>       </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_BitwiseAnd(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_BitwiseAnd(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_BitwiseAnd(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_BitwiseAnd(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>1</source>
          <target state="translated">1</target>       </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_BitwiseAnd(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_BitwiseAnd(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_BitwiseAnd(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>1</source>
          <target state="translated">1</target>       </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_BitwiseAnd(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>1</source>
          <target state="translated">1</target>       </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_BitwiseAnd(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>1</source>
          <target state="translated">1</target>       </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_BitwiseAnd(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_BitwiseAnd(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>1</source>
          <target state="translated">1</target>       </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_BitwiseAnd(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_BitwiseAnd(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_BitwiseAnd%2A&gt;</ph> method enables code such as the following:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_BitwiseAnd%2A&gt;</ph>方法可讓程式碼如下所示：</target>       </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_BitwiseAnd(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_BitwiseAnd%2A&gt;</ph> method performs the bitwise <ph id="ph2">`And`</ph> operation on two <ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph> values as if they were both in two's complement representation with virtual sign extension.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_BitwiseAnd%2A&gt;</ph>方法會執行位元<ph id="ph2">`And`</ph>在兩個作業<ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph>就如同在二的補數具有表示虛擬正負號的值。</target>       </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_BitwiseOr(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The first value.</source>
          <target state="translated">第一個值。</target>       </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_BitwiseOr(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The second value.</source>
          <target state="translated">第二個值。</target>       </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_BitwiseOr(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Performs a bitwise <ph id="ph1">&lt;see langword="Or" /&gt;</ph> operation on two <ph id="ph2">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> values.</source>
          <target state="translated">對兩個 <ph id="ph2">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 值執行位元 <ph id="ph1">&lt;see langword="Or" /&gt;</ph> 運算。</target>       </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_BitwiseOr(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The result of the bitwise <ph id="ph1">&lt;see langword="Or" /&gt;</ph> operation.</source>
          <target state="translated">位元 <ph id="ph1">&lt;see langword="Or" /&gt;</ph> 運算的結果。</target>       </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_BitwiseOr(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_BitwiseOr%2A&gt;</ph> method defines the bitwise <ph id="ph2">`Or`</ph> operation for <ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_BitwiseOr%2A&gt;</ph>方法所定義的位元<ph id="ph2">`Or`</ph>作業<ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_BitwiseOr(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The bitwise <ph id="ph1">`Or`</ph> operation sets a result bit only if either or both of the corresponding bits in <ph id="ph2">`left`</ph> and <ph id="ph3">`right`</ph> are set, as shown in the following table.</source>
          <target state="translated">位元<ph id="ph1">`Or`</ph>作業可設定的結果位元只有當一個或兩個對應位元<ph id="ph2">`left`</ph>和<ph id="ph3">`right`</ph>設定下, 表所示。</target>       </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_BitwiseOr(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Bit in <ph id="ph1">`left`</ph></source>
          <target state="translated">位元 <ph id="ph1">`left`</ph></target>       </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_BitwiseOr(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Bit in <ph id="ph1">`right`</ph></source>
          <target state="translated">位元 <ph id="ph1">`right`</ph></target>       </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_BitwiseOr(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Bit in result</source>
          <target state="translated">在結果中的位元</target>       </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_BitwiseOr(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_BitwiseOr(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_BitwiseOr(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_BitwiseOr(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>1</source>
          <target state="translated">1</target>       </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_BitwiseOr(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_BitwiseOr(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>1</source>
          <target state="translated">1</target>       </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_BitwiseOr(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>1</source>
          <target state="translated">1</target>       </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_BitwiseOr(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>1</source>
          <target state="translated">1</target>       </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_BitwiseOr(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>1</source>
          <target state="translated">1</target>       </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_BitwiseOr(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_BitwiseOr(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>1</source>
          <target state="translated">1</target>       </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_BitwiseOr(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>1</source>
          <target state="translated">1</target>       </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_BitwiseOr(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_BitwiseOr%2A&gt;</ph> method enables code such as the following:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_BitwiseOr%2A&gt;</ph>方法可讓程式碼如下所示：</target>       </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_BitwiseOr(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_BitwiseOr%2A&gt;</ph> method performs the bitwise <ph id="ph2">`Or`</ph> operation on two <ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph> values as if they were both in two's complement representation with virtual sign extension.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_BitwiseOr%2A&gt;</ph>方法會執行位元<ph id="ph2">`Or`</ph>在兩個作業<ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph>就如同在二的補數具有表示虛擬正負號的值。</target>       </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Decrement(System.Numerics.BigInteger)">
          <source>The value to decrement.</source>
          <target state="translated">要遞減的值。</target>       </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Decrement(System.Numerics.BigInteger)">
          <source>Decrements a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value by 1.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 值遞減 1。</target>       </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Decrement(System.Numerics.BigInteger)">
          <source>The value of the <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parameter decremented by 1.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> 參數遞減 1 後的值。</target>       </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Decrement(System.Numerics.BigInteger)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Decrement%2A&gt;</ph> method defines the decrement operation for <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Decrement%2A&gt;</ph>方法定義的遞減作業<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Decrement(System.Numerics.BigInteger)">
          <source>It enables code such as the following:</source>
          <target state="translated">它可讓程式碼如下所示：</target>       </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Decrement(System.Numerics.BigInteger)">
          <source>Languages that do not support custom operators can call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Subtract%2A&gt;</ph> method instead.</source>
          <target state="translated">不支援自訂運算子的語言可以呼叫<ph id="ph1">&lt;xref:System.Numerics.BigInteger.Subtract%2A&gt;</ph>方法改為。</target>       </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Decrement(System.Numerics.BigInteger)">
          <source>For example:</source>
          <target state="translated">例如: </target>       </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Decrement(System.Numerics.BigInteger)">
          <source>Because <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> objects are immutable, the <ph id="ph2">&lt;xref:System.Numerics.BigInteger.op_Decrement%2A&gt;</ph> operator creates a new <ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph> object whose value is one less than the <ph id="ph4">&lt;xref:System.Numerics.BigInteger&gt;</ph> object represented by <ph id="ph5">`value`</ph>.</source>
          <target state="translated">因為<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>物件是不可變的<ph id="ph2">&lt;xref:System.Numerics.BigInteger.op_Decrement%2A&gt;</ph>運算子會建立新<ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph>其值是其中一個物件小於<ph id="ph4">&lt;xref:System.Numerics.BigInteger&gt;</ph>物件所代表<ph id="ph5">`value`</ph>。</target>       </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Decrement(System.Numerics.BigInteger)">
          <source>This means that repeated calls to <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Decrement%2A&gt;</ph> may be expensive.</source>
          <target state="translated">這表示重複呼叫<ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Decrement%2A&gt;</ph>可能很昂貴。</target>       </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Decrement(System.Numerics.BigInteger)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Subtract%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">這個運算子的對等方法是<ph id="ph1">&lt;xref:System.Numerics.BigInteger.Subtract%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Division(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The value to be divided.</source>
          <target state="translated">做為被除數的值。</target>       </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Division(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The value to divide by.</source>
          <target state="translated">做為除數的值。</target>       </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Division(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Divides a specified <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value by another specified <ph id="ph2">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value by using integer division.</source>
          <target state="translated">使用整數除法，將指定的 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 值除以另一個指定的 <ph id="ph2">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 值。</target>       </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Division(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The integral result of the division.</source>
          <target state="translated">相除的整數結果。</target>       </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Division(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Division%2A&gt;</ph> method defines the division operation for <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Division%2A&gt;</ph>方法定義的除法作業<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Division(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>It enables code such as the following:</source>
          <target state="translated">它可讓程式碼如下所示：</target>       </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Division(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Languages that do not support custom operators and operator overloading can call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Divide%2A&gt;</ph> method instead.</source>
          <target state="translated">不支援自訂運算子和運算子多載的語言可以呼叫<ph id="ph1">&lt;xref:System.Numerics.BigInteger.Divide%2A&gt;</ph>方法改為。</target>       </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Division(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Divide%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">這個運算子的對等方法是 <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Divide%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Division(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The following example creates an array of <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated">下列範例會建立的陣列<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Division(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>It then uses each element as the quotient in a division operation that uses the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Divide%2A&gt;</ph> method, the division operator (/), and the <ph id="ph2">&lt;xref:System.Numerics.BigInteger.DivRem%2A&gt;</ph> method.</source>
          <target state="translated">然後它會使用每個項目中使用的除法運算的商數為<ph id="ph1">&lt;xref:System.Numerics.BigInteger.Divide%2A&gt;</ph>方法，除法運算子 （/），而<ph id="ph2">&lt;xref:System.Numerics.BigInteger.DivRem%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Division(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source><ph id="ph1">&lt;paramref name="divisor" /&gt;</ph> is 0 (zero).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="divisor" /&gt;</ph> 是 0 (零)。</target>       </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve" uid="T:System.Numerics.BigInteger">
          <source>Returns a value that indicates whether two values are equal.</source>
          <target state="translated">傳回值，這個值表示兩個值是否相等。</target>       </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Equality(System.Int64,System.Numerics.BigInteger)">
          <source>The first value to compare.</source>
          <target state="translated">要比較的第一個值。</target>       </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Equality(System.Int64,System.Numerics.BigInteger)">
          <source>The second value to compare.</source>
          <target state="translated">要比較的第二個值。</target>       </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Equality(System.Int64,System.Numerics.BigInteger)">
          <source>Returns a value that indicates whether a signed long integer value and a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value are equal.</source>
          <target state="translated">傳回值，這個值表示帶正負號長整數值與 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 值是否相等。</target>       </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Equality(System.Int64,System.Numerics.BigInteger)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;paramref name="left" /&gt;</ph> and <ph id="ph3">&lt;paramref name="right" /&gt;</ph> parameters have the same value; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph2">&lt;paramref name="left" /&gt;</ph> 與 <ph id="ph3">&lt;paramref name="right" /&gt;</ph> 參數有相同的值，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Equality(System.Int64,System.Numerics.BigInteger)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Equality%28System.Int64%2CSystem.Numerics.BigInteger%29&gt;</ph> method defines the equality comparison operation for <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Equality%28System.Int64%2CSystem.Numerics.BigInteger%29&gt;</ph>方法定義的相等比較運算<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Equality(System.Int64,System.Numerics.BigInteger)">
          <source>It enables code such as the following:</source>
          <target state="translated">它可讓程式碼如下所示：</target>       </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Equality(System.Int64,System.Numerics.BigInteger)">
          <source>Languages that do not support custom operators can call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Equals%28System.Int64%29?displayProperty=nameWithType&gt;</ph> instance method instead.</source>
          <target state="translated">不支援自訂運算子的語言可以呼叫<ph id="ph1">&lt;xref:System.Numerics.BigInteger.Equals%28System.Int64%29?displayProperty=nameWithType&gt;</ph>改為執行個體方法。</target>       </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Equality(System.Int64,System.Numerics.BigInteger)">
          <source>If <ph id="ph1">`left`</ph> is a <ph id="ph2">&lt;xref:System.Byte&gt;</ph>, <ph id="ph3">&lt;xref:System.Int16&gt;</ph>, <ph id="ph4">&lt;xref:System.Int32&gt;</ph>, <ph id="ph5">&lt;xref:System.SByte&gt;</ph>, <ph id="ph6">&lt;xref:System.UInt16&gt;</ph>, or <ph id="ph7">&lt;xref:System.UInt32&gt;</ph> value, it is implicitly converted to an <ph id="ph8">&lt;xref:System.Int64&gt;</ph> value when the operation is performed.</source>
          <target state="translated">如果<ph id="ph1">`left`</ph>是<ph id="ph2">&lt;xref:System.Byte&gt;</ph>， <ph id="ph3">&lt;xref:System.Int16&gt;</ph>， <ph id="ph4">&lt;xref:System.Int32&gt;</ph>， <ph id="ph5">&lt;xref:System.SByte&gt;</ph>， <ph id="ph6">&lt;xref:System.UInt16&gt;</ph>，或<ph id="ph7">&lt;xref:System.UInt32&gt;</ph>值，它會隱含地轉換成<ph id="ph8">&lt;xref:System.Int64&gt;</ph>時執行作業的值。</target>       </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Equality(System.Int64,System.Numerics.BigInteger)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Equals%28System.Int64%29?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">這個運算子的對等方法是<ph id="ph1">&lt;xref:System.Numerics.BigInteger.Equals%28System.Int64%29?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Equality(System.Numerics.BigInteger,System.Int64)">
          <source>The first value to compare.</source>
          <target state="translated">要比較的第一個值。</target>       </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Equality(System.Numerics.BigInteger,System.Int64)">
          <source>The second value to compare.</source>
          <target state="translated">要比較的第二個值。</target>       </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Equality(System.Numerics.BigInteger,System.Int64)">
          <source>Returns a value that indicates whether a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value and a signed long integer value are equal.</source>
          <target state="translated">傳回值，這個值表示 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 值與帶正負號長整數值是否相等。</target>       </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Equality(System.Numerics.BigInteger,System.Int64)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;paramref name="left" /&gt;</ph> and <ph id="ph3">&lt;paramref name="right" /&gt;</ph> parameters have the same value; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph2">&lt;paramref name="left" /&gt;</ph> 與 <ph id="ph3">&lt;paramref name="right" /&gt;</ph> 參數有相同的值，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Equality(System.Numerics.BigInteger,System.Int64)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Equality%28System.Numerics.BigInteger%2CSystem.Int64%29&gt;</ph> method defines the equality comparison operation for <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Equality%28System.Numerics.BigInteger%2CSystem.Int64%29&gt;</ph>方法定義的相等比較運算<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Equality(System.Numerics.BigInteger,System.Int64)">
          <source>It enables code such as the following:</source>
          <target state="translated">它可讓程式碼如下所示：</target>       </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Equality(System.Numerics.BigInteger,System.Int64)">
          <source>Languages that do not support custom operators can call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Equals%28System.Int64%29?displayProperty=nameWithType&gt;</ph> instance method instead.</source>
          <target state="translated">不支援自訂運算子的語言可以呼叫<ph id="ph1">&lt;xref:System.Numerics.BigInteger.Equals%28System.Int64%29?displayProperty=nameWithType&gt;</ph>改為執行個體方法。</target>       </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Equality(System.Numerics.BigInteger,System.Int64)">
          <source>If <ph id="ph1">`right`</ph> is a <ph id="ph2">&lt;xref:System.Byte&gt;</ph>, <ph id="ph3">&lt;xref:System.Int16&gt;</ph>, <ph id="ph4">&lt;xref:System.Int32&gt;</ph>, <ph id="ph5">&lt;xref:System.SByte&gt;</ph>, <ph id="ph6">&lt;xref:System.UInt16&gt;</ph>, or <ph id="ph7">&lt;xref:System.UInt32&gt;</ph> value, it is implicitly converted to an <ph id="ph8">&lt;xref:System.Int64&gt;</ph> value when the operation is performed.</source>
          <target state="translated">如果<ph id="ph1">`right`</ph>是<ph id="ph2">&lt;xref:System.Byte&gt;</ph>， <ph id="ph3">&lt;xref:System.Int16&gt;</ph>， <ph id="ph4">&lt;xref:System.Int32&gt;</ph>， <ph id="ph5">&lt;xref:System.SByte&gt;</ph>， <ph id="ph6">&lt;xref:System.UInt16&gt;</ph>，或<ph id="ph7">&lt;xref:System.UInt32&gt;</ph>值，它會隱含地轉換成<ph id="ph8">&lt;xref:System.Int64&gt;</ph>時執行作業的值。</target>       </trans-unit>
        <trans-unit id="677" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Equality(System.Numerics.BigInteger,System.Int64)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Equals%28System.Int64%29?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">這個運算子的對等方法是<ph id="ph1">&lt;xref:System.Numerics.BigInteger.Equals%28System.Int64%29?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="678" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Equality(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The first value to compare.</source>
          <target state="translated">要比較的第一個值。</target>       </trans-unit>
        <trans-unit id="679" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Equality(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The second value to compare.</source>
          <target state="translated">要比較的第二個值。</target>       </trans-unit>
        <trans-unit id="680" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Equality(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Returns a value that indicates whether the values of two <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> objects are equal.</source>
          <target state="translated">傳回值，這個值表示兩個 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 物件的值是否相等。</target>       </trans-unit>
        <trans-unit id="681" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Equality(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;paramref name="left" /&gt;</ph> and <ph id="ph3">&lt;paramref name="right" /&gt;</ph> parameters have the same value; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph2">&lt;paramref name="left" /&gt;</ph> 與 <ph id="ph3">&lt;paramref name="right" /&gt;</ph> 參數有相同的值，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="682" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Equality(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Equality%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29&gt;</ph> method defines the operation of the equality operator for <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Equality%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29&gt;</ph>方法定義的等號比較運算子的作業<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="683" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Equality(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>It enables code such as the following:</source>
          <target state="translated">它可讓程式碼如下所示：</target>       </trans-unit>
        <trans-unit id="684" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Equality(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Languages that do not support custom operators can call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Equals%28System.Numerics.BigInteger%29?displayProperty=nameWithType&gt;</ph> instance method instead.</source>
          <target state="translated">不支援自訂運算子的語言可以呼叫<ph id="ph1">&lt;xref:System.Numerics.BigInteger.Equals%28System.Numerics.BigInteger%29?displayProperty=nameWithType&gt;</ph>改為執行個體方法。</target>       </trans-unit>
        <trans-unit id="685" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Equality(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Equals%28System.Numerics.BigInteger%29?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">這個運算子的對等方法是<ph id="ph1">&lt;xref:System.Numerics.BigInteger.Equals%28System.Numerics.BigInteger%29?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="686" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Equality(System.Numerics.BigInteger,System.UInt64)">
          <source>The first value to compare.</source>
          <target state="translated">要比較的第一個值。</target>       </trans-unit>
        <trans-unit id="687" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Equality(System.Numerics.BigInteger,System.UInt64)">
          <source>The second value to compare.</source>
          <target state="translated">要比較的第二個值。</target>       </trans-unit>
        <trans-unit id="688" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Equality(System.Numerics.BigInteger,System.UInt64)">
          <source>Returns a value that indicates whether a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value and an unsigned long integer value are equal.</source>
          <target state="translated">傳回值，這個值表示 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 值與不帶正負號長整數值是否相等。</target>       </trans-unit>
        <trans-unit id="689" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Equality(System.Numerics.BigInteger,System.UInt64)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;paramref name="left" /&gt;</ph> and <ph id="ph3">&lt;paramref name="right" /&gt;</ph> parameters have the same value; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph2">&lt;paramref name="left" /&gt;</ph> 與 <ph id="ph3">&lt;paramref name="right" /&gt;</ph> 參數有相同的值，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="690" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Equality(System.Numerics.BigInteger,System.UInt64)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Equality%28System.Numerics.BigInteger%2CSystem.UInt64%29&gt;</ph> method defines the equality comparison operation for <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Equality%28System.Numerics.BigInteger%2CSystem.UInt64%29&gt;</ph>方法定義的相等比較運算<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="691" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Equality(System.Numerics.BigInteger,System.UInt64)">
          <source>It enables code such as the following:</source>
          <target state="translated">它可讓程式碼如下所示：</target>       </trans-unit>
        <trans-unit id="692" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Equality(System.Numerics.BigInteger,System.UInt64)">
          <source>Languages that do not support custom operators can call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Equals%28System.UInt64%29?displayProperty=nameWithType&gt;</ph> instance method instead.</source>
          <target state="translated">不支援自訂運算子的語言可以呼叫<ph id="ph1">&lt;xref:System.Numerics.BigInteger.Equals%28System.UInt64%29?displayProperty=nameWithType&gt;</ph>改為執行個體方法。</target>       </trans-unit>
        <trans-unit id="693" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Equality(System.UInt64,System.Numerics.BigInteger)">
          <source>The first value to compare.</source>
          <target state="translated">要比較的第一個值。</target>       </trans-unit>
        <trans-unit id="694" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Equality(System.UInt64,System.Numerics.BigInteger)">
          <source>The second value to compare.</source>
          <target state="translated">要比較的第二個值。</target>       </trans-unit>
        <trans-unit id="695" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Equality(System.UInt64,System.Numerics.BigInteger)">
          <source>Returns a value that indicates whether an unsigned long integer value and a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value are equal.</source>
          <target state="translated">傳回值，這個值表示不帶正負號長整數值與 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 值是否相等。</target>       </trans-unit>
        <trans-unit id="696" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Equality(System.UInt64,System.Numerics.BigInteger)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;paramref name="left" /&gt;</ph> and <ph id="ph3">&lt;paramref name="right" /&gt;</ph> parameters have the same value; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph2">&lt;paramref name="left" /&gt;</ph> 與 <ph id="ph3">&lt;paramref name="right" /&gt;</ph> 參數有相同的值，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="697" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Equality(System.UInt64,System.Numerics.BigInteger)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Equality%28System.UInt64%2CSystem.Numerics.BigInteger%29&gt;</ph> method defines the equality comparison operation for <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Equality%28System.UInt64%2CSystem.Numerics.BigInteger%29&gt;</ph>方法定義的相等比較運算<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="698" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Equality(System.UInt64,System.Numerics.BigInteger)">
          <source>It enables code such as the following:</source>
          <target state="translated">它可讓程式碼如下所示：</target>       </trans-unit>
        <trans-unit id="699" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Equality(System.UInt64,System.Numerics.BigInteger)">
          <source>Languages that do not support custom operators can call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Equals%28System.UInt64%29?displayProperty=nameWithType&gt;</ph> instance method instead.</source>
          <target state="translated">不支援自訂運算子的語言可以呼叫<ph id="ph1">&lt;xref:System.Numerics.BigInteger.Equals%28System.UInt64%29?displayProperty=nameWithType&gt;</ph>改為執行個體方法。</target>       </trans-unit>
        <trans-unit id="700" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_ExclusiveOr(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The first value.</source>
          <target state="translated">第一個值。</target>       </trans-unit>
        <trans-unit id="701" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_ExclusiveOr(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The second value.</source>
          <target state="translated">第二個值。</target>       </trans-unit>
        <trans-unit id="702" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_ExclusiveOr(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Performs a bitwise exclusive <ph id="ph1">&lt;see langword="Or" /&gt;</ph> (<ph id="ph2">&lt;see langword="XOr" /&gt;</ph>) operation on two <ph id="ph3">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> values.</source>
          <target state="translated">對兩個 <ph id="ph3">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 值執行位元互斥 <ph id="ph1">&lt;see langword="Or" /&gt;</ph> (<ph id="ph2">&lt;see langword="XOr" /&gt;</ph>) 運算。</target>       </trans-unit>
        <trans-unit id="703" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_ExclusiveOr(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The result of the bitwise <ph id="ph1">&lt;see langword="Or" /&gt;</ph> operation.</source>
          <target state="translated">位元 <ph id="ph1">&lt;see langword="Or" /&gt;</ph> 運算的結果。</target>       </trans-unit>
        <trans-unit id="704" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_ExclusiveOr(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The result of a bitwise exclusive <ph id="ph1">`Or`</ph> operation is <ph id="ph2">`true`</ph> if the values of the two bits are different; otherwise, it is <ph id="ph3">`false`</ph>.</source>
          <target state="translated">結果的位元互斥<ph id="ph1">`Or`</ph>作業<ph id="ph2">`true`</ph>如果兩個位元的值不同，否則，它是<ph id="ph3">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="705" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_ExclusiveOr(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The following table illustrates the exclusive <ph id="ph1">`Or`</ph> operation.</source>
          <target state="translated">下表說明專用<ph id="ph1">`Or`</ph>作業。</target>       </trans-unit>
        <trans-unit id="706" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_ExclusiveOr(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Bit x in <ph id="ph1">`left`</ph></source>
          <target state="translated">中的位元 x <ph id="ph1">`left`</ph></target>       </trans-unit>
        <trans-unit id="707" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_ExclusiveOr(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Bit x in <ph id="ph1">`right`</ph></source>
          <target state="translated">中的位元 x <ph id="ph1">`right`</ph></target>       </trans-unit>
        <trans-unit id="708" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_ExclusiveOr(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Return value</source>
          <target state="translated">傳回值</target>       </trans-unit>
        <trans-unit id="709" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_ExclusiveOr(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="710" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_ExclusiveOr(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="711" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_ExclusiveOr(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="712" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_ExclusiveOr(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="713" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_ExclusiveOr(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>1</source>
          <target state="translated">1</target>       </trans-unit>
        <trans-unit id="714" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_ExclusiveOr(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>1</source>
          <target state="translated">1</target>       </trans-unit>
        <trans-unit id="715" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_ExclusiveOr(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>1</source>
          <target state="translated">1</target>       </trans-unit>
        <trans-unit id="716" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_ExclusiveOr(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="717" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_ExclusiveOr(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>1</source>
          <target state="translated">1</target>       </trans-unit>
        <trans-unit id="718" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_ExclusiveOr(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>1</source>
          <target state="translated">1</target>       </trans-unit>
        <trans-unit id="719" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_ExclusiveOr(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>1</source>
          <target state="translated">1</target>       </trans-unit>
        <trans-unit id="720" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_ExclusiveOr(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="721" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_ExclusiveOr(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_ExclusiveOr%2A&gt;</ph> method enables code such as the following:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_ExclusiveOr%2A&gt;</ph>方法可讓程式碼如下所示：</target>       </trans-unit>
        <trans-unit id="722" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_ExclusiveOr(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_ExclusiveOr%2A&gt;</ph> method performs the bitwise exclusive <ph id="ph2">`Or`</ph> operation on two <ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph> values as if they were both in two's complement representation with virtual sign extension.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_ExclusiveOr%2A&gt;</ph>方法會執行位元互斥<ph id="ph2">`Or`</ph>在兩個作業<ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph>就如同在二的補數具有表示虛擬正負號的值。</target>       </trans-unit>
        <trans-unit id="723" translate="yes" xml:space="preserve" uid="T:System.Numerics.BigInteger">
          <source>Defines an explicit conversion between a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> object and another type.</source>
          <target state="translated">定義 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 物件與另一個類型之間的明確轉換。</target>       </trans-unit>
        <trans-unit id="724" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger">
          <source>The value to convert to a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph>.</source>
          <target state="translated">要轉換為 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 的值。</target>       </trans-unit>
        <trans-unit id="725" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger">
          <source>Defines an explicit conversion of a <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> object to a <ph id="ph2">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value.</source>
          <target state="translated">定義從 <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> 物件到 <ph id="ph2">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 值的明確轉換。</target>       </trans-unit>
        <trans-unit id="726" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger">
          <source>An object that contains the value of the <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parameter.</source>
          <target state="translated">物件，包含 <ph id="ph1">&lt;paramref name="value" /&gt;</ph> 參數的值。</target>       </trans-unit>
        <trans-unit id="727" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger">
          <source>Any fractional part of the <ph id="ph1">`value`</ph> parameter is truncated before conversion.</source>
          <target state="translated">任何小數部分<ph id="ph1">`value`</ph>參數會被截斷轉換之前。</target>       </trans-unit>
        <trans-unit id="728" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger">
          <source>The overloads of the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger&gt;</ph> method define the types to which or from which a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> object can be converted.</source>
          <target state="translated">多載<ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger&gt;</ph>方法定義的類型，或從中<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>物件可以轉換。</target>       </trans-unit>
        <trans-unit id="729" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger">
          <source>Because the conversion from <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> to <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> can involve truncating any fractional part of <ph id="ph3">`value`</ph>, language compilers do not perform this conversion automatically.</source>
          <target state="translated">因為從轉換<ph id="ph1">&lt;xref:System.Decimal&gt;</ph>至<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>截斷任何小數部分可包含<ph id="ph3">`value`</ph>，語言編譯器不會自動執行這項轉換。</target>       </trans-unit>
        <trans-unit id="730" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger">
          <source>Instead, they perform the conversion only if a casting operator (in C#) or a conversion function (such as <ph id="ph1">`CType`</ph> in Visual Basic) is used.</source>
          <target state="translated">相反地，它們執行轉換只有轉型運算子 （C# 中） 或轉換函式 (例如<ph id="ph1">`CType`</ph>在 Visual Basic 中) 會使用。</target>       </trans-unit>
        <trans-unit id="731" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger">
          <source>Otherwise, they display a compiler error.</source>
          <target state="translated">否則，它們會顯示編譯器錯誤。</target>       </trans-unit>
        <trans-unit id="732" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger">
          <source>For languages that do not support custom operators, the alternative method is <ph id="ph1">&lt;xref:System.Numerics.BigInteger.%23ctor%28System.Decimal%29?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">不支援自訂運算子的語言，另一種方法是<ph id="ph1">&lt;xref:System.Numerics.BigInteger.%23ctor%28System.Decimal%29?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="733" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger">
          <source>The following example converts the individual elements in an array of <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> values to <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> objects, and then displays the result of each conversion.</source>
          <target state="translated">下列範例會將轉換的陣列中的個別項目<ph id="ph1">&lt;xref:System.Decimal&gt;</ph>值<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>物件，並接著會顯示每個轉換的結果。</target>       </trans-unit>
        <trans-unit id="734" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger">
          <source>Note that any fractional part of a <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> value is truncated during the conversion.</source>
          <target state="translated">請注意任何小數部份<ph id="ph1">&lt;xref:System.Decimal&gt;</ph>轉換時截斷值。</target>       </trans-unit>
        <trans-unit id="735" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Double)~System.Numerics.BigInteger">
          <source>The value to convert to a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph>.</source>
          <target state="translated">要轉換為 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 的值。</target>       </trans-unit>
        <trans-unit id="736" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Double)~System.Numerics.BigInteger">
          <source>Defines an explicit conversion of a <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> value to a <ph id="ph2">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value.</source>
          <target state="translated">定義從 <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> 值到 <ph id="ph2">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 值的明確轉換。</target>       </trans-unit>
        <trans-unit id="737" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Double)~System.Numerics.BigInteger">
          <source>An object that contains the value of the <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parameter.</source>
          <target state="translated">物件，包含 <ph id="ph1">&lt;paramref name="value" /&gt;</ph> 參數的值。</target>       </trans-unit>
        <trans-unit id="738" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Double)~System.Numerics.BigInteger">
          <source>Any fractional part of the <ph id="ph1">`value`</ph> parameter is truncated before conversion.</source>
          <target state="translated">任何小數部分<ph id="ph1">`value`</ph>參數會被截斷轉換之前。</target>       </trans-unit>
        <trans-unit id="739" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Double)~System.Numerics.BigInteger">
          <source>The overloads of the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger&gt;</ph> method define the types to which or from which a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> object can be converted.</source>
          <target state="translated">多載<ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger&gt;</ph>方法定義的類型，或從中<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>物件可以轉換。</target>       </trans-unit>
        <trans-unit id="740" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Double)~System.Numerics.BigInteger">
          <source>Because the conversion from <ph id="ph1">&lt;xref:System.Double&gt;</ph> to <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> can involve truncating any fractional part of <ph id="ph3">`value`</ph>, language compilers do not perform this conversion automatically.</source>
          <target state="translated">因為從轉換<ph id="ph1">&lt;xref:System.Double&gt;</ph>至<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>截斷任何小數部分可包含<ph id="ph3">`value`</ph>，語言編譯器不會自動執行這項轉換。</target>       </trans-unit>
        <trans-unit id="741" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Double)~System.Numerics.BigInteger">
          <source>Instead, they perform the conversion only if a casting operator (in C#) or a conversion function (such as <ph id="ph1">`CType`</ph> in Visual Basic) is used.</source>
          <target state="translated">相反地，它們執行轉換只有轉型運算子 （C# 中） 或轉換函式 (例如<ph id="ph1">`CType`</ph>在 Visual Basic 中) 會使用。</target>       </trans-unit>
        <trans-unit id="742" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Double)~System.Numerics.BigInteger">
          <source>Otherwise, they display a compiler error.</source>
          <target state="translated">否則，它們會顯示編譯器錯誤。</target>       </trans-unit>
        <trans-unit id="743" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Double)~System.Numerics.BigInteger">
          <source>For languages that do not support custom operators, the alternative method is <ph id="ph1">&lt;xref:System.Numerics.BigInteger.%23ctor%28System.Double%29?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">不支援自訂運算子的語言，另一種方法是<ph id="ph1">&lt;xref:System.Numerics.BigInteger.%23ctor%28System.Double%29?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="744" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Double)~System.Numerics.BigInteger">
          <source>The following example converts the individual elements in an array of <ph id="ph1">&lt;xref:System.Double&gt;</ph> values to <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> objects, and then displays the result of each conversion.</source>
          <target state="translated">下列範例會將轉換的陣列中的個別項目<ph id="ph1">&lt;xref:System.Double&gt;</ph>值<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>物件，並接著會顯示每個轉換的結果。</target>       </trans-unit>
        <trans-unit id="745" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Double)~System.Numerics.BigInteger">
          <source>Note that any fractional part of a <ph id="ph1">&lt;xref:System.Double&gt;</ph> value is truncated during the conversion.</source>
          <target state="translated">請注意任何小數部份<ph id="ph1">&lt;xref:System.Double&gt;</ph>轉換時截斷值。</target>       </trans-unit>
        <trans-unit id="746" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Double)~System.Numerics.BigInteger">
          <source>The value of <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <ph id="ph2">&lt;see cref="F:System.Double.NaN" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> 的值是 <ph id="ph2">&lt;see cref="F:System.Double.NaN" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="747" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Double)~System.Numerics.BigInteger">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="748" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Double)~System.Numerics.BigInteger">
          <source>The value of <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <ph id="ph2">&lt;see cref="F:System.Double.PositiveInfinity" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> 的值是 <ph id="ph2">&lt;see cref="F:System.Double.PositiveInfinity" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="749" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Double)~System.Numerics.BigInteger">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="750" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Double)~System.Numerics.BigInteger">
          <source>The value of <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <ph id="ph2">&lt;see cref="F:System.Double.NegativeInfinity" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> 的值是 <ph id="ph2">&lt;see cref="F:System.Double.NegativeInfinity" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="751" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Byte">
          <source>The value to convert to a <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph>.</source>
          <target state="translated">要轉換為 <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> 的值。</target>       </trans-unit>
        <trans-unit id="752" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Byte">
          <source>Defines an explicit conversion of a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> object to an unsigned byte value.</source>
          <target state="translated">定義從 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 物件到不帶正負號位元組值的明確轉換。</target>       </trans-unit>
        <trans-unit id="753" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Byte">
          <source>An object that contains the value of the <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parameter.</source>
          <target state="translated">物件，包含 <ph id="ph1">&lt;paramref name="value" /&gt;</ph> 參數的值。</target>       </trans-unit>
        <trans-unit id="754" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Byte">
          <source>The overloads of the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger&gt;</ph> method define the types to which or from which a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> object can be converted.</source>
          <target state="translated">多載<ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger&gt;</ph>方法定義的類型，或從中<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>物件可以轉換。</target>       </trans-unit>
        <trans-unit id="755" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Byte">
          <source>Language compilers do not perform this conversion automatically because it can involve data loss.</source>
          <target state="translated">語言編譯器不會執行這項轉換會自動因為可能遺失資料。</target>       </trans-unit>
        <trans-unit id="756" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Byte">
          <source>Instead, they perform the conversion only if a casting operator (in C#) or a conversion function (such as <ph id="ph1">`CType`</ph> or <ph id="ph2">`CByte`</ph> in Visual Basic) is used.</source>
          <target state="translated">相反地，它們執行轉換只有轉型運算子 （C# 中） 或轉換函式 (例如<ph id="ph1">`CType`</ph>或<ph id="ph2">`CByte`</ph>在 Visual Basic 中) 會使用。</target>       </trans-unit>
        <trans-unit id="757" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Byte">
          <source>Otherwise, they display a compiler error.</source>
          <target state="translated">否則，它們會顯示編譯器錯誤。</target>       </trans-unit>
        <trans-unit id="758" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Byte">
          <source>Because this operation defines a narrowing conversion, it can throw an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> at run time if the <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value is outside the range of the <ph id="ph3">&lt;xref:System.Byte&gt;</ph> data type.</source>
          <target state="translated">由於這項作業定義縮小轉換，所以它可以擲回<ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>如果在執行階段<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值超出範圍<ph id="ph3">&lt;xref:System.Byte&gt;</ph>資料型別。</target>       </trans-unit>
        <trans-unit id="759" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Byte">
          <source>There is no loss of precision in the resulting <ph id="ph1">&lt;xref:System.Byte&gt;</ph> value if the conversion is successful.</source>
          <target state="translated">不會在產生的有效位數遺失任何<ph id="ph1">&lt;xref:System.Byte&gt;</ph>值，如果轉換成功。</target>       </trans-unit>
        <trans-unit id="760" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Byte">
          <source>The following example illustrates the conversion of <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> to <ph id="ph2">&lt;xref:System.Byte&gt;</ph> values.</source>
          <target state="translated">下列範例說明的轉換<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>至<ph id="ph2">&lt;xref:System.Byte&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="761" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Byte">
          <source>It also handles an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> that is thrown because the <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value is outside the range of the <ph id="ph3">&lt;xref:System.Byte&gt;</ph> data type.</source>
          <target state="translated">它也會處理<ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>因為擲回<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值超出範圍<ph id="ph3">&lt;xref:System.Byte&gt;</ph>資料型別。</target>       </trans-unit>
        <trans-unit id="762" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Byte">
          <source>The value of <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is less than <ph id="ph2">&lt;see cref="F:System.Byte.MinValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> 值小於 <ph id="ph2">&lt;see cref="F:System.Byte.MinValue" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="763" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Byte">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="764" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Byte">
          <source>The value of <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is greater than <ph id="ph2">&lt;see cref="F:System.Byte.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> 值大於 <ph id="ph2">&lt;see cref="F:System.Byte.MaxValue" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="765" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Decimal">
          <source>The value to convert to a <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph>.</source>
          <target state="translated">要轉換為 <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> 的值。</target>       </trans-unit>
        <trans-unit id="766" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Decimal">
          <source>Defines an explicit conversion of a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> object to a <ph id="ph2">&lt;see cref="T:System.Decimal" /&gt;</ph> value.</source>
          <target state="translated">定義從 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 物件到 <ph id="ph2">&lt;see cref="T:System.Decimal" /&gt;</ph> 值的明確轉換。</target>       </trans-unit>
        <trans-unit id="767" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Decimal">
          <source>An object that contains the value of the <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parameter.</source>
          <target state="translated">物件，包含 <ph id="ph1">&lt;paramref name="value" /&gt;</ph> 參數的值。</target>       </trans-unit>
        <trans-unit id="768" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Decimal">
          <source>The overloads of the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger&gt;</ph> method define the types to which or from which a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> object can be converted.</source>
          <target state="translated">多載<ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger&gt;</ph>方法定義的類型，或從中<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>物件可以轉換。</target>       </trans-unit>
        <trans-unit id="769" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Decimal">
          <source>Language compilers do not perform this conversion automatically because it can involve data loss.</source>
          <target state="translated">語言編譯器不會執行這項轉換會自動因為可能遺失資料。</target>       </trans-unit>
        <trans-unit id="770" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Decimal">
          <source>Instead, they perform the conversion only if a casting operator (in C#) or a conversion function (such as <ph id="ph1">`CType`</ph> or <ph id="ph2">`CDec`</ph> in Visual Basic) is used.</source>
          <target state="translated">相反地，它們執行轉換只有轉型運算子 （C# 中） 或轉換函式 (例如<ph id="ph1">`CType`</ph>或<ph id="ph2">`CDec`</ph>在 Visual Basic 中) 會使用。</target>       </trans-unit>
        <trans-unit id="771" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Decimal">
          <source>Because this operation defines a narrowing conversion, it can throw an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> at run time if the <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value is outside the range of the <ph id="ph3">&lt;xref:System.Decimal&gt;</ph> data type.</source>
          <target state="translated">由於這項作業定義縮小轉換，所以它可以擲回<ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>如果在執行階段<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值超出範圍<ph id="ph3">&lt;xref:System.Decimal&gt;</ph>資料型別。</target>       </trans-unit>
        <trans-unit id="772" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Decimal">
          <source>The following example illustrates the conversion of <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> to <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> values.</source>
          <target state="translated">下列範例說明的轉換<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>至<ph id="ph2">&lt;xref:System.Decimal&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="773" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Decimal">
          <source>It also handles an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> that is thrown because the <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value is outside the range of the <ph id="ph3">&lt;xref:System.Decimal&gt;</ph> data type.</source>
          <target state="translated">它也會處理<ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>因為擲回<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值超出範圍<ph id="ph3">&lt;xref:System.Decimal&gt;</ph>資料型別。</target>       </trans-unit>
        <trans-unit id="774" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Decimal">
          <source>The value of <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is less than <ph id="ph2">&lt;see cref="F:System.Decimal.MinValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> 值小於 <ph id="ph2">&lt;see cref="F:System.Decimal.MinValue" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="775" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Decimal">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="776" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Decimal">
          <source>The value of <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is greater than <ph id="ph2">&lt;see cref="F:System.Decimal.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> 值大於 <ph id="ph2">&lt;see cref="F:System.Decimal.MaxValue" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="777" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Double">
          <source>The value to convert to a <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph>.</source>
          <target state="translated">要轉換為 <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> 的值。</target>       </trans-unit>
        <trans-unit id="778" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Double">
          <source>Defines an explicit conversion of a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> object to a <ph id="ph2">&lt;see cref="T:System.Double" /&gt;</ph> value.</source>
          <target state="translated">定義從 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 物件到 <ph id="ph2">&lt;see cref="T:System.Double" /&gt;</ph> 值的明確轉換。</target>       </trans-unit>
        <trans-unit id="779" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Double">
          <source>An object that contains the value of the <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parameter.</source>
          <target state="translated">物件，包含 <ph id="ph1">&lt;paramref name="value" /&gt;</ph> 參數的值。</target>       </trans-unit>
        <trans-unit id="780" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Double">
          <source>The overloads of the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger&gt;</ph> method define the types to which or from which a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> object can be converted.</source>
          <target state="translated">多載<ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger&gt;</ph>方法定義的類型，或從中<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>物件可以轉換。</target>       </trans-unit>
        <trans-unit id="781" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Double">
          <source>Language compilers do not perform this conversion automatically because it can involve data loss.</source>
          <target state="translated">語言編譯器不會執行這項轉換會自動因為可能遺失資料。</target>       </trans-unit>
        <trans-unit id="782" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Double">
          <source>Instead, they perform the conversion only if a casting operator (in C#) or a conversion function (such as <ph id="ph1">`CType`</ph> or <ph id="ph2">`CDbl`</ph> in Visual Basic) is used.</source>
          <target state="translated">相反地，它們執行轉換只有轉型運算子 （C# 中） 或轉換函式 (例如<ph id="ph1">`CType`</ph>或<ph id="ph2">`CDbl`</ph>在 Visual Basic 中) 會使用。</target>       </trans-unit>
        <trans-unit id="783" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Double">
          <source>Because the <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> value can be outside the range of the <ph id="ph2">&lt;xref:System.Double&gt;</ph> data type, this operation is a narrowing conversion.</source>
          <target state="translated">因為<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>值可以是範圍之外的<ph id="ph2">&lt;xref:System.Double&gt;</ph>資料類型，這項作業是縮小轉換。</target>       </trans-unit>
        <trans-unit id="784" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Double">
          <source>If the conversion is unsuccessful, it does not throw an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>.</source>
          <target state="translated">如果轉換失敗，它不會擲回<ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="785" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Double">
          <source>Instead, if the <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> value is less than <ph id="ph2">&lt;xref:System.Double.MinValue?displayProperty=nameWithType&gt;</ph>, the resulting <ph id="ph3">&lt;xref:System.Double&gt;</ph> value is <ph id="ph4">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">相反地，如果<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>值是小於<ph id="ph2">&lt;xref:System.Double.MinValue?displayProperty=nameWithType&gt;</ph>，產生<ph id="ph3">&lt;xref:System.Double&gt;</ph>值是<ph id="ph4">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="786" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Double">
          <source>If the <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> value is greater than <ph id="ph2">&lt;xref:System.Double.MaxValue?displayProperty=nameWithType&gt;</ph>, the resulting <ph id="ph3">&lt;xref:System.Double&gt;</ph> value is <ph id="ph4">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>值大於<ph id="ph2">&lt;xref:System.Double.MaxValue?displayProperty=nameWithType&gt;</ph>，產生<ph id="ph3">&lt;xref:System.Double&gt;</ph>值是<ph id="ph4">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="787" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Double">
          <source>The conversion of a <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> to a <ph id="ph2">&lt;xref:System.Double&gt;</ph> may involve a loss of precision.</source>
          <target state="translated">轉換<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>至<ph id="ph2">&lt;xref:System.Double&gt;</ph>可能會遺失有效位數。</target>       </trans-unit>
        <trans-unit id="788" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Double">
          <source>In some cases, the loss of precision may cause the casting or conversion operation to succeed even if the <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> value is outside the range of the <ph id="ph2">&lt;xref:System.Double&gt;</ph> data type.</source>
          <target state="translated">在某些情況下，遺失有效位數可能會導致轉型或轉換作業成功即使<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>值超出範圍<ph id="ph2">&lt;xref:System.Double&gt;</ph>資料型別。</target>       </trans-unit>
        <trans-unit id="789" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Double">
          <source>The following example provides an illustration.</source>
          <target state="translated">下列範例提供一個實例。</target>       </trans-unit>
        <trans-unit id="790" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Double">
          <source>It assigns the maximum value of a <ph id="ph1">&lt;xref:System.Double&gt;</ph> to two <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> variables, increments one <ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph> variable by 9.999e291, and tests the two variables for equality.</source>
          <target state="translated">它會將指派的最大值<ph id="ph1">&lt;xref:System.Double&gt;</ph>兩個<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>變數，會遞增一<ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph>變數 9.999e291，並測試兩個變數相等。</target>       </trans-unit>
        <trans-unit id="791" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Double">
          <source>As expected, the call to the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Equals%28System.Numerics.BigInteger%29?displayProperty=nameWithType&gt;</ph> method shows that they are unequal.</source>
          <target state="translated">如預期般，呼叫<ph id="ph1">&lt;xref:System.Numerics.BigInteger.Equals%28System.Numerics.BigInteger%29?displayProperty=nameWithType&gt;</ph>方法顯示的不相等。</target>       </trans-unit>
        <trans-unit id="792" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Double">
          <source>However, the conversion of the larger <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> value back to a <ph id="ph2">&lt;xref:System.Double&gt;</ph> succeeds, although the <ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph> value now exceeds <ph id="ph4">&lt;xref:System.Double.MaxValue?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">不過，較大的轉換<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>值傳回到<ph id="ph2">&lt;xref:System.Double&gt;</ph>成功，雖然<ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph>值現在超過<ph id="ph4">&lt;xref:System.Double.MaxValue?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="793" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Double">
          <source>The following example illustrates the conversion of <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> to <ph id="ph2">&lt;xref:System.Double&gt;</ph> values.</source>
          <target state="translated">下列範例說明的轉換<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>至<ph id="ph2">&lt;xref:System.Double&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="794" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int16">
          <source>The value to convert to a 16-bit signed integer.</source>
          <target state="translated">要轉換為 16 位元帶正負號整數的值。</target>       </trans-unit>
        <trans-unit id="795" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int16">
          <source>Defines an explicit conversion of a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> object to a 16-bit signed integer value.</source>
          <target state="translated">定義從 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 物件到 16 位元帶正負號整數值的明確轉換。</target>       </trans-unit>
        <trans-unit id="796" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int16">
          <source>An object that contains the value of the <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parameter.</source>
          <target state="translated">物件，包含 <ph id="ph1">&lt;paramref name="value" /&gt;</ph> 參數的值。</target>       </trans-unit>
        <trans-unit id="797" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int16">
          <source>The overloads of the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger&gt;</ph> method define the types to which or from which a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> object can be converted.</source>
          <target state="translated">多載<ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger&gt;</ph>方法定義的類型，或從中<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>物件可以轉換。</target>       </trans-unit>
        <trans-unit id="798" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int16">
          <source>Language compilers do not perform this conversion automatically because it can involve data loss.</source>
          <target state="translated">語言編譯器不會執行這項轉換會自動因為可能遺失資料。</target>       </trans-unit>
        <trans-unit id="799" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int16">
          <source>Instead, they perform the conversion only if a casting operator (in C#) or a conversion function (such as <ph id="ph1">`CType`</ph> or <ph id="ph2">`CShort`</ph> in Visual Basic) is used.</source>
          <target state="translated">相反地，它們執行轉換只有轉型運算子 （C# 中） 或轉換函式 (例如<ph id="ph1">`CType`</ph>或<ph id="ph2">`CShort`</ph>在 Visual Basic 中) 會使用。</target>       </trans-unit>
        <trans-unit id="800" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int16">
          <source>Otherwise, they display a compiler error.</source>
          <target state="translated">否則，它們會顯示編譯器錯誤。</target>       </trans-unit>
        <trans-unit id="801" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int16">
          <source>Because this operation defines a narrowing conversion, it can throw an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> at run time if the <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value is outside the range of the <ph id="ph3">&lt;xref:System.Int16&gt;</ph> data type.</source>
          <target state="translated">由於這項作業定義縮小轉換，所以它可以擲回<ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>如果在執行階段<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值超出範圍<ph id="ph3">&lt;xref:System.Int16&gt;</ph>資料型別。</target>       </trans-unit>
        <trans-unit id="802" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int16">
          <source>There is no loss of precision in the resulting <ph id="ph1">&lt;xref:System.Int16&gt;</ph> value if the conversion is successful.</source>
          <target state="translated">不會在產生的有效位數遺失任何<ph id="ph1">&lt;xref:System.Int16&gt;</ph>值，如果轉換成功。</target>       </trans-unit>
        <trans-unit id="803" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int16">
          <source>The following example illustrates the conversion of <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> to <ph id="ph2">&lt;xref:System.Int16&gt;</ph> values.</source>
          <target state="translated">下列範例說明的轉換<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>至<ph id="ph2">&lt;xref:System.Int16&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="804" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int16">
          <source>It also handles an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> that is thrown because the <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value is outside the range of the <ph id="ph3">&lt;xref:System.Int16&gt;</ph> data type.</source>
          <target state="translated">它也會處理<ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>因為擲回<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值超出範圍<ph id="ph3">&lt;xref:System.Int16&gt;</ph>資料型別。</target>       </trans-unit>
        <trans-unit id="805" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int16">
          <source>The value of <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is less than <ph id="ph2">&lt;see cref="F:System.Int16.MinValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> 值小於 <ph id="ph2">&lt;see cref="F:System.Int16.MinValue" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="806" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int16">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="807" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int16">
          <source>The value of <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is greater than <ph id="ph2">&lt;see cref="F:System.Int16.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> 值大於 <ph id="ph2">&lt;see cref="F:System.Int16.MaxValue" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="808" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int32">
          <source>The value to convert to a 32-bit signed integer.</source>
          <target state="translated">要轉換為 32 位元帶正負號整數的值。</target>       </trans-unit>
        <trans-unit id="809" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int32">
          <source>Defines an explicit conversion of a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> object to a 32-bit signed integer value.</source>
          <target state="translated">定義從 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 物件到 32 位元帶正負號整數值的明確轉換。</target>       </trans-unit>
        <trans-unit id="810" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int32">
          <source>An object that contains the value of the <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parameter.</source>
          <target state="translated">物件，包含 <ph id="ph1">&lt;paramref name="value" /&gt;</ph> 參數的值。</target>       </trans-unit>
        <trans-unit id="811" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int32">
          <source>The overloads of the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger&gt;</ph> method define the types to which or from which a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> object can be converted.</source>
          <target state="translated">多載<ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger&gt;</ph>方法定義的類型，或從中<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>物件可以轉換。</target>       </trans-unit>
        <trans-unit id="812" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int32">
          <source>Language compilers do not perform this conversion automatically because it can involve data loss.</source>
          <target state="translated">語言編譯器不會執行這項轉換會自動因為可能遺失資料。</target>       </trans-unit>
        <trans-unit id="813" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int32">
          <source>Instead, they perform the conversion only if a casting operator (in C#) or a conversion function (such as <ph id="ph1">`CType`</ph> or <ph id="ph2">`CInt`</ph> in Visual Basic) is used.</source>
          <target state="translated">相反地，它們執行轉換只有轉型運算子 （C# 中） 或轉換函式 (例如<ph id="ph1">`CType`</ph>或<ph id="ph2">`CInt`</ph>在 Visual Basic 中) 會使用。</target>       </trans-unit>
        <trans-unit id="814" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int32">
          <source>Otherwise, they display a compiler error.</source>
          <target state="translated">否則，它們會顯示編譯器錯誤。</target>       </trans-unit>
        <trans-unit id="815" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int32">
          <source>Because this operation defines a narrowing conversion, it can throw an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> at run time if the <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value is outside the range of the <ph id="ph3">&lt;xref:System.Int32&gt;</ph> data type.</source>
          <target state="translated">由於這項作業定義縮小轉換，所以它可以擲回<ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>如果在執行階段<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值超出範圍<ph id="ph3">&lt;xref:System.Int32&gt;</ph>資料型別。</target>       </trans-unit>
        <trans-unit id="816" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int32">
          <source>There is no loss of precision in the resulting <ph id="ph1">&lt;xref:System.Int16&gt;</ph> value if the conversion is successful.</source>
          <target state="translated">不會在產生的有效位數遺失任何<ph id="ph1">&lt;xref:System.Int16&gt;</ph>值，如果轉換成功。</target>       </trans-unit>
        <trans-unit id="817" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int32">
          <source>The following example illustrates the conversion of <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> to <ph id="ph2">&lt;xref:System.Int32&gt;</ph> values.</source>
          <target state="translated">下列範例說明的轉換<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>至<ph id="ph2">&lt;xref:System.Int32&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="818" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int32">
          <source>It also handles an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> that is thrown because the <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value is outside the range of the <ph id="ph3">&lt;xref:System.Int32&gt;</ph> data type.</source>
          <target state="translated">它也會處理<ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>因為擲回<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值超出範圍<ph id="ph3">&lt;xref:System.Int32&gt;</ph>資料型別。</target>       </trans-unit>
        <trans-unit id="819" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int32">
          <source>The value of <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is less than <ph id="ph2">&lt;see cref="F:System.Int32.MinValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> 值小於 <ph id="ph2">&lt;see cref="F:System.Int32.MinValue" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="820" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int32">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="821" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int32">
          <source>The value of <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is greater than <ph id="ph2">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> 值大於 <ph id="ph2">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="822" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int64">
          <source>The value to convert to a 64-bit signed integer.</source>
          <target state="translated">要轉換為 64 位元帶正負號整數的值。</target>       </trans-unit>
        <trans-unit id="823" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int64">
          <source>Defines an explicit conversion of a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> object to a 64-bit signed integer value.</source>
          <target state="translated">定義從 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 物件到 64 位元帶正負號整數值的明確轉換。</target>       </trans-unit>
        <trans-unit id="824" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int64">
          <source>An object that contains the value of the <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parameter.</source>
          <target state="translated">物件，包含 <ph id="ph1">&lt;paramref name="value" /&gt;</ph> 參數的值。</target>       </trans-unit>
        <trans-unit id="825" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int64">
          <source>The overloads of the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger&gt;</ph> method define the types to which or from which a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> object can be converted.</source>
          <target state="translated">多載<ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger&gt;</ph>方法定義的類型，或從中<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>物件可以轉換。</target>       </trans-unit>
        <trans-unit id="826" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int64">
          <source>Language compilers do not perform this conversion automatically because it can involve data loss.</source>
          <target state="translated">語言編譯器不會執行這項轉換會自動因為可能遺失資料。</target>       </trans-unit>
        <trans-unit id="827" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int64">
          <source>Instead, they perform the conversion only if a casting operator (in C#) or a conversion function (such as <ph id="ph1">`CType`</ph> or <ph id="ph2">`CLng`</ph> in Visual Basic) is used.</source>
          <target state="translated">相反地，它們執行轉換只有轉型運算子 （C# 中） 或轉換函式 (例如<ph id="ph1">`CType`</ph>或<ph id="ph2">`CLng`</ph>在 Visual Basic 中) 會使用。</target>       </trans-unit>
        <trans-unit id="828" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int64">
          <source>Otherwise, they display a compiler error.</source>
          <target state="translated">否則，它們會顯示編譯器錯誤。</target>       </trans-unit>
        <trans-unit id="829" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int64">
          <source>Because this operation defines a narrowing conversion, it can throw an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> at run time if the <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value is outside the range of the <ph id="ph3">&lt;xref:System.Int64&gt;</ph> data type.</source>
          <target state="translated">由於這項作業定義縮小轉換，所以它可以擲回<ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>如果在執行階段<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值超出範圍<ph id="ph3">&lt;xref:System.Int64&gt;</ph>資料型別。</target>       </trans-unit>
        <trans-unit id="830" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int64">
          <source>The following example illustrates the conversion of <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> to <ph id="ph2">&lt;xref:System.Int64&gt;</ph> values.</source>
          <target state="translated">下列範例說明的轉換<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>至<ph id="ph2">&lt;xref:System.Int64&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="831" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int64">
          <source>It also handles an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> that is thrown because the <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value is outside the range of the <ph id="ph3">&lt;xref:System.Int64&gt;</ph> data type.</source>
          <target state="translated">它也會處理<ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>因為擲回<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值超出範圍<ph id="ph3">&lt;xref:System.Int64&gt;</ph>資料型別。</target>       </trans-unit>
        <trans-unit id="832" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int64">
          <source>The value of <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is less than <ph id="ph2">&lt;see cref="F:System.Int64.MinValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> 值小於 <ph id="ph2">&lt;see cref="F:System.Int64.MinValue" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="833" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int64">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="834" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int64">
          <source>The value of <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is greater than <ph id="ph2">&lt;see cref="F:System.Int64.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> 值大於 <ph id="ph2">&lt;see cref="F:System.Int64.MaxValue" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="835" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.SByte">
          <source>The value to convert to a signed 8-bit value.</source>
          <target state="translated">要轉換為帶正負號 8 位元值的值。</target>       </trans-unit>
        <trans-unit id="836" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.SByte">
          <source>Defines an explicit conversion of a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> object to a signed 8-bit value.</source>
          <target state="translated">定義從 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 物件到帶正負號 8 位元值的明確轉換。</target>       </trans-unit>
        <trans-unit id="837" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.SByte">
          <source>This API is not CLS-compliant.</source>
          <target state="translated">此應用程式開發介面不符合 CLS 標準。</target>       </trans-unit>
        <trans-unit id="838" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.SByte">
          <source>The compliant alternative is <ph id="ph1">&lt;see cref="T:System.Int16" /&gt;</ph>.</source>
          <target state="translated">符合規範的替代項目為 <ph id="ph1">&lt;see cref="T:System.Int16" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="839" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.SByte">
          <source>An object that contains the value of the <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parameter.</source>
          <target state="translated">物件，包含 <ph id="ph1">&lt;paramref name="value" /&gt;</ph> 參數的值。</target>       </trans-unit>
        <trans-unit id="840" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.SByte">
          <source>The overloads of the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger&gt;</ph> method define the types to which or from which a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> object can be converted.</source>
          <target state="translated">多載<ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger&gt;</ph>方法定義的類型，或從中<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>物件可以轉換。</target>       </trans-unit>
        <trans-unit id="841" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.SByte">
          <source>Language compilers do not perform this conversion automatically because it can involve data loss.</source>
          <target state="translated">語言編譯器不會執行這項轉換會自動因為可能遺失資料。</target>       </trans-unit>
        <trans-unit id="842" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.SByte">
          <source>Instead, they perform the conversion only if a casting operator (in C#) or a conversion function (such as <ph id="ph1">`CType`</ph> or <ph id="ph2">`CSByte`</ph> in Visual Basic) is used.</source>
          <target state="translated">相反地，它們執行轉換只有轉型運算子 （C# 中） 或轉換函式 (例如<ph id="ph1">`CType`</ph>或<ph id="ph2">`CSByte`</ph>在 Visual Basic 中) 會使用。</target>       </trans-unit>
        <trans-unit id="843" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.SByte">
          <source>Otherwise, they display a compiler error.</source>
          <target state="translated">否則，它們會顯示編譯器錯誤。</target>       </trans-unit>
        <trans-unit id="844" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.SByte">
          <source>Because this operation defines a narrowing conversion, it can throw an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> at run time if the <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value is outside the range of the <ph id="ph3">&lt;xref:System.SByte&gt;</ph> data type.</source>
          <target state="translated">由於這項作業定義縮小轉換，所以它可以擲回<ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>如果在執行階段<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值超出範圍<ph id="ph3">&lt;xref:System.SByte&gt;</ph>資料型別。</target>       </trans-unit>
        <trans-unit id="845" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.SByte">
          <source>There is no loss of precision in the resulting <ph id="ph1">&lt;xref:System.SByte&gt;</ph> value if the conversion is successful.</source>
          <target state="translated">不會在產生的有效位數遺失任何<ph id="ph1">&lt;xref:System.SByte&gt;</ph>值，如果轉換成功。</target>       </trans-unit>
        <trans-unit id="846" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.SByte">
          <source>The following example illustrates the conversion of <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> to <ph id="ph2">&lt;xref:System.SByte&gt;</ph> values.</source>
          <target state="translated">下列範例說明的轉換<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>至<ph id="ph2">&lt;xref:System.SByte&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="847" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.SByte">
          <source>It also handles an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> that is thrown because the <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value is outside the range of the <ph id="ph3">&lt;xref:System.SByte&gt;</ph> data type.</source>
          <target state="translated">它也會處理<ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>因為擲回<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值超出範圍<ph id="ph3">&lt;xref:System.SByte&gt;</ph>資料型別。</target>       </trans-unit>
        <trans-unit id="848" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.SByte">
          <source>The value of <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is less than <ph id="ph2">&lt;see cref="F:System.SByte.MinValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> 值小於 <ph id="ph2">&lt;see cref="F:System.SByte.MinValue" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="849" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.SByte">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="850" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.SByte">
          <source>The value of <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is greater than <ph id="ph2">&lt;see cref="F:System.SByte.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> 值大於 <ph id="ph2">&lt;see cref="F:System.SByte.MaxValue" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="851" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Single">
          <source>The value to convert to a single-precision floating-point value.</source>
          <target state="translated">要轉換為單精確度浮點值的值。</target>       </trans-unit>
        <trans-unit id="852" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Single">
          <source>Defines an explicit conversion of a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> object to a single-precision floating-point value.</source>
          <target state="translated">定義從 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 物件到單精確度浮點值的明確轉換。</target>       </trans-unit>
        <trans-unit id="853" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Single">
          <source>An object that contains the closest possible representation of the <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parameter.</source>
          <target state="translated">物件，包含 <ph id="ph1">&lt;paramref name="value" /&gt;</ph> 參數的最接近的可能表示。</target>       </trans-unit>
        <trans-unit id="854" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Single">
          <source>The overloads of the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger&gt;</ph> method define the types to which or from which a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> object can be converted.</source>
          <target state="translated">多載<ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger&gt;</ph>方法定義的類型，或從中<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>物件可以轉換。</target>       </trans-unit>
        <trans-unit id="855" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Single">
          <source>Language compilers do not perform this conversion automatically because it can involve data loss or a loss of precision.</source>
          <target state="translated">語言編譯器不會執行這項轉換會自動因為可能遺失資料或遺失有效位數。</target>       </trans-unit>
        <trans-unit id="856" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Single">
          <source>Instead, they perform the conversion only if a casting operator (in C#) or a conversion function (such as <ph id="ph1">`CType`</ph> or <ph id="ph2">`CSng`</ph> in Visual Basic) is used.</source>
          <target state="translated">相反地，它們執行轉換只有轉型運算子 （C# 中） 或轉換函式 (例如<ph id="ph1">`CType`</ph>或<ph id="ph2">`CSng`</ph>在 Visual Basic 中) 會使用。</target>       </trans-unit>
        <trans-unit id="857" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Single">
          <source>Otherwise, they display a compiler error.</source>
          <target state="translated">否則，它們會顯示編譯器錯誤。</target>       </trans-unit>
        <trans-unit id="858" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Single">
          <source>Because the <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> value can be outside the range of the <ph id="ph2">&lt;xref:System.Single&gt;</ph> data type, this operation is a narrowing conversion.</source>
          <target state="translated">因為<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>值可以是範圍之外的<ph id="ph2">&lt;xref:System.Single&gt;</ph>資料類型，這項作業是縮小轉換。</target>       </trans-unit>
        <trans-unit id="859" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Single">
          <source>If the conversion is unsuccessful, it does not throw an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>.</source>
          <target state="translated">如果轉換失敗，它不會擲回<ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="860" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Single">
          <source>Instead, if the <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> value is less than <ph id="ph2">&lt;xref:System.Single.MinValue?displayProperty=nameWithType&gt;</ph>, the resulting <ph id="ph3">&lt;xref:System.Single&gt;</ph> value is <ph id="ph4">&lt;xref:System.Single.NegativeInfinity?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">相反地，如果<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>值是小於<ph id="ph2">&lt;xref:System.Single.MinValue?displayProperty=nameWithType&gt;</ph>，產生<ph id="ph3">&lt;xref:System.Single&gt;</ph>值是<ph id="ph4">&lt;xref:System.Single.NegativeInfinity?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="861" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Single">
          <source>If the <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> value is greater than <ph id="ph2">&lt;xref:System.Single.MaxValue?displayProperty=nameWithType&gt;</ph>, the resulting <ph id="ph3">&lt;xref:System.Single&gt;</ph> value is <ph id="ph4">&lt;xref:System.Single.PositiveInfinity?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>值大於<ph id="ph2">&lt;xref:System.Single.MaxValue?displayProperty=nameWithType&gt;</ph>，產生<ph id="ph3">&lt;xref:System.Single&gt;</ph>值是<ph id="ph4">&lt;xref:System.Single.PositiveInfinity?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="862" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Single">
          <source>The conversion of a <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> to a <ph id="ph2">&lt;xref:System.Single&gt;</ph> may involve a loss of precision.</source>
          <target state="translated">轉換<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>至<ph id="ph2">&lt;xref:System.Single&gt;</ph>可能會遺失有效位數。</target>       </trans-unit>
        <trans-unit id="863" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Single">
          <source>In some cases, the loss of precision may cause the casting or conversion operation to succeed even if the <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> value is outside the range of the <ph id="ph2">&lt;xref:System.Single&gt;</ph> data type.</source>
          <target state="translated">在某些情況下，遺失有效位數可能會導致轉型或轉換作業成功即使<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>值超出範圍<ph id="ph2">&lt;xref:System.Single&gt;</ph>資料型別。</target>       </trans-unit>
        <trans-unit id="864" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Single">
          <source>The following example provides an illustration.</source>
          <target state="translated">下列範例提供一個實例。</target>       </trans-unit>
        <trans-unit id="865" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Single">
          <source>It assigns the maximum value of a <ph id="ph1">&lt;xref:System.Single&gt;</ph> to two <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> variables, increments one <ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph> variable by 9.999e291, and tests the two variables for equality.</source>
          <target state="translated">它會將指派的最大值<ph id="ph1">&lt;xref:System.Single&gt;</ph>兩個<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>變數，會遞增一<ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph>變數 9.999e291，並測試兩個變數相等。</target>       </trans-unit>
        <trans-unit id="866" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Single">
          <source>As expected, the call to the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Equals%28System.Numerics.BigInteger%29?displayProperty=nameWithType&gt;</ph> method shows that they are unequal.</source>
          <target state="translated">如預期般，呼叫<ph id="ph1">&lt;xref:System.Numerics.BigInteger.Equals%28System.Numerics.BigInteger%29?displayProperty=nameWithType&gt;</ph>方法顯示的不相等。</target>       </trans-unit>
        <trans-unit id="867" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Single">
          <source>However, the conversion of the larger <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> value back to a <ph id="ph2">&lt;xref:System.Single&gt;</ph> succeeds, although the <ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph> value now exceeds <ph id="ph4">&lt;xref:System.Single.MaxValue?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">不過，較大的轉換<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>值傳回到<ph id="ph2">&lt;xref:System.Single&gt;</ph>成功，雖然<ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph>值現在超過<ph id="ph4">&lt;xref:System.Single.MaxValue?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="868" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Single">
          <source>The following example illustrates the conversion of <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> to <ph id="ph2">&lt;xref:System.Single&gt;</ph> values.</source>
          <target state="translated">下列範例說明的轉換<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>至<ph id="ph2">&lt;xref:System.Single&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="869" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt16">
          <source>The value to convert to an unsigned 16-bit integer.</source>
          <target state="translated">要轉換為不帶正負號 16 位元整數的值。</target>       </trans-unit>
        <trans-unit id="870" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt16">
          <source>Defines an explicit conversion of a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> object to an unsigned 16-bit integer value.</source>
          <target state="translated">定義從 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 物件到不帶正負號 16 位元整數值的明確轉換。</target>       </trans-unit>
        <trans-unit id="871" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt16">
          <source>This API is not CLS-compliant.</source>
          <target state="translated">此應用程式開發介面不符合 CLS 標準。</target>       </trans-unit>
        <trans-unit id="872" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt16">
          <source>The compliant alternative is <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph>.</source>
          <target state="translated">符合規範的替代項目為 <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="873" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt16">
          <source>An object that contains the value of the <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parameter.</source>
          <target state="translated">物件，包含 <ph id="ph1">&lt;paramref name="value" /&gt;</ph> 參數的值。</target>       </trans-unit>
        <trans-unit id="874" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt16">
          <source>The overloads of the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger&gt;</ph> method define the types to which or from which a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> object can be converted.</source>
          <target state="translated">多載<ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger&gt;</ph>方法定義的類型，或從中<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>物件可以轉換。</target>       </trans-unit>
        <trans-unit id="875" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt16">
          <source>Language compilers do not perform this conversion automatically because it can involve data loss.</source>
          <target state="translated">語言編譯器不會執行這項轉換會自動因為可能遺失資料。</target>       </trans-unit>
        <trans-unit id="876" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt16">
          <source>Instead, they perform the conversion only if a casting operator (in C#) or a conversion function (such as <ph id="ph1">`CType`</ph> or <ph id="ph2">`CUShort`</ph> in Visual Basic) is used.</source>
          <target state="translated">相反地，它們執行轉換只有轉型運算子 （C# 中） 或轉換函式 (例如<ph id="ph1">`CType`</ph>或<ph id="ph2">`CUShort`</ph>在 Visual Basic 中) 會使用。</target>       </trans-unit>
        <trans-unit id="877" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt16">
          <source>Otherwise, they display a compiler error.</source>
          <target state="translated">否則，它們會顯示編譯器錯誤。</target>       </trans-unit>
        <trans-unit id="878" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt16">
          <source>Because this operation defines a narrowing conversion, it can throw an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> at run time if the <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value is outside the range of the <ph id="ph3">&lt;xref:System.UInt16&gt;</ph> data type.</source>
          <target state="translated">由於這項作業定義縮小轉換，所以它可以擲回<ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>如果在執行階段<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值超出範圍<ph id="ph3">&lt;xref:System.UInt16&gt;</ph>資料型別。</target>       </trans-unit>
        <trans-unit id="879" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt16">
          <source>There is no loss of precision in the resulting <ph id="ph1">&lt;xref:System.UInt16&gt;</ph> value if the conversion is successful.</source>
          <target state="translated">不會在產生的有效位數遺失任何<ph id="ph1">&lt;xref:System.UInt16&gt;</ph>值，如果轉換成功。</target>       </trans-unit>
        <trans-unit id="880" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt16">
          <source>The following example illustrates the conversion of <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> to <ph id="ph2">&lt;xref:System.UInt16&gt;</ph> values.</source>
          <target state="translated">下列範例說明的轉換<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>至<ph id="ph2">&lt;xref:System.UInt16&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="881" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt16">
          <source>It also handles an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> that is thrown because the <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value is outside the range of the <ph id="ph3">&lt;xref:System.UInt16&gt;</ph> data type.</source>
          <target state="translated">它也會處理<ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>因為擲回<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值超出範圍<ph id="ph3">&lt;xref:System.UInt16&gt;</ph>資料型別。</target>       </trans-unit>
        <trans-unit id="882" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt16">
          <source>The value of <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is less than <ph id="ph2">&lt;see cref="F:System.UInt16.MinValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> 值小於 <ph id="ph2">&lt;see cref="F:System.UInt16.MinValue" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="883" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt16">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="884" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt16">
          <source>The value of <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is greater than <ph id="ph2">&lt;see cref="F:System.UInt16.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> 值大於 <ph id="ph2">&lt;see cref="F:System.UInt16.MaxValue" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="885" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt32">
          <source>The value to convert to an unsigned 32-bit integer.</source>
          <target state="translated">要轉換為不帶正負號 32 位元整數的值。</target>       </trans-unit>
        <trans-unit id="886" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt32">
          <source>Defines an explicit conversion of a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> object to an unsigned 32-bit integer value.</source>
          <target state="translated">定義從 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 物件到不帶正負號 32 位元整數值的明確轉換。</target>       </trans-unit>
        <trans-unit id="887" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt32">
          <source>This API is not CLS-compliant.</source>
          <target state="translated">此應用程式開發介面不符合 CLS 標準。</target>       </trans-unit>
        <trans-unit id="888" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt32">
          <source>The compliant alternative is <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph>.</source>
          <target state="translated">符合規範的替代項目為 <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="889" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt32">
          <source>An object that contains the value of the <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parameter.</source>
          <target state="translated">物件，包含 <ph id="ph1">&lt;paramref name="value" /&gt;</ph> 參數的值。</target>       </trans-unit>
        <trans-unit id="890" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt32">
          <source>The overloads of the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger&gt;</ph> method define the types to which or from which a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> object can be converted.</source>
          <target state="translated">多載<ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger&gt;</ph>方法定義的類型，或從中<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>物件可以轉換。</target>       </trans-unit>
        <trans-unit id="891" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt32">
          <source>Language compilers do not perform this conversion automatically because it can involve data loss.</source>
          <target state="translated">語言編譯器不會執行這項轉換會自動因為可能遺失資料。</target>       </trans-unit>
        <trans-unit id="892" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt32">
          <source>Instead, they perform the conversion only if a casting operator (in C#) or a conversion function (such as <ph id="ph1">`CType`</ph> or <ph id="ph2">`CUInt`</ph> in Visual Basic) is used.</source>
          <target state="translated">相反地，它們執行轉換只有轉型運算子 （C# 中） 或轉換函式 (例如<ph id="ph1">`CType`</ph>或<ph id="ph2">`CUInt`</ph>在 Visual Basic 中) 會使用。</target>       </trans-unit>
        <trans-unit id="893" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt32">
          <source>Otherwise, they display a compiler error.</source>
          <target state="translated">否則，它們會顯示編譯器錯誤。</target>       </trans-unit>
        <trans-unit id="894" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt32">
          <source>Because this operation defines a narrowing conversion, it can throw an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> at run time if the <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value is outside the range of the <ph id="ph3">&lt;xref:System.UInt32&gt;</ph> data type.</source>
          <target state="translated">由於這項作業定義縮小轉換，所以它可以擲回<ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>如果在執行階段<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值超出範圍<ph id="ph3">&lt;xref:System.UInt32&gt;</ph>資料型別。</target>       </trans-unit>
        <trans-unit id="895" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt32">
          <source>There is no loss of precision in the resulting <ph id="ph1">&lt;xref:System.UInt32&gt;</ph> value if the conversion is successful.</source>
          <target state="translated">不會在產生的有效位數遺失任何<ph id="ph1">&lt;xref:System.UInt32&gt;</ph>值，如果轉換成功。</target>       </trans-unit>
        <trans-unit id="896" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt32">
          <source>The following example illustrates the conversion of <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> to <ph id="ph2">&lt;xref:System.UInt32&gt;</ph> values.</source>
          <target state="translated">下列範例說明的轉換<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>至<ph id="ph2">&lt;xref:System.UInt32&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="897" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt32">
          <source>It also handles an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> that is thrown because the <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value is outside the range of the <ph id="ph3">&lt;xref:System.UInt32&gt;</ph> data type.</source>
          <target state="translated">它也會處理<ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>因為擲回<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值超出範圍<ph id="ph3">&lt;xref:System.UInt32&gt;</ph>資料型別。</target>       </trans-unit>
        <trans-unit id="898" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt32">
          <source>The value of <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is less than <ph id="ph2">&lt;see cref="F:System.UInt32.MinValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> 值小於 <ph id="ph2">&lt;see cref="F:System.UInt32.MinValue" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="899" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt32">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="900" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt32">
          <source>The value of <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is greater than <ph id="ph2">&lt;see cref="F:System.UInt32.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> 值大於 <ph id="ph2">&lt;see cref="F:System.UInt32.MaxValue" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="901" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt64">
          <source>The value to convert to an unsigned 64-bit integer.</source>
          <target state="translated">要轉換為不帶正負號 64 位元整數的值。</target>       </trans-unit>
        <trans-unit id="902" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt64">
          <source>Defines an explicit conversion of a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> object to an unsigned 64-bit integer value.</source>
          <target state="translated">定義從 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 物件到不帶正負號 64 位元整數值的明確轉換。</target>       </trans-unit>
        <trans-unit id="903" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt64">
          <source>This API is not CLS-compliant.</source>
          <target state="translated">此應用程式開發介面不符合 CLS 標準。</target>       </trans-unit>
        <trans-unit id="904" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt64">
          <source>The compliant alternative is <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph>.</source>
          <target state="translated">符合規範的替代項目為 <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="905" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt64">
          <source>An object that contains the value of the <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parameter.</source>
          <target state="translated">物件，包含 <ph id="ph1">&lt;paramref name="value" /&gt;</ph> 參數的值。</target>       </trans-unit>
        <trans-unit id="906" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt64">
          <source>The overloads of the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger&gt;</ph> method define the types to which or from which a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> object can be converted.</source>
          <target state="translated">多載<ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger&gt;</ph>方法定義的類型，或從中<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>物件可以轉換。</target>       </trans-unit>
        <trans-unit id="907" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt64">
          <source>Language compilers do not perform this conversion automatically because it can involve data loss.</source>
          <target state="translated">語言編譯器不會執行這項轉換會自動因為可能遺失資料。</target>       </trans-unit>
        <trans-unit id="908" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt64">
          <source>Instead, they perform the conversion only if a casting operator (in C#) or a conversion function (such as <ph id="ph1">`CType`</ph> or <ph id="ph2">`CULng`</ph> in Visual Basic) is used.</source>
          <target state="translated">相反地，它們執行轉換只有轉型運算子 （C# 中） 或轉換函式 (例如<ph id="ph1">`CType`</ph>或<ph id="ph2">`CULng`</ph>在 Visual Basic 中) 會使用。</target>       </trans-unit>
        <trans-unit id="909" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt64">
          <source>Otherwise, they display a compiler error.</source>
          <target state="translated">否則，它們會顯示編譯器錯誤。</target>       </trans-unit>
        <trans-unit id="910" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt64">
          <source>Because this operation defines a narrowing conversion, it can throw an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> at run time if the <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value is outside the range of the <ph id="ph3">&lt;xref:System.UInt64&gt;</ph> data type.</source>
          <target state="translated">由於這項作業定義縮小轉換，所以它可以擲回<ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>如果在執行階段<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值超出範圍<ph id="ph3">&lt;xref:System.UInt64&gt;</ph>資料型別。</target>       </trans-unit>
        <trans-unit id="911" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt64">
          <source>There is no loss of precision in the resulting <ph id="ph1">&lt;xref:System.UInt64&gt;</ph> value if the conversion is successful.</source>
          <target state="translated">不會在產生的有效位數遺失任何<ph id="ph1">&lt;xref:System.UInt64&gt;</ph>值，如果轉換成功。</target>       </trans-unit>
        <trans-unit id="912" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt64">
          <source>The following example illustrates the conversion of <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> to <ph id="ph2">&lt;xref:System.UInt64&gt;</ph> values.</source>
          <target state="translated">下列範例說明的轉換<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>至<ph id="ph2">&lt;xref:System.UInt64&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="913" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt64">
          <source>It also handles an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> that is thrown because the <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value is outside the range of the <ph id="ph3">&lt;xref:System.UInt64&gt;</ph> data type.</source>
          <target state="translated">它也會處理<ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>因為擲回<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值超出範圍<ph id="ph3">&lt;xref:System.UInt64&gt;</ph>資料型別。</target>       </trans-unit>
        <trans-unit id="914" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt64">
          <source>The value of <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is less than <ph id="ph2">&lt;see cref="F:System.UInt64.MinValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> 值小於 <ph id="ph2">&lt;see cref="F:System.UInt64.MinValue" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="915" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt64">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="916" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt64">
          <source>The value of <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is greater than <ph id="ph2">&lt;see cref="F:System.UInt64.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> 值大於 <ph id="ph2">&lt;see cref="F:System.UInt64.MaxValue" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="917" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Single)~System.Numerics.BigInteger">
          <source>The value to convert to a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph>.</source>
          <target state="translated">要轉換為 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 的值。</target>       </trans-unit>
        <trans-unit id="918" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Single)~System.Numerics.BigInteger">
          <source>Defines an explicit conversion of a <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> value to a <ph id="ph2">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value.</source>
          <target state="translated">定義從 <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> 值到 <ph id="ph2">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 值的明確轉換。</target>       </trans-unit>
        <trans-unit id="919" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Single)~System.Numerics.BigInteger">
          <source>An object that contains the value of the <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parameter.</source>
          <target state="translated">物件，包含 <ph id="ph1">&lt;paramref name="value" /&gt;</ph> 參數的值。</target>       </trans-unit>
        <trans-unit id="920" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Single)~System.Numerics.BigInteger">
          <source>Any fractional part of the <ph id="ph1">`value`</ph> parameter is truncated before conversion.</source>
          <target state="translated">任何小數部分<ph id="ph1">`value`</ph>參數會被截斷轉換之前。</target>       </trans-unit>
        <trans-unit id="921" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Single)~System.Numerics.BigInteger">
          <source>The overloads of the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger&gt;</ph> method define the types to which or from which a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> object can be converted.</source>
          <target state="translated">多載<ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger&gt;</ph>方法定義的類型，或從中<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>物件可以轉換。</target>       </trans-unit>
        <trans-unit id="922" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Single)~System.Numerics.BigInteger">
          <source>Because the conversion from <ph id="ph1">&lt;xref:System.Single&gt;</ph> to <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> can involve truncating any fractional part of <ph id="ph3">`value`</ph>, language compilers do not perform this conversion automatically.</source>
          <target state="translated">因為從轉換<ph id="ph1">&lt;xref:System.Single&gt;</ph>至<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>截斷任何小數部分可包含<ph id="ph3">`value`</ph>，語言編譯器不會自動執行這項轉換。</target>       </trans-unit>
        <trans-unit id="923" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Single)~System.Numerics.BigInteger">
          <source>Instead, they perform the conversion only if a casting operator (in C#) or a conversion function (such as <ph id="ph1">`CType`</ph> in Visual Basic) is used.</source>
          <target state="translated">相反地，它們執行轉換只有轉型運算子 （C# 中） 或轉換函式 (例如<ph id="ph1">`CType`</ph>在 Visual Basic 中) 會使用。</target>       </trans-unit>
        <trans-unit id="924" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Single)~System.Numerics.BigInteger">
          <source>Otherwise, they display a compiler error.</source>
          <target state="translated">否則，它們會顯示編譯器錯誤。</target>       </trans-unit>
        <trans-unit id="925" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Single)~System.Numerics.BigInteger">
          <source>For languages that do not support custom operators, the alternative method is <ph id="ph1">&lt;xref:System.Numerics.BigInteger.%23ctor%28System.Single%29?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">不支援自訂運算子的語言，另一種方法是<ph id="ph1">&lt;xref:System.Numerics.BigInteger.%23ctor%28System.Single%29?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="926" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Single)~System.Numerics.BigInteger">
          <source>The following example converts the individual elements in an array of <ph id="ph1">&lt;xref:System.Single&gt;</ph> values to <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> objects, and then displays the result of each conversion.</source>
          <target state="translated">下列範例會將轉換的陣列中的個別項目<ph id="ph1">&lt;xref:System.Single&gt;</ph>值<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>物件，並接著會顯示每個轉換的結果。</target>       </trans-unit>
        <trans-unit id="927" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Explicit(System.Single)~System.Numerics.BigInteger">
          <source>Note that any fractional part of a <ph id="ph1">&lt;xref:System.Single&gt;</ph> value is truncated during the conversion.</source>
          <target state="translated">請注意任何小數部份<ph id="ph1">&lt;xref:System.Single&gt;</ph>轉換時截斷值。</target>       </trans-unit>
        <trans-unit id="928" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Single)~System.Numerics.BigInteger">
          <source>The value of <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <ph id="ph2">&lt;see cref="F:System.Single.NaN" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> 的值是 <ph id="ph2">&lt;see cref="F:System.Single.NaN" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="929" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Single)~System.Numerics.BigInteger">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="930" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Single)~System.Numerics.BigInteger">
          <source>The value of <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <ph id="ph2">&lt;see cref="F:System.Single.PositiveInfinity" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> 的值是 <ph id="ph2">&lt;see cref="F:System.Single.PositiveInfinity" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="931" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Single)~System.Numerics.BigInteger">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="932" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Explicit(System.Single)~System.Numerics.BigInteger">
          <source>The value of <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <ph id="ph2">&lt;see cref="F:System.Single.NegativeInfinity" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> 的值是 <ph id="ph2">&lt;see cref="F:System.Single.NegativeInfinity" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="933" translate="yes" xml:space="preserve" uid="T:System.Numerics.BigInteger">
          <source>Returns a value that indicates whether a specified value is greater than another specified value.</source>
          <target state="translated">傳回值，這個值表示指定的值是否大於另一個指定的值。</target>       </trans-unit>
        <trans-unit id="934" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_GreaterThan(System.Int64,System.Numerics.BigInteger)">
          <source>The first value to compare.</source>
          <target state="translated">要比較的第一個值。</target>       </trans-unit>
        <trans-unit id="935" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_GreaterThan(System.Int64,System.Numerics.BigInteger)">
          <source>The second value to compare.</source>
          <target state="translated">要比較的第二個值。</target>       </trans-unit>
        <trans-unit id="936" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_GreaterThan(System.Int64,System.Numerics.BigInteger)">
          <source>Returns a value that indicates whether a 64-bit signed integer is greater than a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value.</source>
          <target state="translated">傳回值，這個值表示 64 位元帶正負號的整數是否大於 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 值。</target>       </trans-unit>
        <trans-unit id="937" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_GreaterThan(System.Int64,System.Numerics.BigInteger)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="left" /&gt;</ph> is greater than <ph id="ph3">&lt;paramref name="right" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph1">&lt;see langword="true" /&gt;</ph> 大於 <ph id="ph2">&lt;paramref name="left" /&gt;</ph> 則為 <ph id="ph3">&lt;paramref name="right" /&gt;</ph>，否則為 <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="938" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_GreaterThan(System.Int64,System.Numerics.BigInteger)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_GreaterThan%2A&gt;</ph> method defines the operation of the greater than operator for <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_GreaterThan%2A&gt;</ph>方法定義的作業 greater than 運算子<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="939" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_GreaterThan(System.Int64,System.Numerics.BigInteger)">
          <source>It enables code such as the following:</source>
          <target state="translated">它可讓程式碼如下所示：</target>       </trans-unit>
        <trans-unit id="940" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_GreaterThan(System.Int64,System.Numerics.BigInteger)">
          <source>Languages that do not support custom operators can call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType&gt;</ph> instance method instead.</source>
          <target state="translated">不支援自訂運算子的語言可以呼叫<ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType&gt;</ph>改為執行個體方法。</target>       </trans-unit>
        <trans-unit id="941" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_GreaterThan(System.Int64,System.Numerics.BigInteger)">
          <source>Some languages can also call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_GreaterThan%28System.Int64%2CSystem.Numerics.BigInteger%29&gt;</ph> method directly, as the following example shows.</source>
          <target state="translated">某些語言也可以呼叫<ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_GreaterThan%28System.Int64%2CSystem.Numerics.BigInteger%29&gt;</ph>方法直接管理，如下列範例所示。</target>       </trans-unit>
        <trans-unit id="942" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_GreaterThan(System.Int64,System.Numerics.BigInteger)">
          <source>If <ph id="ph1">`left`</ph> is a <ph id="ph2">&lt;xref:System.Byte&gt;</ph>, <ph id="ph3">&lt;xref:System.Int16&gt;</ph>, <ph id="ph4">&lt;xref:System.Int32&gt;</ph>, <ph id="ph5">&lt;xref:System.SByte&gt;</ph>, <ph id="ph6">&lt;xref:System.UInt16&gt;</ph>, or <ph id="ph7">&lt;xref:System.UInt32&gt;</ph> value, it is implicitly converted to an <ph id="ph8">&lt;xref:System.Int64&gt;</ph> value when the operation is performed.</source>
          <target state="translated">如果<ph id="ph1">`left`</ph>是<ph id="ph2">&lt;xref:System.Byte&gt;</ph>， <ph id="ph3">&lt;xref:System.Int16&gt;</ph>， <ph id="ph4">&lt;xref:System.Int32&gt;</ph>， <ph id="ph5">&lt;xref:System.SByte&gt;</ph>， <ph id="ph6">&lt;xref:System.UInt16&gt;</ph>，或<ph id="ph7">&lt;xref:System.UInt32&gt;</ph>值，它會隱含地轉換成<ph id="ph8">&lt;xref:System.Int64&gt;</ph>時執行作業的值。</target>       </trans-unit>
        <trans-unit id="943" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_GreaterThan(System.Int64,System.Numerics.BigInteger)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">這個運算子的對等方法是<ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="944" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_GreaterThan(System.Numerics.BigInteger,System.Int64)">
          <source>The first value to compare.</source>
          <target state="translated">要比較的第一個值。</target>       </trans-unit>
        <trans-unit id="945" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_GreaterThan(System.Numerics.BigInteger,System.Int64)">
          <source>The second value to compare.</source>
          <target state="translated">要比較的第二個值。</target>       </trans-unit>
        <trans-unit id="946" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_GreaterThan(System.Numerics.BigInteger,System.Int64)">
          <source>Returns a value that indicates whether a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> is greater than a 64-bit signed integer value.</source>
          <target state="translated">傳回值，這個值表示 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 是否大於 64 位元帶正負號的整數值。</target>       </trans-unit>
        <trans-unit id="947" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_GreaterThan(System.Numerics.BigInteger,System.Int64)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="left" /&gt;</ph> is greater than <ph id="ph3">&lt;paramref name="right" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph1">&lt;see langword="true" /&gt;</ph> 大於 <ph id="ph2">&lt;paramref name="left" /&gt;</ph> 則為 <ph id="ph3">&lt;paramref name="right" /&gt;</ph>，否則為 <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="948" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_GreaterThan(System.Numerics.BigInteger,System.Int64)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_GreaterThan%2A&gt;</ph> method defines the operation of the greater than operator for <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_GreaterThan%2A&gt;</ph>方法定義的作業 greater than 運算子<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="949" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_GreaterThan(System.Numerics.BigInteger,System.Int64)">
          <source>It enables code such as the following:</source>
          <target state="translated">它可讓程式碼如下所示：</target>       </trans-unit>
        <trans-unit id="950" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_GreaterThan(System.Numerics.BigInteger,System.Int64)">
          <source>Languages that do not support custom operators can call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType&gt;</ph> method instead.</source>
          <target state="translated">不支援自訂運算子的語言可以呼叫<ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType&gt;</ph>方法改為。</target>       </trans-unit>
        <trans-unit id="951" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_GreaterThan(System.Numerics.BigInteger,System.Int64)">
          <source>Some languages can also call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_GreaterThan%28System.Numerics.BigInteger%2CSystem.Int64%29&gt;</ph> method directly, as the following example shows.</source>
          <target state="translated">某些語言也可以呼叫<ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_GreaterThan%28System.Numerics.BigInteger%2CSystem.Int64%29&gt;</ph>方法直接管理，如下列範例所示。</target>       </trans-unit>
        <trans-unit id="952" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_GreaterThan(System.Numerics.BigInteger,System.Int64)">
          <source>If <ph id="ph1">`right`</ph> is a <ph id="ph2">&lt;xref:System.Byte&gt;</ph>, <ph id="ph3">&lt;xref:System.Int16&gt;</ph>, <ph id="ph4">&lt;xref:System.Int32&gt;</ph>, <ph id="ph5">&lt;xref:System.SByte&gt;</ph>, <ph id="ph6">&lt;xref:System.UInt16&gt;</ph>, or <ph id="ph7">&lt;xref:System.UInt32&gt;</ph> value, it is implicitly converted to an <ph id="ph8">&lt;xref:System.Int64&gt;</ph> value when the operation is performed.</source>
          <target state="translated">如果<ph id="ph1">`right`</ph>是<ph id="ph2">&lt;xref:System.Byte&gt;</ph>， <ph id="ph3">&lt;xref:System.Int16&gt;</ph>， <ph id="ph4">&lt;xref:System.Int32&gt;</ph>， <ph id="ph5">&lt;xref:System.SByte&gt;</ph>， <ph id="ph6">&lt;xref:System.UInt16&gt;</ph>，或<ph id="ph7">&lt;xref:System.UInt32&gt;</ph>值，它會隱含地轉換成<ph id="ph8">&lt;xref:System.Int64&gt;</ph>時執行作業的值。</target>       </trans-unit>
        <trans-unit id="953" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_GreaterThan(System.Numerics.BigInteger,System.Int64)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">這個運算子的對等方法是<ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="954" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_GreaterThan(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The first value to compare.</source>
          <target state="translated">要比較的第一個值。</target>       </trans-unit>
        <trans-unit id="955" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_GreaterThan(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The second value to compare.</source>
          <target state="translated">要比較的第二個值。</target>       </trans-unit>
        <trans-unit id="956" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_GreaterThan(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Returns a value that indicates whether a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value is greater than another <ph id="ph2">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value.</source>
          <target state="translated">傳回值，這個值表示 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 值是否大於另一個 <ph id="ph2">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 值。</target>       </trans-unit>
        <trans-unit id="957" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_GreaterThan(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="left" /&gt;</ph> is greater than <ph id="ph3">&lt;paramref name="right" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph1">&lt;see langword="true" /&gt;</ph> 大於 <ph id="ph2">&lt;paramref name="left" /&gt;</ph> 則為 <ph id="ph3">&lt;paramref name="right" /&gt;</ph>，否則為 <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="958" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_GreaterThan(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_GreaterThan%2A&gt;</ph> method defines the operation of the greater than operator for <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_GreaterThan%2A&gt;</ph>方法定義的作業 greater than 運算子<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="959" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_GreaterThan(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>It enables code such as the following:</source>
          <target state="translated">它可讓程式碼如下所示：</target>       </trans-unit>
        <trans-unit id="960" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_GreaterThan(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Languages that do not support custom operators can call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Compare%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType&gt;</ph> method instead.</source>
          <target state="translated">不支援自訂運算子的語言可以呼叫<ph id="ph1">&lt;xref:System.Numerics.BigInteger.Compare%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType&gt;</ph>方法改為。</target>       </trans-unit>
        <trans-unit id="961" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_GreaterThan(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>They can also call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_GreaterThan%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29&gt;</ph> method directly, as the following example shows.</source>
          <target state="translated">它們也可以呼叫<ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_GreaterThan%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29&gt;</ph>方法直接管理，如下列範例所示。</target>       </trans-unit>
        <trans-unit id="962" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_GreaterThan(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo(System.Numerics.BigInteger)?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">這個運算子的對等方法是<ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo(System.Numerics.BigInteger)?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="963" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_GreaterThan(System.Numerics.BigInteger,System.UInt64)">
          <source>The first value to compare.</source>
          <target state="translated">要比較的第一個值。</target>       </trans-unit>
        <trans-unit id="964" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_GreaterThan(System.Numerics.BigInteger,System.UInt64)">
          <source>The second value to compare.</source>
          <target state="translated">要比較的第二個值。</target>       </trans-unit>
        <trans-unit id="965" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_GreaterThan(System.Numerics.BigInteger,System.UInt64)">
          <source>Returns a value that indicates whether a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value is greater than a 64-bit unsigned integer.</source>
          <target state="translated">傳回值，這個值表示 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 值是否大於 64 位元不帶正負號的整數。</target>       </trans-unit>
        <trans-unit id="966" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_GreaterThan(System.Numerics.BigInteger,System.UInt64)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="left" /&gt;</ph> is greater than <ph id="ph3">&lt;paramref name="right" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph1">&lt;see langword="true" /&gt;</ph> 大於 <ph id="ph2">&lt;paramref name="left" /&gt;</ph> 則為 <ph id="ph3">&lt;paramref name="right" /&gt;</ph>，否則為 <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="967" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_GreaterThan(System.Numerics.BigInteger,System.UInt64)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_GreaterThan%2A&gt;</ph> method defines the operation of the greater than operator for <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_GreaterThan%2A&gt;</ph>方法定義的作業 greater than 運算子<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="968" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_GreaterThan(System.Numerics.BigInteger,System.UInt64)">
          <source>It enables code such as the following:</source>
          <target state="translated">它可讓程式碼如下所示：</target>       </trans-unit>
        <trans-unit id="969" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_GreaterThan(System.Numerics.BigInteger,System.UInt64)">
          <source>Languages that do not support custom operators can call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType&gt;</ph> method instead.</source>
          <target state="translated">不支援自訂運算子的語言可以呼叫<ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType&gt;</ph>方法改為。</target>       </trans-unit>
        <trans-unit id="970" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_GreaterThan(System.Numerics.BigInteger,System.UInt64)">
          <source>Some languages can also call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_GreaterThan%28System.Numerics.BigInteger%2CSystem.UInt64%29&gt;</ph> method directly, as the following example shows.</source>
          <target state="translated">某些語言也可以呼叫<ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_GreaterThan%28System.Numerics.BigInteger%2CSystem.UInt64%29&gt;</ph>方法直接管理，如下列範例所示。</target>       </trans-unit>
        <trans-unit id="971" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_GreaterThan(System.UInt64,System.Numerics.BigInteger)">
          <source>The first value to compare.</source>
          <target state="translated">要比較的第一個值。</target>       </trans-unit>
        <trans-unit id="972" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_GreaterThan(System.UInt64,System.Numerics.BigInteger)">
          <source>The second value to compare.</source>
          <target state="translated">要比較的第二個值。</target>       </trans-unit>
        <trans-unit id="973" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_GreaterThan(System.UInt64,System.Numerics.BigInteger)">
          <source>Returns a value that indicates whether a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value is greater than a 64-bit unsigned integer.</source>
          <target state="translated">傳回值，這個值表示 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 值是否大於 64 位元不帶正負號的整數。</target>       </trans-unit>
        <trans-unit id="974" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_GreaterThan(System.UInt64,System.Numerics.BigInteger)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="left" /&gt;</ph> is greater than <ph id="ph3">&lt;paramref name="right" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph1">&lt;see langword="true" /&gt;</ph> 大於 <ph id="ph2">&lt;paramref name="left" /&gt;</ph> 則為 <ph id="ph3">&lt;paramref name="right" /&gt;</ph>，否則為 <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="975" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_GreaterThan(System.UInt64,System.Numerics.BigInteger)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_GreaterThan%2A&gt;</ph> method defines the operation of the greater than operator for <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_GreaterThan%2A&gt;</ph>方法定義的作業 greater than 運算子<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="976" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_GreaterThan(System.UInt64,System.Numerics.BigInteger)">
          <source>It enables code such as the following:</source>
          <target state="translated">它可讓程式碼如下所示：</target>       </trans-unit>
        <trans-unit id="977" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_GreaterThan(System.UInt64,System.Numerics.BigInteger)">
          <source>Languages that do not support custom operators can call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType&gt;</ph> method instead.</source>
          <target state="translated">不支援自訂運算子的語言可以呼叫<ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType&gt;</ph>方法改為。</target>       </trans-unit>
        <trans-unit id="978" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_GreaterThan(System.UInt64,System.Numerics.BigInteger)">
          <source>Some languages can also call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_GreaterThan%28System.UInt64%2CSystem.Numerics.BigInteger%29&gt;</ph> method directly, as the following example shows.</source>
          <target state="translated">某些語言也可以呼叫<ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_GreaterThan%28System.UInt64%2CSystem.Numerics.BigInteger%29&gt;</ph>方法直接管理，如下列範例所示。</target>       </trans-unit>
        <trans-unit id="979" translate="yes" xml:space="preserve" uid="T:System.Numerics.BigInteger">
          <source>Returns a value that indicates whether a specified value is greater than or equal to another specified value.</source>
          <target state="translated">傳回值，這個值表示指定的值是否大於或等於另一個指定的值。</target>       </trans-unit>
        <trans-unit id="980" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Int64,System.Numerics.BigInteger)">
          <source>The first value to compare.</source>
          <target state="translated">要比較的第一個值。</target>       </trans-unit>
        <trans-unit id="981" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Int64,System.Numerics.BigInteger)">
          <source>The second value to compare.</source>
          <target state="translated">要比較的第二個值。</target>       </trans-unit>
        <trans-unit id="982" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Int64,System.Numerics.BigInteger)">
          <source>Returns a value that indicates whether a 64-bit signed integer is greater than or equal to a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value.</source>
          <target state="translated">傳回值，這個值表示 64 位元帶正負號的整數是否大於或等於 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 值。</target>       </trans-unit>
        <trans-unit id="983" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Int64,System.Numerics.BigInteger)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="left" /&gt;</ph> is greater than <ph id="ph3">&lt;paramref name="right" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph1">&lt;see langword="true" /&gt;</ph> 大於 <ph id="ph2">&lt;paramref name="left" /&gt;</ph> 則為 <ph id="ph3">&lt;paramref name="right" /&gt;</ph>，否則為 <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="984" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Int64,System.Numerics.BigInteger)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%2A&gt;</ph> method defines the operation of the greater than or equal to operator for <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%2A&gt;</ph>方法定義大於或等於運算子作業<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="985" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Int64,System.Numerics.BigInteger)">
          <source>It enables code such as the following:</source>
          <target state="translated">它可讓程式碼如下所示：</target>       </trans-unit>
        <trans-unit id="986" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Int64,System.Numerics.BigInteger)">
          <source>Languages that do not support custom operators can call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType&gt;</ph> method instead.</source>
          <target state="translated">不支援自訂運算子的語言可以呼叫<ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType&gt;</ph>方法改為。</target>       </trans-unit>
        <trans-unit id="987" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Int64,System.Numerics.BigInteger)">
          <source>Some languages can also call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%28System.Int64%2CSystem.Numerics.BigInteger%29&gt;</ph> method directly, as the following example shows.</source>
          <target state="translated">某些語言也可以呼叫<ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%28System.Int64%2CSystem.Numerics.BigInteger%29&gt;</ph>方法直接管理，如下列範例所示。</target>       </trans-unit>
        <trans-unit id="988" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Int64,System.Numerics.BigInteger)">
          <source>If <ph id="ph1">`left`</ph> is a <ph id="ph2">&lt;xref:System.Byte&gt;</ph>, <ph id="ph3">&lt;xref:System.Int16&gt;</ph>, <ph id="ph4">&lt;xref:System.Int32&gt;</ph>, <ph id="ph5">&lt;xref:System.SByte&gt;</ph>, <ph id="ph6">&lt;xref:System.UInt16&gt;</ph>, or <ph id="ph7">&lt;xref:System.UInt32&gt;</ph> value, it is implicitly converted to an <ph id="ph8">&lt;xref:System.Int64&gt;</ph> value when the operation is performed.</source>
          <target state="translated">如果<ph id="ph1">`left`</ph>是<ph id="ph2">&lt;xref:System.Byte&gt;</ph>， <ph id="ph3">&lt;xref:System.Int16&gt;</ph>， <ph id="ph4">&lt;xref:System.Int32&gt;</ph>， <ph id="ph5">&lt;xref:System.SByte&gt;</ph>， <ph id="ph6">&lt;xref:System.UInt16&gt;</ph>，或<ph id="ph7">&lt;xref:System.UInt32&gt;</ph>值，它會隱含地轉換成<ph id="ph8">&lt;xref:System.Int64&gt;</ph>時執行作業的值。</target>       </trans-unit>
        <trans-unit id="989" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Int64,System.Numerics.BigInteger)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">這個運算子的對等方法是<ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="990" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Numerics.BigInteger,System.Int64)">
          <source>The first value to compare.</source>
          <target state="translated">要比較的第一個值。</target>       </trans-unit>
        <trans-unit id="991" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Numerics.BigInteger,System.Int64)">
          <source>The second value to compare.</source>
          <target state="translated">要比較的第二個值。</target>       </trans-unit>
        <trans-unit id="992" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Numerics.BigInteger,System.Int64)">
          <source>Returns a value that indicates whether a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value is greater than or equal to a 64-bit signed integer value.</source>
          <target state="translated">傳回值，這個值表示 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 值是否大於或等於 64 位元帶正負號的整數值。</target>       </trans-unit>
        <trans-unit id="993" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Numerics.BigInteger,System.Int64)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="left" /&gt;</ph> is greater than <ph id="ph3">&lt;paramref name="right" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph1">&lt;see langword="true" /&gt;</ph> 大於 <ph id="ph2">&lt;paramref name="left" /&gt;</ph> 則為 <ph id="ph3">&lt;paramref name="right" /&gt;</ph>，否則為 <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="994" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Numerics.BigInteger,System.Int64)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%2A&gt;</ph> method defines the operation of the greater than or equal to operator for <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%2A&gt;</ph>方法定義大於或等於運算子作業<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="995" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Numerics.BigInteger,System.Int64)">
          <source>It enables code such as the following:</source>
          <target state="translated">它可讓程式碼如下所示：</target>       </trans-unit>
        <trans-unit id="996" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Numerics.BigInteger,System.Int64)">
          <source>Languages that do not support custom operators can call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType&gt;</ph> method instead.</source>
          <target state="translated">不支援自訂運算子的語言可以呼叫<ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType&gt;</ph>方法改為。</target>       </trans-unit>
        <trans-unit id="997" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Numerics.BigInteger,System.Int64)">
          <source>Some languages can also call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%28System.Numerics.BigInteger%2CSystem.Int64%29&gt;</ph> method directly, as the following example shows.</source>
          <target state="translated">某些語言也可以呼叫<ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%28System.Numerics.BigInteger%2CSystem.Int64%29&gt;</ph>方法直接管理，如下列範例所示。</target>       </trans-unit>
        <trans-unit id="998" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Numerics.BigInteger,System.Int64)">
          <source>If <ph id="ph1">`right`</ph> is a <ph id="ph2">&lt;xref:System.Byte&gt;</ph>, <ph id="ph3">&lt;xref:System.Int16&gt;</ph>, <ph id="ph4">&lt;xref:System.Int32&gt;</ph>, <ph id="ph5">&lt;xref:System.SByte&gt;</ph>, <ph id="ph6">&lt;xref:System.UInt16&gt;</ph>, or <ph id="ph7">&lt;xref:System.UInt32&gt;</ph> value, it is implicitly converted to an <ph id="ph8">&lt;xref:System.Int64&gt;</ph> value when the operation is performed.</source>
          <target state="translated">如果<ph id="ph1">`right`</ph>是<ph id="ph2">&lt;xref:System.Byte&gt;</ph>， <ph id="ph3">&lt;xref:System.Int16&gt;</ph>， <ph id="ph4">&lt;xref:System.Int32&gt;</ph>， <ph id="ph5">&lt;xref:System.SByte&gt;</ph>， <ph id="ph6">&lt;xref:System.UInt16&gt;</ph>，或<ph id="ph7">&lt;xref:System.UInt32&gt;</ph>值，它會隱含地轉換成<ph id="ph8">&lt;xref:System.Int64&gt;</ph>時執行作業的值。</target>       </trans-unit>
        <trans-unit id="999" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Numerics.BigInteger,System.Int64)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">這個運算子的對等方法是<ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1000" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The first value to compare.</source>
          <target state="translated">要比較的第一個值。</target>       </trans-unit>
        <trans-unit id="1001" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The second value to compare.</source>
          <target state="translated">要比較的第二個值。</target>       </trans-unit>
        <trans-unit id="1002" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Returns a value that indicates whether a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value is greater than or equal to another <ph id="ph2">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value.</source>
          <target state="translated">傳回值，這個值表示 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 值是否大於或等於另一個 <ph id="ph2">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 值。</target>       </trans-unit>
        <trans-unit id="1003" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="left" /&gt;</ph> is greater than <ph id="ph3">&lt;paramref name="right" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph1">&lt;see langword="true" /&gt;</ph> 大於 <ph id="ph2">&lt;paramref name="left" /&gt;</ph> 則為 <ph id="ph3">&lt;paramref name="right" /&gt;</ph>，否則為 <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1004" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%2A&gt;</ph> method defines the operation of the greater than or equal to operator for <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%2A&gt;</ph>方法定義大於或等於運算子作業<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="1005" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>It enables code such as the following:</source>
          <target state="translated">它可讓程式碼如下所示：</target>       </trans-unit>
        <trans-unit id="1006" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Languages that do not support custom operators can call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Compare%2A?displayProperty=nameWithType&gt;</ph> method instead.</source>
          <target state="translated">不支援自訂運算子的語言可以呼叫<ph id="ph1">&lt;xref:System.Numerics.BigInteger.Compare%2A?displayProperty=nameWithType&gt;</ph>方法改為。</target>       </trans-unit>
        <trans-unit id="1007" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Some languages can also call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29&gt;</ph> method directly, as the following example shows.</source>
          <target state="translated">某些語言也可以呼叫<ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29&gt;</ph>方法直接管理，如下列範例所示。</target>       </trans-unit>
        <trans-unit id="1008" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo(System.Numerics.BigInteger)?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">這個運算子的對等方法是<ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo(System.Numerics.BigInteger)?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1009" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Numerics.BigInteger,System.UInt64)">
          <source>The first value to compare.</source>
          <target state="translated">要比較的第一個值。</target>       </trans-unit>
        <trans-unit id="1010" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Numerics.BigInteger,System.UInt64)">
          <source>The second value to compare.</source>
          <target state="translated">要比較的第二個值。</target>       </trans-unit>
        <trans-unit id="1011" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Numerics.BigInteger,System.UInt64)">
          <source>Returns a value that indicates whether a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value is greater than or equal to a 64-bit unsigned integer value.</source>
          <target state="translated">傳回值，這個值表示 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 值是否大於或等於 64 位元不帶正負號的整數值。</target>       </trans-unit>
        <trans-unit id="1012" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Numerics.BigInteger,System.UInt64)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="left" /&gt;</ph> is greater than <ph id="ph3">&lt;paramref name="right" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph1">&lt;see langword="true" /&gt;</ph> 大於 <ph id="ph2">&lt;paramref name="left" /&gt;</ph> 則為 <ph id="ph3">&lt;paramref name="right" /&gt;</ph>，否則為 <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1013" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Numerics.BigInteger,System.UInt64)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%2A&gt;</ph> method defines the operation of the greater than or equal to operator for <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%2A&gt;</ph>方法定義大於或等於運算子作業<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="1014" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Numerics.BigInteger,System.UInt64)">
          <source>It enables code such as the following:</source>
          <target state="translated">它可讓程式碼如下所示：</target>       </trans-unit>
        <trans-unit id="1015" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Numerics.BigInteger,System.UInt64)">
          <source>Languages that do not support custom operators can call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType&gt;</ph> method instead.</source>
          <target state="translated">不支援自訂運算子的語言可以呼叫<ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType&gt;</ph>方法改為。</target>       </trans-unit>
        <trans-unit id="1016" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Numerics.BigInteger,System.UInt64)">
          <source>Some languages can also call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%28System.Numerics.BigInteger%2CSystem.UInt64%29&gt;</ph> method directly, as the following example shows.</source>
          <target state="translated">某些語言也可以呼叫<ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%28System.Numerics.BigInteger%2CSystem.UInt64%29&gt;</ph>方法直接管理，如下列範例所示。</target>       </trans-unit>
        <trans-unit id="1017" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Numerics.BigInteger,System.UInt64)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">這個運算子的對等方法是<ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1018" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.UInt64,System.Numerics.BigInteger)">
          <source>The first value to compare.</source>
          <target state="translated">要比較的第一個值。</target>       </trans-unit>
        <trans-unit id="1019" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.UInt64,System.Numerics.BigInteger)">
          <source>The second value to compare.</source>
          <target state="translated">要比較的第二個值。</target>       </trans-unit>
        <trans-unit id="1020" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.UInt64,System.Numerics.BigInteger)">
          <source>Returns a value that indicates whether a 64-bit unsigned integer is greater than or equal to a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value.</source>
          <target state="translated">傳回值，這個值表示 64 位元不帶正負號的整數是否大於或等於 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 值。</target>       </trans-unit>
        <trans-unit id="1021" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.UInt64,System.Numerics.BigInteger)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="left" /&gt;</ph> is greater than <ph id="ph3">&lt;paramref name="right" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph1">&lt;see langword="true" /&gt;</ph> 大於 <ph id="ph2">&lt;paramref name="left" /&gt;</ph> 則為 <ph id="ph3">&lt;paramref name="right" /&gt;</ph>，否則為 <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1022" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.UInt64,System.Numerics.BigInteger)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%2A&gt;</ph> method defines the operation of the greater than or equal to operator for <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%2A&gt;</ph>方法定義大於或等於運算子作業<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="1023" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.UInt64,System.Numerics.BigInteger)">
          <source>It enables code such as the following:</source>
          <target state="translated">它可讓程式碼如下所示：</target>       </trans-unit>
        <trans-unit id="1024" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.UInt64,System.Numerics.BigInteger)">
          <source>Languages that do not support custom operators can call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType&gt;</ph> method instead.</source>
          <target state="translated">不支援自訂運算子的語言可以呼叫<ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType&gt;</ph>方法改為。</target>       </trans-unit>
        <trans-unit id="1025" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.UInt64,System.Numerics.BigInteger)">
          <source>Some languages can also call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%28System.UInt64%2CSystem.Numerics.BigInteger%29&gt;</ph> method directly, as the following example shows.</source>
          <target state="translated">某些語言也可以呼叫<ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%28System.UInt64%2CSystem.Numerics.BigInteger%29&gt;</ph>方法直接管理，如下列範例所示。</target>       </trans-unit>
        <trans-unit id="1026" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.UInt64,System.Numerics.BigInteger)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">這個運算子的對等方法是<ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1027" translate="yes" xml:space="preserve" uid="T:System.Numerics.BigInteger">
          <source>Defines an implicit conversion between a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> object and another type.</source>
          <target state="translated">定義 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 物件與另一個型別之間的隱含轉換。</target>       </trans-unit>
        <trans-unit id="1028" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger">
          <source>The value to convert to a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph>.</source>
          <target state="translated">要轉換為 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 的值。</target>       </trans-unit>
        <trans-unit id="1029" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger">
          <source>Defines an implicit conversion of an unsigned byte to a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value.</source>
          <target state="translated">定義從不帶正負號的位元組到 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 值的隱含轉換。</target>       </trans-unit>
        <trans-unit id="1030" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger">
          <source>An object that contains the value of the <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parameter.</source>
          <target state="translated">物件，包含 <ph id="ph1">&lt;paramref name="value" /&gt;</ph> 參數的值。</target>       </trans-unit>
        <trans-unit id="1031" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger">
          <source>Any fractional part of the <ph id="ph1">`value`</ph> parameter is truncated before conversion.</source>
          <target state="translated">任何小數部分<ph id="ph1">`value`</ph>參數會被截斷轉換之前。</target>       </trans-unit>
        <trans-unit id="1032" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger">
          <source>For languages that do not support implicit operators, the alternative method is <ph id="ph1">&lt;xref:System.Numerics.BigInteger.%23ctor%28System.Int32%29?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">不支援隱含運算子的語言，另一種方法是<ph id="ph1">&lt;xref:System.Numerics.BigInteger.%23ctor%28System.Int32%29?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1033" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger">
          <source>The overloads of the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger&gt;</ph> method define the types to which or from which a compiler can automatically convert a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</source>
          <target state="translated">多載<ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger&gt;</ph>方法定義的類型，或從自動轉換編譯器可以<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>而不需要明確轉型運算子 （C# 中） 或 （在 Visual Basic) 的轉換函式呼叫的值。</target>       </trans-unit>
        <trans-unit id="1034" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger">
          <source>They are widening conversions that do not involve data loss and do not throw an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>.</source>
          <target state="translated">它們會擴展轉換不會涉及資料遺失，則不擲回<ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1035" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger">
          <source>This overload lets the compiler handle conversions from a <ph id="ph1">&lt;xref:System.Byte&gt;</ph> value to a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value, as the following example shows.</source>
          <target state="translated">這個多載可讓編譯器處理從不<ph id="ph1">&lt;xref:System.Byte&gt;</ph>值設定為<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值，如下列範例所示。</target>       </trans-unit>
        <trans-unit id="1036" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Implicit(System.Int16)~System.Numerics.BigInteger">
          <source>The value to convert to a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph>.</source>
          <target state="translated">要轉換為 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 的值。</target>       </trans-unit>
        <trans-unit id="1037" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Implicit(System.Int16)~System.Numerics.BigInteger">
          <source>Defines an implicit conversion of a signed 16-bit integer to a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value.</source>
          <target state="translated">定義從帶正負號的 16 位元整數到 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 值的隱含轉換。</target>       </trans-unit>
        <trans-unit id="1038" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Implicit(System.Int16)~System.Numerics.BigInteger">
          <source>An object that contains the value of the <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parameter.</source>
          <target state="translated">物件，包含 <ph id="ph1">&lt;paramref name="value" /&gt;</ph> 參數的值。</target>       </trans-unit>
        <trans-unit id="1039" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Implicit(System.Int16)~System.Numerics.BigInteger">
          <source>For languages that do not support implicit operators, the alternative method is <ph id="ph1">&lt;xref:System.Numerics.BigInteger.%23ctor%28System.Int32%29?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">不支援隱含運算子的語言，另一種方法是<ph id="ph1">&lt;xref:System.Numerics.BigInteger.%23ctor%28System.Int32%29?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1040" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Implicit(System.Int16)~System.Numerics.BigInteger">
          <source>The overloads of the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger&gt;</ph> method define the types to which or from which a compiler can automatically convert a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</source>
          <target state="translated">多載<ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger&gt;</ph>方法定義的類型，或從自動轉換編譯器可以<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>而不需要明確轉型運算子 （C# 中） 或 （在 Visual Basic) 的轉換函式呼叫的值。</target>       </trans-unit>
        <trans-unit id="1041" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Implicit(System.Int16)~System.Numerics.BigInteger">
          <source>They are widening conversions that do not involve data loss and do not throw an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>.</source>
          <target state="translated">它們會擴展轉換不會涉及資料遺失，則不擲回<ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1042" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Implicit(System.Int16)~System.Numerics.BigInteger">
          <source>This overload lets the compiler handle conversions from a <ph id="ph1">&lt;xref:System.Int16&gt;</ph> value to a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value, as the following example shows.</source>
          <target state="translated">這個多載可讓編譯器處理從不<ph id="ph1">&lt;xref:System.Int16&gt;</ph>值設定為<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值，如下列範例所示。</target>       </trans-unit>
        <trans-unit id="1043" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Implicit(System.Int32)~System.Numerics.BigInteger">
          <source>The value to convert to a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph>.</source>
          <target state="translated">要轉換為 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 的值。</target>       </trans-unit>
        <trans-unit id="1044" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Implicit(System.Int32)~System.Numerics.BigInteger">
          <source>Defines an implicit conversion of a signed 32-bit integer to a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value.</source>
          <target state="translated">定義從帶正負號的 32 位元整數到 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 值的隱含轉換。</target>       </trans-unit>
        <trans-unit id="1045" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Implicit(System.Int32)~System.Numerics.BigInteger">
          <source>An object that contains the value of the <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parameter.</source>
          <target state="translated">物件，包含 <ph id="ph1">&lt;paramref name="value" /&gt;</ph> 參數的值。</target>       </trans-unit>
        <trans-unit id="1046" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Implicit(System.Int32)~System.Numerics.BigInteger">
          <source>For languages that do not support implicit operators, the alternative method is <ph id="ph1">&lt;xref:System.Numerics.BigInteger.%23ctor%28System.Int32%29?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">不支援隱含運算子的語言，另一種方法是<ph id="ph1">&lt;xref:System.Numerics.BigInteger.%23ctor%28System.Int32%29?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1047" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Implicit(System.Int32)~System.Numerics.BigInteger">
          <source>The overloads of the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger&gt;</ph> method define the types to which or from which a compiler can automatically convert a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</source>
          <target state="translated">多載<ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger&gt;</ph>方法定義的類型，或從自動轉換編譯器可以<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>而不需要明確轉型運算子 （C# 中） 或 （在 Visual Basic) 的轉換函式呼叫的值。</target>       </trans-unit>
        <trans-unit id="1048" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Implicit(System.Int32)~System.Numerics.BigInteger">
          <source>They are widening conversions that do not involve data loss and do not throw an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>.</source>
          <target state="translated">它們會擴展轉換不會涉及資料遺失，則不擲回<ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1049" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Implicit(System.Int32)~System.Numerics.BigInteger">
          <source>This overload lets the compiler handle conversions from a <ph id="ph1">&lt;xref:System.Int32&gt;</ph> value to a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value, as the following example shows.</source>
          <target state="translated">這個多載可讓編譯器處理從不<ph id="ph1">&lt;xref:System.Int32&gt;</ph>值設定為<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值，如下列範例所示。</target>       </trans-unit>
        <trans-unit id="1050" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Implicit(System.Int64)~System.Numerics.BigInteger">
          <source>The value to convert to a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph>.</source>
          <target state="translated">要轉換為 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 的值。</target>       </trans-unit>
        <trans-unit id="1051" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Implicit(System.Int64)~System.Numerics.BigInteger">
          <source>Defines an implicit conversion of a signed 64-bit integer to a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value.</source>
          <target state="translated">定義從帶正負號的 64 位元整數到 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 值的隱含轉換。</target>       </trans-unit>
        <trans-unit id="1052" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Implicit(System.Int64)~System.Numerics.BigInteger">
          <source>An object that contains the value of the <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parameter.</source>
          <target state="translated">物件，包含 <ph id="ph1">&lt;paramref name="value" /&gt;</ph> 參數的值。</target>       </trans-unit>
        <trans-unit id="1053" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Implicit(System.Int64)~System.Numerics.BigInteger">
          <source>For languages that do not support implicit operators, the alternative method is <ph id="ph1">&lt;xref:System.Numerics.BigInteger.%23ctor%28System.Int64%29?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">不支援隱含運算子的語言，另一種方法是<ph id="ph1">&lt;xref:System.Numerics.BigInteger.%23ctor%28System.Int64%29?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1054" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Implicit(System.Int64)~System.Numerics.BigInteger">
          <source>The overloads of the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger&gt;</ph> method define the types to which or from which a compiler can automatically convert a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</source>
          <target state="translated">多載<ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger&gt;</ph>方法定義的類型，或從自動轉換編譯器可以<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>而不需要明確轉型運算子 （C# 中） 或 （在 Visual Basic) 的轉換函式呼叫的值。</target>       </trans-unit>
        <trans-unit id="1055" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Implicit(System.Int64)~System.Numerics.BigInteger">
          <source>They are widening conversions that do not involve data loss and do not throw an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>.</source>
          <target state="translated">它們會擴展轉換不會涉及資料遺失，則不擲回<ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1056" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Implicit(System.Int64)~System.Numerics.BigInteger">
          <source>This overload lets the compiler handle conversions from a <ph id="ph1">&lt;xref:System.Int64&gt;</ph> value to a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value, as the following example shows.</source>
          <target state="translated">這個多載可讓編譯器處理從不<ph id="ph1">&lt;xref:System.Int64&gt;</ph>值設定為<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值，如下列範例所示。</target>       </trans-unit>
        <trans-unit id="1057" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Implicit(System.SByte)~System.Numerics.BigInteger">
          <source>The value to convert to a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph>.</source>
          <target state="translated">要轉換為 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 的值。</target>       </trans-unit>
        <trans-unit id="1058" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Implicit(System.SByte)~System.Numerics.BigInteger">
          <source>Defines an implicit conversion of an 8-bit signed integer to a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value.</source>
          <target state="translated">定義從 8 位元帶正負號的整數到 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 值的隱含轉換。</target>       </trans-unit>
        <trans-unit id="1059" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Implicit(System.SByte)~System.Numerics.BigInteger">
          <source>This API is not CLS-compliant.</source>
          <target state="translated">此應用程式開發介面不符合 CLS 標準。</target>       </trans-unit>
        <trans-unit id="1060" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Implicit(System.SByte)~System.Numerics.BigInteger">
          <source>The compliant alternative is <ph id="ph1">&lt;see cref="M:System.Numerics.BigInteger.#ctor(System.Int32)" /&gt;</ph>.</source>
          <target state="translated">符合規範的替代項目為 <ph id="ph1">&lt;see cref="M:System.Numerics.BigInteger.#ctor(System.Int32)" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1061" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Implicit(System.SByte)~System.Numerics.BigInteger">
          <source>An object that contains the value of the <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parameter.</source>
          <target state="translated">物件，包含 <ph id="ph1">&lt;paramref name="value" /&gt;</ph> 參數的值。</target>       </trans-unit>
        <trans-unit id="1062" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Implicit(System.SByte)~System.Numerics.BigInteger">
          <source>For languages that do not support implicit operators, the alternative method is <ph id="ph1">&lt;xref:System.Numerics.BigInteger.%23ctor%28System.Int32%29?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">不支援隱含運算子的語言，另一種方法是<ph id="ph1">&lt;xref:System.Numerics.BigInteger.%23ctor%28System.Int32%29?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1063" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Implicit(System.SByte)~System.Numerics.BigInteger">
          <source>The overloads of the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger&gt;</ph> method define the types to which or from which a compiler can automatically convert a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</source>
          <target state="translated">多載<ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger&gt;</ph>方法定義的類型，或從自動轉換編譯器可以<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>而不需要明確轉型運算子 （C# 中） 或 （在 Visual Basic) 的轉換函式呼叫的值。</target>       </trans-unit>
        <trans-unit id="1064" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Implicit(System.SByte)~System.Numerics.BigInteger">
          <source>They are widening conversions that do not involve data loss and do not throw an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>.</source>
          <target state="translated">它們會擴展轉換不會涉及資料遺失，則不擲回<ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1065" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Implicit(System.SByte)~System.Numerics.BigInteger">
          <source>This overload lets the compiler handle conversions from a <ph id="ph1">&lt;xref:System.SByte&gt;</ph> value to a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value, as the following example shows.</source>
          <target state="translated">這個多載可讓編譯器處理從不<ph id="ph1">&lt;xref:System.SByte&gt;</ph>值設定為<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值，如下列範例所示。</target>       </trans-unit>
        <trans-unit id="1066" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Implicit(System.UInt16)~System.Numerics.BigInteger">
          <source>The value to convert to a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph>.</source>
          <target state="translated">要轉換為 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 的值。</target>       </trans-unit>
        <trans-unit id="1067" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Implicit(System.UInt16)~System.Numerics.BigInteger">
          <source>Defines an implicit conversion of a 16-bit unsigned integer to a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value.</source>
          <target state="translated">定義從 16 位元不帶正負號的整數到 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 值的隱含轉換。</target>       </trans-unit>
        <trans-unit id="1068" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Implicit(System.UInt16)~System.Numerics.BigInteger">
          <source>This API is not CLS-compliant.</source>
          <target state="translated">此應用程式開發介面不符合 CLS 標準。</target>       </trans-unit>
        <trans-unit id="1069" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Implicit(System.UInt16)~System.Numerics.BigInteger">
          <source>The compliant alternative is <ph id="ph1">&lt;see cref="M:System.Numerics.BigInteger.op_Implicit(System.Int32)~System.Numerics.BigInteger" /&gt;</ph>.</source>
          <target state="translated">符合規範的替代項目為 <ph id="ph1">&lt;see cref="M:System.Numerics.BigInteger.op_Implicit(System.Int32)~System.Numerics.BigInteger" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1070" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Implicit(System.UInt16)~System.Numerics.BigInteger">
          <source>An object that contains the value of the <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parameter.</source>
          <target state="translated">物件，包含 <ph id="ph1">&lt;paramref name="value" /&gt;</ph> 參數的值。</target>       </trans-unit>
        <trans-unit id="1071" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Implicit(System.UInt16)~System.Numerics.BigInteger">
          <source>For languages that do not support implicit operators, the alternative method is <ph id="ph1">&lt;xref:System.Numerics.BigInteger.%23ctor%28System.UInt32%29?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">不支援隱含運算子的語言，另一種方法是<ph id="ph1">&lt;xref:System.Numerics.BigInteger.%23ctor%28System.UInt32%29?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1072" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Implicit(System.UInt16)~System.Numerics.BigInteger">
          <source>The overloads of the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger&gt;</ph> method define the types to which or from which a compiler can automatically convert a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</source>
          <target state="translated">多載<ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger&gt;</ph>方法定義的類型，或從自動轉換編譯器可以<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>而不需要明確轉型運算子 （C# 中） 或 （在 Visual Basic) 的轉換函式呼叫的值。</target>       </trans-unit>
        <trans-unit id="1073" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Implicit(System.UInt16)~System.Numerics.BigInteger">
          <source>They are widening conversions that do not involve data loss and do not throw an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>.</source>
          <target state="translated">它們會擴展轉換不會涉及資料遺失，則不擲回<ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1074" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Implicit(System.UInt16)~System.Numerics.BigInteger">
          <source>This overload lets the compiler handle conversions from a <ph id="ph1">&lt;xref:System.UInt16&gt;</ph> value to a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value, as the following example shows.</source>
          <target state="translated">這個多載可讓編譯器處理從不<ph id="ph1">&lt;xref:System.UInt16&gt;</ph>值設定為<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值，如下列範例所示。</target>       </trans-unit>
        <trans-unit id="1075" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Implicit(System.UInt32)~System.Numerics.BigInteger">
          <source>The value to convert to a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph>.</source>
          <target state="translated">要轉換為 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 的值。</target>       </trans-unit>
        <trans-unit id="1076" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Implicit(System.UInt32)~System.Numerics.BigInteger">
          <source>Defines an implicit conversion of a 32-bit unsigned integer to a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value.</source>
          <target state="translated">定義從 32 位元不帶正負號的整數到 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 值的隱含轉換。</target>       </trans-unit>
        <trans-unit id="1077" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Implicit(System.UInt32)~System.Numerics.BigInteger">
          <source>This API is not CLS-compliant.</source>
          <target state="translated">此應用程式開發介面不符合 CLS 標準。</target>       </trans-unit>
        <trans-unit id="1078" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Implicit(System.UInt32)~System.Numerics.BigInteger">
          <source>The compliant alternative is <ph id="ph1">&lt;see cref="M:System.Numerics.BigInteger.op_Implicit(System.Int64)~System.Numerics.BigInteger" /&gt;</ph>.</source>
          <target state="translated">符合規範的替代項目為 <ph id="ph1">&lt;see cref="M:System.Numerics.BigInteger.op_Implicit(System.Int64)~System.Numerics.BigInteger" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1079" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Implicit(System.UInt32)~System.Numerics.BigInteger">
          <source>An object that contains the value of the <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parameter.</source>
          <target state="translated">物件，包含 <ph id="ph1">&lt;paramref name="value" /&gt;</ph> 參數的值。</target>       </trans-unit>
        <trans-unit id="1080" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Implicit(System.UInt32)~System.Numerics.BigInteger">
          <source>For languages that do not support implicit operators, the alternative method is <ph id="ph1">&lt;xref:System.Numerics.BigInteger.%23ctor%28System.UInt32%29?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">不支援隱含運算子的語言，另一種方法是<ph id="ph1">&lt;xref:System.Numerics.BigInteger.%23ctor%28System.UInt32%29?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1081" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Implicit(System.UInt32)~System.Numerics.BigInteger">
          <source>The overloads of the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger&gt;</ph> method define the types to which or from which a compiler can automatically convert a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</source>
          <target state="translated">多載<ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger&gt;</ph>方法定義的類型，或從自動轉換編譯器可以<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>而不需要明確轉型運算子 （C# 中） 或 （在 Visual Basic) 的轉換函式呼叫的值。</target>       </trans-unit>
        <trans-unit id="1082" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Implicit(System.UInt32)~System.Numerics.BigInteger">
          <source>They are widening conversions that do not involve data loss and do not throw an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>.</source>
          <target state="translated">它們會擴展轉換不會涉及資料遺失，則不擲回<ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1083" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Implicit(System.UInt32)~System.Numerics.BigInteger">
          <source>This overload lets the compiler handle conversions from a <ph id="ph1">&lt;xref:System.UInt32&gt;</ph> value to a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value, as the following example shows.</source>
          <target state="translated">這個多載可讓編譯器處理從不<ph id="ph1">&lt;xref:System.UInt32&gt;</ph>值設定為<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值，如下列範例所示。</target>       </trans-unit>
        <trans-unit id="1084" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Implicit(System.UInt64)~System.Numerics.BigInteger">
          <source>The value to convert to a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph>.</source>
          <target state="translated">要轉換為 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 的值。</target>       </trans-unit>
        <trans-unit id="1085" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Implicit(System.UInt64)~System.Numerics.BigInteger">
          <source>Defines an implicit conversion of a 64-bit unsigned integer to a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value.</source>
          <target state="translated">定義從 64 位元不帶正負號的整數到 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 值的隱含轉換。</target>       </trans-unit>
        <trans-unit id="1086" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Implicit(System.UInt64)~System.Numerics.BigInteger">
          <source>This API is not CLS-compliant.</source>
          <target state="translated">此應用程式開發介面不符合 CLS 標準。</target>       </trans-unit>
        <trans-unit id="1087" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Implicit(System.UInt64)~System.Numerics.BigInteger">
          <source>The compliant alternative is <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph>.</source>
          <target state="translated">符合規範的替代項目為 <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1088" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Implicit(System.UInt64)~System.Numerics.BigInteger">
          <source>An object that contains the value of the <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parameter.</source>
          <target state="translated">物件，包含 <ph id="ph1">&lt;paramref name="value" /&gt;</ph> 參數的值。</target>       </trans-unit>
        <trans-unit id="1089" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Implicit(System.UInt64)~System.Numerics.BigInteger">
          <source>For languages that do not support implicit operators, the alternative method is <ph id="ph1">&lt;xref:System.Numerics.BigInteger.%23ctor%28System.UInt64%29?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">不支援隱含運算子的語言，另一種方法是<ph id="ph1">&lt;xref:System.Numerics.BigInteger.%23ctor%28System.UInt64%29?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1090" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Implicit(System.UInt64)~System.Numerics.BigInteger">
          <source>The overloads of the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger&gt;</ph> method define the types to which or from which a compiler can automatically convert a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</source>
          <target state="translated">多載<ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger&gt;</ph>方法定義的類型，或從自動轉換編譯器可以<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>而不需要明確轉型運算子 （C# 中） 或 （在 Visual Basic) 的轉換函式呼叫的值。</target>       </trans-unit>
        <trans-unit id="1091" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Implicit(System.UInt64)~System.Numerics.BigInteger">
          <source>They are widening conversions that do not involve data loss and do not throw an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>.</source>
          <target state="translated">它們會擴展轉換不會涉及資料遺失，則不擲回<ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1092" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Implicit(System.UInt64)~System.Numerics.BigInteger">
          <source>This overload lets the compiler handle conversions from a <ph id="ph1">&lt;xref:System.UInt64&gt;</ph> value to a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value, as the following example shows.</source>
          <target state="translated">這個多載可讓編譯器處理從不<ph id="ph1">&lt;xref:System.UInt64&gt;</ph>值設定為<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值，如下列範例所示。</target>       </trans-unit>
        <trans-unit id="1093" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Increment(System.Numerics.BigInteger)">
          <source>The value to increment.</source>
          <target state="translated">要遞增的值。</target>       </trans-unit>
        <trans-unit id="1094" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Increment(System.Numerics.BigInteger)">
          <source>Increments a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value by 1.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 值遞增 1。</target>       </trans-unit>
        <trans-unit id="1095" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Increment(System.Numerics.BigInteger)">
          <source>The value of the <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parameter incremented by 1.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> 參數遞增 1 後的值。</target>       </trans-unit>
        <trans-unit id="1096" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Increment(System.Numerics.BigInteger)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Increment%2A&gt;</ph> method defines the increment operation for <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Increment%2A&gt;</ph>方法定義的遞增作業<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="1097" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Increment(System.Numerics.BigInteger)">
          <source>It enables code such as the following:</source>
          <target state="translated">它可讓程式碼如下所示：</target>       </trans-unit>
        <trans-unit id="1098" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Increment(System.Numerics.BigInteger)">
          <source>Some languages (such as Visual Basic) that lack an increment operator or do not support operator overloading can call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Increment%2A&gt;</ph> method directly, as the following example shows.</source>
          <target state="translated">某些語言 （例如 Visual Basic) 缺少遞增運算子或不支援運算子多載可以呼叫<ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Increment%2A&gt;</ph>方法直接管理，如下列範例所示。</target>       </trans-unit>
        <trans-unit id="1099" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Increment(System.Numerics.BigInteger)">
          <source>Because <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> objects are immutable, the <ph id="ph2">&lt;xref:System.Numerics.BigInteger.op_Increment%2A&gt;</ph> operator creates a new <ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph> object whose value is one more than the <ph id="ph4">&lt;xref:System.Numerics.BigInteger&gt;</ph> object represented by <ph id="ph5">`value`</ph>.</source>
          <target state="translated">因為<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>物件是不變，<ph id="ph2">&lt;xref:System.Numerics.BigInteger.op_Increment%2A&gt;</ph>運算子會建立新<ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph>物件，其值為一個以上的<ph id="ph4">&lt;xref:System.Numerics.BigInteger&gt;</ph>物件所代表<ph id="ph5">`value`</ph>。</target>       </trans-unit>
        <trans-unit id="1100" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Increment(System.Numerics.BigInteger)">
          <source>Therefore, repeated calls to <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Increment%2A&gt;</ph> may be expensive.</source>
          <target state="translated">因此，重複呼叫<ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Increment%2A&gt;</ph>可能很昂貴。</target>       </trans-unit>
        <trans-unit id="1101" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Increment(System.Numerics.BigInteger)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Add%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">這個運算子的對等方法是<ph id="ph1">&lt;xref:System.Numerics.BigInteger.Add%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1102" translate="yes" xml:space="preserve" uid="T:System.Numerics.BigInteger">
          <source>Returns a value that indicates whether two numeric values are not equal.</source>
          <target state="translated">傳回值，這個值表示兩個數值是否不相等。</target>       </trans-unit>
        <trans-unit id="1103" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Inequality(System.Int64,System.Numerics.BigInteger)">
          <source>The first value to compare.</source>
          <target state="translated">要比較的第一個值。</target>       </trans-unit>
        <trans-unit id="1104" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Inequality(System.Int64,System.Numerics.BigInteger)">
          <source>The second value to compare.</source>
          <target state="translated">要比較的第二個值。</target>       </trans-unit>
        <trans-unit id="1105" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Inequality(System.Int64,System.Numerics.BigInteger)">
          <source>Returns a value that indicates whether a 64-bit signed integer and a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value are not equal.</source>
          <target state="translated">傳回值，這個值表示 64 位元帶正負號的整數與 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 值是否不相等。</target>       </trans-unit>
        <trans-unit id="1106" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Inequality(System.Int64,System.Numerics.BigInteger)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="left" /&gt;</ph> and <ph id="ph3">&lt;paramref name="right" /&gt;</ph> are not equal; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph2">&lt;paramref name="left" /&gt;</ph> 和 <ph id="ph3">&lt;paramref name="right" /&gt;</ph> 不相等，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否則為 <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1107" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Inequality(System.Int64,System.Numerics.BigInteger)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Inequality%2A&gt;</ph> method defines the operation of the inequality operator for <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Inequality%2A&gt;</ph>方法會定義作業的不等比較運算子的<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="1108" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Inequality(System.Int64,System.Numerics.BigInteger)">
          <source>It enables code such as the following:</source>
          <target state="translated">它可讓程式碼如下所示：</target>       </trans-unit>
        <trans-unit id="1109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Inequality(System.Int64,System.Numerics.BigInteger)">
          <source>Languages that do not support custom operators can test for inequality by using one of the following techniques:</source>
          <target state="translated">不支援自訂運算子的語言可以使用其中一種下列技巧測試不相等：</target>       </trans-unit>
        <trans-unit id="1110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Inequality(System.Int64,System.Numerics.BigInteger)">
          <source>Calling the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType&gt;</ph> instance method, which indicates the relationship between a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> and a signed long integer value.</source>
          <target state="translated">呼叫<ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType&gt;</ph>執行個體方法，表示之間的關係<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>和帶正負號的長整數值。</target>       </trans-unit>
        <trans-unit id="1111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Inequality(System.Int64,System.Numerics.BigInteger)">
          <source>Calling the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Equals%28System.Int64%29?displayProperty=nameWithType&gt;</ph> instance method and reversing its value.</source>
          <target state="translated">呼叫<ph id="ph1">&lt;xref:System.Numerics.BigInteger.Equals%28System.Int64%29?displayProperty=nameWithType&gt;</ph>執行個體方法和反轉它的值。</target>       </trans-unit>
        <trans-unit id="1112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Inequality(System.Int64,System.Numerics.BigInteger)">
          <source>If <ph id="ph1">`left`</ph> is a <ph id="ph2">&lt;xref:System.Byte&gt;</ph>, <ph id="ph3">&lt;xref:System.Int16&gt;</ph>, <ph id="ph4">&lt;xref:System.Int32&gt;</ph>, <ph id="ph5">&lt;xref:System.SByte&gt;</ph>, <ph id="ph6">&lt;xref:System.UInt16&gt;</ph>, or <ph id="ph7">&lt;xref:System.UInt32&gt;</ph> value, it is implicitly converted to an <ph id="ph8">&lt;xref:System.Int64&gt;</ph> value when the operation is performed.</source>
          <target state="translated">如果<ph id="ph1">`left`</ph>是<ph id="ph2">&lt;xref:System.Byte&gt;</ph>， <ph id="ph3">&lt;xref:System.Int16&gt;</ph>， <ph id="ph4">&lt;xref:System.Int32&gt;</ph>， <ph id="ph5">&lt;xref:System.SByte&gt;</ph>， <ph id="ph6">&lt;xref:System.UInt16&gt;</ph>，或<ph id="ph7">&lt;xref:System.UInt32&gt;</ph>值，它會隱含地轉換成<ph id="ph8">&lt;xref:System.Int64&gt;</ph>時執行作業的值。</target>       </trans-unit>
        <trans-unit id="1113" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Inequality(System.Numerics.BigInteger,System.Int64)">
          <source>The first value to compare.</source>
          <target state="translated">要比較的第一個值。</target>       </trans-unit>
        <trans-unit id="1114" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Inequality(System.Numerics.BigInteger,System.Int64)">
          <source>The second value to compare.</source>
          <target state="translated">要比較的第二個值。</target>       </trans-unit>
        <trans-unit id="1115" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Inequality(System.Numerics.BigInteger,System.Int64)">
          <source>Returns a value that indicates whether a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value and a 64-bit signed integer are not equal.</source>
          <target state="translated">傳回值，這個值表示 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 值與 64 位元帶正負號的整數是否不相等。</target>       </trans-unit>
        <trans-unit id="1116" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Inequality(System.Numerics.BigInteger,System.Int64)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="left" /&gt;</ph> and <ph id="ph3">&lt;paramref name="right" /&gt;</ph> are not equal; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph2">&lt;paramref name="left" /&gt;</ph> 和 <ph id="ph3">&lt;paramref name="right" /&gt;</ph> 不相等，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否則為 <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Inequality(System.Numerics.BigInteger,System.Int64)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Inequality%2A&gt;</ph> method defines the operation of the inequality operator for <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Inequality%2A&gt;</ph>方法會定義作業的不等比較運算子的<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="1118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Inequality(System.Numerics.BigInteger,System.Int64)">
          <source>It enables code such as the following:</source>
          <target state="translated">它可讓程式碼如下所示：</target>       </trans-unit>
        <trans-unit id="1119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Inequality(System.Numerics.BigInteger,System.Int64)">
          <source>Languages that do not support custom operators can test for inequality by using one of the following techniques:</source>
          <target state="translated">不支援自訂運算子的語言可以使用其中一種下列技巧測試不相等：</target>       </trans-unit>
        <trans-unit id="1120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Inequality(System.Numerics.BigInteger,System.Int64)">
          <source>Calling the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType&gt;</ph> method, which indicates the relationship between a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> and a signed long integer value.</source>
          <target state="translated">呼叫<ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType&gt;</ph>方法之間的關聯性表示<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>和帶正負號的長整數值。</target>       </trans-unit>
        <trans-unit id="1121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Inequality(System.Numerics.BigInteger,System.Int64)">
          <source>Calling the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Equals%28System.Int64%29?displayProperty=nameWithType&gt;</ph> method and reversing its value.</source>
          <target state="translated">呼叫<ph id="ph1">&lt;xref:System.Numerics.BigInteger.Equals%28System.Int64%29?displayProperty=nameWithType&gt;</ph>方法和反轉它的值。</target>       </trans-unit>
        <trans-unit id="1122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Inequality(System.Numerics.BigInteger,System.Int64)">
          <source>If <ph id="ph1">`right`</ph> is a <ph id="ph2">&lt;xref:System.Byte&gt;</ph>, <ph id="ph3">&lt;xref:System.Int16&gt;</ph>, <ph id="ph4">&lt;xref:System.Int32&gt;</ph>, <ph id="ph5">&lt;xref:System.SByte&gt;</ph>, <ph id="ph6">&lt;xref:System.UInt16&gt;</ph>, or <ph id="ph7">&lt;xref:System.UInt32&gt;</ph> value, it is implicitly converted to an <ph id="ph8">&lt;xref:System.Int64&gt;</ph> value when the operation is performed.</source>
          <target state="translated">如果<ph id="ph1">`right`</ph>是<ph id="ph2">&lt;xref:System.Byte&gt;</ph>， <ph id="ph3">&lt;xref:System.Int16&gt;</ph>， <ph id="ph4">&lt;xref:System.Int32&gt;</ph>， <ph id="ph5">&lt;xref:System.SByte&gt;</ph>， <ph id="ph6">&lt;xref:System.UInt16&gt;</ph>，或<ph id="ph7">&lt;xref:System.UInt32&gt;</ph>值，它會隱含地轉換成<ph id="ph8">&lt;xref:System.Int64&gt;</ph>時執行作業的值。</target>       </trans-unit>
        <trans-unit id="1123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Inequality(System.Numerics.BigInteger,System.Int64)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">這個運算子的對等方法是<ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1124" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Inequality(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The first value to compare.</source>
          <target state="translated">要比較的第一個值。</target>       </trans-unit>
        <trans-unit id="1125" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Inequality(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The second value to compare.</source>
          <target state="translated">要比較的第二個值。</target>       </trans-unit>
        <trans-unit id="1126" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Inequality(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Returns a value that indicates whether two <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> objects have different values.</source>
          <target state="translated">傳回值，指出兩個 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 物件是否有不同的值。</target>       </trans-unit>
        <trans-unit id="1127" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Inequality(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="left" /&gt;</ph> and <ph id="ph3">&lt;paramref name="right" /&gt;</ph> are not equal; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph2">&lt;paramref name="left" /&gt;</ph> 和 <ph id="ph3">&lt;paramref name="right" /&gt;</ph> 不相等，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否則為 <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Inequality(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Inequality%2A&gt;</ph> method defines the operation of the inequality operator for <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Inequality%2A&gt;</ph>方法會定義作業的不等比較運算子的<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="1129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Inequality(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>It enables code such as the following:</source>
          <target state="translated">它可讓程式碼如下所示：</target>       </trans-unit>
        <trans-unit id="1130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Inequality(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Languages that do not support custom operators can test for inequality by using one of the following techniques:</source>
          <target state="translated">不支援自訂運算子的語言可以使用其中一種下列技巧測試不相等：</target>       </trans-unit>
        <trans-unit id="1131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Inequality(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Calling the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Compare%2A?displayProperty=nameWithType&gt;</ph> method, which indicates the relationship between two <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> objects.</source>
          <target state="translated">呼叫<ph id="ph1">&lt;xref:System.Numerics.BigInteger.Compare%2A?displayProperty=nameWithType&gt;</ph>方法，表示兩個之間的關聯性<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="1132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Inequality(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Calling the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Equals%28System.Numerics.BigInteger%29?displayProperty=nameWithType&gt;</ph> method and reversing its value.</source>
          <target state="translated">呼叫<ph id="ph1">&lt;xref:System.Numerics.BigInteger.Equals%28System.Numerics.BigInteger%29?displayProperty=nameWithType&gt;</ph>方法和反轉它的值。</target>       </trans-unit>
        <trans-unit id="1133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Inequality(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Compare%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">這個運算子的對等方法是<ph id="ph1">&lt;xref:System.Numerics.BigInteger.Compare%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1134" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Inequality(System.Numerics.BigInteger,System.UInt64)">
          <source>The first value to compare.</source>
          <target state="translated">要比較的第一個值。</target>       </trans-unit>
        <trans-unit id="1135" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Inequality(System.Numerics.BigInteger,System.UInt64)">
          <source>The second value to compare.</source>
          <target state="translated">要比較的第二個值。</target>       </trans-unit>
        <trans-unit id="1136" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Inequality(System.Numerics.BigInteger,System.UInt64)">
          <source>Returns a value that indicates whether a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value and a 64-bit unsigned integer are not equal.</source>
          <target state="translated">傳回值，這個值表示 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 值與 64 位元不帶正負號的整數是否不相等。</target>       </trans-unit>
        <trans-unit id="1137" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Inequality(System.Numerics.BigInteger,System.UInt64)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="left" /&gt;</ph> and <ph id="ph3">&lt;paramref name="right" /&gt;</ph> are not equal; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph2">&lt;paramref name="left" /&gt;</ph> 和 <ph id="ph3">&lt;paramref name="right" /&gt;</ph> 不相等，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否則為 <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Inequality(System.Numerics.BigInteger,System.UInt64)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Inequality%2A&gt;</ph> method defines the operation of the inequality operator for <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Inequality%2A&gt;</ph>方法會定義作業的不等比較運算子的<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="1139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Inequality(System.Numerics.BigInteger,System.UInt64)">
          <source>It enables code such as the following:</source>
          <target state="translated">它可讓程式碼如下所示：</target>       </trans-unit>
        <trans-unit id="1140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Inequality(System.Numerics.BigInteger,System.UInt64)">
          <source>Languages that do not support custom operators can test for inequality by using one of the following techniques:</source>
          <target state="translated">不支援自訂運算子的語言可以使用其中一種下列技巧測試不相等：</target>       </trans-unit>
        <trans-unit id="1141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Inequality(System.Numerics.BigInteger,System.UInt64)">
          <source>Calling the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType&gt;</ph> method, which indicates the relationship between a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> and an unsigned long integer value.</source>
          <target state="translated">呼叫<ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType&gt;</ph>方法之間的關聯性表示<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>和不帶正負號的長整數值。</target>       </trans-unit>
        <trans-unit id="1142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Inequality(System.Numerics.BigInteger,System.UInt64)">
          <source>Calling the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Equals%28System.UInt64%29?displayProperty=nameWithType&gt;</ph> method and reversing its value.</source>
          <target state="translated">呼叫<ph id="ph1">&lt;xref:System.Numerics.BigInteger.Equals%28System.UInt64%29?displayProperty=nameWithType&gt;</ph>方法和反轉它的值。</target>       </trans-unit>
        <trans-unit id="1143" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Inequality(System.UInt64,System.Numerics.BigInteger)">
          <source>The first value to compare.</source>
          <target state="translated">要比較的第一個值。</target>       </trans-unit>
        <trans-unit id="1144" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Inequality(System.UInt64,System.Numerics.BigInteger)">
          <source>The second value to compare.</source>
          <target state="translated">要比較的第二個值。</target>       </trans-unit>
        <trans-unit id="1145" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Inequality(System.UInt64,System.Numerics.BigInteger)">
          <source>Returns a value that indicates whether a 64-bit unsigned integer and a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value are not equal.</source>
          <target state="translated">傳回值，這個值表示 64 位元不帶正負號的整數與 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 值是否不相等。</target>       </trans-unit>
        <trans-unit id="1146" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Inequality(System.UInt64,System.Numerics.BigInteger)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="left" /&gt;</ph> and <ph id="ph3">&lt;paramref name="right" /&gt;</ph> are not equal; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph2">&lt;paramref name="left" /&gt;</ph> 和 <ph id="ph3">&lt;paramref name="right" /&gt;</ph> 不相等，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否則為 <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Inequality(System.UInt64,System.Numerics.BigInteger)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Inequality%2A&gt;</ph> method defines the operation of the inequality operator for <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Inequality%2A&gt;</ph>方法會定義作業的不等比較運算子的<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="1148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Inequality(System.UInt64,System.Numerics.BigInteger)">
          <source>It enables code such as the following:</source>
          <target state="translated">它可讓程式碼如下所示：</target>       </trans-unit>
        <trans-unit id="1149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Inequality(System.UInt64,System.Numerics.BigInteger)">
          <source>Languages that do not support custom operators can test for inequality by using one of the following techniques:</source>
          <target state="translated">不支援自訂運算子的語言可以使用其中一種下列技巧測試不相等：</target>       </trans-unit>
        <trans-unit id="1150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Inequality(System.UInt64,System.Numerics.BigInteger)">
          <source>Calling the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType&gt;</ph> method, which indicates the relationship between a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> and an unsigned long integer value.</source>
          <target state="translated">呼叫<ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType&gt;</ph>方法之間的關聯性表示<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>和不帶正負號的長整數值。</target>       </trans-unit>
        <trans-unit id="1151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Inequality(System.UInt64,System.Numerics.BigInteger)">
          <source>Calling the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Equals%28System.UInt64%29?displayProperty=nameWithType&gt;</ph> method and reversing its value.</source>
          <target state="translated">呼叫<ph id="ph1">&lt;xref:System.Numerics.BigInteger.Equals%28System.UInt64%29?displayProperty=nameWithType&gt;</ph>方法和反轉它的值。</target>       </trans-unit>
        <trans-unit id="1152" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_LeftShift(System.Numerics.BigInteger,System.Int32)">
          <source>The value whose bits are to be shifted.</source>
          <target state="translated">要執行位元移位的值。</target>       </trans-unit>
        <trans-unit id="1153" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_LeftShift(System.Numerics.BigInteger,System.Int32)">
          <source>The number of bits to shift <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> to the left.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>值<ept id="p1">&lt;/c&gt;</ept> 向左移位的位元數。</target>       </trans-unit>
        <trans-unit id="1154" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_LeftShift(System.Numerics.BigInteger,System.Int32)">
          <source>Shifts a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value a specified number of bits to the left.</source>
          <target state="translated">將 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 值向左移動指定的位元數。</target>       </trans-unit>
        <trans-unit id="1155" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_LeftShift(System.Numerics.BigInteger,System.Int32)">
          <source>A value that has been shifted to the left by the specified number of bits.</source>
          <target state="translated">已經向左移動指定之位元數的值。</target>       </trans-unit>
        <trans-unit id="1156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LeftShift(System.Numerics.BigInteger,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_LeftShift%2A&gt;</ph> method defines the operation of the bitwise left-shift operator for <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_LeftShift%2A&gt;</ph>方法定義之位元左移位運算子作業<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="1157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LeftShift(System.Numerics.BigInteger,System.Int32)">
          <source>It enables code such as the following:</source>
          <target state="translated">它可讓程式碼如下所示：</target>       </trans-unit>
        <trans-unit id="1158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LeftShift(System.Numerics.BigInteger,System.Int32)">
          <source>Unlike the bitwise left-shift operation with integer primitives, the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_LeftShift%2A&gt;</ph> method preserves the sign of the original <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value.</source>
          <target state="translated">與整數基本類型，以位元左移位運算不同<ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_LeftShift%2A&gt;</ph>方法會保留原始的正負號<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="1159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LeftShift(System.Numerics.BigInteger,System.Int32)">
          <source>Languages that do not support custom operators can perform a bitwise left-shift operation by multiplying <ph id="ph1">`value`</ph> by <ph id="ph2">`BigInteger.Pow(2, shift)`</ph>.</source>
          <target state="translated">不支援自訂運算子的語言可以執行位元左移位運算乘以<ph id="ph1">`value`</ph>由<ph id="ph2">`BigInteger.Pow(2, shift)`</ph>。</target>       </trans-unit>
        <trans-unit id="1160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LeftShift(System.Numerics.BigInteger,System.Int32)">
          <source>The following example shows that the results are identical to the results of using this operator.</source>
          <target state="translated">下列範例示範結果會使用這個運算子的結果相同。</target>       </trans-unit>
        <trans-unit id="1161" translate="yes" xml:space="preserve" uid="T:System.Numerics.BigInteger">
          <source>Returns a value that indicates whether a specified value is less than a second specified value.</source>
          <target state="translated">傳回值，這個值表示指定的值是否小於第二個指定的值。</target>       </trans-unit>
        <trans-unit id="1162" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_LessThan(System.Int64,System.Numerics.BigInteger)">
          <source>The first value to compare.</source>
          <target state="translated">要比較的第一個值。</target>       </trans-unit>
        <trans-unit id="1163" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_LessThan(System.Int64,System.Numerics.BigInteger)">
          <source>The second value to compare.</source>
          <target state="translated">要比較的第二個值。</target>       </trans-unit>
        <trans-unit id="1164" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_LessThan(System.Int64,System.Numerics.BigInteger)">
          <source>Returns a value that indicates whether a 64-bit signed integer is less than a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value.</source>
          <target state="translated">傳回值，這個值表示 64 位元帶正負號的整數是否小於 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 值。</target>       </trans-unit>
        <trans-unit id="1165" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_LessThan(System.Int64,System.Numerics.BigInteger)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="left" /&gt;</ph> is less than <ph id="ph3">&lt;paramref name="right" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph2">&lt;paramref name="left" /&gt;</ph> 小於 <ph id="ph3">&lt;paramref name="right" /&gt;</ph>，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否則為 <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LessThan(System.Int64,System.Numerics.BigInteger)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_LessThan%2A&gt;</ph> method defines the operation of the less than operator for <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_LessThan%2A&gt;</ph>方法定義的小於運算子操作<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="1167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LessThan(System.Int64,System.Numerics.BigInteger)">
          <source>It enables code such as the following:</source>
          <target state="translated">它可讓程式碼如下所示：</target>       </trans-unit>
        <trans-unit id="1168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LessThan(System.Int64,System.Numerics.BigInteger)">
          <source>Languages that do not support custom operators can call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType&gt;</ph> method instead.</source>
          <target state="translated">不支援自訂運算子的語言可以呼叫<ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType&gt;</ph>方法改為。</target>       </trans-unit>
        <trans-unit id="1169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LessThan(System.Int64,System.Numerics.BigInteger)">
          <source>Some languages can also call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_LessThan%28System.Int64%2CSystem.Numerics.BigInteger%29&gt;</ph> method directly, as the following example shows.</source>
          <target state="translated">某些語言也可以呼叫<ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_LessThan%28System.Int64%2CSystem.Numerics.BigInteger%29&gt;</ph>方法直接管理，如下列範例所示。</target>       </trans-unit>
        <trans-unit id="1170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LessThan(System.Int64,System.Numerics.BigInteger)">
          <source>If <ph id="ph1">`left`</ph> is a <ph id="ph2">&lt;xref:System.Byte&gt;</ph>, <ph id="ph3">&lt;xref:System.Int16&gt;</ph>, <ph id="ph4">&lt;xref:System.Int32&gt;</ph>, <ph id="ph5">&lt;xref:System.SByte&gt;</ph>, <ph id="ph6">&lt;xref:System.UInt16&gt;</ph>, or <ph id="ph7">&lt;xref:System.UInt32&gt;</ph> value, it is implicitly converted to an <ph id="ph8">&lt;xref:System.Int64&gt;</ph> value when the operation is performed.</source>
          <target state="translated">如果<ph id="ph1">`left`</ph>是<ph id="ph2">&lt;xref:System.Byte&gt;</ph>， <ph id="ph3">&lt;xref:System.Int16&gt;</ph>， <ph id="ph4">&lt;xref:System.Int32&gt;</ph>， <ph id="ph5">&lt;xref:System.SByte&gt;</ph>， <ph id="ph6">&lt;xref:System.UInt16&gt;</ph>，或<ph id="ph7">&lt;xref:System.UInt32&gt;</ph>值，它會隱含地轉換成<ph id="ph8">&lt;xref:System.Int64&gt;</ph>時執行作業的值。</target>       </trans-unit>
        <trans-unit id="1171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LessThan(System.Int64,System.Numerics.BigInteger)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">這個運算子的對等方法是<ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1172" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_LessThan(System.Numerics.BigInteger,System.Int64)">
          <source>The first value to compare.</source>
          <target state="translated">要比較的第一個值。</target>       </trans-unit>
        <trans-unit id="1173" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_LessThan(System.Numerics.BigInteger,System.Int64)">
          <source>The second value to compare.</source>
          <target state="translated">要比較的第二個值。</target>       </trans-unit>
        <trans-unit id="1174" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_LessThan(System.Numerics.BigInteger,System.Int64)">
          <source>Returns a value that indicates whether a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value is less than a 64-bit signed integer.</source>
          <target state="translated">傳回值，這個值表示 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 值是否小於 64 位元帶正負號的整數。</target>       </trans-unit>
        <trans-unit id="1175" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_LessThan(System.Numerics.BigInteger,System.Int64)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="left" /&gt;</ph> is less than <ph id="ph3">&lt;paramref name="right" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph2">&lt;paramref name="left" /&gt;</ph> 小於 <ph id="ph3">&lt;paramref name="right" /&gt;</ph>，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否則為 <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LessThan(System.Numerics.BigInteger,System.Int64)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_LessThan%2A&gt;</ph> method defines the operation of the less than operator for <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_LessThan%2A&gt;</ph>方法定義的小於運算子操作<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="1177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LessThan(System.Numerics.BigInteger,System.Int64)">
          <source>It enables code such as the following:</source>
          <target state="translated">它可讓程式碼如下所示：</target>       </trans-unit>
        <trans-unit id="1178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LessThan(System.Numerics.BigInteger,System.Int64)">
          <source>Languages that do not support custom operators can call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType&gt;</ph> method instead.</source>
          <target state="translated">不支援自訂運算子的語言可以呼叫<ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType&gt;</ph>方法改為。</target>       </trans-unit>
        <trans-unit id="1179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LessThan(System.Numerics.BigInteger,System.Int64)">
          <source>Some languages can also call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_LessThan%28System.Numerics.BigInteger%2CSystem.Int64%29&gt;</ph> method directly, as the following example shows.</source>
          <target state="translated">某些語言也可以呼叫<ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_LessThan%28System.Numerics.BigInteger%2CSystem.Int64%29&gt;</ph>方法直接管理，如下列範例所示。</target>       </trans-unit>
        <trans-unit id="1180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LessThan(System.Numerics.BigInteger,System.Int64)">
          <source>If <ph id="ph1">`right`</ph> is a <ph id="ph2">&lt;xref:System.Byte&gt;</ph>, <ph id="ph3">&lt;xref:System.Int16&gt;</ph>, <ph id="ph4">&lt;xref:System.Int32&gt;</ph>, <ph id="ph5">&lt;xref:System.SByte&gt;</ph>, <ph id="ph6">&lt;xref:System.UInt16&gt;</ph>, or <ph id="ph7">&lt;xref:System.UInt32&gt;</ph> value, it is implicitly converted to an <ph id="ph8">&lt;xref:System.Int64&gt;</ph> value when the operation is performed.</source>
          <target state="translated">如果<ph id="ph1">`right`</ph>是<ph id="ph2">&lt;xref:System.Byte&gt;</ph>， <ph id="ph3">&lt;xref:System.Int16&gt;</ph>， <ph id="ph4">&lt;xref:System.Int32&gt;</ph>， <ph id="ph5">&lt;xref:System.SByte&gt;</ph>， <ph id="ph6">&lt;xref:System.UInt16&gt;</ph>，或<ph id="ph7">&lt;xref:System.UInt32&gt;</ph>值，它會隱含地轉換成<ph id="ph8">&lt;xref:System.Int64&gt;</ph>時執行作業的值。</target>       </trans-unit>
        <trans-unit id="1181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LessThan(System.Numerics.BigInteger,System.Int64)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">這個運算子的對等方法是<ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1182" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_LessThan(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The first value to compare.</source>
          <target state="translated">要比較的第一個值。</target>       </trans-unit>
        <trans-unit id="1183" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_LessThan(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The second value to compare.</source>
          <target state="translated">要比較的第二個值。</target>       </trans-unit>
        <trans-unit id="1184" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_LessThan(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Returns a value that indicates whether a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value is less than another <ph id="ph2">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value.</source>
          <target state="translated">傳回值，這個值表示 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 值是否小於另一個 <ph id="ph2">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 值。</target>       </trans-unit>
        <trans-unit id="1185" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_LessThan(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="left" /&gt;</ph> is less than <ph id="ph3">&lt;paramref name="right" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph2">&lt;paramref name="left" /&gt;</ph> 小於 <ph id="ph3">&lt;paramref name="right" /&gt;</ph>，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否則為 <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LessThan(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_LessThan%2A&gt;</ph> method defines the operation of the less than operator for <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_LessThan%2A&gt;</ph>方法定義的小於運算子操作<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="1187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LessThan(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>It enables code such as the following:</source>
          <target state="translated">它可讓程式碼如下所示：</target>       </trans-unit>
        <trans-unit id="1188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LessThan(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Languages that do not support custom operators can call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Compare%2A?displayProperty=nameWithType&gt;</ph> method instead.</source>
          <target state="translated">不支援自訂運算子的語言可以呼叫<ph id="ph1">&lt;xref:System.Numerics.BigInteger.Compare%2A?displayProperty=nameWithType&gt;</ph>方法改為。</target>       </trans-unit>
        <trans-unit id="1189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LessThan(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Some languages can also call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_LessThan%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29&gt;</ph> method directly, as the following example shows.</source>
          <target state="translated">某些語言也可以呼叫<ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_LessThan%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29&gt;</ph>方法直接管理，如下列範例所示。</target>       </trans-unit>
        <trans-unit id="1190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LessThan(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Compare%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">這個運算子的對等方法是<ph id="ph1">&lt;xref:System.Numerics.BigInteger.Compare%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1191" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_LessThan(System.Numerics.BigInteger,System.UInt64)">
          <source>The first value to compare.</source>
          <target state="translated">要比較的第一個值。</target>       </trans-unit>
        <trans-unit id="1192" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_LessThan(System.Numerics.BigInteger,System.UInt64)">
          <source>The second value to compare.</source>
          <target state="translated">要比較的第二個值。</target>       </trans-unit>
        <trans-unit id="1193" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_LessThan(System.Numerics.BigInteger,System.UInt64)">
          <source>Returns a value that indicates whether a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value is less than a 64-bit unsigned integer.</source>
          <target state="translated">傳回值，這個值表示 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 值是否小於 64 位元不帶正負號的整數。</target>       </trans-unit>
        <trans-unit id="1194" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_LessThan(System.Numerics.BigInteger,System.UInt64)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="left" /&gt;</ph> is less than <ph id="ph3">&lt;paramref name="right" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph2">&lt;paramref name="left" /&gt;</ph> 小於 <ph id="ph3">&lt;paramref name="right" /&gt;</ph>，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否則為 <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LessThan(System.Numerics.BigInteger,System.UInt64)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_LessThan%2A&gt;</ph> method defines the operation of the less than operator for <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_LessThan%2A&gt;</ph>方法定義的小於運算子操作<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="1196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LessThan(System.Numerics.BigInteger,System.UInt64)">
          <source>It enables code such as the following:</source>
          <target state="translated">它可讓程式碼如下所示：</target>       </trans-unit>
        <trans-unit id="1197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LessThan(System.Numerics.BigInteger,System.UInt64)">
          <source>Languages that do not support custom operators can call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType&gt;</ph> method instead.</source>
          <target state="translated">不支援自訂運算子的語言可以呼叫<ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType&gt;</ph>方法改為。</target>       </trans-unit>
        <trans-unit id="1198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LessThan(System.Numerics.BigInteger,System.UInt64)">
          <source>They can also call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_LessThan%28System.Numerics.BigInteger%2CSystem.UInt64%29&gt;</ph> method directly, as the following example shows.</source>
          <target state="translated">它們也可以呼叫<ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_LessThan%28System.Numerics.BigInteger%2CSystem.UInt64%29&gt;</ph>方法直接管理，如下列範例所示。</target>       </trans-unit>
        <trans-unit id="1199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LessThan(System.Numerics.BigInteger,System.UInt64)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">這個運算子的對等方法是<ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1200" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_LessThan(System.UInt64,System.Numerics.BigInteger)">
          <source>The first value to compare.</source>
          <target state="translated">要比較的第一個值。</target>       </trans-unit>
        <trans-unit id="1201" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_LessThan(System.UInt64,System.Numerics.BigInteger)">
          <source>The second value to compare.</source>
          <target state="translated">要比較的第二個值。</target>       </trans-unit>
        <trans-unit id="1202" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_LessThan(System.UInt64,System.Numerics.BigInteger)">
          <source>Returns a value that indicates whether a 64-bit unsigned integer is less than a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value.</source>
          <target state="translated">傳回值，這個值表示 64 位元不帶正負號的整數是否小於 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 值。</target>       </trans-unit>
        <trans-unit id="1203" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_LessThan(System.UInt64,System.Numerics.BigInteger)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="left" /&gt;</ph> is less than <ph id="ph3">&lt;paramref name="right" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph2">&lt;paramref name="left" /&gt;</ph> 小於 <ph id="ph3">&lt;paramref name="right" /&gt;</ph>，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否則為 <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LessThan(System.UInt64,System.Numerics.BigInteger)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_LessThan%2A&gt;</ph> method defines the operation of the less than operator for <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_LessThan%2A&gt;</ph>方法定義的小於運算子操作<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="1205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LessThan(System.UInt64,System.Numerics.BigInteger)">
          <source>It enables code such as the following:</source>
          <target state="translated">它可讓程式碼如下所示：</target>       </trans-unit>
        <trans-unit id="1206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LessThan(System.UInt64,System.Numerics.BigInteger)">
          <source>Languages that do not support custom operators can call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType&gt;</ph> method instead.</source>
          <target state="translated">不支援自訂運算子的語言可以呼叫<ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType&gt;</ph>方法改為。</target>       </trans-unit>
        <trans-unit id="1207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LessThan(System.UInt64,System.Numerics.BigInteger)">
          <source>They can also call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_LessThan%28System.UInt64%2CSystem.Numerics.BigInteger%29&gt;</ph> method directly, as the following example shows.</source>
          <target state="translated">它們也可以呼叫<ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_LessThan%28System.UInt64%2CSystem.Numerics.BigInteger%29&gt;</ph>方法直接管理，如下列範例所示。</target>       </trans-unit>
        <trans-unit id="1208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LessThan(System.UInt64,System.Numerics.BigInteger)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">這個運算子的對等方法是<ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1209" translate="yes" xml:space="preserve" uid="T:System.Numerics.BigInteger">
          <source>Returns a value that indicates whether a specified value is less than or equal to another specified value.</source>
          <target state="translated">傳回值，這個值表示指定的值是否小於或等於另一個指定的值。</target>       </trans-unit>
        <trans-unit id="1210" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Int64,System.Numerics.BigInteger)">
          <source>The first value to compare.</source>
          <target state="translated">要比較的第一個值。</target>       </trans-unit>
        <trans-unit id="1211" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Int64,System.Numerics.BigInteger)">
          <source>The second value to compare.</source>
          <target state="translated">要比較的第二個值。</target>       </trans-unit>
        <trans-unit id="1212" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Int64,System.Numerics.BigInteger)">
          <source>Returns a value that indicates whether a 64-bit signed integer is less than or equal to a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value.</source>
          <target state="translated">傳回值，這個值表示 64 位元帶正負號的整數是否小於或等於 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 值。</target>       </trans-unit>
        <trans-unit id="1213" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Int64,System.Numerics.BigInteger)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="left" /&gt;</ph> is less than or equal to <ph id="ph3">&lt;paramref name="right" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph2">&lt;paramref name="left" /&gt;</ph> 小於或等於 <ph id="ph3">&lt;paramref name="right" /&gt;</ph>，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否則為 <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Int64,System.Numerics.BigInteger)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_LessThanOrEqual%2A&gt;</ph> method defines the operation of the less than or equal to operator for <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_LessThanOrEqual%2A&gt;</ph>方法定義的作業運算子的小於或等於<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="1215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Int64,System.Numerics.BigInteger)">
          <source>It enables code such as the following:</source>
          <target state="translated">它可讓程式碼如下所示：</target>       </trans-unit>
        <trans-unit id="1216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Int64,System.Numerics.BigInteger)">
          <source>Languages that do not support custom operators can call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType&gt;</ph> method instead.</source>
          <target state="translated">不支援自訂運算子的語言可以呼叫<ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType&gt;</ph>方法改為。</target>       </trans-unit>
        <trans-unit id="1217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Int64,System.Numerics.BigInteger)">
          <source>They can also call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_LessThanOrEqual%28System.Int64%2CSystem.Numerics.BigInteger%29&gt;</ph> method directly, as the following example shows.</source>
          <target state="translated">它們也可以呼叫<ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_LessThanOrEqual%28System.Int64%2CSystem.Numerics.BigInteger%29&gt;</ph>方法直接管理，如下列範例所示。</target>       </trans-unit>
        <trans-unit id="1218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Int64,System.Numerics.BigInteger)">
          <source>If <ph id="ph1">`left`</ph> is a <ph id="ph2">&lt;xref:System.Byte&gt;</ph>, <ph id="ph3">&lt;xref:System.Int16&gt;</ph>, <ph id="ph4">&lt;xref:System.Int32&gt;</ph>, <ph id="ph5">&lt;xref:System.SByte&gt;</ph>, <ph id="ph6">&lt;xref:System.UInt16&gt;</ph>, or <ph id="ph7">&lt;xref:System.UInt32&gt;</ph> value, it is implicitly converted to an <ph id="ph8">&lt;xref:System.Int64&gt;</ph> value when the operation is performed.</source>
          <target state="translated">如果<ph id="ph1">`left`</ph>是<ph id="ph2">&lt;xref:System.Byte&gt;</ph>， <ph id="ph3">&lt;xref:System.Int16&gt;</ph>， <ph id="ph4">&lt;xref:System.Int32&gt;</ph>， <ph id="ph5">&lt;xref:System.SByte&gt;</ph>， <ph id="ph6">&lt;xref:System.UInt16&gt;</ph>，或<ph id="ph7">&lt;xref:System.UInt32&gt;</ph>值，它會隱含地轉換成<ph id="ph8">&lt;xref:System.Int64&gt;</ph>時執行作業的值。</target>       </trans-unit>
        <trans-unit id="1219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Int64,System.Numerics.BigInteger)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">這個運算子的對等方法是<ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1220" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Numerics.BigInteger,System.Int64)">
          <source>The first value to compare.</source>
          <target state="translated">要比較的第一個值。</target>       </trans-unit>
        <trans-unit id="1221" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Numerics.BigInteger,System.Int64)">
          <source>The second value to compare.</source>
          <target state="translated">要比較的第二個值。</target>       </trans-unit>
        <trans-unit id="1222" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Numerics.BigInteger,System.Int64)">
          <source>Returns a value that indicates whether a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value is less than or equal to a 64-bit signed integer.</source>
          <target state="translated">傳回值，這個值表示 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 值是否小於或等於 64 位元帶正負號的整數。</target>       </trans-unit>
        <trans-unit id="1223" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Numerics.BigInteger,System.Int64)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="left" /&gt;</ph> is less than or equal to <ph id="ph3">&lt;paramref name="right" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph2">&lt;paramref name="left" /&gt;</ph> 小於或等於 <ph id="ph3">&lt;paramref name="right" /&gt;</ph>，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否則為 <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Numerics.BigInteger,System.Int64)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_LessThanOrEqual%2A&gt;</ph> method defines the operation of the less than or equal to operator for <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_LessThanOrEqual%2A&gt;</ph>方法定義的作業運算子的小於或等於<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="1225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Numerics.BigInteger,System.Int64)">
          <source>It enables code such as the following:</source>
          <target state="translated">它可讓程式碼如下所示：</target>       </trans-unit>
        <trans-unit id="1226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Numerics.BigInteger,System.Int64)">
          <source>Languages that do not support custom operators can call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType&gt;</ph> method instead.</source>
          <target state="translated">不支援自訂運算子的語言可以呼叫<ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType&gt;</ph>方法改為。</target>       </trans-unit>
        <trans-unit id="1227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Numerics.BigInteger,System.Int64)">
          <source>They can also call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_LessThanOrEqual%28System.Numerics.BigInteger%2CSystem.Int64%29&gt;</ph> method directly, as the following example shows.</source>
          <target state="translated">它們也可以呼叫<ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_LessThanOrEqual%28System.Numerics.BigInteger%2CSystem.Int64%29&gt;</ph>方法直接管理，如下列範例所示。</target>       </trans-unit>
        <trans-unit id="1228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Numerics.BigInteger,System.Int64)">
          <source>If <ph id="ph1">`right`</ph> is a <ph id="ph2">&lt;xref:System.Byte&gt;</ph>, <ph id="ph3">&lt;xref:System.Int16&gt;</ph>, <ph id="ph4">&lt;xref:System.Int32&gt;</ph>, <ph id="ph5">&lt;xref:System.SByte&gt;</ph>, <ph id="ph6">&lt;xref:System.UInt16&gt;</ph>, or <ph id="ph7">&lt;xref:System.UInt32&gt;</ph> value, it is implicitly converted to an <ph id="ph8">&lt;xref:System.Int64&gt;</ph> value when the operation is performed.</source>
          <target state="translated">如果<ph id="ph1">`right`</ph>是<ph id="ph2">&lt;xref:System.Byte&gt;</ph>， <ph id="ph3">&lt;xref:System.Int16&gt;</ph>， <ph id="ph4">&lt;xref:System.Int32&gt;</ph>， <ph id="ph5">&lt;xref:System.SByte&gt;</ph>， <ph id="ph6">&lt;xref:System.UInt16&gt;</ph>，或<ph id="ph7">&lt;xref:System.UInt32&gt;</ph>值，它會隱含地轉換成<ph id="ph8">&lt;xref:System.Int64&gt;</ph>時執行作業的值。</target>       </trans-unit>
        <trans-unit id="1229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Numerics.BigInteger,System.Int64)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">這個運算子的對等方法是<ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1230" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The first value to compare.</source>
          <target state="translated">要比較的第一個值。</target>       </trans-unit>
        <trans-unit id="1231" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The second value to compare.</source>
          <target state="translated">要比較的第二個值。</target>       </trans-unit>
        <trans-unit id="1232" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Returns a value that indicates whether a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value is less than or equal to another <ph id="ph2">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value.</source>
          <target state="translated">傳回值，這個值表示 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 值是否小於或等於另一個 <ph id="ph2">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 值。</target>       </trans-unit>
        <trans-unit id="1233" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="left" /&gt;</ph> is less than or equal to <ph id="ph3">&lt;paramref name="right" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph2">&lt;paramref name="left" /&gt;</ph> 小於或等於 <ph id="ph3">&lt;paramref name="right" /&gt;</ph>，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否則為 <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_LessThanOrEqual%2A&gt;</ph> method defines the operation of the less than or equal to operator for <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_LessThanOrEqual%2A&gt;</ph>方法定義的作業運算子的小於或等於<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="1235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>It enables code such as the following:</source>
          <target state="translated">它可讓程式碼如下所示：</target>       </trans-unit>
        <trans-unit id="1236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Languages that do not support custom operators can call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Compare%2A&gt;</ph> method instead.</source>
          <target state="translated">不支援自訂運算子的語言可以呼叫<ph id="ph1">&lt;xref:System.Numerics.BigInteger.Compare%2A&gt;</ph>方法改為。</target>       </trans-unit>
        <trans-unit id="1237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>They can also call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_LessThanOrEqual%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29&gt;</ph> method directly, as the following example shows.</source>
          <target state="translated">它們也可以呼叫<ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_LessThanOrEqual%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29&gt;</ph>方法直接管理，如下列範例所示。</target>       </trans-unit>
        <trans-unit id="1238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Compare%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">這個運算子的對等方法是<ph id="ph1">&lt;xref:System.Numerics.BigInteger.Compare%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1239" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Numerics.BigInteger,System.UInt64)">
          <source>The first value to compare.</source>
          <target state="translated">要比較的第一個值。</target>       </trans-unit>
        <trans-unit id="1240" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Numerics.BigInteger,System.UInt64)">
          <source>The second value to compare.</source>
          <target state="translated">要比較的第二個值。</target>       </trans-unit>
        <trans-unit id="1241" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Numerics.BigInteger,System.UInt64)">
          <source>Returns a value that indicates whether a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value is less than or equal to a 64-bit unsigned integer.</source>
          <target state="translated">傳回值，這個值表示 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 值是否小於或等於 64 位元不帶正負號的整數。</target>       </trans-unit>
        <trans-unit id="1242" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Numerics.BigInteger,System.UInt64)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="left" /&gt;</ph> is less than or equal to <ph id="ph3">&lt;paramref name="right" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph2">&lt;paramref name="left" /&gt;</ph> 小於或等於 <ph id="ph3">&lt;paramref name="right" /&gt;</ph>，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否則為 <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Numerics.BigInteger,System.UInt64)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_LessThanOrEqual%2A&gt;</ph> method defines the operation of the less than or equal to operator for <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_LessThanOrEqual%2A&gt;</ph>方法定義的作業運算子的小於或等於<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="1244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Numerics.BigInteger,System.UInt64)">
          <source>It enables code such as the following:</source>
          <target state="translated">它可讓程式碼如下所示：</target>       </trans-unit>
        <trans-unit id="1245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Numerics.BigInteger,System.UInt64)">
          <source>Languages that do not support custom operators can call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType&gt;</ph> method instead.</source>
          <target state="translated">不支援自訂運算子的語言可以呼叫<ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType&gt;</ph>方法改為。</target>       </trans-unit>
        <trans-unit id="1246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Numerics.BigInteger,System.UInt64)">
          <source>They can also call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_LessThanOrEqual%28System.Numerics.BigInteger%2CSystem.UInt64%29&gt;</ph> method directly, as the following example shows.</source>
          <target state="translated">它們也可以呼叫<ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_LessThanOrEqual%28System.Numerics.BigInteger%2CSystem.UInt64%29&gt;</ph>方法直接管理，如下列範例所示。</target>       </trans-unit>
        <trans-unit id="1247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Numerics.BigInteger,System.UInt64)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">這個運算子的對等方法是<ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1248" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.UInt64,System.Numerics.BigInteger)">
          <source>The first value to compare.</source>
          <target state="translated">要比較的第一個值。</target>       </trans-unit>
        <trans-unit id="1249" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.UInt64,System.Numerics.BigInteger)">
          <source>The second value to compare.</source>
          <target state="translated">要比較的第二個值。</target>       </trans-unit>
        <trans-unit id="1250" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.UInt64,System.Numerics.BigInteger)">
          <source>Returns a value that indicates whether a 64-bit unsigned integer is less than or equal to a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value.</source>
          <target state="translated">傳回值，這個值表示 64 位元不帶正負號的整數是否小於或等於 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 值。</target>       </trans-unit>
        <trans-unit id="1251" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.UInt64,System.Numerics.BigInteger)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="left" /&gt;</ph> is less than or equal to <ph id="ph3">&lt;paramref name="right" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph2">&lt;paramref name="left" /&gt;</ph> 小於或等於 <ph id="ph3">&lt;paramref name="right" /&gt;</ph>，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否則為 <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.UInt64,System.Numerics.BigInteger)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_LessThanOrEqual%2A&gt;</ph> method defines the operation of the less than or equal to operator for <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_LessThanOrEqual%2A&gt;</ph>方法定義的作業運算子的小於或等於<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="1253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.UInt64,System.Numerics.BigInteger)">
          <source>It enables code such as the following:</source>
          <target state="translated">它可讓程式碼如下所示：</target>       </trans-unit>
        <trans-unit id="1254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.UInt64,System.Numerics.BigInteger)">
          <source>Languages that do not support custom operators can call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType&gt;</ph> method instead.</source>
          <target state="translated">不支援自訂運算子的語言可以呼叫<ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType&gt;</ph>方法改為。</target>       </trans-unit>
        <trans-unit id="1255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.UInt64,System.Numerics.BigInteger)">
          <source>They can also call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_LessThanOrEqual%28System.UInt64%2CSystem.Numerics.BigInteger%29&gt;</ph> method directly, as the following example shows.</source>
          <target state="translated">它們也可以呼叫<ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_LessThanOrEqual%28System.UInt64%2CSystem.Numerics.BigInteger%29&gt;</ph>方法直接管理，如下列範例所示。</target>       </trans-unit>
        <trans-unit id="1256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.UInt64,System.Numerics.BigInteger)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">這個運算子的對等方法是<ph id="ph1">&lt;xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1257" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Modulus(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The value to be divided.</source>
          <target state="translated">做為被除數的值。</target>       </trans-unit>
        <trans-unit id="1258" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Modulus(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The value to divide by.</source>
          <target state="translated">做為除數的值。</target>       </trans-unit>
        <trans-unit id="1259" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Modulus(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Returns the remainder that results from division with two specified <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> values.</source>
          <target state="translated">傳回從兩個指定的 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 值相除所得的餘數。</target>       </trans-unit>
        <trans-unit id="1260" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Modulus(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The remainder that results from the division.</source>
          <target state="translated">相除所得到的餘數。</target>       </trans-unit>
        <trans-unit id="1261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Modulus(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Modulus%2A&gt;</ph> method defines the operation of the modulus operator for <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Modulus%2A&gt;</ph>方法定義的模數運算子的作業<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="1262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Modulus(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>It enables code such as the following:</source>
          <target state="translated">它可讓程式碼如下所示：</target>       </trans-unit>
        <trans-unit id="1263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Modulus(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Languages that do not support custom operators can call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Remainder%2A?displayProperty=nameWithType&gt;</ph> method instead.</source>
          <target state="translated">不支援自訂運算子的語言可以呼叫<ph id="ph1">&lt;xref:System.Numerics.BigInteger.Remainder%2A?displayProperty=nameWithType&gt;</ph>方法改為。</target>       </trans-unit>
        <trans-unit id="1264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Modulus(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The sign of the value returned by the modulus operation depends on the sign of <ph id="ph1">`dividend`</ph>: If <ph id="ph2">`dividend`</ph> is positive, the modulus operation returns a positive result; if it is negative, the modulus operation returns a negative result.</source>
          <target state="translated">模數作業所傳回的值的正負號而定的正負號<ph id="ph1">`dividend`</ph>： 如果<ph id="ph2">`dividend`</ph>是正數，模數作業會傳回正結果; 如果它是負數，模數作業會傳回負的結果。</target>       </trans-unit>
        <trans-unit id="1265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Modulus(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The behavior of the modulus operation with <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> values is identical to the modulus operation with other integral types.</source>
          <target state="translated">模數作業的行為<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>值等同於模數作業與其他整數類資料類型。</target>       </trans-unit>
        <trans-unit id="1266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Modulus(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Remainder%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">這個運算子的對等方法是<ph id="ph1">&lt;xref:System.Numerics.BigInteger.Remainder%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1267" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Modulus(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source><ph id="ph1">&lt;paramref name="divisor" /&gt;</ph> is 0 (zero).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="divisor" /&gt;</ph> 是 0 (零)。</target>       </trans-unit>
        <trans-unit id="1268" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Multiply(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The first value to multiply.</source>
          <target state="translated">要相乘的第一個值。</target>       </trans-unit>
        <trans-unit id="1269" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Multiply(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The second value to multiply.</source>
          <target state="translated">要相乘的第二個值。</target>       </trans-unit>
        <trans-unit id="1270" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Multiply(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Multiplies two specified <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> values.</source>
          <target state="translated">將兩個指定的 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 值相乘。</target>       </trans-unit>
        <trans-unit id="1271" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Multiply(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The product of <ph id="ph1">&lt;paramref name="left" /&gt;</ph> and <ph id="ph2">&lt;paramref name="right" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="left" /&gt;</ph> 與 <ph id="ph2">&lt;paramref name="right" /&gt;</ph> 的乘積。</target>       </trans-unit>
        <trans-unit id="1272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Multiply(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Multiply%2A&gt;</ph> method defines the operation of the multiplication operator for <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Multiply%2A&gt;</ph>方法定義的乘法運算子的作業<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="1273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Multiply(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>It enables code such as the following:</source>
          <target state="translated">它可讓程式碼如下所示：</target>       </trans-unit>
        <trans-unit id="1274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Multiply(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Multiply(System.Numerics.BigInteger,System.Numerics.BigInteger)?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">這個運算子的對等方法是<ph id="ph1">&lt;xref:System.Numerics.BigInteger.Multiply(System.Numerics.BigInteger,System.Numerics.BigInteger)?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1275" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_OnesComplement(System.Numerics.BigInteger)">
          <source>An integer value.</source>
          <target state="translated">整數值。</target>       </trans-unit>
        <trans-unit id="1276" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_OnesComplement(System.Numerics.BigInteger)">
          <source>Returns the bitwise one's complement of a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value.</source>
          <target state="translated">傳回 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 值的位元一進位補數。</target>       </trans-unit>
        <trans-unit id="1277" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_OnesComplement(System.Numerics.BigInteger)">
          <source>The bitwise one's complement of <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> 的位元一進位補數。</target>       </trans-unit>
        <trans-unit id="1278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_OnesComplement(System.Numerics.BigInteger)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_OnesComplement%2A&gt;</ph> method defines the operation of the bitwise one's complement operator for <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_OnesComplement%2A&gt;</ph>方法定義的位元操作一補數運算子的<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="1279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_OnesComplement(System.Numerics.BigInteger)">
          <source>The bitwise one's complement operator reverses each bit in a numeric value.</source>
          <target state="translated">位元的一補數運算子反轉每位元數字的值。</target>       </trans-unit>
        <trans-unit id="1280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_OnesComplement(System.Numerics.BigInteger)">
          <source>That is, bits in <ph id="ph1">`value`</ph> that are 0 are set to 1 in the result, and bits that are 1 are set to 0 in the result.</source>
          <target state="translated">也就是說，bits 在<ph id="ph1">`value`</ph>的 0 會設定為在結果中，1 和 1 的位元會設為 0，結果中。</target>       </trans-unit>
        <trans-unit id="1281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_OnesComplement(System.Numerics.BigInteger)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_OnesComplement%2A&gt;</ph> method enables code such as the following:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_OnesComplement%2A&gt;</ph>方法可讓程式碼如下所示：</target>       </trans-unit>
        <trans-unit id="1282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_OnesComplement(System.Numerics.BigInteger)">
          <source>Languages that do not support custom operators may be able to call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_OnesComplement%2A&gt;</ph> method directly to perform a bitwise one's complement operation.</source>
          <target state="translated">不支援自訂運算子的語言或許可以呼叫<ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_OnesComplement%2A&gt;</ph>方法直接以執行位元的補充作業。</target>       </trans-unit>
        <trans-unit id="1283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_OnesComplement(System.Numerics.BigInteger)">
          <source>For example:</source>
          <target state="translated">例如: </target>       </trans-unit>
        <trans-unit id="1284" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_RightShift(System.Numerics.BigInteger,System.Int32)">
          <source>The value whose bits are to be shifted.</source>
          <target state="translated">要執行位元移位的值。</target>       </trans-unit>
        <trans-unit id="1285" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_RightShift(System.Numerics.BigInteger,System.Int32)">
          <source>The number of bits to shift <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> to the right.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>值<ept id="p1">&lt;/c&gt;</ept> 向右移位的位元數。</target>       </trans-unit>
        <trans-unit id="1286" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_RightShift(System.Numerics.BigInteger,System.Int32)">
          <source>Shifts a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value a specified number of bits to the right.</source>
          <target state="translated">將 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 值向右移動指定的位元數。</target>       </trans-unit>
        <trans-unit id="1287" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_RightShift(System.Numerics.BigInteger,System.Int32)">
          <source>A value that has been shifted to the right by the specified number of bits.</source>
          <target state="translated">已經向右移動指定之位元數的值。</target>       </trans-unit>
        <trans-unit id="1288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_RightShift(System.Numerics.BigInteger,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_RightShift%2A&gt;</ph> method defines the operation of the bitwise right-shift operator for <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_RightShift%2A&gt;</ph>方法定義之位元右移位運算子作業<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="1289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_RightShift(System.Numerics.BigInteger,System.Int32)">
          <source>It enables code such as the following:</source>
          <target state="translated">它可讓程式碼如下所示：</target>       </trans-unit>
        <trans-unit id="1290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_RightShift(System.Numerics.BigInteger,System.Int32)">
          <source>Languages that do not support custom operators can perform a bitwise right-shift operation by dividing <ph id="ph1">`value`</ph> by <ph id="ph2">`BigInteger.Pow(2, shift)`</ph> and subtracting 1 times <ph id="ph3">`shift`</ph> for negative values.</source>
          <target state="translated">不支援自訂運算子的語言可以執行位元右移位運算，再除以<ph id="ph1">`value`</ph>由<ph id="ph2">`BigInteger.Pow(2, shift)`</ph>減去 1 次<ph id="ph3">`shift`</ph>負值。</target>       </trans-unit>
        <trans-unit id="1291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_RightShift(System.Numerics.BigInteger,System.Int32)">
          <source>The following example shows that the results are identical to the results of using this operator.</source>
          <target state="translated">下列範例示範結果會使用這個運算子的結果相同。</target>       </trans-unit>
        <trans-unit id="1292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_RightShift(System.Numerics.BigInteger,System.Int32)">
          <source>If <ph id="ph1">`shift`</ph> is greater than or equal to the number of bits in a positive <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value, the result of the right-shift operation is <ph id="ph3">&lt;xref:System.Numerics.BigInteger.Zero%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">如果<ph id="ph1">`shift`</ph>大於或等於正的位元數<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值向右移位運算的結果是<ph id="ph3">&lt;xref:System.Numerics.BigInteger.Zero%2A?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_RightShift(System.Numerics.BigInteger,System.Int32)">
          <source>If <ph id="ph1">`shift`</ph> is greater than the number of bits in a negative <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value, the result of the right-shift operation is <ph id="ph3">&lt;xref:System.Numerics.BigInteger.MinusOne%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">如果<ph id="ph1">`shift`</ph>大於中為負數的位元數目<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值向右移位運算的結果是<ph id="ph3">&lt;xref:System.Numerics.BigInteger.MinusOne%2A?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1294" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Subtraction(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The value to subtract from (the minuend).</source>
          <target state="translated">要被減的值 (被減數)。</target>       </trans-unit>
        <trans-unit id="1295" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Subtraction(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The value to subtract (the subtrahend).</source>
          <target state="translated">要減去的值 (減數)。</target>       </trans-unit>
        <trans-unit id="1296" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Subtraction(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Subtracts a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value from another <ph id="ph2">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value.</source>
          <target state="translated">將某個 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 值減去另一個 <ph id="ph2">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 值。</target>       </trans-unit>
        <trans-unit id="1297" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_Subtraction(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The result of subtracting <ph id="ph1">&lt;paramref name="right" /&gt;</ph> from <ph id="ph2">&lt;paramref name="left" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="right" /&gt;</ph> 減去 <ph id="ph2">&lt;paramref name="left" /&gt;</ph> 的結果。</target>       </trans-unit>
        <trans-unit id="1298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Subtraction(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Subtraction%2A&gt;</ph> method defines the operation of the subtraction operator for <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_Subtraction%2A&gt;</ph>方法定義的減法運算子的作業<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="1299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Subtraction(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>It enables code such as the following:</source>
          <target state="translated">它可讓程式碼如下所示：</target>       </trans-unit>
        <trans-unit id="1300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Subtraction(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Languages that do not support custom operators can call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Subtract%2A?displayProperty=nameWithType&gt;</ph> method instead.</source>
          <target state="translated">不支援自訂運算子的語言可以呼叫<ph id="ph1">&lt;xref:System.Numerics.BigInteger.Subtract%2A?displayProperty=nameWithType&gt;</ph>方法改為。</target>       </trans-unit>
        <trans-unit id="1301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_Subtraction(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Subtract%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">這個運算子的對等方法是<ph id="ph1">&lt;xref:System.Numerics.BigInteger.Subtract%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1302" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_UnaryNegation(System.Numerics.BigInteger)">
          <source>The value to negate.</source>
          <target state="translated">要變換正負號的值。</target>       </trans-unit>
        <trans-unit id="1303" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_UnaryNegation(System.Numerics.BigInteger)">
          <source>Negates a specified BigInteger value.</source>
          <target state="translated">將指定的 BigInteger 值變換正負號。</target>       </trans-unit>
        <trans-unit id="1304" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_UnaryNegation(System.Numerics.BigInteger)">
          <source>The result of the <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parameter multiplied by negative one (-1).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> 參數乘以負一 (-1) 的結果。</target>       </trans-unit>
        <trans-unit id="1305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_UnaryNegation(System.Numerics.BigInteger)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_UnaryNegation%2A&gt;</ph> method defines the operation of the unary negation operator (or the additive inverse operator) for <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_UnaryNegation%2A&gt;</ph>方法會定義一元負運算子 （或加法反元素運算子） 的作業<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="1306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_UnaryNegation(System.Numerics.BigInteger)">
          <source>The operation produces a value that results in 0 (zero) when it is added to the original number.</source>
          <target state="translated">作業會產生值，它會加入至原始的編號時，導致 0 （零）。</target>       </trans-unit>
        <trans-unit id="1307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_UnaryNegation(System.Numerics.BigInteger)">
          <source>Languages that do not support custom operators can call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Negate%2A&gt;</ph> method instead.</source>
          <target state="translated">不支援自訂運算子的語言可以呼叫<ph id="ph1">&lt;xref:System.Numerics.BigInteger.Negate%2A&gt;</ph>方法改為。</target>       </trans-unit>
        <trans-unit id="1308" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_UnaryNegation(System.Numerics.BigInteger)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Negate%28System.Numerics.BigInteger%29?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">這個運算子的對等方法是 <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Negate%28System.Numerics.BigInteger%29?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="1309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_UnaryNegation(System.Numerics.BigInteger)">
          <source>The following example illustrates three different ways to negate the value of a <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> object.</source>
          <target state="translated">下列範例說明要變換正負號的值的三種不同方式<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="1310" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_UnaryPlus(System.Numerics.BigInteger)">
          <source>An integer value.</source>
          <target state="translated">整數值。</target>       </trans-unit>
        <trans-unit id="1311" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_UnaryPlus(System.Numerics.BigInteger)">
          <source>Returns the value of the <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> operand.</source>
          <target state="translated">傳回 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 運算元的值。</target>       </trans-unit>
        <trans-unit id="1312" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_UnaryPlus(System.Numerics.BigInteger)">
          <source>(The sign of the operand is unchanged.)</source>
          <target state="translated">(運算元的正負號不會變更)。</target>       </trans-unit>
        <trans-unit id="1313" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.op_UnaryPlus(System.Numerics.BigInteger)">
          <source>The value of the <ph id="ph1">&lt;paramref name="value" /&gt;</ph> operand.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> 運算元的值。</target>       </trans-unit>
        <trans-unit id="1314" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.op_UnaryPlus(System.Numerics.BigInteger)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_UnaryPlus%2A&gt;</ph> method defines the operation of the unary positive operator for <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.op_UnaryPlus%2A&gt;</ph>方法定義的一元正運算子操作<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="1315" translate="yes" xml:space="preserve" uid="T:System.Numerics.BigInteger">
          <source>Converts the string representation of a number to its <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> equivalent.</source>
          <target state="translated">將數字的字串表示，轉換為其相等的 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1316" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Parse(System.String)">
          <source>A string that contains the number to convert.</source>
          <target state="translated">字串，包含要轉換的數字。</target>       </trans-unit>
        <trans-unit id="1317" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Parse(System.String)">
          <source>Converts the string representation of a number to its <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> equivalent.</source>
          <target state="translated">將數字的字串表示，轉換為其相等的 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1318" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Parse(System.String)">
          <source>A value that is equivalent to the number specified in the <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parameter.</source>
          <target state="translated">值，相當於以 <ph id="ph1">&lt;paramref name="value" /&gt;</ph> 參數指定的數字。</target>       </trans-unit>
        <trans-unit id="1319" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String)">
          <source>The <ph id="ph1">`value`</ph> parameter should be the string representation of a number in the following form.</source>
          <target state="translated"><ph id="ph1">`value`</ph>參數應該是下列格式之數字的字串表示。</target>       </trans-unit>
        <trans-unit id="1320" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String)">
          <source>[<bpt id="p1">*</bpt>ws<ept id="p1">*</ept>][<bpt id="p2">*</bpt>sign<ept id="p2">*</ept>]<bpt id="p3">*</bpt>digits<ept id="p3">*</ept>[<bpt id="p4">*</bpt>ws<ept id="p4">*</ept>]</source>
          <target state="translated">[<bpt id="p1">*</bpt>ws<ept id="p1">*</ept>][<bpt id="p2">*</bpt>sign<ept id="p2">*</ept>]<bpt id="p3">*</bpt>digits<ept id="p3">*</ept>[<bpt id="p4">*</bpt>ws<ept id="p4">*</ept>]</target>       </trans-unit>
        <trans-unit id="1321" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String)">
          <source>Elements in square brackets ([ and ]) are optional.</source>
          <target state="translated">在方括號 ([ 和 ]) 中的項目是選擇性的項目。</target>       </trans-unit>
        <trans-unit id="1322" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String)">
          <source>The following table describes each element.</source>
          <target state="translated">下表描述每個項目。</target>       </trans-unit>
        <trans-unit id="1323" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String)">
          <source>Element</source>
          <target state="translated">元素</target>       </trans-unit>
        <trans-unit id="1324" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String)">
          <source>Description</source>
          <target state="translated">描述</target>       </trans-unit>
        <trans-unit id="1325" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String)">
          <source><bpt id="p1">*</bpt>ws<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>ws<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="1326" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String)">
          <source>Optional white space.</source>
          <target state="translated">選擇性的泛空白字元。</target>       </trans-unit>
        <trans-unit id="1327" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String)">
          <source><bpt id="p1">*</bpt>sign<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>簽署<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="1328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String)">
          <source>An optional sign.</source>
          <target state="translated">選擇性的符號。</target>       </trans-unit>
        <trans-unit id="1329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String)">
          <source>Valid sign characters are determined by the <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.PositiveSign%2A?displayProperty=nameWithType&gt;</ph> properties of the current culture.</source>
          <target state="translated">有效的符號字元由<ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType&gt;</ph>和<ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.PositiveSign%2A?displayProperty=nameWithType&gt;</ph>目前文化特性的屬性。</target>       </trans-unit>
        <trans-unit id="1330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String)">
          <source><bpt id="p1">*</bpt>digits<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>digits<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="1331" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String)">
          <source>A sequence of digits ranging from 0 to 9.</source>
          <target state="translated">範圍從 0 到 9 的數字序列。</target>       </trans-unit>
        <trans-unit id="1332" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String)">
          <source>Any leading zeros are ignored.</source>
          <target state="translated">會忽略任何前置零。</target>       </trans-unit>
        <trans-unit id="1333" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String)">
          <source>The string specified by the <ph id="ph1">`value`</ph> parameter is interpreted by using the <ph id="ph2">&lt;xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType&gt;</ph> style.</source>
          <target state="translated">所指定的字串<ph id="ph1">`value`</ph>參數會使用解譯<ph id="ph2">&lt;xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType&gt;</ph>樣式。</target>       </trans-unit>
        <trans-unit id="1334" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String)">
          <source>It cannot contain any group separators or decimal separator, and it cannot have a decimal portion.</source>
          <target state="translated">它不能包含任何群組分隔符號或小數分隔符號，而且不得有小數部分。</target>       </trans-unit>
        <trans-unit id="1335" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String)">
          <source>The <ph id="ph1">`value`</ph> parameter is parsed by using the formatting information in a <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo?displayProperty=nameWithType&gt;</ph> object that is initialized for the current system culture.</source>
          <target state="translated"><ph id="ph1">`value`</ph>參數使用的格式設定資訊中會剖析<ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo?displayProperty=nameWithType&gt;</ph>初始化目前的系統文化特性的物件。</target>       </trans-unit>
        <trans-unit id="1336" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String)">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">如需詳細資訊，請參閱<ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1337" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String)">
          <source>To parse a string by using the formatting information of a specific culture, use the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.IFormatProvider%29&gt;</ph> method.</source>
          <target state="translated">若要將字串剖析所使用之特定文化特性格式資訊，請使用<ph id="ph1">&lt;xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.IFormatProvider%29&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="1338" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String)">
          <source>If you use the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Parse%2A&gt;</ph> method to round-trip the string representation of a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value that was output by the <ph id="ph3">&lt;xref:System.Numerics.BigInteger.ToString%2A&gt;</ph> method, you should use the <ph id="ph4">&lt;xref:System.Numerics.BigInteger.ToString%28System.String%29?displayProperty=nameWithType&gt;</ph> method with the "R" format specifier to generate the string representation of the <ph id="ph5">&lt;xref:System.Numerics.BigInteger&gt;</ph> value.</source>
          <target state="translated">如果您使用<ph id="ph1">&lt;xref:System.Numerics.BigInteger.Parse%2A&gt;</ph>方法，以往返的字串表示的<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>所輸出的值<ph id="ph3">&lt;xref:System.Numerics.BigInteger.ToString%2A&gt;</ph>方法，您應該使用<ph id="ph4">&lt;xref:System.Numerics.BigInteger.ToString%28System.String%29?displayProperty=nameWithType&gt;</ph>使用"R"格式規範產生的字串表示的方法<ph id="ph5">&lt;xref:System.Numerics.BigInteger&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="1339" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String)">
          <source>Otherwise, the string representation of the <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> preserves only the 50 most significant digits of the original value, and data may be lost when you use the <ph id="ph2">&lt;xref:System.Numerics.BigInteger.Parse%2A&gt;</ph> method to restore the <ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph> value.</source>
          <target state="translated">否則的字串表示<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>50 大部分的有效位數的資料與原始值，可能會遺失使用時只會保留<ph id="ph2">&lt;xref:System.Numerics.BigInteger.Parse%2A&gt;</ph>方法還原<ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="1340" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Parse%28System.String%29&gt;</ph> method to instantiate two <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> objects.</source>
          <target state="translated">下列範例會使用<ph id="ph1">&lt;xref:System.Numerics.BigInteger.Parse%28System.String%29&gt;</ph>方法來具現化兩個<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="1341" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String)">
          <source>It multiplies each object by another number and then calls the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Compare%2A&gt;</ph> method to determine the relationship between the two values.</source>
          <target state="translated">它將每個物件，另一個數字相乘，然後呼叫<ph id="ph1">&lt;xref:System.Numerics.BigInteger.Compare%2A&gt;</ph>方法，以判斷兩個值之間的關聯性。</target>       </trans-unit>
        <trans-unit id="1342" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Parse(System.String)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1343" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Parse(System.String)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is not in the correct format.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> 的格式不正確。</target>       </trans-unit>
        <trans-unit id="1344" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>A string that contains a number to convert.</source>
          <target state="translated">字串，包含要轉換的數字。</target>       </trans-unit>
        <trans-unit id="1345" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>A bitwise combination of the enumeration values that specify the permitted format of <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">指定 <bpt id="p1">&lt;c&gt;</bpt>值<ept id="p1">&lt;/c&gt;</ept> 可以使用的格式之列舉值的位元組合。</target>       </trans-unit>
        <trans-unit id="1346" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>Converts the string representation of a number in a specified style to its <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> equivalent.</source>
          <target state="translated">將指定樣式中數字的字串表示轉換為其相等的 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1347" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>A value that is equivalent to the number specified in the <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parameter.</source>
          <target state="translated">值，相當於以 <ph id="ph1">&lt;paramref name="value" /&gt;</ph> 參數指定的數字。</target>       </trans-unit>
        <trans-unit id="1348" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The <ph id="ph1">`style`</ph> parameter defines the style elements (such as white space, the positive or negative sign symbol, the group separator symbol, or the decimal point symbol) that are allowed in the <ph id="ph2">`value`</ph> parameter for the parse operation to succeed.</source>
          <target state="translated"><ph id="ph1">`style`</ph>參數定義中允許的樣式項目 （例如空格、 正或負號、 群組分隔符號或小數點符號）<ph id="ph2">`value`</ph>剖析作業成功的參數。</target>       </trans-unit>
        <trans-unit id="1349" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source><ph id="ph1">`styles`</ph> must be a combination of bit flags from the <ph id="ph2">&lt;xref:System.Globalization.NumberStyles&gt;</ph> enumeration.</source>
          <target state="translated"><ph id="ph1">`styles`</ph> 必須是從位元旗標的組合<ph id="ph2">&lt;xref:System.Globalization.NumberStyles&gt;</ph>列舉型別。</target>       </trans-unit>
        <trans-unit id="1350" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The <ph id="ph1">`style`</ph> parameter makes this method overload useful when <ph id="ph2">`value`</ph> contains the string representation of a hexadecimal value, when the number system (decimal or hexadecimal) represented by <ph id="ph3">`value`</ph> is known only at run time, or when you want to disallow white space or a sign symbol in <ph id="ph4">`value`</ph>.</source>
          <target state="translated"><ph id="ph1">`style`</ph>參數，會使這個方法多載有用時<ph id="ph2">`value`</ph>包含在十六進位值的字串表示時數字系統 （十進位或十六進位） 由<ph id="ph3">`value`</ph>已知只能在執行階段，或當您不允許空白字元或正負號符號中<ph id="ph4">`value`</ph>。</target>       </trans-unit>
        <trans-unit id="1351" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>Depending on the value of <ph id="ph1">`style`</ph>, the <ph id="ph2">`value`</ph> parameter may include the following elements:</source>
          <target state="translated">值而定<ph id="ph1">`style`</ph>、<ph id="ph2">`value`</ph>參數可以包含下列項目：</target>       </trans-unit>
        <trans-unit id="1352" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>[<bpt id="p1">*</bpt>ws<ept id="p1">*</ept>][<bpt id="p2">*</bpt><ph id="ph1">$</ph><ept id="p2">*</ept>][<bpt id="p3">*</bpt>sign<ept id="p3">*</ept>][<bpt id="p4">*</bpt>digits<ept id="p4">*</ept>,]<bpt id="p5">*</bpt>digits<ept id="p5">*</ept>[.<bpt id="p6">*</bpt>fractional_digits<ept id="p6">*</ept>][E[<bpt id="p7">*</bpt>sign<ept id="p7">*</ept>]<bpt id="p8">*</bpt>exponential_digits<ept id="p8">*</ept>][<bpt id="p9">*</bpt>ws<ept id="p9">*</ept>]</source>
          <target state="translated">[<bpt id="p1">*</bpt>ws<ept id="p1">*</ept>][<bpt id="p2">*</bpt><ph id="ph1">$</ph><ept id="p2">*</ept>][<bpt id="p3">*</bpt>sign<ept id="p3">*</ept>][<bpt id="p4">*</bpt>digits<ept id="p4">*</ept>,]<bpt id="p5">*</bpt>digits<ept id="p5">*</ept>[.<bpt id="p6">*</bpt>fractional_digits<ept id="p6">*</ept>][E[<bpt id="p7">*</bpt>sign<ept id="p7">*</ept>]<bpt id="p8">*</bpt>exponential_digits<ept id="p8">*</ept>][<bpt id="p9">*</bpt>ws<ept id="p9">*</ept>]</target>       </trans-unit>
        <trans-unit id="1353" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>If <ph id="ph1">`style`</ph> includes <ph id="ph2">&lt;xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType&gt;</ph>, the <ph id="ph3">`value`</ph> parameter may contain the following elements:</source>
          <target state="translated">如果<ph id="ph1">`style`</ph>包含<ph id="ph2">&lt;xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType&gt;</ph>、<ph id="ph3">`value`</ph>參數可能包含下列項目：</target>       </trans-unit>
        <trans-unit id="1354" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>[<bpt id="p1">*</bpt>ws<ept id="p1">*</ept>]<bpt id="p2">*</bpt>hexdigits<ept id="p2">*</ept>[<bpt id="p3">*</bpt>ws<ept id="p3">*</ept>]</source>
          <target state="translated">[<bpt id="p1">*</bpt>ws<ept id="p1">*</ept>]<bpt id="p2">*</bpt>hexdigits<ept id="p2">*</ept>[<bpt id="p3">*</bpt>ws<ept id="p3">*</ept>]</target>       </trans-unit>
        <trans-unit id="1355" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>Elements in square brackets ([ and ]) are optional.</source>
          <target state="translated">在方括號 ([ 和 ]) 中的項目是選擇性的項目。</target>       </trans-unit>
        <trans-unit id="1356" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The following table describes each element.</source>
          <target state="translated">下表描述每個項目。</target>       </trans-unit>
        <trans-unit id="1357" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>Element</source>
          <target state="translated">元素</target>       </trans-unit>
        <trans-unit id="1358" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>Description</source>
          <target state="translated">描述</target>       </trans-unit>
        <trans-unit id="1359" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source><bpt id="p1">*</bpt>ws<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>ws<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="1360" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>Optional white space.</source>
          <target state="translated">選擇性的泛空白字元。</target>       </trans-unit>
        <trans-unit id="1361" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>White space can appear at the start of <ph id="ph1">`value`</ph> if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType&gt;</ph> flag, and it can appear at the end of <ph id="ph4">`value`</ph> if <ph id="ph5">`style`</ph> includes the <ph id="ph6">&lt;xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">空白字元可以出現在開頭<ph id="ph1">`value`</ph>如果<ph id="ph2">`style`</ph>包含<ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType&gt;</ph>旗標，而且可以出現在結尾<ph id="ph4">`value`</ph>如果<ph id="ph5">`style`</ph>包含<ph id="ph6">&lt;xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType&gt;</ph>旗標。</target>       </trans-unit>
        <trans-unit id="1362" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>A culture-specific currency symbol.</source>
          <target state="translated">特定文化特性的貨幣符號。</target>       </trans-unit>
        <trans-unit id="1363" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>Its position in the string is defined by the <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType&gt;</ph> properties of the current culture.</source>
          <target state="translated">在字串中的位置由定義<ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType&gt;</ph>和<ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType&gt;</ph>目前文化特性的屬性。</target>       </trans-unit>
        <trans-unit id="1364" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The current culture's currency symbol can appear in <ph id="ph1">`value`</ph> if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">目前文化特性的貨幣符號可以出現在<ph id="ph1">`value`</ph>如果<ph id="ph2">`style`</ph>包含<ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType&gt;</ph>旗標。</target>       </trans-unit>
        <trans-unit id="1365" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source><bpt id="p1">*</bpt>sign<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>簽署<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="1366" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>An optional sign.</source>
          <target state="translated">選擇性的符號。</target>       </trans-unit>
        <trans-unit id="1367" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The sign can appear at the start of <ph id="ph1">`value`</ph> if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType&gt;</ph> flag, and it can appear at the end of <ph id="ph4">`value`</ph> if <ph id="ph5">`style`</ph> includes the <ph id="ph6">&lt;xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">符號可以出現在開頭<ph id="ph1">`value`</ph>如果<ph id="ph2">`style`</ph>包含<ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType&gt;</ph>旗標，而且可以出現在結尾<ph id="ph4">`value`</ph>如果<ph id="ph5">`style`</ph>包含<ph id="ph6">&lt;xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType&gt;</ph>旗標。</target>       </trans-unit>
        <trans-unit id="1368" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>Parentheses can be used in <ph id="ph1">`value`</ph> to indicate a negative value if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">括號可用於<ph id="ph1">`value`</ph>來表示負數的值，如果<ph id="ph2">`style`</ph>包含<ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType&gt;</ph>旗標。</target>       </trans-unit>
        <trans-unit id="1369" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source><bpt id="p1">*</bpt>digits<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>digits<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="1370" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source><bpt id="p1">*</bpt>fractional_digits<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>fractional_digits<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="1371" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source><bpt id="p1">*</bpt>exponential_digits<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>exponential_digits<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="1372" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>A sequence of digits from 0 through 9.</source>
          <target state="translated">從 0 到 9 的數字序列。</target>       </trans-unit>
        <trans-unit id="1373" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>For <bpt id="p1">*</bpt>fractional_digits<ept id="p1">*</ept>, only the digit 0 is valid.</source>
          <target state="translated">如<bpt id="p1">*</bpt>fractional_digits<ept id="p1">*</ept>，只為 0 的數字會有效。</target>       </trans-unit>
        <trans-unit id="1374" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source><bpt id="p1">*</bpt>,<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>、<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="1375" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>A culture-specific group separator symbol.</source>
          <target state="translated">特定文化特性的群組分隔符號。</target>       </trans-unit>
        <trans-unit id="1376" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The current culture's group separator can appear in <ph id="ph1">`value`</ph> if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">目前的文化特性群組分隔符號可出現在<ph id="ph1">`value`</ph>如果<ph id="ph2">`style`</ph>包含<ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType&gt;</ph>旗標。</target>       </trans-unit>
        <trans-unit id="1377" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source><bpt id="p1">*</bpt>.<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>.<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="1378" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>A culture-specific decimal point symbol.</source>
          <target state="translated">特定文化特性的小數點符號。</target>       </trans-unit>
        <trans-unit id="1379" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The current culture's decimal point symbol can appear in <ph id="ph1">`value`</ph> if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">目前的文化特性小數點符號可以出現在<ph id="ph1">`value`</ph>如果<ph id="ph2">`style`</ph>包含<ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType&gt;</ph>旗標。</target>       </trans-unit>
        <trans-unit id="1380" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>Only the digit 0 can appear as a fractional digit for the parse operation to succeed; if <bpt id="p1">*</bpt>fractional_digits<ept id="p1">*</ept> includes any other digit, a <ph id="ph1">&lt;xref:System.FormatException&gt;</ph> is thrown.</source>
          <target state="translated">只有數字 0 會顯示為小數位數才能成功;，剖析作業如果<bpt id="p1">*</bpt>fractional_digits<ept id="p1">*</ept>包含任何其他數字、<ph id="ph1">&lt;xref:System.FormatException&gt;</ph>就會擲回。</target>       </trans-unit>
        <trans-unit id="1381" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>E</source>
          <target state="translated">E</target>       </trans-unit>
        <trans-unit id="1382" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The "e" or "E" character, which indicates that the value is represented in exponential (scientific) notation.</source>
          <target state="translated">"E"或者"E"字元，表示此值會表示指數 （科學記號） 表示法。</target>       </trans-unit>
        <trans-unit id="1383" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The <ph id="ph1">`value`</ph> parameter can represent a number in exponential notation if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated"><ph id="ph1">`value`</ph>參數可代表指數標記法之數字，如果<ph id="ph2">`style`</ph>包含<ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType&gt;</ph>旗標。</target>       </trans-unit>
        <trans-unit id="1384" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source><bpt id="p1">*</bpt>hexdigits<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>hexdigits<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="1385" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>A sequence of hexadecimal digits from 0 through f, or 0 through F.</source>
          <target state="translated">從 0 到 f 或 0 到 f 的十六進位數字的序列</target>       </trans-unit>
        <trans-unit id="1386" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>A string with digits only (which corresponds to the <ph id="ph1">&lt;xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType&gt;</ph> style) always parses successfully.</source>
          <target state="translated">只有數字的字串 (對應於<ph id="ph1">&lt;xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType&gt;</ph>樣式) 一律會成功剖析。</target>       </trans-unit>
        <trans-unit id="1387" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>Most of the remaining <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> members control elements that may be present, but are not required to be present, in the input string.</source>
          <target state="translated">在其餘的大部分<ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph>成員控制可能存在，但不一定要出現在輸入字串中的項目。</target>       </trans-unit>
        <trans-unit id="1388" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The following table indicates how individual <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> members affect the elements that may be present in <ph id="ph2">`value`</ph>.</source>
          <target state="translated">下表指出如何個別<ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph>成員會影響的項目可能會出現在<ph id="ph2">`value`</ph>。</target>       </trans-unit>
        <trans-unit id="1389" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source><ph id="ph1">`NumberStyles`</ph> value</source>
          <target state="translated"><ph id="ph1">`NumberStyles`</ph> 值</target>       </trans-unit>
        <trans-unit id="1390" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>Elements permitted in <ph id="ph1">`value`</ph> in addition to digits</source>
          <target state="translated">在允許的項目<ph id="ph1">`value`</ph>除了數字</target>       </trans-unit>
        <trans-unit id="1391" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The <bpt id="p1">*</bpt>digits<ept id="p1">*</ept> element only.</source>
          <target state="translated"><bpt id="p1">*</bpt>位數<ept id="p1">*</ept>只有項目。</target>       </trans-unit>
        <trans-unit id="1392" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The decimal point (.) and <bpt id="p1">*</bpt>fractional-digits<ept id="p1">*</ept> elements.</source>
          <target state="translated">小數點 （.） 和<bpt id="p1">*</bpt>小數點後數字<ept id="p1">*</ept>項目。</target>       </trans-unit>
        <trans-unit id="1393" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The "e" or "E" character, which indicates exponential notation, along with <bpt id="p1">*</bpt>exponential_digits<ept id="p1">*</ept>.</source>
          <target state="translated">"E"或"E"字元，表示指數標記法，連同<bpt id="p1">*</bpt>exponential_digits<ept id="p1">*</ept>。</target>       </trans-unit>
        <trans-unit id="1394" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The <bpt id="p1">*</bpt>ws<ept id="p1">*</ept> element at the start of <ph id="ph1">`value`</ph>.</source>
          <target state="translated"><bpt id="p1">*</bpt>Ws<ept id="p1">*</ept>開頭的項目<ph id="ph1">`value`</ph>。</target>       </trans-unit>
        <trans-unit id="1395" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The <bpt id="p1">*</bpt>ws<ept id="p1">*</ept> element at the end of <ph id="ph1">`value`</ph>.</source>
          <target state="translated"><bpt id="p1">*</bpt>Ws<ept id="p1">*</ept>結尾處的項目<ph id="ph1">`value`</ph>。</target>       </trans-unit>
        <trans-unit id="1396" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The <bpt id="p1">*</bpt>sign<ept id="p1">*</ept> element at the start of <ph id="ph1">`value`</ph>.</source>
          <target state="translated"><bpt id="p1">*</bpt>登<ept id="p1">*</ept>開頭的項目<ph id="ph1">`value`</ph>。</target>       </trans-unit>
        <trans-unit id="1397" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The <bpt id="p1">*</bpt>sign<ept id="p1">*</ept> element at the end of <ph id="ph1">`value`</ph>.</source>
          <target state="translated"><bpt id="p1">*</bpt>登<ept id="p1">*</ept>結尾處的項目<ph id="ph1">`value`</ph>。</target>       </trans-unit>
        <trans-unit id="1398" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The <bpt id="p1">*</bpt>sign<ept id="p1">*</ept> element in the form of parentheses enclosing the numeric value.</source>
          <target state="translated"><bpt id="p1">*</bpt>登<ept id="p1">*</ept>括住的數字值的形式的項目。</target>       </trans-unit>
        <trans-unit id="1399" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The group separator (,) element.</source>
          <target state="translated">群組分隔符號 （，） 項目。</target>       </trans-unit>
        <trans-unit id="1400" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The currency ($) element.</source>
          <target state="translated">貨幣 （$） 項目。</target>       </trans-unit>
        <trans-unit id="1401" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>All elements.</source>
          <target state="translated">所有項目。</target>       </trans-unit>
        <trans-unit id="1402" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>However, <ph id="ph1">`value`</ph> cannot represent a hexadecimal number or a number in exponential notation.</source>
          <target state="translated">不過，<ph id="ph1">`value`</ph>無法表示的十六進位數字或指數標記法之數字。</target>       </trans-unit>
        <trans-unit id="1403" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The <bpt id="p1">*</bpt>ws<ept id="p1">*</ept> element at the start or end of <ph id="ph1">`value`</ph>, <bpt id="p2">*</bpt>sign<ept id="p2">*</ept> at the start of <ph id="ph2">`value`</ph>, and the decimal point (<bpt id="p3">*</bpt>.<ept id="p3">*</ept>) symbol.</source>
          <target state="translated"><bpt id="p1">*</bpt>Ws<ept id="p1">*</ept>開頭或結尾的項目<ph id="ph1">`value`</ph>，<bpt id="p2">*</bpt>登<ept id="p2">*</ept>開頭<ph id="ph2">`value`</ph>，並在小數點 (<bpt id="p3">*</bpt>。<ept id="p3">*</ept>) 符號。</target>       </trans-unit>
        <trans-unit id="1404" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The <ph id="ph1">`value`</ph> parameter can also use exponential notation.</source>
          <target state="translated"><ph id="ph1">`value`</ph>參數也可以使用指數標記法。</target>       </trans-unit>
        <trans-unit id="1405" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The <ph id="ph1">`ws`</ph>, <ph id="ph2">`sign`</ph>, group separator (<bpt id="p1">*</bpt>,<ept id="p1">*</ept>), and decimal point (<bpt id="p2">*</bpt>.<ept id="p2">*</ept>) elements.</source>
          <target state="translated"><ph id="ph1">`ws`</ph>， <ph id="ph2">`sign`</ph>、 群組分隔符號 (<bpt id="p1">*</bpt>，<ept id="p1">*</ept>)，和小數點 (<bpt id="p2">*</bpt>。<ept id="p2">*</ept>) 項目。</target>       </trans-unit>
        <trans-unit id="1406" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>All elements.</source>
          <target state="translated">所有項目。</target>       </trans-unit>
        <trans-unit id="1407" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>However, <ph id="ph1">`value`</ph> cannot represent a hexadecimal number.</source>
          <target state="translated">不過，<ph id="ph1">`value`</ph>無法表示的十六進位數字。</target>       </trans-unit>
        <trans-unit id="1408" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>If you use the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Parse%2A&gt;</ph> method to round-trip the string representation of a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value that was output by the <ph id="ph3">&lt;xref:System.Numerics.BigInteger.ToString%2A&gt;</ph> method, you should use the <ph id="ph4">&lt;xref:System.Numerics.BigInteger.ToString%28System.String%29?displayProperty=nameWithType&gt;</ph> method with the "R" format specifier to generate the string representation of the <ph id="ph5">&lt;xref:System.Numerics.BigInteger&gt;</ph> value.</source>
          <target state="translated">如果您使用<ph id="ph1">&lt;xref:System.Numerics.BigInteger.Parse%2A&gt;</ph>方法，以往返的字串表示的<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>所輸出的值<ph id="ph3">&lt;xref:System.Numerics.BigInteger.ToString%2A&gt;</ph>方法，您應該使用<ph id="ph4">&lt;xref:System.Numerics.BigInteger.ToString%28System.String%29?displayProperty=nameWithType&gt;</ph>使用"R"格式規範產生的字串表示的方法<ph id="ph5">&lt;xref:System.Numerics.BigInteger&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="1409" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>Otherwise, the string representation of the <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> preserves only the 50 most significant digits of the original value, and data may be lost when you use the <ph id="ph2">&lt;xref:System.Numerics.BigInteger.Parse%2A&gt;</ph> method to restore the <ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph> value.</source>
          <target state="translated">否則的字串表示<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>50 大部分的有效位數的資料與原始值，可能會遺失使用時只會保留<ph id="ph2">&lt;xref:System.Numerics.BigInteger.Parse%2A&gt;</ph>方法還原<ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="1410" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>Unlike the other <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> values, which allow for, but do not require, the presence of particular style elements in <ph id="ph2">`value`</ph>, the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType&gt;</ph> style value means that the individual numeric characters in <ph id="ph4">`value`</ph> are always interpreted as hexadecimal characters.</source>
          <target state="translated">不同於其他<ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph>值、 允許，但不是需要，在特定的樣式項目是否存在<ph id="ph2">`value`</ph>、<ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType&gt;</ph>樣式值表示，在個別的數字字元<ph id="ph4">`value`</ph>一律解譯為十六進位字元。</target>       </trans-unit>
        <trans-unit id="1411" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>Valid hexadecimal characters are 0-9, A-F, and a-f.</source>
          <target state="translated">有效的十六進位字元為 0-9、 A-F 和 a-f。</target>       </trans-unit>
        <trans-unit id="1412" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The only other flags that can be combined with the <ph id="ph1">`style`</ph> parameter are <ph id="ph2">&lt;xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType&gt;</ph> and <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">只有其他旗標可以結合<ph id="ph1">`style`</ph>參數<ph id="ph2">&lt;xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType&gt;</ph>和<ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1413" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>(The <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> enumeration includes a composite number style, <ph id="ph2">&lt;xref:System.Globalization.NumberStyles.HexNumber&gt;</ph>, that includes both white-space flags.)</source>
          <target state="translated">(<ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph>列舉會包含複合的數字樣式<ph id="ph2">&lt;xref:System.Globalization.NumberStyles.HexNumber&gt;</ph>，其中包含這兩個空格旗標。)</target>       </trans-unit>
        <trans-unit id="1414" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>If <ph id="ph1">`value`</ph> is the string representation of a hexadecimal number, it cannot be preceded by any decoration (such as <ph id="ph2">`0x`</ph> or <ph id="ph3">`&amp;h`</ph>) that differentiates it as a hexadecimal number.</source>
          <target state="translated">如果<ph id="ph1">`value`</ph>的字串表示法的十六進位數字，它無法前面的任何裝飾 (例如<ph id="ph2">`0x`</ph>或<ph id="ph3">`&amp;h`</ph>)，區隔其十六進位數字。</target>       </trans-unit>
        <trans-unit id="1415" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>This causes the conversion to fail.</source>
          <target state="translated">這會導致轉換失敗。</target>       </trans-unit>
        <trans-unit id="1416" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>If <ph id="ph1">`value`</ph> is a hexadecimal string, the <ph id="ph2">&lt;xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%29&gt;</ph> method interprets <ph id="ph3">`value`</ph> as a negative number stored by using two's complement representation if its first two hexadecimal digits are greater than or equal to <ph id="ph4">`0x80`</ph>.</source>
          <target state="translated">如果<ph id="ph1">`value`</ph>為十六進位的字串，<ph id="ph2">&lt;xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%29&gt;</ph>方法解譯<ph id="ph3">`value`</ph>負數儲存使用二的補數表示，如果其前兩個十六進位數字會大於或等於<ph id="ph4">`0x80`</ph>。</target>       </trans-unit>
        <trans-unit id="1417" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>In other words, the method interprets the highest-order bit of the first byte in <ph id="ph1">`value`</ph> as the sign bit.</source>
          <target state="translated">換句話說，方法會解譯中的第一個位元組的最高序位位元<ph id="ph1">`value`</ph>做為正負號位元。</target>       </trans-unit>
        <trans-unit id="1418" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>To make sure that a hexadecimal string is correctly interpreted as a positive number, the first digit in <ph id="ph1">`value`</ph> must have a value of zero.</source>
          <target state="translated">若要確定為十六進位字串已正確解譯為正數中的第一個數字<ph id="ph1">`value`</ph>必須具有值為零。</target>       </trans-unit>
        <trans-unit id="1419" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>For example, the method interprets <ph id="ph1">`0x80`</ph> as a negative value, but it interprets either <ph id="ph2">`0x080`</ph> or <ph id="ph3">`0x0080`</ph> as a positive value.</source>
          <target state="translated">例如，方法會將解譯<ph id="ph1">`0x80`</ph>為負值，但是它會解譯 <ph id="ph2">`0x080`</ph>或<ph id="ph3">`0x0080`</ph>為正值。</target>       </trans-unit>
        <trans-unit id="1420" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The following example illustrates the difference between hexadecimal strings that represent negative and positive values.</source>
          <target state="translated">下列範例說明代表及負數值的十六進位字串之間的差異。</target>       </trans-unit>
        <trans-unit id="1421" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The <ph id="ph1">`value`</ph> parameter is parsed by using the formatting information in a <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that is initialized for the current system culture.</source>
          <target state="translated"><ph id="ph1">`value`</ph>參數使用的格式設定資訊中會剖析<ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>初始化目前的系統文化特性的物件。</target>       </trans-unit>
        <trans-unit id="1422" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>To specify the culture whose formatting information is used for the parse operation, call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29&gt;</ph> overload.</source>
          <target state="translated">若要指定的文化特性，剖析作業使用的格式資訊，請呼叫<ph id="ph1">&lt;xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29&gt;</ph>多載。</target>       </trans-unit>
        <trans-unit id="1423" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The following example illustrates calls to the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%29&gt;</ph> method with several possible values for the <ph id="ph2">`style`</ph> parameter.</source>
          <target state="translated">下列範例說明如何呼叫<ph id="ph1">&lt;xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%29&gt;</ph>方法具有幾個可能的值為<ph id="ph2">`style`</ph>參數。</target>       </trans-unit>
        <trans-unit id="1424" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>It illustrates how to interpret a string as a hexadecimal value, and how to disallow spaces and sign symbols.</source>
          <target state="translated">它說明如何將字串解譯為十六進位值，以及如何不允許空格並登入的符號。</target>       </trans-unit>
        <trans-unit id="1425" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source><ph id="ph1">&lt;paramref name="style" /&gt;</ph> is not a <ph id="ph2">&lt;see cref="T:System.Globalization.NumberStyles" /&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="style" /&gt;</ph> 不是 <ph id="ph2">&lt;see cref="T:System.Globalization.NumberStyles" /&gt;</ph> 值。</target>       </trans-unit>
        <trans-unit id="1426" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="1427" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source><ph id="ph1">&lt;paramref name="style" /&gt;</ph> includes the <ph id="ph2">&lt;see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /&gt;</ph> or <ph id="ph3">&lt;see cref="F:System.Globalization.NumberStyles.HexNumber" /&gt;</ph> flag along with another value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="style" /&gt;</ph> 包含 <ph id="ph2">&lt;see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /&gt;</ph> 或 <ph id="ph3">&lt;see cref="F:System.Globalization.NumberStyles.HexNumber" /&gt;</ph> 旗標和其他值。</target>       </trans-unit>
        <trans-unit id="1428" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1429" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> does not comply with the input pattern specified by <ph id="ph2">&lt;see cref="T:System.Globalization.NumberStyles" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> 不符合由 <ph id="ph2">&lt;see cref="T:System.Globalization.NumberStyles" /&gt;</ph> 所指定的輸入模式。</target>       </trans-unit>
        <trans-unit id="1430" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Parse(System.String,System.IFormatProvider)">
          <source>A string that contains a number to convert.</source>
          <target state="translated">字串，包含要轉換的數字。</target>       </trans-unit>
        <trans-unit id="1431" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Parse(System.String,System.IFormatProvider)">
          <source>An object that provides culture-specific formatting information about <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">提供關於 <bpt id="p1">&lt;c&gt;</bpt>值<ept id="p1">&lt;/c&gt;</ept> 之特定文化特性格式資訊的物件。</target>       </trans-unit>
        <trans-unit id="1432" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Parse(System.String,System.IFormatProvider)">
          <source>Converts the string representation of a number in a specified culture-specific format to its <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> equivalent.</source>
          <target state="translated">將使用指定特定文化特性格式之數字的字串表示轉換為其相等的 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1433" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Parse(System.String,System.IFormatProvider)">
          <source>A value that is equivalent to the number specified in the <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parameter.</source>
          <target state="translated">值，相當於以 <ph id="ph1">&lt;paramref name="value" /&gt;</ph> 參數指定的數字。</target>       </trans-unit>
        <trans-unit id="1434" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.IFormatProvider)">
          <source>The <ph id="ph1">`value`</ph> parameter should be the string representation of a number in the following form:</source>
          <target state="translated"><ph id="ph1">`value`</ph>參數應該是下列格式之數字的字串表示：</target>       </trans-unit>
        <trans-unit id="1435" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.IFormatProvider)">
          <source>[<bpt id="p1">*</bpt>ws<ept id="p1">*</ept>][<bpt id="p2">*</bpt>sign<ept id="p2">*</ept>]<bpt id="p3">*</bpt>digits<ept id="p3">*</ept>[<bpt id="p4">*</bpt>ws<ept id="p4">*</ept>]</source>
          <target state="translated">[<bpt id="p1">*</bpt>ws<ept id="p1">*</ept>][<bpt id="p2">*</bpt>sign<ept id="p2">*</ept>]<bpt id="p3">*</bpt>digits<ept id="p3">*</ept>[<bpt id="p4">*</bpt>ws<ept id="p4">*</ept>]</target>       </trans-unit>
        <trans-unit id="1436" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.IFormatProvider)">
          <source>Elements in square brackets ([ and ]) are optional.</source>
          <target state="translated">在方括號 ([ 和 ]) 中的項目是選擇性的項目。</target>       </trans-unit>
        <trans-unit id="1437" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.IFormatProvider)">
          <source>The following table describes each element.</source>
          <target state="translated">下表描述每個項目。</target>       </trans-unit>
        <trans-unit id="1438" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.IFormatProvider)">
          <source>Element</source>
          <target state="translated">元素</target>       </trans-unit>
        <trans-unit id="1439" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.IFormatProvider)">
          <source>Description</source>
          <target state="translated">描述</target>       </trans-unit>
        <trans-unit id="1440" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.IFormatProvider)">
          <source><bpt id="p1">*</bpt>ws<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>ws<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="1441" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.IFormatProvider)">
          <source>Optional white space.</source>
          <target state="translated">選擇性的泛空白字元。</target>       </trans-unit>
        <trans-unit id="1442" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.IFormatProvider)">
          <source><bpt id="p1">*</bpt>sign<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>簽署<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="1443" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.IFormatProvider)">
          <source>An optional sign.</source>
          <target state="translated">選擇性的符號。</target>       </trans-unit>
        <trans-unit id="1444" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.IFormatProvider)">
          <source>Valid sign characters are determined by the <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.PositiveSign%2A?displayProperty=nameWithType&gt;</ph> properties of the <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that is returned by the <ph id="ph4">`provider`</ph> object's <ph id="ph5">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> method.</source>
          <target state="translated">有效的符號字元由<ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType&gt;</ph>和<ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.PositiveSign%2A?displayProperty=nameWithType&gt;</ph>屬性<ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>所傳回的物件<ph id="ph4">`provider`</ph>物件的<ph id="ph5">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="1445" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.IFormatProvider)">
          <source><bpt id="p1">*</bpt>digits<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>digits<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="1446" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.IFormatProvider)">
          <source>A sequence of digits ranging from 0 to 9.</source>
          <target state="translated">範圍從 0 到 9 的數字序列。</target>       </trans-unit>
        <trans-unit id="1447" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.IFormatProvider)">
          <source>Any leading zeros are ignored.</source>
          <target state="translated">會忽略任何前置零。</target>       </trans-unit>
        <trans-unit id="1448" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.IFormatProvider)">
          <source>The string specified by the <ph id="ph1">`value`</ph> parameter is interpreted using the <ph id="ph2">&lt;xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType&gt;</ph> style.</source>
          <target state="translated">所指定的字串<ph id="ph1">`value`</ph>參數會使用解譯<ph id="ph2">&lt;xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType&gt;</ph>樣式。</target>       </trans-unit>
        <trans-unit id="1449" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.IFormatProvider)">
          <source>It cannot contain any group separators or decimal separator, and it cannot have a decimal portion.</source>
          <target state="translated">它不能包含任何群組分隔符號或小數分隔符號，而且不得有小數部分。</target>       </trans-unit>
        <trans-unit id="1450" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.IFormatProvider)">
          <source>If you use the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Parse%2A&gt;</ph> method to round-trip the string representation of a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value that was output by the <ph id="ph3">&lt;xref:System.Numerics.BigInteger.ToString%2A&gt;</ph> method, you should use the <ph id="ph4">&lt;xref:System.Numerics.BigInteger.ToString%28System.String%29?displayProperty=nameWithType&gt;</ph> method with the "R" format specifier to generate the string representation of the <ph id="ph5">&lt;xref:System.Numerics.BigInteger&gt;</ph> value.</source>
          <target state="translated">如果您使用<ph id="ph1">&lt;xref:System.Numerics.BigInteger.Parse%2A&gt;</ph>方法，以往返的字串表示的<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>所輸出的值<ph id="ph3">&lt;xref:System.Numerics.BigInteger.ToString%2A&gt;</ph>方法，您應該使用<ph id="ph4">&lt;xref:System.Numerics.BigInteger.ToString%28System.String%29?displayProperty=nameWithType&gt;</ph>使用"R"格式規範產生的字串表示的方法<ph id="ph5">&lt;xref:System.Numerics.BigInteger&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="1451" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.IFormatProvider)">
          <source>Otherwise, the string representation of the <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> preserves only the 50 most significant digits of the original value, and data may be lost when you use the <ph id="ph2">&lt;xref:System.Numerics.BigInteger.Parse%2A&gt;</ph> method to restore the <ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph> value.</source>
          <target state="translated">否則的字串表示<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>50 大部分的有效位數的資料與原始值，可能會遺失使用時只會保留<ph id="ph2">&lt;xref:System.Numerics.BigInteger.Parse%2A&gt;</ph>方法還原<ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="1452" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.IFormatProvider)">
          <source>The <ph id="ph1">`provider`</ph> parameter is an <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> implementation whose <ph id="ph3">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> method returns a <ph id="ph4">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that provides culture-specific formatting information.</source>
          <target state="translated"><ph id="ph1">`provider`</ph>參數是<ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph>實作其<ph id="ph3">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph>方法會傳回<ph id="ph4">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>物件，提供特定文化特性格式資訊。</target>       </trans-unit>
        <trans-unit id="1453" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.IFormatProvider)">
          <source>When the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.IFormatProvider%29&gt;</ph> method is invoked, it calls the <ph id="ph2">`provider`</ph> parameter's <ph id="ph3">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> method and passes it a <ph id="ph4">&lt;xref:System.Type&gt;</ph> object that represents the <ph id="ph5">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> type.</source>
          <target state="translated">當<ph id="ph1">&lt;xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.IFormatProvider%29&gt;</ph>叫用方法時，它會呼叫<ph id="ph2">`provider`</ph>參數的<ph id="ph3">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph>方法並將其傳遞<ph id="ph4">&lt;xref:System.Type&gt;</ph>物件，代表<ph id="ph5">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>型別。</target>       </trans-unit>
        <trans-unit id="1454" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.IFormatProvider)">
          <source>The <ph id="ph1">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> method then returns the <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that provides information about the format of the <ph id="ph3">`value`</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph>方法接著會傳回<ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>物件，提供格式的相關資訊<ph id="ph3">`value`</ph>參數。</target>       </trans-unit>
        <trans-unit id="1455" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.IFormatProvider)">
          <source>There are three ways to use the <ph id="ph1">`provider`</ph> parameter to supply custom formatting information to the parse operation:</source>
          <target state="translated">若要使用的三種方式<ph id="ph1">`provider`</ph>參數來提供自訂的格式設定資訊給剖析作業：</target>       </trans-unit>
        <trans-unit id="1456" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.IFormatProvider)">
          <source>You can pass a <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object that represents the culture that supplies formatting information.</source>
          <target state="translated">您可以傳遞<ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph>代表的文化特性，提供格式設定資訊的物件。</target>       </trans-unit>
        <trans-unit id="1457" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.IFormatProvider)">
          <source>Its <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.GetFormat%2A&gt;</ph> method returns the <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that provides numeric formatting information for that culture.</source>
          <target state="translated">其<ph id="ph1">&lt;xref:System.Globalization.CultureInfo.GetFormat%2A&gt;</ph>方法會傳回<ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>提供該文化特性的數值格式設定資訊的物件。</target>       </trans-unit>
        <trans-unit id="1458" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.IFormatProvider)">
          <source>You can pass the actual <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that provides numeric formatting information.</source>
          <target state="translated">您可以傳遞的實際<ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>提供數值格式設定資訊的物件。</target>       </trans-unit>
        <trans-unit id="1459" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.IFormatProvider)">
          <source>(Its implementation of <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.GetFormat%2A&gt;</ph> just returns itself.)</source>
          <target state="translated">(它的實作<ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.GetFormat%2A&gt;</ph>只會傳回本身。)</target>       </trans-unit>
        <trans-unit id="1460" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.IFormatProvider)">
          <source>You can pass a custom object that implements <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph>.</source>
          <target state="translated">您可以將自訂物件實作<ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1461" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.IFormatProvider)">
          <source>Its <ph id="ph1">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> method instantiates and returns the <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that provides formatting information.</source>
          <target state="translated">其<ph id="ph1">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph>方法具現化，並傳回<ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>提供格式設定資訊的物件。</target>       </trans-unit>
        <trans-unit id="1462" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.IFormatProvider)">
          <source>If <ph id="ph1">`provider`</ph> is <ph id="ph2">`null`</ph>, the formatting of <ph id="ph3">`value`</ph> is interpreted based on the <ph id="ph4">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object of the current culture.</source>
          <target state="translated">如果<ph id="ph1">`provider`</ph>是<ph id="ph2">`null`</ph>，格式化的<ph id="ph3">`value`</ph>解譯根據<ph id="ph4">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>目前文化特性的物件。</target>       </trans-unit>
        <trans-unit id="1463" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.IFormatProvider)">
          <source>The following examples show two ways to define the tilde (~) as a negative sign for formatting <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated">下列範例顯示兩種方式可定義波狀符號 （~） 為負號格式化<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="1464" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.IFormatProvider)">
          <source>Note that to display the <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> values in the same format as the original strings, your code must call the <ph id="ph2">&lt;xref:System.Numerics.BigInteger.ToString%28System.IFormatProvider%29?displayProperty=nameWithType&gt;</ph> method and pass it the <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that provides formatting information.</source>
          <target state="translated">請注意，顯示<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>的原始字串格式相同的值，您的程式碼必須呼叫<ph id="ph2">&lt;xref:System.Numerics.BigInteger.ToString%28System.IFormatProvider%29?displayProperty=nameWithType&gt;</ph>方法並將它傳遞<ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>提供格式設定資訊的物件。</target>       </trans-unit>
        <trans-unit id="1465" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.IFormatProvider)">
          <source>The first example defines a class that implements <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> and uses the <ph id="ph2">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> method to return the <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that provides formatting information.</source>
          <target state="translated">第一個範例定義一個類別，實作<ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph>並用<ph id="ph2">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph>方法以傳回<ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>提供格式設定資訊的物件。</target>       </trans-unit>
        <trans-unit id="1466" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.IFormatProvider)">
          <source>A <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> object can then be instantiated with the following code:</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>可以再具現化物件為下列程式碼：</target>       </trans-unit>
        <trans-unit id="1467" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.IFormatProvider)">
          <source>The second example is more straightforward.</source>
          <target state="translated">第二個範例是更簡單。</target>       </trans-unit>
        <trans-unit id="1468" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.IFormatProvider)">
          <source>It passes the <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that provides formatting information to the <ph id="ph2">`provider`</ph> parameter.</source>
          <target state="translated">它會傳遞<ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>物件，提供格式設定資訊給<ph id="ph2">`provider`</ph>參數。</target>       </trans-unit>
        <trans-unit id="1469" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Parse(System.String,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1470" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Parse(System.String,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is not in the correct format.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> 的格式不正確。</target>       </trans-unit>
        <trans-unit id="1471" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>A string that contains a number to convert.</source>
          <target state="translated">字串，包含要轉換的數字。</target>       </trans-unit>
        <trans-unit id="1472" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>A bitwise combination of the enumeration values that specify the permitted format of <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">指定 <bpt id="p1">&lt;c&gt;</bpt>值<ept id="p1">&lt;/c&gt;</ept> 可以使用的格式之列舉值的位元組合。</target>       </trans-unit>
        <trans-unit id="1473" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>An object that provides culture-specific formatting information about <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">提供關於 <bpt id="p1">&lt;c&gt;</bpt>值<ept id="p1">&lt;/c&gt;</ept> 之特定文化特性格式資訊的物件。</target>       </trans-unit>
        <trans-unit id="1474" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>Converts the string representation of a number in a specified style and culture-specific format to its <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> equivalent.</source>
          <target state="translated">將數字的字串表示 (使用指定樣式和特定文化特性的格式) 轉換為其相等的 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1475" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>A value that is equivalent to the number specified in the <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parameter.</source>
          <target state="translated">值，相當於以 <ph id="ph1">&lt;paramref name="value" /&gt;</ph> 參數指定的數字。</target>       </trans-unit>
        <trans-unit id="1476" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The <ph id="ph1">`style`</ph> parameter defines the style elements (such as white space, the positive or negative sign symbol, the group separator symbol, or the decimal point symbol) that are allowed in the <ph id="ph2">`value`</ph> parameter for the parse operation to succeed.</source>
          <target state="translated"><ph id="ph1">`style`</ph>參數定義中允許的樣式項目 （例如空格、 正或負號、 群組分隔符號或小數點符號）<ph id="ph2">`value`</ph>剖析作業成功的參數。</target>       </trans-unit>
        <trans-unit id="1477" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source><ph id="ph1">`styles`</ph> must be a combination of bit flags from the <ph id="ph2">&lt;xref:System.Globalization.NumberStyles&gt;</ph> enumeration.</source>
          <target state="translated"><ph id="ph1">`styles`</ph> 必須是從位元旗標的組合<ph id="ph2">&lt;xref:System.Globalization.NumberStyles&gt;</ph>列舉型別。</target>       </trans-unit>
        <trans-unit id="1478" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The <ph id="ph1">`style`</ph> parameter makes this method overload useful when <ph id="ph2">`value`</ph> contains the string representation of a hexadecimal value, when the number system (decimal or hexadecimal) represented by <ph id="ph3">`value`</ph> is known only at run time, or when you want to disallow white space or a sign symbol in <ph id="ph4">`value`</ph>.</source>
          <target state="translated"><ph id="ph1">`style`</ph>參數，會使這個方法多載有用時<ph id="ph2">`value`</ph>包含在十六進位值的字串表示時數字系統 （十進位或十六進位） 由<ph id="ph3">`value`</ph>已知只能在執行階段，或當您不允許空白字元或正負號符號中<ph id="ph4">`value`</ph>。</target>       </trans-unit>
        <trans-unit id="1479" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>Depending on the value of <ph id="ph1">`style`</ph>, the <ph id="ph2">`value`</ph> parameter may include the following elements:</source>
          <target state="translated">值而定<ph id="ph1">`style`</ph>、<ph id="ph2">`value`</ph>參數可以包含下列項目：</target>       </trans-unit>
        <trans-unit id="1480" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>[<bpt id="p1">*</bpt>ws<ept id="p1">*</ept>][<bpt id="p2">*</bpt><ph id="ph1">$</ph><ept id="p2">*</ept>][<bpt id="p3">*</bpt>sign<ept id="p3">*</ept>][<bpt id="p4">*</bpt>digits<ept id="p4">*</ept>,]<bpt id="p5">*</bpt>digits<ept id="p5">*</ept>[<bpt id="p6">*</bpt>.fractional_digits<ept id="p6">*</ept>][E[<bpt id="p7">*</bpt>sign<ept id="p7">*</ept>]<bpt id="p8">*</bpt>exponential_digits<ept id="p8">*</ept>][<bpt id="p9">*</bpt>ws<ept id="p9">*</ept>]</source>
          <target state="translated">[<bpt id="p1">*</bpt>ws<ept id="p1">*</ept>][<bpt id="p2">*</bpt><ph id="ph1">$</ph><ept id="p2">*</ept>][<bpt id="p3">*</bpt>sign<ept id="p3">*</ept>][<bpt id="p4">*</bpt>digits<ept id="p4">*</ept>,]<bpt id="p5">*</bpt>digits<ept id="p5">*</ept>[<bpt id="p6">*</bpt>.fractional_digits<ept id="p6">*</ept>][E[<bpt id="p7">*</bpt>sign<ept id="p7">*</ept>]<bpt id="p8">*</bpt>exponential_digits<ept id="p8">*</ept>][<bpt id="p9">*</bpt>ws<ept id="p9">*</ept>]</target>       </trans-unit>
        <trans-unit id="1481" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>If <ph id="ph1">`style`</ph> includes <ph id="ph2">&lt;xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType&gt;</ph>, the <ph id="ph3">`value`</ph> parameter may include the following elements:</source>
          <target state="translated">如果<ph id="ph1">`style`</ph>包含<ph id="ph2">&lt;xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType&gt;</ph>、<ph id="ph3">`value`</ph>參數可以包含下列項目：</target>       </trans-unit>
        <trans-unit id="1482" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>[<bpt id="p1">*</bpt>ws<ept id="p1">*</ept>]<bpt id="p2">*</bpt>hexdigits<ept id="p2">*</ept>[<bpt id="p3">*</bpt>ws<ept id="p3">*</ept>]</source>
          <target state="translated">[<bpt id="p1">*</bpt>ws<ept id="p1">*</ept>]<bpt id="p2">*</bpt>hexdigits<ept id="p2">*</ept>[<bpt id="p3">*</bpt>ws<ept id="p3">*</ept>]</target>       </trans-unit>
        <trans-unit id="1483" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>Elements in square brackets ([ and ]) are optional.</source>
          <target state="translated">在方括號 ([ 和 ]) 中的項目是選擇性的項目。</target>       </trans-unit>
        <trans-unit id="1484" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The following table describes each element.</source>
          <target state="translated">下表描述每個項目。</target>       </trans-unit>
        <trans-unit id="1485" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>Element</source>
          <target state="translated">元素</target>       </trans-unit>
        <trans-unit id="1486" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>Description</source>
          <target state="translated">描述</target>       </trans-unit>
        <trans-unit id="1487" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source><bpt id="p1">*</bpt>ws<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>ws<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="1488" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>Optional white space.</source>
          <target state="translated">選擇性的泛空白字元。</target>       </trans-unit>
        <trans-unit id="1489" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>White space can appear at the start of <ph id="ph1">`value`</ph> if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType&gt;</ph> flag, and it can appear at the end of <ph id="ph4">`value`</ph> if <ph id="ph5">`style`</ph> includes the <ph id="ph6">&lt;xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">空白字元可以出現在開頭<ph id="ph1">`value`</ph>如果<ph id="ph2">`style`</ph>包含<ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType&gt;</ph>旗標，而且可以出現在結尾<ph id="ph4">`value`</ph>如果<ph id="ph5">`style`</ph>包含<ph id="ph6">&lt;xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType&gt;</ph>旗標。</target>       </trans-unit>
        <trans-unit id="1490" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>A culture-specific currency symbol.</source>
          <target state="translated">特定文化特性的貨幣符號。</target>       </trans-unit>
        <trans-unit id="1491" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>Its position in the string is defined by the <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType&gt;</ph> properties of the culture indicated by the <ph id="ph3">`provider`</ph> parameter.</source>
          <target state="translated">在字串中的位置由定義<ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType&gt;</ph>和<ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType&gt;</ph>所指定的文化特性屬性<ph id="ph3">`provider`</ph>參數。</target>       </trans-unit>
        <trans-unit id="1492" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The current culture's currency symbol can appear in <ph id="ph1">`value`</ph> if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">目前文化特性的貨幣符號可以出現在<ph id="ph1">`value`</ph>如果<ph id="ph2">`style`</ph>包含<ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType&gt;</ph>旗標。</target>       </trans-unit>
        <trans-unit id="1493" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source><bpt id="p1">*</bpt>sign<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>簽署<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="1494" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>An optional sign.</source>
          <target state="translated">選擇性的符號。</target>       </trans-unit>
        <trans-unit id="1495" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The sign can appear at the start of <ph id="ph1">`value`</ph> if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType&gt;</ph> flag, and it can appear at the end of <ph id="ph4">`value`</ph> if <ph id="ph5">`style`</ph> includes the <ph id="ph6">&lt;xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">符號可以出現在開頭<ph id="ph1">`value`</ph>如果<ph id="ph2">`style`</ph>包含<ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType&gt;</ph>旗標，而且可以出現在結尾<ph id="ph4">`value`</ph>如果<ph id="ph5">`style`</ph>包含<ph id="ph6">&lt;xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType&gt;</ph>旗標。</target>       </trans-unit>
        <trans-unit id="1496" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>Parentheses can be used in <ph id="ph1">`value`</ph> to indicate a negative value if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">括號可用於<ph id="ph1">`value`</ph>來表示負數的值，如果<ph id="ph2">`style`</ph>包含<ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType&gt;</ph>旗標。</target>       </trans-unit>
        <trans-unit id="1497" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source><bpt id="p1">*</bpt>digits<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>digits<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="1498" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source><bpt id="p1">*</bpt>fractional_digits<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>fractional_digits<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="1499" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source><bpt id="p1">*</bpt>exponential_digits<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>exponential_digits<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="1500" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>A sequence of digits from 0 through 9.</source>
          <target state="translated">從 0 到 9 的數字序列。</target>       </trans-unit>
        <trans-unit id="1501" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>For <bpt id="p1">*</bpt>fractional_digits<ept id="p1">*</ept>, only the digit 0 is valid.</source>
          <target state="translated">如<bpt id="p1">*</bpt>fractional_digits<ept id="p1">*</ept>，只為 0 的數字會有效。</target>       </trans-unit>
        <trans-unit id="1502" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source><bpt id="p1">*</bpt>,<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>、<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="1503" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>A culture-specific group separator symbol.</source>
          <target state="translated">特定文化特性的群組分隔符號。</target>       </trans-unit>
        <trans-unit id="1504" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The group separator symbol of the culture specified by <ph id="ph1">`provider`</ph> can appear in <ph id="ph2">`value`</ph> if <ph id="ph3">`style`</ph> includes the <ph id="ph4">&lt;xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">群組分隔符號所指定的文化特性<ph id="ph1">`provider`</ph>可以出現在<ph id="ph2">`value`</ph>如果<ph id="ph3">`style`</ph>包含<ph id="ph4">&lt;xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType&gt;</ph>旗標。</target>       </trans-unit>
        <trans-unit id="1505" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source><bpt id="p1">*</bpt>.<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>.<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="1506" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>A culture-specific decimal point symbol.</source>
          <target state="translated">特定文化特性的小數點符號。</target>       </trans-unit>
        <trans-unit id="1507" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The decimal point symbol of the culture designated by <ph id="ph1">`provider`</ph> can appear in <ph id="ph2">`value`</ph> if <ph id="ph3">`style`</ph> includes the <ph id="ph4">&lt;xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">所指定的文化特性的小數點符號<ph id="ph1">`provider`</ph>可以出現在<ph id="ph2">`value`</ph>如果<ph id="ph3">`style`</ph>包含<ph id="ph4">&lt;xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType&gt;</ph>旗標。</target>       </trans-unit>
        <trans-unit id="1508" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>Only the digit 0 can appear as a fractional digit for the parse operation to succeed; if <bpt id="p1">*</bpt>fractional_digits<ept id="p1">*</ept> includes any other digit, a <ph id="ph1">&lt;xref:System.FormatException&gt;</ph> is thrown.</source>
          <target state="translated">只有數字 0 會顯示為小數位數才能成功;，剖析作業如果<bpt id="p1">*</bpt>fractional_digits<ept id="p1">*</ept>包含任何其他數字、<ph id="ph1">&lt;xref:System.FormatException&gt;</ph>就會擲回。</target>       </trans-unit>
        <trans-unit id="1509" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>E</source>
          <target state="translated">E</target>       </trans-unit>
        <trans-unit id="1510" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The "e" or "E" character, which indicates that the value is represented in exponential (scientific) notation.</source>
          <target state="translated">"E"或者"E"字元，表示此值會表示指數 （科學記號） 表示法。</target>       </trans-unit>
        <trans-unit id="1511" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The <ph id="ph1">`value`</ph> parameter can represent a number in exponential notation if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated"><ph id="ph1">`value`</ph>參數可代表指數標記法之數字，如果<ph id="ph2">`style`</ph>包含<ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType&gt;</ph>旗標。</target>       </trans-unit>
        <trans-unit id="1512" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source><bpt id="p1">*</bpt>hexdigits<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>hexdigits<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="1513" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>A sequence of hexadecimal digits from 0 through f, or 0 through F.</source>
          <target state="translated">從 0 到 f 或 0 到 f 的十六進位數字的序列</target>       </trans-unit>
        <trans-unit id="1514" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>A string with digits only (which corresponds to the <ph id="ph1">&lt;xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType&gt;</ph> style) always parses successfully.</source>
          <target state="translated">只有數字的字串 (對應於<ph id="ph1">&lt;xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType&gt;</ph>樣式) 一律會成功剖析。</target>       </trans-unit>
        <trans-unit id="1515" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>Most of the remaining <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> members control elements that may be present, but are not required to be present, in the input string.</source>
          <target state="translated">在其餘的大部分<ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph>成員控制可能存在，但不一定要出現在輸入字串中的項目。</target>       </trans-unit>
        <trans-unit id="1516" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The following table indicates how individual <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> members affect the elements that may be present in <ph id="ph2">`value`</ph>.</source>
          <target state="translated">下表指出如何個別<ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph>成員會影響的項目可能會出現在<ph id="ph2">`value`</ph>。</target>       </trans-unit>
        <trans-unit id="1517" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>NumberStyles value</source>
          <target state="translated">NumberStyles 值</target>       </trans-unit>
        <trans-unit id="1518" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>Elements permitted in value in addition to digits</source>
          <target state="translated">除了數字的值中允許的項目</target>       </trans-unit>
        <trans-unit id="1519" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The <bpt id="p1">*</bpt>digits<ept id="p1">*</ept> element only.</source>
          <target state="translated"><bpt id="p1">*</bpt>位數<ept id="p1">*</ept>只有項目。</target>       </trans-unit>
        <trans-unit id="1520" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The decimal point (.) and <bpt id="p1">*</bpt>fractional-digits<ept id="p1">*</ept> elements.</source>
          <target state="translated">小數點 （.） 和<bpt id="p1">*</bpt>小數點後數字<ept id="p1">*</ept>項目。</target>       </trans-unit>
        <trans-unit id="1521" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The "e" or "E" character, which indicates exponential notation.</source>
          <target state="translated">"E"或者"E"字元，表示指數標記法中。</target>       </trans-unit>
        <trans-unit id="1522" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>along with <bpt id="p1">*</bpt>exponential_digits<ept id="p1">*</ept>.</source>
          <target state="translated">連同<bpt id="p1">*</bpt>exponential_digits<ept id="p1">*</ept>。</target>       </trans-unit>
        <trans-unit id="1523" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The <bpt id="p1">*</bpt>ws<ept id="p1">*</ept> element at the start of <ph id="ph1">`value`</ph>.</source>
          <target state="translated"><bpt id="p1">*</bpt>Ws<ept id="p1">*</ept>開頭的項目<ph id="ph1">`value`</ph>。</target>       </trans-unit>
        <trans-unit id="1524" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The <bpt id="p1">*</bpt>ws<ept id="p1">*</ept> element at the end of <ph id="ph1">`value`</ph>.</source>
          <target state="translated"><bpt id="p1">*</bpt>Ws<ept id="p1">*</ept>結尾處的項目<ph id="ph1">`value`</ph>。</target>       </trans-unit>
        <trans-unit id="1525" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The <bpt id="p1">*</bpt>sign<ept id="p1">*</ept> element at the start of <ph id="ph1">`value`</ph>.</source>
          <target state="translated"><bpt id="p1">*</bpt>登<ept id="p1">*</ept>開頭的項目<ph id="ph1">`value`</ph>。</target>       </trans-unit>
        <trans-unit id="1526" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The <bpt id="p1">*</bpt>sign<ept id="p1">*</ept> element at the end of <ph id="ph1">`value`</ph>.</source>
          <target state="translated"><bpt id="p1">*</bpt>登<ept id="p1">*</ept>結尾處的項目<ph id="ph1">`value`</ph>。</target>       </trans-unit>
        <trans-unit id="1527" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The <bpt id="p1">*</bpt>sign<ept id="p1">*</ept> element in the form of parentheses enclosing the numeric value.</source>
          <target state="translated"><bpt id="p1">*</bpt>登<ept id="p1">*</ept>括住的數字值的形式的項目。</target>       </trans-unit>
        <trans-unit id="1528" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The group separator (,) element.</source>
          <target state="translated">群組分隔符號 （，） 項目。</target>       </trans-unit>
        <trans-unit id="1529" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The currency ($) element.</source>
          <target state="translated">貨幣 （$） 項目。</target>       </trans-unit>
        <trans-unit id="1530" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>All elements.</source>
          <target state="translated">所有項目。</target>       </trans-unit>
        <trans-unit id="1531" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>However, <ph id="ph1">`value`</ph> cannot represent a hexadecimal number or a number in exponential notation.</source>
          <target state="translated">不過，<ph id="ph1">`value`</ph>無法表示的十六進位數字或指數標記法之數字。</target>       </trans-unit>
        <trans-unit id="1532" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The <bpt id="p1">*</bpt>ws<ept id="p1">*</ept> element at the start or end of <ph id="ph1">`value`</ph>, <bpt id="p2">*</bpt>sign<ept id="p2">*</ept> at the start of <ph id="ph2">`value`</ph>, and the decimal point (.) symbol.</source>
          <target state="translated"><bpt id="p1">*</bpt>Ws<ept id="p1">*</ept>開頭或結尾的項目<ph id="ph1">`value`</ph>，<bpt id="p2">*</bpt>登<ept id="p2">*</ept>開頭<ph id="ph2">`value`</ph>，和小數點 （.） 符號。</target>       </trans-unit>
        <trans-unit id="1533" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The <ph id="ph1">`value`</ph> parameter can also use exponential notation.</source>
          <target state="translated"><ph id="ph1">`value`</ph>參數也可以使用指數標記法。</target>       </trans-unit>
        <trans-unit id="1534" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The <ph id="ph1">`ws`</ph>, <ph id="ph2">`sign`</ph>, group separator (,), and decimal point (.) elements.</source>
          <target state="translated"><ph id="ph1">`ws`</ph>， <ph id="ph2">`sign`</ph>、 群組分隔符號 （，） 和小數點 （.） 項目。</target>       </trans-unit>
        <trans-unit id="1535" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>All elements.</source>
          <target state="translated">所有項目。</target>       </trans-unit>
        <trans-unit id="1536" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>However, <ph id="ph1">`value`</ph> cannot represent a hexadecimal number.</source>
          <target state="translated">不過，<ph id="ph1">`value`</ph>無法表示的十六進位數字。</target>       </trans-unit>
        <trans-unit id="1537" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>If you use the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Parse%2A&gt;</ph> method to round-trip the string representation of a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value that was output by the <ph id="ph3">&lt;xref:System.Numerics.BigInteger.ToString%2A&gt;</ph> method, you should use the <ph id="ph4">&lt;xref:System.Numerics.BigInteger.ToString%28System.String%29?displayProperty=nameWithType&gt;</ph> method with the "R" format specifier to generate the string representation of the <ph id="ph5">&lt;xref:System.Numerics.BigInteger&gt;</ph> value.</source>
          <target state="translated">如果您使用<ph id="ph1">&lt;xref:System.Numerics.BigInteger.Parse%2A&gt;</ph>方法，以往返的字串表示的<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>所輸出的值<ph id="ph3">&lt;xref:System.Numerics.BigInteger.ToString%2A&gt;</ph>方法，您應該使用<ph id="ph4">&lt;xref:System.Numerics.BigInteger.ToString%28System.String%29?displayProperty=nameWithType&gt;</ph>使用"R"格式規範產生的字串表示的方法<ph id="ph5">&lt;xref:System.Numerics.BigInteger&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="1538" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>Otherwise, the string representation of the <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> preserves only the 50 most significant digits of the original value, and data may be lost when you use the <ph id="ph2">&lt;xref:System.Numerics.BigInteger.Parse%2A&gt;</ph> method to restore the <ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph> value.</source>
          <target state="translated">否則的字串表示<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>50 大部分的有效位數的資料與原始值，可能會遺失使用時只會保留<ph id="ph2">&lt;xref:System.Numerics.BigInteger.Parse%2A&gt;</ph>方法還原<ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="1539" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>Unlike the other <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> values, which allow for but do not require the presence of particular style elements in <ph id="ph2">`value`</ph>, the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType&gt;</ph> style value means that the individual numeric characters in <ph id="ph4">`value`</ph> are always interpreted as hexadecimal characters.</source>
          <target state="translated">不同於其他<ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph>的值，因此允許但不是需要特定樣式中的項目是否存在<ph id="ph2">`value`</ph>、<ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType&gt;</ph>樣式值表示，在個別的數字字元<ph id="ph4">`value`</ph>一律解譯為十六進位字元。</target>       </trans-unit>
        <trans-unit id="1540" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>Valid hexadecimal characters are 0-9, A-F, and a-f.</source>
          <target state="translated">有效的十六進位字元為 0-9、 A-F 和 a-f。</target>       </trans-unit>
        <trans-unit id="1541" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The only other flags that can be combined with the <ph id="ph1">`style`</ph> parameter are <ph id="ph2">&lt;xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType&gt;</ph> and <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">只有其他旗標可以結合<ph id="ph1">`style`</ph>參數<ph id="ph2">&lt;xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType&gt;</ph>和<ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1542" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>(The <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> enumeration includes a composite number style, <ph id="ph2">&lt;xref:System.Globalization.NumberStyles.HexNumber&gt;</ph>, that includes both white-space flags.)</source>
          <target state="translated">(<ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph>列舉會包含複合的數字樣式<ph id="ph2">&lt;xref:System.Globalization.NumberStyles.HexNumber&gt;</ph>，其中包含這兩個空格旗標。)</target>       </trans-unit>
        <trans-unit id="1543" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>If <ph id="ph1">`value`</ph> is the string representation of a hexadecimal number, it cannot be preceded by any decoration (such as <ph id="ph2">`0x`</ph> or <ph id="ph3">`&amp;h`</ph>) that differentiates it as a hexadecimal number.</source>
          <target state="translated">如果<ph id="ph1">`value`</ph>的字串表示法的十六進位數字，它無法前面的任何裝飾 (例如<ph id="ph2">`0x`</ph>或<ph id="ph3">`&amp;h`</ph>)，區隔其十六進位數字。</target>       </trans-unit>
        <trans-unit id="1544" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>This causes the conversion to fail.</source>
          <target state="translated">這會導致轉換失敗。</target>       </trans-unit>
        <trans-unit id="1545" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>If <ph id="ph1">`value`</ph> is a hexadecimal string, the <ph id="ph2">&lt;xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%29&gt;</ph> method interprets <ph id="ph3">`value`</ph> as a negative number stored by using two's complement representation if its first two hexadecimal digits are greater than or equal to <ph id="ph4">`0x80`</ph>.</source>
          <target state="translated">如果<ph id="ph1">`value`</ph>為十六進位的字串，<ph id="ph2">&lt;xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%29&gt;</ph>方法解譯<ph id="ph3">`value`</ph>負數儲存使用二的補數表示，如果其前兩個十六進位數字會大於或等於<ph id="ph4">`0x80`</ph>。</target>       </trans-unit>
        <trans-unit id="1546" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>In other words, the method interprets the highest-order bit of the first byte in <ph id="ph1">`value`</ph> as the sign bit.</source>
          <target state="translated">換句話說，方法會解譯中的第一個位元組的最高序位位元<ph id="ph1">`value`</ph>做為正負號位元。</target>       </trans-unit>
        <trans-unit id="1547" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>To make sure that a hexadecimal string is correctly interpreted as a positive number, the first digit in <ph id="ph1">`value`</ph> must have a value of zero.</source>
          <target state="translated">若要確定為十六進位字串已正確解譯為正數中的第一個數字<ph id="ph1">`value`</ph>必須具有值為零。</target>       </trans-unit>
        <trans-unit id="1548" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>For example, the method interprets <ph id="ph1">`0x80`</ph> as a negative value, but it interprets either <ph id="ph2">`0x080`</ph> or <ph id="ph3">`0x0080`</ph> as a positive value.</source>
          <target state="translated">例如，方法會將解譯<ph id="ph1">`0x80`</ph>為負值，但是它會解譯 <ph id="ph2">`0x080`</ph>或<ph id="ph3">`0x0080`</ph>為正值。</target>       </trans-unit>
        <trans-unit id="1549" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The following example illustrates the difference between hexadecimal strings that represent negative and positive values.</source>
          <target state="translated">下列範例說明代表及負數值的十六進位字串之間的差異。</target>       </trans-unit>
        <trans-unit id="1550" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The <ph id="ph1">`provider`</ph> parameter is an <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> implementation.</source>
          <target state="translated"><ph id="ph1">`provider`</ph>參數是<ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph>實作。</target>       </trans-unit>
        <trans-unit id="1551" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>Its <ph id="ph1">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> method returns a <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that provides culture-specific information about the format of <ph id="ph3">`value`</ph>.</source>
          <target state="translated">其<ph id="ph1">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph>方法會傳回<ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>物件，提供特定文化特性格式資訊<ph id="ph3">`value`</ph>。</target>       </trans-unit>
        <trans-unit id="1552" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>Typically, <ph id="ph1">`provider`</ph> can be any one of the following:</source>
          <target state="translated">一般而言，<ph id="ph1">`provider`</ph>可以是下列其中一個：</target>       </trans-unit>
        <trans-unit id="1553" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>A <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object that represents the culture that provides numeric formatting information.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph>代表提供數值格式設定資訊的文化特性的物件。</target>       </trans-unit>
        <trans-unit id="1554" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>Its <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.GetFormat%2A&gt;</ph> method returns the <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that provides numeric formatting information.</source>
          <target state="translated">其<ph id="ph1">&lt;xref:System.Globalization.CultureInfo.GetFormat%2A&gt;</ph>方法會傳回<ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>提供數值格式設定資訊的物件。</target>       </trans-unit>
        <trans-unit id="1555" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>A <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that provides formatting information.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>提供格式設定資訊的物件。</target>       </trans-unit>
        <trans-unit id="1556" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>(Its implementation of <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.GetFormat%2A&gt;</ph> just returns itself.)</source>
          <target state="translated">(它的實作<ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.GetFormat%2A&gt;</ph>只會傳回本身。)</target>       </trans-unit>
        <trans-unit id="1557" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>A custom object that implements <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> and uses the <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.GetFormat%2A&gt;</ph> method to instantiate and return the <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that provides formatting information.</source>
          <target state="translated">自訂物件實作<ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph>並用<ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.GetFormat%2A&gt;</ph>方法來具現化，並傳回<ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>提供格式設定資訊的物件。</target>       </trans-unit>
        <trans-unit id="1558" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>If <ph id="ph1">`provider`</ph> is <ph id="ph2">`null`</ph>, the <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object for the current culture is used.</source>
          <target state="translated">如果<ph id="ph1">`provider`</ph>是<ph id="ph2">`null`</ph>、<ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>物件會使用目前文化特性。</target>       </trans-unit>
        <trans-unit id="1559" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The following example makes several calls to the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29&gt;</ph> method using various combinations of values for the <ph id="ph2">`style`</ph> and <ph id="ph3">`provider`</ph> parameters.</source>
          <target state="translated">下列範例使數個呼叫<ph id="ph1">&lt;xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29&gt;</ph>方法使用不同的值組合<ph id="ph2">`style`</ph>和<ph id="ph3">`provider`</ph>參數。</target>       </trans-unit>
        <trans-unit id="1560" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>A number of the individual calls to the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29&gt;</ph> method pass an instance of the following <ph id="ph2">`BigIntegerFormatProvider`</ph> class, which defines a tilde (~) as the negative sign.</source>
          <target state="translated">個別呼叫程序數<ph id="ph1">&lt;xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29&gt;</ph>方法傳遞執行個體的下列<ph id="ph2">`BigIntegerFormatProvider`</ph>類別，定義為負號波狀符號 （~）。</target>       </trans-unit>
        <trans-unit id="1561" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="style" /&gt;</ph> is not a <ph id="ph2">&lt;see cref="T:System.Globalization.NumberStyles" /&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="style" /&gt;</ph> 不是 <ph id="ph2">&lt;see cref="T:System.Globalization.NumberStyles" /&gt;</ph> 值。</target>       </trans-unit>
        <trans-unit id="1562" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="1563" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="style" /&gt;</ph> includes the <ph id="ph2">&lt;see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /&gt;</ph> or <ph id="ph3">&lt;see cref="F:System.Globalization.NumberStyles.HexNumber" /&gt;</ph> flag along with another value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="style" /&gt;</ph> 包含 <ph id="ph2">&lt;see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /&gt;</ph> 或 <ph id="ph3">&lt;see cref="F:System.Globalization.NumberStyles.HexNumber" /&gt;</ph> 旗標和其他值。</target>       </trans-unit>
        <trans-unit id="1564" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1565" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> does not comply with the input pattern specified by <ph id="ph2">&lt;paramref name="style" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> 不符合由 <ph id="ph2">&lt;paramref name="style" /&gt;</ph> 所指定的輸入模式。</target>       </trans-unit>
        <trans-unit id="1566" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Pow(System.Numerics.BigInteger,System.Int32)">
          <source>The number to raise to the <bpt id="p1">&lt;c&gt;</bpt>exponent<ept id="p1">&lt;/c&gt;</ept> power.</source>
          <target state="translated">具有 <bpt id="p1">&lt;c&gt;</bpt>指數<ept id="p1">&lt;/c&gt;</ept> 乘冪數的數字。</target>       </trans-unit>
        <trans-unit id="1567" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Pow(System.Numerics.BigInteger,System.Int32)">
          <source>The exponent to raise <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> by.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>值<ept id="p1">&lt;/c&gt;</ept> 的乘冪指數。</target>       </trans-unit>
        <trans-unit id="1568" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Pow(System.Numerics.BigInteger,System.Int32)">
          <source>Raises a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value to the power of a specified value.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 值自乘至指定之值的乘冪。</target>       </trans-unit>
        <trans-unit id="1569" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Pow(System.Numerics.BigInteger,System.Int32)">
          <source>The result of raising <ph id="ph1">&lt;paramref name="value" /&gt;</ph> to the <ph id="ph2">&lt;paramref name="exponent" /&gt;</ph> power.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> 自乘至 <ph id="ph2">&lt;paramref name="exponent" /&gt;</ph> 乘冪的結果。</target>       </trans-unit>
        <trans-unit id="1570" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Pow(System.Numerics.BigInteger,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Pow%2A&gt;</ph> method returns 1 if the value of the exponent parameter is 0, or if the values of both the <ph id="ph2">`value`</ph> and <ph id="ph3">`exponent`</ph> parameters are 0.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.Pow%2A&gt;</ph>方法會傳回 1，如果指數的參數的值為 0，或兩者的值<ph id="ph2">`value`</ph>和<ph id="ph3">`exponent`</ph>參數是 0。</target>       </trans-unit>
        <trans-unit id="1571" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Pow(System.Numerics.BigInteger,System.Int32)">
          <source>If <ph id="ph1">`exponent`</ph> is 1, the <ph id="ph2">&lt;xref:System.Numerics.BigInteger.Pow%2A&gt;</ph> method returns <ph id="ph3">`value`</ph>.</source>
          <target state="translated">如果<ph id="ph1">`exponent`</ph>為 1，<ph id="ph2">&lt;xref:System.Numerics.BigInteger.Pow%2A&gt;</ph>方法會傳回<ph id="ph3">`value`</ph>。</target>       </trans-unit>
        <trans-unit id="1572" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Pow(System.Numerics.BigInteger,System.Int32)">
          <source>If <ph id="ph1">`value`</ph> is negative, the method returns a negative result.</source>
          <target state="translated">如果<ph id="ph1">`value`</ph>是負數，此方法會傳回負的結果。</target>       </trans-unit>
        <trans-unit id="1573" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Pow(System.Numerics.BigInteger,System.Int32)">
          <source>This method corresponds to the <ph id="ph1">&lt;xref:System.Math.Pow%2A?displayProperty=nameWithType&gt;</ph> method for primitive numeric types.</source>
          <target state="translated">這個方法會對應至<ph id="ph1">&lt;xref:System.Math.Pow%2A?displayProperty=nameWithType&gt;</ph>基本數值類型的方法。</target>       </trans-unit>
        <trans-unit id="1574" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Pow(System.Numerics.BigInteger,System.Int32)">
          <source>The following example illustrates exponentiation using a <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> value and an exponent whose value ranges from 0 to 10.</source>
          <target state="translated">下列範例說明使用乘冪<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>值和其值範圍從 0 到 10 的指數。</target>       </trans-unit>
        <trans-unit id="1575" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Pow(System.Numerics.BigInteger,System.Int32)">
          <source>The value of the <ph id="ph1">&lt;paramref name="exponent" /&gt;</ph> parameter is negative.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="exponent" /&gt;</ph> 參數的值是負數。</target>       </trans-unit>
        <trans-unit id="1576" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Remainder(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The value to be divided.</source>
          <target state="translated">做為被除數的值。</target>       </trans-unit>
        <trans-unit id="1577" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Remainder(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The value to divide by.</source>
          <target state="translated">做為除數的值。</target>       </trans-unit>
        <trans-unit id="1578" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Remainder(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Performs integer division on two <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> values and returns the remainder.</source>
          <target state="translated">對兩個 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 值執行整數除法運算，並傳回餘數。</target>       </trans-unit>
        <trans-unit id="1579" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Remainder(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The remainder after dividing <ph id="ph1">&lt;paramref name="dividend" /&gt;</ph> by <ph id="ph2">&lt;paramref name="divisor" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="dividend" /&gt;</ph> 除以 <ph id="ph2">&lt;paramref name="divisor" /&gt;</ph> 後的餘數。</target>       </trans-unit>
        <trans-unit id="1580" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Remainder(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The sign of the remainder is the sign of the <ph id="ph1">`dividend`</ph> parameter.</source>
          <target state="translated">餘數的正負號不正負號的<ph id="ph1">`dividend`</ph>參數。</target>       </trans-unit>
        <trans-unit id="1581" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Remainder(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Remainder%2A&gt;</ph> method is implemented for languages that do not support custom operators.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.Remainder%2A&gt;</ph>方法實作不支援自訂運算子的語言。</target>       </trans-unit>
        <trans-unit id="1582" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Remainder(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Its behavior is identical to division using the modulus operator.</source>
          <target state="translated">其行為等同於使用模數運算子的除法。</target>       </trans-unit>
        <trans-unit id="1583" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Remainder(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>If necessary, the method automatically performs implicit conversion of other integral types to <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> objects before it performs the modulus operation.</source>
          <target state="translated">如果有必要，方法會自動執行以其他整數類資料類型的隱含轉換<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>物件執行模數作業之前。</target>       </trans-unit>
        <trans-unit id="1584" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Remainder(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The following example compares the remainder from the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.DivRem%2A&gt;</ph> method with the remainder returned by the <ph id="ph2">&lt;xref:System.Numerics.BigInteger.Remainder%2A&gt;</ph> method to establish that the two methods calculate identical remainders.</source>
          <target state="translated">下列範例會比較從餘數<ph id="ph1">&lt;xref:System.Numerics.BigInteger.DivRem%2A&gt;</ph>方法所傳回的其餘部分<ph id="ph2">&lt;xref:System.Numerics.BigInteger.Remainder%2A&gt;</ph>方法，以建立兩個方法計算相同的餘數。</target>       </trans-unit>
        <trans-unit id="1585" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Remainder(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source><ph id="ph1">&lt;paramref name="divisor" /&gt;</ph> is 0 (zero).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="divisor" /&gt;</ph> 是 0 (零)。</target>       </trans-unit>
        <trans-unit id="1586" translate="yes" xml:space="preserve" uid="P:System.Numerics.BigInteger.Sign">
          <source>Gets a number that indicates the sign (negative, positive, or zero) of the current <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> object.</source>
          <target state="translated">取得數字，這個數字表示目前 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 物件的正負號 (負數、正數或零)。</target>       </trans-unit>
        <trans-unit id="1587" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.BigInteger.Sign">
          <source>A number that indicates the sign of the <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> object, as shown in the following table.</source>
          <target state="translated">數字，表示 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 物件的正負號，如下表所示。</target>       </trans-unit>
        <trans-unit id="1588" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.BigInteger.Sign">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Number</source>
          <target state="translated"><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> 數字</target>       </trans-unit>
        <trans-unit id="1589" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.BigInteger.Sign">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Description</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 描述</target>       </trans-unit>
        <trans-unit id="1590" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.BigInteger.Sign">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> -1</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> -1</target>       </trans-unit>
        <trans-unit id="1591" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.BigInteger.Sign">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> The value of this object is negative.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 此物件的值為負數。</target>       </trans-unit>
        <trans-unit id="1592" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.BigInteger.Sign">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 0</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 0</target>       </trans-unit>
        <trans-unit id="1593" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.BigInteger.Sign">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> The value of this object is 0 (zero).</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 此物件的值為 0 （零）。</target>       </trans-unit>
        <trans-unit id="1594" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.BigInteger.Sign">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 1</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 1</target>       </trans-unit>
        <trans-unit id="1595" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.BigInteger.Sign">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> The value of this object is positive.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 此物件的值為正數。</target>       </trans-unit>
        <trans-unit id="1596" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.BigInteger.Sign">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Sign%2A&gt;</ph> property is equivalent to the <ph id="ph2">&lt;xref:System.Math.Sign%2A?displayProperty=nameWithType&gt;</ph> method for the primitive numeric types.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.Sign%2A&gt;</ph>屬性就相當於<ph id="ph2">&lt;xref:System.Math.Sign%2A?displayProperty=nameWithType&gt;</ph>基本數值類型的方法。</target>       </trans-unit>
        <trans-unit id="1597" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Subtract(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The value to subtract from (the minuend).</source>
          <target state="translated">要被減的值 (被減數)。</target>       </trans-unit>
        <trans-unit id="1598" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Subtract(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The value to subtract (the subtrahend).</source>
          <target state="translated">要減去的值 (減數)。</target>       </trans-unit>
        <trans-unit id="1599" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Subtract(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Subtracts one <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value from another and returns the result.</source>
          <target state="translated">某個 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 值減去另一個值，並且傳回結果。</target>       </trans-unit>
        <trans-unit id="1600" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.Subtract(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The result of subtracting <ph id="ph1">&lt;paramref name="right" /&gt;</ph> from <ph id="ph2">&lt;paramref name="left" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="right" /&gt;</ph> 減去 <ph id="ph2">&lt;paramref name="left" /&gt;</ph> 的結果。</target>       </trans-unit>
        <trans-unit id="1601" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Subtract(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>Languages that do not support custom operators can use the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Subtract%2A&gt;</ph> method to perform subtraction using <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> values.</source>
          <target state="translated">不支援自訂運算子的語言可以使用<ph id="ph1">&lt;xref:System.Numerics.BigInteger.Subtract%2A&gt;</ph>方法，以執行使用減法<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="1602" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.Subtract(System.Numerics.BigInteger,System.Numerics.BigInteger)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Subtract%2A&gt;</ph> method is a useful substitute for the subtraction operator when instantiating a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> variable by assigning it the difference that results from subtraction, as shown in the following example.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.Subtract%2A&gt;</ph>方法在具現化時，減法運算子的實用替代方案<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>變數指派的差異而產生的減法運算，如下列範例所示。</target>       </trans-unit>
        <trans-unit id="1603" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.ToByteArray">
          <source>Converts a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value to a byte array.</source>
          <target state="translated">將 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 值轉換成位元組陣列。</target>       </trans-unit>
        <trans-unit id="1604" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.ToByteArray">
          <source>The value of the current <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> object converted to an array of bytes.</source>
          <target state="translated">目前 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 物件的值，已轉換為位元組陣列。</target>       </trans-unit>
        <trans-unit id="1605" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToByteArray">
          <source>The individual bytes in the array returned by this method appear in little-endian order.</source>
          <target state="translated">這個方法所傳回陣列中個別的位元組由小到大順序顯示。</target>       </trans-unit>
        <trans-unit id="1606" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToByteArray">
          <source>That is, the lower-order bytes of the value precede the higher-order bytes.</source>
          <target state="translated">也就是值的低序位位元組前面的高序位位元組。</target>       </trans-unit>
        <trans-unit id="1607" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToByteArray">
          <source>The first byte of the array reflects the first eight bits of the <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> value, the second byte reflects the next eight bits, and so on.</source>
          <target state="translated">陣列的第一個位元組會反映第一個八個位元<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>第二個位元組的值，反映出下一個 8 位元，依此類推。</target>       </trans-unit>
        <trans-unit id="1608" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToByteArray">
          <source>For example, the value 1024, or 0x0400, is stored as the following array of two bytes:</source>
          <target state="translated">例如，值為 1024年或 0x0400，儲存為下列兩個位元組的陣列：</target>       </trans-unit>
        <trans-unit id="1609" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToByteArray">
          <source>Element</source>
          <target state="translated">元素</target>       </trans-unit>
        <trans-unit id="1610" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToByteArray">
          <source>Byte value</source>
          <target state="translated">位元組值</target>       </trans-unit>
        <trans-unit id="1611" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToByteArray">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="1612" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToByteArray">
          <source>0x00</source>
          <target state="translated">0x00</target>       </trans-unit>
        <trans-unit id="1613" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToByteArray">
          <source>1</source>
          <target state="translated">1</target>       </trans-unit>
        <trans-unit id="1614" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToByteArray">
          <source>0x04</source>
          <target state="translated">0x04</target>       </trans-unit>
        <trans-unit id="1615" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToByteArray">
          <source>Negative values are written to the array using two's complement representation in the most compact form possible.</source>
          <target state="translated">負值會寫入陣列中最精簡的格式可能使用二的補數表示法。</target>       </trans-unit>
        <trans-unit id="1616" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToByteArray">
          <source>For example, -1 is represented as a single byte whose value is <ph id="ph1">`0xFF`</ph> instead of as an array with multiple elements, such as <ph id="ph2">`0xFF`</ph>, <ph id="ph3">`0xFF`</ph> or <ph id="ph4">`0xFF`</ph>, <ph id="ph5">`0xFF`</ph>, <ph id="ph6">`0xFF`</ph>, <ph id="ph7">`0xFF`</ph>.</source>
          <target state="translated">例如，-1 表示做為其值是單一位元組<ph id="ph1">`0xFF`</ph>而不是做為陣列具有多個元素，例如<ph id="ph2">`0xFF`</ph>，<ph id="ph3">`0xFF`</ph>或<ph id="ph4">`0xFF`</ph>， <ph id="ph5">`0xFF`</ph>， <ph id="ph6">`0xFF`</ph>， <ph id="ph7">`0xFF`</ph>。</target>       </trans-unit>
        <trans-unit id="1617" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToByteArray">
          <source>Because two's complement representation always interprets the highest-order bit of the last byte in the array (the byte at position <ph id="ph1">&lt;xref:System.Array.Length%2A?displayProperty=nameWithType&gt;</ph><ph id="ph2">`- 1`</ph>) as the sign bit, the method returns a byte array with an extra element whose value is zero to disambiguate positive values that could otherwise be interpreted as having their sign bits set.</source>
          <target state="translated">因為兩個互補表示一律解譯陣列中的最後一個位元組的最高序位位元 (位於位元組<ph id="ph1">&lt;xref:System.Array.Length%2A?displayProperty=nameWithType&gt;</ph> <ph id="ph2">`- 1`</ph>) 做為正負號位元，方法會傳回額外的項目，其值為零的位元組陣列至釐清正值，否則無法解譯為具有其正負號位元都設定。</target>       </trans-unit>
        <trans-unit id="1618" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToByteArray">
          <source>For example, the value 120 or <ph id="ph1">`0x78`</ph> is represented as a single-byte array: <ph id="ph2">`0x78`</ph>.</source>
          <target state="translated">例如，值 120 或<ph id="ph1">`0x78`</ph>以單一位元組陣列： <ph id="ph2">`0x78`</ph>。</target>       </trans-unit>
        <trans-unit id="1619" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToByteArray">
          <source>However, 128, or <ph id="ph1">`0x80`</ph>, is represented as a two-byte array: <ph id="ph2">`0x80`</ph>, <ph id="ph3">`0x00`</ph>.</source>
          <target state="translated">不過，128，或<ph id="ph1">`0x80`</ph>，以雙位元組陣列： <ph id="ph2">`0x80`</ph>， <ph id="ph3">`0x00`</ph>。</target>       </trans-unit>
        <trans-unit id="1620" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToByteArray">
          <source>You can round-trip a <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> value by storing it to a byte array and then restoring it using the <ph id="ph2">&lt;xref:System.Numerics.BigInteger.%23ctor%28System.Byte%5B%5D%29&gt;</ph> constructor.</source>
          <target state="translated">您可以來回<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>值儲存為位元組陣列，然後將加以使用還原<ph id="ph2">&lt;xref:System.Numerics.BigInteger.%23ctor%28System.Byte%5B%5D%29&gt;</ph>建構函式。</target>       </trans-unit>
        <trans-unit id="1621" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToByteArray">
          <source>If your code modifies the value of individual bytes in the array returned by this method before it restores the value, you must make sure that you do not unintentionally change the sign bit.</source>
          <target state="translated">如果您的程式碼修改的還原值之前，這個方法所傳回陣列中的個別位元組值，您必須確定您沒有不小心變更正負號位元。</target>       </trans-unit>
        <trans-unit id="1622" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToByteArray">
          <source>For example, if your modifications increase a positive value so that the highest-order bit in the last element of the byte array becomes set, you can add a new byte whose value is zero to the end of the array.</source>
          <target state="translated">例如，如果您的修改增加正數值，最高序位位元的位元組陣列的最後一個項目中會變成設定，您可以加入新的其值為陣列結尾的零位元組。</target>       </trans-unit>
        <trans-unit id="1623" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToByteArray">
          <source>The following example illustrates how some <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> values are represented in byte arrays.</source>
          <target state="translated">下列範例會說明一些<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>值都表示位元組陣列。</target>       </trans-unit>
        <trans-unit id="1624" translate="yes" xml:space="preserve" uid="T:System.Numerics.BigInteger">
          <source>Converts the numeric value of the current <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> object to its equivalent string representation.</source>
          <target state="translated">將目前 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 物件的數值，轉換為其相等的字串表示。</target>       </trans-unit>
        <trans-unit id="1625" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.ToString">
          <source>Converts the numeric value of the current <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> object to its equivalent string representation.</source>
          <target state="translated">將目前 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 物件的數值，轉換為其相等的字串表示。</target>       </trans-unit>
        <trans-unit id="1626" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.ToString">
          <source>The string representation of the current <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value.</source>
          <target state="translated">目前 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 值的字串表示。</target>       </trans-unit>
        <trans-unit id="1627" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.ToString&gt;</ph> method formats a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value in the "R", or round-trip, format of the current culture.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.ToString&gt;</ph>方法格式<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>"R"或往返，目前的文化特性的格式中的值。</target>       </trans-unit>
        <trans-unit id="1628" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString">
          <source>If you want to specify a different format or culture, use the other overloads of the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.ToString%2A&gt;</ph> method, as follows:</source>
          <target state="translated">如果您想要指定不同的格式或文化特性，使用的其他多載<ph id="ph1">&lt;xref:System.Numerics.BigInteger.ToString%2A&gt;</ph>方法，如下所示：</target>       </trans-unit>
        <trans-unit id="1629" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString">
          <source>To use format</source>
          <target state="translated">若要使用格式</target>       </trans-unit>
        <trans-unit id="1630" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString">
          <source>For culture</source>
          <target state="translated">文化特性</target>       </trans-unit>
        <trans-unit id="1631" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString">
          <source>Use the overload</source>
          <target state="translated">使用的多載</target>       </trans-unit>
        <trans-unit id="1632" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString">
          <source>Round-trip ("R") format</source>
          <target state="translated">Round-trip ("R") 格式</target>       </trans-unit>
        <trans-unit id="1633" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString">
          <source>A specific culture</source>
          <target state="translated">特定文化特性</target>       </trans-unit>
        <trans-unit id="1634" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString">
          <source>A specific format</source>
          <target state="translated">以特定格式</target>       </trans-unit>
        <trans-unit id="1635" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString">
          <source>Default (current) culture</source>
          <target state="translated">預設值 （目前） 的文化特性</target>       </trans-unit>
        <trans-unit id="1636" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString">
          <source>A specific format</source>
          <target state="translated">以特定格式</target>       </trans-unit>
        <trans-unit id="1637" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString">
          <source>A specific culture</source>
          <target state="translated">特定文化特性</target>       </trans-unit>
        <trans-unit id="1638" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString">
          <source>The string representation of the <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> value includes a negative sign if its value is negative, and a sequence of digits ranging from 0 to 9 without leading zeros.</source>
          <target state="translated">字串表示<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>值包含負號，如果其值為負數，且範圍從 0 到 9 開頭沒有零的數字的序列。</target>       </trans-unit>
        <trans-unit id="1639" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString">
          <source>The negative sign is defined by the <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object for the current culture.</source>
          <target state="translated">定義負號<ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>目前的文化特性的物件。</target>       </trans-unit>
        <trans-unit id="1640" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString">
          <source>The following example displays a <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> value by using the default <ph id="ph2">&lt;xref:System.Numerics.BigInteger.ToString&gt;</ph> method.</source>
          <target state="translated">下列範例會顯示<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>使用預設值<ph id="ph2">&lt;xref:System.Numerics.BigInteger.ToString&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="1641" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString">
          <source>It also displays the string representations of the <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> value that results from using some standard format specifiers.</source>
          <target state="translated">它也會顯示的字串表示<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>使用某些標準格式規範產生的值。</target>       </trans-unit>
        <trans-unit id="1642" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString">
          <source>The examples are displayed using the formatting conventions of the en-US culture.</source>
          <target state="translated">使用 EN-US 文化特性的格式化慣例來顯示範例。</target>       </trans-unit>
        <trans-unit id="1643" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.ToString(System.IFormatProvider)">
          <source>An object that supplies culture-specific formatting information.</source>
          <target state="translated">物件，提供特定文化特性格式資訊。</target>       </trans-unit>
        <trans-unit id="1644" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.ToString(System.IFormatProvider)">
          <source>Converts the numeric value of the current <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> object to its equivalent string representation by using the specified culture-specific formatting information.</source>
          <target state="translated">使用指定的文化特性特定格式資訊，將目前 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 物件的數值轉換為其對等字串表示。</target>       </trans-unit>
        <trans-unit id="1645" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.ToString(System.IFormatProvider)">
          <source>The string representation of the current <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value in the format specified by the <ph id="ph2">&lt;paramref name="provider" /&gt;</ph> parameter.</source>
          <target state="translated">目前 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 值的字串表示，採用 <ph id="ph2">&lt;paramref name="provider" /&gt;</ph> 參數所指定的格式。</target>       </trans-unit>
        <trans-unit id="1646" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.IFormatProvider)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.ToString%28System.IFormatProvider%29&gt;</ph> method formats a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value in the "R", or round-trip, format by using the <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object of a specified culture.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.ToString%28System.IFormatProvider%29&gt;</ph>方法格式<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>值中的"R"或往返，使用格式化<ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>指定文化特性的物件。</target>       </trans-unit>
        <trans-unit id="1647" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.IFormatProvider)">
          <source>If you want to specify a different format or the current culture, use the other overloads of the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.ToString%2A&gt;</ph> method, as follows:</source>
          <target state="translated">如果您想要指定不同的格式或目前的文化特性，使用的其他多載<ph id="ph1">&lt;xref:System.Numerics.BigInteger.ToString%2A&gt;</ph>方法，如下所示：</target>       </trans-unit>
        <trans-unit id="1648" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.IFormatProvider)">
          <source>To use format</source>
          <target state="translated">若要使用格式</target>       </trans-unit>
        <trans-unit id="1649" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.IFormatProvider)">
          <source>For culture</source>
          <target state="translated">文化特性</target>       </trans-unit>
        <trans-unit id="1650" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.IFormatProvider)">
          <source>Use the overload</source>
          <target state="translated">使用的多載</target>       </trans-unit>
        <trans-unit id="1651" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.IFormatProvider)">
          <source>Round-trip ("R") format</source>
          <target state="translated">Round-trip ("R") 格式</target>       </trans-unit>
        <trans-unit id="1652" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.IFormatProvider)">
          <source>Default (current) culture</source>
          <target state="translated">預設值 （目前） 的文化特性</target>       </trans-unit>
        <trans-unit id="1653" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.IFormatProvider)">
          <source>A specific format</source>
          <target state="translated">以特定格式</target>       </trans-unit>
        <trans-unit id="1654" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.IFormatProvider)">
          <source>Default (current) culture</source>
          <target state="translated">預設值 （目前） 的文化特性</target>       </trans-unit>
        <trans-unit id="1655" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.IFormatProvider)">
          <source>A specific format</source>
          <target state="translated">以特定格式</target>       </trans-unit>
        <trans-unit id="1656" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.IFormatProvider)">
          <source>A specific culture</source>
          <target state="translated">特定文化特性</target>       </trans-unit>
        <trans-unit id="1657" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.IFormatProvider)">
          <source>The <ph id="ph1">`provider`</ph> parameter is an <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> implementation.</source>
          <target state="translated"><ph id="ph1">`provider`</ph>參數是<ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph>實作。</target>       </trans-unit>
        <trans-unit id="1658" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.IFormatProvider)">
          <source>Its <ph id="ph1">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> method returns a <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that provides culture-specific information about the format of the string returned by this method.</source>
          <target state="translated">其<ph id="ph1">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph>方法會傳回<ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>提供這個方法所傳回的字串格式的相關特定文化特性資訊的物件。</target>       </trans-unit>
        <trans-unit id="1659" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.IFormatProvider)">
          <source>If <ph id="ph1">`provider`</ph> is <ph id="ph2">`null`</ph>, the <ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph> value is formatted using the <ph id="ph4">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object of the current culture.</source>
          <target state="translated">如果<ph id="ph1">`provider`</ph>是<ph id="ph2">`null`</ph>、<ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph>值的格式使用<ph id="ph4">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>目前文化特性的物件。</target>       </trans-unit>
        <trans-unit id="1660" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.IFormatProvider)">
          <source>The only property of the <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that controls the string representation of the <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value using the general format specifier is <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType&gt;</ph>, which defines the character that represents the negative sign.</source>
          <target state="translated">只有屬性<ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>控制項的字串表示的物件<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>使用一般格式規範的值是<ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType&gt;</ph>，其定義的字元，表示負號。</target>       </trans-unit>
        <trans-unit id="1661" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.IFormatProvider)">
          <source>The <ph id="ph1">`provider`</ph> parameter can be one of the following:</source>
          <target state="translated"><ph id="ph1">`provider`</ph>參數可以是下列其中之一：</target>       </trans-unit>
        <trans-unit id="1662" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.IFormatProvider)">
          <source>A <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object that represents the culture that supplies formatting information.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph>代表的文化特性，提供格式設定資訊的物件。</target>       </trans-unit>
        <trans-unit id="1663" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.IFormatProvider)">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that supplies formatting information.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>物件，提供格式設定資訊。</target>       </trans-unit>
        <trans-unit id="1664" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.IFormatProvider)">
          <source>A custom object that implements <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph>.</source>
          <target state="translated">自訂物件實作<ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1665" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.IFormatProvider)">
          <source>Its <ph id="ph1">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> method returns the <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that supplies formatting information.</source>
          <target state="translated">其<ph id="ph1">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph>方法會傳回<ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>物件，提供格式設定資訊。</target>       </trans-unit>
        <trans-unit id="1666" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.IFormatProvider)">
          <source>The following example instantiates a custom <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that defines the tilde (~) as a negative sign.</source>
          <target state="translated">下列範例會具現化自訂<ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>物件，用以定義負號波狀符號 （~）。</target>       </trans-unit>
        <trans-unit id="1667" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.IFormatProvider)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.ToString%28System.IFormatProvider%29&gt;</ph> method then uses the custom <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object to display a negative <ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.ToString%28System.IFormatProvider%29&gt;</ph>方法接著會使用自訂<ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>物件，以顯示負<ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="1668" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.ToString(System.String)">
          <source>A standard or custom numeric format string.</source>
          <target state="translated">標準或自訂數值格式字串。</target>       </trans-unit>
        <trans-unit id="1669" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.ToString(System.String)">
          <source>Converts the numeric value of the current <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> object to its equivalent string representation by using the specified format.</source>
          <target state="translated">使用指定的格式，將目前 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 物件的值，轉換為其相等字串表示。</target>       </trans-unit>
        <trans-unit id="1670" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.ToString(System.String)">
          <source>The string representation of the current <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value in the format specified by the <ph id="ph2">&lt;paramref name="format" /&gt;</ph> parameter.</source>
          <target state="translated">目前 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 值的字串表示，採用 <ph id="ph2">&lt;paramref name="format" /&gt;</ph> 參數所指定的格式。</target>       </trans-unit>
        <trans-unit id="1671" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.ToString%28System.String%29&gt;</ph> method formats a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value in a specified format by using a <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that represents the conventions of the current culture.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.ToString%28System.String%29&gt;</ph>方法格式<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>中指定的格式，使用值<ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>物件，代表目前的文化特性的慣例。</target>       </trans-unit>
        <trans-unit id="1672" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.String)">
          <source>If you want to use the "R", or round-trip, format or specify a different culture, use the other overloads of the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.ToString%2A&gt;</ph> method, as follows:</source>
          <target state="translated">如果您想要使用"R"或往返，格式或指定不同的文化特性，使用的其他多載<ph id="ph1">&lt;xref:System.Numerics.BigInteger.ToString%2A&gt;</ph>方法，如下所示：</target>       </trans-unit>
        <trans-unit id="1673" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.String)">
          <source>To use format</source>
          <target state="translated">若要使用格式</target>       </trans-unit>
        <trans-unit id="1674" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.String)">
          <source>For culture</source>
          <target state="translated">文化特性</target>       </trans-unit>
        <trans-unit id="1675" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.String)">
          <source>Use the overload</source>
          <target state="translated">使用的多載</target>       </trans-unit>
        <trans-unit id="1676" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.String)">
          <source>Round-trip ("R") format</source>
          <target state="translated">Round-trip ("R") 格式</target>       </trans-unit>
        <trans-unit id="1677" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.String)">
          <source>Default (current) culture</source>
          <target state="translated">預設值 （目前） 的文化特性</target>       </trans-unit>
        <trans-unit id="1678" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.String)">
          <source>Round-trip ("R") format</source>
          <target state="translated">Round-trip ("R") 格式</target>       </trans-unit>
        <trans-unit id="1679" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.String)">
          <source>A specific culture</source>
          <target state="translated">特定文化特性</target>       </trans-unit>
        <trans-unit id="1680" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.String)">
          <source>A specific format</source>
          <target state="translated">以特定格式</target>       </trans-unit>
        <trans-unit id="1681" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.String)">
          <source>A specific culture</source>
          <target state="translated">特定文化特性</target>       </trans-unit>
        <trans-unit id="1682" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.String)">
          <source>The <ph id="ph1">`format`</ph> parameter can be any valid <bpt id="p1">[</bpt>standard numeric string<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept>, or any combination of <bpt id="p2">[</bpt>custom numeric format strings<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</source>
          <target state="translated"><ph id="ph1">`format`</ph>參數可以是任何有效<bpt id="p1">[</bpt>標準數值字串<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept>，或任何組合<bpt id="p2">[</bpt>自訂數值格式字串<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>。</target>       </trans-unit>
        <trans-unit id="1683" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.String)">
          <source>If <ph id="ph1">`format`</ph> is equal to <ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph> or is <ph id="ph3">`null`</ph>, the return value of the current <ph id="ph4">&lt;xref:System.Numerics.BigInteger&gt;</ph> object is formatted with the round-trip format specifier ("R").</source>
          <target state="translated">如果<ph id="ph1">`format`</ph>等於<ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>或<ph id="ph3">`null`</ph>，目前的傳回值<ph id="ph4">&lt;xref:System.Numerics.BigInteger&gt;</ph>物件的格式使用往返格式規範 ("R")。</target>       </trans-unit>
        <trans-unit id="1684" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.String)">
          <source>If <ph id="ph1">`format`</ph> is any other value, the method throws a <ph id="ph2">&lt;xref:System.FormatException&gt;</ph>.</source>
          <target state="translated">如果<ph id="ph1">`format`</ph>是任何其他值，則方法會擲回<ph id="ph2">&lt;xref:System.FormatException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1685" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.String)">
          <source>The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</source>
          <target state="translated">.NET Framework 提供廣泛的格式化支援，下列格式的主題中的更詳細地說明：</target>       </trans-unit>
        <trans-unit id="1686" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.String)">
          <source>For more information about numeric format specifiers, see <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Numeric Format Strings<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</source>
          <target state="translated">如需有關數值格式規範的詳細資訊，請參閱<bpt id="p1">[</bpt>標準數值格式字串<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept>和<bpt id="p2">[</bpt>自訂數值格式字串<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>。</target>       </trans-unit>
        <trans-unit id="1687" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.String)">
          <source>For more information about support for formatting in the .NET Framework, see <bpt id="p1">[</bpt>Formatting Types<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>.</source>
          <target state="translated">如需.NET Framework 中的格式化支援的詳細資訊，請參閱<bpt id="p1">[</bpt>格式化型別<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>。</target>       </trans-unit>
        <trans-unit id="1688" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.String)">
          <source>The format of the returned string is determined by the <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object for the current culture.</source>
          <target state="translated">傳回之字串的格式取決於<ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>目前的文化特性的物件。</target>       </trans-unit>
        <trans-unit id="1689" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.String)">
          <source>Depending on the <ph id="ph1">`format`</ph> parameter, this object controls symbols such as the negative sign, the group separator, and the decimal point symbol in the output string.</source>
          <target state="translated">取決於<ph id="ph1">`format`</ph>參數，這個物件會控制例如負號、 群組分隔符號和小數點符號，輸出字串中的符號。</target>       </trans-unit>
        <trans-unit id="1690" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.String)">
          <source>To provide formatting information for cultures other than the current culture, call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.ToString%28System.String%2CSystem.IFormatProvider%29&gt;</ph> overload.</source>
          <target state="translated">若要提供目前的文化特性以外的文化特性格式資訊，請呼叫<ph id="ph1">&lt;xref:System.Numerics.BigInteger.ToString%28System.String%2CSystem.IFormatProvider%29&gt;</ph>多載。</target>       </trans-unit>
        <trans-unit id="1691" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.String)">
          <source>The following example initializes a <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> value and displays it by using each standard format string and some custom format strings.</source>
          <target state="translated">下列範例會初始化<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>值，並顯示每個標準格式字串和一些自訂格式字串使用。</target>       </trans-unit>
        <trans-unit id="1692" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.ToString(System.String)">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> is not a valid format string.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph> 不是有效的格式字串。</target>       </trans-unit>
        <trans-unit id="1693" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.ToString(System.String,System.IFormatProvider)">
          <source>A standard or custom numeric format string.</source>
          <target state="translated">標準或自訂數值格式字串。</target>       </trans-unit>
        <trans-unit id="1694" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.ToString(System.String,System.IFormatProvider)">
          <source>An object that supplies culture-specific formatting information.</source>
          <target state="translated">物件，提供特定文化特性格式資訊。</target>       </trans-unit>
        <trans-unit id="1695" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.ToString(System.String,System.IFormatProvider)">
          <source>Converts the numeric value of the current <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> object to its equivalent string representation by using the specified format and culture-specific format information.</source>
          <target state="translated">使用指定的格式和特定文化特性的格式資訊，將目前 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 物件的數值，轉換為其相等的字串表示。</target>       </trans-unit>
        <trans-unit id="1696" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.ToString(System.String,System.IFormatProvider)">
          <source>The string representation of the current <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value as specified by the <ph id="ph2">&lt;paramref name="format" /&gt;</ph> and <ph id="ph3">&lt;paramref name="provider" /&gt;</ph> parameters.</source>
          <target state="translated">目前 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> 值的字串表示 (如 <ph id="ph2">&lt;paramref name="format" /&gt;</ph> 和 <ph id="ph3">&lt;paramref name="provider" /&gt;</ph> 參數所指定)。</target>       </trans-unit>
        <trans-unit id="1697" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.String,System.IFormatProvider)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.ToString%28System.String%2CSystem.IFormatProvider%29&gt;</ph> method formats a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value in a specified format by using the <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object of a specified culture.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.ToString%28System.String%2CSystem.IFormatProvider%29&gt;</ph>方法格式<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>中指定的格式，使用值<ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>指定文化特性的物件。</target>       </trans-unit>
        <trans-unit id="1698" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.String,System.IFormatProvider)">
          <source>If you want to use the round-trip format or default culture settings, use the other overloads of the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.ToString%2A&gt;</ph> method, as follows:</source>
          <target state="translated">如果您想要使用的反覆存取格式或預設文化特性設定，使用的其他多載<ph id="ph1">&lt;xref:System.Numerics.BigInteger.ToString%2A&gt;</ph>方法，如下所示：</target>       </trans-unit>
        <trans-unit id="1699" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.String,System.IFormatProvider)">
          <source>To use format</source>
          <target state="translated">若要使用格式</target>       </trans-unit>
        <trans-unit id="1700" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.String,System.IFormatProvider)">
          <source>For culture</source>
          <target state="translated">文化特性</target>       </trans-unit>
        <trans-unit id="1701" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.String,System.IFormatProvider)">
          <source>Use the overload</source>
          <target state="translated">使用的多載</target>       </trans-unit>
        <trans-unit id="1702" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.String,System.IFormatProvider)">
          <source>Round-trip ("R") format</source>
          <target state="translated">Round-trip ("R") 格式</target>       </trans-unit>
        <trans-unit id="1703" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.String,System.IFormatProvider)">
          <source>Default (current) culture</source>
          <target state="translated">預設值 （目前） 的文化特性</target>       </trans-unit>
        <trans-unit id="1704" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.String,System.IFormatProvider)">
          <source>Round-trip ("R") format</source>
          <target state="translated">Round-trip ("R") 格式</target>       </trans-unit>
        <trans-unit id="1705" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.String,System.IFormatProvider)">
          <source>A specific culture</source>
          <target state="translated">特定文化特性</target>       </trans-unit>
        <trans-unit id="1706" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.String,System.IFormatProvider)">
          <source>A specific format</source>
          <target state="translated">以特定格式</target>       </trans-unit>
        <trans-unit id="1707" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.String,System.IFormatProvider)">
          <source>Default (current) culture</source>
          <target state="translated">預設值 （目前） 的文化特性</target>       </trans-unit>
        <trans-unit id="1708" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.String,System.IFormatProvider)">
          <source>The <ph id="ph1">`format`</ph> parameter can be any valid  <bpt id="p1">[</bpt>standard numeric string<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept>, or any combination of <bpt id="p2">[</bpt>custom numeric format strings<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</source>
          <target state="translated"><ph id="ph1">`format`</ph>參數可以是任何有效<bpt id="p1">[</bpt>標準數值字串<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept>，或任何組合<bpt id="p2">[</bpt>自訂數值格式字串<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>。</target>       </trans-unit>
        <trans-unit id="1709" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.String,System.IFormatProvider)">
          <source>If <ph id="ph1">`format`</ph> is equal to <ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph> or is <ph id="ph3">`null`</ph>, the return value of the current <ph id="ph4">&lt;xref:System.Numerics.BigInteger&gt;</ph> object is formatted with the round-trip format specifier ("R").</source>
          <target state="translated">如果<ph id="ph1">`format`</ph>等於<ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>或<ph id="ph3">`null`</ph>，目前的傳回值<ph id="ph4">&lt;xref:System.Numerics.BigInteger&gt;</ph>物件的格式使用往返格式規範 ("R")。</target>       </trans-unit>
        <trans-unit id="1710" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.String,System.IFormatProvider)">
          <source>If <ph id="ph1">`format`</ph> is any other value, the method throws a <ph id="ph2">&lt;xref:System.FormatException&gt;</ph>.</source>
          <target state="translated">如果<ph id="ph1">`format`</ph>是任何其他值，則方法會擲回<ph id="ph2">&lt;xref:System.FormatException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1711" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.String,System.IFormatProvider)">
          <source>The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</source>
          <target state="translated">.NET Framework 提供廣泛的格式化支援，下列格式的主題中的更詳細地說明：</target>       </trans-unit>
        <trans-unit id="1712" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.String,System.IFormatProvider)">
          <source>For more information about numeric format specifiers, see <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Numeric Format Strings<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</source>
          <target state="translated">如需有關數值格式規範的詳細資訊，請參閱<bpt id="p1">[</bpt>標準數值格式字串<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept>和<bpt id="p2">[</bpt>自訂數值格式字串<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>。</target>       </trans-unit>
        <trans-unit id="1713" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.String,System.IFormatProvider)">
          <source>For more information about support for formatting in the .NET Framework, see <bpt id="p1">[</bpt>Formatting Types<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>.</source>
          <target state="translated">如需.NET Framework 中的格式化支援的詳細資訊，請參閱<bpt id="p1">[</bpt>格式化型別<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>。</target>       </trans-unit>
        <trans-unit id="1714" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.String,System.IFormatProvider)">
          <source>The <ph id="ph1">`provider`</ph> parameter is an <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> implementation.</source>
          <target state="translated"><ph id="ph1">`provider`</ph>參數是<ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph>實作。</target>       </trans-unit>
        <trans-unit id="1715" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.String,System.IFormatProvider)">
          <source>Its <ph id="ph1">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> method returns a <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that provides culture-specific information about the format of the string returned by this method.</source>
          <target state="translated">其<ph id="ph1">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph>方法會傳回<ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>提供這個方法所傳回的字串格式的相關特定文化特性資訊的物件。</target>       </trans-unit>
        <trans-unit id="1716" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.String,System.IFormatProvider)">
          <source>When the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.ToString%28System.String%2CSystem.IFormatProvider%29&gt;</ph> method is invoked, it calls the <ph id="ph2">`provider`</ph> parameter's <ph id="ph3">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> method and passes it a <ph id="ph4">&lt;xref:System.Type&gt;</ph> object that represents the <ph id="ph5">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> type.</source>
          <target state="translated">當<ph id="ph1">&lt;xref:System.Numerics.BigInteger.ToString%28System.String%2CSystem.IFormatProvider%29&gt;</ph>叫用方法時，它會呼叫<ph id="ph2">`provider`</ph>參數的<ph id="ph3">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph>方法並將其傳遞<ph id="ph4">&lt;xref:System.Type&gt;</ph>物件，代表<ph id="ph5">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>型別。</target>       </trans-unit>
        <trans-unit id="1717" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.String,System.IFormatProvider)">
          <source>The <ph id="ph1">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> method then returns the <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that provides information for formatting the <ph id="ph3">`value`</ph> parameter, such as the negative sign symbol, the group separator symbol, or the decimal point symbol.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph>方法接著會傳回<ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>物件，提供用來格式化資訊<ph id="ph3">`value`</ph>參數，例如負號、 群組分隔符號或小數點符號。</target>       </trans-unit>
        <trans-unit id="1718" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.String,System.IFormatProvider)">
          <source>There are three ways to use the <ph id="ph1">`provider`</ph> parameter to supply formatting information to the <ph id="ph2">&lt;xref:System.Numerics.BigInteger.ToString%28System.String%2CSystem.IFormatProvider%29&gt;</ph> method:</source>
          <target state="translated">若要使用的三種方式<ph id="ph1">`provider`</ph>參數來提供格式設定資訊給<ph id="ph2">&lt;xref:System.Numerics.BigInteger.ToString%28System.String%2CSystem.IFormatProvider%29&gt;</ph>方法：</target>       </trans-unit>
        <trans-unit id="1719" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.String,System.IFormatProvider)">
          <source>You can pass a <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object that represents the culture that supplies formatting information.</source>
          <target state="translated">您可以傳遞<ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph>代表的文化特性，提供格式設定資訊的物件。</target>       </trans-unit>
        <trans-unit id="1720" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.String,System.IFormatProvider)">
          <source>Its <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.GetFormat%2A&gt;</ph> method returns the <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that provides numeric formatting information for that culture.</source>
          <target state="translated">其<ph id="ph1">&lt;xref:System.Globalization.CultureInfo.GetFormat%2A&gt;</ph>方法會傳回<ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>提供該文化特性的數值格式設定資訊的物件。</target>       </trans-unit>
        <trans-unit id="1721" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.String,System.IFormatProvider)">
          <source>You can pass the actual <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that provides numeric formatting information.</source>
          <target state="translated">您可以傳遞的實際<ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>提供數值格式設定資訊的物件。</target>       </trans-unit>
        <trans-unit id="1722" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.String,System.IFormatProvider)">
          <source>(Its implementation of <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.GetFormat%2A&gt;</ph> just returns itself.)</source>
          <target state="translated">(它的實作<ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.GetFormat%2A&gt;</ph>只會傳回本身。)</target>       </trans-unit>
        <trans-unit id="1723" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.String,System.IFormatProvider)">
          <source>You can pass a custom object that implements <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph>.</source>
          <target state="translated">您可以將自訂物件實作<ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1724" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.String,System.IFormatProvider)">
          <source>Its <ph id="ph1">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> method instantiates and returns the <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that provides formatting information.</source>
          <target state="translated">其<ph id="ph1">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph>方法具現化，並傳回<ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>提供格式設定資訊的物件。</target>       </trans-unit>
        <trans-unit id="1725" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.String,System.IFormatProvider)">
          <source>If <ph id="ph1">`provider`</ph> is <ph id="ph2">`null`</ph>, the formatting of the returned string is based on the <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object of the current culture.</source>
          <target state="translated">如果<ph id="ph1">`provider`</ph>是<ph id="ph2">`null`</ph>，傳回之字串的格式根據<ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>目前文化特性的物件。</target>       </trans-unit>
        <trans-unit id="1726" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.ToString(System.String,System.IFormatProvider)">
          <source>The following example initializes a <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> value, and displays it to the console using a standard format string and a <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that defines the tilde (~) as a negative sign.</source>
          <target state="translated">下列範例會初始化<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>值，並將它顯示到主控台中使用標準格式字串和<ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>物件，用以定義負號波狀符號 （~）。</target>       </trans-unit>
        <trans-unit id="1727" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.ToString(System.String,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> is not a valid format string.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph> 不是有效的格式字串。</target>       </trans-unit>
        <trans-unit id="1728" translate="yes" xml:space="preserve" uid="T:System.Numerics.BigInteger">
          <source>Tries to convert the string representation of a number to its <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> equivalent, and returns a value that indicates whether the conversion succeeded.</source>
          <target state="translated">嘗試將數字的字串表示轉換成其相等的 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph>，並傳回一個值表示轉換是否成功。</target>       </trans-unit>
        <trans-unit id="1729" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Numerics.BigInteger@)">
          <source>The string representation of a number.</source>
          <target state="translated">數字的字串表示。</target>       </trans-unit>
        <trans-unit id="1730" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Numerics.BigInteger@)">
          <source>When this method returns, contains the <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> equivalent to the number that is contained in <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept>, or zero (0) if the conversion fails.</source>
          <target state="translated">當這個方法傳回時，如果轉換成功，則會包含相當於 <bpt id="p1">&lt;c&gt;</bpt>值<ept id="p1">&lt;/c&gt;</ept> 中所含之數字的 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph>；如果轉換失敗則為零 (0)。</target>       </trans-unit>
        <trans-unit id="1731" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Numerics.BigInteger@)">
          <source>The conversion fails if the <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> parameter is <ph id="ph1">&lt;see langword="null" /&gt;</ph> or is not of the correct format.</source>
          <target state="translated">如果 <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> 參數為 <ph id="ph1">&lt;see langword="null" /&gt;</ph> 或格式不正確，轉換就會失敗。</target>       </trans-unit>
        <trans-unit id="1732" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Numerics.BigInteger@)">
          <source>This parameter is passed uninitialized.</source>
          <target state="translated">這個參數會以未初始化的狀態傳遞。</target>       </trans-unit>
        <trans-unit id="1733" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Numerics.BigInteger@)">
          <source>Tries to convert the string representation of a number to its <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> equivalent, and returns a value that indicates whether the conversion succeeded.</source>
          <target state="translated">嘗試將數字的字串表示轉換成其相等的 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph>，並傳回一個值表示轉換是否成功。</target>       </trans-unit>
        <trans-unit id="1734" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Numerics.BigInteger@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="value" /&gt;</ph> was converted successfully; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph1">&lt;see langword="true" /&gt;</ph> 轉換成功，則為 <ph id="ph2">&lt;paramref name="value" /&gt;</ph>，否則為 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1735" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Numerics.BigInteger@)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Numerics.BigInteger%40%29&gt;</ph> method is like the <ph id="ph2">&lt;xref:System.Numerics.BigInteger.Parse%28System.String%29&gt;</ph> method, except that it does not throw an exception if the conversion fails.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Numerics.BigInteger%40%29&gt;</ph>方法就像<ph id="ph2">&lt;xref:System.Numerics.BigInteger.Parse%28System.String%29&gt;</ph>方法，但是它不會擲回例外狀況如果轉換失敗。</target>       </trans-unit>
        <trans-unit id="1736" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Numerics.BigInteger@)">
          <source>This method eliminates the need to use exception handling to test for a <ph id="ph1">&lt;xref:System.FormatException&gt;</ph> if <ph id="ph2">`value`</ph> is invalid and cannot be successfully parsed.</source>
          <target state="translated">這個方法就不需要使用例外狀況處理來測試<ph id="ph1">&lt;xref:System.FormatException&gt;</ph>如果<ph id="ph2">`value`</ph>無效，無法成功剖析。</target>       </trans-unit>
        <trans-unit id="1737" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Numerics.BigInteger@)">
          <source>The <ph id="ph1">`value`</ph> parameter should be the string representation of a decimal number in the following form:</source>
          <target state="translated"><ph id="ph1">`value`</ph>參數應該是以下列形式的十進位數字的字串表示：</target>       </trans-unit>
        <trans-unit id="1738" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Numerics.BigInteger@)">
          <source>[<bpt id="p1">*</bpt>ws<ept id="p1">*</ept>][<bpt id="p2">*</bpt>sign<ept id="p2">*</ept>]<bpt id="p3">*</bpt>digits<ept id="p3">*</ept>[<bpt id="p4">*</bpt>ws<ept id="p4">*</ept>]</source>
          <target state="translated">[<bpt id="p1">*</bpt>ws<ept id="p1">*</ept>][<bpt id="p2">*</bpt>sign<ept id="p2">*</ept>]<bpt id="p3">*</bpt>digits<ept id="p3">*</ept>[<bpt id="p4">*</bpt>ws<ept id="p4">*</ept>]</target>       </trans-unit>
        <trans-unit id="1739" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Numerics.BigInteger@)">
          <source>Elements in square brackets ([ and ]) are optional.</source>
          <target state="translated">在方括號 ([ 和 ]) 中的項目是選擇性的項目。</target>       </trans-unit>
        <trans-unit id="1740" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Numerics.BigInteger@)">
          <source>The following table describes each element.</source>
          <target state="translated">下表描述每個項目。</target>       </trans-unit>
        <trans-unit id="1741" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Numerics.BigInteger@)">
          <source>Element</source>
          <target state="translated">元素</target>       </trans-unit>
        <trans-unit id="1742" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Numerics.BigInteger@)">
          <source>Description</source>
          <target state="translated">描述</target>       </trans-unit>
        <trans-unit id="1743" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Numerics.BigInteger@)">
          <source><bpt id="p1">*</bpt>ws<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>ws<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="1744" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Numerics.BigInteger@)">
          <source>Optional white space.</source>
          <target state="translated">選擇性的泛空白字元。</target>       </trans-unit>
        <trans-unit id="1745" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Numerics.BigInteger@)">
          <source><bpt id="p1">*</bpt>sign<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>簽署<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="1746" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Numerics.BigInteger@)">
          <source>An optional sign.</source>
          <target state="translated">選擇性的符號。</target>       </trans-unit>
        <trans-unit id="1747" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Numerics.BigInteger@)">
          <source>Valid sign characters are determined by the <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.PositiveSign%2A?displayProperty=nameWithType&gt;</ph> properties of the current culture.</source>
          <target state="translated">有效的符號字元由<ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType&gt;</ph>和<ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.PositiveSign%2A?displayProperty=nameWithType&gt;</ph>目前文化特性的屬性。</target>       </trans-unit>
        <trans-unit id="1748" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Numerics.BigInteger@)">
          <source><bpt id="p1">*</bpt>digits<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>digits<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="1749" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Numerics.BigInteger@)">
          <source>A sequence of decimal digits ranging from 0 to 9.</source>
          <target state="translated">範圍從 0 到 9 的十進位數字的序列。</target>       </trans-unit>
        <trans-unit id="1750" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Numerics.BigInteger@)">
          <source>The string specified by the <ph id="ph1">`value`</ph> parameter cannot contain any group separators or decimal separator, and it cannot have a decimal portion.</source>
          <target state="translated">所指定的字串<ph id="ph1">`value`</ph>參數不能包含任何群組分隔符號或小數分隔符號，而且不得有小數部分。</target>       </trans-unit>
        <trans-unit id="1751" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Numerics.BigInteger@)">
          <source>The <ph id="ph1">`value`</ph> parameter is interpreted by using the <ph id="ph2">&lt;xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType&gt;</ph> style.</source>
          <target state="translated"><ph id="ph1">`value`</ph>參數會使用解譯<ph id="ph2">&lt;xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType&gt;</ph>樣式。</target>       </trans-unit>
        <trans-unit id="1752" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Numerics.BigInteger@)">
          <source>In addition to the decimal digits, only leading and trailing spaces with a leading sign are allowed.</source>
          <target state="translated">除了十進位數字，只允許前置和後端空格，有前置正負號。</target>       </trans-unit>
        <trans-unit id="1753" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Numerics.BigInteger@)">
          <source>To explicitly define the style elements with the culture-specific formatting information that can be present in <ph id="ph1">`value`</ph>, call the <ph id="ph2">&lt;xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Numerics.BigInteger%40%29&gt;</ph> method.</source>
          <target state="translated">若要明確地定義使用的文化特性特有格式設定資訊中可以存在的樣式項目<ph id="ph1">`value`</ph>，呼叫<ph id="ph2">&lt;xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Numerics.BigInteger%40%29&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="1754" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Numerics.BigInteger@)">
          <source>The <ph id="ph1">`value`</ph> parameter is parsed by using the formatting information in a <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object for the current culture.</source>
          <target state="translated"><ph id="ph1">`value`</ph>參數使用的格式設定資訊中會剖析<ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>目前的文化特性的物件。</target>       </trans-unit>
        <trans-unit id="1755" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Numerics.BigInteger@)">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">如需詳細資訊，請參閱<ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1756" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Numerics.BigInteger@)">
          <source>This overload interprets all digits in the <ph id="ph1">`value`</ph> parameter as decimal digits.</source>
          <target state="translated">這個多載會解譯中的所有位數<ph id="ph1">`value`</ph>參數做為十進位數字。</target>       </trans-unit>
        <trans-unit id="1757" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Numerics.BigInteger@)">
          <source>To parse the string representation of a hexadecimal number, call the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Numerics.BigInteger%40%29&gt;</ph> overload instead.</source>
          <target state="translated">若要剖析的十六進位數字的字串表示，呼叫<ph id="ph1">&lt;xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Numerics.BigInteger%40%29&gt;</ph>改為多載。</target>       </trans-unit>
        <trans-unit id="1758" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Numerics.BigInteger@)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Numerics.BigInteger%40%29&gt;</ph> method to instantiate two <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> objects.</source>
          <target state="translated">下列範例會使用<ph id="ph1">&lt;xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Numerics.BigInteger%40%29&gt;</ph>方法來具現化兩個<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="1759" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Numerics.BigInteger@)">
          <source>If the conversions succeed, it multiplies each object by another number and then calls the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.Compare%2A&gt;</ph> method to determine the relationship between the two objects.</source>
          <target state="translated">如果轉換成功，它將每個物件，另一個數字相乘，然後呼叫<ph id="ph1">&lt;xref:System.Numerics.BigInteger.Compare%2A&gt;</ph>方法，以判斷兩個物件之間的關聯性。</target>       </trans-unit>
        <trans-unit id="1760" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Numerics.BigInteger@)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1761" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>The string representation of a number.</source>
          <target state="translated">數字的字串表示。</target>       </trans-unit>
        <trans-unit id="1762" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>The string is interpreted using the style specified by <bpt id="p1">&lt;c&gt;</bpt>style<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">這個字串使用「樣式」<bpt id="p1">&lt;c&gt;</bpt><ept id="p1">&lt;/c&gt;</ept>指定的樣式來解譯。</target>       </trans-unit>
        <trans-unit id="1763" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>A bitwise combination of enumeration values that indicates the style elements that can be present in <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">列舉值的位元組合，表示 <bpt id="p1">&lt;c&gt;</bpt>值<ept id="p1">&lt;/c&gt;</ept> 中可以存在的樣式項目。</target>       </trans-unit>
        <trans-unit id="1764" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>A typical value to specify is <ph id="ph1">&lt;see cref="F:System.Globalization.NumberStyles.Integer" /&gt;</ph>.</source>
          <target state="translated">一般會指定的值是 <ph id="ph1">&lt;see cref="F:System.Globalization.NumberStyles.Integer" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1765" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>An object that supplies culture-specific formatting information about <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">物件，提供關於 <bpt id="p1">&lt;c&gt;</bpt>值<ept id="p1">&lt;/c&gt;</ept> 的特定文化特性格式資訊。</target>       </trans-unit>
        <trans-unit id="1766" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>When this method returns, contains the <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> equivalent to the number that is contained in <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept>, or <ph id="ph2">&lt;see cref="P:System.Numerics.BigInteger.Zero" /&gt;</ph> if the conversion failed.</source>
          <target state="translated">當這個方法傳回時，如果轉換成功，則會包含相當於 <bpt id="p1">&lt;c&gt;</bpt>值<ept id="p1">&lt;/c&gt;</ept> 中所含之數字的 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph>；如果轉換失敗則為 <ph id="ph2">&lt;see cref="P:System.Numerics.BigInteger.Zero" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1767" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>The conversion fails if the <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> parameter is <ph id="ph1">&lt;see langword="null" /&gt;</ph> or is not in a format that is compliant with <bpt id="p2">&lt;c&gt;</bpt>style<ept id="p2">&lt;/c&gt;</ept>.</source>
          <target state="translated">如果 <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> 參數為 <ph id="ph1">&lt;see langword="null" /&gt;</ph> 或格式與 <bpt id="p2">&lt;c&gt;</bpt>樣式<ept id="p2">&lt;/c&gt;</ept> 不相容，轉換就會失敗。</target>       </trans-unit>
        <trans-unit id="1768" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>This parameter is passed uninitialized.</source>
          <target state="translated">這個參數會以未初始化的狀態傳遞。</target>       </trans-unit>
        <trans-unit id="1769" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>Tries to convert the string representation of a number in a specified style and culture-specific format to its <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> equivalent, and returns a value that indicates whether the conversion succeeded.</source>
          <target state="translated">使用指定的文化特性特定格式資訊和格式樣式，將日期和時間的指定字串表示轉換為其對等的 <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph>，並傳回值，這個值表示轉換是否成功。</target>       </trans-unit>
        <trans-unit id="1770" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;paramref name="value" /&gt;</ph> parameter was converted successfully; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph2">&lt;paramref name="value" /&gt;</ph> 參數轉換成功，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1771" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Numerics.BigInteger%40%29&gt;</ph> method is like the <ph id="ph2">&lt;xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29&gt;</ph> method, except that it does not throw an exception if the conversion fails.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Numerics.BigInteger%40%29&gt;</ph>方法就像<ph id="ph2">&lt;xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29&gt;</ph>方法，但是它不會擲回例外狀況如果轉換失敗。</target>       </trans-unit>
        <trans-unit id="1772" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>This method eliminates the need to use exception handling to test for a <ph id="ph1">&lt;xref:System.FormatException&gt;</ph> if <ph id="ph2">`value`</ph> is invalid and cannot be parsed successfully.</source>
          <target state="translated">這個方法就不需要使用例外狀況處理來測試<ph id="ph1">&lt;xref:System.FormatException&gt;</ph>如果<ph id="ph2">`value`</ph>無效，無法成功剖析。</target>       </trans-unit>
        <trans-unit id="1773" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>The <ph id="ph1">`style`</ph> parameter defines the style elements (such as white space or a positive or negative sign) that are allowed in the <ph id="ph2">`value`</ph> parameter for the parse operation to succeed.</source>
          <target state="translated"><ph id="ph1">`style`</ph>參數定義中允許的樣式項目 （例如空白字元或正或負號）<ph id="ph2">`value`</ph>剖析作業成功的參數。</target>       </trans-unit>
        <trans-unit id="1774" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>It must be a combination of bit flags from the <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> enumeration.</source>
          <target state="translated">它必須從位元旗標的組合<ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph>列舉型別。</target>       </trans-unit>
        <trans-unit id="1775" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>Depending on the value of <ph id="ph1">`style`</ph>, the <ph id="ph2">`value`</ph> parameter may include the following elements:</source>
          <target state="translated">值而定<ph id="ph1">`style`</ph>、<ph id="ph2">`value`</ph>參數可以包含下列項目：</target>       </trans-unit>
        <trans-unit id="1776" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>[<bpt id="p1">*</bpt>ws<ept id="p1">*</ept>][<bpt id="p2">*</bpt><ph id="ph1">$</ph><ept id="p2">*</ept>][<bpt id="p3">*</bpt>sign<ept id="p3">*</ept>][<bpt id="p4">*</bpt>digits<ept id="p4">*</ept>,]<bpt id="p5">*</bpt>digits<ept id="p5">*</ept>[.<bpt id="p6">*</bpt>fractional_digits<ept id="p6">*</ept>][E[<bpt id="p7">*</bpt>sign<ept id="p7">*</ept>]<bpt id="p8">*</bpt>exponential_digits<ept id="p8">*</ept>][<bpt id="p9">*</bpt>ws<ept id="p9">*</ept>]</source>
          <target state="translated">[<bpt id="p1">*</bpt>ws<ept id="p1">*</ept>][<bpt id="p2">*</bpt><ph id="ph1">$</ph><ept id="p2">*</ept>][<bpt id="p3">*</bpt>sign<ept id="p3">*</ept>][<bpt id="p4">*</bpt>digits<ept id="p4">*</ept>,]<bpt id="p5">*</bpt>digits<ept id="p5">*</ept>[.<bpt id="p6">*</bpt>fractional_digits<ept id="p6">*</ept>][E[<bpt id="p7">*</bpt>sign<ept id="p7">*</ept>]<bpt id="p8">*</bpt>exponential_digits<ept id="p8">*</ept>][<bpt id="p9">*</bpt>ws<ept id="p9">*</ept>]</target>       </trans-unit>
        <trans-unit id="1777" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>If the <ph id="ph1">`style`</ph> parameter includes <ph id="ph2">&lt;xref:System.Globalization.NumberStyles.AllowHexSpecifier&gt;</ph>, the <ph id="ph3">`value`</ph> parameter may include the following elements:</source>
          <target state="translated">如果<ph id="ph1">`style`</ph>參數包含<ph id="ph2">&lt;xref:System.Globalization.NumberStyles.AllowHexSpecifier&gt;</ph>、<ph id="ph3">`value`</ph>參數可以包含下列項目：</target>       </trans-unit>
        <trans-unit id="1778" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>[<bpt id="p1">*</bpt>ws<ept id="p1">*</ept>]<bpt id="p2">*</bpt>hexdigits<ept id="p2">*</ept>[<bpt id="p3">*</bpt>ws<ept id="p3">*</ept>]</source>
          <target state="translated">[<bpt id="p1">*</bpt>ws<ept id="p1">*</ept>]<bpt id="p2">*</bpt>hexdigits<ept id="p2">*</ept>[<bpt id="p3">*</bpt>ws<ept id="p3">*</ept>]</target>       </trans-unit>
        <trans-unit id="1779" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>Elements in square brackets ([ and ]) are optional.</source>
          <target state="translated">在方括號 ([ 和 ]) 中的項目是選擇性的項目。</target>       </trans-unit>
        <trans-unit id="1780" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>The following table describes each element.</source>
          <target state="translated">下表描述每個項目。</target>       </trans-unit>
        <trans-unit id="1781" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>Element</source>
          <target state="translated">元素</target>       </trans-unit>
        <trans-unit id="1782" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>Description</source>
          <target state="translated">描述</target>       </trans-unit>
        <trans-unit id="1783" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source><bpt id="p1">*</bpt>ws<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>ws<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="1784" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>Optional white space.</source>
          <target state="translated">選擇性的泛空白字元。</target>       </trans-unit>
        <trans-unit id="1785" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>White space can appear at the start of <ph id="ph1">`value`</ph> if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType&gt;</ph> flag, or at the end of <ph id="ph4">`value`</ph> if <ph id="ph5">`style`</ph> includes the <ph id="ph6">&lt;xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">空白字元可以出現在開頭<ph id="ph1">`value`</ph>如果<ph id="ph2">`style`</ph>包含<ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType&gt;</ph>旗標，或結尾處<ph id="ph4">`value`</ph>如果<ph id="ph5">`style`</ph>包含<ph id="ph6">&lt;xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType&gt;</ph>旗標。</target>       </trans-unit>
        <trans-unit id="1786" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>A culture-specific currency symbol.</source>
          <target state="translated">特定文化特性的貨幣符號。</target>       </trans-unit>
        <trans-unit id="1787" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>Its position in the string is defined by the <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object returned by the <ph id="ph3">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> method of the <ph id="ph4">`provider`</ph> parameter.</source>
          <target state="translated">在字串中的位置由定義<ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A&gt;</ph>屬性<ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>所傳回物件<ph id="ph3">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph>方法<ph id="ph4">`provider`</ph>參數。</target>       </trans-unit>
        <trans-unit id="1788" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>The currency symbol can appear in <ph id="ph1">`value`</ph> if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">貨幣符號可以出現在<ph id="ph1">`value`</ph>如果<ph id="ph2">`style`</ph>包含<ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType&gt;</ph>旗標。</target>       </trans-unit>
        <trans-unit id="1789" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source><bpt id="p1">*</bpt>sign<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>簽署<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="1790" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>An optional sign.</source>
          <target state="translated">選擇性的符號。</target>       </trans-unit>
        <trans-unit id="1791" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>The sign can appear at the start of <ph id="ph1">`value`</ph> if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType&gt;</ph> flag, and it can appear at the end of <ph id="ph4">`value`</ph> if <ph id="ph5">`style`</ph> includes the <ph id="ph6">&lt;xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">符號可以出現在開頭<ph id="ph1">`value`</ph>如果<ph id="ph2">`style`</ph>包含<ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType&gt;</ph>旗標，而且可以出現在結尾<ph id="ph4">`value`</ph>如果<ph id="ph5">`style`</ph>包含<ph id="ph6">&lt;xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType&gt;</ph>旗標。</target>       </trans-unit>
        <trans-unit id="1792" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>Parentheses can be used in <ph id="ph1">`value`</ph> to indicate a negative value if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">括號可用於<ph id="ph1">`value`</ph>來表示負數的值，如果<ph id="ph2">`style`</ph>包含<ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType&gt;</ph>旗標。</target>       </trans-unit>
        <trans-unit id="1793" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source><bpt id="p1">*</bpt>digits<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>digits<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="1794" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>A sequence of digits from 0 through 9.</source>
          <target state="translated">從 0 到 9 的數字序列。</target>       </trans-unit>
        <trans-unit id="1795" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source><bpt id="p1">*</bpt>,<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>、<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="1796" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>A culture-specific group separator.</source>
          <target state="translated">特定文化特性的群組分隔符號。</target>       </trans-unit>
        <trans-unit id="1797" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>The group separator of the culture specified by <ph id="ph1">`provider`</ph> can appear in <ph id="ph2">`value`</ph> if <ph id="ph3">`style`</ph> includes the <ph id="ph4">&lt;xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">所指定的文化特性的群組分隔符號<ph id="ph1">`provider`</ph>可以出現在<ph id="ph2">`value`</ph>如果<ph id="ph3">`style`</ph>包含<ph id="ph4">&lt;xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType&gt;</ph>旗標。</target>       </trans-unit>
        <trans-unit id="1798" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source><bpt id="p1">*</bpt>.<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>.<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="1799" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>A culture-specific decimal point symbol.</source>
          <target state="translated">特定文化特性的小數點符號。</target>       </trans-unit>
        <trans-unit id="1800" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>The decimal point symbol of the culture specified by <ph id="ph1">`provider`</ph> can appear in <ph id="ph2">`value`</ph> if <ph id="ph3">`style`</ph> includes the <ph id="ph4">&lt;xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">所指定的文化特性的小數點符號<ph id="ph1">`provider`</ph>可以出現在<ph id="ph2">`value`</ph>如果<ph id="ph3">`style`</ph>包含<ph id="ph4">&lt;xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType&gt;</ph>旗標。</target>       </trans-unit>
        <trans-unit id="1801" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source><bpt id="p1">*</bpt>fractional_digits<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>fractional_digits<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="1802" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>One or more occurrences of the digit 0.</source>
          <target state="translated">數字 0 的一或多個項目。</target>       </trans-unit>
        <trans-unit id="1803" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>Fractional digits can appear in <ph id="ph1">`value`</ph> only if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">小數點後數字才會出現在<ph id="ph1">`value`</ph>才<ph id="ph2">`style`</ph>包含<ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType&gt;</ph>旗標。</target>       </trans-unit>
        <trans-unit id="1804" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>E</source>
          <target state="translated">E</target>       </trans-unit>
        <trans-unit id="1805" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>The "e" or "E" character, which indicates that the value is represented in exponential (scientific) notation.</source>
          <target state="translated">"E"或者"E"字元，表示此值會表示指數 （科學記號） 表示法。</target>       </trans-unit>
        <trans-unit id="1806" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>The <ph id="ph1">`value`</ph> parameter can represent a number in exponential notation if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated"><ph id="ph1">`value`</ph>參數可代表指數標記法之數字，如果<ph id="ph2">`style`</ph>包含<ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType&gt;</ph>旗標。</target>       </trans-unit>
        <trans-unit id="1807" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source><bpt id="p1">*</bpt>exponential_digits<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>exponential_digits<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="1808" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>A sequence of digits from 0 through 9.</source>
          <target state="translated">從 0 到 9 的數字序列。</target>       </trans-unit>
        <trans-unit id="1809" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>The <ph id="ph1">`value`</ph> parameter can represent a number in exponential notation if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated"><ph id="ph1">`value`</ph>參數可代表指數標記法之數字，如果<ph id="ph2">`style`</ph>包含<ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType&gt;</ph>旗標。</target>       </trans-unit>
        <trans-unit id="1810" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source><bpt id="p1">*</bpt>hexdigits<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>hexdigits<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="1811" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>A sequence of hexadecimal digits from 0 through f, or 0 through F.</source>
          <target state="translated">從 0 到 f 或 0 到 f 的十六進位數字的序列</target>       </trans-unit>
        <trans-unit id="1812" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>A string with decimal digits only (which corresponds to the <ph id="ph1">&lt;xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType&gt;</ph> flag) always parses successfully.</source>
          <target state="translated">十進位數字的字串 (對應於<ph id="ph1">&lt;xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType&gt;</ph>旗標) 一律會成功剖析。</target>       </trans-unit>
        <trans-unit id="1813" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>Most of the remaining <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> members control elements that may be present, but are not required to be present, in this input string.</source>
          <target state="translated">在其餘的大部分<ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph>成員控制可能存在，但不一定要在此輸入字串中出現的項目。</target>       </trans-unit>
        <trans-unit id="1814" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>The following table indicates how individual <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> members affect the elements that may be present in <ph id="ph2">`value`</ph>.</source>
          <target state="translated">下表指出如何個別<ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph>成員會影響的項目可能會出現在<ph id="ph2">`value`</ph>。</target>       </trans-unit>
        <trans-unit id="1815" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>Non-composite <ph id="ph1">`NumberStyles`</ph> values</source>
          <target state="translated">非複合<ph id="ph1">`NumberStyles`</ph>值</target>       </trans-unit>
        <trans-unit id="1816" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>Elements permitted in value in addition to digits</source>
          <target state="translated">除了數字的值中允許的項目</target>       </trans-unit>
        <trans-unit id="1817" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>Decimal digits only.</source>
          <target state="translated">只有十進位數字。</target>       </trans-unit>
        <trans-unit id="1818" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>The decimal point (<bpt id="p1">*</bpt>.<ept id="p1">*</ept>) and <bpt id="p2">*</bpt>fractional_digits<ept id="p2">*</ept> elements.</source>
          <target state="translated">小數點 (<bpt id="p1">*</bpt>。<ept id="p1">*</ept>) 和<bpt id="p2">*</bpt>fractional_digits<ept id="p2">*</ept>項目。</target>       </trans-unit>
        <trans-unit id="1819" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>However, <bpt id="p1">*</bpt>fractional_digits<ept id="p1">*</ept> must consist of only one or more 0 digits, or the method returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">不過， <bpt id="p1">*</bpt>fractional_digits<ept id="p1">*</ept>必須包含只需要一個或多個 0 的數字或方法傳回<ph id="ph1">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="1820" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>The "e" or "E" character, which indicates exponential notation, along with <bpt id="p1">*</bpt>exponential_digits<ept id="p1">*</ept>.</source>
          <target state="translated">"E"或"E"字元，表示指數標記法，連同<bpt id="p1">*</bpt>exponential_digits<ept id="p1">*</ept>。</target>       </trans-unit>
        <trans-unit id="1821" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>If <ph id="ph1">`value`</ph> represents a number in exponential notation, it cannot have a non-zero, fractional component.</source>
          <target state="translated">如果<ph id="ph1">`value`</ph>代表一個數字以指數標記法，它不能有非零的小數的元件。</target>       </trans-unit>
        <trans-unit id="1822" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>The <bpt id="p1">*</bpt>ws<ept id="p1">*</ept> element at the start of <ph id="ph1">`value`</ph>.</source>
          <target state="translated"><bpt id="p1">*</bpt>Ws<ept id="p1">*</ept>開頭的項目<ph id="ph1">`value`</ph>。</target>       </trans-unit>
        <trans-unit id="1823" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>The <bpt id="p1">*</bpt>ws<ept id="p1">*</ept> element at the end of <ph id="ph1">`value`</ph>.</source>
          <target state="translated"><bpt id="p1">*</bpt>Ws<ept id="p1">*</ept>結尾處的項目<ph id="ph1">`value`</ph>。</target>       </trans-unit>
        <trans-unit id="1824" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>The <bpt id="p1">*</bpt>sign<ept id="p1">*</ept> element before <bpt id="p2">*</bpt>digits<ept id="p2">*</ept>.</source>
          <target state="translated"><bpt id="p1">*</bpt>登<ept id="p1">*</ept>之前的項目<bpt id="p2">*</bpt>位數<ept id="p2">*</ept>。</target>       </trans-unit>
        <trans-unit id="1825" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>The <bpt id="p1">*</bpt>sign<ept id="p1">*</ept> element after <bpt id="p2">*</bpt>digits<ept id="p2">*</ept>.</source>
          <target state="translated"><bpt id="p1">*</bpt>登<ept id="p1">*</ept>之後的項目<bpt id="p2">*</bpt>位數<ept id="p2">*</ept>。</target>       </trans-unit>
        <trans-unit id="1826" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>The <bpt id="p1">*</bpt>sign<ept id="p1">*</ept> element in the form of parentheses enclosing the numeric value.</source>
          <target state="translated"><bpt id="p1">*</bpt>登<ept id="p1">*</ept>括住的數字值的形式的項目。</target>       </trans-unit>
        <trans-unit id="1827" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>The group separator (<bpt id="p1">*</bpt>,<ept id="p1">*</ept>) element.</source>
          <target state="translated">群組分隔符號 (<bpt id="p1">*</bpt>，<ept id="p1">*</ept>) 項目。</target>       </trans-unit>
        <trans-unit id="1828" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>The currency (<bpt id="p1">*</bpt><ph id="ph1">$</ph><ept id="p1">*</ept>) element.</source>
          <target state="translated">貨幣 (<bpt id="p1">*</bpt><ph id="ph1">$</ph><ept id="p1">*</ept>) 項目。</target>       </trans-unit>
        <trans-unit id="1829" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>All elements.</source>
          <target state="translated">所有項目。</target>       </trans-unit>
        <trans-unit id="1830" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>However, <ph id="ph1">`value`</ph> cannot represent a hexadecimal number or a number in exponential notation.</source>
          <target state="translated">不過，<ph id="ph1">`value`</ph>無法表示的十六進位數字或指數標記法之數字。</target>       </trans-unit>
        <trans-unit id="1831" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>The <bpt id="p1">*</bpt>ws<ept id="p1">*</ept> element at the start or end of <ph id="ph1">`value`</ph>, <bpt id="p2">*</bpt>sign<ept id="p2">*</ept> at the start of <ph id="ph2">`value`</ph>, and the decimal point (<bpt id="p3">*</bpt>.<ept id="p3">*</ept>) symbol.</source>
          <target state="translated"><bpt id="p1">*</bpt>Ws<ept id="p1">*</ept>開頭或結尾的項目<ph id="ph1">`value`</ph>，<bpt id="p2">*</bpt>登<ept id="p2">*</ept>開頭<ph id="ph2">`value`</ph>，並在小數點 (<bpt id="p3">*</bpt>。<ept id="p3">*</ept>) 符號。</target>       </trans-unit>
        <trans-unit id="1832" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>The <ph id="ph1">`value`</ph> parameter can also use exponential notation.</source>
          <target state="translated"><ph id="ph1">`value`</ph>參數也可以使用指數標記法。</target>       </trans-unit>
        <trans-unit id="1833" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>The <bpt id="p1">*</bpt>ws<ept id="p1">*</ept>, <bpt id="p2">*</bpt>sign<ept id="p2">*</ept>, group separator (<bpt id="p3">*</bpt>,<ept id="p3">*</ept>), and decimal point (<bpt id="p4">*</bpt>.<ept id="p4">*</ept>) elements.</source>
          <target state="translated"><bpt id="p1">*</bpt>Ws<ept id="p1">*</ept>，<bpt id="p2">*</bpt>登<ept id="p2">*</ept>、 群組分隔符號 (<bpt id="p3">*</bpt>，<ept id="p3">*</ept>)，和小數點 (<bpt id="p4">*</bpt>。<ept id="p4">*</ept>) 項目。</target>       </trans-unit>
        <trans-unit id="1834" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>All elements.</source>
          <target state="translated">所有項目。</target>       </trans-unit>
        <trans-unit id="1835" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>However, <ph id="ph1">`value`</ph> cannot represent a hexadecimal number.</source>
          <target state="translated">不過，<ph id="ph1">`value`</ph>無法表示的十六進位數字。</target>       </trans-unit>
        <trans-unit id="1836" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>If you use the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.TryParse%2A&gt;</ph> method to round-trip the string representation of a <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value that was output by the <ph id="ph3">&lt;xref:System.Numerics.BigInteger.ToString%2A&gt;</ph> method, you should use the <ph id="ph4">&lt;xref:System.Numerics.BigInteger.ToString%28System.String%29?displayProperty=nameWithType&gt;</ph> method with the "R" format specifier to generate the string representation of the <ph id="ph5">&lt;xref:System.Numerics.BigInteger&gt;</ph> value.</source>
          <target state="translated">如果您使用<ph id="ph1">&lt;xref:System.Numerics.BigInteger.TryParse%2A&gt;</ph>方法，以往返的字串表示的<ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph>所輸出的值<ph id="ph3">&lt;xref:System.Numerics.BigInteger.ToString%2A&gt;</ph>方法，您應該使用<ph id="ph4">&lt;xref:System.Numerics.BigInteger.ToString%28System.String%29?displayProperty=nameWithType&gt;</ph>使用"R"格式規範產生的字串表示的方法<ph id="ph5">&lt;xref:System.Numerics.BigInteger&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="1837" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>Otherwise, the string representation of the <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> preserves only the 50 most significant digits of the original value, and data may be lost when you use the <ph id="ph2">&lt;xref:System.Numerics.BigInteger.TryParse%2A&gt;</ph> method to restore the <ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph> value.</source>
          <target state="translated">否則的字串表示<ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>50 大部分的有效位數的資料與原始值，可能會遺失使用時只會保留<ph id="ph2">&lt;xref:System.Numerics.BigInteger.TryParse%2A&gt;</ph>方法還原<ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="1838" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>If the <ph id="ph1">&lt;xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType&gt;</ph> flag is used, <ph id="ph2">`value`</ph> must be a hexadecimal value.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType&gt;</ph>使用旗標，<ph id="ph2">`value`</ph>必須是十六進位值。</target>       </trans-unit>
        <trans-unit id="1839" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>The only other flags that can be present in <ph id="ph1">`style`</ph> are <ph id="ph2">&lt;xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType&gt;</ph> and <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">只有其他旗標中可以存在<ph id="ph1">`style`</ph>是<ph id="ph2">&lt;xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType&gt;</ph>和<ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1840" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>(The <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> enumeration has a composite style, <ph id="ph2">&lt;xref:System.Globalization.NumberStyles.HexNumber&gt;</ph>, that includes both white-space flags.)</source>
          <target state="translated">(<ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph>列舉型別的複合樣式<ph id="ph2">&lt;xref:System.Globalization.NumberStyles.HexNumber&gt;</ph>，其中包含這兩個空格旗標。)</target>       </trans-unit>
        <trans-unit id="1841" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>If <ph id="ph1">`value`</ph> is the string representation of a hexadecimal number, it cannot be preceded by any decoration (such as <ph id="ph2">`0x`</ph> or <ph id="ph3">`&amp;h`</ph>) that differentiates it as a hexadecimal number.</source>
          <target state="translated">如果<ph id="ph1">`value`</ph>的字串表示法的十六進位數字，它無法前面的任何裝飾 (例如<ph id="ph2">`0x`</ph>或<ph id="ph3">`&amp;h`</ph>)，區隔其十六進位數字。</target>       </trans-unit>
        <trans-unit id="1842" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>This causes the conversion to fail.</source>
          <target state="translated">這會導致轉換失敗。</target>       </trans-unit>
        <trans-unit id="1843" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>If <ph id="ph1">`value`</ph> is a hexadecimal string, the <ph id="ph2">&lt;xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Numerics.BigInteger%40%29&gt;</ph> method interprets <ph id="ph3">`value`</ph> as a negative number stored by using two's complement representation if its first two hexadecimal digits are greater than or equal to <ph id="ph4">`0x80`</ph>.</source>
          <target state="translated">如果<ph id="ph1">`value`</ph>為十六進位的字串，<ph id="ph2">&lt;xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Numerics.BigInteger%40%29&gt;</ph>方法解譯<ph id="ph3">`value`</ph>負數儲存使用二的補數表示，如果其前兩個十六進位數字會大於或等於<ph id="ph4">`0x80`</ph>。</target>       </trans-unit>
        <trans-unit id="1844" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>In other words, the method interprets the highest-order bit of the first byte in <ph id="ph1">`value`</ph> as the sign bit.</source>
          <target state="translated">換句話說，方法會解譯中的第一個位元組的最高序位位元<ph id="ph1">`value`</ph>做為正負號位元。</target>       </trans-unit>
        <trans-unit id="1845" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>To make sure that a hexadecimal string is correctly interpreted as a positive number, the first digit in <ph id="ph1">`value`</ph> must have a value of zero.</source>
          <target state="translated">若要確定為十六進位字串已正確解譯為正數中的第一個數字<ph id="ph1">`value`</ph>必須具有值為零。</target>       </trans-unit>
        <trans-unit id="1846" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>For example, the method interprets <ph id="ph1">`0x80`</ph> as a negative value, but it interprets either <ph id="ph2">`0x080`</ph> or <ph id="ph3">`0x0080`</ph> as a positive value.</source>
          <target state="translated">例如，方法會將解譯<ph id="ph1">`0x80`</ph>為負值，但是它會解譯 <ph id="ph2">`0x080`</ph>或<ph id="ph3">`0x0080`</ph>為正值。</target>       </trans-unit>
        <trans-unit id="1847" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>The following example illustrates the difference between hexadecimal strings that represent negative and positive values.</source>
          <target state="translated">下列範例說明代表及負數值的十六進位字串之間的差異。</target>       </trans-unit>
        <trans-unit id="1848" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>The <ph id="ph1">`provider`</ph> parameter is an <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> implementation.</source>
          <target state="translated"><ph id="ph1">`provider`</ph>參數是<ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph>實作。</target>       </trans-unit>
        <trans-unit id="1849" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>Its <ph id="ph1">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> method returns a <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that provides culture-specific information about the format of <ph id="ph3">`value`</ph>.</source>
          <target state="translated">其<ph id="ph1">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph>方法會傳回<ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>物件，提供特定文化特性格式資訊<ph id="ph3">`value`</ph>。</target>       </trans-unit>
        <trans-unit id="1850" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>The <ph id="ph1">`provider`</ph> parameter can be any one of the following:</source>
          <target state="translated"><ph id="ph1">`provider`</ph>參數可以是下列任何一個：</target>       </trans-unit>
        <trans-unit id="1851" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>A <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object that represents the culture that supplies formatting information.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph>代表的文化特性，提供格式設定資訊的物件。</target>       </trans-unit>
        <trans-unit id="1852" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>Its <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.GetFormat%2A&gt;</ph> method returns the <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that provides numeric formatting information for that culture.</source>
          <target state="translated">其<ph id="ph1">&lt;xref:System.Globalization.CultureInfo.GetFormat%2A&gt;</ph>方法會傳回<ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>提供該文化特性的數值格式設定資訊的物件。</target>       </trans-unit>
        <trans-unit id="1853" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>A <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that provides numeric formatting information.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>提供數值格式設定資訊的物件。</target>       </trans-unit>
        <trans-unit id="1854" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>(Its implementation of <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.GetFormat%2A&gt;</ph> just returns itself.)</source>
          <target state="translated">(它的實作<ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.GetFormat%2A&gt;</ph>只會傳回本身。)</target>       </trans-unit>
        <trans-unit id="1855" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>A custom object that implements <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph>.</source>
          <target state="translated">自訂物件實作<ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1856" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>Its <ph id="ph1">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> method instantiates and returns the <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that provides formatting information.</source>
          <target state="translated">其<ph id="ph1">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph>方法具現化，並傳回<ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>提供格式設定資訊的物件。</target>       </trans-unit>
        <trans-unit id="1857" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>If <ph id="ph1">`provider`</ph> is <ph id="ph2">`null`</ph>, the <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object for the current culture is used.</source>
          <target state="translated">如果<ph id="ph1">`provider`</ph>是<ph id="ph2">`null`</ph>、<ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>物件會使用目前文化特性。</target>       </trans-unit>
        <trans-unit id="1858" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>The following example makes some calls to the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Numerics.BigInteger%40%29&gt;</ph> method using various combinations of values for the <ph id="ph2">`style`</ph> and <ph id="ph3">`provider`</ph> parameters.</source>
          <target state="translated">下列範例使某些呼叫<ph id="ph1">&lt;xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Numerics.BigInteger%40%29&gt;</ph>方法使用不同的值組合<ph id="ph2">`style`</ph>和<ph id="ph3">`provider`</ph>參數。</target>       </trans-unit>
        <trans-unit id="1859" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>A number of the individual calls to the <ph id="ph1">&lt;xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Numerics.BigInteger%40%29&gt;</ph> method pass an instance of the following <ph id="ph2">`BigIntegerFormatProvider`</ph> class, which defines a tilde (~) as the negative sign.</source>
          <target state="translated">個別呼叫程序數<ph id="ph1">&lt;xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Numerics.BigInteger%40%29&gt;</ph>方法傳遞執行個體的下列<ph id="ph2">`BigIntegerFormatProvider`</ph>類別，定義為負號波狀符號 （~）。</target>       </trans-unit>
        <trans-unit id="1860" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source><ph id="ph1">&lt;paramref name="style" /&gt;</ph> is not a <ph id="ph2">&lt;see cref="T:System.Globalization.NumberStyles" /&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="style" /&gt;</ph> 不是 <ph id="ph2">&lt;see cref="T:System.Globalization.NumberStyles" /&gt;</ph> 值。</target>       </trans-unit>
        <trans-unit id="1861" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="1862" translate="yes" xml:space="preserve" uid="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)">
          <source><ph id="ph1">&lt;paramref name="style" /&gt;</ph> includes the <ph id="ph2">&lt;see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /&gt;</ph> or <ph id="ph3">&lt;see cref="F:System.Globalization.NumberStyles.HexNumber" /&gt;</ph> flag along with another value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="style" /&gt;</ph> 包含 <ph id="ph2">&lt;see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /&gt;</ph> 或 <ph id="ph3">&lt;see cref="F:System.Globalization.NumberStyles.HexNumber" /&gt;</ph> 旗標和其他值。</target>       </trans-unit>
        <trans-unit id="1863" translate="yes" xml:space="preserve" uid="P:System.Numerics.BigInteger.Zero">
          <source>Gets a value that represents the number 0 (zero).</source>
          <target state="translated">取得表示數字 0 (零) 的值。</target>       </trans-unit>
        <trans-unit id="1864" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.BigInteger.Zero">
          <source>An integer whose value is 0 (zero).</source>
          <target state="translated">值為 0 (零) 的整數。</target>       </trans-unit>
        <trans-unit id="1865" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.BigInteger.Zero">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> object returned by this property provides a convenient source of a zero value for use in assignments and comparisons.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph>指派和比較中使用這個屬性所傳回的物件提供方便零值的來源。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>