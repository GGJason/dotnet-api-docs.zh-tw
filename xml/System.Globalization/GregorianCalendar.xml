<Type Name="GregorianCalendar" FullName="System.Globalization.GregorianCalendar">
  <TypeSignature Language="C#" Value="public class GregorianCalendar : System.Globalization.Calendar" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit GregorianCalendar extends System.Globalization.Calendar" />
  <TypeSignature Language="DocId" Value="T:System.Globalization.GregorianCalendar" />
  <TypeSignature Language="VB.NET" Value="Public Class GregorianCalendar&#xA;Inherits Calendar" />
  <TypeSignature Language="C++ CLI" Value="public ref class GregorianCalendar : System::Globalization::Calendar" />
  <AssemblyInfo>
    <AssemblyName>System.Globalization.Calendars</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Globalization.Calendar</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="4566f-101">代表西曆。</span><span class="sxs-lookup"><span data-stu-id="4566f-101">Represents the Gregorian calendar.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4566f-102">西曆辨識兩個紀元： b.c.</span><span class="sxs-lookup"><span data-stu-id="4566f-102">The Gregorian calendar recognizes two eras: B.C.</span></span> <span data-ttu-id="4566f-103">西元前或 A.D.。</span><span class="sxs-lookup"><span data-stu-id="4566f-103">or B.C.E., and A.D.</span></span> <span data-ttu-id="4566f-104">或西元</span><span class="sxs-lookup"><span data-stu-id="4566f-104">or C.E.</span></span> <span data-ttu-id="4566f-105">這項實作<xref:System.Globalization.GregorianCalendar>類別能夠辨識只有目前紀元 (A.D.。</span><span class="sxs-lookup"><span data-stu-id="4566f-105">This implementation of the <xref:System.Globalization.GregorianCalendar> class recognizes only the current era (A.D.</span></span> <span data-ttu-id="4566f-106">或西元）。</span><span class="sxs-lookup"><span data-stu-id="4566f-106">or C.E.).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4566f-107">如需使用<xref:System.Globalization.GregorianCalendar>類別和其他的行事曆 .NET Framework 中的類別，請參閱[使用行事曆](~/docs/standard/datetime/working-with-calendars.md)。</span><span class="sxs-lookup"><span data-stu-id="4566f-107">For information about using the <xref:System.Globalization.GregorianCalendar> class and the other calendar classes in the .NET Framework, see [Working with Calendars](~/docs/standard/datetime/working-with-calendars.md).</span></span>  
  
 <span data-ttu-id="4566f-108">閏年西曆中定義為是除以 4，除非它是整除 100 年。</span><span class="sxs-lookup"><span data-stu-id="4566f-108">A leap year in the Gregorian calendar is defined as a year that is evenly divisible by 4, unless it is divisible by 100.</span></span> <span data-ttu-id="4566f-109">不過，400 所整除的年都是閏年。</span><span class="sxs-lookup"><span data-stu-id="4566f-109">However, years that are divisible by 400 are leap years.</span></span> <span data-ttu-id="4566f-110">例如，1900 年不為閏年，但 2000 年。</span><span class="sxs-lookup"><span data-stu-id="4566f-110">For example, the year 1900 was not a leap year, but the year 2000 was.</span></span> <span data-ttu-id="4566f-111">一般年份有 365 天，閏年有 366 天。</span><span class="sxs-lookup"><span data-stu-id="4566f-111">A common year has 365 days and a leap year has 366 days.</span></span>  
  
 <span data-ttu-id="4566f-112">西曆已有 28 到 31 天每 12 個月： 年 1 月 （31 天）、 2 (28 或 29 天)，年 3 月 （31 天）、 年 4 月 （30 天），可能 （31 天），年 6 月 （30 天）、 年 7 月 （31 天）、 年 8 月 （31 天）、 年 9 月 （30 天）、 年 10 月 （31 天），年 11 月 （30 天）與年 12 月 （31 天）。</span><span class="sxs-lookup"><span data-stu-id="4566f-112">The Gregorian calendar has 12 months with 28 to 31 days each: January (31 days), February (28 or 29 days), March (31 days), April (30 days), May (31 days), June (30 days), July (31 days), August (31 days), September (30 days), October (31 days), November (30 days), and December (31 days).</span></span> <span data-ttu-id="4566f-113">二月有 29 天，閏年和 28。</span><span class="sxs-lookup"><span data-stu-id="4566f-113">February has 29 days during leap years and 28 during common years.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="4566f-114">根據預設，所有<xref:System.DateTime>和<xref:System.DateTimeOffset>值 express 中西曆日期和時間。</span><span class="sxs-lookup"><span data-stu-id="4566f-114">By default, all <xref:System.DateTime> and <xref:System.DateTimeOffset> values express dates and times in the Gregorian calendar.</span></span>  
  
 <span data-ttu-id="4566f-115">西曆凱撒曆法的取代項目以進行開發 (這由<xref:System.Globalization.JulianCalendar>類別)，引進少量的文化特性，1582 年 10 月 15 號上。</span><span class="sxs-lookup"><span data-stu-id="4566f-115">The Gregorian calendar was developed as a replacement for the Julian calendar (which is represented by the <xref:System.Globalization.JulianCalendar> class) and was first introduced in a small number of cultures on October 15, 1582.</span></span> <span data-ttu-id="4566f-116">當使用前面的文化特性採用西曆的歷程記錄日期，您應該使用原始的行事曆，如果它是.NET Framework 中可用。</span><span class="sxs-lookup"><span data-stu-id="4566f-116">When working with historic dates that precede a culture's adoption of the Gregorian calendar, you should use the original calendar if it is available in the .NET Framework.</span></span> <span data-ttu-id="4566f-117">例如，丹麥從變更凱撒曆法為西曆日曆年 2 月 19 （在凱撒曆） 或月 1 日 （西曆） 中的 1700年。</span><span class="sxs-lookup"><span data-stu-id="4566f-117">For example, Denmark changed from the Julian calendar to the Gregorian calendar on February 19 (in the Julian calendar) or March 1 (in the Gregorian calendar) of 1700.</span></span> <span data-ttu-id="4566f-118">在此情況下，如之前採用西曆日期，您應該使用凱撒曆法。</span><span class="sxs-lookup"><span data-stu-id="4566f-118">In this case, for dates before the adoption of the Gregorian calendar, you should use the Julian calendar.</span></span> <span data-ttu-id="4566f-119">不過，請注意沒有的文化特性提供的內建支援<xref:System.Globalization.JulianCalendar>類別。</span><span class="sxs-lookup"><span data-stu-id="4566f-119">However, note that no culture offers intrinsic support for the <xref:System.Globalization.JulianCalendar> class.</span></span> <span data-ttu-id="4566f-120">您必須使用<xref:System.Globalization.JulianCalendar>類別做為獨立曆法。</span><span class="sxs-lookup"><span data-stu-id="4566f-120">You must use the <xref:System.Globalization.JulianCalendar> class as a standalone calendar.</span></span> <span data-ttu-id="4566f-121">如需詳細資訊，請參閱 。</span><span class="sxs-lookup"><span data-stu-id="4566f-121">For more information, see .</span></span>  
  
 <span data-ttu-id="4566f-122">下列範例說明 1700 年 2 月 18，即可使用凱撒曆法，也就是最後一天中丹麥正式使用凱撒曆法是早於 1700 年 3 月 1，西曆中的一天。</span><span class="sxs-lookup"><span data-stu-id="4566f-122">The following example illustrates that February 18, 1700 in the Julian calendar, which is the last day the Julian calendar was officially used in Denmark, is one day earlier than March 1, 1700 in the Gregorian calendar.</span></span>  
  
 [!code-csharp[System.Globalization.GregorianCalendar.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.gregoriancalendar.class/cs/minimum1.cs#1)]
 [!code-vb[System.Globalization.GregorianCalendar.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.gregoriancalendar.class/vb/minimum1.vb#1)]  
  
 <span data-ttu-id="4566f-123">每個<xref:System.Globalization.CultureInfo>支援一組的行事曆。</span><span class="sxs-lookup"><span data-stu-id="4566f-123">Each <xref:System.Globalization.CultureInfo> supports a set of calendars.</span></span> <span data-ttu-id="4566f-124"><xref:System.Globalization.CultureInfo.Calendar%2A>屬性會傳回預設的行事曆文化特性，而<xref:System.Globalization.CultureInfo.OptionalCalendars%2A>屬性會傳回陣列，其中包含所有支援的文化特性的行事曆。</span><span class="sxs-lookup"><span data-stu-id="4566f-124">The <xref:System.Globalization.CultureInfo.Calendar%2A> property returns the default calendar for the culture, and the <xref:System.Globalization.CultureInfo.OptionalCalendars%2A> property returns an array containing all the calendars supported by the culture.</span></span> <span data-ttu-id="4566f-125">若要變更所使用的行事曆<xref:System.Globalization.CultureInfo>，應用程式可以設定<xref:System.Globalization.DateTimeFormatInfo.Calendar%2A>屬性至新<xref:System.Globalization.Calendar>。</span><span class="sxs-lookup"><span data-stu-id="4566f-125">To change the calendar used by a <xref:System.Globalization.CultureInfo>, the application can set the <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> property to a new <xref:System.Globalization.Calendar>.</span></span>  
  
 <span data-ttu-id="4566f-126"><xref:System.Globalization.DateTimeFormatInfo.GetEra%2A> 會忽略標點符號紀元縮寫的名稱中，只有當<xref:System.Globalization.GregorianCalendar>中選取<xref:System.Globalization.DateTimeFormatInfo.Calendar%2A?displayProperty=nameWithType>和文化特性使用"A.D.。 」</span><span class="sxs-lookup"><span data-stu-id="4566f-126"><xref:System.Globalization.DateTimeFormatInfo.GetEra%2A> ignores punctuation in abbreviated era names, only if the <xref:System.Globalization.GregorianCalendar> is selected in <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A?displayProperty=nameWithType> and the culture uses "A.D."</span></span> <span data-ttu-id="4566f-127">為紀元名稱時，也就是 「 A.D.。 」</span><span class="sxs-lookup"><span data-stu-id="4566f-127">as the era name, that is, "A.D."</span></span> <span data-ttu-id="4566f-128">相當於"AD"。</span><span class="sxs-lookup"><span data-stu-id="4566f-128">is equivalent to "AD".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4566f-129">下列程式碼範例顯示<xref:System.Globalization.DateTimeFormatInfo>行事曆是西曆和文化特性使用紀元名稱"A.D.」 時，才會忽略在紀元名稱的標點符號。</span><span class="sxs-lookup"><span data-stu-id="4566f-129">The following code example shows that <xref:System.Globalization.DateTimeFormatInfo> ignores the punctuation in the era name, only if the calendar is Gregorian and the culture uses the era name "A.D.".</span></span>  
  
 [!code-cpp[System.Globalization.GregorianCalendar.GetEra#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar.GetEra/CPP/gregorian_getera.cpp#1)]
 [!code-csharp[System.Globalization.GregorianCalendar.GetEra#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar.GetEra/CS/gregorian_getera.cs#1)]
 [!code-vb[System.Globalization.GregorianCalendar.GetEra#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar.GetEra/VB/gregorian_getera.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Globalization.Calendar" />
    <altmember cref="P:System.Globalization.CultureInfo.Calendar" />
    <altmember cref="P:System.Globalization.CultureInfo.OptionalCalendars" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4566f-130">初始化 <see cref="T:System.Globalization.GregorianCalendar" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="4566f-130">Initializes a new instance of the <see cref="T:System.Globalization.GregorianCalendar" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GregorianCalendar ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.GregorianCalendar.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GregorianCalendar();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4566f-131">使用預設的 <see cref="T:System.Globalization.GregorianCalendar" /> 值來初始化 <see cref="T:System.Globalization.GregorianCalendarTypes" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="4566f-131">Initializes a new instance of the <see cref="T:System.Globalization.GregorianCalendar" /> class using the default <see cref="T:System.Globalization.GregorianCalendarTypes" /> value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4566f-132">預設值<xref:System.Globalization.GregorianCalendarTypes>值是<xref:System.Globalization.GregorianCalendarTypes.Localized>。</span><span class="sxs-lookup"><span data-stu-id="4566f-132">The default <xref:System.Globalization.GregorianCalendarTypes> value is <xref:System.Globalization.GregorianCalendarTypes.Localized>.</span></span> <span data-ttu-id="4566f-133">如果<xref:System.Globalization.DateTimeFormatInfo.Calendar%2A?displayProperty=nameWithType>屬性<xref:System.Globalization.CultureInfo>設<xref:System.Globalization.GregorianCalendar>使用這個建構函式所建立、 日期和時間會與相關聯的語言當地語系化<xref:System.Globalization.CultureInfo>。</span><span class="sxs-lookup"><span data-stu-id="4566f-133">If the <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A?displayProperty=nameWithType> property of the <xref:System.Globalization.CultureInfo> is set to a <xref:System.Globalization.GregorianCalendar> that is created with this constructor, the dates and times are localized in the language associated with the <xref:System.Globalization.CultureInfo>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4566f-134">下列程式碼範例會列印<xref:System.DateTime>使用<xref:System.Globalization.GregorianCalendar>會當地語系化。</span><span class="sxs-lookup"><span data-stu-id="4566f-134">The following code example prints a <xref:System.DateTime> using a <xref:System.Globalization.GregorianCalendar> that is localized.</span></span>  
  
 [!code-cpp[System.Globalization.GregorianCalendarLocalized#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.GregorianCalendarLocalized/CPP/gregorianlocalized.cpp#1)]
 [!code-csharp[System.Globalization.GregorianCalendarLocalized#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.GregorianCalendarLocalized/CS/gregorianlocalized.cs#1)]
 [!code-vb[System.Globalization.GregorianCalendarLocalized#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.GregorianCalendarLocalized/VB/gregorianlocalized.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.GregorianCalendarTypes" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GregorianCalendar (System.Globalization.GregorianCalendarTypes type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Globalization.GregorianCalendarTypes type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.GregorianCalendar.#ctor(System.Globalization.GregorianCalendarTypes)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (type As GregorianCalendarTypes)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GregorianCalendar(System::Globalization::GregorianCalendarTypes type);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Globalization.GregorianCalendarTypes" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="4566f-135"><see cref="T:System.Globalization.GregorianCalendarTypes" /> 值，代表要建立曆法的哪個語言版本。</span><span class="sxs-lookup"><span data-stu-id="4566f-135">The <see cref="T:System.Globalization.GregorianCalendarTypes" /> value that denotes which language version of the calendar to create.</span></span></param>
        <summary><span data-ttu-id="4566f-136">使用指定的 <see cref="T:System.Globalization.GregorianCalendar" /> 值來初始化 <see cref="T:System.Globalization.GregorianCalendarTypes" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="4566f-136">Initializes a new instance of the <see cref="T:System.Globalization.GregorianCalendar" /> class using the specified <see cref="T:System.Globalization.GregorianCalendarTypes" /> value.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4566f-137"><paramref name="type" /> 不是 <see cref="T:System.Globalization.GregorianCalendarTypes" /> 列舉型別的成員。</span><span class="sxs-lookup"><span data-stu-id="4566f-137"><paramref name="type" /> is not a member of the <see cref="T:System.Globalization.GregorianCalendarTypes" /> enumeration.</span></span></exception>
        <altmember cref="T:System.Globalization.GregorianCalendarTypes" />
      </Docs>
    </Member>
    <Member MemberName="AddMonths">
      <MemberSignature Language="C#" Value="public override DateTime AddMonths (DateTime time, int months);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.DateTime AddMonths(valuetype System.DateTime time, int32 months) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.GregorianCalendar.AddMonths(System.DateTime,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function AddMonths (time As DateTime, months As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override DateTime AddMonths(DateTime time, int months);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
        <Parameter Name="months" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="time"><span data-ttu-id="4566f-138">要將月份加入的 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="4566f-138">The <see cref="T:System.DateTime" /> to which to add months.</span></span></param>
        <param name="months"><span data-ttu-id="4566f-139">要加入的月數。</span><span class="sxs-lookup"><span data-stu-id="4566f-139">The number of months to add.</span></span></param>
        <summary><span data-ttu-id="4566f-140">傳回與指定 <see cref="T:System.DateTime" /> 相差指定月數的 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="4566f-140">Returns a <see cref="T:System.DateTime" /> that is the specified number of months away from the specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="4566f-141"><see cref="T:System.DateTime" />，由將指定的月數加入指定的 <see cref="T:System.DateTime" /> 所產生。</span><span class="sxs-lookup"><span data-stu-id="4566f-141">The <see cref="T:System.DateTime" /> that results from adding the specified number of months to the specified <see cref="T:System.DateTime" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4566f-142">產生的日期部分<xref:System.DateTime>如果產生的日期不是有效的日期，產生結果年的月份中會受到影響。</span><span class="sxs-lookup"><span data-stu-id="4566f-142">The day part of the resulting <xref:System.DateTime> is affected if the resulting day is not a valid day in the resulting month of the resulting year.</span></span> <span data-ttu-id="4566f-143">它會變更為有效的最後一天，在產生的產生的年份。</span><span class="sxs-lookup"><span data-stu-id="4566f-143">It is changed to the last valid day in the resulting month of the resulting year.</span></span> <span data-ttu-id="4566f-144">產生的年份部分<xref:System.DateTime>如果產生的月份超出指定的年份，會影響<xref:System.DateTime>。</span><span class="sxs-lookup"><span data-stu-id="4566f-144">The year part of the resulting <xref:System.DateTime> is affected if the resulting month is outside the year of the specified <xref:System.DateTime>.</span></span> <span data-ttu-id="4566f-145">這項實作支援目前的紀元。</span><span class="sxs-lookup"><span data-stu-id="4566f-145">This implementation supports only the current era.</span></span> <span data-ttu-id="4566f-146">因此，<xref:System.ArgumentException>如果產生的年份超出指定紀元，會擲回<xref:System.DateTime>。</span><span class="sxs-lookup"><span data-stu-id="4566f-146">Therefore, <xref:System.ArgumentException> is thrown if the resulting year is outside the era of the specified <xref:System.DateTime>.</span></span> <span data-ttu-id="4566f-147">產生的日期時間部分<xref:System.DateTime>維持不變，與指定<xref:System.DateTime>。</span><span class="sxs-lookup"><span data-stu-id="4566f-147">The time-of-day part of the resulting <xref:System.DateTime> remains the same as the specified <xref:System.DateTime>.</span></span>  
  
 <span data-ttu-id="4566f-148">比方說，如果指定的月份是 10 月 31 天內，其指定的日期，而且該月第 31 天的值`months`參數為 6，產生的年份是其中一個以上的指定年份中，產生的月份是年 4 月，並產生 day 是第 30 天、 4 月的最後一天。</span><span class="sxs-lookup"><span data-stu-id="4566f-148">For example, if the specified month is October, which has 31 days, the specified day is the 31st day of that month, and the value of the `months` parameter is 6, the resulting year is one more than the specified year, the resulting month is April, and the resulting day is the 30th day, which is the last day in April.</span></span>  
  
 <span data-ttu-id="4566f-149">如果值`months`參數是負值，產生<xref:System.DateTime>早於指定<xref:System.DateTime>。</span><span class="sxs-lookup"><span data-stu-id="4566f-149">If the value of the `months` parameter is negative, the resulting <xref:System.DateTime> is earlier than the specified <xref:System.DateTime>.</span></span>  
  
 <span data-ttu-id="4566f-150"><xref:System.DateTime.Kind%2A>屬性傳回之<xref:System.DateTime>值一律等於<xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="4566f-150">The <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value always equals <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>.</span></span> <span data-ttu-id="4566f-151">您可以保留<xref:System.DateTime.Kind%2A>屬性`time`藉由呼叫參數<xref:System.DateTime.SpecifyKind%2A?displayProperty=nameWithType>方法，如下列範例所示。</span><span class="sxs-lookup"><span data-stu-id="4566f-151">You can preserve the <xref:System.DateTime.Kind%2A> property of the `time` parameter by calling the <xref:System.DateTime.SpecifyKind%2A?displayProperty=nameWithType> method, as the following example shows.</span></span>  
  
 [!code-csharp[System.Globalization.Calendar.AddMethods#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/cs/add1.cs#5)]
 [!code-vb[System.Globalization.Calendar.AddMethods#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/vb/add1.vb#5)]  
  
   
  
## Examples  
 <span data-ttu-id="4566f-152">下列程式碼範例顯示的數個元件的值<xref:System.DateTime>方面西曆。</span><span class="sxs-lookup"><span data-stu-id="4566f-152">The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Gregorian calendar.</span></span>  
  
 [!code-cpp[System.Globalization.GregorianCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar_AddGet/CPP/gregoriancalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.GregorianCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar_AddGet/CS/gregoriancalendar_addget.cs#1)]
 [!code-vb[System.Globalization.GregorianCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar_AddGet/VB/gregoriancalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4566f-153">產生的 <see cref="T:System.DateTime" /> 在支援的範圍之外。</span><span class="sxs-lookup"><span data-stu-id="4566f-153">The resulting <see cref="T:System.DateTime" /> is outside the supported range.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4566f-154"><paramref name="months" /> 小於 -120000。</span><span class="sxs-lookup"><span data-stu-id="4566f-154"><paramref name="months" /> is less than -120000.</span></span>  
  
 <span data-ttu-id="4566f-155">-或-</span><span class="sxs-lookup"><span data-stu-id="4566f-155">-or-</span></span>  
  
 <span data-ttu-id="4566f-156"><paramref name="months" /> 大於 120000。</span><span class="sxs-lookup"><span data-stu-id="4566f-156"><paramref name="months" /> is greater than 120000.</span></span></exception>
        <altmember cref="T:System.DateTime" />
        <altmember cref="M:System.Globalization.GregorianCalendar.AddYears(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddDays(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddHours(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMinutes(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddSeconds(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMilliseconds(System.DateTime,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="AddYears">
      <MemberSignature Language="C#" Value="public override DateTime AddYears (DateTime time, int years);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.DateTime AddYears(valuetype System.DateTime time, int32 years) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.GregorianCalendar.AddYears(System.DateTime,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function AddYears (time As DateTime, years As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override DateTime AddYears(DateTime time, int years);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
        <Parameter Name="years" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="time"><span data-ttu-id="4566f-157">要將年份加入的 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="4566f-157">The <see cref="T:System.DateTime" /> to which to add years.</span></span></param>
        <param name="years"><span data-ttu-id="4566f-158">要加入的年數。</span><span class="sxs-lookup"><span data-stu-id="4566f-158">The number of years to add.</span></span></param>
        <summary><span data-ttu-id="4566f-159">傳回與指定 <see cref="T:System.DateTime" /> 相差指定年數的 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="4566f-159">Returns a <see cref="T:System.DateTime" /> that is the specified number of years away from the specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="4566f-160"><see cref="T:System.DateTime" />，由將指定的年數加入指定的 <see cref="T:System.DateTime" /> 所產生。</span><span class="sxs-lookup"><span data-stu-id="4566f-160">The <see cref="T:System.DateTime" /> that results from adding the specified number of years to the specified <see cref="T:System.DateTime" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4566f-161">產生的日期部分<xref:System.DateTime>如果產生的日期不是有效的日期，產生結果年的月份中會受到影響。</span><span class="sxs-lookup"><span data-stu-id="4566f-161">The day part of the resulting <xref:System.DateTime> is affected if the resulting day is not a valid day in the resulting month of the resulting year.</span></span> <span data-ttu-id="4566f-162">它會變更為有效的最後一天，在產生的產生的年份。</span><span class="sxs-lookup"><span data-stu-id="4566f-162">It is changed to the last valid day in the resulting month of the resulting year.</span></span> <span data-ttu-id="4566f-163">產生的月份部分<xref:System.DateTime>維持不變，與指定<xref:System.DateTime>。</span><span class="sxs-lookup"><span data-stu-id="4566f-163">The month part of the resulting <xref:System.DateTime> remains the same as the specified <xref:System.DateTime>.</span></span> <span data-ttu-id="4566f-164">這項實作支援目前的紀元。</span><span class="sxs-lookup"><span data-stu-id="4566f-164">This implementation supports only the current era.</span></span> <span data-ttu-id="4566f-165">因此，<xref:System.ArgumentException>如果產生的年份超出指定紀元，會擲回<xref:System.DateTime>。</span><span class="sxs-lookup"><span data-stu-id="4566f-165">Therefore, <xref:System.ArgumentException> is thrown if the resulting year is outside the era of the specified <xref:System.DateTime>.</span></span> <span data-ttu-id="4566f-166">產生的日期時間部分<xref:System.DateTime>維持不變，與指定<xref:System.DateTime>。</span><span class="sxs-lookup"><span data-stu-id="4566f-166">The time-of-day part of the resulting <xref:System.DateTime> remains the same as the specified <xref:System.DateTime>.</span></span>  
  
 <span data-ttu-id="4566f-167">例如，二月有 28 天，除了閏年時有 29 天期間。</span><span class="sxs-lookup"><span data-stu-id="4566f-167">For example, February has 28 days, except during leap years when it has 29 days.</span></span> <span data-ttu-id="4566f-168">如果指定的日期是潤年 2 月 29 日值`years`為 1，則產生的日期會一年中的 2 月 28 日。</span><span class="sxs-lookup"><span data-stu-id="4566f-168">If the specified date is the 29th day of February in a leap year and the value of `years` is 1, the resulting date will be the 28th day of February in the following year.</span></span>  
  
 <span data-ttu-id="4566f-169">如果`years`是負數，產生<xref:System.DateTime>早於指定<xref:System.DateTime>。</span><span class="sxs-lookup"><span data-stu-id="4566f-169">If `years` is negative, the resulting <xref:System.DateTime> is earlier than the specified <xref:System.DateTime>.</span></span>  
  
 <span data-ttu-id="4566f-170"><xref:System.DateTime.Kind%2A>屬性傳回之<xref:System.DateTime>值一律等於<xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="4566f-170">The <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value always equals <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>.</span></span> <span data-ttu-id="4566f-171">您可以保留<xref:System.DateTime.Kind%2A>屬性`time`藉由呼叫參數<xref:System.DateTime.SpecifyKind%2A?displayProperty=nameWithType>方法，如下列範例所示。</span><span class="sxs-lookup"><span data-stu-id="4566f-171">You can preserve the <xref:System.DateTime.Kind%2A> property of the `time` parameter by calling the <xref:System.DateTime.SpecifyKind%2A?displayProperty=nameWithType> method, as the following example shows.</span></span>  
  
 [!code-csharp[System.Globalization.Calendar.AddMethods#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/cs/add1.cs#8)]
 [!code-vb[System.Globalization.Calendar.AddMethods#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/vb/add1.vb#8)]  
  
   
  
## Examples  
 <span data-ttu-id="4566f-172">下列程式碼範例顯示的數個元件的值<xref:System.DateTime>方面西曆。</span><span class="sxs-lookup"><span data-stu-id="4566f-172">The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Gregorian calendar.</span></span>  
  
 [!code-cpp[System.Globalization.GregorianCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar_AddGet/CPP/gregoriancalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.GregorianCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar_AddGet/CS/gregoriancalendar_addget.cs#1)]
 [!code-vb[System.Globalization.GregorianCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar_AddGet/VB/gregoriancalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4566f-173">產生的 <see cref="T:System.DateTime" /> 在支援的範圍之外。</span><span class="sxs-lookup"><span data-stu-id="4566f-173">The resulting <see cref="T:System.DateTime" /> is outside the supported range.</span></span></exception>
        <altmember cref="T:System.DateTime" />
        <altmember cref="M:System.Globalization.GregorianCalendar.AddMonths(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddDays(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddHours(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMinutes(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddSeconds(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMilliseconds(System.DateTime,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="ADEra">
      <MemberSignature Language="C#" Value="public const int ADEra = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 ADEra = (1)" />
      <MemberSignature Language="DocId" Value="F:System.Globalization.GregorianCalendar.ADEra" />
      <MemberSignature Language="VB.NET" Value="Public Const ADEra As Integer  = 1" />
      <MemberSignature Language="C++ CLI" Value="public: int ADEra = 1;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="4566f-174">代表目前的紀元。</span><span class="sxs-lookup"><span data-stu-id="4566f-174">Represents the current era.</span></span> <span data-ttu-id="4566f-175">這個欄位是常數。</span><span class="sxs-lookup"><span data-stu-id="4566f-175">This field is constant.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4566f-176">西曆辨識兩個紀元： b.c.</span><span class="sxs-lookup"><span data-stu-id="4566f-176">The Gregorian calendar recognizes two eras: B.C.</span></span> <span data-ttu-id="4566f-177">西元前或 A.D.。</span><span class="sxs-lookup"><span data-stu-id="4566f-177">or B.C.E., and A.D.</span></span> <span data-ttu-id="4566f-178">或西元</span><span class="sxs-lookup"><span data-stu-id="4566f-178">or C.E.</span></span> <span data-ttu-id="4566f-179">這項實作<xref:System.Globalization.GregorianCalendar>類別能夠辨識只有目前紀元 (A.D.。</span><span class="sxs-lookup"><span data-stu-id="4566f-179">This implementation of the <xref:System.Globalization.GregorianCalendar> class recognizes only the current era (A.D.</span></span> <span data-ttu-id="4566f-180">或西元）。</span><span class="sxs-lookup"><span data-stu-id="4566f-180">or C.E.).</span></span> <span data-ttu-id="4566f-181">此欄位一律會傳回 1。</span><span class="sxs-lookup"><span data-stu-id="4566f-181">This field always returns 1.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="P:System.Globalization.GregorianCalendar.Eras" />
      </Docs>
    </Member>
    <Member MemberName="AlgorithmType">
      <MemberSignature Language="C#" Value="public override System.Globalization.CalendarAlgorithmType AlgorithmType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Globalization.CalendarAlgorithmType AlgorithmType" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.GregorianCalendar.AlgorithmType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property AlgorithmType As CalendarAlgorithmType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Globalization::CalendarAlgorithmType AlgorithmType { System::Globalization::CalendarAlgorithmType get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.CalendarAlgorithmType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4566f-182">取得值，指出目前的月曆是以陽曆為主、以陰曆為主，還是同時包含兩種曆法。</span><span class="sxs-lookup"><span data-stu-id="4566f-182">Gets a value that indicates whether the current calendar is solar-based, lunar-based, or a combination of both.</span></span></summary>
        <value><span data-ttu-id="4566f-183">一律傳回 <see cref="F:System.Globalization.CalendarAlgorithmType.SolarCalendar" />。</span><span class="sxs-lookup"><span data-stu-id="4566f-183">Always returns <see cref="F:System.Globalization.CalendarAlgorithmType.SolarCalendar" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4566f-184">下列範例會使用反映來具現化每個<xref:System.Globalization.Calendar>位於.NET Framework 型別，並顯示的值及其<xref:System.Globalization.Calendar.AlgorithmType%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="4566f-184">The following example uses reflection to instantiate each <xref:System.Globalization.Calendar> type found in the .NET Framework and displays the value of its <xref:System.Globalization.Calendar.AlgorithmType%2A> property.</span></span>  
  
 [!code-csharp[System.Globalization.Calendar.AlgorithmType#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.algorithmtype/cs/algorithmtype1.cs#1)]
 [!code-vb[System.Globalization.Calendar.AlgorithmType#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.algorithmtype/vb/algorithmtype1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CalendarType">
      <MemberSignature Language="C#" Value="public virtual System.Globalization.GregorianCalendarTypes CalendarType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Globalization.GregorianCalendarTypes CalendarType" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.GregorianCalendar.CalendarType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CalendarType As GregorianCalendarTypes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Globalization::GregorianCalendarTypes CalendarType { System::Globalization::GregorianCalendarTypes get(); void set(System::Globalization::GregorianCalendarTypes value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.GregorianCalendarTypes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4566f-185">取得或設定 <see cref="T:System.Globalization.GregorianCalendarTypes" /> 值，代表目前 <see cref="T:System.Globalization.GregorianCalendar" /> 的語言版本。</span><span class="sxs-lookup"><span data-stu-id="4566f-185">Gets or sets the <see cref="T:System.Globalization.GregorianCalendarTypes" /> value that denotes the language version of the current <see cref="T:System.Globalization.GregorianCalendar" />.</span></span></summary>
        <value><span data-ttu-id="4566f-186"><see cref="T:System.Globalization.GregorianCalendarTypes" /> 值，代表目前 <see cref="T:System.Globalization.GregorianCalendar" /> 的語言版本。</span><span class="sxs-lookup"><span data-stu-id="4566f-186">A <see cref="T:System.Globalization.GregorianCalendarTypes" /> value that denotes the language version of the current <see cref="T:System.Globalization.GregorianCalendar" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4566f-187">下列程式碼範例示範如何判斷支援的文化特性的 GregorianCalendar 語言版本。</span><span class="sxs-lookup"><span data-stu-id="4566f-187">The following code example demonstrates how to determine the GregorianCalendar language version supported by the culture.</span></span>  
  
 [!code-cpp[System.Globalization.GregorianCalendarTypes#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.GregorianCalendarTypes/CPP/gregoriancalendartypes.cpp#1)]
 [!code-csharp[System.Globalization.GregorianCalendarTypes#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.GregorianCalendarTypes/CS/gregoriancalendartypes.cs#1)]
 [!code-vb[System.Globalization.GregorianCalendarTypes#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.GregorianCalendarTypes/VB/gregoriancalendartypes.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="4566f-188">在設定作業中指定的值並非 <see cref="T:System.Globalization.GregorianCalendarTypes" /> 列舉的成員。</span><span class="sxs-lookup"><span data-stu-id="4566f-188">The value specified in a set operation is not a member of the <see cref="T:System.Globalization.GregorianCalendarTypes" /> enumeration.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4566f-189">在設定作業中，目前執行個體是唯讀的。</span><span class="sxs-lookup"><span data-stu-id="4566f-189">In a set operation, the current instance is read-only.</span></span></exception>
        <altmember cref="T:System.Globalization.GregorianCalendarTypes" />
      </Docs>
    </Member>
    <Member MemberName="Eras">
      <MemberSignature Language="C#" Value="public override int[] Eras { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32[] Eras" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.GregorianCalendar.Eras" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Eras As Integer()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;int&gt; ^ Eras { cli::array &lt;int&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4566f-190">取得 <see cref="T:System.Globalization.GregorianCalendar" /> 中的紀元清單。</span><span class="sxs-lookup"><span data-stu-id="4566f-190">Gets the list of eras in the <see cref="T:System.Globalization.GregorianCalendar" />.</span></span></summary>
        <value><span data-ttu-id="4566f-191">整數陣列，表示 <see cref="T:System.Globalization.GregorianCalendar" /> 中的紀元。</span><span class="sxs-lookup"><span data-stu-id="4566f-191">An array of integers that represents the eras in the <see cref="T:System.Globalization.GregorianCalendar" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4566f-192">西曆辨識兩個紀元： b.c.</span><span class="sxs-lookup"><span data-stu-id="4566f-192">The Gregorian calendar recognizes two eras: B.C.</span></span> <span data-ttu-id="4566f-193">西元前或 A.D.。</span><span class="sxs-lookup"><span data-stu-id="4566f-193">or B.C.E., and A.D.</span></span> <span data-ttu-id="4566f-194">或西元</span><span class="sxs-lookup"><span data-stu-id="4566f-194">or C.E.</span></span> <span data-ttu-id="4566f-195">這項實作<xref:System.Globalization.GregorianCalendar>類別能夠辨識只有目前紀元 (A.D.。</span><span class="sxs-lookup"><span data-stu-id="4566f-195">This implementation of the <xref:System.Globalization.GregorianCalendar> class recognizes only the current era (A.D.</span></span> <span data-ttu-id="4566f-196">或西元）。</span><span class="sxs-lookup"><span data-stu-id="4566f-196">or C.E.).</span></span> <span data-ttu-id="4566f-197">這個屬性永遠會傳回只有一個元素的陣列。</span><span class="sxs-lookup"><span data-stu-id="4566f-197">This property always returns an array with only one element.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="F:System.Globalization.GregorianCalendar.ADEra" />
      </Docs>
    </Member>
    <Member MemberName="GetDayOfMonth">
      <MemberSignature Language="C#" Value="public override int GetDayOfMonth (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetDayOfMonth(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.GregorianCalendar.GetDayOfMonth(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDayOfMonth (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetDayOfMonth(DateTime time);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time"><span data-ttu-id="4566f-198">要讀取的 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="4566f-198">The <see cref="T:System.DateTime" /> to read.</span></span></param>
        <summary><span data-ttu-id="4566f-199">傳回指定 <see cref="T:System.DateTime" /> 中月份的日期。</span><span class="sxs-lookup"><span data-stu-id="4566f-199">Returns the day of the month in the specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="4566f-200">從 1 到 31 的整數，表示 <paramref name="time" /> 中月份的日期。</span><span class="sxs-lookup"><span data-stu-id="4566f-200">An integer from 1 to 31 that represents the day of the month in <paramref name="time" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4566f-201">下列程式碼範例顯示的數個元件的值<xref:System.DateTime>方面西曆。</span><span class="sxs-lookup"><span data-stu-id="4566f-201">The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Gregorian calendar.</span></span>  
  
 [!code-cpp[System.Globalization.GregorianCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar_AddGet/CPP/gregoriancalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.GregorianCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar_AddGet/CS/gregoriancalendar_addget.cs#1)]
 [!code-vb[System.Globalization.GregorianCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar_AddGet/VB/gregoriancalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTime.Day" />
        <altmember cref="M:System.Globalization.GregorianCalendar.GetEra(System.DateTime)" />
        <altmember cref="M:System.Globalization.GregorianCalendar.GetYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.GregorianCalendar.GetMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.GregorianCalendar.GetDayOfYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.GregorianCalendar.GetDayOfWeek(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
      </Docs>
    </Member>
    <Member MemberName="GetDayOfWeek">
      <MemberSignature Language="C#" Value="public override DayOfWeek GetDayOfWeek (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.DayOfWeek GetDayOfWeek(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.GregorianCalendar.GetDayOfWeek(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDayOfWeek (time As DateTime) As DayOfWeek" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override DayOfWeek GetDayOfWeek(DateTime time);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DayOfWeek</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time"><span data-ttu-id="4566f-202">要讀取的 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="4566f-202">The <see cref="T:System.DateTime" /> to read.</span></span></param>
        <summary><span data-ttu-id="4566f-203">傳回指定 <see cref="T:System.DateTime" /> 中的星期。</span><span class="sxs-lookup"><span data-stu-id="4566f-203">Returns the day of the week in the specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="4566f-204"><see cref="T:System.DayOfWeek" /> 值，表示 <paramref name="time" /> 中的星期。</span><span class="sxs-lookup"><span data-stu-id="4566f-204">A <see cref="T:System.DayOfWeek" /> value that represents the day of the week in <paramref name="time" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4566f-205"><xref:System.DayOfWeek>的值為星期日、 星期一、 星期二、 星期三、 星期四、 星期五、 和星期六。</span><span class="sxs-lookup"><span data-stu-id="4566f-205">The <xref:System.DayOfWeek> values are Sunday, Monday, Tuesday, Wednesday, Thursday, Friday, and Saturday.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4566f-206">下列程式碼範例顯示的數個元件的值<xref:System.DateTime>方面西曆。</span><span class="sxs-lookup"><span data-stu-id="4566f-206">The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Gregorian calendar.</span></span>  
  
 [!code-cpp[System.Globalization.GregorianCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar_AddGet/CPP/gregoriancalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.GregorianCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar_AddGet/CS/gregoriancalendar_addget.cs#1)]
 [!code-vb[System.Globalization.GregorianCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar_AddGet/VB/gregoriancalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTime.DayOfWeek" />
        <altmember cref="T:System.DayOfWeek" />
        <altmember cref="M:System.Globalization.GregorianCalendar.GetEra(System.DateTime)" />
        <altmember cref="M:System.Globalization.GregorianCalendar.GetYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.GregorianCalendar.GetMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.GregorianCalendar.GetDayOfYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.GregorianCalendar.GetDayOfMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
      </Docs>
    </Member>
    <Member MemberName="GetDayOfYear">
      <MemberSignature Language="C#" Value="public override int GetDayOfYear (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetDayOfYear(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.GregorianCalendar.GetDayOfYear(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDayOfYear (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetDayOfYear(DateTime time);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time"><span data-ttu-id="4566f-207">要讀取的 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="4566f-207">The <see cref="T:System.DateTime" /> to read.</span></span></param>
        <summary><span data-ttu-id="4566f-208">傳回指定之 <see cref="T:System.DateTime" /> 中一年中的日期。</span><span class="sxs-lookup"><span data-stu-id="4566f-208">Returns the day of the year in the specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="4566f-209">從 1 到 366 的整數，表示 <paramref name="time" /> 中年份的日期。</span><span class="sxs-lookup"><span data-stu-id="4566f-209">An integer from 1 to 366 that represents the day of the year in <paramref name="time" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4566f-210">年份的日期被定義為一年的第一天中的天數。</span><span class="sxs-lookup"><span data-stu-id="4566f-210">The day of the year is defined as the number of days from the first day of the year.</span></span> <span data-ttu-id="4566f-211">例如，<xref:System.Globalization.GregorianCalendar.GetDayOfYear%2A>的第一個月的第一天，則傳回 1，和<xref:System.Globalization.GregorianCalendar.GetDayOfYear%2A>的上個月的最後一天傳回該年度的總天數，這相同的值由<xref:System.Globalization.GregorianCalendar.GetDaysInYear%2A>。</span><span class="sxs-lookup"><span data-stu-id="4566f-211">For example, <xref:System.Globalization.GregorianCalendar.GetDayOfYear%2A> for the first day of the first month returns 1, and <xref:System.Globalization.GregorianCalendar.GetDayOfYear%2A> for the last day of the last month returns the total number of days in that year, which is the same value returned by <xref:System.Globalization.GregorianCalendar.GetDaysInYear%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4566f-212">下列程式碼範例顯示的數個元件的值<xref:System.DateTime>方面西曆。</span><span class="sxs-lookup"><span data-stu-id="4566f-212">The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Gregorian calendar.</span></span>  
  
 [!code-cpp[System.Globalization.GregorianCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar_AddGet/CPP/gregoriancalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.GregorianCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar_AddGet/CS/gregoriancalendar_addget.cs#1)]
 [!code-vb[System.Globalization.GregorianCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar_AddGet/VB/gregoriancalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTime.DayOfYear" />
        <altmember cref="M:System.Globalization.GregorianCalendar.GetEra(System.DateTime)" />
        <altmember cref="M:System.Globalization.GregorianCalendar.GetYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.GregorianCalendar.GetMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.GregorianCalendar.GetDayOfMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.GregorianCalendar.GetDayOfWeek(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
      </Docs>
    </Member>
    <Member MemberName="GetDaysInMonth">
      <MemberSignature Language="C#" Value="public override int GetDaysInMonth (int year, int month, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetDaysInMonth(int32 year, int32 month, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.GregorianCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDaysInMonth (year As Integer, month As Integer, era As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetDaysInMonth(int year, int month, int era);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="4566f-213">表示年份的整數。</span><span class="sxs-lookup"><span data-stu-id="4566f-213">An integer that represents the year.</span></span></param>
        <param name="month"><span data-ttu-id="4566f-214">從 1 到 12 的整數，表示月份。</span><span class="sxs-lookup"><span data-stu-id="4566f-214">An integer from 1 to 12 that represents the month.</span></span></param>
        <param name="era"><span data-ttu-id="4566f-215">表示紀元的整數。</span><span class="sxs-lookup"><span data-stu-id="4566f-215">An integer that represents the era.</span></span></param>
        <summary><span data-ttu-id="4566f-216">傳回在指定紀元的指定年份的指定月份中的日數。</span><span class="sxs-lookup"><span data-stu-id="4566f-216">Returns the number of days in the specified month in the specified year in the specified era.</span></span></summary>
        <returns><span data-ttu-id="4566f-217">在指定紀元的指定年份的指定月份中的日數。</span><span class="sxs-lookup"><span data-stu-id="4566f-217">The number of days in the specified month in the specified year in the specified era.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4566f-218">例如，這個方法會傳回 28 或 29 表示二月 (`month` = 2)，取決於是否`year`是否為閏年。</span><span class="sxs-lookup"><span data-stu-id="4566f-218">For example, this method returns 28 or 29 for February (`month` = 2), depending on whether `year` is a leap year.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4566f-219">下列程式碼範例會呼叫 GetDaysInMonth 每五年的每個紀元中的第二個月份。</span><span class="sxs-lookup"><span data-stu-id="4566f-219">The following code example calls GetDaysInMonth for the second month in each of five years in each era.</span></span>  
  
 [!code-cpp[System.Globalization.GregorianCalendar.GetDaysInMonth#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar.GetDaysInMonth/CPP/gregoriancalendar_getdaysinmonth.cpp#1)]
 [!code-csharp[System.Globalization.GregorianCalendar.GetDaysInMonth#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar.GetDaysInMonth/CS/gregoriancalendar_getdaysinmonth.cs#1)]
 [!code-vb[System.Globalization.GregorianCalendar.GetDaysInMonth#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar.GetDaysInMonth/VB/gregoriancalendar_getdaysinmonth.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4566f-220"><paramref name="era" /> 不在曆法支援的範圍內。</span><span class="sxs-lookup"><span data-stu-id="4566f-220"><paramref name="era" /> is outside the range supported by the calendar.</span></span>  
  
 <span data-ttu-id="4566f-221">-或-</span><span class="sxs-lookup"><span data-stu-id="4566f-221">-or-</span></span>  
  
 <span data-ttu-id="4566f-222"><paramref name="year" /> 不在曆法支援的範圍內。</span><span class="sxs-lookup"><span data-stu-id="4566f-222"><paramref name="year" /> is outside the range supported by the calendar.</span></span>  
  
 <span data-ttu-id="4566f-223">-或-</span><span class="sxs-lookup"><span data-stu-id="4566f-223">-or-</span></span>  
  
 <span data-ttu-id="4566f-224"><paramref name="month" /> 不在曆法支援的範圍內。</span><span class="sxs-lookup"><span data-stu-id="4566f-224"><paramref name="month" /> is outside the range supported by the calendar.</span></span></exception>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="F:System.Globalization.GregorianCalendar.ADEra" />
        <altmember cref="P:System.Globalization.GregorianCalendar.Eras" />
        <altmember cref="M:System.Globalization.GregorianCalendar.GetMonthsInYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.GregorianCalendar.GetDaysInYear(System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetDaysInYear">
      <MemberSignature Language="C#" Value="public override int GetDaysInYear (int year, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetDaysInYear(int32 year, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.GregorianCalendar.GetDaysInYear(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDaysInYear (year As Integer, era As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetDaysInYear(int year, int era);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="4566f-225">表示年份的整數。</span><span class="sxs-lookup"><span data-stu-id="4566f-225">An integer that represents the year.</span></span></param>
        <param name="era"><span data-ttu-id="4566f-226">表示紀元的整數。</span><span class="sxs-lookup"><span data-stu-id="4566f-226">An integer that represents the era.</span></span></param>
        <summary><span data-ttu-id="4566f-227">傳回在指定紀元的指定年份中的日數。</span><span class="sxs-lookup"><span data-stu-id="4566f-227">Returns the number of days in the specified year in the specified era.</span></span></summary>
        <returns><span data-ttu-id="4566f-228">在指定紀元的指定年份中的日數。</span><span class="sxs-lookup"><span data-stu-id="4566f-228">The number of days in the specified year in the specified era.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4566f-229">例如，這個方法會傳回 365 或 366，取決於是否`year`是否為閏年。</span><span class="sxs-lookup"><span data-stu-id="4566f-229">For example, this method returns 365 or 366, depending on whether `year` is a leap year.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4566f-230">下列程式碼範例會呼叫 GetDaysInYear 五年的每個紀元。</span><span class="sxs-lookup"><span data-stu-id="4566f-230">The following code example calls GetDaysInYear for five years in each era.</span></span>  
  
 [!code-cpp[System.Globalization.GregorianCalendar.GetDaysInYear#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar.GetDaysInYear/CPP/gregoriancalendar_getdaysinyear.cpp#1)]
 [!code-csharp[System.Globalization.GregorianCalendar.GetDaysInYear#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar.GetDaysInYear/CS/gregoriancalendar_getdaysinyear.cs#1)]
 [!code-vb[System.Globalization.GregorianCalendar.GetDaysInYear#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar.GetDaysInYear/VB/gregoriancalendar_getdaysinyear.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4566f-231"><paramref name="era" /> 不在曆法支援的範圍內。</span><span class="sxs-lookup"><span data-stu-id="4566f-231"><paramref name="era" /> is outside the range supported by the calendar.</span></span>  
  
 <span data-ttu-id="4566f-232">-或-</span><span class="sxs-lookup"><span data-stu-id="4566f-232">-or-</span></span>  
  
 <span data-ttu-id="4566f-233"><paramref name="year" /> 不在曆法支援的範圍內。</span><span class="sxs-lookup"><span data-stu-id="4566f-233"><paramref name="year" /> is outside the range supported by the calendar.</span></span></exception>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="F:System.Globalization.GregorianCalendar.ADEra" />
        <altmember cref="P:System.Globalization.GregorianCalendar.Eras" />
        <altmember cref="M:System.Globalization.GregorianCalendar.GetMonthsInYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.GregorianCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetEra">
      <MemberSignature Language="C#" Value="public override int GetEra (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetEra(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.GregorianCalendar.GetEra(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEra (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetEra(DateTime time);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time"><span data-ttu-id="4566f-234">要讀取的 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="4566f-234">The <see cref="T:System.DateTime" /> to read.</span></span></param>
        <summary><span data-ttu-id="4566f-235">傳回指定 <see cref="T:System.DateTime" /> 中的紀元。</span><span class="sxs-lookup"><span data-stu-id="4566f-235">Returns the era in the specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="4566f-236">表示 <paramref name="time" /> 中紀元的整數。</span><span class="sxs-lookup"><span data-stu-id="4566f-236">An integer that represents the era in <paramref name="time" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4566f-237">西曆辨識兩個紀元： b.c.</span><span class="sxs-lookup"><span data-stu-id="4566f-237">The Gregorian calendar recognizes two eras: B.C.</span></span> <span data-ttu-id="4566f-238">西元前或 A.D.。</span><span class="sxs-lookup"><span data-stu-id="4566f-238">or B.C.E., and A.D.</span></span> <span data-ttu-id="4566f-239">或西元</span><span class="sxs-lookup"><span data-stu-id="4566f-239">or C.E.</span></span> <span data-ttu-id="4566f-240">這項實作<xref:System.Globalization.GregorianCalendar>類別能夠辨識只有目前紀元 (A.D.。</span><span class="sxs-lookup"><span data-stu-id="4566f-240">This implementation of the <xref:System.Globalization.GregorianCalendar> class recognizes only the current era (A.D.</span></span> <span data-ttu-id="4566f-241">或西元）。</span><span class="sxs-lookup"><span data-stu-id="4566f-241">or C.E.).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4566f-242">下列程式碼範例顯示的數個元件的值<xref:System.DateTime>方面西曆。</span><span class="sxs-lookup"><span data-stu-id="4566f-242">The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Gregorian calendar.</span></span>  
  
 [!code-cpp[System.Globalization.GregorianCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar_AddGet/CPP/gregoriancalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.GregorianCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar_AddGet/CS/gregoriancalendar_addget.cs#1)]
 [!code-vb[System.Globalization.GregorianCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar_AddGet/VB/gregoriancalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.DateTime" />
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="F:System.Globalization.GregorianCalendar.ADEra" />
        <altmember cref="P:System.Globalization.GregorianCalendar.Eras" />
        <altmember cref="M:System.Globalization.GregorianCalendar.GetYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.GregorianCalendar.GetMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.GregorianCalendar.GetDayOfYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.GregorianCalendar.GetDayOfMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.GregorianCalendar.GetDayOfWeek(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
        <altmember cref="M:System.Globalization.Calendar.GetHour(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMinute(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetSecond(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMilliseconds(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="GetLeapMonth">
      <MemberSignature Language="C#" Value="public override int GetLeapMonth (int year, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetLeapMonth(int32 year, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.GregorianCalendar.GetLeapMonth(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetLeapMonth (year As Integer, era As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetLeapMonth(int year, int era);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="4566f-243">一年。</span><span class="sxs-lookup"><span data-stu-id="4566f-243">A year.</span></span></param>
        <param name="era"><span data-ttu-id="4566f-244">一紀元。</span><span class="sxs-lookup"><span data-stu-id="4566f-244">An era.</span></span> <span data-ttu-id="4566f-245">指定 <see cref="F:System.Globalization.GregorianCalendar.ADEra" /> 或 <see langword="GregorianCalendar.Eras[Calendar.CurrentEra]" />。</span><span class="sxs-lookup"><span data-stu-id="4566f-245">Specify either <see cref="F:System.Globalization.GregorianCalendar.ADEra" /> or <see langword="GregorianCalendar.Eras[Calendar.CurrentEra]" />.</span></span></param>
        <summary><span data-ttu-id="4566f-246">計算指定年份和紀元的閏月。</span><span class="sxs-lookup"><span data-stu-id="4566f-246">Calculates the leap month for a specified year and era.</span></span></summary>
        <returns><span data-ttu-id="4566f-247">一定是 0，因為西曆無法辨識閏月。</span><span class="sxs-lookup"><span data-stu-id="4566f-247">Always 0 because the Gregorian calendar does not recognize leap months.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4566f-248"><paramref name="year" /> 小於西曆年度 1 年或大於西曆 9999 年。</span><span class="sxs-lookup"><span data-stu-id="4566f-248"><paramref name="year" /> is less than the Gregorian calendar year 1 or greater than the Gregorian calendar year 9999.</span></span>  
  
 <span data-ttu-id="4566f-249">-或-</span><span class="sxs-lookup"><span data-stu-id="4566f-249">-or-</span></span>  
  
 <span data-ttu-id="4566f-250"><paramref name="era" /> 不是 <see cref="F:System.Globalization.GregorianCalendar.ADEra" /> 或 <see langword="GregorianCalendar.Eras[Calendar.CurrentEra]" />。</span><span class="sxs-lookup"><span data-stu-id="4566f-250"><paramref name="era" /> is not <see cref="F:System.Globalization.GregorianCalendar.ADEra" /> or <see langword="GregorianCalendar.Eras[Calendar.CurrentEra]" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetMonth">
      <MemberSignature Language="C#" Value="public override int GetMonth (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetMonth(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.GregorianCalendar.GetMonth(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetMonth (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetMonth(DateTime time);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time"><span data-ttu-id="4566f-251">要讀取的 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="4566f-251">The <see cref="T:System.DateTime" /> to read.</span></span></param>
        <summary><span data-ttu-id="4566f-252">傳回指定 <see cref="T:System.DateTime" /> 中的月份。</span><span class="sxs-lookup"><span data-stu-id="4566f-252">Returns the month in the specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="4566f-253">從 1 到 12 的整數，表示 <paramref name="time" /> 中的月份。</span><span class="sxs-lookup"><span data-stu-id="4566f-253">An integer from 1 to 12 that represents the month in <paramref name="time" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4566f-254">下列程式碼範例顯示的數個元件的值<xref:System.DateTime>方面西曆。</span><span class="sxs-lookup"><span data-stu-id="4566f-254">The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Gregorian calendar.</span></span>  
  
 [!code-cpp[System.Globalization.GregorianCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar_AddGet/CPP/gregoriancalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.GregorianCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar_AddGet/CS/gregoriancalendar_addget.cs#1)]
 [!code-vb[System.Globalization.GregorianCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar_AddGet/VB/gregoriancalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTime.Month" />
        <altmember cref="M:System.Globalization.GregorianCalendar.GetEra(System.DateTime)" />
        <altmember cref="M:System.Globalization.GregorianCalendar.GetYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.GregorianCalendar.GetDayOfYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.GregorianCalendar.GetDayOfMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.GregorianCalendar.GetDayOfWeek(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
        <altmember cref="M:System.Globalization.Calendar.GetHour(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMinute(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetSecond(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMilliseconds(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="GetMonthsInYear">
      <MemberSignature Language="C#" Value="public override int GetMonthsInYear (int year, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetMonthsInYear(int32 year, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.GregorianCalendar.GetMonthsInYear(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetMonthsInYear (year As Integer, era As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetMonthsInYear(int year, int era);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="4566f-255">表示年份的整數。</span><span class="sxs-lookup"><span data-stu-id="4566f-255">An integer that represents the year.</span></span></param>
        <param name="era"><span data-ttu-id="4566f-256">表示紀元的整數。</span><span class="sxs-lookup"><span data-stu-id="4566f-256">An integer that represents the era.</span></span></param>
        <summary><span data-ttu-id="4566f-257">傳回在指定紀元的指定年份中的月數。</span><span class="sxs-lookup"><span data-stu-id="4566f-257">Returns the number of months in the specified year in the specified era.</span></span></summary>
        <returns><span data-ttu-id="4566f-258">在指定紀元的指定年份中的月數。</span><span class="sxs-lookup"><span data-stu-id="4566f-258">The number of months in the specified year in the specified era.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4566f-259">下列程式碼範例會呼叫 GetMonthsInYear 五年的每個紀元。</span><span class="sxs-lookup"><span data-stu-id="4566f-259">The following code example calls GetMonthsInYear for five years in each era.</span></span>  
  
 [!code-cpp[System.Globalization.GregorianCalendar.GetMonthsInYear#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar.GetMonthsInYear/CPP/gregoriancalendar_getmonthsinyear.cpp#1)]
 [!code-csharp[System.Globalization.GregorianCalendar.GetMonthsInYear#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar.GetMonthsInYear/CS/gregoriancalendar_getmonthsinyear.cs#1)]
 [!code-vb[System.Globalization.GregorianCalendar.GetMonthsInYear#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar.GetMonthsInYear/VB/gregoriancalendar_getmonthsinyear.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4566f-260"><paramref name="era" /> 不在曆法支援的範圍內。</span><span class="sxs-lookup"><span data-stu-id="4566f-260"><paramref name="era" /> is outside the range supported by the calendar.</span></span>  
  
 <span data-ttu-id="4566f-261">-或-</span><span class="sxs-lookup"><span data-stu-id="4566f-261">-or-</span></span>  
  
 <span data-ttu-id="4566f-262"><paramref name="year" /> 不在曆法支援的範圍內。</span><span class="sxs-lookup"><span data-stu-id="4566f-262"><paramref name="year" /> is outside the range supported by the calendar.</span></span></exception>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="F:System.Globalization.GregorianCalendar.ADEra" />
        <altmember cref="P:System.Globalization.GregorianCalendar.Eras" />
        <altmember cref="M:System.Globalization.GregorianCalendar.GetDaysInYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.GregorianCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetYear">
      <MemberSignature Language="C#" Value="public override int GetYear (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetYear(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.GregorianCalendar.GetYear(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetYear (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetYear(DateTime time);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time"><span data-ttu-id="4566f-263">要讀取的 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="4566f-263">The <see cref="T:System.DateTime" /> to read.</span></span></param>
        <summary><span data-ttu-id="4566f-264">傳回指定 <see cref="T:System.DateTime" /> 中的年份。</span><span class="sxs-lookup"><span data-stu-id="4566f-264">Returns the year in the specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="4566f-265">表示 <paramref name="time" /> 中年份的整數。</span><span class="sxs-lookup"><span data-stu-id="4566f-265">An integer that represents the year in <paramref name="time" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4566f-266">下列程式碼範例顯示的數個元件的值<xref:System.DateTime>方面西曆。</span><span class="sxs-lookup"><span data-stu-id="4566f-266">The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Gregorian calendar.</span></span>  
  
 [!code-cpp[System.Globalization.GregorianCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar_AddGet/CPP/gregoriancalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.GregorianCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar_AddGet/CS/gregoriancalendar_addget.cs#1)]
 [!code-vb[System.Globalization.GregorianCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar_AddGet/VB/gregoriancalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTime.Year" />
        <altmember cref="M:System.Globalization.GregorianCalendar.GetEra(System.DateTime)" />
        <altmember cref="M:System.Globalization.GregorianCalendar.GetMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.GregorianCalendar.GetDayOfYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.GregorianCalendar.GetDayOfMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.GregorianCalendar.GetDayOfWeek(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
        <altmember cref="M:System.Globalization.Calendar.GetHour(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMinute(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetSecond(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMilliseconds(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="IsLeapDay">
      <MemberSignature Language="C#" Value="public override bool IsLeapDay (int year, int month, int day, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsLeapDay(int32 year, int32 month, int32 day, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.GregorianCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsLeapDay (year As Integer, month As Integer, day As Integer, era As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsLeapDay(int year, int month, int day, int era);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="day" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="4566f-267">表示年份的整數。</span><span class="sxs-lookup"><span data-stu-id="4566f-267">An integer that represents the year.</span></span></param>
        <param name="month"><span data-ttu-id="4566f-268">從 1 到 12 的整數，表示月份。</span><span class="sxs-lookup"><span data-stu-id="4566f-268">An integer from 1 to 12 that represents the month.</span></span></param>
        <param name="day"><span data-ttu-id="4566f-269">從 1 到 31 的整數，表示日期。</span><span class="sxs-lookup"><span data-stu-id="4566f-269">An integer from 1 to 31 that represents the day.</span></span></param>
        <param name="era"><span data-ttu-id="4566f-270">表示紀元的整數。</span><span class="sxs-lookup"><span data-stu-id="4566f-270">An integer that represents the era.</span></span></param>
        <summary><span data-ttu-id="4566f-271">判斷指定紀元中指定的日期是否為閏日。</span><span class="sxs-lookup"><span data-stu-id="4566f-271">Determines whether the specified date in the specified era is a leap day.</span></span></summary>
        <returns>
          <span data-ttu-id="4566f-272">如果指定的日期為閏日，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="4566f-272"><see langword="true" /> if the specified day is a leap day; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4566f-273">閏年西曆中由四個，除非它是整除 100 定義為整除一年。</span><span class="sxs-lookup"><span data-stu-id="4566f-273">A leap year in the Gregorian calendar is defined as a year that is evenly divisible by four, except if it is divisible by 100.</span></span> <span data-ttu-id="4566f-274">不過，400 所整除的年都是閏年。</span><span class="sxs-lookup"><span data-stu-id="4566f-274">However, years that are divisible by 400 are leap years.</span></span> <span data-ttu-id="4566f-275">例如，1900 年不為閏年，但 2000 年。</span><span class="sxs-lookup"><span data-stu-id="4566f-275">For example, the year 1900 was not a leap year, but the year 2000 was.</span></span> <span data-ttu-id="4566f-276">一般年份有 365 天，閏年有 366 天。</span><span class="sxs-lookup"><span data-stu-id="4566f-276">A common year has 365 days and a leap year has 366 days.</span></span>  
  
 <span data-ttu-id="4566f-277">為閏日是閏年只會發生一天。</span><span class="sxs-lookup"><span data-stu-id="4566f-277">A leap day is a day that occurs only in a leap year.</span></span> <span data-ttu-id="4566f-278">在西曆中，年 2 月 29 日會是唯一的閏日。</span><span class="sxs-lookup"><span data-stu-id="4566f-278">In the Gregorian calendar, the 29th day of February is the only leap day.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4566f-279">下列程式碼範例呼叫 IsLeapDay 五年的每個紀元的第二個月 （二月） 的最後一天。</span><span class="sxs-lookup"><span data-stu-id="4566f-279">The following code example calls IsLeapDay for the last day of the second month (February) for five years in each of the eras.</span></span>  
  
 [!code-cpp[System.Globalization.GregorianCalendar.IsLeapDay#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar.IsLeapDay/CPP/gregoriancalendar_isleapday.cpp#1)]
 [!code-csharp[System.Globalization.GregorianCalendar.IsLeapDay#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar.IsLeapDay/CS/gregoriancalendar_isleapday.cs#1)]
 [!code-vb[System.Globalization.GregorianCalendar.IsLeapDay#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar.IsLeapDay/VB/gregoriancalendar_isleapday.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4566f-280"><paramref name="era" /> 不在曆法支援的範圍內。</span><span class="sxs-lookup"><span data-stu-id="4566f-280"><paramref name="era" /> is outside the range supported by the calendar.</span></span>  
  
 <span data-ttu-id="4566f-281">-或-</span><span class="sxs-lookup"><span data-stu-id="4566f-281">-or-</span></span>  
  
 <span data-ttu-id="4566f-282"><paramref name="year" /> 不在曆法支援的範圍內。</span><span class="sxs-lookup"><span data-stu-id="4566f-282"><paramref name="year" /> is outside the range supported by the calendar.</span></span>  
  
 <span data-ttu-id="4566f-283">-或-</span><span class="sxs-lookup"><span data-stu-id="4566f-283">-or-</span></span>  
  
 <span data-ttu-id="4566f-284"><paramref name="month" /> 不在曆法支援的範圍內。</span><span class="sxs-lookup"><span data-stu-id="4566f-284"><paramref name="month" /> is outside the range supported by the calendar.</span></span>  
  
 <span data-ttu-id="4566f-285">-或-</span><span class="sxs-lookup"><span data-stu-id="4566f-285">-or-</span></span>  
  
 <span data-ttu-id="4566f-286"><paramref name="day" /> 不在曆法支援的範圍內。</span><span class="sxs-lookup"><span data-stu-id="4566f-286"><paramref name="day" /> is outside the range supported by the calendar.</span></span></exception>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="F:System.Globalization.GregorianCalendar.ADEra" />
        <altmember cref="P:System.Globalization.GregorianCalendar.Eras" />
        <altmember cref="M:System.Globalization.GregorianCalendar.GetMonthsInYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.GregorianCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.GregorianCalendar.IsLeapYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.GregorianCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="IsLeapMonth">
      <MemberSignature Language="C#" Value="public override bool IsLeapMonth (int year, int month, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsLeapMonth(int32 year, int32 month, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.GregorianCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsLeapMonth (year As Integer, month As Integer, era As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsLeapMonth(int year, int month, int era);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="4566f-287">表示年份的整數。</span><span class="sxs-lookup"><span data-stu-id="4566f-287">An integer that represents the year.</span></span></param>
        <param name="month"><span data-ttu-id="4566f-288">從 1 到 12 的整數，表示月份。</span><span class="sxs-lookup"><span data-stu-id="4566f-288">An integer from 1 to 12 that represents the month.</span></span></param>
        <param name="era"><span data-ttu-id="4566f-289">表示紀元的整數。</span><span class="sxs-lookup"><span data-stu-id="4566f-289">An integer that represents the era.</span></span></param>
        <summary><span data-ttu-id="4566f-290">判斷指定紀元的指定年份中指定的月份是否為閏月。</span><span class="sxs-lookup"><span data-stu-id="4566f-290">Determines whether the specified month in the specified year in the specified era is a leap month.</span></span></summary>
        <returns><span data-ttu-id="4566f-291">這個方法永遠傳回 <see langword="false" />，除非被衍生類別 (Derived Class) 所覆寫。</span><span class="sxs-lookup"><span data-stu-id="4566f-291">This method always returns <see langword="false" />, unless overridden by a derived class.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4566f-292">閏年西曆中由四個，除非它是整除 100 定義為整除一年。</span><span class="sxs-lookup"><span data-stu-id="4566f-292">A leap year in the Gregorian calendar is defined as a year that is evenly divisible by four, except if it is divisible by 100.</span></span> <span data-ttu-id="4566f-293">不過，400 所整除的年都是閏年。</span><span class="sxs-lookup"><span data-stu-id="4566f-293">However, years that are divisible by 400 are leap years.</span></span> <span data-ttu-id="4566f-294">例如，1900 年不為閏年，但 2000 年。</span><span class="sxs-lookup"><span data-stu-id="4566f-294">For example, the year 1900 was not a leap year, but the year 2000 was.</span></span> <span data-ttu-id="4566f-295">一般年份有 365 天，閏年有 366 天。</span><span class="sxs-lookup"><span data-stu-id="4566f-295">A common year has 365 days and a leap year has 366 days.</span></span>  
  
 <span data-ttu-id="4566f-296">為閏月是只發生在閏年整個月。</span><span class="sxs-lookup"><span data-stu-id="4566f-296">A leap month is an entire month that occurs only in a leap year.</span></span> <span data-ttu-id="4566f-297">西曆並沒有任何閏月。</span><span class="sxs-lookup"><span data-stu-id="4566f-297">The Gregorian calendar does not have any leap months.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4566f-298">下列程式碼範例呼叫 IsLeapMonth 目前紀元中的五年的月份。</span><span class="sxs-lookup"><span data-stu-id="4566f-298">The following code example calls IsLeapMonth for all the months in five years in the current era.</span></span>  
  
 [!code-cpp[System.Globalization.GregorianCalendar.IsLeapMonth#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar.IsLeapMonth/CPP/gregoriancalendar_isleapmonth.cpp#1)]
 [!code-csharp[System.Globalization.GregorianCalendar.IsLeapMonth#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar.IsLeapMonth/CS/gregoriancalendar_isleapmonth.cs#1)]
 [!code-vb[System.Globalization.GregorianCalendar.IsLeapMonth#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar.IsLeapMonth/VB/gregoriancalendar_isleapmonth.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4566f-299"><paramref name="era" /> 不在曆法支援的範圍內。</span><span class="sxs-lookup"><span data-stu-id="4566f-299"><paramref name="era" /> is outside the range supported by the calendar.</span></span>  
  
 <span data-ttu-id="4566f-300">-或-</span><span class="sxs-lookup"><span data-stu-id="4566f-300">-or-</span></span>  
  
 <span data-ttu-id="4566f-301"><paramref name="year" /> 不在曆法支援的範圍內。</span><span class="sxs-lookup"><span data-stu-id="4566f-301"><paramref name="year" /> is outside the range supported by the calendar.</span></span>  
  
 <span data-ttu-id="4566f-302">-或-</span><span class="sxs-lookup"><span data-stu-id="4566f-302">-or-</span></span>  
  
 <span data-ttu-id="4566f-303"><paramref name="month" /> 不在曆法支援的範圍內。</span><span class="sxs-lookup"><span data-stu-id="4566f-303"><paramref name="month" /> is outside the range supported by the calendar.</span></span></exception>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="F:System.Globalization.GregorianCalendar.ADEra" />
        <altmember cref="P:System.Globalization.GregorianCalendar.Eras" />
        <altmember cref="M:System.Globalization.GregorianCalendar.GetMonthsInYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.GregorianCalendar.IsLeapYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.GregorianCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="IsLeapYear">
      <MemberSignature Language="C#" Value="public override bool IsLeapYear (int year, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsLeapYear(int32 year, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.GregorianCalendar.IsLeapYear(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsLeapYear (year As Integer, era As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsLeapYear(int year, int era);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="4566f-304">表示年份的整數。</span><span class="sxs-lookup"><span data-stu-id="4566f-304">An integer that represents the year.</span></span></param>
        <param name="era"><span data-ttu-id="4566f-305">表示紀元的整數。</span><span class="sxs-lookup"><span data-stu-id="4566f-305">An integer that represents the era.</span></span></param>
        <summary><span data-ttu-id="4566f-306">判斷指定紀元中指定的年份是否為閏年。</span><span class="sxs-lookup"><span data-stu-id="4566f-306">Determines whether the specified year in the specified era is a leap year.</span></span></summary>
        <returns>
          <span data-ttu-id="4566f-307">如果指定的年份為閏年，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="4566f-307"><see langword="true" /> if the specified year is a leap year; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4566f-308">閏年西曆中由四個，除非它是整除 100 定義為整除一年。</span><span class="sxs-lookup"><span data-stu-id="4566f-308">A leap year in the Gregorian calendar is defined as a year that is evenly divisible by four, except if it is divisible by 100.</span></span> <span data-ttu-id="4566f-309">不過，400 所整除的年都是閏年。</span><span class="sxs-lookup"><span data-stu-id="4566f-309">However, years that are divisible by 400 are leap years.</span></span> <span data-ttu-id="4566f-310">例如，1900 年不為閏年，但 2000 年。</span><span class="sxs-lookup"><span data-stu-id="4566f-310">For example, the year 1900 was not a leap year, but the year 2000 was.</span></span> <span data-ttu-id="4566f-311">一般年份有 365 天，閏年有 366 天。</span><span class="sxs-lookup"><span data-stu-id="4566f-311">A common year has 365 days and a leap year has 366 days.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4566f-312">下列程式碼範例會呼叫 IsLeapYear 五年的每個紀元。</span><span class="sxs-lookup"><span data-stu-id="4566f-312">The following code example calls IsLeapYear for five years in each of the eras.</span></span>  
  
 [!code-cpp[System.Globalization.GregorianCalendar.IsLeapYear#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar.IsLeapYear/CPP/gregoriancalendar_isleapyear.cpp#1)]
 [!code-csharp[System.Globalization.GregorianCalendar.IsLeapYear#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar.IsLeapYear/CS/gregoriancalendar_isleapyear.cs#1)]
 [!code-vb[System.Globalization.GregorianCalendar.IsLeapYear#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar.IsLeapYear/VB/gregoriancalendar_isleapyear.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4566f-313"><paramref name="era" /> 不在曆法支援的範圍內。</span><span class="sxs-lookup"><span data-stu-id="4566f-313"><paramref name="era" /> is outside the range supported by the calendar.</span></span>  
  
 <span data-ttu-id="4566f-314">-或-</span><span class="sxs-lookup"><span data-stu-id="4566f-314">-or-</span></span>  
  
 <span data-ttu-id="4566f-315"><paramref name="year" /> 不在曆法支援的範圍內。</span><span class="sxs-lookup"><span data-stu-id="4566f-315"><paramref name="year" /> is outside the range supported by the calendar.</span></span></exception>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="F:System.Globalization.GregorianCalendar.ADEra" />
        <altmember cref="P:System.Globalization.GregorianCalendar.Eras" />
        <altmember cref="M:System.Globalization.GregorianCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.GregorianCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="MaxSupportedDateTime">
      <MemberSignature Language="C#" Value="public override DateTime MaxSupportedDateTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime MaxSupportedDateTime" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.GregorianCalendar.MaxSupportedDateTime" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property MaxSupportedDateTime As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property DateTime MaxSupportedDateTime { DateTime get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4566f-316">取得受 <see cref="T:System.Globalization.GregorianCalendar" /> 型別所支援的最晚日期和時間。</span><span class="sxs-lookup"><span data-stu-id="4566f-316">Gets the latest date and time supported by the <see cref="T:System.Globalization.GregorianCalendar" /> type.</span></span></summary>
        <value><span data-ttu-id="4566f-317">最晚的日期和時間所支援<see cref="T:System.Globalization.GregorianCalendar" />類型，這是最後一刻的年 12 月 31 日到 9999 年</span><span class="sxs-lookup"><span data-stu-id="4566f-317">The latest date and time supported by the <see cref="T:System.Globalization.GregorianCalendar" /> type, which is the last moment of December 31, 9999 C.E.</span></span> <span data-ttu-id="4566f-318">相當於<see cref="F:System.DateTime.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="4566f-318">and is equivalent to <see cref="F:System.DateTime.MaxValue" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4566f-319">下列程式碼範例會取得的最小值和行事曆的最大值。</span><span class="sxs-lookup"><span data-stu-id="4566f-319">The following code example gets the minimum value and the maximum value of the calendar.</span></span>  
  
 [!code-cpp[System.Globalization.GregorianCalendar_MinMax#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar_MinMax/CPP/gregoriancalendar_minmax.cpp#1)]
 [!code-csharp[System.Globalization.GregorianCalendar_MinMax#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar_MinMax/CS/gregoriancalendar_minmax.cs#1)]
 [!code-vb[System.Globalization.GregorianCalendar_MinMax#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar_MinMax/VB/gregoriancalendar_minmax.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinSupportedDateTime">
      <MemberSignature Language="C#" Value="public override DateTime MinSupportedDateTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime MinSupportedDateTime" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.GregorianCalendar.MinSupportedDateTime" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property MinSupportedDateTime As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property DateTime MinSupportedDateTime { DateTime get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4566f-320">取得 <see cref="T:System.Globalization.GregorianCalendar" /> 型別所支援的最早日期和時間。</span><span class="sxs-lookup"><span data-stu-id="4566f-320">Gets the earliest date and time supported by the <see cref="T:System.Globalization.GregorianCalendar" /> type.</span></span></summary>
        <value><span data-ttu-id="4566f-321">最早日期和時間所支援<see cref="T:System.Globalization.GregorianCalendar" />型別，則第一個快照年 1 月 1 日公元 0001</span><span class="sxs-lookup"><span data-stu-id="4566f-321">The earliest date and time supported by the <see cref="T:System.Globalization.GregorianCalendar" /> type, which is the first moment of January 1, 0001 C.E.</span></span> <span data-ttu-id="4566f-322">相當於<see cref="F:System.DateTime.MinValue" />。</span><span class="sxs-lookup"><span data-stu-id="4566f-322">and is equivalent to <see cref="F:System.DateTime.MinValue" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4566f-323">雖然值<xref:System.Globalization.GregorianCalendar.MinSupportedDateTime%2A>屬性是第一個快照年 1 月 1 日公元 0001、 15，1582 號年 10 月，直到未引入西曆和其整個歐洲 continent 和世界各地採用而變慢。</span><span class="sxs-lookup"><span data-stu-id="4566f-323">Although the value of the <xref:System.Globalization.GregorianCalendar.MinSupportedDateTime%2A> property is the first moment of January 1, 0001 C.E., the Gregorian calendar was not introduced until October 15, 1582, and its adoption throughout the European continent and worldwide was slow.</span></span> <span data-ttu-id="4566f-324">大部分的文化特性在歐洲、 美國及澳洲大陸之前它們採用西曆，用凱撒曆法，由表示<xref:System.Globalization.JulianCalendar>類別。</span><span class="sxs-lookup"><span data-stu-id="4566f-324">Until they adopted the Gregorian calendar, most cultures in the European, American, and Australian continents used the Julian calendar, which is represented by the <xref:System.Globalization.JulianCalendar> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4566f-325">下列程式碼範例會取得的最小值和行事曆的最大值。</span><span class="sxs-lookup"><span data-stu-id="4566f-325">The following code example gets the minimum value and the maximum value of the calendar.</span></span>  
  
 [!code-cpp[System.Globalization.GregorianCalendar_MinMax#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar_MinMax/CPP/gregoriancalendar_minmax.cpp#1)]
 [!code-csharp[System.Globalization.GregorianCalendar_MinMax#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar_MinMax/CS/gregoriancalendar_minmax.cs#1)]
 [!code-vb[System.Globalization.GregorianCalendar_MinMax#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar_MinMax/VB/gregoriancalendar_minmax.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToDateTime">
      <MemberSignature Language="C#" Value="public override DateTime ToDateTime (int year, int month, int day, int hour, int minute, int second, int millisecond, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.DateTime ToDateTime(int32 year, int32 month, int32 day, int32 hour, int32 minute, int32 second, int32 millisecond, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.GregorianCalendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToDateTime (year As Integer, month As Integer, day As Integer, hour As Integer, minute As Integer, second As Integer, millisecond As Integer, era As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override DateTime ToDateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, int era);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="day" Type="System.Int32" />
        <Parameter Name="hour" Type="System.Int32" />
        <Parameter Name="minute" Type="System.Int32" />
        <Parameter Name="second" Type="System.Int32" />
        <Parameter Name="millisecond" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="4566f-326">表示年份的整數。</span><span class="sxs-lookup"><span data-stu-id="4566f-326">An integer that represents the year.</span></span></param>
        <param name="month"><span data-ttu-id="4566f-327">從 1 到 12 的整數，表示月份。</span><span class="sxs-lookup"><span data-stu-id="4566f-327">An integer from 1 to 12 that represents the month.</span></span></param>
        <param name="day"><span data-ttu-id="4566f-328">從 1 到 31 的整數，表示日期。</span><span class="sxs-lookup"><span data-stu-id="4566f-328">An integer from 1 to 31 that represents the day.</span></span></param>
        <param name="hour"><span data-ttu-id="4566f-329">從 0 到 23 的整數，表示小時。</span><span class="sxs-lookup"><span data-stu-id="4566f-329">An integer from 0 to 23 that represents the hour.</span></span></param>
        <param name="minute"><span data-ttu-id="4566f-330">從 0 到 59 的整數，表示分鐘。</span><span class="sxs-lookup"><span data-stu-id="4566f-330">An integer from 0 to 59 that represents the minute.</span></span></param>
        <param name="second"><span data-ttu-id="4566f-331">從 0 到 59 的整數，表示秒鐘。</span><span class="sxs-lookup"><span data-stu-id="4566f-331">An integer from 0 to 59 that represents the second.</span></span></param>
        <param name="millisecond"><span data-ttu-id="4566f-332">從 0 到 999 的整數，表示毫秒。</span><span class="sxs-lookup"><span data-stu-id="4566f-332">An integer from 0 to 999 that represents the millisecond.</span></span></param>
        <param name="era"><span data-ttu-id="4566f-333">表示紀元的整數。</span><span class="sxs-lookup"><span data-stu-id="4566f-333">An integer that represents the era.</span></span></param>
        <summary><span data-ttu-id="4566f-334">傳回在指定紀元中設定為指定日期和時間的 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="4566f-334">Returns a <see cref="T:System.DateTime" /> that is set to the specified date and time in the specified era.</span></span></summary>
        <returns><span data-ttu-id="4566f-335"><see cref="T:System.DateTime" />，設定為目前紀元中指定的日期和時間。</span><span class="sxs-lookup"><span data-stu-id="4566f-335">The <see cref="T:System.DateTime" /> that is set to the specified date and time in the current era.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4566f-336"><paramref name="era" /> 不在曆法支援的範圍內。</span><span class="sxs-lookup"><span data-stu-id="4566f-336"><paramref name="era" /> is outside the range supported by the calendar.</span></span>  
  
 <span data-ttu-id="4566f-337">-或-</span><span class="sxs-lookup"><span data-stu-id="4566f-337">-or-</span></span>  
  
 <span data-ttu-id="4566f-338"><paramref name="year" /> 不在曆法支援的範圍內。</span><span class="sxs-lookup"><span data-stu-id="4566f-338"><paramref name="year" /> is outside the range supported by the calendar.</span></span>  
  
 <span data-ttu-id="4566f-339">-或-</span><span class="sxs-lookup"><span data-stu-id="4566f-339">-or-</span></span>  
  
 <span data-ttu-id="4566f-340"><paramref name="month" /> 不在曆法支援的範圍內。</span><span class="sxs-lookup"><span data-stu-id="4566f-340"><paramref name="month" /> is outside the range supported by the calendar.</span></span>  
  
 <span data-ttu-id="4566f-341">-或-</span><span class="sxs-lookup"><span data-stu-id="4566f-341">-or-</span></span>  
  
 <span data-ttu-id="4566f-342"><paramref name="day" /> 不在曆法支援的範圍內。</span><span class="sxs-lookup"><span data-stu-id="4566f-342"><paramref name="day" /> is outside the range supported by the calendar.</span></span>  
  
 <span data-ttu-id="4566f-343">-或-</span><span class="sxs-lookup"><span data-stu-id="4566f-343">-or-</span></span>  
  
 <span data-ttu-id="4566f-344"><paramref name="hour" /> 小於 0 或大於 23。</span><span class="sxs-lookup"><span data-stu-id="4566f-344"><paramref name="hour" /> is less than zero or greater than 23.</span></span>  
  
 <span data-ttu-id="4566f-345">-或-</span><span class="sxs-lookup"><span data-stu-id="4566f-345">-or-</span></span>  
  
 <span data-ttu-id="4566f-346"><paramref name="minute" /> 小於 0 或大於 59。</span><span class="sxs-lookup"><span data-stu-id="4566f-346"><paramref name="minute" /> is less than zero or greater than 59.</span></span>  
  
 <span data-ttu-id="4566f-347">-或-</span><span class="sxs-lookup"><span data-stu-id="4566f-347">-or-</span></span>  
  
 <span data-ttu-id="4566f-348"><paramref name="second" /> 小於 0 或大於 59。</span><span class="sxs-lookup"><span data-stu-id="4566f-348"><paramref name="second" /> is less than zero or greater than 59.</span></span>  
  
 <span data-ttu-id="4566f-349">-或-</span><span class="sxs-lookup"><span data-stu-id="4566f-349">-or-</span></span>  
  
 <span data-ttu-id="4566f-350"><paramref name="millisecond" /> 小於 0 或大於 999。</span><span class="sxs-lookup"><span data-stu-id="4566f-350"><paramref name="millisecond" /> is less than zero or greater than 999.</span></span></exception>
        <altmember cref="T:System.DateTime" />
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="F:System.Globalization.GregorianCalendar.ADEra" />
        <altmember cref="P:System.Globalization.GregorianCalendar.Eras" />
        <altmember cref="M:System.Globalization.GregorianCalendar.GetMonthsInYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.GregorianCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ToFourDigitYear">
      <MemberSignature Language="C#" Value="public override int ToFourDigitYear (int year);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 ToFourDigitYear(int32 year) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.GregorianCalendar.ToFourDigitYear(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToFourDigitYear (year As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int ToFourDigitYear(int year);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="4566f-351">兩位數或四位數整數，代表要轉換的年份。</span><span class="sxs-lookup"><span data-stu-id="4566f-351">A two-digit or four-digit integer that represents the year to convert.</span></span></param>
        <summary><span data-ttu-id="4566f-352">將指定的年份轉換為 4 位數年份，方法是使用 <see cref="P:System.Globalization.GregorianCalendar.TwoDigitYearMax" /> 屬性以判斷適當的世紀。</span><span class="sxs-lookup"><span data-stu-id="4566f-352">Converts the specified year to a four-digit year by using the <see cref="P:System.Globalization.GregorianCalendar.TwoDigitYearMax" /> property to determine the appropriate century.</span></span></summary>
        <returns><span data-ttu-id="4566f-353">整數，包含 <paramref name="year" /> 的四位數表示。</span><span class="sxs-lookup"><span data-stu-id="4566f-353">An integer that contains the four-digit representation of <paramref name="year" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4566f-354"><xref:System.Globalization.GregorianCalendar.TwoDigitYearMax%2A> 是以兩位數年份表示時，該 100 年範圍中的最後一年。</span><span class="sxs-lookup"><span data-stu-id="4566f-354"><xref:System.Globalization.GregorianCalendar.TwoDigitYearMax%2A> is the last year in the 100-year range that can be represented by a two-digit year.</span></span> <span data-ttu-id="4566f-355">世紀所找到的兩位數的唯一項目決定`year`該 100 年範圍內。</span><span class="sxs-lookup"><span data-stu-id="4566f-355">The century is determined by finding the sole occurrence of the two-digit `year` within that 100-year range.</span></span> <span data-ttu-id="4566f-356">例如，如果<xref:System.Globalization.GregorianCalendar.TwoDigitYearMax%2A>設為 2029，100 年範圍是從 1930年到 2029年。</span><span class="sxs-lookup"><span data-stu-id="4566f-356">For example, if <xref:System.Globalization.GregorianCalendar.TwoDigitYearMax%2A> is set to 2029, the 100-year range is from 1930 to 2029.</span></span> <span data-ttu-id="4566f-357">因此，30 的 2 位數值會解譯為 1930，而 2 位數為 29 值解譯為 2029年。</span><span class="sxs-lookup"><span data-stu-id="4566f-357">Therefore, a 2-digit value of 30 is interpreted as 1930, while a 2-digit value of 29 is interpreted as 2029.</span></span>  
  
 <span data-ttu-id="4566f-358"><xref:System.Globalization.GregorianCalendar.ToFourDigitYear%2A> 支援兩位數年份或四位數年份。</span><span class="sxs-lookup"><span data-stu-id="4566f-358"><xref:System.Globalization.GregorianCalendar.ToFourDigitYear%2A> supports either a two-digit year or a four-digit year.</span></span> <span data-ttu-id="4566f-359">傳遞的兩位數年份值 (小於 100) 將使這個方法將值轉換為四位數的值根據<xref:System.Globalization.GregorianCalendar.TwoDigitYearMax%2A>值，表示該適當世紀。</span><span class="sxs-lookup"><span data-stu-id="4566f-359">Passing a two-digit year value (less than 100) causes the method to convert the value to a four-digit value according to the <xref:System.Globalization.GregorianCalendar.TwoDigitYearMax%2A> value representing the appropriate century.</span></span> <span data-ttu-id="4566f-360">如果應用程式提供支援的行事曆範圍內的四位數年份值<xref:System.Globalization.GregorianCalendar.ToFourDigitYear%2A>，方法會傳回實際的輸入的值。</span><span class="sxs-lookup"><span data-stu-id="4566f-360">If the application supplies a four-digit year value that is within the supported calendar range to <xref:System.Globalization.GregorianCalendar.ToFourDigitYear%2A>, the method returns the actual input value.</span></span> <span data-ttu-id="4566f-361">如果應用程式提供支援的行事曆範圍四位數值或它提供一個負數值，方法會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="4566f-361">If the application supplies a four-digit value that is outside the supported calendar range, or if it supplies a negative value, the method throws an exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4566f-362"><paramref name="year" /> 不在曆法支援的範圍內。</span><span class="sxs-lookup"><span data-stu-id="4566f-362"><paramref name="year" /> is outside the range supported by the calendar.</span></span></exception>
        <altmember cref="P:System.Globalization.GregorianCalendar.TwoDigitYearMax" />
      </Docs>
    </Member>
    <Member MemberName="TwoDigitYearMax">
      <MemberSignature Language="C#" Value="public override int TwoDigitYearMax { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TwoDigitYearMax" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.GregorianCalendar.TwoDigitYearMax" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property TwoDigitYearMax As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int TwoDigitYearMax { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4566f-363">取得或設定以二位數年份表示時，該 100 年範圍的最後一年。</span><span class="sxs-lookup"><span data-stu-id="4566f-363">Gets or sets the last year of a 100-year range that can be represented by a 2-digit year.</span></span></summary>
        <value><span data-ttu-id="4566f-364">以二位數年份表示時，該 100 年範圍的最後一年。</span><span class="sxs-lookup"><span data-stu-id="4566f-364">The last year of a 100-year range that can be represented by a 2-digit year.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4566f-365">這個屬性允許 2 位數的年份的 4 位數年份正確轉譯。</span><span class="sxs-lookup"><span data-stu-id="4566f-365">This property allows a 2-digit year to be properly translated to a 4-digit year.</span></span> <span data-ttu-id="4566f-366">例如，如果這個屬性設定為 2029年，100 年範圍是從 1930年到 2029年。</span><span class="sxs-lookup"><span data-stu-id="4566f-366">For example, if this property is set to 2029, the 100-year range is from 1930 to 2029.</span></span> <span data-ttu-id="4566f-367">因此，30 的 2 位數值會解譯為 1930，而 2 位數為 29 值解譯為 2029年。</span><span class="sxs-lookup"><span data-stu-id="4566f-367">Therefore, a 2-digit value of 30 is interpreted as 1930, while a 2-digit value of 29 is interpreted as 2029.</span></span>  
  
 <span data-ttu-id="4566f-368">這個屬性的起始值被衍生自 控制台 的地區及語言選項 部分中的設定。</span><span class="sxs-lookup"><span data-stu-id="4566f-368">The initial value of this property is derived from the settings in the regional and language options portion of Control Panel.</span></span> <span data-ttu-id="4566f-369">不過，該資訊可以變更的生命期限內<xref:System.AppDomain>。</span><span class="sxs-lookup"><span data-stu-id="4566f-369">However, that information can change during the life of the <xref:System.AppDomain>.</span></span> <span data-ttu-id="4566f-370"><xref:System.Globalization.GregorianCalendar>類別不會偵測系統設定中變更自動。</span><span class="sxs-lookup"><span data-stu-id="4566f-370">The <xref:System.Globalization.GregorianCalendar> class does not detect changes in the system settings automatically.</span></span>  
  
 <span data-ttu-id="4566f-371">應用程式應將此值為 99，表示就其字面 2 位數的年份。</span><span class="sxs-lookup"><span data-stu-id="4566f-371">The application should set this value to 99 to indicate that 2-digit years are to be taken literally.</span></span> <span data-ttu-id="4566f-372">例如，這個屬性設定為 99，100 年範圍是從 0 （不是有效值大部分的行事曆） 到 99。</span><span class="sxs-lookup"><span data-stu-id="4566f-372">For example, if this property is set to 99, the 100-year range is from 0 (not a valid value for most calendars) to 99.</span></span> <span data-ttu-id="4566f-373">因此，30 的 2 位數值會解譯為 30。</span><span class="sxs-lookup"><span data-stu-id="4566f-373">Therefore, a 2-digit value of 30 is interpreted as 30.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="4566f-374">在設定作業中指定的值小於 99。</span><span class="sxs-lookup"><span data-stu-id="4566f-374">The value specified in a set operation is less than 99.</span></span>  
  
 <span data-ttu-id="4566f-375">-或-</span><span class="sxs-lookup"><span data-stu-id="4566f-375">-or-</span></span>  
  
 <span data-ttu-id="4566f-376">在設定作業中指定的值大於 <see langword="MaxSupportedDateTime.Year" />。</span><span class="sxs-lookup"><span data-stu-id="4566f-376">The value specified in a set operation is greater than <see langword="MaxSupportedDateTime.Year" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4566f-377">在設定作業中，目前執行個體是唯讀的。</span><span class="sxs-lookup"><span data-stu-id="4566f-377">In a set operation, the current instance is read-only.</span></span></exception>
        <altmember cref="M:System.Globalization.GregorianCalendar.ToFourDigitYear(System.Int32)" />
      </Docs>
    </Member>
  </Members>
</Type>