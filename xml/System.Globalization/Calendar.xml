<Type Name="Calendar" FullName="System.Globalization.Calendar">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e31033e3a263b8b773195c82db19cb1afb6da16d" /><Meta Name="ms.sourcegitcommit" Value="9e3550fb2088d4faf2043f0acb29da4555519937" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="12/12/2018" /><Meta Name="ms.locfileid" Value="53297056" /></Metadata><TypeSignature Language="C#" Value="public abstract class Calendar : ICloneable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit Calendar extends System.Object implements class System.ICloneable" />
  <TypeSignature Language="DocId" Value="T:System.Globalization.Calendar" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Calendar&#xA;Implements ICloneable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Calendar abstract : ICloneable" />
  <TypeSignature Language="F#" Value="type Calendar = class&#xA;    interface ICloneable" />
  <AssemblyInfo>
    <AssemblyName>System.Globalization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="918f8-101">代表劃分的時間，例如週、月和年。</span><span class="sxs-lookup"><span data-stu-id="918f8-101">Represents time in divisions, such as weeks, months, and years.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="918f8-102">行事曆分成單位，例如週、 月和年的時間。</span><span class="sxs-lookup"><span data-stu-id="918f8-102">A calendar divides time into units, such as weeks, months, and years.</span></span> <span data-ttu-id="918f8-103">在每個行事曆，差異數、 長度和部門的開頭。</span><span class="sxs-lookup"><span data-stu-id="918f8-103">The number, length, and start of the divisions vary in each calendar.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="918f8-104">.NET Framework 中使用的曆法類別的相關資訊，請參閱[使用行事曆](~/docs/standard/datetime/working-with-calendars.md)。</span><span class="sxs-lookup"><span data-stu-id="918f8-104">For information about using the calendar classes in the .NET Framework, see [Working with Calendars](~/docs/standard/datetime/working-with-calendars.md).</span></span>  
  
 <span data-ttu-id="918f8-105">任何時間點可以表示為一組數值資料，請使用特定的行事曆。</span><span class="sxs-lookup"><span data-stu-id="918f8-105">Any moment in time can be represented as a set of numeric values using a particular calendar.</span></span> <span data-ttu-id="918f8-106">比方說，春分連接發生 (1999 年，3、 20、 8、 46、 0、 0.0) 西曆日曆，也就是年 3 月 20，1999年</span><span class="sxs-lookup"><span data-stu-id="918f8-106">For example, a vernal equinox occurred at (1999, 3, 20, 8, 46, 0, 0.0) in the Gregorian calendar, that is, March 20, 1999 C.E.</span></span> <span data-ttu-id="918f8-107">在 8:46:00:0.0。</span><span class="sxs-lookup"><span data-stu-id="918f8-107">at 8:46:00:0.0.</span></span> <span data-ttu-id="918f8-108">實作<xref:System.Globalization.Calendar>可以將任何日期範圍內的特定行事曆對應至一組類似的數字的值，並<xref:System.DateTime>可以將這類的數值集對應至使用中的資訊的文字表示法<xref:System.Globalization.Calendar>和<xref:System.Globalization.DateTimeFormatInfo>。</span><span class="sxs-lookup"><span data-stu-id="918f8-108">An implementation of <xref:System.Globalization.Calendar> can map any date in the range of a specific calendar to a similar set of numeric values, and <xref:System.DateTime> can map such sets of numeric values to a textual representation using information from <xref:System.Globalization.Calendar> and <xref:System.Globalization.DateTimeFormatInfo>.</span></span> <span data-ttu-id="918f8-109">文字表示法可能會區分文化特性，例如，「 上午 8:46 年 3 月 20 1999 AD"EN-US 文化特性，或不區分文化特性，例如，"1999年-03-20T08:46:00"採用 ISO 8601 格式。</span><span class="sxs-lookup"><span data-stu-id="918f8-109">The textual representation can be culture-sensitive, for example, "8:46 AM March 20th 1999 AD" for the en-US culture, or culture-insensitive, for example, "1999-03-20T08:46:00" in ISO 8601 format.</span></span>  
  
 <span data-ttu-id="918f8-110">A<xref:System.Globalization.Calendar>實作可以定義一或多個紀元。</span><span class="sxs-lookup"><span data-stu-id="918f8-110">A <xref:System.Globalization.Calendar> implementation can define one or more eras.</span></span> <span data-ttu-id="918f8-111"><xref:System.Globalization.Calendar>類別會識別出的紀元為列舉的整數，其中目前的紀元 (<xref:System.Globalization.Calendar.CurrentEra>) 值是 0。</span><span class="sxs-lookup"><span data-stu-id="918f8-111">The <xref:System.Globalization.Calendar> class identifies the eras as enumerated integers, where the current era (<xref:System.Globalization.Calendar.CurrentEra>) has the value 0.</span></span>  

[!INCLUDE[japanese-era-note](~/includes/calendar-era.md)]

 <span data-ttu-id="918f8-112">若要構成日曆年度和地球繞太陽的實際時間或月亮繞地球的實際時間之間的差異，閏年有從標準的日曆年度不同數目的天數。</span><span class="sxs-lookup"><span data-stu-id="918f8-112">To make up for the difference between the calendar year and the actual time that the earth rotates around the sun or the actual time that the moon rotates around the earth, a leap year has a different number of days from a standard calendar year.</span></span> <span data-ttu-id="918f8-113">每個<xref:System.Globalization.Calendar>實作以不同的方式定義潤年。</span><span class="sxs-lookup"><span data-stu-id="918f8-113">Each <xref:System.Globalization.Calendar> implementation defines leap years differently.</span></span>  
  
 <span data-ttu-id="918f8-114">為求一致，每個間隔 （第一個月，例如） 中的第一個單位會指派值 1。</span><span class="sxs-lookup"><span data-stu-id="918f8-114">For consistency, the first unit in each interval (the first month, for example) is assigned the value 1.</span></span>  
  
 <span data-ttu-id="918f8-115"><xref:System.Globalization>命名空間包含下列<xref:System.Globalization.Calendar>實作：</span><span class="sxs-lookup"><span data-stu-id="918f8-115">The <xref:System.Globalization> namespace includes the following <xref:System.Globalization.Calendar> implementations:</span></span>  
  
-   <xref:System.Globalization.ChineseLunisolarCalendar>  
  
-   <xref:System.Globalization.EastAsianLunisolarCalendar>  
  
-   <xref:System.Globalization.GregorianCalendar>  
  
-   <xref:System.Globalization.HebrewCalendar>  
  
-   <xref:System.Globalization.HijriCalendar>  
  
-   <xref:System.Globalization.JapaneseCalendar>  
  
-   <xref:System.Globalization.JapaneseLunisolarCalendar>  
  
-   <xref:System.Globalization.JulianCalendar>  
  
-   <xref:System.Globalization.KoreanCalendar>  
  
-   <xref:System.Globalization.KoreanLunisolarCalendar>  
  
-   <xref:System.Globalization.PersianCalendar>  
  
-   <xref:System.Globalization.TaiwanCalendar>  
  
-   <xref:System.Globalization.TaiwanLunisolarCalendar>  
  
-   <xref:System.Globalization.ThaiBuddhistCalendar>  
  
-   <xref:System.Globalization.UmAlQuraCalendar>  
  
   
  
## Examples  
 <span data-ttu-id="918f8-116">下列程式碼範例將示範成員<xref:System.Globalization.Calendar>類別。</span><span class="sxs-lookup"><span data-stu-id="918f8-116">The following code example demonstrates the members of the <xref:System.Globalization.Calendar> class.</span></span>  
  
 [!code-cpp[System.Globalization.Calendar#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar/CPP/calendar.cpp#1)]
 [!code-csharp[System.Globalization.Calendar#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar/CS/calendar.cs#1)]
 [!code-vb[System.Globalization.Calendar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar/VB/calendar.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.DateTime" />
    <altmember cref="T:System.Globalization.DateTimeFormatInfo" />
    <altmember cref="T:System.Globalization.ChineseLunisolarCalendar" />
    <altmember cref="T:System.Globalization.EastAsianLunisolarCalendar" />
    <altmember cref="T:System.Globalization.GregorianCalendar" />
    <altmember cref="T:System.Globalization.HebrewCalendar" />
    <altmember cref="T:System.Globalization.HijriCalendar" />
    <altmember cref="T:System.Globalization.JapaneseCalendar" />
    <altmember cref="T:System.Globalization.JapaneseLunisolarCalendar" />
    <altmember cref="T:System.Globalization.JulianCalendar" />
    <altmember cref="T:System.Globalization.KoreanCalendar" />
    <altmember cref="T:System.Globalization.KoreanLunisolarCalendar" />
    <altmember cref="T:System.Globalization.PersianCalendar" />
    <altmember cref="T:System.Globalization.TaiwanCalendar" />
    <altmember cref="T:System.Globalization.TaiwanLunisolarCalendar" />
    <altmember cref="T:System.Globalization.ThaiBuddhistCalendar" />
    <altmember cref="T:System.Globalization.UmAlQuraCalendar" />
    <related type="Article" href="~/docs/standard/datetime/working-with-calendars.md"><span data-ttu-id="918f8-117">使用行事曆</span><span class="sxs-lookup"><span data-stu-id="918f8-117">Working with Calendars</span></span></related>
    <related type="ExternalDocumentation" href="https://code.msdn.microsoft.com/NET-Framework-4-Calendar-3360a84a"><span data-ttu-id="918f8-118">範例：行事曆週範圍公用程式</span><span class="sxs-lookup"><span data-stu-id="918f8-118">Sample: Calendar Week Range Utility</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Calendar ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Calendar();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="918f8-119">初始化 <see cref="T:System.Globalization.Calendar" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="918f8-119">Initializes a new instance of the <see cref="T:System.Globalization.Calendar" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="918f8-120">下列範例將示範成員<xref:System.Globalization.Calendar>類別。</span><span class="sxs-lookup"><span data-stu-id="918f8-120">The following example demonstrates the members of the <xref:System.Globalization.Calendar> class.</span></span>  
  
 [!code-cpp[System.Globalization.Calendar#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar/CPP/calendar.cpp#1)]
 [!code-csharp[System.Globalization.Calendar#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar/CS/calendar.cs#1)]
 [!code-vb[System.Globalization.Calendar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar/VB/calendar.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage"><para><span data-ttu-id="918f8-121">在  [!INCLUDE[net_portable](~/includes/net-portable-md.md)]，則<see cref="T:System.Globalization.Calendar" />類別建構函式無法使用，而且衍生自<see cref="T:System.Globalization.Calendar" />不是公用的。</span><span class="sxs-lookup"><span data-stu-id="918f8-121">In the [!INCLUDE[net_portable](~/includes/net-portable-md.md)], the <see cref="T:System.Globalization.Calendar" /> class constructor is unavailable, and classes derived from <see cref="T:System.Globalization.Calendar" /> are not public.</span></span> <span data-ttu-id="918f8-122">如果您想要的行事曆的特定型別，例如西曆物件，您必須擷取從<see cref="P:System.Globalization.CultureInfo.Calendar" />或是<see cref="P:System.Globalization.DateTimeFormatInfo.Calendar" />屬性，或從<see cref="P:System.Globalization.CultureInfo.OptionalCalendars" />屬性陣列。</span><span class="sxs-lookup"><span data-stu-id="918f8-122">If you want a calendar of a specific type, such as a Gregorian calendar object, you have to retrieve it from the <see cref="P:System.Globalization.CultureInfo.Calendar" /> or <see cref="P:System.Globalization.DateTimeFormatInfo.Calendar" /> property, or from the <see cref="P:System.Globalization.CultureInfo.OptionalCalendars" /> property array.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="AddDays">
      <MemberSignature Language="C#" Value="public virtual DateTime AddDays (DateTime time, int days);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.DateTime AddDays(valuetype System.DateTime time, int32 days) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.AddDays(System.DateTime,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddDays (time As DateTime, days As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual DateTime AddDays(DateTime time, int days);" />
      <MemberSignature Language="F#" Value="abstract member AddDays : DateTime * int -&gt; DateTime&#xA;override this.AddDays : DateTime * int -&gt; DateTime" Usage="calendar.AddDays (time, days)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
        <Parameter Name="days" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="time"><span data-ttu-id="918f8-123">要將日數加入的 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="918f8-123">The <see cref="T:System.DateTime" /> to which to add days.</span></span></param>
        <param name="days"><span data-ttu-id="918f8-124">要加入的日數。</span><span class="sxs-lookup"><span data-stu-id="918f8-124">The number of days to add.</span></span></param>
        <summary><span data-ttu-id="918f8-125">傳回與指定 <see cref="T:System.DateTime" /> 相差指定日數的 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="918f8-125">Returns a <see cref="T:System.DateTime" /> that is the specified number of days away from the specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="918f8-126"><see cref="T:System.DateTime" />，由將指定日數加入指定 <see cref="T:System.DateTime" /> 所產生。</span><span class="sxs-lookup"><span data-stu-id="918f8-126">The <see cref="T:System.DateTime" /> that results from adding the specified number of days to the specified <see cref="T:System.DateTime" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="918f8-127">`days`值會加入至指定<xref:System.DateTime>。</span><span class="sxs-lookup"><span data-stu-id="918f8-127">The `days` value is added to the specified <xref:System.DateTime>.</span></span> <span data-ttu-id="918f8-128">如果`days`是負數，產生<xref:System.DateTime>早於指定<xref:System.DateTime>。</span><span class="sxs-lookup"><span data-stu-id="918f8-128">If `days` is negative, the resulting <xref:System.DateTime> is earlier than the specified <xref:System.DateTime>.</span></span>  
  
 <span data-ttu-id="918f8-129">產生的月份部分<xref:System.DateTime>產生的日期超出指定的月份會受到影響<xref:System.DateTime>。</span><span class="sxs-lookup"><span data-stu-id="918f8-129">The month part of the resulting <xref:System.DateTime> is affected if the resulting day is outside the month of the specified <xref:System.DateTime>.</span></span> <span data-ttu-id="918f8-130">產生的年份部分<xref:System.DateTime>產生的月份超出指定的年份會受到影響<xref:System.DateTime>。</span><span class="sxs-lookup"><span data-stu-id="918f8-130">The year part of the resulting <xref:System.DateTime> is affected if the resulting month is outside the year of the specified <xref:System.DateTime>.</span></span> <span data-ttu-id="918f8-131">產生的紀元一部分<xref:System.DateTime>產生的 year 超出指定的紀元會受到影響<xref:System.DateTime>。</span><span class="sxs-lookup"><span data-stu-id="918f8-131">The era part of the resulting <xref:System.DateTime> is affected if the resulting year is outside the era of the specified <xref:System.DateTime>.</span></span> <span data-ttu-id="918f8-132">產生的日期時間部分<xref:System.DateTime>維持不變，與指定<xref:System.DateTime>。</span><span class="sxs-lookup"><span data-stu-id="918f8-132">The time-of-day part of the resulting <xref:System.DateTime> remains the same as the specified <xref:System.DateTime>.</span></span>  
  
 <span data-ttu-id="918f8-133"><xref:System.DateTime.Kind%2A>屬性傳回之<xref:System.DateTime>值一律等於<xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="918f8-133">The <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value always equals <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>.</span></span> <span data-ttu-id="918f8-134">您可以保留<xref:System.DateTime.Kind%2A>的屬性`time`藉由呼叫的參數<xref:System.DateTime.SpecifyKind%2A?displayProperty=nameWithType>方法，如下列範例所示。</span><span class="sxs-lookup"><span data-stu-id="918f8-134">You can preserve the <xref:System.DateTime.Kind%2A> property of the `time` parameter by calling the <xref:System.DateTime.SpecifyKind%2A?displayProperty=nameWithType> method, as the following example shows.</span></span>  
  
 [!code-csharp[System.Globalization.Calendar.AddMethods#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/cs/add1.cs#1)]
 [!code-vb[System.Globalization.Calendar.AddMethods#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/vb/add1.vb#1)]  
  
   
  
## Examples  
 <span data-ttu-id="918f8-135">下列程式碼範例將示範成員<xref:System.Globalization.Calendar>類別。</span><span class="sxs-lookup"><span data-stu-id="918f8-135">The following code example demonstrates the members of the <xref:System.Globalization.Calendar> class.</span></span>  
  
 [!code-cpp[System.Globalization.Calendar#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar/CPP/calendar.cpp#1)]
 [!code-csharp[System.Globalization.Calendar#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar/CS/calendar.cs#1)]
 [!code-vb[System.Globalization.Calendar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar/VB/calendar.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="918f8-136">產生的 <see cref="T:System.DateTime" /> 在此月曆支援的範圍之外。</span><span class="sxs-lookup"><span data-stu-id="918f8-136">The resulting <see cref="T:System.DateTime" /> is outside the supported range of this calendar.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="918f8-137"><paramref name="days" /> 不在 <see cref="T:System.DateTime" /> 傳回值支援的範圍內。</span><span class="sxs-lookup"><span data-stu-id="918f8-137"><paramref name="days" /> is outside the supported range of the <see cref="T:System.DateTime" /> return value.</span></span></exception>
        <altmember cref="T:System.DateTime" />
        <altmember cref="M:System.Globalization.Calendar.AddYears(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMonths(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddWeeks(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddHours(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMinutes(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddSeconds(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMilliseconds(System.DateTime,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="AddHours">
      <MemberSignature Language="C#" Value="public virtual DateTime AddHours (DateTime time, int hours);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.DateTime AddHours(valuetype System.DateTime time, int32 hours) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.AddHours(System.DateTime,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddHours (time As DateTime, hours As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual DateTime AddHours(DateTime time, int hours);" />
      <MemberSignature Language="F#" Value="abstract member AddHours : DateTime * int -&gt; DateTime&#xA;override this.AddHours : DateTime * int -&gt; DateTime" Usage="calendar.AddHours (time, hours)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
        <Parameter Name="hours" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="time"><span data-ttu-id="918f8-138">要將小時加入的 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="918f8-138">The <see cref="T:System.DateTime" /> to which to add hours.</span></span></param>
        <param name="hours"><span data-ttu-id="918f8-139">要加入的時數。</span><span class="sxs-lookup"><span data-stu-id="918f8-139">The number of hours to add.</span></span></param>
        <summary><span data-ttu-id="918f8-140">傳回與指定 <see cref="T:System.DateTime" /> 相差指定時數的 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="918f8-140">Returns a <see cref="T:System.DateTime" /> that is the specified number of hours away from the specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="918f8-141"><see cref="T:System.DateTime" />，由將指定時數加入指定 <see cref="T:System.DateTime" /> 所產生。</span><span class="sxs-lookup"><span data-stu-id="918f8-141">The <see cref="T:System.DateTime" /> that results from adding the specified number of hours to the specified <see cref="T:System.DateTime" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="918f8-142">`hours`值會加入至指定<xref:System.DateTime>。</span><span class="sxs-lookup"><span data-stu-id="918f8-142">The `hours` value is added to the specified <xref:System.DateTime>.</span></span> <span data-ttu-id="918f8-143">如果`hours`是負數，產生<xref:System.DateTime>早於指定<xref:System.DateTime>。</span><span class="sxs-lookup"><span data-stu-id="918f8-143">If `hours` is negative, the resulting <xref:System.DateTime> is earlier than the specified <xref:System.DateTime>.</span></span>  
  
 <span data-ttu-id="918f8-144">產生的日期部分<xref:System.DateTime>產生的時間超出指定的日期會受到影響<xref:System.DateTime>。</span><span class="sxs-lookup"><span data-stu-id="918f8-144">The day part of the resulting <xref:System.DateTime> is affected if the resulting time is outside the day of the specified <xref:System.DateTime>.</span></span> <span data-ttu-id="918f8-145">產生的月份部分<xref:System.DateTime>產生的日期超出指定的月份會受到影響<xref:System.DateTime>。</span><span class="sxs-lookup"><span data-stu-id="918f8-145">The month part of the resulting <xref:System.DateTime> is affected if the resulting day is outside the month of the specified <xref:System.DateTime>.</span></span> <span data-ttu-id="918f8-146">產生的年份部分<xref:System.DateTime>產生的月份超出指定的年份會受到影響<xref:System.DateTime>。</span><span class="sxs-lookup"><span data-stu-id="918f8-146">The year part of the resulting <xref:System.DateTime> is affected if the resulting month is outside the year of the specified <xref:System.DateTime>.</span></span> <span data-ttu-id="918f8-147">產生的紀元一部分<xref:System.DateTime>產生的 year 超出指定的紀元會受到影響<xref:System.DateTime>。</span><span class="sxs-lookup"><span data-stu-id="918f8-147">The era part of the resulting <xref:System.DateTime> is affected if the resulting year is outside the era of the specified <xref:System.DateTime>.</span></span>  
  
 <span data-ttu-id="918f8-148"><xref:System.DateTime.Kind%2A>屬性傳回之<xref:System.DateTime>值一律等於<xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="918f8-148">The <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value always equals <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>.</span></span> <span data-ttu-id="918f8-149">您可以保留<xref:System.DateTime.Kind%2A>的屬性`time`藉由呼叫的參數<xref:System.DateTime.SpecifyKind%2A?displayProperty=nameWithType>方法，如下列範例所示。</span><span class="sxs-lookup"><span data-stu-id="918f8-149">You can preserve the <xref:System.DateTime.Kind%2A> property of the `time` parameter by calling the <xref:System.DateTime.SpecifyKind%2A?displayProperty=nameWithType> method, as the following example shows.</span></span>  
  
 [!code-csharp[System.Globalization.Calendar.AddMethods#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/cs/add1.cs#2)]
 [!code-vb[System.Globalization.Calendar.AddMethods#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/vb/add1.vb#2)]  
  
   
  
## Examples  
 <span data-ttu-id="918f8-150">下列程式碼範例將示範成員<xref:System.Globalization.Calendar>類別。</span><span class="sxs-lookup"><span data-stu-id="918f8-150">The following code example demonstrates the members of the <xref:System.Globalization.Calendar> class.</span></span>  
  
 [!code-cpp[System.Globalization.Calendar#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar/CPP/calendar.cpp#1)]
 [!code-csharp[System.Globalization.Calendar#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar/CS/calendar.cs#1)]
 [!code-vb[System.Globalization.Calendar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar/VB/calendar.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="918f8-151">產生的 <see cref="T:System.DateTime" /> 在此月曆支援的範圍之外。</span><span class="sxs-lookup"><span data-stu-id="918f8-151">The resulting <see cref="T:System.DateTime" /> is outside the supported range of this calendar.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="918f8-152"><paramref name="hours" /> 不在 <see cref="T:System.DateTime" /> 傳回值支援的範圍內。</span><span class="sxs-lookup"><span data-stu-id="918f8-152"><paramref name="hours" /> is outside the supported range of the <see cref="T:System.DateTime" /> return value.</span></span></exception>
        <altmember cref="T:System.DateTime" />
        <altmember cref="M:System.Globalization.Calendar.AddYears(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMonths(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddWeeks(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddDays(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMinutes(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddSeconds(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMilliseconds(System.DateTime,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="AddMilliseconds">
      <MemberSignature Language="C#" Value="public virtual DateTime AddMilliseconds (DateTime time, double milliseconds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.DateTime AddMilliseconds(valuetype System.DateTime time, float64 milliseconds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.AddMilliseconds(System.DateTime,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddMilliseconds (time As DateTime, milliseconds As Double) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual DateTime AddMilliseconds(DateTime time, double milliseconds);" />
      <MemberSignature Language="F#" Value="abstract member AddMilliseconds : DateTime * double -&gt; DateTime&#xA;override this.AddMilliseconds : DateTime * double -&gt; DateTime" Usage="calendar.AddMilliseconds (time, milliseconds)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
        <Parameter Name="milliseconds" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="time"><span data-ttu-id="918f8-153">要加入毫秒的 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="918f8-153">The <see cref="T:System.DateTime" /> to add milliseconds to.</span></span></param>
        <param name="milliseconds"><span data-ttu-id="918f8-154">要加入的毫秒數。</span><span class="sxs-lookup"><span data-stu-id="918f8-154">The number of milliseconds to add.</span></span></param>
        <summary><span data-ttu-id="918f8-155">傳回與指定 <see cref="T:System.DateTime" /> 相差指定毫秒數的 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="918f8-155">Returns a <see cref="T:System.DateTime" /> that is the specified number of milliseconds away from the specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="918f8-156"><see cref="T:System.DateTime" />，由將指定毫秒數加入指定 <see cref="T:System.DateTime" /> 所產生。</span><span class="sxs-lookup"><span data-stu-id="918f8-156">The <see cref="T:System.DateTime" /> that results from adding the specified number of milliseconds to the specified <see cref="T:System.DateTime" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="918f8-157">`milliseconds`值會四捨五入為最接近的整數之前它會新增, 至指定<xref:System.DateTime>。</span><span class="sxs-lookup"><span data-stu-id="918f8-157">The `milliseconds` value is rounded to the nearest integer before it is added to the specified <xref:System.DateTime>.</span></span> <span data-ttu-id="918f8-158">如果`milliseconds`是負數，產生<xref:System.DateTime>早於指定<xref:System.DateTime>。</span><span class="sxs-lookup"><span data-stu-id="918f8-158">If `milliseconds` is negative, the resulting <xref:System.DateTime> is earlier than the specified <xref:System.DateTime>.</span></span>  
  
 <span data-ttu-id="918f8-159">產生的日期部分<xref:System.DateTime>產生的時間超出指定的日期會受到影響<xref:System.DateTime>。</span><span class="sxs-lookup"><span data-stu-id="918f8-159">The day part of the resulting <xref:System.DateTime> is affected if the resulting time is outside the day of the specified <xref:System.DateTime>.</span></span> <span data-ttu-id="918f8-160">產生的月份部分<xref:System.DateTime>產生的日期超出指定的月份會受到影響<xref:System.DateTime>。</span><span class="sxs-lookup"><span data-stu-id="918f8-160">The month part of the resulting <xref:System.DateTime> is affected if the resulting day is outside the month of the specified <xref:System.DateTime>.</span></span> <span data-ttu-id="918f8-161">產生的年份部分<xref:System.DateTime>產生的月份超出指定的年份會受到影響<xref:System.DateTime>。</span><span class="sxs-lookup"><span data-stu-id="918f8-161">The year part of the resulting <xref:System.DateTime> is affected if the resulting month is outside the year of the specified <xref:System.DateTime>.</span></span> <span data-ttu-id="918f8-162">產生的紀元一部分<xref:System.DateTime>產生的 year 超出指定的紀元會受到影響<xref:System.DateTime>。</span><span class="sxs-lookup"><span data-stu-id="918f8-162">The era part of the resulting <xref:System.DateTime> is affected if the resulting year is outside the era of the specified <xref:System.DateTime>.</span></span>  
  
 <span data-ttu-id="918f8-163"><xref:System.DateTime.Kind%2A>屬性傳回之<xref:System.DateTime>值一律等於<xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="918f8-163">The <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value always equals <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>.</span></span> <span data-ttu-id="918f8-164">您可以保留<xref:System.DateTime.Kind%2A>的屬性`time`藉由呼叫的參數<xref:System.DateTime.SpecifyKind%2A?displayProperty=nameWithType>方法，如下列範例所示。</span><span class="sxs-lookup"><span data-stu-id="918f8-164">You can preserve the <xref:System.DateTime.Kind%2A> property of the `time` parameter by calling the <xref:System.DateTime.SpecifyKind%2A?displayProperty=nameWithType> method, as the following example shows.</span></span>  
  
 [!code-csharp[System.Globalization.Calendar.AddMethods#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/cs/add1.cs#3)]
 [!code-vb[System.Globalization.Calendar.AddMethods#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/vb/add1.vb#3)]  
  
   
  
## Examples  
 <span data-ttu-id="918f8-165">下列程式碼範例將示範成員<xref:System.Globalization.Calendar>類別。</span><span class="sxs-lookup"><span data-stu-id="918f8-165">The following code example demonstrates the members of the <xref:System.Globalization.Calendar> class.</span></span>  
  
 [!code-cpp[System.Globalization.Calendar#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar/CPP/calendar.cpp#1)]
 [!code-csharp[System.Globalization.Calendar#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar/CS/calendar.cs#1)]
 [!code-vb[System.Globalization.Calendar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar/VB/calendar.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="918f8-166">產生的 <see cref="T:System.DateTime" /> 在此月曆支援的範圍之外。</span><span class="sxs-lookup"><span data-stu-id="918f8-166">The resulting <see cref="T:System.DateTime" /> is outside the supported range of this calendar.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="918f8-167"><paramref name="milliseconds" /> 不在 <see cref="T:System.DateTime" /> 傳回值支援的範圍內。</span><span class="sxs-lookup"><span data-stu-id="918f8-167"><paramref name="milliseconds" /> is outside the supported range of the <see cref="T:System.DateTime" /> return value.</span></span></exception>
        <altmember cref="T:System.DateTime" />
        <altmember cref="M:System.Globalization.Calendar.AddYears(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMonths(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddWeeks(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddDays(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddHours(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMinutes(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddSeconds(System.DateTime,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="AddMinutes">
      <MemberSignature Language="C#" Value="public virtual DateTime AddMinutes (DateTime time, int minutes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.DateTime AddMinutes(valuetype System.DateTime time, int32 minutes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.AddMinutes(System.DateTime,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddMinutes (time As DateTime, minutes As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual DateTime AddMinutes(DateTime time, int minutes);" />
      <MemberSignature Language="F#" Value="abstract member AddMinutes : DateTime * int -&gt; DateTime&#xA;override this.AddMinutes : DateTime * int -&gt; DateTime" Usage="calendar.AddMinutes (time, minutes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
        <Parameter Name="minutes" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="time"><span data-ttu-id="918f8-168">要將分鐘加入的 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="918f8-168">The <see cref="T:System.DateTime" /> to which to add minutes.</span></span></param>
        <param name="minutes"><span data-ttu-id="918f8-169">要加入的分鐘數。</span><span class="sxs-lookup"><span data-stu-id="918f8-169">The number of minutes to add.</span></span></param>
        <summary><span data-ttu-id="918f8-170">傳回與指定 <see cref="T:System.DateTime" /> 相差指定分鐘數的 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="918f8-170">Returns a <see cref="T:System.DateTime" /> that is the specified number of minutes away from the specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="918f8-171"><see cref="T:System.DateTime" />，由將指定分鐘數加入指定 <see cref="T:System.DateTime" /> 所產生。</span><span class="sxs-lookup"><span data-stu-id="918f8-171">The <see cref="T:System.DateTime" /> that results from adding the specified number of minutes to the specified <see cref="T:System.DateTime" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="918f8-172">`minutes`值會加入至指定<xref:System.DateTime>。</span><span class="sxs-lookup"><span data-stu-id="918f8-172">The `minutes` value is added to the specified <xref:System.DateTime>.</span></span> <span data-ttu-id="918f8-173">如果`minutes`是負數，產生<xref:System.DateTime>早於指定<xref:System.DateTime>。</span><span class="sxs-lookup"><span data-stu-id="918f8-173">If `minutes` is negative, the resulting <xref:System.DateTime> is earlier than the specified <xref:System.DateTime>.</span></span>  
  
 <span data-ttu-id="918f8-174">產生的日期部分<xref:System.DateTime>產生的時間超出指定的日期會受到影響<xref:System.DateTime>。</span><span class="sxs-lookup"><span data-stu-id="918f8-174">The day part of the resulting <xref:System.DateTime> is affected if the resulting time is outside the day of the specified <xref:System.DateTime>.</span></span> <span data-ttu-id="918f8-175">產生的月份部分<xref:System.DateTime>產生的日期超出指定的月份會受到影響<xref:System.DateTime>。</span><span class="sxs-lookup"><span data-stu-id="918f8-175">The month part of the resulting <xref:System.DateTime> is affected if the resulting day is outside the month of the specified <xref:System.DateTime>.</span></span> <span data-ttu-id="918f8-176">產生的年份部分<xref:System.DateTime>產生的月份超出指定的年份會受到影響<xref:System.DateTime>。</span><span class="sxs-lookup"><span data-stu-id="918f8-176">The year part of the resulting <xref:System.DateTime> is affected if the resulting month is outside the year of the specified <xref:System.DateTime>.</span></span> <span data-ttu-id="918f8-177">產生的紀元一部分<xref:System.DateTime>產生的 year 超出指定的紀元會受到影響<xref:System.DateTime>。</span><span class="sxs-lookup"><span data-stu-id="918f8-177">The era part of the resulting <xref:System.DateTime> is affected if the resulting year is outside the era of the specified <xref:System.DateTime>.</span></span>  
  
 <span data-ttu-id="918f8-178"><xref:System.DateTime.Kind%2A>屬性傳回之<xref:System.DateTime>值一律等於<xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="918f8-178">The <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value always equals <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>.</span></span> <span data-ttu-id="918f8-179">您可以保留<xref:System.DateTime.Kind%2A>的屬性`time`藉由呼叫的參數<xref:System.DateTime.SpecifyKind%2A?displayProperty=nameWithType>方法，如下列範例所示。</span><span class="sxs-lookup"><span data-stu-id="918f8-179">You can preserve the <xref:System.DateTime.Kind%2A> property of the `time` parameter by calling the <xref:System.DateTime.SpecifyKind%2A?displayProperty=nameWithType> method, as the following example shows.</span></span>  
  
 [!code-csharp[System.Globalization.Calendar.AddMethods#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/cs/add1.cs#4)]
 [!code-vb[System.Globalization.Calendar.AddMethods#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/vb/add1.vb#4)]  
  
   
  
## Examples  
 <span data-ttu-id="918f8-180">下列程式碼範例將示範成員<xref:System.Globalization.Calendar>類別。</span><span class="sxs-lookup"><span data-stu-id="918f8-180">The following code example demonstrates the members of the <xref:System.Globalization.Calendar> class.</span></span>  
  
 [!code-cpp[System.Globalization.Calendar#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar/CPP/calendar.cpp#1)]
 [!code-csharp[System.Globalization.Calendar#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar/CS/calendar.cs#1)]
 [!code-vb[System.Globalization.Calendar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar/VB/calendar.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="918f8-181">產生的 <see cref="T:System.DateTime" /> 在此月曆支援的範圍之外。</span><span class="sxs-lookup"><span data-stu-id="918f8-181">The resulting <see cref="T:System.DateTime" /> is outside the supported range of this calendar.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="918f8-182"><paramref name="minutes" /> 不在 <see cref="T:System.DateTime" /> 傳回值支援的範圍內。</span><span class="sxs-lookup"><span data-stu-id="918f8-182"><paramref name="minutes" /> is outside the supported range of the <see cref="T:System.DateTime" /> return value.</span></span></exception>
        <altmember cref="T:System.DateTime" />
        <altmember cref="M:System.Globalization.Calendar.AddYears(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMonths(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddWeeks(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddDays(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddHours(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddSeconds(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMilliseconds(System.DateTime,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="AddMonths">
      <MemberSignature Language="C#" Value="public abstract DateTime AddMonths (DateTime time, int months);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.DateTime AddMonths(valuetype System.DateTime time, int32 months) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.AddMonths(System.DateTime,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function AddMonths (time As DateTime, months As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract DateTime AddMonths(DateTime time, int months);" />
      <MemberSignature Language="F#" Value="abstract member AddMonths : DateTime * int -&gt; DateTime" Usage="calendar.AddMonths (time, months)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
        <Parameter Name="months" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="time"><span data-ttu-id="918f8-183">要將月份加入的 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="918f8-183">The <see cref="T:System.DateTime" /> to which to add months.</span></span></param>
        <param name="months"><span data-ttu-id="918f8-184">要加入的月數。</span><span class="sxs-lookup"><span data-stu-id="918f8-184">The number of months to add.</span></span></param>
        <summary><span data-ttu-id="918f8-185">當在衍生類別中覆寫時，傳回與指定 <see cref="T:System.DateTime" /> 相差指定月數的 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="918f8-185">When overridden in a derived class, returns a <see cref="T:System.DateTime" /> that is the specified number of months away from the specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="918f8-186"><see cref="T:System.DateTime" />，由將指定的月數加入指定的 <see cref="T:System.DateTime" /> 所產生。</span><span class="sxs-lookup"><span data-stu-id="918f8-186">The <see cref="T:System.DateTime" /> that results from adding the specified number of months to the specified <see cref="T:System.DateTime" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="918f8-187">`months`值會加入至指定<xref:System.DateTime>。</span><span class="sxs-lookup"><span data-stu-id="918f8-187">The `months` value is added to the specified <xref:System.DateTime>.</span></span> <span data-ttu-id="918f8-188">如果`months`是負數，產生<xref:System.DateTime>早於指定<xref:System.DateTime>。</span><span class="sxs-lookup"><span data-stu-id="918f8-188">If `months` is negative, the resulting <xref:System.DateTime> is earlier than the specified <xref:System.DateTime>.</span></span>  
  
 <span data-ttu-id="918f8-189">產生的日期部分<xref:System.DateTime>產生的日期不在產生的月份，產生的 year 的有效日期會受到影響。</span><span class="sxs-lookup"><span data-stu-id="918f8-189">The day part of the resulting <xref:System.DateTime> is affected if the resulting day is not a valid day in the resulting month of the resulting year.</span></span> <span data-ttu-id="918f8-190">它會變更為產生的 year 之產生的月份中最後一個有效的日期。</span><span class="sxs-lookup"><span data-stu-id="918f8-190">It is changed to the last valid day in the resulting month of the resulting year.</span></span> <span data-ttu-id="918f8-191">產生的年份部分<xref:System.DateTime>產生的月份超出指定的年份會受到影響<xref:System.DateTime>。</span><span class="sxs-lookup"><span data-stu-id="918f8-191">The year part of the resulting <xref:System.DateTime> is affected if the resulting month is outside the year of the specified <xref:System.DateTime>.</span></span> <span data-ttu-id="918f8-192">產生的紀元一部分<xref:System.DateTime>產生的 year 超出指定的紀元會受到影響<xref:System.DateTime>。</span><span class="sxs-lookup"><span data-stu-id="918f8-192">The era part of the resulting <xref:System.DateTime> is affected if the resulting year is outside the era of the specified <xref:System.DateTime>.</span></span> <span data-ttu-id="918f8-193">產生的日期時間部分<xref:System.DateTime>維持不變，與指定<xref:System.DateTime>。</span><span class="sxs-lookup"><span data-stu-id="918f8-193">The time-of-day part of the resulting <xref:System.DateTime> remains the same as the specified <xref:System.DateTime>.</span></span>  
  
 <span data-ttu-id="918f8-194">例如，假設目前的行事曆有 12 個月，其中第四個月有 30 天和第十個月有 31 天。</span><span class="sxs-lookup"><span data-stu-id="918f8-194">For example, suppose that the current calendar has 12 months, where the fourth month has 30 days and the tenth month has 31 days.</span></span> <span data-ttu-id="918f8-195">如果指定的月份是第十個月，指定某一天是該月份中，第 31 天，而`months`參數為 6，則產生的 year 是一個以上的指定年份中，產生的月份的第四個月內，而且產生的日期是 30 號日期，也就是產生的月份的最後一天。</span><span class="sxs-lookup"><span data-stu-id="918f8-195">If the specified month is the tenth month, the specified day is the 31st day of that month, and the value of the `months` parameter is 6, the resulting year is one more than the specified year, the resulting month is the fourth month, and the resulting day is the 30th day, which is the last day of the resulting month.</span></span>  
  
 <span data-ttu-id="918f8-196">如果值`months`參數是負值，產生<xref:System.DateTime>早於指定<xref:System.DateTime>。</span><span class="sxs-lookup"><span data-stu-id="918f8-196">If the value of the `months` parameter is negative, the resulting <xref:System.DateTime> is earlier than the specified <xref:System.DateTime>.</span></span>  
  
 <span data-ttu-id="918f8-197"><xref:System.DateTime.Kind%2A>屬性傳回之<xref:System.DateTime>值一律等於<xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="918f8-197">The <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value always equals <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>.</span></span> <span data-ttu-id="918f8-198">您可以保留<xref:System.DateTime.Kind%2A>的屬性`time`藉由呼叫的參數<xref:System.DateTime.SpecifyKind%2A?displayProperty=nameWithType>方法，如下列範例所示。</span><span class="sxs-lookup"><span data-stu-id="918f8-198">You can preserve the <xref:System.DateTime.Kind%2A> property of the `time` parameter by calling the <xref:System.DateTime.SpecifyKind%2A?displayProperty=nameWithType> method, as the following example shows.</span></span>  
  
 [!code-csharp[System.Globalization.Calendar.AddMethods#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/cs/add1.cs#5)]
 [!code-vb[System.Globalization.Calendar.AddMethods#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/vb/add1.vb#5)]  
  
   
  
## Examples  
 <span data-ttu-id="918f8-199">下列程式碼範例將示範成員<xref:System.Globalization.Calendar>類別。</span><span class="sxs-lookup"><span data-stu-id="918f8-199">The following code example demonstrates the members of the <xref:System.Globalization.Calendar> class.</span></span>  
  
 [!code-cpp[System.Globalization.Calendar#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar/CPP/calendar.cpp#1)]
 [!code-csharp[System.Globalization.Calendar#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar/CS/calendar.cs#1)]
 [!code-vb[System.Globalization.Calendar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar/VB/calendar.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="918f8-200">產生的 <see cref="T:System.DateTime" /> 在此月曆支援的範圍之外。</span><span class="sxs-lookup"><span data-stu-id="918f8-200">The resulting <see cref="T:System.DateTime" /> is outside the supported range of this calendar.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="918f8-201"><paramref name="months" /> 不在 <see cref="T:System.DateTime" /> 傳回值支援的範圍內。</span><span class="sxs-lookup"><span data-stu-id="918f8-201"><paramref name="months" /> is outside the supported range of the <see cref="T:System.DateTime" /> return value.</span></span></exception>
        <altmember cref="T:System.DateTime" />
        <altmember cref="M:System.Globalization.Calendar.AddYears(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddWeeks(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddDays(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddHours(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMinutes(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddSeconds(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMilliseconds(System.DateTime,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="AddSeconds">
      <MemberSignature Language="C#" Value="public virtual DateTime AddSeconds (DateTime time, int seconds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.DateTime AddSeconds(valuetype System.DateTime time, int32 seconds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.AddSeconds(System.DateTime,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddSeconds (time As DateTime, seconds As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual DateTime AddSeconds(DateTime time, int seconds);" />
      <MemberSignature Language="F#" Value="abstract member AddSeconds : DateTime * int -&gt; DateTime&#xA;override this.AddSeconds : DateTime * int -&gt; DateTime" Usage="calendar.AddSeconds (time, seconds)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
        <Parameter Name="seconds" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="time"><span data-ttu-id="918f8-202">要將秒鐘加入的 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="918f8-202">The <see cref="T:System.DateTime" /> to which to add seconds.</span></span></param>
        <param name="seconds"><span data-ttu-id="918f8-203">要加入的秒數。</span><span class="sxs-lookup"><span data-stu-id="918f8-203">The number of seconds to add.</span></span></param>
        <summary><span data-ttu-id="918f8-204">傳回與指定 <see cref="T:System.DateTime" /> 相差指定秒數的 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="918f8-204">Returns a <see cref="T:System.DateTime" /> that is the specified number of seconds away from the specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="918f8-205"><see cref="T:System.DateTime" />，由將指定秒數加入指定 <see cref="T:System.DateTime" /> 所產生。</span><span class="sxs-lookup"><span data-stu-id="918f8-205">The <see cref="T:System.DateTime" /> that results from adding the specified number of seconds to the specified <see cref="T:System.DateTime" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="918f8-206">`seconds`值會加入至指定<xref:System.DateTime>。</span><span class="sxs-lookup"><span data-stu-id="918f8-206">The `seconds` value is added to the specified <xref:System.DateTime>.</span></span> <span data-ttu-id="918f8-207">如果`seconds`是負數，產生<xref:System.DateTime>早於指定<xref:System.DateTime>。</span><span class="sxs-lookup"><span data-stu-id="918f8-207">If `seconds` is negative, the resulting <xref:System.DateTime> is earlier than the specified <xref:System.DateTime>.</span></span>  
  
 <span data-ttu-id="918f8-208">產生的日期部分<xref:System.DateTime>產生的時間超出指定的日期會受到影響<xref:System.DateTime>。</span><span class="sxs-lookup"><span data-stu-id="918f8-208">The day part of the resulting <xref:System.DateTime> is affected if the resulting time is outside the day of the specified <xref:System.DateTime>.</span></span> <span data-ttu-id="918f8-209">產生的月份部分<xref:System.DateTime>產生的日期超出指定的月份會受到影響<xref:System.DateTime>。</span><span class="sxs-lookup"><span data-stu-id="918f8-209">The month part of the resulting <xref:System.DateTime> is affected if the resulting day is outside the month of the specified <xref:System.DateTime>.</span></span> <span data-ttu-id="918f8-210">產生的年份部分<xref:System.DateTime>產生的月份超出指定的年份會受到影響<xref:System.DateTime>。</span><span class="sxs-lookup"><span data-stu-id="918f8-210">The year part of the resulting <xref:System.DateTime> is affected if the resulting month is outside the year of the specified <xref:System.DateTime>.</span></span> <span data-ttu-id="918f8-211">產生的紀元一部分<xref:System.DateTime>產生的 year 超出指定的紀元會受到影響<xref:System.DateTime>。</span><span class="sxs-lookup"><span data-stu-id="918f8-211">The era part of the resulting <xref:System.DateTime> is affected if the resulting year is outside the era of the specified <xref:System.DateTime>.</span></span>  
  
 <span data-ttu-id="918f8-212"><xref:System.DateTime.Kind%2A>屬性傳回之<xref:System.DateTime>值一律等於<xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="918f8-212">The <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value always equals <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>.</span></span> <span data-ttu-id="918f8-213">您可以保留<xref:System.DateTime.Kind%2A>的屬性`time`藉由呼叫的參數<xref:System.DateTime.SpecifyKind%2A?displayProperty=nameWithType>方法，如下列範例所示。</span><span class="sxs-lookup"><span data-stu-id="918f8-213">You can preserve the <xref:System.DateTime.Kind%2A> property of the `time` parameter by calling the <xref:System.DateTime.SpecifyKind%2A?displayProperty=nameWithType> method, as the following example shows.</span></span>  
  
 [!code-csharp[System.Globalization.Calendar.AddMethods#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/cs/add1.cs#6)]
 [!code-vb[System.Globalization.Calendar.AddMethods#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/vb/add1.vb#6)]  
  
   
  
## Examples  
 <span data-ttu-id="918f8-214">下列程式碼範例將示範成員<xref:System.Globalization.Calendar>類別。</span><span class="sxs-lookup"><span data-stu-id="918f8-214">The following code example demonstrates the members of the <xref:System.Globalization.Calendar> class.</span></span>  
  
 [!code-cpp[System.Globalization.Calendar#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar/CPP/calendar.cpp#1)]
 [!code-csharp[System.Globalization.Calendar#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar/CS/calendar.cs#1)]
 [!code-vb[System.Globalization.Calendar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar/VB/calendar.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="918f8-215">產生的 <see cref="T:System.DateTime" /> 在此月曆支援的範圍之外。</span><span class="sxs-lookup"><span data-stu-id="918f8-215">The resulting <see cref="T:System.DateTime" /> is outside the supported range of this calendar.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="918f8-216"><paramref name="seconds" /> 不在 <see cref="T:System.DateTime" /> 傳回值支援的範圍內。</span><span class="sxs-lookup"><span data-stu-id="918f8-216"><paramref name="seconds" /> is outside the supported range of the <see cref="T:System.DateTime" /> return value.</span></span></exception>
        <altmember cref="T:System.DateTime" />
        <altmember cref="M:System.Globalization.Calendar.AddYears(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMonths(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddWeeks(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddDays(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddHours(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMinutes(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMilliseconds(System.DateTime,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="AddWeeks">
      <MemberSignature Language="C#" Value="public virtual DateTime AddWeeks (DateTime time, int weeks);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.DateTime AddWeeks(valuetype System.DateTime time, int32 weeks) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.AddWeeks(System.DateTime,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddWeeks (time As DateTime, weeks As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual DateTime AddWeeks(DateTime time, int weeks);" />
      <MemberSignature Language="F#" Value="abstract member AddWeeks : DateTime * int -&gt; DateTime&#xA;override this.AddWeeks : DateTime * int -&gt; DateTime" Usage="calendar.AddWeeks (time, weeks)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
        <Parameter Name="weeks" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="time"><span data-ttu-id="918f8-217">要將週加入的 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="918f8-217">The <see cref="T:System.DateTime" /> to which to add weeks.</span></span></param>
        <param name="weeks"><span data-ttu-id="918f8-218">要加入的週數。</span><span class="sxs-lookup"><span data-stu-id="918f8-218">The number of weeks to add.</span></span></param>
        <summary><span data-ttu-id="918f8-219">傳回與指定 <see cref="T:System.DateTime" /> 相差指定週數的 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="918f8-219">Returns a <see cref="T:System.DateTime" /> that is the specified number of weeks away from the specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="918f8-220"><see cref="T:System.DateTime" />，由將指定的週數加入指定的 <see cref="T:System.DateTime" /> 所產生。</span><span class="sxs-lookup"><span data-stu-id="918f8-220">The <see cref="T:System.DateTime" /> that results from adding the specified number of weeks to the specified <see cref="T:System.DateTime" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="918f8-221">`weeks`值會加入至指定<xref:System.DateTime>。</span><span class="sxs-lookup"><span data-stu-id="918f8-221">The `weeks` value is added to the specified <xref:System.DateTime>.</span></span> <span data-ttu-id="918f8-222">如果`weeks`是負數，產生<xref:System.DateTime>早於指定<xref:System.DateTime>。</span><span class="sxs-lookup"><span data-stu-id="918f8-222">If `weeks` is negative, the resulting <xref:System.DateTime> is earlier than the specified <xref:System.DateTime>.</span></span>  
  
 <span data-ttu-id="918f8-223">產生的月份部分<xref:System.DateTime>產生的日期超出指定的月份會受到影響<xref:System.DateTime>。</span><span class="sxs-lookup"><span data-stu-id="918f8-223">The month part of the resulting <xref:System.DateTime> is affected if the resulting day is outside the month of the specified <xref:System.DateTime>.</span></span> <span data-ttu-id="918f8-224">產生的年份部分<xref:System.DateTime>產生的月份超出指定的年份會受到影響<xref:System.DateTime>。</span><span class="sxs-lookup"><span data-stu-id="918f8-224">The year part of the resulting <xref:System.DateTime> is affected if the resulting month is outside the year of the specified <xref:System.DateTime>.</span></span> <span data-ttu-id="918f8-225">產生的紀元一部分<xref:System.DateTime>產生的 year 超出指定的紀元會受到影響<xref:System.DateTime>。</span><span class="sxs-lookup"><span data-stu-id="918f8-225">The era part of the resulting <xref:System.DateTime> is affected if the resulting year is outside the era of the specified <xref:System.DateTime>.</span></span> <span data-ttu-id="918f8-226">產生的日期時間部分<xref:System.DateTime>維持不變，與指定<xref:System.DateTime>。</span><span class="sxs-lookup"><span data-stu-id="918f8-226">The time-of-day part of the resulting <xref:System.DateTime> remains the same as the specified <xref:System.DateTime>.</span></span>  
  
 <span data-ttu-id="918f8-227">所有的.NET Framework 類別衍生自<xref:System.Globalization.Calendar>類別，一週定義為七天。</span><span class="sxs-lookup"><span data-stu-id="918f8-227">In all .NET Framework classes derived from the <xref:System.Globalization.Calendar> class, a week is defined as seven days.</span></span>  
  
 <span data-ttu-id="918f8-228"><xref:System.DateTime.Kind%2A>屬性傳回之<xref:System.DateTime>值一律等於<xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="918f8-228">The <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value always equals <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>.</span></span> <span data-ttu-id="918f8-229">您可以保留<xref:System.DateTime.Kind%2A>的屬性`time`藉由呼叫的參數<xref:System.DateTime.SpecifyKind%2A?displayProperty=nameWithType>方法，如下列範例所示。</span><span class="sxs-lookup"><span data-stu-id="918f8-229">You can preserve the <xref:System.DateTime.Kind%2A> property of the `time` parameter by calling the <xref:System.DateTime.SpecifyKind%2A?displayProperty=nameWithType> method, as the following example shows.</span></span>  
  
 [!code-csharp[System.Globalization.Calendar.AddMethods#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/cs/add1.cs#7)]
 [!code-vb[System.Globalization.Calendar.AddMethods#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/vb/add1.vb#7)]  
  
   
  
## Examples  
 <span data-ttu-id="918f8-230">下列程式碼範例將示範成員<xref:System.Globalization.Calendar>類別。</span><span class="sxs-lookup"><span data-stu-id="918f8-230">The following code example demonstrates the members of the <xref:System.Globalization.Calendar> class.</span></span>  
  
 [!code-cpp[System.Globalization.Calendar#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar/CPP/calendar.cpp#1)]
 [!code-csharp[System.Globalization.Calendar#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar/CS/calendar.cs#1)]
 [!code-vb[System.Globalization.Calendar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar/VB/calendar.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="918f8-231">產生的 <see cref="T:System.DateTime" /> 在此月曆支援的範圍之外。</span><span class="sxs-lookup"><span data-stu-id="918f8-231">The resulting <see cref="T:System.DateTime" /> is outside the supported range of this calendar.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="918f8-232"><paramref name="weeks" /> 不在 <see cref="T:System.DateTime" /> 傳回值支援的範圍內。</span><span class="sxs-lookup"><span data-stu-id="918f8-232"><paramref name="weeks" /> is outside the supported range of the <see cref="T:System.DateTime" /> return value.</span></span></exception>
        <altmember cref="T:System.DateTime" />
        <altmember cref="M:System.Globalization.Calendar.AddYears(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMonths(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddDays(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddHours(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMinutes(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddSeconds(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMilliseconds(System.DateTime,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="AddYears">
      <MemberSignature Language="C#" Value="public abstract DateTime AddYears (DateTime time, int years);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.DateTime AddYears(valuetype System.DateTime time, int32 years) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.AddYears(System.DateTime,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function AddYears (time As DateTime, years As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract DateTime AddYears(DateTime time, int years);" />
      <MemberSignature Language="F#" Value="abstract member AddYears : DateTime * int -&gt; DateTime" Usage="calendar.AddYears (time, years)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
        <Parameter Name="years" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="time"><span data-ttu-id="918f8-233">要將年份加入的 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="918f8-233">The <see cref="T:System.DateTime" /> to which to add years.</span></span></param>
        <param name="years"><span data-ttu-id="918f8-234">要加入的年數。</span><span class="sxs-lookup"><span data-stu-id="918f8-234">The number of years to add.</span></span></param>
        <summary><span data-ttu-id="918f8-235">當在衍生類別中覆寫時，傳回與指定 <see cref="T:System.DateTime" /> 相差指定年數的 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="918f8-235">When overridden in a derived class, returns a <see cref="T:System.DateTime" /> that is the specified number of years away from the specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="918f8-236"><see cref="T:System.DateTime" />，由將指定的年數加入指定的 <see cref="T:System.DateTime" /> 所產生。</span><span class="sxs-lookup"><span data-stu-id="918f8-236">The <see cref="T:System.DateTime" /> that results from adding the specified number of years to the specified <see cref="T:System.DateTime" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="918f8-237">`years`值會加入至指定<xref:System.DateTime>。</span><span class="sxs-lookup"><span data-stu-id="918f8-237">The `years` value is added to the specified <xref:System.DateTime>.</span></span> <span data-ttu-id="918f8-238">如果`years`是負數，產生<xref:System.DateTime>早於指定<xref:System.DateTime>。</span><span class="sxs-lookup"><span data-stu-id="918f8-238">If `years` is negative, the resulting <xref:System.DateTime> is earlier than the specified <xref:System.DateTime>.</span></span>  
  
 <span data-ttu-id="918f8-239">產生的日期部分<xref:System.DateTime>產生的日期不在產生的月份，產生的 year 的有效日期會受到影響。</span><span class="sxs-lookup"><span data-stu-id="918f8-239">The day part of the resulting <xref:System.DateTime> is affected if the resulting day is not a valid day in the resulting month of the resulting year.</span></span> <span data-ttu-id="918f8-240">它會變更為產生的 year 之產生的月份中最後一個有效的日期。</span><span class="sxs-lookup"><span data-stu-id="918f8-240">It is changed to the last valid day in the resulting month of the resulting year.</span></span> <span data-ttu-id="918f8-241">產生的月份部分<xref:System.DateTime>產生的每月不有效的月份中產生的 year 會受到影響。</span><span class="sxs-lookup"><span data-stu-id="918f8-241">The month part of the resulting <xref:System.DateTime> is affected if the resulting month is not a valid month in the resulting year.</span></span> <span data-ttu-id="918f8-242">它會變更為產生的 year 中的最後一個有效月份。</span><span class="sxs-lookup"><span data-stu-id="918f8-242">It is changed to the last valid month in the resulting year.</span></span> <span data-ttu-id="918f8-243">產生的紀元一部分<xref:System.DateTime>產生的 year 超出指定的紀元會受到影響<xref:System.DateTime>。</span><span class="sxs-lookup"><span data-stu-id="918f8-243">The era part of the resulting <xref:System.DateTime> is affected if the resulting year is outside the era of the specified <xref:System.DateTime>.</span></span> <span data-ttu-id="918f8-244">產生的日期時間部分<xref:System.DateTime>維持不變，與指定<xref:System.DateTime>。</span><span class="sxs-lookup"><span data-stu-id="918f8-244">The time-of-day part of the resulting <xref:System.DateTime> remains the same as the specified <xref:System.DateTime>.</span></span>  
  
 <span data-ttu-id="918f8-245">比方說，西曆，二月有 28 天，除了期間是閏年時有 29 天。</span><span class="sxs-lookup"><span data-stu-id="918f8-245">For example, in the Gregorian calendar, February has 28 days, except during a leap year when it has 29 days.</span></span> <span data-ttu-id="918f8-246">指定的日期是否在閏年中的 2 月 29 日，而`years`為 1，則產生的日期是在下一年度的 2 月的第 28 天。</span><span class="sxs-lookup"><span data-stu-id="918f8-246">If the specified date is the 29th day of February in a leap year and the value of `years` is 1, the resulting date is the 28th day of February in the following year.</span></span>  
  
 <span data-ttu-id="918f8-247">如果`years`是負數，產生<xref:System.DateTime>早於指定<xref:System.DateTime>。</span><span class="sxs-lookup"><span data-stu-id="918f8-247">If `years` is negative, the resulting <xref:System.DateTime> is earlier than the specified <xref:System.DateTime>.</span></span>  
  
 <span data-ttu-id="918f8-248"><xref:System.DateTime.Kind%2A>屬性傳回之<xref:System.DateTime>值一律等於<xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="918f8-248">The <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value always equals <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>.</span></span> <span data-ttu-id="918f8-249">您可以保留<xref:System.DateTime.Kind%2A>的屬性`time`藉由呼叫的參數<xref:System.DateTime.SpecifyKind%2A?displayProperty=nameWithType>方法，如下列範例所示。</span><span class="sxs-lookup"><span data-stu-id="918f8-249">You can preserve the <xref:System.DateTime.Kind%2A> property of the `time` parameter by calling the <xref:System.DateTime.SpecifyKind%2A?displayProperty=nameWithType> method, as the following example shows.</span></span>  
  
 [!code-csharp[System.Globalization.Calendar.AddMethods#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/cs/add1.cs#8)]
 [!code-vb[System.Globalization.Calendar.AddMethods#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/vb/add1.vb#8)]  
  
   
  
## Examples  
 <span data-ttu-id="918f8-250">下列程式碼範例將示範成員<xref:System.Globalization.Calendar>類別。</span><span class="sxs-lookup"><span data-stu-id="918f8-250">The following code example demonstrates the members of the <xref:System.Globalization.Calendar> class.</span></span>  
  
 [!code-cpp[System.Globalization.Calendar#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar/CPP/calendar.cpp#1)]
 [!code-csharp[System.Globalization.Calendar#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar/CS/calendar.cs#1)]
 [!code-vb[System.Globalization.Calendar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar/VB/calendar.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="918f8-251">產生的 <see cref="T:System.DateTime" /> 在此月曆支援的範圍之外。</span><span class="sxs-lookup"><span data-stu-id="918f8-251">The resulting <see cref="T:System.DateTime" /> is outside the supported range of this calendar.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="918f8-252"><paramref name="years" /> 不在 <see cref="T:System.DateTime" /> 傳回值支援的範圍內。</span><span class="sxs-lookup"><span data-stu-id="918f8-252"><paramref name="years" /> is outside the supported range of the <see cref="T:System.DateTime" /> return value.</span></span></exception>
        <altmember cref="T:System.DateTime" />
        <altmember cref="M:System.Globalization.Calendar.AddMonths(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddWeeks(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddDays(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddHours(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMinutes(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddSeconds(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMilliseconds(System.DateTime,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="AlgorithmType">
      <MemberSignature Language="C#" Value="public virtual System.Globalization.CalendarAlgorithmType AlgorithmType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Globalization.CalendarAlgorithmType AlgorithmType" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.Calendar.AlgorithmType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property AlgorithmType As CalendarAlgorithmType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Globalization::CalendarAlgorithmType AlgorithmType { System::Globalization::CalendarAlgorithmType get(); };" />
      <MemberSignature Language="F#" Value="member this.AlgorithmType : System.Globalization.CalendarAlgorithmType" Usage="System.Globalization.Calendar.AlgorithmType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.CalendarAlgorithmType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="918f8-253">取得值，指出目前的月曆是以陽曆為主、以陰曆為主，還是同時包含兩種曆法。</span><span class="sxs-lookup"><span data-stu-id="918f8-253">Gets a value indicating whether the current calendar is solar-based, lunar-based, or a combination of both.</span></span></summary>
        <value><span data-ttu-id="918f8-254">其中一個 <see cref="T:System.Globalization.CalendarAlgorithmType" /> 值。</span><span class="sxs-lookup"><span data-stu-id="918f8-254">One of the <see cref="T:System.Globalization.CalendarAlgorithmType" /> values.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="918f8-255">下列範例會使用反映來具現化每個<xref:System.Globalization.Calendar>型別在.NET Framework 中找到，並顯示的值及其<xref:System.Globalization.Calendar.AlgorithmType%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="918f8-255">The following example uses reflection to instantiate each <xref:System.Globalization.Calendar> type found in the .NET Framework and displays the value of its <xref:System.Globalization.Calendar.AlgorithmType%2A> property.</span></span>  
  
 [!code-csharp[System.Globalization.Calendar.AlgorithmType#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.algorithmtype/cs/algorithmtype1.cs#1)]
 [!code-vb[System.Globalization.Calendar.AlgorithmType#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.algorithmtype/vb/algorithmtype1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public virtual object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; obj&#xA;override this.Clone : unit -&gt; obj" Usage="calendar.Clone " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="918f8-256">建立目前 <see cref="T:System.Globalization.Calendar" /> 物件複本的新物件。</span><span class="sxs-lookup"><span data-stu-id="918f8-256">Creates a new object that is a copy of the current <see cref="T:System.Globalization.Calendar" /> object.</span></span></summary>
        <returns><span data-ttu-id="918f8-257"><see cref="T:System.Object" /> 的新執行個體，它是目前 <see cref="T:System.Globalization.Calendar" /> 物件的成員複製品。</span><span class="sxs-lookup"><span data-stu-id="918f8-257">A new instance of <see cref="T:System.Object" /> that is the memberwise clone of the current <see cref="T:System.Globalization.Calendar" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="918f8-258">新的成員複製品不是唯讀的。</span><span class="sxs-lookup"><span data-stu-id="918f8-258">The new memberwise clone is not read-only.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.MemberwiseClone" />
      </Docs>
    </Member>
    <Member MemberName="CurrentEra">
      <MemberSignature Language="C#" Value="public const int CurrentEra = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 CurrentEra = (0)" />
      <MemberSignature Language="DocId" Value="F:System.Globalization.Calendar.CurrentEra" />
      <MemberSignature Language="VB.NET" Value="Public Const CurrentEra As Integer  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: int CurrentEra = 0;" />
      <MemberSignature Language="F#" Value="val mutable CurrentEra : int" Usage="System.Globalization.Calendar.CurrentEra" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="918f8-259">表示目前曆法的目前紀元。</span><span class="sxs-lookup"><span data-stu-id="918f8-259">Represents the current era of the current calendar.</span></span> <span data-ttu-id="918f8-260">此欄位的值為 0。</span><span class="sxs-lookup"><span data-stu-id="918f8-260">The value of this field is 0.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="918f8-261"><xref:System.Globalization.Calendar.CurrentEra>欄位代表目前紀元中的索引<xref:System.Globalization.Calendar.Eras%2A>陣列。</span><span class="sxs-lookup"><span data-stu-id="918f8-261">The <xref:System.Globalization.Calendar.CurrentEra> field represents the index of the current era in the <xref:System.Globalization.Calendar.Eras%2A> array.</span></span> <span data-ttu-id="918f8-262">因為紀元中 （從先前的紀元目前的紀元） 反向時間順序排列，這個欄位是常數，其值為 0。</span><span class="sxs-lookup"><span data-stu-id="918f8-262">Because eras are arranged in reverse chronological order (from the current era to earlier eras), this field is a constant that has a value of 0.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.Calendar.Eras" />
      </Docs>
    </Member>
    <Member MemberName="DaysInYearBeforeMinSupportedYear">
      <MemberSignature Language="C#" Value="protected virtual int DaysInYearBeforeMinSupportedYear { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DaysInYearBeforeMinSupportedYear" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.Calendar.DaysInYearBeforeMinSupportedYear" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property DaysInYearBeforeMinSupportedYear As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property int DaysInYearBeforeMinSupportedYear { int get(); };" />
      <MemberSignature Language="F#" Value="member this.DaysInYearBeforeMinSupportedYear : int" Usage="System.Globalization.Calendar.DaysInYearBeforeMinSupportedYear" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="918f8-263">取得 <see cref="P:System.Globalization.Calendar.MinSupportedDateTime" /> 屬性指定之年的前一年的天數。</span><span class="sxs-lookup"><span data-stu-id="918f8-263">Gets the number of days in the year that precedes the year that is specified by the <see cref="P:System.Globalization.Calendar.MinSupportedDateTime" /> property.</span></span></summary>
        <value><span data-ttu-id="918f8-264"><see cref="P:System.Globalization.Calendar.MinSupportedDateTime" /> 指定之年的前一年的天數。</span><span class="sxs-lookup"><span data-stu-id="918f8-264">The number of days in the year that precedes the year specified by <see cref="P:System.Globalization.Calendar.MinSupportedDateTime" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="918f8-265">這個屬性會傳回常數值的 365。</span><span class="sxs-lookup"><span data-stu-id="918f8-265">This property returns a constant value of 365.</span></span> <span data-ttu-id="918f8-266">請注意，屬性值會覆寫類別衍生自<xref:System.Globalization.Calendar>類別。</span><span class="sxs-lookup"><span data-stu-id="918f8-266">Note that the property value can be overridden by classes derived from the <xref:System.Globalization.Calendar> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Eras">
      <MemberSignature Language="C#" Value="public abstract int[] Eras { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32[] Eras" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.Calendar.Eras" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Eras As Integer()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property cli::array &lt;int&gt; ^ Eras { cli::array &lt;int&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Eras : int[]" Usage="System.Globalization.Calendar.Eras" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="918f8-267">當在衍生類別中覆寫時，取得目前曆法中的紀元清單。</span><span class="sxs-lookup"><span data-stu-id="918f8-267">When overridden in a derived class, gets the list of eras in the current calendar.</span></span></summary>
        <value><span data-ttu-id="918f8-268">整數陣列，表示目前曆法中的紀元。</span><span class="sxs-lookup"><span data-stu-id="918f8-268">An array of integers that represents the eras in the current calendar.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="918f8-269">紀元會依反向時間順序的詳細資訊，與目前紀元的第一個元素的陣列，陣列的最後一個元素的紀元。</span><span class="sxs-lookup"><span data-stu-id="918f8-269">The eras are in reverse chronological order, with the current era as the first element of the array, and the oldest era as the last element of the array.</span></span> <span data-ttu-id="918f8-270">比方說，在目前紀元值<xref:System.Globalization.JapaneseCalendar>是 4，也就是陣列的第一個項目。</span><span class="sxs-lookup"><span data-stu-id="918f8-270">For example, the value of the current era in <xref:System.Globalization.JapaneseCalendar> is 4, which is the first element of the array.</span></span> <span data-ttu-id="918f8-271">只有<xref:System.Globalization.JapaneseCalendar>而<xref:System.Globalization.JapaneseLunisolarCalendar>類別支援多個紀元。</span><span class="sxs-lookup"><span data-stu-id="918f8-271">Only the <xref:System.Globalization.JapaneseCalendar> and the <xref:System.Globalization.JapaneseLunisolarCalendar> classes support multiple eras.</span></span>
  
[!INCLUDE[japanese-era-note](~/includes/calendar-era.md)]

## Examples  
 <span data-ttu-id="918f8-272">下列程式碼範例顯示中包含的值<xref:System.Globalization.JapaneseCalendar.Eras%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="918f8-272">The following code example displays the values contained in <xref:System.Globalization.JapaneseCalendar.Eras%2A?displayProperty=nameWithType>.</span></span>  
  
 [!code-cpp[System.Globalization.JapaneseCalendar.Eras#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar.Eras/CPP/yslin_japanesecalendar_eras.cpp#1)]
 [!code-csharp[System.Globalization.JapaneseCalendar.Eras#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar.Eras/CS/yslin_japanesecalendar_eras.cs#1)]
 [!code-vb[System.Globalization.JapaneseCalendar.Eras#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar.Eras/VB/yslin_japanesecalendar_eras.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
      </Docs>
    </Member>
    <Member MemberName="GetDayOfMonth">
      <MemberSignature Language="C#" Value="public abstract int GetDayOfMonth (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetDayOfMonth(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.GetDayOfMonth(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetDayOfMonth (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int GetDayOfMonth(DateTime time);" />
      <MemberSignature Language="F#" Value="abstract member GetDayOfMonth : DateTime -&gt; int" Usage="calendar.GetDayOfMonth time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time"><span data-ttu-id="918f8-273">要讀取的 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="918f8-273">The <see cref="T:System.DateTime" /> to read.</span></span></param>
        <summary><span data-ttu-id="918f8-274">當在衍生類別中覆寫時，傳回指定 <see cref="T:System.DateTime" /> 中月份的日期。</span><span class="sxs-lookup"><span data-stu-id="918f8-274">When overridden in a derived class, returns the day of the month in the specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="918f8-275">正整數，表示 <paramref name="time" /> 參數中月份的日期。</span><span class="sxs-lookup"><span data-stu-id="918f8-275">A positive integer that represents the day of the month in the <paramref name="time" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="918f8-276">下列程式碼範例將示範成員<xref:System.Globalization.Calendar>類別。</span><span class="sxs-lookup"><span data-stu-id="918f8-276">The following code example demonstrates the members of the <xref:System.Globalization.Calendar> class.</span></span>  
  
 [!code-cpp[System.Globalization.Calendar#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar/CPP/calendar.cpp#1)]
 [!code-csharp[System.Globalization.Calendar#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar/CS/calendar.cs#1)]
 [!code-vb[System.Globalization.Calendar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar/VB/calendar.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTime.Day" />
        <altmember cref="M:System.Globalization.Calendar.GetEra(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
        <altmember cref="M:System.Globalization.Calendar.GetDayOfYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetDayOfWeek(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetHour(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMinute(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetSecond(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMilliseconds(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="GetDayOfWeek">
      <MemberSignature Language="C#" Value="public abstract DayOfWeek GetDayOfWeek (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.DayOfWeek GetDayOfWeek(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.GetDayOfWeek(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetDayOfWeek (time As DateTime) As DayOfWeek" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract DayOfWeek GetDayOfWeek(DateTime time);" />
      <MemberSignature Language="F#" Value="abstract member GetDayOfWeek : DateTime -&gt; DayOfWeek" Usage="calendar.GetDayOfWeek time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DayOfWeek</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time"><span data-ttu-id="918f8-277">要讀取的 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="918f8-277">The <see cref="T:System.DateTime" /> to read.</span></span></param>
        <summary><span data-ttu-id="918f8-278">當在衍生類別中覆寫時，傳回指定 <see cref="T:System.DateTime" /> 中的星期。</span><span class="sxs-lookup"><span data-stu-id="918f8-278">When overridden in a derived class, returns the day of the week in the specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="918f8-279"><see cref="T:System.DayOfWeek" /> 值，表示 <paramref name="time" /> 參數中一週的日期。</span><span class="sxs-lookup"><span data-stu-id="918f8-279">A <see cref="T:System.DayOfWeek" /> value that represents the day of the week in the <paramref name="time" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="918f8-280"><xref:System.DayOfWeek>的值為星期日、 星期一、 星期二、 星期三、 星期四、 星期五，到星期六。</span><span class="sxs-lookup"><span data-stu-id="918f8-280">The <xref:System.DayOfWeek> values are Sunday, Monday, Tuesday, Wednesday, Thursday, Friday, and Saturday.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="918f8-281">下列程式碼範例將示範成員<xref:System.Globalization.Calendar>類別。</span><span class="sxs-lookup"><span data-stu-id="918f8-281">The following code example demonstrates the members of the <xref:System.Globalization.Calendar> class.</span></span>  
  
 [!code-cpp[System.Globalization.Calendar#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar/CPP/calendar.cpp#1)]
 [!code-csharp[System.Globalization.Calendar#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar/CS/calendar.cs#1)]
 [!code-vb[System.Globalization.Calendar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar/VB/calendar.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTime.DayOfWeek" />
        <altmember cref="T:System.DayOfWeek" />
        <altmember cref="M:System.Globalization.Calendar.GetEra(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
        <altmember cref="M:System.Globalization.Calendar.GetDayOfYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetDayOfMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetHour(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMinute(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetSecond(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMilliseconds(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="GetDayOfYear">
      <MemberSignature Language="C#" Value="public abstract int GetDayOfYear (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetDayOfYear(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.GetDayOfYear(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetDayOfYear (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int GetDayOfYear(DateTime time);" />
      <MemberSignature Language="F#" Value="abstract member GetDayOfYear : DateTime -&gt; int" Usage="calendar.GetDayOfYear time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time"><span data-ttu-id="918f8-282">要讀取的 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="918f8-282">The <see cref="T:System.DateTime" /> to read.</span></span></param>
        <summary><span data-ttu-id="918f8-283">當在衍生類別中覆寫時，傳回指定 <see cref="T:System.DateTime" /> 中年份的日期。</span><span class="sxs-lookup"><span data-stu-id="918f8-283">When overridden in a derived class, returns the day of the year in the specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="918f8-284">正整數，表示 <paramref name="time" /> 參數中年份的日期。</span><span class="sxs-lookup"><span data-stu-id="918f8-284">A positive integer that represents the day of the year in the <paramref name="time" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="918f8-285">年中的日被指從當年第一日的天數。</span><span class="sxs-lookup"><span data-stu-id="918f8-285">The day of the year is defined as the number of days from the first day of the year.</span></span> <span data-ttu-id="918f8-286">例如，在<xref:System.Globalization.GregorianCalendar>，<xref:System.Globalization.Calendar.GetDayOfYear%2A>為 1 年 1 月，則傳回 1，和<xref:System.Globalization.Calendar.GetDayOfYear%2A>的年 12 月 31 傳回 365 一般年份中，閏年有 366。</span><span class="sxs-lookup"><span data-stu-id="918f8-286">For example, in <xref:System.Globalization.GregorianCalendar>, <xref:System.Globalization.Calendar.GetDayOfYear%2A> for January 1 returns 1, and <xref:System.Globalization.Calendar.GetDayOfYear%2A> for December 31 returns 365 in a common year or 366 in a leap year.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="918f8-287">下列程式碼範例將示範成員<xref:System.Globalization.Calendar>類別。</span><span class="sxs-lookup"><span data-stu-id="918f8-287">The following code example demonstrates the members of the <xref:System.Globalization.Calendar> class.</span></span>  
  
 [!code-cpp[System.Globalization.Calendar#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar/CPP/calendar.cpp#1)]
 [!code-csharp[System.Globalization.Calendar#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar/CS/calendar.cs#1)]
 [!code-vb[System.Globalization.Calendar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar/VB/calendar.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTime.DayOfYear" />
        <altmember cref="M:System.Globalization.Calendar.GetEra(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
        <altmember cref="M:System.Globalization.Calendar.GetDayOfMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetDayOfWeek(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetHour(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMinute(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetSecond(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMilliseconds(System.DateTime)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetDaysInMonth">
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="918f8-288">在衍生類別中覆寫時，傳回指定月份中的天數。</span><span class="sxs-lookup"><span data-stu-id="918f8-288">When overridden in a derived class, returns the number of days in the specified month.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetDaysInMonth">
      <MemberSignature Language="C#" Value="public virtual int GetDaysInMonth (int year, int month);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetDaysInMonth(int32 year, int32 month) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.GetDaysInMonth(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDaysInMonth (year As Integer, month As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetDaysInMonth(int year, int month);" />
      <MemberSignature Language="F#" Value="abstract member GetDaysInMonth : int * int -&gt; int&#xA;override this.GetDaysInMonth : int * int -&gt; int" Usage="calendar.GetDaysInMonth (year, month)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="918f8-289">表示年份的整數。</span><span class="sxs-lookup"><span data-stu-id="918f8-289">An integer that represents the year.</span></span></param>
        <param name="month"><span data-ttu-id="918f8-290">正整數，表示月份。</span><span class="sxs-lookup"><span data-stu-id="918f8-290">A positive integer that represents the month.</span></span></param>
        <summary><span data-ttu-id="918f8-291">傳回目前紀元之指定月份和年份中的天數。</span><span class="sxs-lookup"><span data-stu-id="918f8-291">Returns the number of days in the specified month and year of the current era.</span></span></summary>
        <returns><span data-ttu-id="918f8-292">在目前紀元中指定年份的指定月份中的日數。</span><span class="sxs-lookup"><span data-stu-id="918f8-292">The number of days in the specified month in the specified year in the current era.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="918f8-293">例如，在<xref:System.Globalization.GregorianCalendar>，<xref:System.Globalization.Calendar.GetDaysInMonth%2A>的 2 月 29，閏年一般年份中傳回 28。</span><span class="sxs-lookup"><span data-stu-id="918f8-293">For example, in <xref:System.Globalization.GregorianCalendar>, <xref:System.Globalization.Calendar.GetDaysInMonth%2A> for February returns 28 in a common year or 29 in a leap year.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="918f8-294">下列程式碼範例會比較不同的實作<xref:System.Globalization.Calendar>類別。</span><span class="sxs-lookup"><span data-stu-id="918f8-294">The following code example compares different implementations of the <xref:System.Globalization.Calendar> class.</span></span>  
  
 [!code-cpp[System.Globalization.Calendar_Compare#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar_Compare/CPP/calendar_compare.cpp#1)]
 [!code-csharp[System.Globalization.Calendar_Compare#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar_Compare/CS/calendar_compare.cs#1)]
 [!code-vb[System.Globalization.Calendar_Compare#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar_Compare/VB/calendar_compare.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="918f8-295"><paramref name="year" /> 不在曆法支援的範圍內。</span><span class="sxs-lookup"><span data-stu-id="918f8-295"><paramref name="year" /> is outside the range supported by the calendar.</span></span>  
  
<span data-ttu-id="918f8-296">-或-</span><span class="sxs-lookup"><span data-stu-id="918f8-296">-or-</span></span> 
 <span data-ttu-id="918f8-297"><paramref name="month" /> 不在曆法支援的範圍內。</span><span class="sxs-lookup"><span data-stu-id="918f8-297"><paramref name="month" /> is outside the range supported by the calendar.</span></span></exception>
        <altmember cref="T:System.Globalization.GregorianCalendar" />
        <altmember cref="M:System.Globalization.Calendar.GetMonthsInYear(System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.GetDaysInYear(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetDaysInMonth">
      <MemberSignature Language="C#" Value="public abstract int GetDaysInMonth (int year, int month, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetDaysInMonth(int32 year, int32 month, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetDaysInMonth (year As Integer, month As Integer, era As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int GetDaysInMonth(int year, int month, int era);" />
      <MemberSignature Language="F#" Value="abstract member GetDaysInMonth : int * int * int -&gt; int" Usage="calendar.GetDaysInMonth (year, month, era)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="918f8-298">表示年份的整數。</span><span class="sxs-lookup"><span data-stu-id="918f8-298">An integer that represents the year.</span></span></param>
        <param name="month"><span data-ttu-id="918f8-299">正整數，表示月份。</span><span class="sxs-lookup"><span data-stu-id="918f8-299">A positive integer that represents the month.</span></span></param>
        <param name="era"><span data-ttu-id="918f8-300">表示紀元的整數。</span><span class="sxs-lookup"><span data-stu-id="918f8-300">An integer that represents the era.</span></span></param>
        <summary><span data-ttu-id="918f8-301">在衍生類別中覆寫時，傳回指定月份、年份和紀元中的天數。</span><span class="sxs-lookup"><span data-stu-id="918f8-301">When overridden in a derived class, returns the number of days in the specified month, year, and era.</span></span></summary>
        <returns><span data-ttu-id="918f8-302">在指定紀元的指定年份的指定月份中的日數。</span><span class="sxs-lookup"><span data-stu-id="918f8-302">The number of days in the specified month in the specified year in the specified era.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="918f8-303">例如，在<xref:System.Globalization.GregorianCalendar>，<xref:System.Globalization.Calendar.GetDaysInMonth%2A>的 2 月 29，閏年一般年份中傳回 28。</span><span class="sxs-lookup"><span data-stu-id="918f8-303">For example, in <xref:System.Globalization.GregorianCalendar>, <xref:System.Globalization.Calendar.GetDaysInMonth%2A> for February returns 28 in a common year or 29 in a leap year.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="918f8-304"><paramref name="year" /> 不在曆法支援的範圍內。</span><span class="sxs-lookup"><span data-stu-id="918f8-304"><paramref name="year" /> is outside the range supported by the calendar.</span></span>  
  
<span data-ttu-id="918f8-305">-或-</span><span class="sxs-lookup"><span data-stu-id="918f8-305">-or-</span></span> 
 <span data-ttu-id="918f8-306"><paramref name="month" /> 不在曆法支援的範圍內。</span><span class="sxs-lookup"><span data-stu-id="918f8-306"><paramref name="month" /> is outside the range supported by the calendar.</span></span>  
  
<span data-ttu-id="918f8-307">-或-</span><span class="sxs-lookup"><span data-stu-id="918f8-307">-or-</span></span> 
 <span data-ttu-id="918f8-308"><paramref name="era" /> 不在曆法支援的範圍內。</span><span class="sxs-lookup"><span data-stu-id="918f8-308"><paramref name="era" /> is outside the range supported by the calendar.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="918f8-309">在衍生的類別必須支援<see cref="F:System.Globalization.Calendar.CurrentEra" />它會傳遞為<paramref name="era" />參數。</span><span class="sxs-lookup"><span data-stu-id="918f8-309">The derived class must support <see cref="F:System.Globalization.Calendar.CurrentEra" /> when it is passed as the <paramref name="era" /> parameter.</span></span> <span data-ttu-id="918f8-310">其中一種方式來支援<see cref="F:System.Globalization.Calendar.CurrentEra" />取代中儲存的值是<c>紀元 [0]</c>，即為目前紀元的行事曆值。</span><span class="sxs-lookup"><span data-stu-id="918f8-310">One way to support <see cref="F:System.Globalization.Calendar.CurrentEra" /> is by replacing it with the value stored in <c>Eras[0]</c>, which is the value for the current era of the calendar.</span></span></para></block>
        <altmember cref="T:System.Globalization.GregorianCalendar" />
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="P:System.Globalization.Calendar.Eras" />
        <altmember cref="M:System.Globalization.Calendar.GetMonthsInYear(System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.GetDaysInYear(System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetDaysInYear">
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="918f8-311">在衍生類別中覆寫時，傳回指定年份中的天數。</span><span class="sxs-lookup"><span data-stu-id="918f8-311">When overridden in a derived class, returns the number of days in the specified year.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetDaysInYear">
      <MemberSignature Language="C#" Value="public virtual int GetDaysInYear (int year);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetDaysInYear(int32 year) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.GetDaysInYear(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDaysInYear (year As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetDaysInYear(int year);" />
      <MemberSignature Language="F#" Value="abstract member GetDaysInYear : int -&gt; int&#xA;override this.GetDaysInYear : int -&gt; int" Usage="calendar.GetDaysInYear year" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="918f8-312">表示年份的整數。</span><span class="sxs-lookup"><span data-stu-id="918f8-312">An integer that represents the year.</span></span></param>
        <summary><span data-ttu-id="918f8-313">傳回目前紀元之指定年份中的天數。</span><span class="sxs-lookup"><span data-stu-id="918f8-313">Returns the number of days in the specified year of the current era.</span></span></summary>
        <returns><span data-ttu-id="918f8-314">在目前紀元的指定年份中的日數。</span><span class="sxs-lookup"><span data-stu-id="918f8-314">The number of days in the specified year in the current era.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="918f8-315">例如，在<xref:System.Globalization.GregorianCalendar>，<xref:System.Globalization.Calendar.GetDaysInYear%2A>傳回 365 一般年份或閏年的 366。</span><span class="sxs-lookup"><span data-stu-id="918f8-315">For example, in <xref:System.Globalization.GregorianCalendar>, <xref:System.Globalization.Calendar.GetDaysInYear%2A> returns 365 for a common year or 366 for a leap year.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="918f8-316">下列程式碼範例會比較不同的實作<xref:System.Globalization.Calendar>類別。</span><span class="sxs-lookup"><span data-stu-id="918f8-316">The following code example compares different implementations of the <xref:System.Globalization.Calendar> class.</span></span>  
  
 [!code-cpp[System.Globalization.Calendar_Compare#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar_Compare/CPP/calendar_compare.cpp#1)]
 [!code-csharp[System.Globalization.Calendar_Compare#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar_Compare/CS/calendar_compare.cs#1)]
 [!code-vb[System.Globalization.Calendar_Compare#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar_Compare/VB/calendar_compare.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="918f8-317"><paramref name="year" /> 不在曆法支援的範圍內。</span><span class="sxs-lookup"><span data-stu-id="918f8-317"><paramref name="year" /> is outside the range supported by the calendar.</span></span></exception>
        <altmember cref="T:System.Globalization.GregorianCalendar" />
        <altmember cref="M:System.Globalization.Calendar.GetMonthsInYear(System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.GetDaysInMonth(System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetDaysInYear">
      <MemberSignature Language="C#" Value="public abstract int GetDaysInYear (int year, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetDaysInYear(int32 year, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.GetDaysInYear(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetDaysInYear (year As Integer, era As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int GetDaysInYear(int year, int era);" />
      <MemberSignature Language="F#" Value="abstract member GetDaysInYear : int * int -&gt; int" Usage="calendar.GetDaysInYear (year, era)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="918f8-318">表示年份的整數。</span><span class="sxs-lookup"><span data-stu-id="918f8-318">An integer that represents the year.</span></span></param>
        <param name="era"><span data-ttu-id="918f8-319">表示紀元的整數。</span><span class="sxs-lookup"><span data-stu-id="918f8-319">An integer that represents the era.</span></span></param>
        <summary><span data-ttu-id="918f8-320">在衍生類別中覆寫時，傳回指定年份和紀元中的天數。</span><span class="sxs-lookup"><span data-stu-id="918f8-320">When overridden in a derived class, returns the number of days in the specified year and era.</span></span></summary>
        <returns><span data-ttu-id="918f8-321">在指定紀元的指定年份中的日數。</span><span class="sxs-lookup"><span data-stu-id="918f8-321">The number of days in the specified year in the specified era.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="918f8-322">例如，在<xref:System.Globalization.GregorianCalendar>，<xref:System.Globalization.Calendar.GetDaysInYear%2A>傳回 365 一般年份或閏年的 366。</span><span class="sxs-lookup"><span data-stu-id="918f8-322">For example, in <xref:System.Globalization.GregorianCalendar>, <xref:System.Globalization.Calendar.GetDaysInYear%2A> returns 365 for a common year or 366 for a leap year.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="918f8-323"><paramref name="year" /> 不在曆法支援的範圍內。</span><span class="sxs-lookup"><span data-stu-id="918f8-323"><paramref name="year" /> is outside the range supported by the calendar.</span></span>  
  
<span data-ttu-id="918f8-324">-或-</span><span class="sxs-lookup"><span data-stu-id="918f8-324">-or-</span></span> 
 <span data-ttu-id="918f8-325"><paramref name="era" /> 不在曆法支援的範圍內。</span><span class="sxs-lookup"><span data-stu-id="918f8-325"><paramref name="era" /> is outside the range supported by the calendar.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="918f8-326">在衍生的類別必須支援<see cref="F:System.Globalization.Calendar.CurrentEra" />它會傳遞為<paramref name="era" />參數。</span><span class="sxs-lookup"><span data-stu-id="918f8-326">The derived class must support <see cref="F:System.Globalization.Calendar.CurrentEra" /> when it is passed as the <paramref name="era" /> parameter.</span></span> <span data-ttu-id="918f8-327">其中一種方式來支援<see cref="F:System.Globalization.Calendar.CurrentEra" />取代中儲存的值是<c>紀元 [0]</c>，即為目前紀元的行事曆值。</span><span class="sxs-lookup"><span data-stu-id="918f8-327">One way to support <see cref="F:System.Globalization.Calendar.CurrentEra" /> is by replacing it with the value stored in <c>Eras[0]</c>, which is the value for the current era of the calendar.</span></span></para></block>
        <altmember cref="T:System.Globalization.GregorianCalendar" />
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="P:System.Globalization.Calendar.Eras" />
        <altmember cref="M:System.Globalization.Calendar.GetMonthsInYear(System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.GetDaysInMonth(System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetEra">
      <MemberSignature Language="C#" Value="public abstract int GetEra (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetEra(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.GetEra(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetEra (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int GetEra(DateTime time);" />
      <MemberSignature Language="F#" Value="abstract member GetEra : DateTime -&gt; int" Usage="calendar.GetEra time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time"><span data-ttu-id="918f8-328">要讀取的 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="918f8-328">The <see cref="T:System.DateTime" /> to read.</span></span></param>
        <summary><span data-ttu-id="918f8-329">當在衍生類別中覆寫時，傳回指定 <see cref="T:System.DateTime" /> 中的紀元。</span><span class="sxs-lookup"><span data-stu-id="918f8-329">When overridden in a derived class, returns the era in the specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="918f8-330">表示 <paramref name="time" /> 中紀元的整數。</span><span class="sxs-lookup"><span data-stu-id="918f8-330">An integer that represents the era in <paramref name="time" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
## Remarks

<span data-ttu-id="918f8-331">只有<xref:System.Globalization.JapaneseCalendar>而<xref:System.Globalization.JapaneseLunisolarCalendar>類別支援多個紀元。</span><span class="sxs-lookup"><span data-stu-id="918f8-331">Only the <xref:System.Globalization.JapaneseCalendar> and the <xref:System.Globalization.JapaneseLunisolarCalendar> classes support multiple eras.</span></span>

## Examples  
 <span data-ttu-id="918f8-332">下列程式碼範例將示範成員<xref:System.Globalization.Calendar>類別。</span><span class="sxs-lookup"><span data-stu-id="918f8-332">The following code example demonstrates the members of the <xref:System.Globalization.Calendar> class.</span></span>  
  
 [!code-cpp[System.Globalization.Calendar#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar/CPP/calendar.cpp#1)]
 [!code-csharp[System.Globalization.Calendar#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar/CS/calendar.cs#1)]
 [!code-vb[System.Globalization.Calendar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar/VB/calendar.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.DateTime" />
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="P:System.Globalization.Calendar.Eras" />
        <altmember cref="M:System.Globalization.Calendar.GetYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
        <altmember cref="M:System.Globalization.Calendar.GetDayOfYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetDayOfMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetDayOfWeek(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetHour(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMinute(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetSecond(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMilliseconds(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="GetHour">
      <MemberSignature Language="C#" Value="public virtual int GetHour (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetHour(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.GetHour(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetHour (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetHour(DateTime time);" />
      <MemberSignature Language="F#" Value="abstract member GetHour : DateTime -&gt; int&#xA;override this.GetHour : DateTime -&gt; int" Usage="calendar.GetHour time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time"><span data-ttu-id="918f8-333">要讀取的 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="918f8-333">The <see cref="T:System.DateTime" /> to read.</span></span></param>
        <summary><span data-ttu-id="918f8-334">傳回指定 <see cref="T:System.DateTime" /> 中的小時值。</span><span class="sxs-lookup"><span data-stu-id="918f8-334">Returns the hours value in the specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="918f8-335">從 0 至 23 的整數，表示 <paramref name="time" /> 中的小時。</span><span class="sxs-lookup"><span data-stu-id="918f8-335">An integer from 0 to 23 that represents the hour in <paramref name="time" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="918f8-336">下列程式碼範例將示範成員<xref:System.Globalization.Calendar>類別。</span><span class="sxs-lookup"><span data-stu-id="918f8-336">The following code example demonstrates the members of the <xref:System.Globalization.Calendar> class.</span></span>  
  
 [!code-cpp[System.Globalization.Calendar#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar/CPP/calendar.cpp#1)]
 [!code-csharp[System.Globalization.Calendar#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar/CS/calendar.cs#1)]
 [!code-vb[System.Globalization.Calendar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar/VB/calendar.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTime.Hour" />
        <altmember cref="M:System.Globalization.Calendar.GetEra(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
        <altmember cref="M:System.Globalization.Calendar.GetDayOfYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetDayOfMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetDayOfWeek(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMinute(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetSecond(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMilliseconds(System.DateTime)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetLeapMonth">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="918f8-337">計算指定年份，或年份和紀元的閏月。</span><span class="sxs-lookup"><span data-stu-id="918f8-337">Calculates the leap month for a specified year, or year and era.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetLeapMonth">
      <MemberSignature Language="C#" Value="public virtual int GetLeapMonth (int year);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetLeapMonth(int32 year) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.GetLeapMonth(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetLeapMonth (year As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetLeapMonth(int year);" />
      <MemberSignature Language="F#" Value="abstract member GetLeapMonth : int -&gt; int&#xA;override this.GetLeapMonth : int -&gt; int" Usage="calendar.GetLeapMonth year" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="918f8-338">一年。</span><span class="sxs-lookup"><span data-stu-id="918f8-338">A year.</span></span></param>
        <summary><span data-ttu-id="918f8-339">計算指定年份的閏月。</span><span class="sxs-lookup"><span data-stu-id="918f8-339">Calculates the leap month for a specified year.</span></span></summary>
        <returns><span data-ttu-id="918f8-340">正整數，指出在指定的年份中的閏月。</span><span class="sxs-lookup"><span data-stu-id="918f8-340">A positive integer that indicates the leap month in the specified year.</span></span>  
  
<span data-ttu-id="918f8-341">-或-</span><span class="sxs-lookup"><span data-stu-id="918f8-341">-or-</span></span> 
<span data-ttu-id="918f8-342">如果這個曆法不支援閏月，或 <paramref name="year" /> 參數不代表閏年，則為零。</span><span class="sxs-lookup"><span data-stu-id="918f8-342">Zero if this calendar does not support a leap month or if the <paramref name="year" /> parameter does not represent a leap year.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="918f8-343">行事曆支援閏月的概念，在特定月份或任何一年中的月之後，可能會發生的閏月。</span><span class="sxs-lookup"><span data-stu-id="918f8-343">In a calendar that supports the notion of a leap month, the leap month can occur either after a particular month or after any month in a year.</span></span> <span data-ttu-id="918f8-344">比方說，<xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%28System.DateTime%29>方法傳回的數字，介於 1 到 13，表示指定的日期與相關聯的月份。</span><span class="sxs-lookup"><span data-stu-id="918f8-344">For example, the <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%28System.DateTime%29> method returns a number between 1 and 13 that indicates the month associated with a specified date.</span></span> <span data-ttu-id="918f8-345">如果年份的第八個和第九個月之間沒有閏月<xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%28System.DateTime%29>方法會傳回 8，第八個月內，如呈獻第八個月的 9 和 10，第九個月。</span><span class="sxs-lookup"><span data-stu-id="918f8-345">If there is a leap month between the eighth and ninth months of the year, the <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%28System.DateTime%29> method returns 8 for the eighth month, 9 for the leap eighth month, and 10 for the ninth month.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLeapMonth">
      <MemberSignature Language="C#" Value="public virtual int GetLeapMonth (int year, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetLeapMonth(int32 year, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.GetLeapMonth(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetLeapMonth (year As Integer, era As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetLeapMonth(int year, int era);" />
      <MemberSignature Language="F#" Value="abstract member GetLeapMonth : int * int -&gt; int&#xA;override this.GetLeapMonth : int * int -&gt; int" Usage="calendar.GetLeapMonth (year, era)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="918f8-346">一年。</span><span class="sxs-lookup"><span data-stu-id="918f8-346">A year.</span></span></param>
        <param name="era"><span data-ttu-id="918f8-347">一紀元。</span><span class="sxs-lookup"><span data-stu-id="918f8-347">An era.</span></span></param>
        <summary><span data-ttu-id="918f8-348">計算指定年份和紀元的閏月。</span><span class="sxs-lookup"><span data-stu-id="918f8-348">Calculates the leap month for a specified year and era.</span></span></summary>
        <returns><span data-ttu-id="918f8-349">正整數，指出在指定的年份及紀元中的閏月。</span><span class="sxs-lookup"><span data-stu-id="918f8-349">A positive integer that indicates the leap month in the specified year and era.</span></span>  
  
<span data-ttu-id="918f8-350">-或-</span><span class="sxs-lookup"><span data-stu-id="918f8-350">-or-</span></span> 
<span data-ttu-id="918f8-351">如果這個曆法不支援閏月，或 <paramref name="year" /> 和 <paramref name="era" /> 參數未指定閏年，則為零。</span><span class="sxs-lookup"><span data-stu-id="918f8-351">Zero if this calendar does not support a leap month or if the <paramref name="year" /> and <paramref name="era" /> parameters do not specify a leap year.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="918f8-352">行事曆支援閏月的概念，在特定月份或任何一年中的月之後，可能會發生的閏月。</span><span class="sxs-lookup"><span data-stu-id="918f8-352">In a calendar that supports the notion of a leap month, the leap month can occur either after a particular month or after any month in a year.</span></span> <span data-ttu-id="918f8-353">比方說，<xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%28System.DateTime%29>方法傳回的數字，介於 1 到 13，表示指定的日期與相關聯的月份。</span><span class="sxs-lookup"><span data-stu-id="918f8-353">For example, the <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%28System.DateTime%29> method returns a number between 1 and 13 that indicates the month associated with a specified date.</span></span> <span data-ttu-id="918f8-354">如果年份的第八個和第九個月之間沒有閏月<xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%28System.DateTime%29>方法會傳回 8，第八個月內，如呈獻第八個月的 9 和 10，第九個月。</span><span class="sxs-lookup"><span data-stu-id="918f8-354">If there is a leap month between the eighth and ninth months of the year, the <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%28System.DateTime%29> method returns 8 for the eighth month, 9 for the leap eighth month, and 10 for the ninth month.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMilliseconds">
      <MemberSignature Language="C#" Value="public virtual double GetMilliseconds (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 GetMilliseconds(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.GetMilliseconds(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetMilliseconds (time As DateTime) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual double GetMilliseconds(DateTime time);" />
      <MemberSignature Language="F#" Value="abstract member GetMilliseconds : DateTime -&gt; double&#xA;override this.GetMilliseconds : DateTime -&gt; double" Usage="calendar.GetMilliseconds time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time"><span data-ttu-id="918f8-355">要讀取的 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="918f8-355">The <see cref="T:System.DateTime" /> to read.</span></span></param>
        <summary><span data-ttu-id="918f8-356">傳回指定 <see cref="T:System.DateTime" /> 中的毫秒值。</span><span class="sxs-lookup"><span data-stu-id="918f8-356">Returns the milliseconds value in the specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="918f8-357">0 到 999 的雙精確度浮點數，表示 <paramref name="time" /> 參數中的毫秒。</span><span class="sxs-lookup"><span data-stu-id="918f8-357">A double-precision floating-point number from 0 to 999 that represents the milliseconds in the <paramref name="time" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="918f8-358">下列程式碼範例將示範成員<xref:System.Globalization.Calendar>類別。</span><span class="sxs-lookup"><span data-stu-id="918f8-358">The following code example demonstrates the members of the <xref:System.Globalization.Calendar> class.</span></span>  
  
 [!code-cpp[System.Globalization.Calendar#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar/CPP/calendar.cpp#1)]
 [!code-csharp[System.Globalization.Calendar#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar/CS/calendar.cs#1)]
 [!code-vb[System.Globalization.Calendar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar/VB/calendar.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTime.Millisecond" />
        <altmember cref="M:System.Globalization.Calendar.GetEra(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
        <altmember cref="M:System.Globalization.Calendar.GetDayOfYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetDayOfMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetDayOfWeek(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetHour(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMinute(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetSecond(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="GetMinute">
      <MemberSignature Language="C#" Value="public virtual int GetMinute (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetMinute(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.GetMinute(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetMinute (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetMinute(DateTime time);" />
      <MemberSignature Language="F#" Value="abstract member GetMinute : DateTime -&gt; int&#xA;override this.GetMinute : DateTime -&gt; int" Usage="calendar.GetMinute time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time"><span data-ttu-id="918f8-359">要讀取的 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="918f8-359">The <see cref="T:System.DateTime" /> to read.</span></span></param>
        <summary><span data-ttu-id="918f8-360">傳回指定 <see cref="T:System.DateTime" /> 中的分鐘值。</span><span class="sxs-lookup"><span data-stu-id="918f8-360">Returns the minutes value in the specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="918f8-361">從 0 至 59 的整數，表示 <paramref name="time" /> 中的分鐘。</span><span class="sxs-lookup"><span data-stu-id="918f8-361">An integer from 0 to 59 that represents the minutes in <paramref name="time" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="918f8-362">下列程式碼範例將示範成員<xref:System.Globalization.Calendar>類別。</span><span class="sxs-lookup"><span data-stu-id="918f8-362">The following code example demonstrates the members of the <xref:System.Globalization.Calendar> class.</span></span>  
  
 [!code-cpp[System.Globalization.Calendar#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar/CPP/calendar.cpp#1)]
 [!code-csharp[System.Globalization.Calendar#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar/CS/calendar.cs#1)]
 [!code-vb[System.Globalization.Calendar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar/VB/calendar.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTime.Minute" />
        <altmember cref="M:System.Globalization.Calendar.GetEra(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
        <altmember cref="M:System.Globalization.Calendar.GetDayOfYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetDayOfMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetDayOfWeek(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetHour(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetSecond(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMilliseconds(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="GetMonth">
      <MemberSignature Language="C#" Value="public abstract int GetMonth (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetMonth(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.GetMonth(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetMonth (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int GetMonth(DateTime time);" />
      <MemberSignature Language="F#" Value="abstract member GetMonth : DateTime -&gt; int" Usage="calendar.GetMonth time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time"><span data-ttu-id="918f8-363">要讀取的 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="918f8-363">The <see cref="T:System.DateTime" /> to read.</span></span></param>
        <summary><span data-ttu-id="918f8-364">當在衍生類別中覆寫時，傳回指定 <see cref="T:System.DateTime" /> 中的月份。</span><span class="sxs-lookup"><span data-stu-id="918f8-364">When overridden in a derived class, returns the month in the specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="918f8-365">正整數，表示 <paramref name="time" /> 中的月份。</span><span class="sxs-lookup"><span data-stu-id="918f8-365">A positive integer that represents the month in <paramref name="time" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="918f8-366">例如，在<xref:System.Globalization.HebrewCalendar>， <xref:System.Globalization.Calendar.GetMonth%2A> Tishrei 傳回 1，如和<xref:System.Globalization.Calendar.GetMonth%2A>Elul 傳回 12，閏年 13 一般年份中的。</span><span class="sxs-lookup"><span data-stu-id="918f8-366">For example, in <xref:System.Globalization.HebrewCalendar>, <xref:System.Globalization.Calendar.GetMonth%2A> for Tishrei returns 1, and <xref:System.Globalization.Calendar.GetMonth%2A> for Elul returns 12 in a common year or 13 in a leap year.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="918f8-367">下列程式碼範例將示範成員<xref:System.Globalization.Calendar>類別。</span><span class="sxs-lookup"><span data-stu-id="918f8-367">The following code example demonstrates the members of the <xref:System.Globalization.Calendar> class.</span></span>  
  
 [!code-cpp[System.Globalization.Calendar#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar/CPP/calendar.cpp#1)]
 [!code-csharp[System.Globalization.Calendar#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar/CS/calendar.cs#1)]
 [!code-vb[System.Globalization.Calendar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar/VB/calendar.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTime.Month" />
        <altmember cref="M:System.Globalization.Calendar.GetEra(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
        <altmember cref="M:System.Globalization.Calendar.GetDayOfYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetDayOfMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetDayOfWeek(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetHour(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMinute(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetSecond(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMilliseconds(System.DateTime)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetMonthsInYear">
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="918f8-368">在衍生類別中覆寫時，傳回指定年份中的月數。</span><span class="sxs-lookup"><span data-stu-id="918f8-368">When overridden in a derived class, returns the number of months in the specified year.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetMonthsInYear">
      <MemberSignature Language="C#" Value="public virtual int GetMonthsInYear (int year);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetMonthsInYear(int32 year) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.GetMonthsInYear(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetMonthsInYear (year As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetMonthsInYear(int year);" />
      <MemberSignature Language="F#" Value="abstract member GetMonthsInYear : int -&gt; int&#xA;override this.GetMonthsInYear : int -&gt; int" Usage="calendar.GetMonthsInYear year" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="918f8-369">表示年份的整數。</span><span class="sxs-lookup"><span data-stu-id="918f8-369">An integer that represents the year.</span></span></param>
        <summary><span data-ttu-id="918f8-370">傳回目前紀元的指定年份中的月數。</span><span class="sxs-lookup"><span data-stu-id="918f8-370">Returns the number of months in the specified year in the current era.</span></span></summary>
        <returns><span data-ttu-id="918f8-371">在目前紀元的指定年份中的月數。</span><span class="sxs-lookup"><span data-stu-id="918f8-371">The number of months in the specified year in the current era.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="918f8-372">例如，在<xref:System.Globalization.HebrewCalendar>，<xref:System.Globalization.Calendar.GetMonthsInYear%2A>一般年份或閏年的 13 傳回 12。</span><span class="sxs-lookup"><span data-stu-id="918f8-372">For example, in <xref:System.Globalization.HebrewCalendar>, <xref:System.Globalization.Calendar.GetMonthsInYear%2A> returns 12 for a common year or 13 for a leap year.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="918f8-373">下列程式碼範例會比較不同的實作<xref:System.Globalization.Calendar>類別。</span><span class="sxs-lookup"><span data-stu-id="918f8-373">The following code example compares different implementations of the <xref:System.Globalization.Calendar> class.</span></span>  
  
 [!code-cpp[System.Globalization.Calendar_Compare#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar_Compare/CPP/calendar_compare.cpp#1)]
 [!code-csharp[System.Globalization.Calendar_Compare#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar_Compare/CS/calendar_compare.cs#1)]
 [!code-vb[System.Globalization.Calendar_Compare#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar_Compare/VB/calendar_compare.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="918f8-374"><paramref name="year" /> 不在曆法支援的範圍內。</span><span class="sxs-lookup"><span data-stu-id="918f8-374"><paramref name="year" /> is outside the range supported by the calendar.</span></span></exception>
        <altmember cref="M:System.Globalization.Calendar.GetDaysInYear(System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.GetDaysInMonth(System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetMonthsInYear">
      <MemberSignature Language="C#" Value="public abstract int GetMonthsInYear (int year, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetMonthsInYear(int32 year, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.GetMonthsInYear(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetMonthsInYear (year As Integer, era As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int GetMonthsInYear(int year, int era);" />
      <MemberSignature Language="F#" Value="abstract member GetMonthsInYear : int * int -&gt; int" Usage="calendar.GetMonthsInYear (year, era)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="918f8-375">表示年份的整數。</span><span class="sxs-lookup"><span data-stu-id="918f8-375">An integer that represents the year.</span></span></param>
        <param name="era"><span data-ttu-id="918f8-376">表示紀元的整數。</span><span class="sxs-lookup"><span data-stu-id="918f8-376">An integer that represents the era.</span></span></param>
        <summary><span data-ttu-id="918f8-377">當在衍生類別中覆寫時，傳回指定紀元的指定年份中月數。</span><span class="sxs-lookup"><span data-stu-id="918f8-377">When overridden in a derived class, returns the number of months in the specified year in the specified era.</span></span></summary>
        <returns><span data-ttu-id="918f8-378">在指定紀元的指定年份中的月數。</span><span class="sxs-lookup"><span data-stu-id="918f8-378">The number of months in the specified year in the specified era.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="918f8-379">例如，在<xref:System.Globalization.HebrewCalendar>，<xref:System.Globalization.Calendar.GetMonthsInYear%2A>一般年份或閏年的 13 傳回 12。</span><span class="sxs-lookup"><span data-stu-id="918f8-379">For example, in <xref:System.Globalization.HebrewCalendar>, <xref:System.Globalization.Calendar.GetMonthsInYear%2A> returns 12 for a common year or 13 for a leap year.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="918f8-380"><paramref name="year" /> 不在曆法支援的範圍內。</span><span class="sxs-lookup"><span data-stu-id="918f8-380"><paramref name="year" /> is outside the range supported by the calendar.</span></span>  
  
<span data-ttu-id="918f8-381">-或-</span><span class="sxs-lookup"><span data-stu-id="918f8-381">-or-</span></span> 
 <span data-ttu-id="918f8-382"><paramref name="era" /> 不在曆法支援的範圍內。</span><span class="sxs-lookup"><span data-stu-id="918f8-382"><paramref name="era" /> is outside the range supported by the calendar.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="918f8-383">在衍生的類別必須支援<see cref="F:System.Globalization.Calendar.CurrentEra" />它會傳遞為<paramref name="era" />參數。</span><span class="sxs-lookup"><span data-stu-id="918f8-383">The derived class must support <see cref="F:System.Globalization.Calendar.CurrentEra" /> when it is passed as the <paramref name="era" /> parameter.</span></span> <span data-ttu-id="918f8-384">其中一種方式來支援<see cref="F:System.Globalization.Calendar.CurrentEra" />取代中儲存的值是<c>紀元 [0]</c>，即為目前紀元的行事曆值。</span><span class="sxs-lookup"><span data-stu-id="918f8-384">One way to support <see cref="F:System.Globalization.Calendar.CurrentEra" /> is by replacing it with the value stored in <c>Eras[0]</c>, which is the value for the current era of the calendar.</span></span></para></block>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="P:System.Globalization.Calendar.Eras" />
        <altmember cref="M:System.Globalization.Calendar.GetDaysInYear(System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.GetDaysInMonth(System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetSecond">
      <MemberSignature Language="C#" Value="public virtual int GetSecond (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetSecond(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.GetSecond(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSecond (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetSecond(DateTime time);" />
      <MemberSignature Language="F#" Value="abstract member GetSecond : DateTime -&gt; int&#xA;override this.GetSecond : DateTime -&gt; int" Usage="calendar.GetSecond time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time"><span data-ttu-id="918f8-385">要讀取的 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="918f8-385">The <see cref="T:System.DateTime" /> to read.</span></span></param>
        <summary><span data-ttu-id="918f8-386">傳回指定 <see cref="T:System.DateTime" /> 中的秒值。</span><span class="sxs-lookup"><span data-stu-id="918f8-386">Returns the seconds value in the specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="918f8-387">從 0 至 59 的整數，表示 <paramref name="time" /> 中的秒。</span><span class="sxs-lookup"><span data-stu-id="918f8-387">An integer from 0 to 59 that represents the seconds in <paramref name="time" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="918f8-388">下列程式碼範例將示範成員<xref:System.Globalization.Calendar>類別。</span><span class="sxs-lookup"><span data-stu-id="918f8-388">The following code example demonstrates the members of the <xref:System.Globalization.Calendar> class.</span></span>  
  
 [!code-cpp[System.Globalization.Calendar#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar/CPP/calendar.cpp#1)]
 [!code-csharp[System.Globalization.Calendar#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar/CS/calendar.cs#1)]
 [!code-vb[System.Globalization.Calendar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar/VB/calendar.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTime.Second" />
        <altmember cref="M:System.Globalization.Calendar.GetEra(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
        <altmember cref="M:System.Globalization.Calendar.GetDayOfYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetDayOfMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetDayOfWeek(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetHour(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMinute(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMilliseconds(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="GetWeekOfYear">
      <MemberSignature Language="C#" Value="public virtual int GetWeekOfYear (DateTime time, System.Globalization.CalendarWeekRule rule, DayOfWeek firstDayOfWeek);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetWeekOfYear(valuetype System.DateTime time, valuetype System.Globalization.CalendarWeekRule rule, valuetype System.DayOfWeek firstDayOfWeek) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetWeekOfYear (time As DateTime, rule As CalendarWeekRule, firstDayOfWeek As DayOfWeek) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetWeekOfYear(DateTime time, System::Globalization::CalendarWeekRule rule, DayOfWeek firstDayOfWeek);" />
      <MemberSignature Language="F#" Value="abstract member GetWeekOfYear : DateTime * System.Globalization.CalendarWeekRule * DayOfWeek -&gt; int&#xA;override this.GetWeekOfYear : DateTime * System.Globalization.CalendarWeekRule * DayOfWeek -&gt; int" Usage="calendar.GetWeekOfYear (time, rule, firstDayOfWeek)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
        <Parameter Name="rule" Type="System.Globalization.CalendarWeekRule" />
        <Parameter Name="firstDayOfWeek" Type="System.DayOfWeek" />
      </Parameters>
      <Docs>
        <param name="time"><span data-ttu-id="918f8-389">日期和時間值。</span><span class="sxs-lookup"><span data-stu-id="918f8-389">A date and time value.</span></span></param>
        <param name="rule"><span data-ttu-id="918f8-390">定義日曆週的列舉值。</span><span class="sxs-lookup"><span data-stu-id="918f8-390">An enumeration value that defines a calendar week.</span></span></param>
        <param name="firstDayOfWeek"><span data-ttu-id="918f8-391">代表一週第一天的列舉值。</span><span class="sxs-lookup"><span data-stu-id="918f8-391">An enumeration value that represents the first day of the week.</span></span></param>
        <summary><span data-ttu-id="918f8-392">傳回年份中的週，其中包含指定之 <see cref="T:System.DateTime" /> 值中的日期。</span><span class="sxs-lookup"><span data-stu-id="918f8-392">Returns the week of the year that includes the date in the specified <see cref="T:System.DateTime" /> value.</span></span></summary>
        <returns><span data-ttu-id="918f8-393">正整數，表示 <paramref name="time" /> 參數中日期所屬年份中的某週。</span><span class="sxs-lookup"><span data-stu-id="918f8-393">A positive integer that represents the week of the year that includes the date in the <paramref name="time" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="918f8-394">這個方法可用來設定來判斷一年的週數`time`一年的最後一天。</span><span class="sxs-lookup"><span data-stu-id="918f8-394">This method can be used to determine the number of weeks in the year by setting `time` to the last day of the year.</span></span>  
  
 <span data-ttu-id="918f8-395"><xref:System.Globalization.DateTimeFormatInfo>物件的特定文化特性會由行事曆<xref:System.Globalization.DateTimeFormatInfo.Calendar%2A?displayProperty=nameWithType>屬性包含下列可用於的特定文化特性值`rule`和`firstDayOfWeek`參數：</span><span class="sxs-lookup"><span data-stu-id="918f8-395">The <xref:System.Globalization.DateTimeFormatInfo> object for a particular culture that uses the calendar indicated by the <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A?displayProperty=nameWithType> property includes the following culture-specific values that can be used for the `rule` and `firstDayOfWeek` parameters:</span></span>  
  
-   <span data-ttu-id="918f8-396"><xref:System.Globalization.DateTimeFormatInfo.FirstDayOfWeek%2A?displayProperty=nameWithType>屬性包含預設值可用於一週的第一天`firstDayOfWeek`參數。</span><span class="sxs-lookup"><span data-stu-id="918f8-396">The <xref:System.Globalization.DateTimeFormatInfo.FirstDayOfWeek%2A?displayProperty=nameWithType> property contains the default first day of the week that can be used for the `firstDayOfWeek` parameter.</span></span>  
  
-   <span data-ttu-id="918f8-397"><xref:System.Globalization.DateTimeFormatInfo.CalendarWeekRule%2A?displayProperty=nameWithType>屬性包含可用於預設的行事曆週規則`rule`參數。</span><span class="sxs-lookup"><span data-stu-id="918f8-397">The <xref:System.Globalization.DateTimeFormatInfo.CalendarWeekRule%2A?displayProperty=nameWithType> property contains the default calendar week rule that can be used for the `rule` parameter.</span></span>  
  
 <span data-ttu-id="918f8-398">下列範例會使用目前文化特性的<xref:System.Globalization.DateTimeFormatInfo>判斷 2011 年 1 月 1 日是西曆日曆年度的第一週中的物件。</span><span class="sxs-lookup"><span data-stu-id="918f8-398">The following example uses the current culture's <xref:System.Globalization.DateTimeFormatInfo> object to determine that January 1, 2011 is in the first week of the year in the Gregorian calendar.</span></span>  
  
 [!code-csharp[System.Globalization.Calendar.GetWeekOfYear#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar.GetWeekOfYear/CS/getweekofyearex1.cs#2)]
 [!code-vb[System.Globalization.Calendar.GetWeekOfYear#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar.GetWeekOfYear/VB/getweekofyearex1.vb#2)]  
  
 <span data-ttu-id="918f8-399">針對某些曆法，呼叫<xref:System.Globalization.Calendar.GetWeekOfYear%2A>方法會擲回<xref:System.ArgumentOutOfRangeException>特定組合的`rule`並`firstDayOfWeek`值，即使`time`大於由該曆法的日期<xref:System.Globalization.Calendar.MinSupportedDateTime%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="918f8-399">For some calendars, a call to the <xref:System.Globalization.Calendar.GetWeekOfYear%2A> method throws an <xref:System.ArgumentOutOfRangeException> for particular combinations of `rule` and `firstDayOfWeek` values even if `time` is greater than the date returned by that calendar's <xref:System.Globalization.Calendar.MinSupportedDateTime%2A> property.</span></span> <span data-ttu-id="918f8-400">下表列出受影響的行事曆，特定`rule`值和最早支援的各種`time`值。</span><span class="sxs-lookup"><span data-stu-id="918f8-400">The following table lists the affected calendars, the specific `rule` values, and the range of the earliest supported `time` values.</span></span> <span data-ttu-id="918f8-401">特定的最小<xref:System.DateTime>值取決於值`firstDayOfWeek`參數。</span><span class="sxs-lookup"><span data-stu-id="918f8-401">The specific minimum <xref:System.DateTime> value depends on the value of the `firstDayOfWeek` parameter.</span></span>  
  
|<span data-ttu-id="918f8-402">行事曆</span><span class="sxs-lookup"><span data-stu-id="918f8-402">Calendar</span></span>|<span data-ttu-id="918f8-403">CalendarWeekRule 值</span><span class="sxs-lookup"><span data-stu-id="918f8-403">CalendarWeekRule value</span></span>|<span data-ttu-id="918f8-404">西曆日期 (M/dd/yyyy)</span><span class="sxs-lookup"><span data-stu-id="918f8-404">Gregorian date (M/dd/yyyy)</span></span>|<span data-ttu-id="918f8-405">日期的行事曆 (M/dd/yyyy)</span><span class="sxs-lookup"><span data-stu-id="918f8-405">Date in calendar (M/dd/yyyy)</span></span>|  
|--------------|----------------------------|------------------------------------|--------------------------------------|  
|<xref:System.Globalization.ChineseLunisolarCalendar>|<xref:System.Globalization.CalendarWeekRule.FirstFullWeek>|<span data-ttu-id="918f8-406">2/19/1901 到 2/25/1901</span><span class="sxs-lookup"><span data-stu-id="918f8-406">2/19/1901 to 2/25/1901</span></span>|<span data-ttu-id="918f8-407">以 1901 年 1/7/1/1/1901</span><span class="sxs-lookup"><span data-stu-id="918f8-407">1/1/1901 to 1/7/1901</span></span>|  
|<xref:System.Globalization.ChineseLunisolarCalendar>|<xref:System.Globalization.CalendarWeekRule.FirstFourDayWeek>|<span data-ttu-id="918f8-408">2/19/1901 到 2/22/1901</span><span class="sxs-lookup"><span data-stu-id="918f8-408">2/19/1901 to 2/22/1901</span></span>|<span data-ttu-id="918f8-409">以 1/04/1901年 1/01/1901</span><span class="sxs-lookup"><span data-stu-id="918f8-409">1/01/1901 to 1/04/1901</span></span>|  
|<xref:System.Globalization.HebrewCalendar>|<xref:System.Globalization.CalendarWeekRule.FirstDay>|<span data-ttu-id="918f8-410">9/17/1583</span><span class="sxs-lookup"><span data-stu-id="918f8-410">9/17/1583</span></span>|<span data-ttu-id="918f8-411">1/01/5344</span><span class="sxs-lookup"><span data-stu-id="918f8-411">1/01/5344</span></span>|  
|<xref:System.Globalization.HebrewCalendar>|<xref:System.Globalization.CalendarWeekRule.FirstFullWeek>|<span data-ttu-id="918f8-412">9/17/1583 9/23/1583 到</span><span class="sxs-lookup"><span data-stu-id="918f8-412">9/17/1583 to 9/23/1583</span></span>|<span data-ttu-id="918f8-413">1/01/5344 以 1/07/5344</span><span class="sxs-lookup"><span data-stu-id="918f8-413">1/01/5344 to 1/07/5344</span></span>|  
|<xref:System.Globalization.HebrewCalendar>|<xref:System.Globalization.CalendarWeekRule.FirstFourDayWeek>|<span data-ttu-id="918f8-414">9/17/1583 至 9/20/1583</span><span class="sxs-lookup"><span data-stu-id="918f8-414">9/17/1583 to 9/20/1583</span></span>|<span data-ttu-id="918f8-415">1/01/5344 以 1/04/5344</span><span class="sxs-lookup"><span data-stu-id="918f8-415">1/01/5344 to 1/04/5344</span></span>|  
|<xref:System.Globalization.HijriCalendar>|<xref:System.Globalization.CalendarWeekRule.FirstFullWeek>|<span data-ttu-id="918f8-416">7/18/0622年至 7/24/0622 變更</span><span class="sxs-lookup"><span data-stu-id="918f8-416">7/18/0622 to 7/24/0622</span></span>|<span data-ttu-id="918f8-417">以 0001 年 1/07/1/01/0001</span><span class="sxs-lookup"><span data-stu-id="918f8-417">1/01/0001 to 1/07/0001</span></span>|  
|<xref:System.Globalization.HijriCalendar>|<xref:System.Globalization.CalendarWeekRule.FirstFourDayWeek>|<span data-ttu-id="918f8-418">7/18/0622年至 7/21/0622 變更</span><span class="sxs-lookup"><span data-stu-id="918f8-418">7/18/0622 to 7/21/0622</span></span>|<span data-ttu-id="918f8-419">以 0001 年 1/04/1/01/0001</span><span class="sxs-lookup"><span data-stu-id="918f8-419">1/01/0001 to 1/04/0001</span></span>|  
|<xref:System.Globalization.JapaneseLunisolarCalendar>|<xref:System.Globalization.CalendarWeekRule.FirstFullWeek>|<span data-ttu-id="918f8-420">1/28/1960 年到 2/03/1960</span><span class="sxs-lookup"><span data-stu-id="918f8-420">1/28/1960 to 2/03/1960</span></span>|<span data-ttu-id="918f8-421">1/01/35 到 1/07/0035</span><span class="sxs-lookup"><span data-stu-id="918f8-421">1/01/35 to 1/07/0035</span></span>|  
|<xref:System.Globalization.JapaneseLunisolarCalendar>|<xref:System.Globalization.CalendarWeekRule.FirstFourDayWeek>|<span data-ttu-id="918f8-422">1/28/1960 年到 1/31/1960</span><span class="sxs-lookup"><span data-stu-id="918f8-422">1/28/1960 to 1/31/1960</span></span>|<span data-ttu-id="918f8-423">以 1/04/0035 1/01/0035</span><span class="sxs-lookup"><span data-stu-id="918f8-423">1/01/0035 to 1/04/0035</span></span>|  
|<xref:System.Globalization.JulianCalendar>|<xref:System.Globalization.CalendarWeekRule.FirstFullWeek>|<span data-ttu-id="918f8-424">以 0001 年 1/05/1/01/0001</span><span class="sxs-lookup"><span data-stu-id="918f8-424">1/01/0001 to 1/05/0001</span></span>|<span data-ttu-id="918f8-425">以 0001 年 1/07/1/03/0001</span><span class="sxs-lookup"><span data-stu-id="918f8-425">1/03/0001 to 1/07/0001</span></span>|  
|<xref:System.Globalization.JulianCalendar>|<xref:System.Globalization.CalendarWeekRule.FirstFourDayWeek>|<span data-ttu-id="918f8-426">以 0001 年 1/02/1/01/0001</span><span class="sxs-lookup"><span data-stu-id="918f8-426">1/01/0001 to 1/02/0001</span></span>|<span data-ttu-id="918f8-427">以 0001 年 1/04/1/03/0001</span><span class="sxs-lookup"><span data-stu-id="918f8-427">1/03/0001 to 1/04/0001</span></span>|  
|<xref:System.Globalization.KoreanLunisolarCalendar>|<xref:System.Globalization.CalendarWeekRule.FirstFullWeek>|<span data-ttu-id="918f8-428">2/14/0918年到 2/20/0918</span><span class="sxs-lookup"><span data-stu-id="918f8-428">2/14/0918 to 2/20/0918</span></span>|<span data-ttu-id="918f8-429">1/01/0918年以 1/07/0918</span><span class="sxs-lookup"><span data-stu-id="918f8-429">1/01/0918 to 1/07/0918</span></span>|  
|<xref:System.Globalization.KoreanLunisolarCalendar>|<xref:System.Globalization.CalendarWeekRule.FirstFourDayWeek>|<span data-ttu-id="918f8-430">2/14/0918年到 2/17/0918</span><span class="sxs-lookup"><span data-stu-id="918f8-430">2/14/0918 to 2/17/0918</span></span>|<span data-ttu-id="918f8-431">1/01/0918年以 1/04/0918</span><span class="sxs-lookup"><span data-stu-id="918f8-431">1/01/0918 to 1/04/0918</span></span>|  
|<xref:System.Globalization.PersianCalendar>|<xref:System.Globalization.CalendarWeekRule.FirstFullWeek>|<span data-ttu-id="918f8-432">3/21/0622年至 3/27/0622 變更</span><span class="sxs-lookup"><span data-stu-id="918f8-432">3/21/0622 to 3/27/0622</span></span>|<span data-ttu-id="918f8-433">以 0001 年 1/07/1/01/0001</span><span class="sxs-lookup"><span data-stu-id="918f8-433">1/01/0001 to 1/07/0001</span></span>|  
|<xref:System.Globalization.PersianCalendar>|<xref:System.Globalization.CalendarWeekRule.FirstFourDayWeek>|<span data-ttu-id="918f8-434">3/21/0622年至 3/24/0622 變更</span><span class="sxs-lookup"><span data-stu-id="918f8-434">3/21/0622 to 3/24/0622</span></span>|<span data-ttu-id="918f8-435">以 0001 年 1/04/1/01/0001</span><span class="sxs-lookup"><span data-stu-id="918f8-435">1/01/0001 to 1/04/0001</span></span>|  
|<xref:System.Globalization.TaiwanLunisolarCalendar>|<xref:System.Globalization.CalendarWeekRule.FirstFullWeek>|<span data-ttu-id="918f8-436">2/18/1912 年 2/24/1912</span><span class="sxs-lookup"><span data-stu-id="918f8-436">2/18/1912 to 2/24/1912</span></span>|<span data-ttu-id="918f8-437">以 0001 年 1/07/1/01/0001</span><span class="sxs-lookup"><span data-stu-id="918f8-437">1/01/0001 to 1/07/0001</span></span>|  
|<xref:System.Globalization.TaiwanLunisolarCalendar>|<xref:System.Globalization.CalendarWeekRule.FirstFourDayWeek>|<span data-ttu-id="918f8-438">2/18/1912 年 2/21/1912</span><span class="sxs-lookup"><span data-stu-id="918f8-438">2/18/1912 to 2/21/1912</span></span>|<span data-ttu-id="918f8-439">以 0001 年 1/04/1/01/0001</span><span class="sxs-lookup"><span data-stu-id="918f8-439">1/01/0001 to 1/04/0001</span></span>|  
|<xref:System.Globalization.UmAlQuraCalendar>|<xref:System.Globalization.CalendarWeekRule.FirstFullWeek>|<span data-ttu-id="918f8-440">4/30/1900 到 1900 年 5 月 06 日</span><span class="sxs-lookup"><span data-stu-id="918f8-440">4/30/1900 to 5/06/1900</span></span>|<span data-ttu-id="918f8-441">1/01/1318 到 1/07/1318</span><span class="sxs-lookup"><span data-stu-id="918f8-441">1/01/1318 to 1/07/1318</span></span>|  
|<xref:System.Globalization.UmAlQuraCalendar>|<xref:System.Globalization.CalendarWeekRule.FirstFourDayWeek>|<span data-ttu-id="918f8-442">4/30/1900 到 1900 年 5 月 03</span><span class="sxs-lookup"><span data-stu-id="918f8-442">4/30/1900 to 5/03/1900</span></span>|<span data-ttu-id="918f8-443">1/01/1318 到 1/04/1318</span><span class="sxs-lookup"><span data-stu-id="918f8-443">1/01/1318 to 1/04/1318</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="918f8-444">下列程式碼範例示範如何的結果<xref:System.Globalization.Calendar.GetWeekOfYear%2A>取決於<xref:System.Globalization.DateTimeFormatInfo.FirstDayOfWeek%2A>而<xref:System.Globalization.CalendarWeekRule>使用。</span><span class="sxs-lookup"><span data-stu-id="918f8-444">The following code example shows how the result of <xref:System.Globalization.Calendar.GetWeekOfYear%2A> varies depending on the <xref:System.Globalization.DateTimeFormatInfo.FirstDayOfWeek%2A> and the <xref:System.Globalization.CalendarWeekRule> used.</span></span> <span data-ttu-id="918f8-445">如果指定的日期是最後一天的年份，<xref:System.Globalization.Calendar.GetWeekOfYear%2A>傳回該年份的週數總計。</span><span class="sxs-lookup"><span data-stu-id="918f8-445">If the specified date is the last day of the year, <xref:System.Globalization.Calendar.GetWeekOfYear%2A> returns the total number of weeks in that year.</span></span>  
  
 [!code-cpp[System.Globalization.Calendar.GetWeekOfYear#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar.GetWeekOfYear/CPP/yslin_calendar_getweekofyear.cpp#1)]
 [!code-csharp[System.Globalization.Calendar.GetWeekOfYear#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar.GetWeekOfYear/CS/yslin_calendar_getweekofyear.cs#1)]
 [!code-vb[System.Globalization.Calendar.GetWeekOfYear#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar.GetWeekOfYear/VB/yslin_calendar_getweekofyear.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="918f8-446"><paramref name="time" /> 早於 <see cref="P:System.Globalization.Calendar.MinSupportedDateTime" /> 或晚於 <see cref="P:System.Globalization.Calendar.MaxSupportedDateTime" />。</span><span class="sxs-lookup"><span data-stu-id="918f8-446"><paramref name="time" /> is earlier than <see cref="P:System.Globalization.Calendar.MinSupportedDateTime" /> or later than <see cref="P:System.Globalization.Calendar.MaxSupportedDateTime" />.</span></span>  
  
<span data-ttu-id="918f8-447">-或-</span><span class="sxs-lookup"><span data-stu-id="918f8-447">-or-</span></span> 
 <span data-ttu-id="918f8-448"><paramref name="firstDayOfWeek" /> 不是有效的 <see cref="T:System.DayOfWeek" /> 值。</span><span class="sxs-lookup"><span data-stu-id="918f8-448"><paramref name="firstDayOfWeek" /> is not a valid <see cref="T:System.DayOfWeek" /> value.</span></span>  
  
<span data-ttu-id="918f8-449">-或-</span><span class="sxs-lookup"><span data-stu-id="918f8-449">-or-</span></span> 
 <span data-ttu-id="918f8-450"><paramref name="rule" /> 不是有效的 <see cref="T:System.Globalization.CalendarWeekRule" /> 值。</span><span class="sxs-lookup"><span data-stu-id="918f8-450"><paramref name="rule" /> is not a valid <see cref="T:System.Globalization.CalendarWeekRule" /> value.</span></span></exception>
        <altmember cref="T:System.DateTime" />
        <altmember cref="T:System.Globalization.CalendarWeekRule" />
        <altmember cref="T:System.DayOfWeek" />
        <altmember cref="M:System.Globalization.Calendar.GetEra(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetDayOfYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetDayOfMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetDayOfWeek(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetHour(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMinute(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetSecond(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMilliseconds(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="GetYear">
      <MemberSignature Language="C#" Value="public abstract int GetYear (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetYear(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.GetYear(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetYear (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int GetYear(DateTime time);" />
      <MemberSignature Language="F#" Value="abstract member GetYear : DateTime -&gt; int" Usage="calendar.GetYear time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time"><span data-ttu-id="918f8-451">要讀取的 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="918f8-451">The <see cref="T:System.DateTime" /> to read.</span></span></param>
        <summary><span data-ttu-id="918f8-452">當在衍生類別中覆寫時，傳回指定 <see cref="T:System.DateTime" /> 中的年份。</span><span class="sxs-lookup"><span data-stu-id="918f8-452">When overridden in a derived class, returns the year in the specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="918f8-453">表示 <paramref name="time" /> 中年份的整數。</span><span class="sxs-lookup"><span data-stu-id="918f8-453">An integer that represents the year in <paramref name="time" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="918f8-454">下列程式碼範例將示範成員<xref:System.Globalization.Calendar>類別。</span><span class="sxs-lookup"><span data-stu-id="918f8-454">The following code example demonstrates the members of the <xref:System.Globalization.Calendar> class.</span></span>  
  
 [!code-cpp[System.Globalization.Calendar#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar/CPP/calendar.cpp#1)]
 [!code-csharp[System.Globalization.Calendar#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar/CS/calendar.cs#1)]
 [!code-vb[System.Globalization.Calendar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar/VB/calendar.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTime.Year" />
        <altmember cref="M:System.Globalization.Calendar.GetEra(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
        <altmember cref="M:System.Globalization.Calendar.GetDayOfYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetDayOfMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetDayOfWeek(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetHour(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMinute(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetSecond(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMilliseconds(System.DateTime)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsLeapDay">
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="918f8-455">在衍生類別覆寫時，判斷某個日期是否為閏日。</span><span class="sxs-lookup"><span data-stu-id="918f8-455">When overridden in a derived class, determines whether a date is a leap day.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsLeapDay">
      <MemberSignature Language="C#" Value="public virtual bool IsLeapDay (int year, int month, int day);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsLeapDay(int32 year, int32 month, int32 day) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.IsLeapDay(System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsLeapDay (year As Integer, month As Integer, day As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsLeapDay(int year, int month, int day);" />
      <MemberSignature Language="F#" Value="abstract member IsLeapDay : int * int * int -&gt; bool&#xA;override this.IsLeapDay : int * int * int -&gt; bool" Usage="calendar.IsLeapDay (year, month, day)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="day" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="918f8-456">表示年份的整數。</span><span class="sxs-lookup"><span data-stu-id="918f8-456">An integer that represents the year.</span></span></param>
        <param name="month"><span data-ttu-id="918f8-457">正整數，表示月份。</span><span class="sxs-lookup"><span data-stu-id="918f8-457">A positive integer that represents the month.</span></span></param>
        <param name="day"><span data-ttu-id="918f8-458">表示日期的正整數。</span><span class="sxs-lookup"><span data-stu-id="918f8-458">A positive integer that represents the day.</span></span></param>
        <summary><span data-ttu-id="918f8-459">判斷目前紀元中指定日期是否為閏日。</span><span class="sxs-lookup"><span data-stu-id="918f8-459">Determines whether the specified date in the current era is a leap day.</span></span></summary>
        <returns><span data-ttu-id="918f8-460">如果指定的日期為閏日，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="918f8-460"><see langword="true" /> if the specified day is a leap day; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="918f8-461">若要構成日曆年度和地球繞太陽的實際時間或月亮繞地球的實際時間之間的差異，閏年有從標準的日曆年度不同數目的天數。</span><span class="sxs-lookup"><span data-stu-id="918f8-461">To make up for the difference between the calendar year and the actual time that the earth rotates around the sun or the actual time that the moon rotates around the earth, a leap year has a different number of days from a standard calendar year.</span></span> <span data-ttu-id="918f8-462">每個<xref:System.Globalization.Calendar>實作以不同的方式定義潤年。</span><span class="sxs-lookup"><span data-stu-id="918f8-462">Each <xref:System.Globalization.Calendar> implementation defines leap years differently.</span></span>  
  
 <span data-ttu-id="918f8-463">為閏日是閏年只會發生一天。</span><span class="sxs-lookup"><span data-stu-id="918f8-463">A leap day is a day that occurs only in a leap year.</span></span> <span data-ttu-id="918f8-464">比方說，在西曆的年 2 月 29 日是唯一的閏日。</span><span class="sxs-lookup"><span data-stu-id="918f8-464">For example, in the Gregorian calendar, the 29th day of February is the only leap day.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="918f8-465">下列程式碼範例會比較不同的實作<xref:System.Globalization.Calendar>類別。</span><span class="sxs-lookup"><span data-stu-id="918f8-465">The following code example compares different implementations of the <xref:System.Globalization.Calendar> class.</span></span>  
  
 [!code-cpp[System.Globalization.Calendar_Compare#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar_Compare/CPP/calendar_compare.cpp#1)]
 [!code-csharp[System.Globalization.Calendar_Compare#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar_Compare/CS/calendar_compare.cs#1)]
 [!code-vb[System.Globalization.Calendar_Compare#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar_Compare/VB/calendar_compare.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="918f8-466"><paramref name="year" /> 不在曆法支援的範圍內。</span><span class="sxs-lookup"><span data-stu-id="918f8-466"><paramref name="year" /> is outside the range supported by the calendar.</span></span>  
  
<span data-ttu-id="918f8-467">-或-</span><span class="sxs-lookup"><span data-stu-id="918f8-467">-or-</span></span> 
 <span data-ttu-id="918f8-468"><paramref name="month" /> 不在曆法支援的範圍內。</span><span class="sxs-lookup"><span data-stu-id="918f8-468"><paramref name="month" /> is outside the range supported by the calendar.</span></span>  
  
<span data-ttu-id="918f8-469">-或-</span><span class="sxs-lookup"><span data-stu-id="918f8-469">-or-</span></span> 
 <span data-ttu-id="918f8-470"><paramref name="day" /> 不在曆法支援的範圍內。</span><span class="sxs-lookup"><span data-stu-id="918f8-470"><paramref name="day" /> is outside the range supported by the calendar.</span></span></exception>
        <altmember cref="M:System.Globalization.Calendar.GetMonthsInYear(System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.GetDaysInMonth(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.IsLeapYear(System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.IsLeapMonth(System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="IsLeapDay">
      <MemberSignature Language="C#" Value="public abstract bool IsLeapDay (int year, int month, int day, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsLeapDay(int32 year, int32 month, int32 day, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function IsLeapDay (year As Integer, month As Integer, day As Integer, era As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool IsLeapDay(int year, int month, int day, int era);" />
      <MemberSignature Language="F#" Value="abstract member IsLeapDay : int * int * int * int -&gt; bool" Usage="calendar.IsLeapDay (year, month, day, era)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="day" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="918f8-471">表示年份的整數。</span><span class="sxs-lookup"><span data-stu-id="918f8-471">An integer that represents the year.</span></span></param>
        <param name="month"><span data-ttu-id="918f8-472">正整數，表示月份。</span><span class="sxs-lookup"><span data-stu-id="918f8-472">A positive integer that represents the month.</span></span></param>
        <param name="day"><span data-ttu-id="918f8-473">表示日期的正整數。</span><span class="sxs-lookup"><span data-stu-id="918f8-473">A positive integer that represents the day.</span></span></param>
        <param name="era"><span data-ttu-id="918f8-474">表示紀元的整數。</span><span class="sxs-lookup"><span data-stu-id="918f8-474">An integer that represents the era.</span></span></param>
        <summary><span data-ttu-id="918f8-475">當在衍生類別中覆寫時，判斷指定紀元中的指定日期是否為閏日。</span><span class="sxs-lookup"><span data-stu-id="918f8-475">When overridden in a derived class, determines whether the specified date in the specified era is a leap day.</span></span></summary>
        <returns><span data-ttu-id="918f8-476">如果指定的日期為閏日，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="918f8-476"><see langword="true" /> if the specified day is a leap day; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="918f8-477">若要構成日曆年度和地球繞太陽的實際時間或月亮繞地球的實際時間之間的差異，閏年有從標準的日曆年度不同數目的天數。</span><span class="sxs-lookup"><span data-stu-id="918f8-477">To make up for the difference between the calendar year and the actual time that the earth rotates around the sun or the actual time that the moon rotates around the earth, a leap year has a different number of days from a standard calendar year.</span></span> <span data-ttu-id="918f8-478">每個<xref:System.Globalization.Calendar>實作以不同的方式定義潤年。</span><span class="sxs-lookup"><span data-stu-id="918f8-478">Each <xref:System.Globalization.Calendar> implementation defines leap years differently.</span></span>  
  
 <span data-ttu-id="918f8-479">為閏日是閏年只會發生一天。</span><span class="sxs-lookup"><span data-stu-id="918f8-479">A leap day is a day that occurs only in a leap year.</span></span> <span data-ttu-id="918f8-480">比方說，在西曆的年 2 月 29 日是唯一的閏日。</span><span class="sxs-lookup"><span data-stu-id="918f8-480">For example, in the Gregorian calendar, the 29th day of February is the only leap day.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="918f8-481"><paramref name="year" /> 不在曆法支援的範圍內。</span><span class="sxs-lookup"><span data-stu-id="918f8-481"><paramref name="year" /> is outside the range supported by the calendar.</span></span>  
  
<span data-ttu-id="918f8-482">-或-</span><span class="sxs-lookup"><span data-stu-id="918f8-482">-or-</span></span> 
 <span data-ttu-id="918f8-483"><paramref name="month" /> 不在曆法支援的範圍內。</span><span class="sxs-lookup"><span data-stu-id="918f8-483"><paramref name="month" /> is outside the range supported by the calendar.</span></span>  
  
<span data-ttu-id="918f8-484">-或-</span><span class="sxs-lookup"><span data-stu-id="918f8-484">-or-</span></span> 
 <span data-ttu-id="918f8-485"><paramref name="day" /> 不在曆法支援的範圍內。</span><span class="sxs-lookup"><span data-stu-id="918f8-485"><paramref name="day" /> is outside the range supported by the calendar.</span></span>  
  
<span data-ttu-id="918f8-486">-或-</span><span class="sxs-lookup"><span data-stu-id="918f8-486">-or-</span></span> 
 <span data-ttu-id="918f8-487"><paramref name="era" /> 不在曆法支援的範圍內。</span><span class="sxs-lookup"><span data-stu-id="918f8-487"><paramref name="era" /> is outside the range supported by the calendar.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="918f8-488">在衍生的類別必須支援<see cref="F:System.Globalization.Calendar.CurrentEra" />它會傳遞為<paramref name="era" />參數。</span><span class="sxs-lookup"><span data-stu-id="918f8-488">The derived class must support <see cref="F:System.Globalization.Calendar.CurrentEra" /> when it is passed as the <paramref name="era" /> parameter.</span></span> <span data-ttu-id="918f8-489">其中一種方式來支援<see cref="F:System.Globalization.Calendar.CurrentEra" />取代中儲存的值是<c>紀元 [0]</c>，即為目前紀元的行事曆值。</span><span class="sxs-lookup"><span data-stu-id="918f8-489">One way to support <see cref="F:System.Globalization.Calendar.CurrentEra" /> is by replacing it with the value stored in <c>Eras[0]</c>, which is the value for the current era of the calendar.</span></span></para></block>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="P:System.Globalization.Calendar.Eras" />
        <altmember cref="M:System.Globalization.Calendar.GetMonthsInYear(System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.GetDaysInMonth(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.IsLeapYear(System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.IsLeapMonth(System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsLeapMonth">
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="918f8-490">在衍生類別覆寫時，判斷某個月份是否為閏月。</span><span class="sxs-lookup"><span data-stu-id="918f8-490">When overridden in a derived class, determines whether a month is a leap month.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsLeapMonth">
      <MemberSignature Language="C#" Value="public virtual bool IsLeapMonth (int year, int month);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsLeapMonth(int32 year, int32 month) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.IsLeapMonth(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsLeapMonth (year As Integer, month As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsLeapMonth(int year, int month);" />
      <MemberSignature Language="F#" Value="abstract member IsLeapMonth : int * int -&gt; bool&#xA;override this.IsLeapMonth : int * int -&gt; bool" Usage="calendar.IsLeapMonth (year, month)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="918f8-491">表示年份的整數。</span><span class="sxs-lookup"><span data-stu-id="918f8-491">An integer that represents the year.</span></span></param>
        <param name="month"><span data-ttu-id="918f8-492">正整數，表示月份。</span><span class="sxs-lookup"><span data-stu-id="918f8-492">A positive integer that represents the month.</span></span></param>
        <summary><span data-ttu-id="918f8-493">判斷目前紀元的指定年份中指定的月份是否為閏月。</span><span class="sxs-lookup"><span data-stu-id="918f8-493">Determines whether the specified month in the specified year in the current era is a leap month.</span></span></summary>
        <returns><span data-ttu-id="918f8-494">如果指定的月份是閏月，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="918f8-494"><see langword="true" /> if the specified month is a leap month; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="918f8-495">若要構成日曆年度和地球繞太陽的實際時間或月亮繞地球的實際時間之間的差異，閏年有從標準的日曆年度不同數目的天數。</span><span class="sxs-lookup"><span data-stu-id="918f8-495">To make up for the difference between the calendar year and the actual time that the earth rotates around the sun or the actual time that the moon rotates around the earth, a leap year has a different number of days from a standard calendar year.</span></span> <span data-ttu-id="918f8-496">每個<xref:System.Globalization.Calendar>實作以不同的方式定義潤年。</span><span class="sxs-lookup"><span data-stu-id="918f8-496">Each <xref:System.Globalization.Calendar> implementation defines leap years differently.</span></span>  
  
 <span data-ttu-id="918f8-497">閏月是一整個月，只會發生在為閏年。</span><span class="sxs-lookup"><span data-stu-id="918f8-497">A leap month is an entire month that occurs only in a leap year.</span></span> <span data-ttu-id="918f8-498">例如，在希伯來曆法，Adar Beit 是唯一的閏月。</span><span class="sxs-lookup"><span data-stu-id="918f8-498">For example, in the Hebrew calendar, Adar Beit is the only leap month.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="918f8-499">下列程式碼範例會比較不同的實作<xref:System.Globalization.Calendar>類別。</span><span class="sxs-lookup"><span data-stu-id="918f8-499">The following code example compares different implementations of the <xref:System.Globalization.Calendar> class.</span></span>  
  
 [!code-cpp[System.Globalization.Calendar_Compare#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar_Compare/CPP/calendar_compare.cpp#1)]
 [!code-csharp[System.Globalization.Calendar_Compare#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar_Compare/CS/calendar_compare.cs#1)]
 [!code-vb[System.Globalization.Calendar_Compare#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar_Compare/VB/calendar_compare.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="918f8-500"><paramref name="year" /> 不在曆法支援的範圍內。</span><span class="sxs-lookup"><span data-stu-id="918f8-500"><paramref name="year" /> is outside the range supported by the calendar.</span></span>  
  
<span data-ttu-id="918f8-501">-或-</span><span class="sxs-lookup"><span data-stu-id="918f8-501">-or-</span></span> 
 <span data-ttu-id="918f8-502"><paramref name="month" /> 不在曆法支援的範圍內。</span><span class="sxs-lookup"><span data-stu-id="918f8-502"><paramref name="month" /> is outside the range supported by the calendar.</span></span></exception>
        <altmember cref="M:System.Globalization.Calendar.GetMonthsInYear(System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.IsLeapYear(System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.IsLeapDay(System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="IsLeapMonth">
      <MemberSignature Language="C#" Value="public abstract bool IsLeapMonth (int year, int month, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsLeapMonth(int32 year, int32 month, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function IsLeapMonth (year As Integer, month As Integer, era As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool IsLeapMonth(int year, int month, int era);" />
      <MemberSignature Language="F#" Value="abstract member IsLeapMonth : int * int * int -&gt; bool" Usage="calendar.IsLeapMonth (year, month, era)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="918f8-503">表示年份的整數。</span><span class="sxs-lookup"><span data-stu-id="918f8-503">An integer that represents the year.</span></span></param>
        <param name="month"><span data-ttu-id="918f8-504">正整數，表示月份。</span><span class="sxs-lookup"><span data-stu-id="918f8-504">A positive integer that represents the month.</span></span></param>
        <param name="era"><span data-ttu-id="918f8-505">表示紀元的整數。</span><span class="sxs-lookup"><span data-stu-id="918f8-505">An integer that represents the era.</span></span></param>
        <summary><span data-ttu-id="918f8-506">當在衍生類別中覆寫時，判斷指定紀元的指定年份中指定的月份是否為閏月。</span><span class="sxs-lookup"><span data-stu-id="918f8-506">When overridden in a derived class, determines whether the specified month in the specified year in the specified era is a leap month.</span></span></summary>
        <returns><span data-ttu-id="918f8-507">如果指定的月份是閏月，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="918f8-507"><see langword="true" /> if the specified month is a leap month; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="918f8-508">若要構成日曆年度和地球繞太陽的實際時間或月亮繞地球的實際時間之間的差異，閏年有從標準的日曆年度不同數目的天數。</span><span class="sxs-lookup"><span data-stu-id="918f8-508">To make up for the difference between the calendar year and the actual time that the earth rotates around the sun or the actual time that the moon rotates around the earth, a leap year has a different number of days from a standard calendar year.</span></span> <span data-ttu-id="918f8-509">每個<xref:System.Globalization.Calendar>實作以不同的方式定義潤年。</span><span class="sxs-lookup"><span data-stu-id="918f8-509">Each <xref:System.Globalization.Calendar> implementation defines leap years differently.</span></span>  
  
 <span data-ttu-id="918f8-510">閏月是一整個月，只會發生在為閏年。</span><span class="sxs-lookup"><span data-stu-id="918f8-510">A leap month is an entire month that occurs only in a leap year.</span></span> <span data-ttu-id="918f8-511">例如，在希伯來曆法，Adar Beit 是唯一的閏月。</span><span class="sxs-lookup"><span data-stu-id="918f8-511">For example, in the Hebrew calendar, Adar Beit is the only leap month.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="918f8-512"><paramref name="year" /> 不在曆法支援的範圍內。</span><span class="sxs-lookup"><span data-stu-id="918f8-512"><paramref name="year" /> is outside the range supported by the calendar.</span></span>  
  
<span data-ttu-id="918f8-513">-或-</span><span class="sxs-lookup"><span data-stu-id="918f8-513">-or-</span></span> 
 <span data-ttu-id="918f8-514"><paramref name="month" /> 不在曆法支援的範圍內。</span><span class="sxs-lookup"><span data-stu-id="918f8-514"><paramref name="month" /> is outside the range supported by the calendar.</span></span>  
  
<span data-ttu-id="918f8-515">-或-</span><span class="sxs-lookup"><span data-stu-id="918f8-515">-or-</span></span> 
 <span data-ttu-id="918f8-516"><paramref name="era" /> 不在曆法支援的範圍內。</span><span class="sxs-lookup"><span data-stu-id="918f8-516"><paramref name="era" /> is outside the range supported by the calendar.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="918f8-517">在衍生的類別必須支援<see cref="F:System.Globalization.Calendar.CurrentEra" />它會傳遞為<paramref name="era" />參數。</span><span class="sxs-lookup"><span data-stu-id="918f8-517">The derived class must support <see cref="F:System.Globalization.Calendar.CurrentEra" /> when it is passed as the <paramref name="era" /> parameter.</span></span> <span data-ttu-id="918f8-518">其中一種方式來支援<see cref="F:System.Globalization.Calendar.CurrentEra" />取代中儲存的值是<c>紀元 [0]</c>，即為目前紀元的行事曆值。</span><span class="sxs-lookup"><span data-stu-id="918f8-518">One way to support <see cref="F:System.Globalization.Calendar.CurrentEra" /> is by replacing it with the value stored in <c>Eras[0]</c>, which is the value for the current era of the calendar.</span></span></para></block>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="P:System.Globalization.Calendar.Eras" />
        <altmember cref="M:System.Globalization.Calendar.GetMonthsInYear(System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.IsLeapYear(System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.IsLeapDay(System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsLeapYear">
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="918f8-519">在衍生類別覆寫時，判斷某個年份是否為閏年。</span><span class="sxs-lookup"><span data-stu-id="918f8-519">When overridden in a derived class, determines whether a year is a leap year.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsLeapYear">
      <MemberSignature Language="C#" Value="public virtual bool IsLeapYear (int year);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsLeapYear(int32 year) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.IsLeapYear(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsLeapYear (year As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsLeapYear(int year);" />
      <MemberSignature Language="F#" Value="abstract member IsLeapYear : int -&gt; bool&#xA;override this.IsLeapYear : int -&gt; bool" Usage="calendar.IsLeapYear year" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="918f8-520">表示年份的整數。</span><span class="sxs-lookup"><span data-stu-id="918f8-520">An integer that represents the year.</span></span></param>
        <summary><span data-ttu-id="918f8-521">判斷目前紀元中指定的年份是否為閏年。</span><span class="sxs-lookup"><span data-stu-id="918f8-521">Determines whether the specified year in the current era is a leap year.</span></span></summary>
        <returns><span data-ttu-id="918f8-522">如果指定的年份為閏年，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="918f8-522"><see langword="true" /> if the specified year is a leap year; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="918f8-523">若要構成日曆年度和地球繞太陽的實際時間或月亮繞地球的實際時間之間的差異，閏年有從標準的日曆年度不同數目的天數。</span><span class="sxs-lookup"><span data-stu-id="918f8-523">To make up for the difference between the calendar year and the actual time that the earth rotates around the sun or the actual time that the moon rotates around the earth, a leap year has a different number of days from a standard calendar year.</span></span> <span data-ttu-id="918f8-524">每個<xref:System.Globalization.Calendar>實作以不同的方式定義潤年。</span><span class="sxs-lookup"><span data-stu-id="918f8-524">Each <xref:System.Globalization.Calendar> implementation defines leap years differently.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="918f8-525">下列程式碼範例會比較不同的實作<xref:System.Globalization.Calendar>類別。</span><span class="sxs-lookup"><span data-stu-id="918f8-525">The following code example compares different implementations of the <xref:System.Globalization.Calendar> class.</span></span>  
  
 [!code-cpp[System.Globalization.Calendar_Compare#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar_Compare/CPP/calendar_compare.cpp#1)]
 [!code-csharp[System.Globalization.Calendar_Compare#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar_Compare/CS/calendar_compare.cs#1)]
 [!code-vb[System.Globalization.Calendar_Compare#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar_Compare/VB/calendar_compare.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="918f8-526"><paramref name="year" /> 不在曆法支援的範圍內。</span><span class="sxs-lookup"><span data-stu-id="918f8-526"><paramref name="year" /> is outside the range supported by the calendar.</span></span></exception>
        <altmember cref="M:System.Globalization.Calendar.IsLeapMonth(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.IsLeapDay(System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="IsLeapYear">
      <MemberSignature Language="C#" Value="public abstract bool IsLeapYear (int year, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsLeapYear(int32 year, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.IsLeapYear(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function IsLeapYear (year As Integer, era As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool IsLeapYear(int year, int era);" />
      <MemberSignature Language="F#" Value="abstract member IsLeapYear : int * int -&gt; bool" Usage="calendar.IsLeapYear (year, era)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="918f8-527">表示年份的整數。</span><span class="sxs-lookup"><span data-stu-id="918f8-527">An integer that represents the year.</span></span></param>
        <param name="era"><span data-ttu-id="918f8-528">表示紀元的整數。</span><span class="sxs-lookup"><span data-stu-id="918f8-528">An integer that represents the era.</span></span></param>
        <summary><span data-ttu-id="918f8-529">當在衍生類別中覆寫時，判斷指定紀元中指定的年份是否為閏年。</span><span class="sxs-lookup"><span data-stu-id="918f8-529">When overridden in a derived class, determines whether the specified year in the specified era is a leap year.</span></span></summary>
        <returns><span data-ttu-id="918f8-530">如果指定的年份為閏年，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="918f8-530"><see langword="true" /> if the specified year is a leap year; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="918f8-531">若要構成日曆年度和地球繞太陽的實際時間或月亮繞地球的實際時間之間的差異，閏年有從標準的日曆年度不同數目的天數。</span><span class="sxs-lookup"><span data-stu-id="918f8-531">To make up for the difference between the calendar year and the actual time that the earth rotates around the sun or the actual time that the moon rotates around the earth, a leap year has a different number of days from a standard calendar year.</span></span> <span data-ttu-id="918f8-532">每個<xref:System.Globalization.Calendar>實作以不同的方式定義潤年。</span><span class="sxs-lookup"><span data-stu-id="918f8-532">Each <xref:System.Globalization.Calendar> implementation defines leap years differently.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="918f8-533"><paramref name="year" /> 不在曆法支援的範圍內。</span><span class="sxs-lookup"><span data-stu-id="918f8-533"><paramref name="year" /> is outside the range supported by the calendar.</span></span>  
  
<span data-ttu-id="918f8-534">-或-</span><span class="sxs-lookup"><span data-stu-id="918f8-534">-or-</span></span> 
 <span data-ttu-id="918f8-535"><paramref name="era" /> 不在曆法支援的範圍內。</span><span class="sxs-lookup"><span data-stu-id="918f8-535"><paramref name="era" /> is outside the range supported by the calendar.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="918f8-536">在衍生的類別必須支援<see cref="F:System.Globalization.Calendar.CurrentEra" />它會傳遞為<paramref name="era" />參數。</span><span class="sxs-lookup"><span data-stu-id="918f8-536">The derived class must support <see cref="F:System.Globalization.Calendar.CurrentEra" /> when it is passed as the <paramref name="era" /> parameter.</span></span> <span data-ttu-id="918f8-537">其中一種方式來支援<see cref="F:System.Globalization.Calendar.CurrentEra" />取代中儲存的值是<c>紀元 [0]</c>，即為目前紀元的行事曆值。</span><span class="sxs-lookup"><span data-stu-id="918f8-537">One way to support <see cref="F:System.Globalization.Calendar.CurrentEra" /> is by replacing it with the value stored in <c>Eras[0]</c>, which is the value for the current era of the calendar.</span></span></para></block>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="P:System.Globalization.Calendar.Eras" />
        <altmember cref="M:System.Globalization.Calendar.IsLeapMonth(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.IsLeapDay(System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.Calendar.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Globalization.Calendar.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="918f8-538">取得值，指出 <see cref="T:System.Globalization.Calendar" /> 物件是否為唯讀。</span><span class="sxs-lookup"><span data-stu-id="918f8-538">Gets a value indicating whether this <see cref="T:System.Globalization.Calendar" /> object is read-only.</span></span></summary>
        <value><span data-ttu-id="918f8-539">如果 <see cref="T:System.Globalization.Calendar" /> 物件是唯讀的，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="918f8-539"><see langword="true" /> if this <see cref="T:System.Globalization.Calendar" /> object is read-only; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxSupportedDateTime">
      <MemberSignature Language="C#" Value="public virtual DateTime MaxSupportedDateTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime MaxSupportedDateTime" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.Calendar.MaxSupportedDateTime" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property MaxSupportedDateTime As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property DateTime MaxSupportedDateTime { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.MaxSupportedDateTime : DateTime" Usage="System.Globalization.Calendar.MaxSupportedDateTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="918f8-540">取得受 <see cref="T:System.Globalization.Calendar" /> 物件所支援的最晚日期和時間。</span><span class="sxs-lookup"><span data-stu-id="918f8-540">Gets the latest date and time supported by this <see cref="T:System.Globalization.Calendar" /> object.</span></span></summary>
        <value><span data-ttu-id="918f8-541">受此曆法所支援的最晚日期和時間。</span><span class="sxs-lookup"><span data-stu-id="918f8-541">The latest date and time supported by this calendar.</span></span> <span data-ttu-id="918f8-542">預設為 <see cref="F:System.DateTime.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="918f8-542">The default is <see cref="F:System.DateTime.MaxValue" />.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Globalization.Calendar.MinSupportedDateTime" />
      </Docs>
    </Member>
    <Member MemberName="MinSupportedDateTime">
      <MemberSignature Language="C#" Value="public virtual DateTime MinSupportedDateTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime MinSupportedDateTime" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.Calendar.MinSupportedDateTime" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property MinSupportedDateTime As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property DateTime MinSupportedDateTime { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.MinSupportedDateTime : DateTime" Usage="System.Globalization.Calendar.MinSupportedDateTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="918f8-543">取得受 <see cref="T:System.Globalization.Calendar" /> 物件所支援的最早日期和時間。</span><span class="sxs-lookup"><span data-stu-id="918f8-543">Gets the earliest date and time supported by this <see cref="T:System.Globalization.Calendar" /> object.</span></span></summary>
        <value><span data-ttu-id="918f8-544">受此曆法所支援的最早日期和時間。</span><span class="sxs-lookup"><span data-stu-id="918f8-544">The earliest date and time supported by this calendar.</span></span> <span data-ttu-id="918f8-545">預設值為 <see cref="F:System.DateTime.MinValue" />。</span><span class="sxs-lookup"><span data-stu-id="918f8-545">The default is <see cref="F:System.DateTime.MinValue" />.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Globalization.Calendar.MaxSupportedDateTime" />
      </Docs>
    </Member>
    <Member MemberName="ReadOnly">
      <MemberSignature Language="C#" Value="public static System.Globalization.Calendar ReadOnly (System.Globalization.Calendar calendar);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Globalization.Calendar ReadOnly(class System.Globalization.Calendar calendar) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.ReadOnly(System.Globalization.Calendar)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::Calendar ^ ReadOnly(System::Globalization::Calendar ^ calendar);" />
      <MemberSignature Language="F#" Value="static member ReadOnly : System.Globalization.Calendar -&gt; System.Globalization.Calendar" Usage="System.Globalization.Calendar.ReadOnly calendar" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.Calendar</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="calendar" Type="System.Globalization.Calendar" />
      </Parameters>
      <Docs>
        <param name="calendar"><span data-ttu-id="918f8-546"><see cref="T:System.Globalization.Calendar" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="918f8-546">A <see cref="T:System.Globalization.Calendar" /> object.</span></span></param>
        <summary><span data-ttu-id="918f8-547">傳回指定之 <see cref="T:System.Globalization.Calendar" /> 物件的唯讀版本。</span><span class="sxs-lookup"><span data-stu-id="918f8-547">Returns a read-only version of the specified <see cref="T:System.Globalization.Calendar" /> object.</span></span></summary>
        <returns><span data-ttu-id="918f8-548">如果 <paramref name="calendar" /> 是唯讀的，則為 <paramref name="calendar" /> 參數所指定的 <see cref="T:System.Globalization.Calendar" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="918f8-548">The <see cref="T:System.Globalization.Calendar" /> object specified by the <paramref name="calendar" /> parameter, if <paramref name="calendar" /> is read-only.</span></span>  
  
<span data-ttu-id="918f8-549">-或-</span><span class="sxs-lookup"><span data-stu-id="918f8-549">-or-</span></span> 
<span data-ttu-id="918f8-550">如果 <paramref name="calendar" /> 不是唯讀的，則為 <paramref name="calendar" /> 所指定之 <see cref="T:System.Globalization.Calendar" /> 物件的唯讀成員複製品。</span><span class="sxs-lookup"><span data-stu-id="918f8-550">A read-only memberwise clone of the <see cref="T:System.Globalization.Calendar" /> object specified by <paramref name="calendar" />, if <paramref name="calendar" /> is not read-only.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="918f8-551"><paramref name="calendar" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="918f8-551"><paramref name="calendar" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Object.MemberwiseClone" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ToDateTime">
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="918f8-552">在衍生類別中覆寫時，傳回設定為指定之日期和時間的 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="918f8-552">When overridden in a derived class, returns a <see cref="T:System.DateTime" /> that is set to the specified date and time.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToDateTime">
      <MemberSignature Language="C#" Value="public virtual DateTime ToDateTime (int year, int month, int day, int hour, int minute, int second, int millisecond);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.DateTime ToDateTime(int32 year, int32 month, int32 day, int32 hour, int32 minute, int32 second, int32 millisecond) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ToDateTime (year As Integer, month As Integer, day As Integer, hour As Integer, minute As Integer, second As Integer, millisecond As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual DateTime ToDateTime(int year, int month, int day, int hour, int minute, int second, int millisecond);" />
      <MemberSignature Language="F#" Value="abstract member ToDateTime : int * int * int * int * int * int * int -&gt; DateTime&#xA;override this.ToDateTime : int * int * int * int * int * int * int -&gt; DateTime" Usage="calendar.ToDateTime (year, month, day, hour, minute, second, millisecond)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="day" Type="System.Int32" />
        <Parameter Name="hour" Type="System.Int32" />
        <Parameter Name="minute" Type="System.Int32" />
        <Parameter Name="second" Type="System.Int32" />
        <Parameter Name="millisecond" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="918f8-553">表示年份的整數。</span><span class="sxs-lookup"><span data-stu-id="918f8-553">An integer that represents the year.</span></span></param>
        <param name="month"><span data-ttu-id="918f8-554">正整數，表示月份。</span><span class="sxs-lookup"><span data-stu-id="918f8-554">A positive integer that represents the month.</span></span></param>
        <param name="day"><span data-ttu-id="918f8-555">表示日期的正整數。</span><span class="sxs-lookup"><span data-stu-id="918f8-555">A positive integer that represents the day.</span></span></param>
        <param name="hour"><span data-ttu-id="918f8-556">從 0 到 23 的整數，表示小時。</span><span class="sxs-lookup"><span data-stu-id="918f8-556">An integer from 0 to 23 that represents the hour.</span></span></param>
        <param name="minute"><span data-ttu-id="918f8-557">從 0 到 59 的整數，表示分鐘。</span><span class="sxs-lookup"><span data-stu-id="918f8-557">An integer from 0 to 59 that represents the minute.</span></span></param>
        <param name="second"><span data-ttu-id="918f8-558">從 0 到 59 的整數，表示秒鐘。</span><span class="sxs-lookup"><span data-stu-id="918f8-558">An integer from 0 to 59 that represents the second.</span></span></param>
        <param name="millisecond"><span data-ttu-id="918f8-559">從 0 到 999 的整數，表示毫秒。</span><span class="sxs-lookup"><span data-stu-id="918f8-559">An integer from 0 to 999 that represents the millisecond.</span></span></param>
        <summary><span data-ttu-id="918f8-560">傳回設定為目前紀元中指定日期和時間的 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="918f8-560">Returns a <see cref="T:System.DateTime" /> that is set to the specified date and time in the current era.</span></span></summary>
        <returns><span data-ttu-id="918f8-561"><see cref="T:System.DateTime" />，設定為目前紀元中指定的日期和時間。</span><span class="sxs-lookup"><span data-stu-id="918f8-561">The <see cref="T:System.DateTime" /> that is set to the specified date and time in the current era.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="918f8-562"><paramref name="year" /> 不在曆法支援的範圍內。</span><span class="sxs-lookup"><span data-stu-id="918f8-562"><paramref name="year" /> is outside the range supported by the calendar.</span></span>  
  
<span data-ttu-id="918f8-563">-或-</span><span class="sxs-lookup"><span data-stu-id="918f8-563">-or-</span></span> 
 <span data-ttu-id="918f8-564"><paramref name="month" /> 不在曆法支援的範圍內。</span><span class="sxs-lookup"><span data-stu-id="918f8-564"><paramref name="month" /> is outside the range supported by the calendar.</span></span>  
  
<span data-ttu-id="918f8-565">-或-</span><span class="sxs-lookup"><span data-stu-id="918f8-565">-or-</span></span> 
 <span data-ttu-id="918f8-566"><paramref name="day" /> 不在曆法支援的範圍內。</span><span class="sxs-lookup"><span data-stu-id="918f8-566"><paramref name="day" /> is outside the range supported by the calendar.</span></span>  
  
<span data-ttu-id="918f8-567">-或-</span><span class="sxs-lookup"><span data-stu-id="918f8-567">-or-</span></span> 
 <span data-ttu-id="918f8-568"><paramref name="hour" /> 小於 0 或大於 23。</span><span class="sxs-lookup"><span data-stu-id="918f8-568"><paramref name="hour" /> is less than zero or greater than 23.</span></span>  
  
<span data-ttu-id="918f8-569">-或-</span><span class="sxs-lookup"><span data-stu-id="918f8-569">-or-</span></span> 
 <span data-ttu-id="918f8-570"><paramref name="minute" /> 小於 0 或大於 59。</span><span class="sxs-lookup"><span data-stu-id="918f8-570"><paramref name="minute" /> is less than zero or greater than 59.</span></span>  
  
<span data-ttu-id="918f8-571">-或-</span><span class="sxs-lookup"><span data-stu-id="918f8-571">-or-</span></span> 
 <span data-ttu-id="918f8-572"><paramref name="second" /> 小於 0 或大於 59。</span><span class="sxs-lookup"><span data-stu-id="918f8-572"><paramref name="second" /> is less than zero or greater than 59.</span></span>  
  
<span data-ttu-id="918f8-573">-或-</span><span class="sxs-lookup"><span data-stu-id="918f8-573">-or-</span></span> 
 <span data-ttu-id="918f8-574"><paramref name="millisecond" /> 小於 0 或大於 999。</span><span class="sxs-lookup"><span data-stu-id="918f8-574"><paramref name="millisecond" /> is less than zero or greater than 999.</span></span></exception>
        <altmember cref="T:System.DateTime" />
        <altmember cref="M:System.Globalization.Calendar.GetMonthsInYear(System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.GetDaysInMonth(System.Int32,System.Int32)" />
        <related type="ExternalDocumentation" href="https://code.msdn.microsoft.com/NET-Framework-4-Calendar-3360a84a"><span data-ttu-id="918f8-575">範例：行事曆週範圍公用程式</span><span class="sxs-lookup"><span data-stu-id="918f8-575">Sample: Calendar Week Range Utility</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ToDateTime">
      <MemberSignature Language="C#" Value="public abstract DateTime ToDateTime (int year, int month, int day, int hour, int minute, int second, int millisecond, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.DateTime ToDateTime(int32 year, int32 month, int32 day, int32 hour, int32 minute, int32 second, int32 millisecond, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function ToDateTime (year As Integer, month As Integer, day As Integer, hour As Integer, minute As Integer, second As Integer, millisecond As Integer, era As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract DateTime ToDateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, int era);" />
      <MemberSignature Language="F#" Value="abstract member ToDateTime : int * int * int * int * int * int * int * int -&gt; DateTime" Usage="calendar.ToDateTime (year, month, day, hour, minute, second, millisecond, era)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="day" Type="System.Int32" />
        <Parameter Name="hour" Type="System.Int32" />
        <Parameter Name="minute" Type="System.Int32" />
        <Parameter Name="second" Type="System.Int32" />
        <Parameter Name="millisecond" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="918f8-576">表示年份的整數。</span><span class="sxs-lookup"><span data-stu-id="918f8-576">An integer that represents the year.</span></span></param>
        <param name="month"><span data-ttu-id="918f8-577">正整數，表示月份。</span><span class="sxs-lookup"><span data-stu-id="918f8-577">A positive integer that represents the month.</span></span></param>
        <param name="day"><span data-ttu-id="918f8-578">表示日期的正整數。</span><span class="sxs-lookup"><span data-stu-id="918f8-578">A positive integer that represents the day.</span></span></param>
        <param name="hour"><span data-ttu-id="918f8-579">從 0 到 23 的整數，表示小時。</span><span class="sxs-lookup"><span data-stu-id="918f8-579">An integer from 0 to 23 that represents the hour.</span></span></param>
        <param name="minute"><span data-ttu-id="918f8-580">從 0 到 59 的整數，表示分鐘。</span><span class="sxs-lookup"><span data-stu-id="918f8-580">An integer from 0 to 59 that represents the minute.</span></span></param>
        <param name="second"><span data-ttu-id="918f8-581">從 0 到 59 的整數，表示秒鐘。</span><span class="sxs-lookup"><span data-stu-id="918f8-581">An integer from 0 to 59 that represents the second.</span></span></param>
        <param name="millisecond"><span data-ttu-id="918f8-582">從 0 到 999 的整數，表示毫秒。</span><span class="sxs-lookup"><span data-stu-id="918f8-582">An integer from 0 to 999 that represents the millisecond.</span></span></param>
        <param name="era"><span data-ttu-id="918f8-583">表示紀元的整數。</span><span class="sxs-lookup"><span data-stu-id="918f8-583">An integer that represents the era.</span></span></param>
        <summary><span data-ttu-id="918f8-584">當在衍生類別中覆寫時，傳回設定為指定紀元中指定的日期和時間的 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="918f8-584">When overridden in a derived class, returns a <see cref="T:System.DateTime" /> that is set to the specified date and time in the specified era.</span></span></summary>
        <returns><span data-ttu-id="918f8-585"><see cref="T:System.DateTime" />，設定為目前紀元中指定的日期和時間。</span><span class="sxs-lookup"><span data-stu-id="918f8-585">The <see cref="T:System.DateTime" /> that is set to the specified date and time in the current era.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="918f8-586"><xref:System.Globalization.Calendar.ToDateTime%2A>方法很有用，因為它可以將目前曆法中的任何日期轉換成的西曆日期。</span><span class="sxs-lookup"><span data-stu-id="918f8-586">The <xref:System.Globalization.Calendar.ToDateTime%2A> method is useful because it can convert any date in the current calendar to a Gregorian calendar date.</span></span> <span data-ttu-id="918f8-587">為西曆日期，之後可用，比方說，來比較不同的行事曆中的日期，或在特定的行事曆中建立相等的日期。</span><span class="sxs-lookup"><span data-stu-id="918f8-587">The Gregorian date can subsequently be used, for example, to compare dates in different calendars or create an equivalent date in a particular calendar.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="918f8-588"><paramref name="year" /> 不在曆法支援的範圍內。</span><span class="sxs-lookup"><span data-stu-id="918f8-588"><paramref name="year" /> is outside the range supported by the calendar.</span></span>  
  
<span data-ttu-id="918f8-589">-或-</span><span class="sxs-lookup"><span data-stu-id="918f8-589">-or-</span></span> 
 <span data-ttu-id="918f8-590"><paramref name="month" /> 不在曆法支援的範圍內。</span><span class="sxs-lookup"><span data-stu-id="918f8-590"><paramref name="month" /> is outside the range supported by the calendar.</span></span>  
  
<span data-ttu-id="918f8-591">-或-</span><span class="sxs-lookup"><span data-stu-id="918f8-591">-or-</span></span> 
 <span data-ttu-id="918f8-592"><paramref name="day" /> 不在曆法支援的範圍內。</span><span class="sxs-lookup"><span data-stu-id="918f8-592"><paramref name="day" /> is outside the range supported by the calendar.</span></span>  
  
<span data-ttu-id="918f8-593">-或-</span><span class="sxs-lookup"><span data-stu-id="918f8-593">-or-</span></span> 
 <span data-ttu-id="918f8-594"><paramref name="hour" /> 小於 0 或大於 23。</span><span class="sxs-lookup"><span data-stu-id="918f8-594"><paramref name="hour" /> is less than zero or greater than 23.</span></span>  
  
<span data-ttu-id="918f8-595">-或-</span><span class="sxs-lookup"><span data-stu-id="918f8-595">-or-</span></span> 
 <span data-ttu-id="918f8-596"><paramref name="minute" /> 小於 0 或大於 59。</span><span class="sxs-lookup"><span data-stu-id="918f8-596"><paramref name="minute" /> is less than zero or greater than 59.</span></span>  
  
<span data-ttu-id="918f8-597">-或-</span><span class="sxs-lookup"><span data-stu-id="918f8-597">-or-</span></span> 
 <span data-ttu-id="918f8-598"><paramref name="second" /> 小於 0 或大於 59。</span><span class="sxs-lookup"><span data-stu-id="918f8-598"><paramref name="second" /> is less than zero or greater than 59.</span></span>  
  
<span data-ttu-id="918f8-599">-或-</span><span class="sxs-lookup"><span data-stu-id="918f8-599">-or-</span></span> 
 <span data-ttu-id="918f8-600"><paramref name="millisecond" /> 小於 0 或大於 999。</span><span class="sxs-lookup"><span data-stu-id="918f8-600"><paramref name="millisecond" /> is less than zero or greater than 999.</span></span>  
  
<span data-ttu-id="918f8-601">-或-</span><span class="sxs-lookup"><span data-stu-id="918f8-601">-or-</span></span> 
 <span data-ttu-id="918f8-602"><paramref name="era" /> 不在曆法支援的範圍內。</span><span class="sxs-lookup"><span data-stu-id="918f8-602"><paramref name="era" /> is outside the range supported by the calendar.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="918f8-603">在衍生的類別必須支援<see cref="F:System.Globalization.Calendar.CurrentEra" />它會傳遞為<paramref name="era" />參數。</span><span class="sxs-lookup"><span data-stu-id="918f8-603">The derived class must support <see cref="F:System.Globalization.Calendar.CurrentEra" /> when it is passed as the <paramref name="era" /> parameter.</span></span> <span data-ttu-id="918f8-604">其中一種方式來支援<see cref="F:System.Globalization.Calendar.CurrentEra" />取代中的第一個項目儲存的值是<see cref="P:System.Globalization.Calendar.Eras" />屬性陣列，是在目前紀元的行事曆的值。</span><span class="sxs-lookup"><span data-stu-id="918f8-604">One way to support <see cref="F:System.Globalization.Calendar.CurrentEra" /> is by replacing it with the value stored in the first element of the <see cref="P:System.Globalization.Calendar.Eras" /> property array, which is the value for the current era of the calendar.</span></span></para></block>
        <altmember cref="T:System.DateTime" />
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="P:System.Globalization.Calendar.Eras" />
        <altmember cref="M:System.Globalization.Calendar.GetMonthsInYear(System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.GetDaysInMonth(System.Int32,System.Int32)" />
        <related type="ExternalDocumentation" href="https://code.msdn.microsoft.com/NET-Framework-4-Calendar-3360a84a"><span data-ttu-id="918f8-605">範例：行事曆週範圍公用程式</span><span class="sxs-lookup"><span data-stu-id="918f8-605">Sample: Calendar Week Range Utility</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ToFourDigitYear">
      <MemberSignature Language="C#" Value="public virtual int ToFourDigitYear (int year);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 ToFourDigitYear(int32 year) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.Calendar.ToFourDigitYear(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ToFourDigitYear (year As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int ToFourDigitYear(int year);" />
      <MemberSignature Language="F#" Value="abstract member ToFourDigitYear : int -&gt; int&#xA;override this.ToFourDigitYear : int -&gt; int" Usage="calendar.ToFourDigitYear year" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="918f8-606">兩位數或四位數整數，代表要轉換的年份。</span><span class="sxs-lookup"><span data-stu-id="918f8-606">A two-digit or four-digit integer that represents the year to convert.</span></span></param>
        <summary><span data-ttu-id="918f8-607">將指定的年份轉換為 4 位數年份，方法是使用 <see cref="P:System.Globalization.Calendar.TwoDigitYearMax" /> 屬性以判斷適當的世紀。</span><span class="sxs-lookup"><span data-stu-id="918f8-607">Converts the specified year to a four-digit year by using the <see cref="P:System.Globalization.Calendar.TwoDigitYearMax" /> property to determine the appropriate century.</span></span></summary>
        <returns><span data-ttu-id="918f8-608">整數，包含 <paramref name="year" /> 的四位數表示。</span><span class="sxs-lookup"><span data-stu-id="918f8-608">An integer that contains the four-digit representation of <paramref name="year" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="918f8-609"><xref:System.Globalization.Calendar.TwoDigitYearMax%2A> 是由兩位數年份的 100 年範圍中的最後一年。</span><span class="sxs-lookup"><span data-stu-id="918f8-609"><xref:System.Globalization.Calendar.TwoDigitYearMax%2A> is the last year in the 100-year range that can be represented by a two-digit year.</span></span> <span data-ttu-id="918f8-610">世紀取決於尋找兩位數的唯一相符項目`year`該 100 年範圍內。</span><span class="sxs-lookup"><span data-stu-id="918f8-610">The century is determined by finding the sole occurrence of the two-digit `year` within that 100-year range.</span></span> <span data-ttu-id="918f8-611">例如，如果<xref:System.Globalization.Calendar.TwoDigitYearMax%2A>設為 2029，100 年範圍為從 1930年 2029年。</span><span class="sxs-lookup"><span data-stu-id="918f8-611">For example, if <xref:System.Globalization.Calendar.TwoDigitYearMax%2A> is set to 2029, the 100-year range is from 1930 to 2029.</span></span> <span data-ttu-id="918f8-612">因此，30 的 2 位數值會解譯為 1930，而 2 位數為 29 值解譯為 2029年。</span><span class="sxs-lookup"><span data-stu-id="918f8-612">Therefore, a 2-digit value of 30 is interpreted as 1930, while a 2-digit value of 29 is interpreted as 2029.</span></span>  
  
 <span data-ttu-id="918f8-613">如果`year`大於或等於 100，值`year`會原封不動地傳回。</span><span class="sxs-lookup"><span data-stu-id="918f8-613">If `year` is greater than or equal to 100, the value of `year` is returned unchanged.</span></span>  
  
 <span data-ttu-id="918f8-614"><xref:System.Globalization.Calendar.ToFourDigitYear%2A> 支援的兩位數年份或四位數年份。</span><span class="sxs-lookup"><span data-stu-id="918f8-614"><xref:System.Globalization.Calendar.ToFourDigitYear%2A> supports either a two-digit year or a four-digit year.</span></span> <span data-ttu-id="918f8-615">傳遞的兩位數年份值 (小於 100) 會導致方法將值轉換為四位數字值，根據<xref:System.Globalization.Calendar.TwoDigitYearMax%2A>值，表示適當的世紀。</span><span class="sxs-lookup"><span data-stu-id="918f8-615">Passing a two-digit year value (less than 100) causes the method to convert the value to a four-digit value according to the <xref:System.Globalization.Calendar.TwoDigitYearMax%2A> value representing the appropriate century.</span></span> <span data-ttu-id="918f8-616">如果應用程式提供支援的行事曆範圍內的四位數年份值<xref:System.Globalization.Calendar.ToFourDigitYear%2A>，此方法會傳回實際的輸入的值。</span><span class="sxs-lookup"><span data-stu-id="918f8-616">If the application supplies a four-digit year value that is within the supported calendar range to <xref:System.Globalization.Calendar.ToFourDigitYear%2A>, the method returns the actual input value.</span></span> <span data-ttu-id="918f8-617">應用程式提供四位數字值，超出支援的行事曆的範圍，則會提供為負數值，此方法會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="918f8-617">If the application supplies a four-digit value that is outside the supported calendar range, or if it supplies a negative value, the method throws an exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="918f8-618"><paramref name="year" /> 不在曆法支援的範圍內。</span><span class="sxs-lookup"><span data-stu-id="918f8-618"><paramref name="year" /> is outside the range supported by the calendar.</span></span></exception>
        <altmember cref="P:System.Globalization.Calendar.TwoDigitYearMax" />
      </Docs>
    </Member>
    <Member MemberName="TwoDigitYearMax">
      <MemberSignature Language="C#" Value="public virtual int TwoDigitYearMax { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TwoDigitYearMax" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.Calendar.TwoDigitYearMax" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property TwoDigitYearMax As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int TwoDigitYearMax { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.TwoDigitYearMax : int with get, set" Usage="System.Globalization.Calendar.TwoDigitYearMax" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="918f8-619">取得或設定以二位數年份表示時，該 100 年範圍的最後一年。</span><span class="sxs-lookup"><span data-stu-id="918f8-619">Gets or sets the last year of a 100-year range that can be represented by a 2-digit year.</span></span></summary>
        <value><span data-ttu-id="918f8-620">以二位數年份表示時，該 100 年範圍的最後一年。</span><span class="sxs-lookup"><span data-stu-id="918f8-620">The last year of a 100-year range that can be represented by a 2-digit year.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="918f8-621">這個屬性允許的 2 位數年份若要正確轉譯成 4 位數年份。</span><span class="sxs-lookup"><span data-stu-id="918f8-621">This property allows a 2-digit year to be properly translated to a 4-digit year.</span></span> <span data-ttu-id="918f8-622">比方說，如果這個屬性設定為 2029年，100 年範圍是從 1930年 2029年。</span><span class="sxs-lookup"><span data-stu-id="918f8-622">For example, if this property is set to 2029, the 100-year range is from 1930 to 2029.</span></span> <span data-ttu-id="918f8-623">因此，30 的 2 位數值會解譯為 1930，而 2 位數為 29 值解譯為 2029年。</span><span class="sxs-lookup"><span data-stu-id="918f8-623">Therefore, a 2-digit value of 30 is interpreted as 1930, while a 2-digit value of 29 is interpreted as 2029.</span></span>  
  
 <span data-ttu-id="918f8-624">這個屬性的初始值被衍生自 [控制台] 的 [地區及語言選項] 部分中的設定。</span><span class="sxs-lookup"><span data-stu-id="918f8-624">The initial value of this property is derived from the settings in the regional and language options portion of Control Panel.</span></span> <span data-ttu-id="918f8-625">不過，這項資訊可以變更的存留期間<xref:System.AppDomain>。</span><span class="sxs-lookup"><span data-stu-id="918f8-625">However, that information can change during the life of the <xref:System.AppDomain>.</span></span> <span data-ttu-id="918f8-626"><xref:System.Globalization.Calendar>類別不會偵測系統設定 中的變更會自動。</span><span class="sxs-lookup"><span data-stu-id="918f8-626">The <xref:System.Globalization.Calendar> class does not detect changes in the system settings automatically.</span></span> <span data-ttu-id="918f8-627">行事曆不支援在地區及語言選項中，如果這個屬性的初始值會是所定義的預設值<xref:System.Globalization.Calendar>類別。</span><span class="sxs-lookup"><span data-stu-id="918f8-627">If the calendar is not supported in the regional and language options, the initial value of this property is the default value defined by the <xref:System.Globalization.Calendar> class.</span></span>  
  
 <span data-ttu-id="918f8-628">您的應用程式應該將這個值表示純粹 2 位數字年份 99。</span><span class="sxs-lookup"><span data-stu-id="918f8-628">Your application should set this value to 99 to indicate that 2-digit years are to be taken literally.</span></span> <span data-ttu-id="918f8-629">比方說，如果這個屬性設定為 99，100 年範圍是從 0 （不是有效值大部分的行事曆） 到 99。</span><span class="sxs-lookup"><span data-stu-id="918f8-629">For example, if this property is set to 99, the 100-year range is from 0 (not a valid value for most calendars) to 99.</span></span> <span data-ttu-id="918f8-630">因此，30 的 2 位數值會解譯為 30。</span><span class="sxs-lookup"><span data-stu-id="918f8-630">Therefore, a 2-digit value of 30 is interpreted as 30.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="918f8-631">目前的 <see cref="T:System.Globalization.Calendar" /> 物件是唯讀的。</span><span class="sxs-lookup"><span data-stu-id="918f8-631">The current <see cref="T:System.Globalization.Calendar" /> object is read-only.</span></span></exception>
        <altmember cref="M:System.Globalization.Calendar.ToFourDigitYear(System.Int32)" />
      </Docs>
    </Member>
  </Members>
</Type>