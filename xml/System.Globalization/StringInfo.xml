<Type Name="StringInfo" FullName="System.Globalization.StringInfo">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b72d069695e637bd593dbde70b0df143618607c6" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39973355" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class StringInfo" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit StringInfo extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Globalization.StringInfo" />
  <TypeSignature Language="VB.NET" Value="Public Class StringInfo" />
  <TypeSignature Language="C++ CLI" Value="public ref class StringInfo" />
  <TypeSignature Language="F#" Value="type StringInfo = class" />
  <AssemblyInfo>
    <AssemblyName>System.Globalization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>提供將字串分隔為文字項目並逐一查看那些文字項目的功能。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 .NET Framework 會定義為一個單位顯示為單一字元，也就是簇文字的文字項目。 文字項目可以是基底字元、 surrogate 字組或組合字元序列。 [Unicode 標準](http://go.microsoft.com/fwlink/?linkid=37123)定義為兩個程式碼單位，其中配對的第一個單位是高 surrogate，而第二個是較小的序列所組成的單一抽象字元編碼的字元表示的 surrogate 字組surrogate。 Unicode 標準會定義合併字元順序為基底字元和一個或多個組合字元的組合。 基底字元或組合字元，可以代表 surrogate 字組。  
  
 <xref:System.Globalization.StringInfo>類別可讓您以一系列的文字項目，而不是個別處理字串<xref:System.Char>物件。  
  
 若要具現化<xref:System.Globalization.StringInfo>物件，表示指定的字串中，您可以執行下列其中一項：  
  
-   呼叫<xref:System.Globalization.StringInfo.%23ctor%28System.String%29>建構函式並將它傳遞為字串，<xref:System.Globalization.StringInfo>物件所要做為引數表示。  
  
-   呼叫預設<xref:System.Globalization.StringInfo.%23ctor>建構函式，並指派字串<xref:System.Globalization.StringInfo>物件是代表<xref:System.Globalization.StringInfo.String%2A>屬性。  
  
 您可以使用兩種方法在字串中的個別文字項目：  
  
-   列舉每個文字項目。 若要這樣做，請呼叫<xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A>方法，然後重複呼叫<xref:System.Globalization.TextElementEnumerator.MoveNext%2A>方法傳回<xref:System.Globalization.TextElementEnumerator>物件，直到此方法會傳回`false`。  
  
-   藉由呼叫<xref:System.Globalization.StringInfo.ParseCombiningCharacters%2A>方法來擷取陣列，其中包含每個文字項目的起始的索引。 您便可以藉由傳遞到這些索引來擷取個別文字項目<xref:System.Globalization.StringInfo.SubstringByTextElements%2A>方法。  
  
 下列範例說明在字串中的文字項目使用的這兩種方式。 它會建立兩個字串：  
  
-   `strCombining`這是阿拉伯文字元的字串，包含三個文字項目與多個<xref:System.Char>物件。 第一個文字項目為阿拉伯文的字母 a 的基底字元 (U +-627) 後面跟著阿拉伯 HAMZA 下方 (U +-655) 和阿拉伯文 KASRA (U + 0650)。 第二個文字項目是阿拉伯文字母嘿嘿 (U + 0647) 後面跟著阿拉伯 FATHA (U +-64E)。 第三個文字項目是阿拉伯文 LETTTER BEH (U + 0628) 後面跟著阿拉伯 DAMMATAN (U + 064 C)。  
  
-   `strSurrogates`這是包含三個 surrogate 字組的字串： 希臘 ACROPHONIC 五個才華 (U + 10148) 從增補多語文字面 U + 20026 增補表意平面，和 U + F1001 從私用使用者的區域。 每個字元的 utf-16 編碼方式為 surrogate 字組所組成的高 surrogate，後面接著為低 surrogate。  
  
 每個字串會剖析一次<xref:System.Globalization.StringInfo.ParseCombiningCharacters%2A>方法再依<xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A>方法。 這兩種方法正確剖析兩個字串中的文字項目，並顯示在剖析作業的結果。  
  
 [!code-csharp[System.Globalization.StringInfo.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.stringinfo.class/cs/indexing1.cs#1)]
 [!code-vb[System.Globalization.StringInfo.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.stringinfo.class/vb/indexing1.vb#1)]  
  
   
  
## Examples  
 此範例示範如何使用<xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A>並<xref:System.Globalization.StringInfo.ParseCombiningCharacters%2A>方法<xref:System.Globalization.StringInfo>類別來操作包含 surrogate 字及組合字元的字串。  
  
 [!code-cpp[stringinfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/StringInfo/cpp/StringInfo.cpp#1)]
 [!code-csharp[stringinfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/StringInfo/CS/StringInfo.cs#1)]
 [!code-vb[stringinfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/StringInfo/vb/stringinfo.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="usage">
      <para>就內部而言的方法<see cref="T:System.Globalization.StringInfo" />類別要呼叫的方法<see cref="T:System.Globalization.CharUnicodeInfo" />判斷字元分類的類別。開頭[!INCLUDE[net_v462](~/includes/net-v462-md.md)]，字元分類根據[The Unicode Standard，Version 8.0.0](https://unicode.org/versions/Unicode8.0.0)。針對[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]經由[!INCLUDE[net_v461](~/includes/net-v461-md.md)]，它以基礎[The Unicode Standard，Version 6.3.0](https://www.unicode.org/versions/Unicode6.3.0/)。</para>
    </block>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Globalization.StringInfo" /> 類別的新執行個體。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StringInfo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StringInfo();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Globalization.StringInfo" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 新值<xref:System.Globalization.StringInfo>物件會初始化為空字串 ("")。 您也可以使用它來指派另一個字串<xref:System.Globalization.StringInfo.String%2A>屬性。  您也可以執行個體化<xref:System.Globalization.StringInfo>物件，表示指定的字串，在單一步驟中，藉由呼叫<xref:System.Globalization.StringInfo.%23ctor%28System.String%29>建構函式。  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.String.Empty" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StringInfo (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StringInfo(System::String ^ value);" />
      <MemberSignature Language="F#" Value="new System.Globalization.StringInfo : string -&gt; System.Globalization.StringInfo" Usage="new System.Globalization.StringInfo value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">用來初始化這個 <see cref="T:System.Globalization.StringInfo" /> 物件的字串。</param>
        <summary>將 <see cref="T:System.Globalization.StringInfo" /> 類別的新執行個體 (Instance) 初始化為指定的字串。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個建構函式會將數值引數指派給物件的<xref:System.Globalization.StringInfo.String%2A>屬性。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="value" /> 為 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="stringInfo.Equals value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">物件。</param>
        <summary>指出目前的 <see cref="T:System.Globalization.StringInfo" /> 物件是否等於指定的物件。</summary>
        <returns>如果 <paramref name="value" /> 參數是 <see cref="T:System.Globalization.StringInfo" /> 物件，而且其 <see cref="P:System.Globalization.StringInfo.String" /> 屬性等於這個 <see cref="P:System.Globalization.StringInfo.String" /> 物件的 <see cref="T:System.Globalization.StringInfo" /> 屬性，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="Overload:System.String.Equals" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="stringInfo.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>計算目前 <see cref="T:System.Globalization.StringInfo" /> 物件值的雜湊碼。</summary>
        <returns>以這個 <see cref="T:System.Globalization.StringInfo" /> 物件的字串值為基礎的 32 位元帶正負號的整數 (Signed Integer) 的雜湊碼。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 行為<xref:System.Globalization.StringInfo.GetHashCode%2A>取決於它的實作，可能會變更到另一個版本的 common language runtime。 可能發生這個情形來改善效能的<xref:System.Globalization.StringInfo.GetHashCode%2A>。 若要進行的行為<xref:System.Globalization.StringInfo.GetHashCode%2A>常數，應用程式應該覆寫的執行階段實作<xref:System.Globalization.StringInfo.GetHashCode%2A>永遠不會變更已知的實作。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.String.GetHashCode" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetNextTextElement">
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>取得指定字串中的第一個文字項目。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetNextTextElement">
      <MemberSignature Language="C#" Value="public static string GetNextTextElement (string str);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetNextTextElement(string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.GetNextTextElement(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetNextTextElement (str As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetNextTextElement(System::String ^ str);" />
      <MemberSignature Language="F#" Value="static member GetNextTextElement : string -&gt; string" Usage="System.Globalization.StringInfo.GetNextTextElement str" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="str">要從其中取得文字項目的字串。</param>
        <summary>取得指定字串中的第一個文字項目。</summary>
        <returns>含有指定字串中第一個文字項目的字串。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 .NET Framework 會定義為一個單位顯示為單一字元，也就是簇文字的文字項目。 文字項目可以是基底字元、 surrogate 字組或組合字元序列。 [Unicode 標準](http://go.microsoft.com/fwlink/?linkid=37123)定義為兩個程式碼單位，其中配對的第一個單位是高 surrogate，而第二個是較小的序列所組成的單一抽象字元編碼的字元表示的 surrogate 字組surrogate。 [Unicode 標準](http://go.microsoft.com/fwlink/?linkid=37123)定義結合字元序列，做為基底字元和一個或多個組合字元的組合。 基底字元或組合字元，可以代表 surrogate 字組。  
  
 這個方法只會傳回第一個文字項目。 若要逐一查看字串文字項目，應該使用應用程式<xref:System.Globalization.TextElementEnumerator>所產生的物件<xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A>方法。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="str" /> 為 <see langword="null" />。</exception>
        <altmember cref="M:System.Globalization.StringInfo.GetTextElementEnumerator(System.String)" />
        <altmember cref="M:System.Globalization.StringInfo.ParseCombiningCharacters(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetNextTextElement">
      <MemberSignature Language="C#" Value="public static string GetNextTextElement (string str, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetNextTextElement(string str, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.GetNextTextElement(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetNextTextElement (str As String, index As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetNextTextElement(System::String ^ str, int index);" />
      <MemberSignature Language="F#" Value="static member GetNextTextElement : string * int -&gt; string" Usage="System.Globalization.StringInfo.GetNextTextElement (str, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="str">要從其中取得文字項目的字串。</param>
        <param name="index">文字項目開始處的以零起始的索引。</param>
        <summary>取得在指定字串中指定索引處的文字項目。</summary>
        <returns>含有指定字串中指定索引處的文字項目的字串。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 .NET Framework 會定義為一個單位顯示為單一字元，也就是簇文字的文字項目。 文字項目可以是基底字元、 surrogate 字組或組合字元序列。 [Unicode 標準](http://go.microsoft.com/fwlink/?linkid=37123)定義為兩個程式碼單位，其中配對的第一個單位是高 surrogate，而第二個是較小的序列所組成的單一抽象字元編碼的字元表示的 surrogate 字組surrogate。 Unicode 標準會定義合併字元順序為基底字元和一個或多個組合字元的組合。 基底字元或組合字元，可以代表 surrogate 字組。  
  
 這個方法只會傳回所指定的索引開始的子字串的第一個文字項目。 若要逐一查看字串文字項目，應該使用應用程式<xref:System.Globalization.TextElementEnumerator>所產生<xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A>方法。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="str" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> 超出 <paramref name="str" /> 的有效索引範圍。</exception>
        <altmember cref="M:System.Globalization.StringInfo.GetTextElementEnumerator(System.String)" />
        <altmember cref="M:System.Globalization.StringInfo.ParseCombiningCharacters(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetTextElementEnumerator">
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>傳回可以逐一查看字串文字項目的列舉值。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetTextElementEnumerator">
      <MemberSignature Language="C#" Value="public static System.Globalization.TextElementEnumerator GetTextElementEnumerator (string str);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Globalization.TextElementEnumerator GetTextElementEnumerator(string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.GetTextElementEnumerator(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTextElementEnumerator (str As String) As TextElementEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::TextElementEnumerator ^ GetTextElementEnumerator(System::String ^ str);" />
      <MemberSignature Language="F#" Value="static member GetTextElementEnumerator : string -&gt; System.Globalization.TextElementEnumerator" Usage="System.Globalization.StringInfo.GetTextElementEnumerator str" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.TextElementEnumerator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="str">要逐一查看的字串。</param>
        <summary>傳回可以逐一查看整個字串文字項目的列舉值。</summary>
        <returns>整個字串的 <see cref="T:System.Globalization.TextElementEnumerator" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 .NET Framework 會定義為一個單位顯示為單一字元，也就是簇文字的文字項目。 文字項目可以是基底字元、 surrogate 字組或組合字元序列。 [Unicode 標準](http://go.microsoft.com/fwlink/?linkid=37123)定義為兩個程式碼單位，其中配對的第一個單位是高 surrogate，而第二個是較小的序列所組成的單一抽象字元編碼的字元表示的 surrogate 字組surrogate。 Unicode 標準會定義合併字元順序為基底字元和一個或多個組合字元的組合。 基底字元或組合字元，可以代表 surrogate 字組。  
  
 文字項目列舉值只會用於讀取的字串; 中的資料它不能修改基礎字串。 列舉值並沒有獨佔存取權的字串。  
  
 列舉值會是無效的狀態，如果它位於字串中或在字串中的最後一個文字項目之後的第一個文字元素之前。 處於無效狀態的列舉值時，呼叫<xref:System.Globalization.TextElementEnumerator.Current%2A>會擲回例外狀況。  
  
 一開始，列舉值位於字串中的第一個文字項目之前。 <xref:System.Globalization.TextElementEnumerator.Reset%2A> 也會將列舉值帶回至這個位置。 因此，建立列舉值之後或在後<xref:System.Globalization.TextElementEnumerator.Reset%2A>呼叫時，<xref:System.Globalization.TextElementEnumerator.MoveNext%2A>將列舉值前移至字串的第一個文字項目，再讀取的值時必須呼叫<xref:System.Globalization.TextElementEnumerator.Current%2A>。  
  
 <xref:System.Globalization.TextElementEnumerator.Current%2A> 會傳回相同的物件直到呼叫 <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> 或 <xref:System.Globalization.TextElementEnumerator.Reset%2A>。  
  
 處於無效狀態，而且呼叫列舉值會傳遞字串的結尾之後，再次<xref:System.Globalization.TextElementEnumerator.MoveNext%2A>傳回`false`。 呼叫<xref:System.Globalization.TextElementEnumerator.Current%2A>擲回例外狀況，如果上次呼叫<xref:System.Globalization.TextElementEnumerator.MoveNext%2A>傳回`false`。  
  
   
  
## Examples  
 下列程式碼範例示範如何呼叫<xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A>方法。 此程式碼範例是針對提供之較大範例的一部分<xref:System.Globalization.StringInfo>類別。  
  
 [!code-cpp[stringinfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/StringInfo/cpp/StringInfo.cpp#1)]
 [!code-csharp[stringinfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/StringInfo/CS/StringInfo.cs#1)]
 [!code-vb[stringinfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/StringInfo/vb/stringinfo.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="str" /> 為 <see langword="null" />。</exception>
        <altmember cref="T:System.Globalization.TextElementEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="GetTextElementEnumerator">
      <MemberSignature Language="C#" Value="public static System.Globalization.TextElementEnumerator GetTextElementEnumerator (string str, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Globalization.TextElementEnumerator GetTextElementEnumerator(string str, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.GetTextElementEnumerator(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTextElementEnumerator (str As String, index As Integer) As TextElementEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::TextElementEnumerator ^ GetTextElementEnumerator(System::String ^ str, int index);" />
      <MemberSignature Language="F#" Value="static member GetTextElementEnumerator : string * int -&gt; System.Globalization.TextElementEnumerator" Usage="System.Globalization.StringInfo.GetTextElementEnumerator (str, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.TextElementEnumerator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="str">要逐一查看的字串。</param>
        <param name="index">要從該處開始反覆查看之以零起始的索引。</param>
        <summary>傳回可以從指定索引處開始來逐一查看字串文字項目的列舉值。</summary>
        <returns>起始於 <paramref name="index" /> 之字串的 <see cref="T:System.Globalization.TextElementEnumerator" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 .NET Framework 會定義為一個單位顯示為單一字元，也就是簇文字的文字項目。 文字項目可以是基底字元、 surrogate 字組或組合字元序列。 [Unicode 標準](http://go.microsoft.com/fwlink/?linkid=37123)定義為兩個程式碼單位，其中配對的第一個單位是高 surrogate，而第二個是較小的序列所組成的單一抽象字元編碼的字元表示的 surrogate 字組surrogate。 Unicode 標準會定義合併字元順序為基底字元和一個或多個組合字元的組合。 基底字元或組合字元，可以代表 surrogate 字組。  
  
 文字項目列舉值只會用於讀取的字串; 中的資料它不能修改基礎字串。 列舉值並沒有獨佔存取權的字串。  
  
 列舉值會是無效的狀態，如果它位於字串中或在字串中的最後一個文字項目之後的第一個文字元素之前。 處於無效狀態的列舉值時，呼叫<xref:System.Globalization.TextElementEnumerator.Current%2A>會擲回例外狀況。  
  
 一開始，列舉值位於字串中的第一個文字項目之前。 <xref:System.Globalization.TextElementEnumerator.Reset%2A> 也會將列舉值帶回至這個位置。 因此，建立列舉值之後或在後<xref:System.Globalization.TextElementEnumerator.Reset%2A>呼叫時，<xref:System.Globalization.TextElementEnumerator.MoveNext%2A>將列舉值前移至字串的第一個文字項目，再讀取的值時必須呼叫<xref:System.Globalization.TextElementEnumerator.Current%2A>。  
  
 <xref:System.Globalization.TextElementEnumerator.Current%2A> 會傳回相同的物件直到呼叫 <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> 或 <xref:System.Globalization.TextElementEnumerator.Reset%2A>。  
  
 處於無效狀態，而且呼叫列舉值會傳遞字串的結尾之後，再次<xref:System.Globalization.TextElementEnumerator.MoveNext%2A>傳回`false`。 呼叫<xref:System.Globalization.TextElementEnumerator.Current%2A>擲回例外狀況，如果上次呼叫<xref:System.Globalization.TextElementEnumerator.MoveNext%2A>傳回`false`。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="str" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> 超出 <paramref name="str" /> 的有效索引範圍。</exception>
        <altmember cref="T:System.Globalization.TextElementEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="LengthInTextElements">
      <MemberSignature Language="C#" Value="public int LengthInTextElements { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LengthInTextElements" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.StringInfo.LengthInTextElements" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LengthInTextElements As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LengthInTextElements { int get(); };" />
      <MemberSignature Language="F#" Value="member this.LengthInTextElements : int" Usage="System.Globalization.StringInfo.LengthInTextElements" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得目前 <see cref="T:System.Globalization.StringInfo" /> 物件中的文字元素數目。</summary>
        <value>這個 <see cref="T:System.Globalization.StringInfo" /> 物件中的基底字元、Surrogate 字組及組合字元序列數目。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParseCombiningCharacters">
      <MemberSignature Language="C#" Value="public static int[] ParseCombiningCharacters (string str);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32[] ParseCombiningCharacters(string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.ParseCombiningCharacters(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ParseCombiningCharacters (str As String) As Integer()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;int&gt; ^ ParseCombiningCharacters(System::String ^ str);" />
      <MemberSignature Language="F#" Value="static member ParseCombiningCharacters : string -&gt; int[]" Usage="System.Globalization.StringInfo.ParseCombiningCharacters str" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="str">要搜尋的字串。</param>
        <summary>傳回所指定字串內各個基底字元、高 Surrogate 或控制字元的索引。</summary>
        <returns>整數陣列，包含所指定字串內各個基底字元、高 Surrogate 或控制字元的以零起始的索引。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [Unicode 標準](http://go.microsoft.com/fwlink/?linkid=37123)定義為兩個程式碼單位，其中配對的第一個單位是高 surrogate，而第二個是較小的序列所組成的單一抽象字元編碼的字元表示的 surrogate 字組surrogate。 為高 surrogate 是在 u+d800 到 U + DBFF 範圍中的 Unicode 字碼指標，低 surrogate 的 Unicode 字碼指標，在 u+dc00 到 U + DFFF 範圍中。  
  
 控制字元是字元的 Unicode 值是 U + 007F 或是 u+0000 到 U + 001F 或 u+0080 到 U + 009F 的範圍。  
  
 .NET Framework 會定義為一個單位顯示為單一字元，也就是簇文字的文字項目。 文字項目可以是基底字元、 surrogate 字組或組合字元序列。 [Unicode 標準](http://go.microsoft.com/fwlink/?linkid=37123)定義結合字元序列，做為基底字元和一個或多個組合字元的組合。 基底字元或組合字元，可以代表 surrogate 字組。  
  
 如果結合字元序列無效，該序列中的每個組合字元，也會傳回。  
  
 產生陣列中的每個索引是文字的項目，也就是索引的基底字元或高 surrogate 的開頭。  
  
 每個項目的長度會輕鬆地計算後續索引之間的差異。 陣列的長度一定會小於或等於字串的長度。 比方說，假設 「 \u4f00\u302a\ud800\udc00\u4f01"的字串，這個方法會傳回 0、 2 和 4 的索引。  
  
## <a name="equivalent-members"></a>對等成員  
 從.NET Framework 2.0 版<xref:System.Globalization.StringInfo.SubstringByTextElements%2A>方法和<xref:System.Globalization.StringInfo.LengthInTextElements%2A>屬性提供簡單易用的所提供的功能實作<xref:System.Globalization.StringInfo.ParseCombiningCharacters%2A>方法。  
  
   
  
## Examples  
 下列程式碼範例示範如何呼叫<xref:System.Globalization.StringInfo.ParseCombiningCharacters%2A>方法。 此程式碼範例是針對提供之較大範例的一部分<xref:System.Globalization.StringInfo>類別。  
  
 [!code-cpp[stringinfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/StringInfo/cpp/StringInfo.cpp#1)]
 [!code-csharp[stringinfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/StringInfo/CS/StringInfo.cs#1)]
 [!code-vb[stringinfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/StringInfo/vb/stringinfo.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="str" /> 為 <see langword="null" />。</exception>
        <altmember cref="Overload:System.Globalization.StringInfo.SubstringByTextElements" />
        <altmember cref="P:System.Globalization.StringInfo.LengthInTextElements" />
      </Docs>
    </Member>
    <Member MemberName="String">
      <MemberSignature Language="C#" Value="public string String { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string String" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.StringInfo.String" />
      <MemberSignature Language="VB.NET" Value="Public Property String As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ String { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.String : string with get, set" Usage="System.Globalization.StringInfo.String" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定目前 <see cref="T:System.Globalization.StringInfo" /> 物件的值。</summary>
        <value>做為目前 <see cref="T:System.Globalization.StringInfo" /> 物件值的字串。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當<xref:System.Globalization.StringInfo>物件具現化，其<xref:System.Globalization.StringInfo.String%2A>屬性設定為下列值之一：  
  
-   <xref:System.String.Empty?displayProperty=nameWithType> 如果預設<xref:System.Globalization.StringInfo.%23ctor>呼叫。 然後，您應該使用<xref:System.Globalization.StringInfo.String%2A>屬性，以將字串指派這個<xref:System.Globalization.StringInfo>物件 rperesents。  
  
-   為提供的字串`value`引數<xref:System.Globalization.StringInfo.%23ctor%28System.String%29>建構函式。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">設定作業中的值是 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="SubstringByTextElements">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>從目前的 <see cref="T:System.Globalization.StringInfo" /> 物件擷取文字項目的子字串。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SubstringByTextElements">
      <MemberSignature Language="C#" Value="public string SubstringByTextElements (int startingTextElement);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string SubstringByTextElements(int32 startingTextElement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.SubstringByTextElements(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function SubstringByTextElements (startingTextElement As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ SubstringByTextElements(int startingTextElement);" />
      <MemberSignature Language="F#" Value="member this.SubstringByTextElements : int -&gt; string" Usage="stringInfo.SubstringByTextElements startingTextElement" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startingTextElement" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="startingTextElement">
          <see cref="T:System.Globalization.StringInfo" /> 物件中文字項目之以零為起始的索引。</param>
        <summary>在目前的 <see cref="T:System.Globalization.StringInfo" /> 物件中擷取文字項目的子字串，範圍從指定的文字項目開始，一直持續到最後一個文字項目。</summary>
        <returns>這個 <see cref="T:System.Globalization.StringInfo" /> 物件中的文字項目的子字串，範圍從 <paramref name="startingTextElement" /> 參數指定的文字項目索引開始，一直持續到這個物件中的最後一個文字項目。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 請考慮包含五個文字項目，從 0 到 4 編製索引的字串。 如果`startingTextElement`參數設為 1，<xref:System.Globalization.StringInfo.SubstringByTextElements%2A>方法會傳回子字串所組成的索引都 1、 2、 3 和 4 的文字項目。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="startingTextElement" /> 小於零。  
  
-或- 
做為目前 <see cref="T:System.Globalization.StringInfo" /> 物件值的字串是空字串 ("")。</exception>
      </Docs>
    </Member>
    <Member MemberName="SubstringByTextElements">
      <MemberSignature Language="C#" Value="public string SubstringByTextElements (int startingTextElement, int lengthInTextElements);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string SubstringByTextElements(int32 startingTextElement, int32 lengthInTextElements) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.SubstringByTextElements(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function SubstringByTextElements (startingTextElement As Integer, lengthInTextElements As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ SubstringByTextElements(int startingTextElement, int lengthInTextElements);" />
      <MemberSignature Language="F#" Value="member this.SubstringByTextElements : int * int -&gt; string" Usage="stringInfo.SubstringByTextElements (startingTextElement, lengthInTextElements)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startingTextElement" Type="System.Int32" />
        <Parameter Name="lengthInTextElements" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="startingTextElement">
          <see cref="T:System.Globalization.StringInfo" /> 物件中文字項目之以零為起始的索引。</param>
        <param name="lengthInTextElements">要擷取的文字項目數目。</param>
        <summary>在目前 <see cref="T:System.Globalization.StringInfo" /> 物件中擷取文字項目的子字串，範圍從指定的文字項目開始，一直持續到指定的文字項目數目。</summary>
        <returns>這個 <see cref="T:System.Globalization.StringInfo" /> 物件中的文字項目的子字串。 子字串由 <paramref name="lengthInTextElements" /> 參數所指定的文字項目數目所組成，而且從 <paramref name="startingTextElement" /> 參數所指定的文字項目索引開始。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 請考慮包含五個文字項目，從 0 到 4 編製索引的字串。 如果`startingTextElement`參數設為 1，`lengthInTextElements`參數為 3，<xref:System.Globalization.StringInfo.SubstringByTextElements%2A>方法會傳回子字串所組成的索引都 1、 2 和 3 的文字項目。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="startingTextElement" /> 小於零。  
  
-或- 
 <paramref name="startingTextElement" /> 大於或等於字串的長度，這個字串就是目前 <see cref="T:System.Globalization.StringInfo" /> 物件的值。  
  
-或- 
 <paramref name="lengthInTextElements" /> 小於零。  
  
-或- 
做為目前 <see cref="T:System.Globalization.StringInfo" /> 物件值的字串是空字串 ("")。  
  
-或- 
 <paramref name="startingTextElement" /> + <paramref name="lengthInTextElements" /> 指定一個索引，其大於這個 <see cref="T:System.Globalization.StringInfo" /> 物件中的文字項目數目。</exception>
      </Docs>
    </Member>
  </Members>
</Type>