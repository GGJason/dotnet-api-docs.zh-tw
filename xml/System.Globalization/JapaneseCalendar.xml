<Type Name="JapaneseCalendar" FullName="System.Globalization.JapaneseCalendar">
  <Metadata><Meta Name="ms.openlocfilehash" Value="900207a0787a7b4e8fe5d19ff1f72abe690b936a" /><Meta Name="ms.sourcegitcommit" Value="b99ec7065534584bfab2aebde9f144bedabb075a" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="58185281" /></Metadata><TypeSignature Language="C#" Value="public class JapaneseCalendar : System.Globalization.Calendar" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit JapaneseCalendar extends System.Globalization.Calendar" />
  <TypeSignature Language="DocId" Value="T:System.Globalization.JapaneseCalendar" />
  <TypeSignature Language="VB.NET" Value="Public Class JapaneseCalendar&#xA;Inherits Calendar" />
  <TypeSignature Language="C++ CLI" Value="public ref class JapaneseCalendar : System::Globalization::Calendar" />
  <TypeSignature Language="F#" Value="type JapaneseCalendar = class&#xA;    inherit Calendar" />
  <AssemblyInfo>
    <AssemblyName>System.Globalization.Calendars</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Globalization.Calendar</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="abd1c-101">代表日本曆法。</span><span class="sxs-lookup"><span data-stu-id="abd1c-101">Represents the Japanese calendar.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="abd1c-102">日本曆法相同，也就是所謂的 」 曆法行事曆，運作方式完全一樣的西曆，除了在年份及紀元不同。</span><span class="sxs-lookup"><span data-stu-id="abd1c-102">The Japanese calendar, which is also known as the Wareki calendar, works exactly like the Gregorian calendar, except that the year and era are different.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="abd1c-103">如需有關使用資訊<xref:System.Globalization.JapaneseCalendar>類別和其他的行事曆 .NET Framework 中的類別，請參閱 <<c2> [ 使用行事曆](~/docs/standard/datetime/working-with-calendars.md)。</span><span class="sxs-lookup"><span data-stu-id="abd1c-103">For information about using the <xref:System.Globalization.JapaneseCalendar> class and the other calendar classes in the .NET Framework, see [Working with Calendars](~/docs/standard/datetime/working-with-calendars.md).</span></span>  
  
 <span data-ttu-id="abd1c-104">日本曆法會辨識為每個皇帝 reign 一個紀元。</span><span class="sxs-lookup"><span data-stu-id="abd1c-104">The Japanese calendar recognizes one era for every emperor's reign.</span></span> <span data-ttu-id="abd1c-105">目前紀元是平成時代，開始於 1989年西曆年。</span><span class="sxs-lookup"><span data-stu-id="abd1c-105">The current era is the Heisei era, which began in the Gregorian calendar year 1989.</span></span> <span data-ttu-id="abd1c-106">紀元名稱通常會顯示前一年。</span><span class="sxs-lookup"><span data-stu-id="abd1c-106">The era name is typically displayed before the year.</span></span> <span data-ttu-id="abd1c-107">例如，2001年西曆年是日文的日曆年度平成 13。</span><span class="sxs-lookup"><span data-stu-id="abd1c-107">For example, the Gregorian calendar year 2001 is the Japanese calendar year Heisei 13.</span></span> <span data-ttu-id="abd1c-108">請注意，第一年的時代稱為 「 元年。 」</span><span class="sxs-lookup"><span data-stu-id="abd1c-108">Note that the first year of an era is called "Gannen."</span></span> <span data-ttu-id="abd1c-109">因此，西曆 1989 年是日文的日曆年度平成元年。</span><span class="sxs-lookup"><span data-stu-id="abd1c-109">Therefore, the Gregorian calendar year 1989 was the Japanese calendar year Heisei Gannen.</span></span> <span data-ttu-id="abd1c-110">根據預設，格式化作業，使用指定的日期和時間格式字串，例如"D"、"F"和"Y"，輸出元年，而非"1"的結果字串中。</span><span class="sxs-lookup"><span data-stu-id="abd1c-110">By default, formatting operations with specified date and time format strings, such as "D", "F", and "Y", output Gannen rather than "1" in the result string.</span></span> 

[!INCLUDE[japanese-era-note](~/includes/calendar-era.md)]

 <span data-ttu-id="abd1c-111">此類別會指派數字給紀元，如下所示：</span><span class="sxs-lookup"><span data-stu-id="abd1c-111">This class assigns numbers to the eras as follows:</span></span>  
  
|<span data-ttu-id="abd1c-112">GetEra 值</span><span class="sxs-lookup"><span data-stu-id="abd1c-112">GetEra value</span></span>|<span data-ttu-id="abd1c-113">紀元名稱</span><span class="sxs-lookup"><span data-stu-id="abd1c-113">Era Name</span></span>|<span data-ttu-id="abd1c-114">紀元縮寫</span><span class="sxs-lookup"><span data-stu-id="abd1c-114">Era Abbreviation</span></span>|<span data-ttu-id="abd1c-115">西曆日期</span><span class="sxs-lookup"><span data-stu-id="abd1c-115">Gregorian Dates</span></span>|  
|------------------|--------------|----------------------|---------------------|  
|<span data-ttu-id="abd1c-116">4</span><span class="sxs-lookup"><span data-stu-id="abd1c-116">4</span></span>|<span data-ttu-id="abd1c-117">平成 （平成）</span><span class="sxs-lookup"><span data-stu-id="abd1c-117">平成 (Heisei)</span></span>|<span data-ttu-id="abd1c-118">平 (H、 h)</span><span class="sxs-lookup"><span data-stu-id="abd1c-118">平 (H, h)</span></span>|<span data-ttu-id="abd1c-119">1989 年 1 月 8 日來呈現</span><span class="sxs-lookup"><span data-stu-id="abd1c-119">January 8, 1989 to present</span></span>|  
|<span data-ttu-id="abd1c-120">3</span><span class="sxs-lookup"><span data-stu-id="abd1c-120">3</span></span>|<span data-ttu-id="abd1c-121">昭和 (Showa)</span><span class="sxs-lookup"><span data-stu-id="abd1c-121">昭和 (Showa)</span></span>|<span data-ttu-id="abd1c-122">昭 （S，s）</span><span class="sxs-lookup"><span data-stu-id="abd1c-122">昭 (S, s)</span></span>|<span data-ttu-id="abd1c-123">1926 年 12 月 25 日 1989 年 1 月 7日，</span><span class="sxs-lookup"><span data-stu-id="abd1c-123">December 25, 1926 to January 7, 1989</span></span>|  
|<span data-ttu-id="abd1c-124">2</span><span class="sxs-lookup"><span data-stu-id="abd1c-124">2</span></span>|<span data-ttu-id="abd1c-125">大正 (Taisho)</span><span class="sxs-lookup"><span data-stu-id="abd1c-125">大正 (Taisho)</span></span>|<span data-ttu-id="abd1c-126">提名 （T，t）</span><span class="sxs-lookup"><span data-stu-id="abd1c-126">大 (T, t)</span></span>|<span data-ttu-id="abd1c-127">1912 年 7 月 30 日 1926 年 12 月 24日，</span><span class="sxs-lookup"><span data-stu-id="abd1c-127">July 30, 1912 to December 24, 1926</span></span>|  
|<span data-ttu-id="abd1c-128">1</span><span class="sxs-lookup"><span data-stu-id="abd1c-128">1</span></span>|<span data-ttu-id="abd1c-129">明治 （明治）</span><span class="sxs-lookup"><span data-stu-id="abd1c-129">明治 (Meiji)</span></span>|<span data-ttu-id="abd1c-130">明 （M，m）</span><span class="sxs-lookup"><span data-stu-id="abd1c-130">明 (M, m)</span></span>|<span data-ttu-id="abd1c-131">1868 年 9 月 8 日 1912 年 7 月 29日，</span><span class="sxs-lookup"><span data-stu-id="abd1c-131">September 8, 1868 to July 29, 1912</span></span>|  
  
 <span data-ttu-id="abd1c-132">這個類別會處理從 9 月 8 明治第 1 年 （以西曆日曆 1868 年 9 月 8，） 的日期。</span><span class="sxs-lookup"><span data-stu-id="abd1c-132">This class handles dates from September 8 in the year Meiji 1 (in the Gregorian calendar, September 8, 1868).</span></span> <span data-ttu-id="abd1c-133">雖然日本曆法從不陰曆到陽曆明治 6 (1873 西曆的) 中，此實作是以陽曆的行事曆為根據。</span><span class="sxs-lookup"><span data-stu-id="abd1c-133">Although the Japanese calendar was switched from a lunar calendar to a solar calendar in the year Meiji 6 (1873 of the Gregorian calendar), this implementation is based on the solar calendar only.</span></span>  
  
 <span data-ttu-id="abd1c-134">潤年，日本曆法中對應至相同潤年西曆中。</span><span class="sxs-lookup"><span data-stu-id="abd1c-134">Leap years in the Japanese calendar correspond to the same leap years in the Gregorian calendar.</span></span> <span data-ttu-id="abd1c-135">閏年西曆中定義為一個公曆年整除的四個，除非它是整除 100。</span><span class="sxs-lookup"><span data-stu-id="abd1c-135">A leap year in the Gregorian calendar is defined as a Gregorian year that is evenly divisible by four, except if it is divisible by 100.</span></span> <span data-ttu-id="abd1c-136">不過，400 所整除的公曆年是潤年。</span><span class="sxs-lookup"><span data-stu-id="abd1c-136">However, Gregorian years that are divisible by 400 are leap years.</span></span> <span data-ttu-id="abd1c-137">一般年份有 365 天，閏年有 366 天。</span><span class="sxs-lookup"><span data-stu-id="abd1c-137">A common year has 365 days and a leap year has 366 days.</span></span>  
  
 <span data-ttu-id="abd1c-138">日本曆法具有 12 個月 28 至 31 天每個：</span><span class="sxs-lookup"><span data-stu-id="abd1c-138">The Japanese calendar has 12 months with 28 to 31 days each:</span></span>  
  
|<span data-ttu-id="abd1c-139">GetMonth 值</span><span class="sxs-lookup"><span data-stu-id="abd1c-139">GetMonth value</span></span>|<span data-ttu-id="abd1c-140">月份</span><span class="sxs-lookup"><span data-stu-id="abd1c-140">Month</span></span>|<span data-ttu-id="abd1c-141">英文</span><span class="sxs-lookup"><span data-stu-id="abd1c-141">English</span></span>|<span data-ttu-id="abd1c-142">一般年份中的天數</span><span class="sxs-lookup"><span data-stu-id="abd1c-142">Days in common years</span></span>|<span data-ttu-id="abd1c-143">閏年的天數</span><span class="sxs-lookup"><span data-stu-id="abd1c-143">Days in leap years</span></span>|  
|--------------------|-----------|-------------|--------------------------|------------------------|  
|<span data-ttu-id="abd1c-144">1</span><span class="sxs-lookup"><span data-stu-id="abd1c-144">1</span></span>|<span data-ttu-id="abd1c-145">1 月 (Ichigatsu)</span><span class="sxs-lookup"><span data-stu-id="abd1c-145">1月 (Ichigatsu)</span></span>|<span data-ttu-id="abd1c-146">年 1 月</span><span class="sxs-lookup"><span data-stu-id="abd1c-146">January</span></span>|<span data-ttu-id="abd1c-147">31</span><span class="sxs-lookup"><span data-stu-id="abd1c-147">31</span></span>|<span data-ttu-id="abd1c-148">31</span><span class="sxs-lookup"><span data-stu-id="abd1c-148">31</span></span>|  
|<span data-ttu-id="abd1c-149">2</span><span class="sxs-lookup"><span data-stu-id="abd1c-149">2</span></span>|<span data-ttu-id="abd1c-150">2 月 (Nigatsu)</span><span class="sxs-lookup"><span data-stu-id="abd1c-150">2月 (Nigatsu)</span></span>|<span data-ttu-id="abd1c-151">2 月</span><span class="sxs-lookup"><span data-stu-id="abd1c-151">February</span></span>|<span data-ttu-id="abd1c-152">28</span><span class="sxs-lookup"><span data-stu-id="abd1c-152">28</span></span>|<span data-ttu-id="abd1c-153">29</span><span class="sxs-lookup"><span data-stu-id="abd1c-153">29</span></span>|  
|<span data-ttu-id="abd1c-154">3</span><span class="sxs-lookup"><span data-stu-id="abd1c-154">3</span></span>|<span data-ttu-id="abd1c-155">3 月 (Sangatsu)</span><span class="sxs-lookup"><span data-stu-id="abd1c-155">3月 (Sangatsu)</span></span>|<span data-ttu-id="abd1c-156">年 3 月</span><span class="sxs-lookup"><span data-stu-id="abd1c-156">March</span></span>|<span data-ttu-id="abd1c-157">31</span><span class="sxs-lookup"><span data-stu-id="abd1c-157">31</span></span>|<span data-ttu-id="abd1c-158">31</span><span class="sxs-lookup"><span data-stu-id="abd1c-158">31</span></span>|  
|<span data-ttu-id="abd1c-159">4</span><span class="sxs-lookup"><span data-stu-id="abd1c-159">4</span></span>|<span data-ttu-id="abd1c-160">4 月 (Shigatsu)</span><span class="sxs-lookup"><span data-stu-id="abd1c-160">4月 (Shigatsu)</span></span>|<span data-ttu-id="abd1c-161">4 月</span><span class="sxs-lookup"><span data-stu-id="abd1c-161">April</span></span>|<span data-ttu-id="abd1c-162">30</span><span class="sxs-lookup"><span data-stu-id="abd1c-162">30</span></span>|<span data-ttu-id="abd1c-163">30</span><span class="sxs-lookup"><span data-stu-id="abd1c-163">30</span></span>|  
|<span data-ttu-id="abd1c-164">5</span><span class="sxs-lookup"><span data-stu-id="abd1c-164">5</span></span>|<span data-ttu-id="abd1c-165">5月 (Gogatsu)</span><span class="sxs-lookup"><span data-stu-id="abd1c-165">5月 (Gogatsu)</span></span>|<span data-ttu-id="abd1c-166">5 月</span><span class="sxs-lookup"><span data-stu-id="abd1c-166">May</span></span>|<span data-ttu-id="abd1c-167">31</span><span class="sxs-lookup"><span data-stu-id="abd1c-167">31</span></span>|<span data-ttu-id="abd1c-168">31</span><span class="sxs-lookup"><span data-stu-id="abd1c-168">31</span></span>|  
|<span data-ttu-id="abd1c-169">6</span><span class="sxs-lookup"><span data-stu-id="abd1c-169">6</span></span>|<span data-ttu-id="abd1c-170">6月 (Rokugatsu)</span><span class="sxs-lookup"><span data-stu-id="abd1c-170">6月 (Rokugatsu)</span></span>|<span data-ttu-id="abd1c-171">June</span><span class="sxs-lookup"><span data-stu-id="abd1c-171">June</span></span>|<span data-ttu-id="abd1c-172">30</span><span class="sxs-lookup"><span data-stu-id="abd1c-172">30</span></span>|<span data-ttu-id="abd1c-173">30</span><span class="sxs-lookup"><span data-stu-id="abd1c-173">30</span></span>|  
|<span data-ttu-id="abd1c-174">7</span><span class="sxs-lookup"><span data-stu-id="abd1c-174">7</span></span>|<span data-ttu-id="abd1c-175">7月 (Shichigatsu)</span><span class="sxs-lookup"><span data-stu-id="abd1c-175">7月 (Shichigatsu)</span></span>|<span data-ttu-id="abd1c-176">7 月</span><span class="sxs-lookup"><span data-stu-id="abd1c-176">July</span></span>|<span data-ttu-id="abd1c-177">31</span><span class="sxs-lookup"><span data-stu-id="abd1c-177">31</span></span>|<span data-ttu-id="abd1c-178">31</span><span class="sxs-lookup"><span data-stu-id="abd1c-178">31</span></span>|  
|<span data-ttu-id="abd1c-179">8</span><span class="sxs-lookup"><span data-stu-id="abd1c-179">8</span></span>|<span data-ttu-id="abd1c-180">8 月 (Hachigatsu)</span><span class="sxs-lookup"><span data-stu-id="abd1c-180">8月 (Hachigatsu)</span></span>|<span data-ttu-id="abd1c-181">8 月</span><span class="sxs-lookup"><span data-stu-id="abd1c-181">August</span></span>|<span data-ttu-id="abd1c-182">31</span><span class="sxs-lookup"><span data-stu-id="abd1c-182">31</span></span>|<span data-ttu-id="abd1c-183">31</span><span class="sxs-lookup"><span data-stu-id="abd1c-183">31</span></span>|  
|<span data-ttu-id="abd1c-184">9</span><span class="sxs-lookup"><span data-stu-id="abd1c-184">9</span></span>|<span data-ttu-id="abd1c-185">9月 (Kugatsu)</span><span class="sxs-lookup"><span data-stu-id="abd1c-185">9月 (Kugatsu)</span></span>|<span data-ttu-id="abd1c-186">9 月</span><span class="sxs-lookup"><span data-stu-id="abd1c-186">September</span></span>|<span data-ttu-id="abd1c-187">30</span><span class="sxs-lookup"><span data-stu-id="abd1c-187">30</span></span>|<span data-ttu-id="abd1c-188">30</span><span class="sxs-lookup"><span data-stu-id="abd1c-188">30</span></span>|  
|<span data-ttu-id="abd1c-189">10</span><span class="sxs-lookup"><span data-stu-id="abd1c-189">10</span></span>|<span data-ttu-id="abd1c-190">10 月 (Juugatsu)</span><span class="sxs-lookup"><span data-stu-id="abd1c-190">10月 (Juugatsu)</span></span>|<span data-ttu-id="abd1c-191">10 月</span><span class="sxs-lookup"><span data-stu-id="abd1c-191">October</span></span>|<span data-ttu-id="abd1c-192">31</span><span class="sxs-lookup"><span data-stu-id="abd1c-192">31</span></span>|<span data-ttu-id="abd1c-193">31</span><span class="sxs-lookup"><span data-stu-id="abd1c-193">31</span></span>|  
|<span data-ttu-id="abd1c-194">11</span><span class="sxs-lookup"><span data-stu-id="abd1c-194">11</span></span>|<span data-ttu-id="abd1c-195">11 月 (Juuichigatsu)</span><span class="sxs-lookup"><span data-stu-id="abd1c-195">11月 (Juuichigatsu)</span></span>|<span data-ttu-id="abd1c-196">11 月</span><span class="sxs-lookup"><span data-stu-id="abd1c-196">November</span></span>|<span data-ttu-id="abd1c-197">30</span><span class="sxs-lookup"><span data-stu-id="abd1c-197">30</span></span>|<span data-ttu-id="abd1c-198">30</span><span class="sxs-lookup"><span data-stu-id="abd1c-198">30</span></span>|  
|<span data-ttu-id="abd1c-199">12</span><span class="sxs-lookup"><span data-stu-id="abd1c-199">12</span></span>|<span data-ttu-id="abd1c-200">12 月 (Juunigatsu)</span><span class="sxs-lookup"><span data-stu-id="abd1c-200">12月 (Juunigatsu)</span></span>|<span data-ttu-id="abd1c-201">12 月</span><span class="sxs-lookup"><span data-stu-id="abd1c-201">December</span></span>|<span data-ttu-id="abd1c-202">31</span><span class="sxs-lookup"><span data-stu-id="abd1c-202">31</span></span>|<span data-ttu-id="abd1c-203">31</span><span class="sxs-lookup"><span data-stu-id="abd1c-203">31</span></span>|  
  
 <span data-ttu-id="abd1c-204">Nigatsu，這相當於 2 月的西曆月份，有 29 天，閏年和 28。</span><span class="sxs-lookup"><span data-stu-id="abd1c-204">Nigatsu, which is equivalent to the Gregorian calendar month of February, has 29 days during leap years and 28 during common years.</span></span>  
  
 <span data-ttu-id="abd1c-205">日期年 1 月 1，2001 A.D.</span><span class="sxs-lookup"><span data-stu-id="abd1c-205">The date January 1, 2001 A.D.</span></span> <span data-ttu-id="abd1c-206">西曆中就相當於 Ichigatsu 日本曆法的平成 13 年中的第一天。</span><span class="sxs-lookup"><span data-stu-id="abd1c-206">in the Gregorian calendar is equivalent to the first day of Ichigatsu in the year Heisei 13 in the Japanese calendar.</span></span>  
  
 <span data-ttu-id="abd1c-207">如果<xref:System.Globalization.JapaneseCalendar>是日文的文化特性的現行曆法<xref:System.DateTime.Parse%2A?displayProperty=nameWithType>辨識前一年的紀元縮寫。</span><span class="sxs-lookup"><span data-stu-id="abd1c-207">If the <xref:System.Globalization.JapaneseCalendar> is the current calendar of the Japanese culture, <xref:System.DateTime.Parse%2A?displayProperty=nameWithType> recognizes the era abbreviations in front of the year.</span></span> <span data-ttu-id="abd1c-208">縮寫是單一字元不區分大小寫英文字母縮寫或單一字元漢字縮寫。</span><span class="sxs-lookup"><span data-stu-id="abd1c-208">The abbreviation is either the single-character case-insensitive Latin alphabet abbreviation or the single-character Kanji abbreviation.</span></span> <span data-ttu-id="abd1c-209">xref:System.DateTime.Parse%2A?displayProperty=nameWithType > 也將"1"或元年 （元年） 識別為第一年的紀元。</span><span class="sxs-lookup"><span data-stu-id="abd1c-209">xref:System.DateTime.Parse%2A?displayProperty=nameWithType> also recognizes either "1" or Gannen (元年) as the first year of an era.</span></span>
  
 <span data-ttu-id="abd1c-210">每個<xref:System.Globalization.CultureInfo>物件支援一組的行事曆。</span><span class="sxs-lookup"><span data-stu-id="abd1c-210">Each <xref:System.Globalization.CultureInfo> object supports a set of calendars.</span></span> <span data-ttu-id="abd1c-211"><xref:System.Globalization.CultureInfo.Calendar%2A>屬性傳回的文化特性的預設月曆，<xref:System.Globalization.CultureInfo.OptionalCalendars%2A>屬性會傳回陣列，包含所有支援的文化特性的行事曆。</span><span class="sxs-lookup"><span data-stu-id="abd1c-211">The <xref:System.Globalization.CultureInfo.Calendar%2A> property returns the default calendar for the culture, and the <xref:System.Globalization.CultureInfo.OptionalCalendars%2A> property returns an array containing all the calendars supported by the culture.</span></span> <span data-ttu-id="abd1c-212">若要變更所使用的行事曆<xref:System.Globalization.CultureInfo>，將<xref:System.Globalization.DateTimeFormatInfo.Calendar%2A?displayProperty=nameWithType>屬性，以新<xref:System.Globalization.Calendar>。</span><span class="sxs-lookup"><span data-stu-id="abd1c-212">To change the calendar used by a <xref:System.Globalization.CultureInfo>, set the <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A?displayProperty=nameWithType> property to a new <xref:System.Globalization.Calendar>.</span></span>
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Globalization.Calendar" />
    <altmember cref="T:System.Globalization.GregorianCalendar" />
    <altmember cref="P:System.Globalization.CultureInfo.Calendar" />
    <altmember cref="P:System.Globalization.CultureInfo.OptionalCalendars" />
    <related type="Article" href="~/docs/standard/datetime/working-with-calendars.md"><span data-ttu-id="abd1c-213">使用行事曆</span><span class="sxs-lookup"><span data-stu-id="abd1c-213">Working with Calendars</span></span></related>
    <related type="ExternalDocumentation" href="https://code.msdn.microsoft.com/NET-Framework-4-Calendar-3360a84a"><span data-ttu-id="abd1c-214">範例：行事曆週範圍公用程式</span><span class="sxs-lookup"><span data-stu-id="abd1c-214">Sample: Calendar Week Range Utility</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public JapaneseCalendar ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.JapaneseCalendar.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; JapaneseCalendar();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="abd1c-215">初始化 <see cref="T:System.Globalization.JapaneseCalendar" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="abd1c-215">Initializes a new instance of the <see cref="T:System.Globalization.JapaneseCalendar" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.TypeInitializationException"><span data-ttu-id="abd1c-216">由於缺少文化特性資訊，無法初始化 <see cref="T:System.Globalization.JapaneseCalendar" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="abd1c-216">Unable to initialize a <see cref="T:System.Globalization.JapaneseCalendar" /> object because of missing culture information.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddMonths">
      <MemberSignature Language="C#" Value="public override DateTime AddMonths (DateTime time, int months);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.DateTime AddMonths(valuetype System.DateTime time, int32 months) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.JapaneseCalendar.AddMonths(System.DateTime,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function AddMonths (time As DateTime, months As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override DateTime AddMonths(DateTime time, int months);" />
      <MemberSignature Language="F#" Value="override this.AddMonths : DateTime * int -&gt; DateTime" Usage="japaneseCalendar.AddMonths (time, months)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
        <Parameter Name="months" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="time"><span data-ttu-id="abd1c-217">要將月份加入的 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="abd1c-217">The <see cref="T:System.DateTime" /> to which to add months.</span></span></param>
        <param name="months"><span data-ttu-id="abd1c-218">要加入的月數。</span><span class="sxs-lookup"><span data-stu-id="abd1c-218">The number of months to add.</span></span></param>
        <summary><span data-ttu-id="abd1c-219">傳回與指定 <see cref="T:System.DateTime" /> 相差指定月數的 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="abd1c-219">Returns a <see cref="T:System.DateTime" /> that is the specified number of months away from the specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="abd1c-220"><see cref="T:System.DateTime" />，由將指定的月數加入指定的 <see cref="T:System.DateTime" /> 所產生。</span><span class="sxs-lookup"><span data-stu-id="abd1c-220">The <see cref="T:System.DateTime" /> that results from adding the specified number of months to the specified <see cref="T:System.DateTime" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="abd1c-221">產生的日期部分<xref:System.DateTime>產生的日期不在產生的月份，產生的 year 的有效日期會受到影響。</span><span class="sxs-lookup"><span data-stu-id="abd1c-221">The day part of the resulting <xref:System.DateTime> is affected if the resulting day is not a valid day in the resulting month of the resulting year.</span></span> <span data-ttu-id="abd1c-222">它會變更為產生的 year 之產生的月份中最後一個有效的日期。</span><span class="sxs-lookup"><span data-stu-id="abd1c-222">It is changed to the last valid day in the resulting month of the resulting year.</span></span> <span data-ttu-id="abd1c-223">產生的年份部分<xref:System.DateTime>產生的月份超出指定的年份會受到影響<xref:System.DateTime>。</span><span class="sxs-lookup"><span data-stu-id="abd1c-223">The year part of the resulting <xref:System.DateTime> is affected if the resulting month is outside the year of the specified <xref:System.DateTime>.</span></span> <span data-ttu-id="abd1c-224">產生的紀元一部分<xref:System.DateTime>產生的 year 超出指定的紀元會受到影響<xref:System.DateTime>。</span><span class="sxs-lookup"><span data-stu-id="abd1c-224">The era part of the resulting <xref:System.DateTime> is affected if the resulting year is outside the era of the specified <xref:System.DateTime>.</span></span> <span data-ttu-id="abd1c-225">產生的日期時間部分<xref:System.DateTime>維持不變，與指定<xref:System.DateTime>。</span><span class="sxs-lookup"><span data-stu-id="abd1c-225">The time-of-day part of the resulting <xref:System.DateTime> remains the same as the specified <xref:System.DateTime>.</span></span>  
  
 <span data-ttu-id="abd1c-226">比方說，如果指定的月份是 Juugatsu （年 10 月），有 31 天內，指定某一天是該月份中，第 31 天和`months`為 6 時，產生的 year 是個以上的指定年份中，產生的月份是 Shigatsu （4 月） 和產生的日期為 30 天，也就是 Shigatsu （4 月） 中的最後一天。</span><span class="sxs-lookup"><span data-stu-id="abd1c-226">For example, if the specified month is Juugatsu (October), which has 31 days, the specified day is the 31st day of that month, and `months` is 6, the resulting year is one more than the specified year, the resulting month is Shigatsu (April), and the resulting day is the 30th day, which is the last day in Shigatsu (April).</span></span>  
  
 <span data-ttu-id="abd1c-227">如果`months`是負數，產生<xref:System.DateTime>早於指定<xref:System.DateTime>。</span><span class="sxs-lookup"><span data-stu-id="abd1c-227">If `months` is negative, the resulting <xref:System.DateTime> is earlier than the specified <xref:System.DateTime>.</span></span>  
  
 <span data-ttu-id="abd1c-228"><xref:System.DateTime.Kind%2A>屬性傳回之<xref:System.DateTime>值一律等於<xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="abd1c-228">The <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value always equals <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>.</span></span> <span data-ttu-id="abd1c-229">您可以保留<xref:System.DateTime.Kind%2A>的屬性`time`藉由呼叫的參數<xref:System.DateTime.SpecifyKind%2A?displayProperty=nameWithType>方法，如下列範例所示。</span><span class="sxs-lookup"><span data-stu-id="abd1c-229">You can preserve the <xref:System.DateTime.Kind%2A> property of the `time` parameter by calling the <xref:System.DateTime.SpecifyKind%2A?displayProperty=nameWithType> method, as the following example shows.</span></span>  
  
 [!code-csharp[System.Globalization.Calendar.AddMethods#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/cs/add1.cs#5)]
 [!code-vb[System.Globalization.Calendar.AddMethods#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/vb/add1.vb#5)]  
  
   
  
## Examples  
 <span data-ttu-id="abd1c-230">下列程式碼範例會顯示數個元件的值<xref:System.DateTime>方面日本曆法。</span><span class="sxs-lookup"><span data-stu-id="abd1c-230">The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Japanese calendar.</span></span>  
  
 [!code-cpp[System.Globalization.JapaneseCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar_AddGet/CPP/japanesecalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.JapaneseCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar_AddGet/CS/japanesecalendar_addget.cs#1)]
 [!code-vb[System.Globalization.JapaneseCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar_AddGet/VB/japanesecalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="abd1c-231">產生的 <see cref="T:System.DateTime" /> 在支援的範圍之外。</span><span class="sxs-lookup"><span data-stu-id="abd1c-231">The resulting <see cref="T:System.DateTime" /> is outside the supported range.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="abd1c-232"><paramref name="months" /> 小於 -120000。</span><span class="sxs-lookup"><span data-stu-id="abd1c-232"><paramref name="months" /> is less than -120000.</span></span>  
  
<span data-ttu-id="abd1c-233">-或-</span><span class="sxs-lookup"><span data-stu-id="abd1c-233">-or-</span></span> 
 <span data-ttu-id="abd1c-234"><paramref name="months" /> 大於 120000。</span><span class="sxs-lookup"><span data-stu-id="abd1c-234"><paramref name="months" /> is greater than 120000.</span></span></exception>
        <altmember cref="T:System.DateTime" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.AddYears(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddWeeks(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddDays(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddHours(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMinutes(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddSeconds(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMilliseconds(System.DateTime,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="AddYears">
      <MemberSignature Language="C#" Value="public override DateTime AddYears (DateTime time, int years);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.DateTime AddYears(valuetype System.DateTime time, int32 years) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.JapaneseCalendar.AddYears(System.DateTime,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function AddYears (time As DateTime, years As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override DateTime AddYears(DateTime time, int years);" />
      <MemberSignature Language="F#" Value="override this.AddYears : DateTime * int -&gt; DateTime" Usage="japaneseCalendar.AddYears (time, years)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
        <Parameter Name="years" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="time"><span data-ttu-id="abd1c-235">要將年份加入的 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="abd1c-235">The <see cref="T:System.DateTime" /> to which to add years.</span></span></param>
        <param name="years"><span data-ttu-id="abd1c-236">要加入的年數。</span><span class="sxs-lookup"><span data-stu-id="abd1c-236">The number of years to add.</span></span></param>
        <summary><span data-ttu-id="abd1c-237">傳回與指定 <see cref="T:System.DateTime" /> 相差指定年數的 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="abd1c-237">Returns a <see cref="T:System.DateTime" /> that is the specified number of years away from the specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="abd1c-238"><see cref="T:System.DateTime" />，由將指定的年數加入指定的 <see cref="T:System.DateTime" /> 所產生。</span><span class="sxs-lookup"><span data-stu-id="abd1c-238">The <see cref="T:System.DateTime" /> that results from adding the specified number of years to the specified <see cref="T:System.DateTime" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="abd1c-239">產生的日期部分<xref:System.DateTime>產生的日期不在產生的月份，產生的 year 的有效日期會受到影響。</span><span class="sxs-lookup"><span data-stu-id="abd1c-239">The day part of the resulting <xref:System.DateTime> is affected if the resulting day is not a valid day in the resulting month of the resulting year.</span></span> <span data-ttu-id="abd1c-240">它會變更為產生的 year 之產生的月份中最後一個有效的日期。</span><span class="sxs-lookup"><span data-stu-id="abd1c-240">It is changed to the last valid day in the resulting month of the resulting year.</span></span> <span data-ttu-id="abd1c-241">產生的月份部分<xref:System.DateTime>維持不變，與指定<xref:System.DateTime>。</span><span class="sxs-lookup"><span data-stu-id="abd1c-241">The month part of the resulting <xref:System.DateTime> remains the same as the specified <xref:System.DateTime>.</span></span> <span data-ttu-id="abd1c-242">產生的紀元一部分<xref:System.DateTime>產生的 year 超出指定的紀元會受到影響<xref:System.DateTime>。</span><span class="sxs-lookup"><span data-stu-id="abd1c-242">The era part of the resulting <xref:System.DateTime> is affected if the resulting year is outside the era of the specified <xref:System.DateTime>.</span></span> <span data-ttu-id="abd1c-243">產生的日期時間部分<xref:System.DateTime>維持不變，與指定<xref:System.DateTime>。</span><span class="sxs-lookup"><span data-stu-id="abd1c-243">The time-of-day part of the resulting <xref:System.DateTime> remains the same as the specified <xref:System.DateTime>.</span></span>  
  
 <span data-ttu-id="abd1c-244">比方說，Nigatsu （二月） 有以外的 28 天，閏年有 29 天期間。</span><span class="sxs-lookup"><span data-stu-id="abd1c-244">For example, Nigatsu (February) has 28 days except during leap years when it has 29 days.</span></span> <span data-ttu-id="abd1c-245">如果指定的日期是 Nigatsu （二月） 第 29 天閏年的值和的`years`為 1，則產生的日期會在下一年度 Nigatsu （二月） 的第 28 天。</span><span class="sxs-lookup"><span data-stu-id="abd1c-245">If the specified date is the 29th day of Nigatsu (February) in a leap year and the value of `years` is 1, the resulting date will be the 28th day of Nigatsu (February) in the following year.</span></span>  
  
 <span data-ttu-id="abd1c-246">如果`years`是負數，產生<xref:System.DateTime>早於指定<xref:System.DateTime>。</span><span class="sxs-lookup"><span data-stu-id="abd1c-246">If `years` is negative, the resulting <xref:System.DateTime> is earlier than the specified <xref:System.DateTime>.</span></span>  
  
 <span data-ttu-id="abd1c-247"><xref:System.DateTime.Kind%2A>屬性傳回之<xref:System.DateTime>值一律等於<xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="abd1c-247">The <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value always equals <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>.</span></span> <span data-ttu-id="abd1c-248">您可以保留<xref:System.DateTime.Kind%2A>的屬性`time`藉由呼叫的參數<xref:System.DateTime.SpecifyKind%2A?displayProperty=nameWithType>方法，如下列範例所示。</span><span class="sxs-lookup"><span data-stu-id="abd1c-248">You can preserve the <xref:System.DateTime.Kind%2A> property of the `time` parameter by calling the <xref:System.DateTime.SpecifyKind%2A?displayProperty=nameWithType> method, as the following example shows.</span></span>  
  
 [!code-csharp[System.Globalization.Calendar.AddMethods#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/cs/add1.cs#8)]
 [!code-vb[System.Globalization.Calendar.AddMethods#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/vb/add1.vb#8)]  
  
   
  
## Examples  
 <span data-ttu-id="abd1c-249">下列程式碼範例會顯示數個元件的值<xref:System.DateTime>方面日本曆法。</span><span class="sxs-lookup"><span data-stu-id="abd1c-249">The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Japanese calendar.</span></span>  
  
 [!code-cpp[System.Globalization.JapaneseCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar_AddGet/CPP/japanesecalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.JapaneseCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar_AddGet/CS/japanesecalendar_addget.cs#1)]
 [!code-vb[System.Globalization.JapaneseCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar_AddGet/VB/japanesecalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="abd1c-250">產生的 <see cref="T:System.DateTime" /> 在支援的範圍之外。</span><span class="sxs-lookup"><span data-stu-id="abd1c-250">The resulting <see cref="T:System.DateTime" /> is outside the supported range.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="abd1c-251"><paramref name="time" /> 在 <see cref="T:System.Globalization.JapaneseCalendar" /> 型別支援的範圍之外。</span><span class="sxs-lookup"><span data-stu-id="abd1c-251"><paramref name="time" /> is outside the supported range of the <see cref="T:System.Globalization.JapaneseCalendar" /> type.</span></span>  
  
<span data-ttu-id="abd1c-252">-或-</span><span class="sxs-lookup"><span data-stu-id="abd1c-252">-or-</span></span> 
 <span data-ttu-id="abd1c-253"><paramref name="years" /> 小於 -10,000 或大於 10,000。</span><span class="sxs-lookup"><span data-stu-id="abd1c-253"><paramref name="years" /> is less than -10,000 or greater than 10,000.</span></span></exception>
        <altmember cref="T:System.DateTime" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.AddMonths(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddWeeks(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddDays(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddHours(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMinutes(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddSeconds(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMilliseconds(System.DateTime,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="AlgorithmType">
      <MemberSignature Language="C#" Value="public override System.Globalization.CalendarAlgorithmType AlgorithmType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Globalization.CalendarAlgorithmType AlgorithmType" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.JapaneseCalendar.AlgorithmType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property AlgorithmType As CalendarAlgorithmType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Globalization::CalendarAlgorithmType AlgorithmType { System::Globalization::CalendarAlgorithmType get(); };" />
      <MemberSignature Language="F#" Value="member this.AlgorithmType : System.Globalization.CalendarAlgorithmType" Usage="System.Globalization.JapaneseCalendar.AlgorithmType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.CalendarAlgorithmType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="abd1c-254">取得值，指出目前的月曆是以陽曆為主、以陰曆為主，還是同時包含兩種曆法。</span><span class="sxs-lookup"><span data-stu-id="abd1c-254">Gets a value that indicates whether the current calendar is solar-based, lunar-based, or a combination of both.</span></span></summary>
        <value><span data-ttu-id="abd1c-255">一律傳回 <see cref="F:System.Globalization.CalendarAlgorithmType.SolarCalendar" />。</span><span class="sxs-lookup"><span data-stu-id="abd1c-255">Always returns <see cref="F:System.Globalization.CalendarAlgorithmType.SolarCalendar" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="abd1c-256">下列範例會使用反映來具現化每個<xref:System.Globalization.Calendar>型別在.NET Framework 中找到，並顯示的值及其<xref:System.Globalization.Calendar.AlgorithmType%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="abd1c-256">The following example uses reflection to instantiate each <xref:System.Globalization.Calendar> type found in the .NET Framework and displays the value of its <xref:System.Globalization.Calendar.AlgorithmType%2A> property.</span></span>  
  
 [!code-csharp[System.Globalization.Calendar.AlgorithmType#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.algorithmtype/cs/algorithmtype1.cs#1)]
 [!code-vb[System.Globalization.Calendar.AlgorithmType#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.algorithmtype/vb/algorithmtype1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Eras">
      <MemberSignature Language="C#" Value="public override int[] Eras { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32[] Eras" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.JapaneseCalendar.Eras" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Eras As Integer()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;int&gt; ^ Eras { cli::array &lt;int&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Eras : int[]" Usage="System.Globalization.JapaneseCalendar.Eras" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="abd1c-257">取得 <see cref="T:System.Globalization.JapaneseCalendar" /> 中的紀元清單。</span><span class="sxs-lookup"><span data-stu-id="abd1c-257">Gets the list of eras in the <see cref="T:System.Globalization.JapaneseCalendar" />.</span></span></summary>
        <value><span data-ttu-id="abd1c-258">整數陣列，表示 <see cref="T:System.Globalization.JapaneseCalendar" /> 中的紀元。</span><span class="sxs-lookup"><span data-stu-id="abd1c-258">An array of integers that represents the eras in the <see cref="T:System.Globalization.JapaneseCalendar" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="abd1c-259">日本曆法會辨識為每個皇帝 reign 一個紀元。</span><span class="sxs-lookup"><span data-stu-id="abd1c-259">The Japanese calendar recognizes one era for every emperor's reign.</span></span> <span data-ttu-id="abd1c-260">目前紀元是平成時代，開始於 1989年西曆年。</span><span class="sxs-lookup"><span data-stu-id="abd1c-260">The current era is the Heisei era, which began in the Gregorian calendar year 1989.</span></span> <span data-ttu-id="abd1c-261">紀元名稱通常會顯示前一年。</span><span class="sxs-lookup"><span data-stu-id="abd1c-261">The era name is typically displayed before the year.</span></span> <span data-ttu-id="abd1c-262">例如，2001年西曆年是日文的日曆年度平成 13。</span><span class="sxs-lookup"><span data-stu-id="abd1c-262">For example, the Gregorian calendar year 2001 is the Japanese calendar year Heisei 13.</span></span> <span data-ttu-id="abd1c-263">請注意，第一年的時代稱為 「 元年。 」</span><span class="sxs-lookup"><span data-stu-id="abd1c-263">Note that the first year of an era is called "Gannen."</span></span> <span data-ttu-id="abd1c-264">因此，西曆 1989 年是日文的日曆年度平成元年。</span><span class="sxs-lookup"><span data-stu-id="abd1c-264">Therefore, the Gregorian calendar year 1989 was the Japanese calendar year Heisei Gannen.</span></span>  

[!INCLUDE[japanese-era-note](~/includes/calendar-era.md)]

 <span data-ttu-id="abd1c-265">此類別會指派數字給紀元，如下所示：</span><span class="sxs-lookup"><span data-stu-id="abd1c-265">This class assigns numbers to the eras as follows:</span></span>  
  
|<span data-ttu-id="abd1c-266">GetEra 值</span><span class="sxs-lookup"><span data-stu-id="abd1c-266">GetEra value</span></span>|<span data-ttu-id="abd1c-267">紀元名稱</span><span class="sxs-lookup"><span data-stu-id="abd1c-267">Era Name</span></span>|<span data-ttu-id="abd1c-268">紀元縮寫</span><span class="sxs-lookup"><span data-stu-id="abd1c-268">Era Abbreviation</span></span>|<span data-ttu-id="abd1c-269">西曆日期</span><span class="sxs-lookup"><span data-stu-id="abd1c-269">Gregorian Dates</span></span>|  
|------------------|--------------|----------------------|---------------------|  
|<span data-ttu-id="abd1c-270">4</span><span class="sxs-lookup"><span data-stu-id="abd1c-270">4</span></span>|<span data-ttu-id="abd1c-271">平成 （平成）</span><span class="sxs-lookup"><span data-stu-id="abd1c-271">平成 (Heisei)</span></span>|<span data-ttu-id="abd1c-272">平 (H、 h)</span><span class="sxs-lookup"><span data-stu-id="abd1c-272">平 (H, h)</span></span>|<span data-ttu-id="abd1c-273">1989 年 1 月 8 日來呈現</span><span class="sxs-lookup"><span data-stu-id="abd1c-273">January 8, 1989 to present</span></span>|  
|<span data-ttu-id="abd1c-274">3</span><span class="sxs-lookup"><span data-stu-id="abd1c-274">3</span></span>|<span data-ttu-id="abd1c-275">昭和 (Showa)</span><span class="sxs-lookup"><span data-stu-id="abd1c-275">昭和 (Showa)</span></span>|<span data-ttu-id="abd1c-276">昭 （S，s）</span><span class="sxs-lookup"><span data-stu-id="abd1c-276">昭 (S, s)</span></span>|<span data-ttu-id="abd1c-277">1926 年 12 月 25 日 1989 年 1 月 7日，</span><span class="sxs-lookup"><span data-stu-id="abd1c-277">December 25, 1926 to January 7, 1989</span></span>|  
|<span data-ttu-id="abd1c-278">2</span><span class="sxs-lookup"><span data-stu-id="abd1c-278">2</span></span>|<span data-ttu-id="abd1c-279">大正 (Taisho)</span><span class="sxs-lookup"><span data-stu-id="abd1c-279">大正 (Taisho)</span></span>|<span data-ttu-id="abd1c-280">提名 （T，t）</span><span class="sxs-lookup"><span data-stu-id="abd1c-280">大 (T, t)</span></span>|<span data-ttu-id="abd1c-281">1912 年 7 月 30 日 1926 年 12 月 24日，</span><span class="sxs-lookup"><span data-stu-id="abd1c-281">July 30, 1912 to December 24, 1926</span></span>|  
|<span data-ttu-id="abd1c-282">1</span><span class="sxs-lookup"><span data-stu-id="abd1c-282">1</span></span>|<span data-ttu-id="abd1c-283">明治 （明治）</span><span class="sxs-lookup"><span data-stu-id="abd1c-283">明治 (Meiji)</span></span>|<span data-ttu-id="abd1c-284">明 （M，m）</span><span class="sxs-lookup"><span data-stu-id="abd1c-284">明 (M, m)</span></span>|<span data-ttu-id="abd1c-285">1868 年 9 月 8 日 1912 年 7 月 29日，</span><span class="sxs-lookup"><span data-stu-id="abd1c-285">September 8, 1868 to July 29, 1912</span></span>|  
  
 <span data-ttu-id="abd1c-286">這個類別會處理從 9 月 8 年明治 1 (January 1，1868 西曆的) 中的日期。</span><span class="sxs-lookup"><span data-stu-id="abd1c-286">This class handles dates from September 8 in the year Meiji 1 (January 1, 1868 of the Gregorian calendar).</span></span> <span data-ttu-id="abd1c-287">雖然日本曆法從不陰曆到陽曆明治 6 (1873 西曆的) 中，此實作是以陽曆的行事曆為根據。</span><span class="sxs-lookup"><span data-stu-id="abd1c-287">Although the Japanese calendar was switched from a lunar calendar to a solar calendar in the year Meiji 6 (1873 of the Gregorian calendar), this implementation is based on the solar calendar only.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="abd1c-288">在未來加入其他的紀元，應用程式可能會遇到超過預期的四個紀元的日本曆法。</span><span class="sxs-lookup"><span data-stu-id="abd1c-288">Should additional eras be added in the future, applications may encounter more than the expected four eras for the Japanese calendar.</span></span> <span data-ttu-id="abd1c-289">應該測試應用程式，以確保它們會繼續運作發生這種情況;請參閱[日本曆法的紀元處理](https://go.microsoft.com/fwlink/p/?LinkId=239618)。</span><span class="sxs-lookup"><span data-stu-id="abd1c-289">Applications should be tested to ensure that they continue to work in such an event; see [Era Handling for the Japanese Calendar](https://go.microsoft.com/fwlink/p/?LinkId=239618).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="abd1c-290">下列範例顯示中包含的值<xref:System.Globalization.JapaneseCalendar.Eras%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="abd1c-290">The following example displays the values contained in the <xref:System.Globalization.JapaneseCalendar.Eras%2A> property.</span></span>  
  
 [!code-cpp[System.Globalization.JapaneseCalendar.Eras#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar.Eras/CPP/yslin_japanesecalendar_eras.cpp#1)]
 [!code-csharp[System.Globalization.JapaneseCalendar.Eras#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar.Eras/CS/yslin_japanesecalendar_eras.cs#1)]
 [!code-vb[System.Globalization.JapaneseCalendar.Eras#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar.Eras/VB/yslin_japanesecalendar_eras.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
      </Docs>
    </Member>
    <Member MemberName="GetDayOfMonth">
      <MemberSignature Language="C#" Value="public override int GetDayOfMonth (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetDayOfMonth(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.JapaneseCalendar.GetDayOfMonth(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDayOfMonth (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetDayOfMonth(DateTime time);" />
      <MemberSignature Language="F#" Value="override this.GetDayOfMonth : DateTime -&gt; int" Usage="japaneseCalendar.GetDayOfMonth time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time"><span data-ttu-id="abd1c-291">要讀取的 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="abd1c-291">The <see cref="T:System.DateTime" /> to read.</span></span></param>
        <summary><span data-ttu-id="abd1c-292">傳回指定 <see cref="T:System.DateTime" /> 中月份的日期。</span><span class="sxs-lookup"><span data-stu-id="abd1c-292">Returns the day of the month in the specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="abd1c-293">從 1 到 31 的整數，表示指定 <see cref="T:System.DateTime" /> 中月份的日期。</span><span class="sxs-lookup"><span data-stu-id="abd1c-293">An integer from 1 to 31 that represents the day of the month in the specified <see cref="T:System.DateTime" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="abd1c-294">下列程式碼範例會顯示數個元件的值<xref:System.DateTime>方面日本曆法。</span><span class="sxs-lookup"><span data-stu-id="abd1c-294">The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Japanese calendar.</span></span>  
  
 [!code-cpp[System.Globalization.JapaneseCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar_AddGet/CPP/japanesecalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.JapaneseCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar_AddGet/CS/japanesecalendar_addget.cs#1)]
 [!code-vb[System.Globalization.JapaneseCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar_AddGet/VB/japanesecalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTime.Day" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.GetEra(System.DateTime)" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.GetYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.GetMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.GetDayOfYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.GetDayOfWeek(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
      </Docs>
    </Member>
    <Member MemberName="GetDayOfWeek">
      <MemberSignature Language="C#" Value="public override DayOfWeek GetDayOfWeek (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.DayOfWeek GetDayOfWeek(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.JapaneseCalendar.GetDayOfWeek(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDayOfWeek (time As DateTime) As DayOfWeek" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override DayOfWeek GetDayOfWeek(DateTime time);" />
      <MemberSignature Language="F#" Value="override this.GetDayOfWeek : DateTime -&gt; DayOfWeek" Usage="japaneseCalendar.GetDayOfWeek time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DayOfWeek</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time"><span data-ttu-id="abd1c-295">要讀取的 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="abd1c-295">The <see cref="T:System.DateTime" /> to read.</span></span></param>
        <summary><span data-ttu-id="abd1c-296">傳回指定 <see cref="T:System.DateTime" /> 中的星期。</span><span class="sxs-lookup"><span data-stu-id="abd1c-296">Returns the day of the week in the specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="abd1c-297"><see cref="T:System.DayOfWeek" /> 值，表示指定 <see cref="T:System.DateTime" /> 中的星期。</span><span class="sxs-lookup"><span data-stu-id="abd1c-297">A <see cref="T:System.DayOfWeek" /> value that represents the day of the week in the specified <see cref="T:System.DateTime" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="abd1c-298"><xref:System.DayOfWeek>值如下所示：</span><span class="sxs-lookup"><span data-stu-id="abd1c-298">The <xref:System.DayOfWeek> values are as follows:</span></span>  
  
|<span data-ttu-id="abd1c-299">DayOfWeek 值</span><span class="sxs-lookup"><span data-stu-id="abd1c-299">DayOfWeek value</span></span>|<span data-ttu-id="abd1c-300">這表示</span><span class="sxs-lookup"><span data-stu-id="abd1c-300">which indicates</span></span>|  
|---------------------|---------------------|  
|<span data-ttu-id="abd1c-301">星期日</span><span class="sxs-lookup"><span data-stu-id="abd1c-301">Sunday</span></span>|<span data-ttu-id="abd1c-302">日曜日 (Nichiyoubi)</span><span class="sxs-lookup"><span data-stu-id="abd1c-302">日曜日 (Nichiyoubi)</span></span>|  
|<span data-ttu-id="abd1c-303">週一</span><span class="sxs-lookup"><span data-stu-id="abd1c-303">Monday</span></span>|<span data-ttu-id="abd1c-304">月曜日 (Getsuyoubi)</span><span class="sxs-lookup"><span data-stu-id="abd1c-304">月曜日 (Getsuyoubi)</span></span>|  
|<span data-ttu-id="abd1c-305">星期二</span><span class="sxs-lookup"><span data-stu-id="abd1c-305">Tuesday</span></span>|<span data-ttu-id="abd1c-306">火曜日 (Kayoubi)</span><span class="sxs-lookup"><span data-stu-id="abd1c-306">火曜日 (Kayoubi)</span></span>|  
|<span data-ttu-id="abd1c-307">週三</span><span class="sxs-lookup"><span data-stu-id="abd1c-307">Wednesday</span></span>|<span data-ttu-id="abd1c-308">水曜日 (Suiyoubi)</span><span class="sxs-lookup"><span data-stu-id="abd1c-308">水曜日 (Suiyoubi)</span></span>|  
|<span data-ttu-id="abd1c-309">星期四</span><span class="sxs-lookup"><span data-stu-id="abd1c-309">Thursday</span></span>|<span data-ttu-id="abd1c-310">木曜日 (Mokuyoubi)</span><span class="sxs-lookup"><span data-stu-id="abd1c-310">木曜日 (Mokuyoubi)</span></span>|  
|<span data-ttu-id="abd1c-311">週五</span><span class="sxs-lookup"><span data-stu-id="abd1c-311">Friday</span></span>|<span data-ttu-id="abd1c-312">金曜日 (Kinyoubi)</span><span class="sxs-lookup"><span data-stu-id="abd1c-312">金曜日 (Kinyoubi)</span></span>|  
|<span data-ttu-id="abd1c-313">星期六</span><span class="sxs-lookup"><span data-stu-id="abd1c-313">Saturday</span></span>|<span data-ttu-id="abd1c-314">土曜日 (Doyoubi)</span><span class="sxs-lookup"><span data-stu-id="abd1c-314">土曜日 (Doyoubi)</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="abd1c-315">下列程式碼範例會顯示數個元件的值<xref:System.DateTime>方面日本曆法。</span><span class="sxs-lookup"><span data-stu-id="abd1c-315">The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Japanese calendar.</span></span>  
  
 [!code-cpp[System.Globalization.JapaneseCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar_AddGet/CPP/japanesecalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.JapaneseCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar_AddGet/CS/japanesecalendar_addget.cs#1)]
 [!code-vb[System.Globalization.JapaneseCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar_AddGet/VB/japanesecalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTime.DayOfWeek" />
        <altmember cref="T:System.DayOfWeek" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.GetEra(System.DateTime)" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.GetYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.GetMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.GetDayOfYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.GetDayOfMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
      </Docs>
    </Member>
    <Member MemberName="GetDayOfYear">
      <MemberSignature Language="C#" Value="public override int GetDayOfYear (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetDayOfYear(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.JapaneseCalendar.GetDayOfYear(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDayOfYear (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetDayOfYear(DateTime time);" />
      <MemberSignature Language="F#" Value="override this.GetDayOfYear : DateTime -&gt; int" Usage="japaneseCalendar.GetDayOfYear time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time"><span data-ttu-id="abd1c-316">要讀取的 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="abd1c-316">The <see cref="T:System.DateTime" /> to read.</span></span></param>
        <summary><span data-ttu-id="abd1c-317">傳回指定之 <see cref="T:System.DateTime" /> 中一年中的日期。</span><span class="sxs-lookup"><span data-stu-id="abd1c-317">Returns the day of the year in the specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="abd1c-318">從 1 到 366 的整數，表示指定之 <see cref="T:System.DateTime" /> 中的年份日期。</span><span class="sxs-lookup"><span data-stu-id="abd1c-318">An integer from 1 to 366 that represents the day of the year in the specified <see cref="T:System.DateTime" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="abd1c-319">年中的日被指從當年第一日的天數。</span><span class="sxs-lookup"><span data-stu-id="abd1c-319">The day of the year is defined as the number of days from the first day of the year.</span></span> <span data-ttu-id="abd1c-320">比方說，<xref:System.Globalization.JapaneseCalendar.GetDayOfYear%2A>的第一個月的第一天，則傳回 1，並<xref:System.Globalization.JapaneseCalendar.GetDayOfYear%2A>最後一天的最後一個月會傳回總天數中該年，也就是相同的值所傳回的<xref:System.Globalization.JapaneseCalendar.GetDaysInYear%2A>。</span><span class="sxs-lookup"><span data-stu-id="abd1c-320">For example, <xref:System.Globalization.JapaneseCalendar.GetDayOfYear%2A> for the first day of the first month returns 1, and <xref:System.Globalization.JapaneseCalendar.GetDayOfYear%2A> for the last day of the last month returns the total number of days in that year, which is the same value as that returned by <xref:System.Globalization.JapaneseCalendar.GetDaysInYear%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="abd1c-321">下列程式碼範例會顯示數個元件的值<xref:System.DateTime>方面日本曆法。</span><span class="sxs-lookup"><span data-stu-id="abd1c-321">The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Japanese calendar.</span></span>  
  
 [!code-cpp[System.Globalization.JapaneseCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar_AddGet/CPP/japanesecalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.JapaneseCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar_AddGet/CS/japanesecalendar_addget.cs#1)]
 [!code-vb[System.Globalization.JapaneseCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar_AddGet/VB/japanesecalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTime.DayOfYear" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.GetEra(System.DateTime)" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.GetYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.GetMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.GetDayOfMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.GetDayOfWeek(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
      </Docs>
    </Member>
    <Member MemberName="GetDaysInMonth">
      <MemberSignature Language="C#" Value="public override int GetDaysInMonth (int year, int month, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetDaysInMonth(int32 year, int32 month, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.JapaneseCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDaysInMonth (year As Integer, month As Integer, era As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetDaysInMonth(int year, int month, int era);" />
      <MemberSignature Language="F#" Value="override this.GetDaysInMonth : int * int * int -&gt; int" Usage="japaneseCalendar.GetDaysInMonth (year, month, era)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="abd1c-322">表示年份的整數。</span><span class="sxs-lookup"><span data-stu-id="abd1c-322">An integer that represents the year.</span></span></param>
        <param name="month"><span data-ttu-id="abd1c-323">從 1 到 12 的整數，表示月份。</span><span class="sxs-lookup"><span data-stu-id="abd1c-323">An integer from 1 to 12 that represents the month.</span></span></param>
        <param name="era"><span data-ttu-id="abd1c-324">表示紀元的整數。</span><span class="sxs-lookup"><span data-stu-id="abd1c-324">An integer that represents the era.</span></span></param>
        <summary><span data-ttu-id="abd1c-325">傳回在指定紀元的指定年份的指定月份中的日數。</span><span class="sxs-lookup"><span data-stu-id="abd1c-325">Returns the number of days in the specified month in the specified year in the specified era.</span></span></summary>
        <returns><span data-ttu-id="abd1c-326">在指定紀元的指定年份的指定月份中的日數。</span><span class="sxs-lookup"><span data-stu-id="abd1c-326">The number of days in the specified month in the specified year in the specified era.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="abd1c-327">比方說，這個方法傳回 28 或 29 Nigatsu (二月`month`= 2)，這取決於是否`year`是否為閏年。</span><span class="sxs-lookup"><span data-stu-id="abd1c-327">For example, this method returns 28 or 29 for Nigatsu (February, `month` = 2), depending on whether `year` is a leap year.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="abd1c-328">下列程式碼範例會呼叫<xref:System.Globalization.JapaneseCalendar.GetDaysInMonth%2A>每五年的每個紀元中的第二個月內。</span><span class="sxs-lookup"><span data-stu-id="abd1c-328">The following code example calls <xref:System.Globalization.JapaneseCalendar.GetDaysInMonth%2A> for the second month in each of five years in each era.</span></span>  
  
 [!code-cpp[System.Globalization.JapaneseCalendar.GetDaysInMonth#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar.GetDaysInMonth/CPP/japanesecalendar_getdaysinmonth.cpp#1)]
 [!code-csharp[System.Globalization.JapaneseCalendar.GetDaysInMonth#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar.GetDaysInMonth/CS/japanesecalendar_getdaysinmonth.cs#1)]
 [!code-vb[System.Globalization.JapaneseCalendar.GetDaysInMonth#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar.GetDaysInMonth/VB/japanesecalendar_getdaysinmonth.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="abd1c-329"><paramref name="year" /> 不在曆法支援的範圍內。</span><span class="sxs-lookup"><span data-stu-id="abd1c-329"><paramref name="year" /> is outside the range supported by the calendar.</span></span>  
  
<span data-ttu-id="abd1c-330">-或-</span><span class="sxs-lookup"><span data-stu-id="abd1c-330">-or-</span></span> 
 <span data-ttu-id="abd1c-331"><paramref name="month" /> 不在曆法支援的範圍內。</span><span class="sxs-lookup"><span data-stu-id="abd1c-331"><paramref name="month" /> is outside the range supported by the calendar.</span></span>  
  
<span data-ttu-id="abd1c-332">-或-</span><span class="sxs-lookup"><span data-stu-id="abd1c-332">-or-</span></span> 
 <span data-ttu-id="abd1c-333"><paramref name="era" /> 不在曆法支援的範圍內。</span><span class="sxs-lookup"><span data-stu-id="abd1c-333"><paramref name="era" /> is outside the range supported by the calendar.</span></span></exception>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="P:System.Globalization.JapaneseCalendar.Eras" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.GetMonthsInYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.GetDaysInYear(System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetDaysInYear">
      <MemberSignature Language="C#" Value="public override int GetDaysInYear (int year, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetDaysInYear(int32 year, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.JapaneseCalendar.GetDaysInYear(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDaysInYear (year As Integer, era As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetDaysInYear(int year, int era);" />
      <MemberSignature Language="F#" Value="override this.GetDaysInYear : int * int -&gt; int" Usage="japaneseCalendar.GetDaysInYear (year, era)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="abd1c-334">表示年份的整數。</span><span class="sxs-lookup"><span data-stu-id="abd1c-334">An integer that represents the year.</span></span></param>
        <param name="era"><span data-ttu-id="abd1c-335">表示紀元的整數。</span><span class="sxs-lookup"><span data-stu-id="abd1c-335">An integer that represents the era.</span></span></param>
        <summary><span data-ttu-id="abd1c-336">傳回在指定紀元的指定年份中的日數。</span><span class="sxs-lookup"><span data-stu-id="abd1c-336">Returns the number of days in the specified year in the specified era.</span></span></summary>
        <returns><span data-ttu-id="abd1c-337">在指定紀元的指定年份中的日數。</span><span class="sxs-lookup"><span data-stu-id="abd1c-337">The number of days in the specified year in the specified era.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="abd1c-338">比方說，這個方法會傳回 365 或 366，取決於是否`year`是否為閏年。</span><span class="sxs-lookup"><span data-stu-id="abd1c-338">For example, this method returns 365 or 366, depending on whether `year` is a leap year.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="abd1c-339">下列範例會呼叫<xref:System.Globalization.JapaneseCalendar.GetDaysInYear%2A>五年的每個紀元。</span><span class="sxs-lookup"><span data-stu-id="abd1c-339">The following example calls <xref:System.Globalization.JapaneseCalendar.GetDaysInYear%2A> for five years in each era.</span></span>  
  
 [!code-cpp[System.Globalization.JapaneseCalendar.GetDaysInYear#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar.GetDaysInYear/CPP/japanesecalendar_getdaysinyear.cpp#1)]
 [!code-csharp[System.Globalization.JapaneseCalendar.GetDaysInYear#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar.GetDaysInYear/CS/japanesecalendar_getdaysinyear.cs#1)]
 [!code-vb[System.Globalization.JapaneseCalendar.GetDaysInYear#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar.GetDaysInYear/VB/japanesecalendar_getdaysinyear.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="abd1c-340"><paramref name="year" /> 不在曆法支援的範圍內。</span><span class="sxs-lookup"><span data-stu-id="abd1c-340"><paramref name="year" /> is outside the range supported by the calendar.</span></span>  
  
<span data-ttu-id="abd1c-341">-或-</span><span class="sxs-lookup"><span data-stu-id="abd1c-341">-or-</span></span> 
 <span data-ttu-id="abd1c-342"><paramref name="era" /> 不在曆法支援的範圍內。</span><span class="sxs-lookup"><span data-stu-id="abd1c-342"><paramref name="era" /> is outside the range supported by the calendar.</span></span></exception>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="P:System.Globalization.JapaneseCalendar.Eras" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.GetMonthsInYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetEra">
      <MemberSignature Language="C#" Value="public override int GetEra (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetEra(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.JapaneseCalendar.GetEra(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEra (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetEra(DateTime time);" />
      <MemberSignature Language="F#" Value="override this.GetEra : DateTime -&gt; int" Usage="japaneseCalendar.GetEra time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time"><span data-ttu-id="abd1c-343">要讀取的 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="abd1c-343">The <see cref="T:System.DateTime" /> to read.</span></span></param>
        <summary><span data-ttu-id="abd1c-344">傳回指定 <see cref="T:System.DateTime" /> 中的紀元。</span><span class="sxs-lookup"><span data-stu-id="abd1c-344">Returns the era in the specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="abd1c-345">整數，表示指定 <see cref="T:System.DateTime" /> 中的紀元。</span><span class="sxs-lookup"><span data-stu-id="abd1c-345">An integer that represents the era in the specified <see cref="T:System.DateTime" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="abd1c-346">日本曆法會辨識為每個皇帝 reign 一個紀元。</span><span class="sxs-lookup"><span data-stu-id="abd1c-346">The Japanese calendar recognizes one era for every emperor's reign.</span></span> <span data-ttu-id="abd1c-347">目前紀元是平成時代，開始於 1989年西曆年。</span><span class="sxs-lookup"><span data-stu-id="abd1c-347">The current era is the Heisei era, which began in the Gregorian calendar year 1989.</span></span> <span data-ttu-id="abd1c-348">紀元名稱通常會顯示前一年。</span><span class="sxs-lookup"><span data-stu-id="abd1c-348">The era name is typically displayed before the year.</span></span> <span data-ttu-id="abd1c-349">例如，2001年西曆年是日文的日曆年度平成 13。</span><span class="sxs-lookup"><span data-stu-id="abd1c-349">For example, the Gregorian calendar year 2001 is the Japanese calendar year Heisei 13.</span></span> <span data-ttu-id="abd1c-350">請注意，第一年的時代稱為 「 元年。 」</span><span class="sxs-lookup"><span data-stu-id="abd1c-350">Note that the first year of an era is called "Gannen."</span></span> <span data-ttu-id="abd1c-351">因此，西曆 1989 年是日文的日曆年度平成元年。</span><span class="sxs-lookup"><span data-stu-id="abd1c-351">Therefore, the Gregorian calendar year 1989 was the Japanese calendar year Heisei Gannen.</span></span>  

[!INCLUDE[japanese-era-note](~/includes/calendar-era.md)]

 <span data-ttu-id="abd1c-352">此類別會指派數字給紀元，如下所示：</span><span class="sxs-lookup"><span data-stu-id="abd1c-352">This class assigns numbers to the eras as follows:</span></span>  
  
|<span data-ttu-id="abd1c-353">GetEra 值</span><span class="sxs-lookup"><span data-stu-id="abd1c-353">GetEra value</span></span>|<span data-ttu-id="abd1c-354">紀元名稱</span><span class="sxs-lookup"><span data-stu-id="abd1c-354">Era Name</span></span>|<span data-ttu-id="abd1c-355">紀元縮寫</span><span class="sxs-lookup"><span data-stu-id="abd1c-355">Era Abbreviation</span></span>|<span data-ttu-id="abd1c-356">西曆日期</span><span class="sxs-lookup"><span data-stu-id="abd1c-356">Gregorian Dates</span></span>|  
|------------------|--------------|----------------------|---------------------|  
|<span data-ttu-id="abd1c-357">4</span><span class="sxs-lookup"><span data-stu-id="abd1c-357">4</span></span>|<span data-ttu-id="abd1c-358">平成 （平成）</span><span class="sxs-lookup"><span data-stu-id="abd1c-358">平成 (Heisei)</span></span>|<span data-ttu-id="abd1c-359">平 (H、 h)</span><span class="sxs-lookup"><span data-stu-id="abd1c-359">平 (H, h)</span></span>|<span data-ttu-id="abd1c-360">1989 年 1 月 8 日來呈現</span><span class="sxs-lookup"><span data-stu-id="abd1c-360">January 8, 1989 to present</span></span>|  
|<span data-ttu-id="abd1c-361">3</span><span class="sxs-lookup"><span data-stu-id="abd1c-361">3</span></span>|<span data-ttu-id="abd1c-362">昭和 (Showa)</span><span class="sxs-lookup"><span data-stu-id="abd1c-362">昭和 (Showa)</span></span>|<span data-ttu-id="abd1c-363">昭 （S，s）</span><span class="sxs-lookup"><span data-stu-id="abd1c-363">昭 (S, s)</span></span>|<span data-ttu-id="abd1c-364">1926 年 12 月 25 日 1989 年 1 月 7日，</span><span class="sxs-lookup"><span data-stu-id="abd1c-364">December 25, 1926 to January 7, 1989</span></span>|  
|<span data-ttu-id="abd1c-365">2</span><span class="sxs-lookup"><span data-stu-id="abd1c-365">2</span></span>|<span data-ttu-id="abd1c-366">大正 (Taisho)</span><span class="sxs-lookup"><span data-stu-id="abd1c-366">大正 (Taisho)</span></span>|<span data-ttu-id="abd1c-367">提名 （T，t）</span><span class="sxs-lookup"><span data-stu-id="abd1c-367">大 (T, t)</span></span>|<span data-ttu-id="abd1c-368">1912 年 7 月 30 日 1926 年 12 月 24日，</span><span class="sxs-lookup"><span data-stu-id="abd1c-368">July 30, 1912 to December 24, 1926</span></span>|  
|<span data-ttu-id="abd1c-369">1</span><span class="sxs-lookup"><span data-stu-id="abd1c-369">1</span></span>|<span data-ttu-id="abd1c-370">明治 （明治）</span><span class="sxs-lookup"><span data-stu-id="abd1c-370">明治 (Meiji)</span></span>|<span data-ttu-id="abd1c-371">明 （M，m）</span><span class="sxs-lookup"><span data-stu-id="abd1c-371">明 (M, m)</span></span>|<span data-ttu-id="abd1c-372">1868 年 9 月 8 日 1912 年 7 月 29日，</span><span class="sxs-lookup"><span data-stu-id="abd1c-372">September 8, 1868 to July 29, 1912</span></span>|  
  
 <span data-ttu-id="abd1c-373">一般情況下，<xref:System.Globalization.JapaneseCalendar>類別支援從 9 月 8 日的日期中年份明治 1 (年 9 月 8，1868 西曆的)，也就是值的<xref:System.Globalization.JapaneseCalendar.MinSupportedDateTime%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="abd1c-373">Ordinarily, the <xref:System.Globalization.JapaneseCalendar> class supports dates from September 8 in the year Meiji 1 (September 8, 1868 of the Gregorian calendar), which is the value of the <xref:System.Globalization.JapaneseCalendar.MinSupportedDateTime%2A> property.</span></span> <span data-ttu-id="abd1c-374">不過，<xref:System.Globalization.JapaneseCalendar.GetEra%2A>方法成功會傳回日期的紀元年 1 月 1 日至 9 月 7 明治 1 年中 (January 1，1868 透過 1868 年 9 月 7，西曆中)。</span><span class="sxs-lookup"><span data-stu-id="abd1c-374">However, the <xref:System.Globalization.JapaneseCalendar.GetEra%2A> method successfully returns the era for dates from January 1 through September 7 in the year Meiji 1 (January 1, 1868 through September 7, 1868 in the Gregorian calendar).</span></span> <span data-ttu-id="abd1c-375">早於 1868 年 1 月 1，以西曆日期，方法會擲回<xref:System.ArgumentOutOfRangeException>例外狀況。</span><span class="sxs-lookup"><span data-stu-id="abd1c-375">For dates earlier than January 1, 1868 in the Gregorian calendar, the method throws an <xref:System.ArgumentOutOfRangeException> exception.</span></span>  
  
## Examples  
 <span data-ttu-id="abd1c-376">下列範例會顯示數個元件的值<xref:System.DateTime>方面日本曆法。</span><span class="sxs-lookup"><span data-stu-id="abd1c-376">The following example displays the values of several components of a <xref:System.DateTime> in terms of the Japanese calendar.</span></span>  
  
 [!code-cpp[System.Globalization.JapaneseCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar_AddGet/CPP/japanesecalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.JapaneseCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar_AddGet/CS/japanesecalendar_addget.cs#1)]
 [!code-vb[System.Globalization.JapaneseCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar_AddGet/VB/japanesecalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="abd1c-377">產生的 <see cref="T:System.DateTime" /> 在支援的範圍之外。</span><span class="sxs-lookup"><span data-stu-id="abd1c-377">The resulting <see cref="T:System.DateTime" /> is outside the supported range.</span></span></exception>
        <altmember cref="T:System.DateTime" />
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="P:System.Globalization.JapaneseCalendar.Eras" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.GetYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.GetMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.GetDayOfYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.GetDayOfMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.GetDayOfWeek(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
        <altmember cref="M:System.Globalization.Calendar.GetHour(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMinute(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetSecond(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMilliseconds(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="GetLeapMonth">
      <MemberSignature Language="C#" Value="public override int GetLeapMonth (int year, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetLeapMonth(int32 year, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.JapaneseCalendar.GetLeapMonth(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetLeapMonth (year As Integer, era As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetLeapMonth(int year, int era);" />
      <MemberSignature Language="F#" Value="override this.GetLeapMonth : int * int -&gt; int" Usage="japaneseCalendar.GetLeapMonth (year, era)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="era" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="abd1c-378">一年。</span><span class="sxs-lookup"><span data-stu-id="abd1c-378">A year.</span></span></param>
        <param name="era"><span data-ttu-id="abd1c-379">一紀元。</span><span class="sxs-lookup"><span data-stu-id="abd1c-379">An era.</span></span></param>
        <summary><span data-ttu-id="abd1c-380">計算指定年份和紀元的閏月。</span><span class="sxs-lookup"><span data-stu-id="abd1c-380">Calculates the leap month for a specified year and era.</span></span></summary>
        <returns><span data-ttu-id="abd1c-381">傳回值永遠都會是 0，因為 <see cref="T:System.Globalization.JapaneseCalendar" /> 型別不支援閏月的概念。</span><span class="sxs-lookup"><span data-stu-id="abd1c-381">The return value is always 0 because the <see cref="T:System.Globalization.JapaneseCalendar" /> type does not support the notion of a leap month.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="abd1c-382">行事曆支援閏月的概念，在特定月份或任何一年中的月之後，可能會發生的閏月。</span><span class="sxs-lookup"><span data-stu-id="abd1c-382">In a calendar that supports the notion of a leap month, the leap month can occur either after a particular month or after any month in a year.</span></span> <span data-ttu-id="abd1c-383">比方說，<xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A>方法傳回的數字，介於 1 到 13，表示指定的日期與相關聯的月份。</span><span class="sxs-lookup"><span data-stu-id="abd1c-383">For example, the <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A> method returns a number between 1 and 13 that indicates the month associated with a specified date.</span></span> <span data-ttu-id="abd1c-384">如果年份的第八個和第九個月之間沒有閏月<xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A>方法會傳回 8，第八個月內，如呈獻第八個月的 9 和 10，第九個月。</span><span class="sxs-lookup"><span data-stu-id="abd1c-384">If there is a leap month between the eighth and ninth months of the year, the <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A> method returns 8 for the eighth month, 9 for the leap eighth month, and 10 for the ninth month.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="abd1c-385"><paramref name="year" /> 或 <paramref name="era" /> 在 <see cref="T:System.Globalization.JapaneseCalendar" /> 型別支援的範圍之外。</span><span class="sxs-lookup"><span data-stu-id="abd1c-385"><paramref name="year" /> or <paramref name="era" /> is outside the range supported by the <see cref="T:System.Globalization.JapaneseCalendar" /> type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetMonth">
      <MemberSignature Language="C#" Value="public override int GetMonth (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetMonth(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.JapaneseCalendar.GetMonth(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetMonth (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetMonth(DateTime time);" />
      <MemberSignature Language="F#" Value="override this.GetMonth : DateTime -&gt; int" Usage="japaneseCalendar.GetMonth time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time"><span data-ttu-id="abd1c-386">要讀取的 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="abd1c-386">The <see cref="T:System.DateTime" /> to read.</span></span></param>
        <summary><span data-ttu-id="abd1c-387">傳回指定 <see cref="T:System.DateTime" /> 中的月份。</span><span class="sxs-lookup"><span data-stu-id="abd1c-387">Returns the month in the specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="abd1c-388">從 1 到 12 的整數，表示指定 <see cref="T:System.DateTime" /> 中的月份。</span><span class="sxs-lookup"><span data-stu-id="abd1c-388">An integer from 1 to 12 that represents the month in the specified <see cref="T:System.DateTime" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="abd1c-389">下列程式碼範例會顯示數個元件的值<xref:System.DateTime>方面日本曆法。</span><span class="sxs-lookup"><span data-stu-id="abd1c-389">The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Japanese calendar.</span></span>  
  
 [!code-cpp[System.Globalization.JapaneseCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar_AddGet/CPP/japanesecalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.JapaneseCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar_AddGet/CS/japanesecalendar_addget.cs#1)]
 [!code-vb[System.Globalization.JapaneseCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar_AddGet/VB/japanesecalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTime.Month" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.GetEra(System.DateTime)" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.GetYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.GetDayOfYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.GetDayOfMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.GetDayOfWeek(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
        <altmember cref="M:System.Globalization.Calendar.GetHour(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMinute(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetSecond(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMilliseconds(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="GetMonthsInYear">
      <MemberSignature Language="C#" Value="public override int GetMonthsInYear (int year, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetMonthsInYear(int32 year, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.JapaneseCalendar.GetMonthsInYear(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetMonthsInYear (year As Integer, era As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetMonthsInYear(int year, int era);" />
      <MemberSignature Language="F#" Value="override this.GetMonthsInYear : int * int -&gt; int" Usage="japaneseCalendar.GetMonthsInYear (year, era)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="abd1c-390">表示年份的整數。</span><span class="sxs-lookup"><span data-stu-id="abd1c-390">An integer that represents the year.</span></span></param>
        <param name="era"><span data-ttu-id="abd1c-391">表示紀元的整數。</span><span class="sxs-lookup"><span data-stu-id="abd1c-391">An integer that represents the era.</span></span></param>
        <summary><span data-ttu-id="abd1c-392">傳回在指定紀元的指定年份中的月數。</span><span class="sxs-lookup"><span data-stu-id="abd1c-392">Returns the number of months in the specified year in the specified era.</span></span></summary>
        <returns><span data-ttu-id="abd1c-393">傳回值一定是 12。</span><span class="sxs-lookup"><span data-stu-id="abd1c-393">The return value is always 12.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="abd1c-394">下列程式碼範例會呼叫<xref:System.Globalization.JapaneseCalendar.GetMonthsInYear%2A>五年的每個紀元。</span><span class="sxs-lookup"><span data-stu-id="abd1c-394">The following code example calls <xref:System.Globalization.JapaneseCalendar.GetMonthsInYear%2A> for five years in each era.</span></span>  
  
 [!code-cpp[System.Globalization.JapaneseCalendar.GetMonthsInYear#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar.GetMonthsInYear/CPP/japanesecalendar_getmonthsinyear.cpp#1)]
 [!code-csharp[System.Globalization.JapaneseCalendar.GetMonthsInYear#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar.GetMonthsInYear/CS/japanesecalendar_getmonthsinyear.cs#1)]
 [!code-vb[System.Globalization.JapaneseCalendar.GetMonthsInYear#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar.GetMonthsInYear/VB/japanesecalendar_getmonthsinyear.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="abd1c-395"><paramref name="year" /> 不在曆法支援的範圍內。</span><span class="sxs-lookup"><span data-stu-id="abd1c-395"><paramref name="year" /> is outside the range supported by the calendar.</span></span>  
  
<span data-ttu-id="abd1c-396">-或-</span><span class="sxs-lookup"><span data-stu-id="abd1c-396">-or-</span></span> 
 <span data-ttu-id="abd1c-397"><paramref name="era" /> 不在曆法支援的範圍內。</span><span class="sxs-lookup"><span data-stu-id="abd1c-397"><paramref name="era" /> is outside the range supported by the calendar.</span></span></exception>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="P:System.Globalization.JapaneseCalendar.Eras" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.GetDaysInYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetWeekOfYear">
      <MemberSignature Language="C#" Value="public override int GetWeekOfYear (DateTime time, System.Globalization.CalendarWeekRule rule, DayOfWeek firstDayOfWeek);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetWeekOfYear(valuetype System.DateTime time, valuetype System.Globalization.CalendarWeekRule rule, valuetype System.DayOfWeek firstDayOfWeek) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.JapaneseCalendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetWeekOfYear (time As DateTime, rule As CalendarWeekRule, firstDayOfWeek As DayOfWeek) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetWeekOfYear(DateTime time, System::Globalization::CalendarWeekRule rule, DayOfWeek firstDayOfWeek);" />
      <MemberSignature Language="F#" Value="override this.GetWeekOfYear : DateTime * System.Globalization.CalendarWeekRule * DayOfWeek -&gt; int" Usage="japaneseCalendar.GetWeekOfYear (time, rule, firstDayOfWeek)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="rule" Type="System.Globalization.CalendarWeekRule" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="firstDayOfWeek" Type="System.DayOfWeek" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="time"><span data-ttu-id="abd1c-398">要讀取的 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="abd1c-398">The <see cref="T:System.DateTime" /> to read.</span></span></param>
        <param name="rule"><span data-ttu-id="abd1c-399">其中一個 <see cref="T:System.Globalization.CalendarWeekRule" /> 值，可定義行事曆週。</span><span class="sxs-lookup"><span data-stu-id="abd1c-399">One of the <see cref="T:System.Globalization.CalendarWeekRule" /> values that defines a calendar week.</span></span></param>
        <param name="firstDayOfWeek"><span data-ttu-id="abd1c-400">其中一個 <see cref="T:System.DayOfWeek" /> 值，表示一週的第一天。</span><span class="sxs-lookup"><span data-stu-id="abd1c-400">One of the <see cref="T:System.DayOfWeek" /> values that represents the first day of the week.</span></span></param>
        <summary><span data-ttu-id="abd1c-401">傳回年份中的週，包含指定 <see cref="T:System.DateTime" /> 中的日期。</span><span class="sxs-lookup"><span data-stu-id="abd1c-401">Returns the week of the year that includes the date in the specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="abd1c-402">從 1 起始的整數，表示 <paramref name="time" /> 參數中日期所屬年份中的某週。</span><span class="sxs-lookup"><span data-stu-id="abd1c-402">A 1-based integer that represents the week of the year that includes the date in the <paramref name="time" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="abd1c-403">這個方法可用來設定來判斷一年的週數`time`一年的最後一天的參數。</span><span class="sxs-lookup"><span data-stu-id="abd1c-403">This method can be used to determine the number of weeks in the year by setting the `time` parameter to the last day of the year.</span></span>  
  
 <span data-ttu-id="abd1c-404"><xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType>屬性包含特定文化特性值，可用於`rule`和`firstDayOfWeek`參數。</span><span class="sxs-lookup"><span data-stu-id="abd1c-404">The <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> property contains culture-specific values that can be used for the `rule` and `firstDayOfWeek` parameters.</span></span>  
  
 <span data-ttu-id="abd1c-405"><xref:System.Globalization.DateTimeFormatInfo.FirstDayOfWeek%2A>的屬性<xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType>包含預設<xref:System.DayOfWeek>值，表示特定文化特性，使用指定的行事曆週的第一天<xref:System.Globalization.DateTimeFormatInfo.Calendar%2A>屬性<xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="abd1c-405">The <xref:System.Globalization.DateTimeFormatInfo.FirstDayOfWeek%2A> property of <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> contains the default <xref:System.DayOfWeek> value that represents the first day of the week for a specific culture, using the calendar specified in the <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> property of <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="abd1c-406"><xref:System.Globalization.DateTimeFormatInfo.CalendarWeekRule%2A>的屬性<xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType>包含預設<xref:System.Globalization.CalendarWeekRule>定義日曆週的特定文化特性，使用指定曆法的值<xref:System.Globalization.DateTimeFormatInfo.Calendar%2A>屬性<xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="abd1c-406">The <xref:System.Globalization.DateTimeFormatInfo.CalendarWeekRule%2A> property of <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> contains the default <xref:System.Globalization.CalendarWeekRule> value that defines a calendar week for a specific culture, using the calendar specified in the <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> property of <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="abd1c-407">例如，在<xref:System.Globalization.GregorianCalendar>，則<xref:System.Globalization.Calendar.GetWeekOfYear%2A>為年 1 月 1 日的方法會傳回 1。</span><span class="sxs-lookup"><span data-stu-id="abd1c-407">For example, in <xref:System.Globalization.GregorianCalendar>, the <xref:System.Globalization.Calendar.GetWeekOfYear%2A> method for January 1 returns 1.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="abd1c-408">下列程式碼範例示範如何的結果<xref:System.Globalization.Calendar.GetWeekOfYear%2A>取決於<xref:System.Globalization.DateTimeFormatInfo.FirstDayOfWeek%2A>和<xref:System.Globalization.CalendarWeekRule>用的值。</span><span class="sxs-lookup"><span data-stu-id="abd1c-408">The following code example shows how the result of <xref:System.Globalization.Calendar.GetWeekOfYear%2A> varies depending on the <xref:System.Globalization.DateTimeFormatInfo.FirstDayOfWeek%2A> and <xref:System.Globalization.CalendarWeekRule> values used.</span></span> <span data-ttu-id="abd1c-409">如果指定的日期是最後一天的年份，<xref:System.Globalization.Calendar.GetWeekOfYear%2A>傳回該年份的週數總計。</span><span class="sxs-lookup"><span data-stu-id="abd1c-409">If the specified date is the last day of the year, <xref:System.Globalization.Calendar.GetWeekOfYear%2A> returns the total number of weeks in that year.</span></span>  
  
 [!code-cpp[System.Globalization.Calendar.GetWeekOfYear#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar.GetWeekOfYear/CPP/yslin_calendar_getweekofyear.cpp#1)]
 [!code-csharp[System.Globalization.Calendar.GetWeekOfYear#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar.GetWeekOfYear/CS/yslin_calendar_getweekofyear.cs#1)]
 [!code-vb[System.Globalization.Calendar.GetWeekOfYear#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar.GetWeekOfYear/VB/yslin_calendar_getweekofyear.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="abd1c-410"><paramref name="time" /> 或 <paramref name="firstDayOfWeek" /> 在日曆支援的範圍之外。</span><span class="sxs-lookup"><span data-stu-id="abd1c-410"><paramref name="time" /> or <paramref name="firstDayOfWeek" /> is outside the range supported by the calendar.</span></span>  
  
<span data-ttu-id="abd1c-411">-或-</span><span class="sxs-lookup"><span data-stu-id="abd1c-411">-or-</span></span> 
 <span data-ttu-id="abd1c-412"><paramref name="rule" /> 不是有效的 <see cref="T:System.Globalization.CalendarWeekRule" /> 值。</span><span class="sxs-lookup"><span data-stu-id="abd1c-412"><paramref name="rule" /> is not a valid <see cref="T:System.Globalization.CalendarWeekRule" /> value.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetYear">
      <MemberSignature Language="C#" Value="public override int GetYear (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetYear(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.JapaneseCalendar.GetYear(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetYear (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetYear(DateTime time);" />
      <MemberSignature Language="F#" Value="override this.GetYear : DateTime -&gt; int" Usage="japaneseCalendar.GetYear time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time"><span data-ttu-id="abd1c-413">要讀取的 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="abd1c-413">The <see cref="T:System.DateTime" /> to read.</span></span></param>
        <summary><span data-ttu-id="abd1c-414">傳回指定 <see cref="T:System.DateTime" /> 中的年份。</span><span class="sxs-lookup"><span data-stu-id="abd1c-414">Returns the year in the specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="abd1c-415">整數，表示指定 <see cref="T:System.DateTime" /> 中的年份。</span><span class="sxs-lookup"><span data-stu-id="abd1c-415">An integer that represents the year in the specified <see cref="T:System.DateTime" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="abd1c-416">下列程式碼範例會顯示數個元件的值<xref:System.DateTime>方面日本曆法。</span><span class="sxs-lookup"><span data-stu-id="abd1c-416">The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Japanese calendar.</span></span>  
  
 [!code-cpp[System.Globalization.JapaneseCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar_AddGet/CPP/japanesecalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.JapaneseCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar_AddGet/CS/japanesecalendar_addget.cs#1)]
 [!code-vb[System.Globalization.JapaneseCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar_AddGet/VB/japanesecalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTime.Year" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.GetEra(System.DateTime)" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.GetMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.GetDayOfYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.GetDayOfMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.GetDayOfWeek(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
        <altmember cref="M:System.Globalization.Calendar.GetHour(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMinute(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetSecond(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMilliseconds(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="IsLeapDay">
      <MemberSignature Language="C#" Value="public override bool IsLeapDay (int year, int month, int day, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsLeapDay(int32 year, int32 month, int32 day, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.JapaneseCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsLeapDay (year As Integer, month As Integer, day As Integer, era As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsLeapDay(int year, int month, int day, int era);" />
      <MemberSignature Language="F#" Value="override this.IsLeapDay : int * int * int * int -&gt; bool" Usage="japaneseCalendar.IsLeapDay (year, month, day, era)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="day" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="abd1c-417">表示年份的整數。</span><span class="sxs-lookup"><span data-stu-id="abd1c-417">An integer that represents the year.</span></span></param>
        <param name="month"><span data-ttu-id="abd1c-418">從 1 到 12 的整數，表示月份。</span><span class="sxs-lookup"><span data-stu-id="abd1c-418">An integer from 1 to 12 that represents the month.</span></span></param>
        <param name="day"><span data-ttu-id="abd1c-419">從 1 到 31 的整數，表示日期。</span><span class="sxs-lookup"><span data-stu-id="abd1c-419">An integer from 1 to 31 that represents the day.</span></span></param>
        <param name="era"><span data-ttu-id="abd1c-420">表示紀元的整數。</span><span class="sxs-lookup"><span data-stu-id="abd1c-420">An integer that represents the era.</span></span></param>
        <summary><span data-ttu-id="abd1c-421">判斷指定紀元中指定的日期是否為閏日。</span><span class="sxs-lookup"><span data-stu-id="abd1c-421">Determines whether the specified date in the specified era is a leap day.</span></span></summary>
        <returns><span data-ttu-id="abd1c-422">如果指定的日子是閏日，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="abd1c-422"><see langword="true" />, if the specified day is a leap day; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="abd1c-423">潤年，日本曆法中對應至相同潤年西曆中。</span><span class="sxs-lookup"><span data-stu-id="abd1c-423">Leap years in the Japanese calendar correspond to the same leap years in the Gregorian calendar.</span></span> <span data-ttu-id="abd1c-424">閏年西曆中定義為一個公曆年整除的四個，除非它是整除 100。</span><span class="sxs-lookup"><span data-stu-id="abd1c-424">A leap year in the Gregorian calendar is defined as a Gregorian year that is evenly divisible by four, except if it is divisible by 100.</span></span> <span data-ttu-id="abd1c-425">不過，400 所整除的公曆年是潤年。</span><span class="sxs-lookup"><span data-stu-id="abd1c-425">However, Gregorian years that are divisible by 400 are leap years.</span></span> <span data-ttu-id="abd1c-426">一般年份有 365 天，閏年有 366 天。</span><span class="sxs-lookup"><span data-stu-id="abd1c-426">A common year has 365 days and a leap year has 366 days.</span></span>  
  
 <span data-ttu-id="abd1c-427">為閏日是閏年只會發生一天。</span><span class="sxs-lookup"><span data-stu-id="abd1c-427">A leap day is a day that occurs only in a leap year.</span></span> <span data-ttu-id="abd1c-428">比方說，第 29 天的 Nigatsu （二月） 是唯一的閏日。</span><span class="sxs-lookup"><span data-stu-id="abd1c-428">For example, the 29th day of Nigatsu (February) is the only leap day.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="abd1c-429">下列範例會呼叫<xref:System.Globalization.JapaneseCalendar.IsLeapDay%2A>最後一天的每個紀元中的五年的第二個月 （二月）。</span><span class="sxs-lookup"><span data-stu-id="abd1c-429">The following example calls <xref:System.Globalization.JapaneseCalendar.IsLeapDay%2A> for the last day of the second month (February) for five years in each of the eras.</span></span>  
  
 [!code-cpp[System.Globalization.JapaneseCalendar.IsLeapDay#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar.IsLeapDay/CPP/japanesecalendar_isleapday.cpp#1)]
 [!code-csharp[System.Globalization.JapaneseCalendar.IsLeapDay#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar.IsLeapDay/CS/japanesecalendar_isleapday.cs#1)]
 [!code-vb[System.Globalization.JapaneseCalendar.IsLeapDay#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar.IsLeapDay/VB/japanesecalendar_isleapday.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="abd1c-430"><paramref name="year" /> 不在曆法支援的範圍內。</span><span class="sxs-lookup"><span data-stu-id="abd1c-430"><paramref name="year" /> is outside the range supported by the calendar.</span></span>  
  
<span data-ttu-id="abd1c-431">-或-</span><span class="sxs-lookup"><span data-stu-id="abd1c-431">-or-</span></span> 
 <span data-ttu-id="abd1c-432"><paramref name="month" /> 不在曆法支援的範圍內。</span><span class="sxs-lookup"><span data-stu-id="abd1c-432"><paramref name="month" /> is outside the range supported by the calendar.</span></span>  
  
<span data-ttu-id="abd1c-433">-或-</span><span class="sxs-lookup"><span data-stu-id="abd1c-433">-or-</span></span> 
 <span data-ttu-id="abd1c-434"><paramref name="day" /> 不在曆法支援的範圍內。</span><span class="sxs-lookup"><span data-stu-id="abd1c-434"><paramref name="day" /> is outside the range supported by the calendar.</span></span>  
  
<span data-ttu-id="abd1c-435">-或-</span><span class="sxs-lookup"><span data-stu-id="abd1c-435">-or-</span></span> 
 <span data-ttu-id="abd1c-436"><paramref name="era" /> 不在曆法支援的範圍內。</span><span class="sxs-lookup"><span data-stu-id="abd1c-436"><paramref name="era" /> is outside the range supported by the calendar.</span></span></exception>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="P:System.Globalization.JapaneseCalendar.Eras" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.GetMonthsInYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.IsLeapYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="IsLeapMonth">
      <MemberSignature Language="C#" Value="public override bool IsLeapMonth (int year, int month, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsLeapMonth(int32 year, int32 month, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.JapaneseCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsLeapMonth (year As Integer, month As Integer, era As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsLeapMonth(int year, int month, int era);" />
      <MemberSignature Language="F#" Value="override this.IsLeapMonth : int * int * int -&gt; bool" Usage="japaneseCalendar.IsLeapMonth (year, month, era)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="abd1c-437">表示年份的整數。</span><span class="sxs-lookup"><span data-stu-id="abd1c-437">An integer that represents the year.</span></span></param>
        <param name="month"><span data-ttu-id="abd1c-438">從 1 到 12 的整數，表示月份。</span><span class="sxs-lookup"><span data-stu-id="abd1c-438">An integer from 1 to 12 that represents the month.</span></span></param>
        <param name="era"><span data-ttu-id="abd1c-439">表示紀元的整數。</span><span class="sxs-lookup"><span data-stu-id="abd1c-439">An integer that represents the era.</span></span></param>
        <summary><span data-ttu-id="abd1c-440">判斷指定紀元的指定年份中指定的月份是否為閏月。</span><span class="sxs-lookup"><span data-stu-id="abd1c-440">Determines whether the specified month in the specified year in the specified era is a leap month.</span></span></summary>
        <returns><span data-ttu-id="abd1c-441">這個方法永遠傳回 <see langword="false" />，除非被衍生類別 (Derived Class) 所覆寫。</span><span class="sxs-lookup"><span data-stu-id="abd1c-441">This method always returns <see langword="false" />, unless overridden by a derived class.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="abd1c-442">潤年，日本曆法中對應至相同潤年西曆中。</span><span class="sxs-lookup"><span data-stu-id="abd1c-442">Leap years in the Japanese calendar correspond to the same leap years in the Gregorian calendar.</span></span> <span data-ttu-id="abd1c-443">閏年西曆中定義為一個公曆年整除的四個，除非它是整除 100。</span><span class="sxs-lookup"><span data-stu-id="abd1c-443">A leap year in the Gregorian calendar is defined as a Gregorian year that is evenly divisible by four, except if it is divisible by 100.</span></span> <span data-ttu-id="abd1c-444">不過，400 所整除的公曆年是潤年。</span><span class="sxs-lookup"><span data-stu-id="abd1c-444">However, Gregorian years that are divisible by 400 are leap years.</span></span> <span data-ttu-id="abd1c-445">一般年份有 365 天，閏年有 366 天。</span><span class="sxs-lookup"><span data-stu-id="abd1c-445">A common year has 365 days and a leap year has 366 days.</span></span>  
  
 <span data-ttu-id="abd1c-446">閏月是一整個月，只會發生在為閏年。</span><span class="sxs-lookup"><span data-stu-id="abd1c-446">A leap month is an entire month that occurs only in a leap year.</span></span> <span data-ttu-id="abd1c-447">日本曆法並沒有任何閏月。</span><span class="sxs-lookup"><span data-stu-id="abd1c-447">The Japanese calendar does not have any leap months.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="abd1c-448">下列範例會呼叫<xref:System.Globalization.JapaneseCalendar.IsLeapMonth%2A>目前紀元中的五年的所有月份。</span><span class="sxs-lookup"><span data-stu-id="abd1c-448">The following example calls <xref:System.Globalization.JapaneseCalendar.IsLeapMonth%2A> for all the months in five years in the current era.</span></span>  
  
 [!code-cpp[System.Globalization.JapaneseCalendar.IsLeapMonth#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar.IsLeapMonth/CPP/japanesecalendar_isleapmonth.cpp#1)]
 [!code-csharp[System.Globalization.JapaneseCalendar.IsLeapMonth#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar.IsLeapMonth/CS/japanesecalendar_isleapmonth.cs#1)]
 [!code-vb[System.Globalization.JapaneseCalendar.IsLeapMonth#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar.IsLeapMonth/VB/japanesecalendar_isleapmonth.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="abd1c-449"><paramref name="year" /> 不在曆法支援的範圍內。</span><span class="sxs-lookup"><span data-stu-id="abd1c-449"><paramref name="year" /> is outside the range supported by the calendar.</span></span>  
  
<span data-ttu-id="abd1c-450">-或-</span><span class="sxs-lookup"><span data-stu-id="abd1c-450">-or-</span></span> 
 <span data-ttu-id="abd1c-451"><paramref name="month" /> 不在曆法支援的範圍內。</span><span class="sxs-lookup"><span data-stu-id="abd1c-451"><paramref name="month" /> is outside the range supported by the calendar.</span></span>  
  
<span data-ttu-id="abd1c-452">-或-</span><span class="sxs-lookup"><span data-stu-id="abd1c-452">-or-</span></span> 
 <span data-ttu-id="abd1c-453"><paramref name="era" /> 不在曆法支援的範圍內。</span><span class="sxs-lookup"><span data-stu-id="abd1c-453"><paramref name="era" /> is outside the range supported by the calendar.</span></span></exception>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="P:System.Globalization.JapaneseCalendar.Eras" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.GetMonthsInYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.IsLeapYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="IsLeapYear">
      <MemberSignature Language="C#" Value="public override bool IsLeapYear (int year, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsLeapYear(int32 year, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.JapaneseCalendar.IsLeapYear(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsLeapYear (year As Integer, era As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsLeapYear(int year, int era);" />
      <MemberSignature Language="F#" Value="override this.IsLeapYear : int * int -&gt; bool" Usage="japaneseCalendar.IsLeapYear (year, era)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="abd1c-454">表示年份的整數。</span><span class="sxs-lookup"><span data-stu-id="abd1c-454">An integer that represents the year.</span></span></param>
        <param name="era"><span data-ttu-id="abd1c-455">表示紀元的整數。</span><span class="sxs-lookup"><span data-stu-id="abd1c-455">An integer that represents the era.</span></span></param>
        <summary><span data-ttu-id="abd1c-456">判斷指定紀元中指定的年份是否為閏年。</span><span class="sxs-lookup"><span data-stu-id="abd1c-456">Determines whether the specified year in the specified era is a leap year.</span></span></summary>
        <returns><span data-ttu-id="abd1c-457">如果指定的年份是閏年，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="abd1c-457"><see langword="true" />, if the specified year is a leap year; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="abd1c-458">潤年，日本曆法中對應至相同潤年西曆中。</span><span class="sxs-lookup"><span data-stu-id="abd1c-458">Leap years in the Japanese calendar correspond to the same leap years in the Gregorian calendar.</span></span> <span data-ttu-id="abd1c-459">閏年西曆中定義為一個公曆年整除的四個，除非它是整除 100。</span><span class="sxs-lookup"><span data-stu-id="abd1c-459">A leap year in the Gregorian calendar is defined as a Gregorian year that is evenly divisible by four, except if it is divisible by 100.</span></span> <span data-ttu-id="abd1c-460">不過，400 所整除的公曆年是潤年。</span><span class="sxs-lookup"><span data-stu-id="abd1c-460">However, Gregorian years that are divisible by 400 are leap years.</span></span> <span data-ttu-id="abd1c-461">一般年份有 365 天，閏年有 366 天。</span><span class="sxs-lookup"><span data-stu-id="abd1c-461">A common year has 365 days and a leap year has 366 days.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="abd1c-462">下列範例會呼叫<xref:System.Globalization.JapaneseCalendar.IsLeapYear%2A>五年的每一紀元。</span><span class="sxs-lookup"><span data-stu-id="abd1c-462">The following example calls <xref:System.Globalization.JapaneseCalendar.IsLeapYear%2A> for five years in each of the eras.</span></span>  
  
 [!code-cpp[System.Globalization.JapaneseCalendar.IsLeapYear#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar.IsLeapYear/CPP/japanesecalendar_isleapyear.cpp#1)]
 [!code-csharp[System.Globalization.JapaneseCalendar.IsLeapYear#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar.IsLeapYear/CS/japanesecalendar_isleapyear.cs#1)]
 [!code-vb[System.Globalization.JapaneseCalendar.IsLeapYear#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar.IsLeapYear/VB/japanesecalendar_isleapyear.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="abd1c-463"><paramref name="year" /> 不在曆法支援的範圍內。</span><span class="sxs-lookup"><span data-stu-id="abd1c-463"><paramref name="year" /> is outside the range supported by the calendar.</span></span>  
  
<span data-ttu-id="abd1c-464">-或-</span><span class="sxs-lookup"><span data-stu-id="abd1c-464">-or-</span></span> 
 <span data-ttu-id="abd1c-465"><paramref name="era" /> 不在曆法支援的範圍內。</span><span class="sxs-lookup"><span data-stu-id="abd1c-465"><paramref name="era" /> is outside the range supported by the calendar.</span></span></exception>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="P:System.Globalization.JapaneseCalendar.Eras" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="MaxSupportedDateTime">
      <MemberSignature Language="C#" Value="public override DateTime MaxSupportedDateTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime MaxSupportedDateTime" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.JapaneseCalendar.MaxSupportedDateTime" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property MaxSupportedDateTime As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property DateTime MaxSupportedDateTime { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.MaxSupportedDateTime : DateTime" Usage="System.Globalization.JapaneseCalendar.MaxSupportedDateTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="abd1c-466">取得受目前 <see cref="T:System.Globalization.JapaneseCalendar" /> 物件所支援的最晚日期和時間。</span><span class="sxs-lookup"><span data-stu-id="abd1c-466">Gets the latest date and time supported by the current <see cref="T:System.Globalization.JapaneseCalendar" /> object.</span></span></summary>
        <value><span data-ttu-id="abd1c-467">最晚的日期和時間受到<see cref="T:System.Globalization.JapaneseCalendar" />型別，這相當於 12 月 31 日的最後一刻西元 9999</span><span class="sxs-lookup"><span data-stu-id="abd1c-467">The latest date and time supported by the <see cref="T:System.Globalization.JapaneseCalendar" /> type, which is equivalent to the last moment of December 31, 9999 C.E.</span></span> <span data-ttu-id="abd1c-468">西曆。</span><span class="sxs-lookup"><span data-stu-id="abd1c-468">in the Gregorian calendar.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="abd1c-469">下列程式碼範例會取得的最小值和行事曆的最大值。</span><span class="sxs-lookup"><span data-stu-id="abd1c-469">The following code example gets the minimum value and the maximum value of the calendar.</span></span>  
  
 [!code-cpp[System.Globalization.JapaneseCalendar_MinMax#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar_MinMax/CPP/japanesecalendar_minmax.cpp#1)]
 [!code-csharp[System.Globalization.JapaneseCalendar_MinMax#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar_MinMax/CS/japanesecalendar_minmax.cs#1)]
 [!code-vb[System.Globalization.JapaneseCalendar_MinMax#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar_MinMax/VB/japanesecalendar_minmax.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinSupportedDateTime">
      <MemberSignature Language="C#" Value="public override DateTime MinSupportedDateTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime MinSupportedDateTime" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.JapaneseCalendar.MinSupportedDateTime" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property MinSupportedDateTime As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property DateTime MinSupportedDateTime { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.MinSupportedDateTime : DateTime" Usage="System.Globalization.JapaneseCalendar.MinSupportedDateTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="abd1c-470">取得受目前 <see cref="T:System.Globalization.JapaneseCalendar" /> 物件所支援的最早日期和時間。</span><span class="sxs-lookup"><span data-stu-id="abd1c-470">Gets the earliest date and time supported by the current <see cref="T:System.Globalization.JapaneseCalendar" /> object.</span></span></summary>
        <value><span data-ttu-id="abd1c-471">最早日期和時間受到<see cref="T:System.Globalization.JapaneseCalendar" />型別，其相當於 1868 年 9 月 8，西元的第一時間</span><span class="sxs-lookup"><span data-stu-id="abd1c-471">The earliest date and time supported by the <see cref="T:System.Globalization.JapaneseCalendar" /> type, which is equivalent to the first moment of September 8, 1868 C.E.</span></span> <span data-ttu-id="abd1c-472">西曆。</span><span class="sxs-lookup"><span data-stu-id="abd1c-472">in the Gregorian calendar.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="abd1c-473">所支援的最早日期<xref:System.Globalization.JapaneseCalendar>類別是年 9 月 8 中, 之西元 1868，第一年的明治紀元。</span><span class="sxs-lookup"><span data-stu-id="abd1c-473">The earliest date supported by the <xref:System.Globalization.JapaneseCalendar> class is September 8, 1868 C.E., in the first year of the Meiji era.</span></span> <span data-ttu-id="abd1c-474">一般情況下，日期和時間使用的作業<xref:System.Globalization.JapaneseCalendar>類別擲回<xref:System.ArgumentOutOfRangeException>例外狀況，此日期之前的日期。</span><span class="sxs-lookup"><span data-stu-id="abd1c-474">Ordinarily, date and time operations that use the <xref:System.Globalization.JapaneseCalendar> class throw an <xref:System.ArgumentOutOfRangeException> exception for dates before this date.</span></span> <span data-ttu-id="abd1c-475">不過，某些成員，例如<xref:System.Globalization.JapaneseCalendar.GetEra%2A>方法，支援從 1868 年 1 月 1，透過年 9 月 7 日的日期在明治 1 年。</span><span class="sxs-lookup"><span data-stu-id="abd1c-475">However, some members, such as the <xref:System.Globalization.JapaneseCalendar.GetEra%2A> method, support dates from January 1, 1868 through September 7 in the year Meiji 1.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="abd1c-476">下列範例會取得曆法所支援的最早和最新日期。</span><span class="sxs-lookup"><span data-stu-id="abd1c-476">The following example gets the earliest and latest dates supported by the calendar.</span></span>  
  
 [!code-cpp[System.Globalization.JapaneseCalendar_MinMax#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar_MinMax/CPP/japanesecalendar_minmax.cpp#1)]
 [!code-csharp[System.Globalization.JapaneseCalendar_MinMax#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar_MinMax/CS/japanesecalendar_minmax.cs#1)]
 [!code-vb[System.Globalization.JapaneseCalendar_MinMax#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar_MinMax/VB/japanesecalendar_minmax.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToDateTime">
      <MemberSignature Language="C#" Value="public override DateTime ToDateTime (int year, int month, int day, int hour, int minute, int second, int millisecond, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.DateTime ToDateTime(int32 year, int32 month, int32 day, int32 hour, int32 minute, int32 second, int32 millisecond, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.JapaneseCalendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToDateTime (year As Integer, month As Integer, day As Integer, hour As Integer, minute As Integer, second As Integer, millisecond As Integer, era As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override DateTime ToDateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, int era);" />
      <MemberSignature Language="F#" Value="override this.ToDateTime : int * int * int * int * int * int * int * int -&gt; DateTime" Usage="japaneseCalendar.ToDateTime (year, month, day, hour, minute, second, millisecond, era)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="day" Type="System.Int32" />
        <Parameter Name="hour" Type="System.Int32" />
        <Parameter Name="minute" Type="System.Int32" />
        <Parameter Name="second" Type="System.Int32" />
        <Parameter Name="millisecond" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="abd1c-477">表示年份的整數。</span><span class="sxs-lookup"><span data-stu-id="abd1c-477">An integer that represents the year.</span></span></param>
        <param name="month"><span data-ttu-id="abd1c-478">從 1 到 12 的整數，表示月份。</span><span class="sxs-lookup"><span data-stu-id="abd1c-478">An integer from 1 to 12 that represents the month.</span></span></param>
        <param name="day"><span data-ttu-id="abd1c-479">從 1 到 31 的整數，表示日期。</span><span class="sxs-lookup"><span data-stu-id="abd1c-479">An integer from 1 to 31 that represents the day.</span></span></param>
        <param name="hour"><span data-ttu-id="abd1c-480">從 0 到 23 的整數，表示小時。</span><span class="sxs-lookup"><span data-stu-id="abd1c-480">An integer from 0 to 23 that represents the hour.</span></span></param>
        <param name="minute"><span data-ttu-id="abd1c-481">從 0 到 59 的整數，表示分鐘。</span><span class="sxs-lookup"><span data-stu-id="abd1c-481">An integer from 0 to 59 that represents the minute.</span></span></param>
        <param name="second"><span data-ttu-id="abd1c-482">從 0 到 59 的整數，表示秒鐘。</span><span class="sxs-lookup"><span data-stu-id="abd1c-482">An integer from 0 to 59 that represents the second.</span></span></param>
        <param name="millisecond"><span data-ttu-id="abd1c-483">從 0 到 999 的整數，表示毫秒。</span><span class="sxs-lookup"><span data-stu-id="abd1c-483">An integer from 0 to 999 that represents the millisecond.</span></span></param>
        <param name="era"><span data-ttu-id="abd1c-484">表示紀元的整數。</span><span class="sxs-lookup"><span data-stu-id="abd1c-484">An integer that represents the era.</span></span></param>
        <summary><span data-ttu-id="abd1c-485">傳回在指定紀元中設定為指定日期和時間的 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="abd1c-485">Returns a <see cref="T:System.DateTime" /> that is set to the specified date and time in the specified era.</span></span></summary>
        <returns><span data-ttu-id="abd1c-486"><see cref="T:System.DateTime" />，設定為目前紀元中指定的日期和時間。</span><span class="sxs-lookup"><span data-stu-id="abd1c-486">The <see cref="T:System.DateTime" /> that is set to the specified date and time in the current era.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="abd1c-487"><xref:System.Globalization.JapaneseCalendar.ToDateTime%2A>方法很有用，因為它可以將目前曆法中的任何日期轉換成的西曆日期。</span><span class="sxs-lookup"><span data-stu-id="abd1c-487">The <xref:System.Globalization.JapaneseCalendar.ToDateTime%2A> method is useful because it can convert any date in the current calendar to a Gregorian calendar date.</span></span> <span data-ttu-id="abd1c-488">為西曆日期，之後可用，比方說，來比較不同的行事曆中的日期，或在特定的行事曆中建立相等的日期。</span><span class="sxs-lookup"><span data-stu-id="abd1c-488">The Gregorian date can subsequently be used, for example, to compare dates in different calendars or create an equivalent date in a particular calendar.</span></span>  

<span data-ttu-id="abd1c-489">因為<xref:System.Globalization.JapaneseCalendar>支援多個紀元根據桃之皇帝，您應該一律呼叫這個方法，並明確指定紀元，以避免非預期的日期並讓您清楚的程式碼的意圖。</span><span class="sxs-lookup"><span data-stu-id="abd1c-489">Because the <xref:System.Globalization.JapaneseCalendar> supports multiple eras based on the reign of the emperor, you should always call this method and explicitly specify an era to avoid an unintended date and to make the intent of your code clear.</span></span> <span data-ttu-id="abd1c-490">範例會示範如何具現化，永遠為目前紀元中的日期，另一個則屬於指定的紀元。</span><span class="sxs-lookup"><span data-stu-id="abd1c-490">The example shows how to instantiate a date that is always in the current era and one that belongs to a specified era.</span></span>

## Examples

<span data-ttu-id="abd1c-491">下列範例會具現化兩個日期。</span><span class="sxs-lookup"><span data-stu-id="abd1c-491">The following example instantiates two dates.</span></span> <span data-ttu-id="abd1c-492">第一個是一律在目前的時代中，第二年的第一天，而第二個識別 Taisho 紀元中的特定日期。</span><span class="sxs-lookup"><span data-stu-id="abd1c-492">The first is always the first day of the second year in the current era, while the second identifies a specific day in the Taisho era.</span></span> <span data-ttu-id="abd1c-493">此範例的輸出是由平成紀元，為目前紀元所產生。</span><span class="sxs-lookup"><span data-stu-id="abd1c-493">The output from the example was produced with the Heisei era as the current era.</span></span>

[!code-csharp[Specifying the era](~/samples/snippets/csharp/api/system.globalization/japanesecalendar/todatetime/program.cs)]
[!code-vb[Specifying the era](~/samples/snippets/visualbasic/api/system.globalization/japanesecalendar/todatetime/Program.vb)]  

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="abd1c-494"><paramref name="year" /> 不在曆法支援的範圍內。</span><span class="sxs-lookup"><span data-stu-id="abd1c-494"><paramref name="year" /> is outside the range supported by the calendar.</span></span>  
  
<span data-ttu-id="abd1c-495">-或-</span><span class="sxs-lookup"><span data-stu-id="abd1c-495">-or-</span></span> 
 <span data-ttu-id="abd1c-496"><paramref name="month" /> 不在曆法支援的範圍內。</span><span class="sxs-lookup"><span data-stu-id="abd1c-496"><paramref name="month" /> is outside the range supported by the calendar.</span></span>  
  
<span data-ttu-id="abd1c-497">-或-</span><span class="sxs-lookup"><span data-stu-id="abd1c-497">-or-</span></span> 
 <span data-ttu-id="abd1c-498"><paramref name="day" /> 不在曆法支援的範圍內。</span><span class="sxs-lookup"><span data-stu-id="abd1c-498"><paramref name="day" /> is outside the range supported by the calendar.</span></span>  
  
<span data-ttu-id="abd1c-499">-或-</span><span class="sxs-lookup"><span data-stu-id="abd1c-499">-or-</span></span> 
 <span data-ttu-id="abd1c-500"><paramref name="hour" /> 小於 0 或大於 23。</span><span class="sxs-lookup"><span data-stu-id="abd1c-500"><paramref name="hour" /> is less than zero or greater than 23.</span></span>  
  
<span data-ttu-id="abd1c-501">-或-</span><span class="sxs-lookup"><span data-stu-id="abd1c-501">-or-</span></span> 
 <span data-ttu-id="abd1c-502"><paramref name="minute" /> 小於 0 或大於 59。</span><span class="sxs-lookup"><span data-stu-id="abd1c-502"><paramref name="minute" /> is less than zero or greater than 59.</span></span>  
  
<span data-ttu-id="abd1c-503">-或-</span><span class="sxs-lookup"><span data-stu-id="abd1c-503">-or-</span></span> 
 <span data-ttu-id="abd1c-504"><paramref name="second" /> 小於 0 或大於 59。</span><span class="sxs-lookup"><span data-stu-id="abd1c-504"><paramref name="second" /> is less than zero or greater than 59.</span></span>  
  
<span data-ttu-id="abd1c-505">-或-</span><span class="sxs-lookup"><span data-stu-id="abd1c-505">-or-</span></span> 
 <span data-ttu-id="abd1c-506"><paramref name="millisecond" /> 小於 0 或大於 999。</span><span class="sxs-lookup"><span data-stu-id="abd1c-506"><paramref name="millisecond" /> is less than zero or greater than 999.</span></span>  
  
<span data-ttu-id="abd1c-507">-或-</span><span class="sxs-lookup"><span data-stu-id="abd1c-507">-or-</span></span> 
 <span data-ttu-id="abd1c-508"><paramref name="era" /> 不在曆法支援的範圍內。</span><span class="sxs-lookup"><span data-stu-id="abd1c-508"><paramref name="era" /> is outside the range supported by the calendar.</span></span></exception>
        <altmember cref="T:System.DateTime" />
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="P:System.Globalization.JapaneseCalendar.Eras" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.GetMonthsInYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ToFourDigitYear">
      <MemberSignature Language="C#" Value="public override int ToFourDigitYear (int year);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 ToFourDigitYear(int32 year) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.JapaneseCalendar.ToFourDigitYear(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToFourDigitYear (year As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int ToFourDigitYear(int year);" />
      <MemberSignature Language="F#" Value="override this.ToFourDigitYear : int -&gt; int" Usage="japaneseCalendar.ToFourDigitYear year" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="abd1c-509">表示要轉換年份的整數 (通常是兩位數)。</span><span class="sxs-lookup"><span data-stu-id="abd1c-509">An integer (usually two digits) that represents the year to convert.</span></span></param>
        <summary><span data-ttu-id="abd1c-510">將指定的年份轉換為 4 位數年份，方法是使用 <see cref="P:System.Globalization.JapaneseCalendar.TwoDigitYearMax" /> 屬性以判斷適當的世紀。</span><span class="sxs-lookup"><span data-stu-id="abd1c-510">Converts the specified year to a four-digit year by using the <see cref="P:System.Globalization.JapaneseCalendar.TwoDigitYearMax" /> property to determine the appropriate century.</span></span></summary>
        <returns><span data-ttu-id="abd1c-511">整數，包含 <paramref name="year" /> 的四位數表示。</span><span class="sxs-lookup"><span data-stu-id="abd1c-511">An integer that contains the four-digit representation of <paramref name="year" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="abd1c-512">這個方法會實作 <xref:System.Globalization.Calendar.ToFourDigitYear%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="abd1c-512">This method implements <xref:System.Globalization.Calendar.ToFourDigitYear%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="abd1c-513">因為在日本曆法年份通常少於四個位數，這個實作一律會傳回的值`year`參數。</span><span class="sxs-lookup"><span data-stu-id="abd1c-513">Because the year in the Japanese calendar is typically less than four digits long, this implementation always returns the value of the `year` parameter.</span></span>  
  
 <span data-ttu-id="abd1c-514"><xref:System.Globalization.JapaneseCalendar.ToFourDigitYear%2A> 支援的兩位數年份或四位數年份。</span><span class="sxs-lookup"><span data-stu-id="abd1c-514"><xref:System.Globalization.JapaneseCalendar.ToFourDigitYear%2A> supports either a two-digit year or a four-digit year.</span></span> <span data-ttu-id="abd1c-515">不過，有效的年份是通常以兩位數字 (小於 100)。</span><span class="sxs-lookup"><span data-stu-id="abd1c-515">However, a valid year is generally represented as two digits (less than 100).</span></span> <span data-ttu-id="abd1c-516">傳遞的兩位數年份的值會導致方法將值轉換為四位數字值，根據<xref:System.Globalization.JapaneseCalendar.TwoDigitYearMax%2A>值，表示適當的世紀。</span><span class="sxs-lookup"><span data-stu-id="abd1c-516">Passing a two-digit year value causes the method to convert the value to a four-digit value according to the <xref:System.Globalization.JapaneseCalendar.TwoDigitYearMax%2A> value representing the appropriate century.</span></span> <span data-ttu-id="abd1c-517">如果應用程式提供四位數字值，或如果提供零或負值，<xref:System.Globalization.JapaneseCalendar.ToFourDigitYear%2A>擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="abd1c-517">If the application supplies a four-digit value, or if it supplies zero or a negative value, <xref:System.Globalization.JapaneseCalendar.ToFourDigitYear%2A> throws an exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="abd1c-518"><paramref name="year" /> 不在曆法支援的範圍內。</span><span class="sxs-lookup"><span data-stu-id="abd1c-518"><paramref name="year" /> is outside the range supported by the calendar.</span></span></exception>
        <altmember cref="P:System.Globalization.JapaneseCalendar.TwoDigitYearMax" />
      </Docs>
    </Member>
    <Member MemberName="TwoDigitYearMax">
      <MemberSignature Language="C#" Value="public override int TwoDigitYearMax { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TwoDigitYearMax" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.JapaneseCalendar.TwoDigitYearMax" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property TwoDigitYearMax As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int TwoDigitYearMax { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.TwoDigitYearMax : int with get, set" Usage="System.Globalization.JapaneseCalendar.TwoDigitYearMax" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="abd1c-519">取得或設定以二位數年份表示時，該 100 年範圍的最後一年。</span><span class="sxs-lookup"><span data-stu-id="abd1c-519">Gets or sets the last year of a 100-year range that can be represented by a 2-digit year.</span></span></summary>
        <value><span data-ttu-id="abd1c-520">以二位數年份表示時，該 100 年範圍的最後一年。</span><span class="sxs-lookup"><span data-stu-id="abd1c-520">The last year of a 100-year range that can be represented by a 2-digit year.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="abd1c-521">這個屬性會實作 <xref:System.Globalization.Calendar.TwoDigitYearMax%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="abd1c-521">This property implements <xref:System.Globalization.Calendar.TwoDigitYearMax%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="abd1c-522">因為日本曆法的年份通常少於四個位數，此實作中預設會傳回 99，而且不會影響傳回值<xref:System.Globalization.JapaneseCalendar.ToFourDigitYear%2A>。</span><span class="sxs-lookup"><span data-stu-id="abd1c-522">Because the year in the Japanese calendar is typically less than four digits long, this implementation returns 99 by default and does not affect the return value of <xref:System.Globalization.JapaneseCalendar.ToFourDigitYear%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="abd1c-523">在設定作業中指定的值小於 99。</span><span class="sxs-lookup"><span data-stu-id="abd1c-523">The value specified in a set operation is less than 99.</span></span>  
  
<span data-ttu-id="abd1c-524">-或-</span><span class="sxs-lookup"><span data-stu-id="abd1c-524">-or-</span></span> 
<span data-ttu-id="abd1c-525">在設定作業中指定的值大於 8011 (或 <see langword="MaxSupportedDateTime.Year" />)。</span><span class="sxs-lookup"><span data-stu-id="abd1c-525">The value specified in a set operation is greater than 8011 (or <see langword="MaxSupportedDateTime.Year" />).</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="abd1c-526">在設定作業中，目前執行個體是唯讀的。</span><span class="sxs-lookup"><span data-stu-id="abd1c-526">In a set operation, the current instance is read-only.</span></span></exception>
        <altmember cref="M:System.Globalization.JapaneseCalendar.ToFourDigitYear(System.Int32)" />
      </Docs>
    </Member>
  </Members>
</Type>
