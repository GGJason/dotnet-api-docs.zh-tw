<Type Name="SortKey" FullName="System.Globalization.SortKey">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6fca710b6ed3fd9bd606a31ecf264d79a3c5fdaf" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48722477" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SortKey" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable beforefieldinit SortKey extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Globalization.SortKey" />
  <TypeSignature Language="VB.NET" Value="Public Class SortKey" />
  <TypeSignature Language="C++ CLI" Value="public ref class SortKey" />
  <TypeSignature Language="F#" Value="type SortKey = class" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="da3fd-101">表示將字串對應至其排序鍵的結果。</span>
      <span class="sxs-lookup">
        <span data-stu-id="da3fd-101">Represents the result of mapping a string to its sort key.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da3fd-102">區分文化特性比較兩個字串取決於具有數個類別，排序權數，包括指令碼，是英文字母，字串中的每個字元大小寫和變音符號權數。</span><span class="sxs-lookup"><span data-stu-id="da3fd-102">A culture-sensitive comparison of two strings depends on each character in the strings having several categories of sort weights, including script, alphabetic, case, and diacritic weights.</span></span> <span data-ttu-id="da3fd-103">排序索引鍵做為這些加權的特定字串的儲存機制。</span><span class="sxs-lookup"><span data-stu-id="da3fd-103">A sort key serves as the repository of these weights for a particular string.</span></span>  
  
 <span data-ttu-id="da3fd-104"><xref:System.Globalization.CompareInfo.GetSortKey%2A?displayProperty=nameWithType>方法傳回的執行個體<xref:System.Globalization.SortKey>反映指定的字串中的字元的區分文化特性對應的類別。</span><span class="sxs-lookup"><span data-stu-id="da3fd-104">The <xref:System.Globalization.CompareInfo.GetSortKey%2A?displayProperty=nameWithType> method returns an instance of the <xref:System.Globalization.SortKey> class that reflects the culture-sensitive mapping of characters in a specified string.</span></span> <span data-ttu-id="da3fd-105">值<xref:System.Globalization.SortKey>物件是其索引鍵的資料，由<xref:System.Globalization.SortKey.KeyData%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="da3fd-105">The value of a <xref:System.Globalization.SortKey> object is its key data, which is returned by the <xref:System.Globalization.SortKey.KeyData%2A> property.</span></span> <span data-ttu-id="da3fd-106">此索引鍵的資料是由一系列的字串、 特定文化特性的排序規則和使用者指定的比較選項進行編碼的位元組所組成。</span><span class="sxs-lookup"><span data-stu-id="da3fd-106">This key data consists of a series of bytes that encode the string, culture-specific sorting rules, and user-specified comparison options.</span></span> <span data-ttu-id="da3fd-107">使用的排序鍵比較包含對應的索引鍵資料在每個排序索引鍵中的位元比較。</span><span class="sxs-lookup"><span data-stu-id="da3fd-107">A comparison using sort keys consists of a bitwise comparison of the corresponding key data in each sort key.</span></span>  <span data-ttu-id="da3fd-108">例如，如果您藉由呼叫建立排序索引鍵<xref:System.Globalization.CompareInfo.GetSortKey%28System.String%2CSystem.Globalization.CompareOptions%29>方法，其值為<xref:System.Globalization.CompareOptions.IgnoreCase?displayProperty=nameWithType>，使用的排序鍵的字串比較作業不區分大小寫。</span><span class="sxs-lookup"><span data-stu-id="da3fd-108">For example, if you create a sort key by calling the <xref:System.Globalization.CompareInfo.GetSortKey%28System.String%2CSystem.Globalization.CompareOptions%29> method with a value of <xref:System.Globalization.CompareOptions.IgnoreCase?displayProperty=nameWithType>, a string comparison operation that uses the sort key is case-insensitive.</span></span>  
  
 <span data-ttu-id="da3fd-109">建立字串的排序鍵之後，您藉由呼叫靜態比較排序鍵<xref:System.Globalization.SortKey.Compare%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="da3fd-109">After you create a sort key for a string, you compare sort keys by calling the static <xref:System.Globalization.SortKey.Compare%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="da3fd-110">這個方法會執行簡單的逐位元組比較，因此它的速度比<xref:System.String.Compare%2A?displayProperty=nameWithType>或<xref:System.Globalization.CompareInfo.Compare%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="da3fd-110">This method performs a simple byte-by-byte comparison, so it is much faster than the <xref:System.String.Compare%2A?displayProperty=nameWithType> or <xref:System.Globalization.CompareInfo.Compare%2A?displayProperty=nameWithType> method.</span></span>  

> [!NOTE]
> <span data-ttu-id="da3fd-111">您可以下載[排序權數資料表](https://www.microsoft.com/en-us/download/details.aspx?id=10921)，一組文字檔案包含有關在 Windows 作業系統中，排序和比較作業中使用的字元加權[預設 Unicode定序項目資料表](https://www.unicode.org/Public/UCA/latest/allkeys.txt)，排序權數資料表適用於 Linux 和 macOS。</span><span class="sxs-lookup"><span data-stu-id="da3fd-111">You can download the [Sorting Weight Tables](https://www.microsoft.com/en-us/download/details.aspx?id=10921), a set of text files that contain information on the character weights used in sorting and comparison operations for Windows operating systems, the the [Default Unicode Collation Element Table](https://www.unicode.org/Public/UCA/latest/allkeys.txt), the sort weight table for Linux and macOS.</span></span>

## <a name="performance-considerations"></a><span data-ttu-id="da3fd-112">效能考量</span><span class="sxs-lookup"><span data-stu-id="da3fd-112">Performance considerations</span></span>  
 <span data-ttu-id="da3fd-113">執行字串比較，當<xref:System.Globalization.SortKey.Compare%2A>和<xref:System.Globalization.CompareInfo.Compare%2A?displayProperty=nameWithType>方法會產生相同的結果，但它們以不同的案例為目標。</span><span class="sxs-lookup"><span data-stu-id="da3fd-113">When performing a string comparison, the <xref:System.Globalization.SortKey.Compare%2A> and <xref:System.Globalization.CompareInfo.Compare%2A?displayProperty=nameWithType> methods yield the same results, but they target different scenarios.</span></span>  
  
 <span data-ttu-id="da3fd-114">概括而言，<xref:System.Globalization.CompareInfo.Compare%2A?displayProperty=nameWithType>方法會產生每個字串的排序鍵、 執行比較，然後捨棄的排序鍵，並傳回比較的結果。</span><span class="sxs-lookup"><span data-stu-id="da3fd-114">At a high level, the <xref:System.Globalization.CompareInfo.Compare%2A?displayProperty=nameWithType> method generates the sort key for each string, performs the comparison, and then discards the sort key and returns the result of the comparison.</span></span> <span data-ttu-id="da3fd-115">不過，<xref:System.Globalization.CompareInfo.Compare%2A?displayProperty=nameWithType>方法實際上不會產生整個排序索引鍵，以進行比較。</span><span class="sxs-lookup"><span data-stu-id="da3fd-115">However, the <xref:System.Globalization.CompareInfo.Compare%2A?displayProperty=nameWithType> method actually doesn't generate an entire sort key to perform the comparison.</span></span> <span data-ttu-id="da3fd-116">相反地，此方法會產生每個字串中的索引鍵的資料，每個文字項目 （也就是基底字元、 surrogate 字組或組合字元序列）。</span><span class="sxs-lookup"><span data-stu-id="da3fd-116">Instead, the method generates the key data for each text element (that is, base character, surrogate pair, or combining character sequence) in each string.</span></span> <span data-ttu-id="da3fd-117">方法接著會比較索引鍵對應的文字項目的資料。</span><span class="sxs-lookup"><span data-stu-id="da3fd-117">The method then compares the key data for the corresponding text elements.</span></span> <span data-ttu-id="da3fd-118">一旦決定比較的最終結果，就會終止作業。</span><span class="sxs-lookup"><span data-stu-id="da3fd-118">The operation terminates as soon as the ultimate result of the comparison is determined.</span></span> <span data-ttu-id="da3fd-119">計算的排序索引鍵資訊，但沒有<xref:System.Globalization.SortKey>建立物件。</span><span class="sxs-lookup"><span data-stu-id="da3fd-119">Sort key information is computed, but no <xref:System.Globalization.SortKey> object is created.</span></span> <span data-ttu-id="da3fd-120">這項策略時實惠效能方面一次，比較這兩個字串，但會高度耗費資源，如果相同的字串比較的次數。</span><span class="sxs-lookup"><span data-stu-id="da3fd-120">This strategy is economical in terms of performance if both strings are compared once, but becomes expensive if the same strings are compared many times.</span></span>  
  
 <span data-ttu-id="da3fd-121"><xref:System.Globalization.SortKey.Compare%2A>方法需要產生<xref:System.Globalization.SortKey>針對每個字串，然後再執行比較的物件。</span><span class="sxs-lookup"><span data-stu-id="da3fd-121">The <xref:System.Globalization.SortKey.Compare%2A> method requires generation of a <xref:System.Globalization.SortKey> object for each string before performing the comparison.</span></span> <span data-ttu-id="da3fd-122">此策略會耗用大量效能的第一個比較，因為時間和投資以產生記憶體<xref:System.Globalization.SortKey>物件。</span><span class="sxs-lookup"><span data-stu-id="da3fd-122">This strategy is expensive in terms of performance for the first comparison because of the time and memory invested to generate the <xref:System.Globalization.SortKey> objects.</span></span> <span data-ttu-id="da3fd-123">不過，它會變成符合經濟效益，如果相同的排序鍵比較的次數。</span><span class="sxs-lookup"><span data-stu-id="da3fd-123">However, it becomes economical if the same sort keys are compared many times.</span></span>  
  
 <span data-ttu-id="da3fd-124">例如，假設您撰寫的應用程式，搜尋的字串為基礎的索引資料行符合指定的搜尋字串的資料列的資料庫資料表。</span><span class="sxs-lookup"><span data-stu-id="da3fd-124">For example, suppose you write an application that searches a database table for the row in which the string-based index column matches a specified search string.</span></span> <span data-ttu-id="da3fd-125">資料表包含數千個資料列，並且比較每個資料列中的索引的搜尋字串需要很長的時間。</span><span class="sxs-lookup"><span data-stu-id="da3fd-125">The table contains thousands of rows, and comparing the search string to the index in each row will take a long time.</span></span> <span data-ttu-id="da3fd-126">因此，當應用程式儲存的資料列和其索引資料行，它也會產生，並專門用來提升搜尋效能資料行中儲存索引的排序索引鍵。</span><span class="sxs-lookup"><span data-stu-id="da3fd-126">Therefore, when the application stores a row and its index column, it also generates and stores the sort key for the index in a column dedicated to improving search performance.</span></span> <span data-ttu-id="da3fd-127">當應用程式搜尋目標資料列時，它會比較的索引字串，而不是比較索引字串的搜尋字串的排序索引鍵的搜尋字串的排序索引鍵。</span><span class="sxs-lookup"><span data-stu-id="da3fd-127">When the application searches for a target row, it compares the sort key for the search string to the sort key for the index string, instead of comparing the search string to the index string.</span></span>  
  
## <a name="security-considerations"></a><span data-ttu-id="da3fd-128">安全性考量</span><span class="sxs-lookup"><span data-stu-id="da3fd-128">Security considerations</span></span>  
 <span data-ttu-id="da3fd-129"><xref:System.Globalization.CompareInfo.GetSortKey%28System.String%2CSystem.Globalization.CompareOptions%29?displayProperty=nameWithType>方法會傳回<xref:System.Globalization.SortKey>物件的值，根據指定的字串與<xref:System.Globalization.CompareOptions>值，以及與基礎相關聯的文化特性<xref:System.Globalization.CompareInfo>物件。</span><span class="sxs-lookup"><span data-stu-id="da3fd-129">The <xref:System.Globalization.CompareInfo.GetSortKey%28System.String%2CSystem.Globalization.CompareOptions%29?displayProperty=nameWithType> method returns a <xref:System.Globalization.SortKey> object with the value based on a specified string and <xref:System.Globalization.CompareOptions> value, and the culture associated with the underlying <xref:System.Globalization.CompareInfo> object.</span></span> <span data-ttu-id="da3fd-130">如果安全性決策是根據字串比較或大小寫變更而定，您應該使用<xref:System.Globalization.CompareInfo.GetSortKey%28System.String%2CSystem.Globalization.CompareOptions%29?displayProperty=nameWithType>方法而異的文化特性，以確保作業的行為一致，不論作業系統的文化特性設定為何。</span><span class="sxs-lookup"><span data-stu-id="da3fd-130">If a security decision depends on a string comparison or case change, you should use the <xref:System.Globalization.CompareInfo.GetSortKey%28System.String%2CSystem.Globalization.CompareOptions%29?displayProperty=nameWithType> method of the invariant culture to ensure that the behavior of the operation is consistent, regardless of the culture settings of the operating system.</span></span>  
  
 <span data-ttu-id="da3fd-131">您可以使用下列步驟來取得排序索引鍵：</span><span class="sxs-lookup"><span data-stu-id="da3fd-131">Use the following steps to obtain a sort key:</span></span>  
  
1.  <span data-ttu-id="da3fd-132">擷取的文化特性而異<xref:System.Globalization.CultureInfo.InvariantCulture?displayProperty=nameWithType>屬性。</span><span class="sxs-lookup"><span data-stu-id="da3fd-132">Retrieve the invariant culture from the <xref:System.Globalization.CultureInfo.InvariantCulture?displayProperty=nameWithType> property.</span></span>  
  
2.  <span data-ttu-id="da3fd-133">擷取<xref:System.Globalization.CompareInfo>而異的文化特性，從物件<xref:System.Globalization.CultureInfo.CompareInfo%2A?displayProperty=nameWithType>屬性。</span><span class="sxs-lookup"><span data-stu-id="da3fd-133">Retrieve a <xref:System.Globalization.CompareInfo> object for the invariant culture from the <xref:System.Globalization.CultureInfo.CompareInfo%2A?displayProperty=nameWithType> property.</span></span>  
  
3.  <span data-ttu-id="da3fd-134">呼叫 <xref:System.Globalization.CompareInfo.GetSortKey%28System.String%2CSystem.Globalization.CompareOptions%29?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="da3fd-134">Call the <xref:System.Globalization.CompareInfo.GetSortKey%28System.String%2CSystem.Globalization.CompareOptions%29?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="da3fd-135">使用的值<xref:System.Globalization.SortKey>物件是否相當於呼叫 Windows `LCMapString` LCMAP_SORTKEY 值的指定方法。</span><span class="sxs-lookup"><span data-stu-id="da3fd-135">Working with the value of a <xref:System.Globalization.SortKey> object is equivalent to calling the Windows `LCMapString` method with the LCMAP_SORTKEY value specified.</span></span> <span data-ttu-id="da3fd-136">不過，對於<xref:System.Globalization.SortKey>物件中，使用英文字元的排序索引鍵前面韓文字元的排序索引鍵。</span><span class="sxs-lookup"><span data-stu-id="da3fd-136">However, for the <xref:System.Globalization.SortKey> object, the sort keys for English characters precede the sort keys for Korean characters.</span></span>  
  
 <span data-ttu-id="da3fd-137"><xref:System.Globalization.SortKey> 物件可以序列化，但只限於，讓它們可以跨<xref:System.AppDomain>物件。</span><span class="sxs-lookup"><span data-stu-id="da3fd-137"><xref:System.Globalization.SortKey> objects can be serialized, but only so that they can cross <xref:System.AppDomain> objects.</span></span> <span data-ttu-id="da3fd-138">如果應用程式序列化<xref:System.Globalization.SortKey>物件時，應用程式必須重新產生所有排序索引鍵，新的.NET framework 版本時。</span><span class="sxs-lookup"><span data-stu-id="da3fd-138">If an application serializes a <xref:System.Globalization.SortKey> object, the application must regenerate all the sort keys when there is a new version of the .NET Framework.</span></span>  
  
 <span data-ttu-id="da3fd-139">多個排序鍵的詳細資訊，請參閱 Unicode 技術標準 #10，"Unicode 定序演算法 」，在[Unicode 協會網站](http://go.microsoft.com/fwlink/?linkid=37123)。</span><span class="sxs-lookup"><span data-stu-id="da3fd-139">For more information about sort keys, see Unicode Technical Standard #10, "Unicode Collation Algorithm" on the [Unicode Consortium website](http://go.microsoft.com/fwlink/?linkid=37123).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="da3fd-140">下列範例會比較使用"EN-US"和"ES-ES"文化特性，以及"EN-US"和"ES-ES"傳統的文化特性字串"駱馬"。</span><span class="sxs-lookup"><span data-stu-id="da3fd-140">The following example compares the string "llama" using the "en-US" and "es-ES" cultures, and the "en-US" and "es-ES" traditional cultures.</span></span>  
  
 [!code-cpp[System.Globalization.SortKey.Compare#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.SortKey.Compare/CPP/sortkey_compare.cpp#1)]
 [!code-csharp[System.Globalization.SortKey.Compare#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.SortKey.Compare/CS/sortkey_compare.cs#1)]
 [!code-vb[System.Globalization.SortKey.Compare#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.SortKey.Compare/VB/sortkey_compare.vb#1)]  
  
 <span data-ttu-id="da3fd-141">下列範例示範如何使用<xref:System.Globalization.SortKey>類別來改善大量依賴排序和搜尋大型陣列的應用程式中的效能。</span><span class="sxs-lookup"><span data-stu-id="da3fd-141">The following example shows how you can use the <xref:System.Globalization.SortKey> class to improve performance in an application that relies extensively on sorting and searching a large array.</span></span> <span data-ttu-id="da3fd-142">此範例會建立未排序的陣列名稱，在此情況下有 13 個元素。</span><span class="sxs-lookup"><span data-stu-id="da3fd-142">The example creates an unordered array of names, which in this case has 13 elements.</span></span> <span data-ttu-id="da3fd-143">接著會每個名稱的排序索引鍵儲存在平行陣列中，這會傳遞給<xref:System.Array.Sort%28System.Array%2CSystem.Array%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="da3fd-143">It then stores the sort key of each name in a parallel array, which it passes to the <xref:System.Array.Sort%28System.Array%2CSystem.Array%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="da3fd-144">結果是已排序的陣列。</span><span class="sxs-lookup"><span data-stu-id="da3fd-144">The result is a sorted array.</span></span> <span data-ttu-id="da3fd-145">此範例接著會搜尋三個字串的陣列。</span><span class="sxs-lookup"><span data-stu-id="da3fd-145">The example then searches the array for three strings.</span></span> <span data-ttu-id="da3fd-146">每個搜尋字串，它會呼叫<xref:System.Globalization.CompareInfo.GetSortKey%28System.String%2CSystem.Globalization.CompareOptions%29?displayProperty=nameWithType>方法來擷取字串的排序索引鍵，然後再呼叫<xref:System.Array.FindIndex%2A?displayProperty=nameWithType>方法來擷取該陣列中的排序索引鍵的排序索引鍵的索引。</span><span class="sxs-lookup"><span data-stu-id="da3fd-146">For each search string, it calls the <xref:System.Globalization.CompareInfo.GetSortKey%28System.String%2CSystem.Globalization.CompareOptions%29?displayProperty=nameWithType> method to retrieve the string's sort key, and then calls the <xref:System.Array.FindIndex%2A?displayProperty=nameWithType> method to retrieve the index of that sort key in the array of sort keys.</span></span> <span data-ttu-id="da3fd-147">名稱和排序的索引鍵陣列是平行的因為傳回的索引也是您的索引中的名稱`names`陣列。</span><span class="sxs-lookup"><span data-stu-id="da3fd-147">Because the name and sort key arrays are parallel, the returned index is also the index of the name in the `names` array.</span></span>  
  
 [!code-csharp[System.Globalization.SortKey.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.sortkey.class/cs/sortkey1.cs#1)]
 [!code-vb[System.Globalization.SortKey.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.sortkey.class/vb/sortkey1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Globalization.CompareInfo.GetSortKey(System.String,System.Globalization.CompareOptions)" />
    <altmember cref="P:System.Globalization.SortKey.KeyData" />
  </Docs>
  <Members>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public static int Compare (System.Globalization.SortKey sortkey1, System.Globalization.SortKey sortkey2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Compare(class System.Globalization.SortKey sortkey1, class System.Globalization.SortKey sortkey2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.SortKey.Compare(System.Globalization.SortKey,System.Globalization.SortKey)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compare (sortkey1 As SortKey, sortkey2 As SortKey) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Compare(System::Globalization::SortKey ^ sortkey1, System::Globalization::SortKey ^ sortkey2);" />
      <MemberSignature Language="F#" Value="static member Compare : System.Globalization.SortKey * System.Globalization.SortKey -&gt; int" Usage="System.Globalization.SortKey.Compare (sortkey1, sortkey2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sortkey1" Type="System.Globalization.SortKey" />
        <Parameter Name="sortkey2" Type="System.Globalization.SortKey" />
      </Parameters>
      <Docs>
        <param name="sortkey1">
          <span data-ttu-id="da3fd-148">要比較的第一個排序鍵。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da3fd-148">The first sort key to compare.</span>
          </span>
        </param>
        <param name="sortkey2">
          <span data-ttu-id="da3fd-149">要比較的第二個排序鍵。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da3fd-149">The second sort key to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="da3fd-150">比較兩個排序鍵。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da3fd-150">Compares two sort keys.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="da3fd-151">帶正負號的整數，表示 <paramref name="sortkey1" /> 與 <paramref name="sortkey2" /> 之間的關聯性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da3fd-151">A signed integer that indicates the relationship between <paramref name="sortkey1" /> and <paramref name="sortkey2" />.</span>
          </span>
          <list type="table">
            <listheader>
              <term>
                <span data-ttu-id="da3fd-152">值</span>
                <span class="sxs-lookup">
                  <span data-stu-id="da3fd-152">Value</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="da3fd-153">條件</span>
                <span class="sxs-lookup">
                  <span data-stu-id="da3fd-153">Condition</span>
                </span>
              </description>
            </listheader>
            <item>
              <term>
                <span data-ttu-id="da3fd-154">小於零</span>
                <span class="sxs-lookup">
                  <span data-stu-id="da3fd-154">Less than zero</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="da3fd-155">
                  <paramref name="sortkey1" /> 小於 <paramref name="sortkey2" />。</span>
                <span class="sxs-lookup">
                  <span data-stu-id="da3fd-155">
                    <paramref name="sortkey1" /> is less than <paramref name="sortkey2" />.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="da3fd-156">零</span>
                <span class="sxs-lookup">
                  <span data-stu-id="da3fd-156">Zero</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="da3fd-157">
                  <paramref name="sortkey1" /> 等於 <paramref name="sortkey2" />。</span>
                <span class="sxs-lookup">
                  <span data-stu-id="da3fd-157">
                    <paramref name="sortkey1" /> is equal to <paramref name="sortkey2" />.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="da3fd-158">大於零</span>
                <span class="sxs-lookup">
                  <span data-stu-id="da3fd-158">Greater than zero</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="da3fd-159">
                  <paramref name="sortkey1" /> 大於 <paramref name="sortkey2" />。</span>
                <span class="sxs-lookup">
                  <span data-stu-id="da3fd-159">
                    <paramref name="sortkey1" /> is greater than <paramref name="sortkey2" />.</span>
                </span>
              </description>
            </item>
          </list>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da3fd-160"><xref:System.Globalization.SortKey.Compare%2A>方法會比較<xref:System.Globalization.SortKey.KeyData%2A>的屬性`sortkey1`和`sortkey2`參數。</span><span class="sxs-lookup"><span data-stu-id="da3fd-160">The <xref:System.Globalization.SortKey.Compare%2A> method compares the <xref:System.Globalization.SortKey.KeyData%2A> properties of the `sortkey1` and `sortkey2` parameters.</span></span> <span data-ttu-id="da3fd-161">方法會產生相同的結果為<xref:System.Globalization.CompareInfo.Compare%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="da3fd-161">The method yields the same results as the <xref:System.Globalization.CompareInfo.Compare%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="da3fd-162">如需詳細資訊<xref:System.Globalization.SortKey.Compare%2A>方法，並比較的排序鍵，請參閱<xref:System.Globalization.SortKey>類別主題。</span><span class="sxs-lookup"><span data-stu-id="da3fd-162">For more information about the <xref:System.Globalization.SortKey.Compare%2A> method and the comparison of sort keys, see the <xref:System.Globalization.SortKey> class topic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="da3fd-163">下列程式碼範例會比較使用兩個字串<xref:System.Globalization.SortKey.Compare%2A>方法，並對等項目<xref:System.Globalization.CompareInfo.Compare%28System.String%2CSystem.String%2CSystem.Globalization.CompareOptions%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="da3fd-163">The following code example compares two strings using the <xref:System.Globalization.SortKey.Compare%2A> method and the equivalent <xref:System.Globalization.CompareInfo.Compare%28System.String%2CSystem.String%2CSystem.Globalization.CompareOptions%29?displayProperty=nameWithType> method.</span></span>  
  
 [!code-csharp[sys.glob.sortkey.compare#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.sortkey.compare/cs/skcmp.cs#1)]
 [!code-vb[sys.glob.sortkey.compare#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.sortkey.compare/vb/skcmp.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="da3fd-164">
            <paramref name="sortkey1" /> 或 <paramref name="sortkey2" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da3fd-164">
              <paramref name="sortkey1" /> or <paramref name="sortkey2" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.SortKey.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="sortKey.Equals value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="da3fd-165">要與目前 <see cref="T:System.Globalization.SortKey" /> 物件比較的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da3fd-165">The object to compare with the current <see cref="T:System.Globalization.SortKey" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="da3fd-166">判斷指定的物件是否等於目前的 <see cref="T:System.Globalization.SortKey" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da3fd-166">Determines whether the specified object is equal to the current <see cref="T:System.Globalization.SortKey" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="da3fd-167">如果 <paramref name="value" /> 參數等於目前的 <see cref="T:System.Globalization.SortKey" /> 物件，則為 <see langword="true" />；否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da3fd-167">
              <see langword="true" /> if the <paramref name="value" /> parameter is equal to the current <see cref="T:System.Globalization.SortKey" /> object; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da3fd-168">兩個<xref:System.Globalization.SortKey>物件會被視為相等，如果其<xref:System.Globalization.SortKey.KeyData%2A>屬性相等。</span><span class="sxs-lookup"><span data-stu-id="da3fd-168">Two <xref:System.Globalization.SortKey> objects are considered equal if their <xref:System.Globalization.SortKey.KeyData%2A> properties are equal.</span></span>  
  
 <span data-ttu-id="da3fd-169">這個方法覆寫 <xref:System.Object.Equals%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="da3fd-169">This method overrides <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="da3fd-170">下列程式碼範例顯示的結果<xref:System.Globalization.SortKey.Equals%2A>相較於不同<xref:System.Globalization.SortKey>物件。</span><span class="sxs-lookup"><span data-stu-id="da3fd-170">The following code example shows the results of <xref:System.Globalization.SortKey.Equals%2A> when compared with different <xref:System.Globalization.SortKey> objects.</span></span>  
  
 [!code-cpp[System.Globalization.SortKey.Equals#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.SortKey.Equals/CPP/sortkey_equals.cpp#1)]
 [!code-csharp[System.Globalization.SortKey.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.SortKey.Equals/CS/sortkey_equals.cs#1)]
 [!code-vb[System.Globalization.SortKey.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.SortKey.Equals/VB/sortkey_equals.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="da3fd-171">
            <paramref name="value" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da3fd-171">
              <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Object.Equals(System.Object)" />
        <altmember cref="P:System.Globalization.SortKey.KeyData" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.SortKey.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="sortKey.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="da3fd-172">做為目前 <see cref="T:System.Globalization.SortKey" /> 物件的雜湊函式，亦即適用於雜湊演算法和資料結構 (如雜湊表)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da3fd-172">Serves as a hash function for the current <see cref="T:System.Globalization.SortKey" /> object that is suitable for hashing algorithms and data structures such as a hash table.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="da3fd-173">目前 <see cref="T:System.Globalization.SortKey" /> 物件的雜湊碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da3fd-173">A hash code for the current <see cref="T:System.Globalization.SortKey" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da3fd-174">這個方法會為兩個物件產生相同雜湊程式碼，這兩個物件根據 <xref:System.Globalization.SortKey.Equals%2A> 方法是相等的物件。</span><span class="sxs-lookup"><span data-stu-id="da3fd-174">This method generates the same hash code for two objects that are equal according to the <xref:System.Globalization.SortKey.Equals%2A> method.</span></span>  
  
 <span data-ttu-id="da3fd-175">這個方法覆寫 <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="da3fd-175">This method overrides <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.GetHashCode" />
        <altmember cref="T:System.Collections.Hashtable" />
        <altmember cref="M:System.Globalization.SortKey.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="KeyData">
      <MemberSignature Language="C#" Value="public virtual byte[] KeyData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] KeyData" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.SortKey.KeyData" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property KeyData As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;System::Byte&gt; ^ KeyData { cli::array &lt;System::Byte&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.KeyData : byte[]" Usage="System.Globalization.SortKey.KeyData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="da3fd-176">取得表示目前 <see cref="T:System.Globalization.SortKey" /> 物件的位元組陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da3fd-176">Gets the byte array representing the current <see cref="T:System.Globalization.SortKey" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="da3fd-177">表示目前 <see cref="T:System.Globalization.SortKey" /> 物件的位元組陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da3fd-177">A byte array representing the current <see cref="T:System.Globalization.SortKey" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da3fd-178">如需使用所傳回的資料<xref:System.Globalization.SortKey.KeyData%2A>屬性中比較字串，請參閱<xref:System.Globalization.SortKey>類別主題。</span><span class="sxs-lookup"><span data-stu-id="da3fd-178">For more information about the use of the data returned by the <xref:System.Globalization.SortKey.KeyData%2A> property in comparing strings, see the <xref:System.Globalization.SortKey> class topic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="da3fd-179">下列程式碼範例會顯示為原始字串的相等字串和區分大小寫的排序索引鍵和不區分大小寫的排序索引鍵的索引鍵資料。</span><span class="sxs-lookup"><span data-stu-id="da3fd-179">The following code example displays an original string and the equivalent string and key data for a case-sensitive sort key and a case-insensitive sort key.</span></span>  
  
 [!code-csharp[sys.glob.sortkey.tostring#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.sortkey.tostring/cs/ts.cs#1)]
 [!code-vb[sys.glob.sortkey.tostring#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.sortkey.tostring/vb/ts.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OriginalString">
      <MemberSignature Language="C#" Value="public virtual string OriginalString { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OriginalString" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.SortKey.OriginalString" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property OriginalString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ OriginalString { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OriginalString : string" Usage="System.Globalization.SortKey.OriginalString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="da3fd-180">取得用來建立目前 <see cref="T:System.Globalization.SortKey" /> 物件的原始字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da3fd-180">Gets the original string used to create the current <see cref="T:System.Globalization.SortKey" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="da3fd-181">用以建立目前 <see cref="T:System.Globalization.SortKey" /> 物件的原始字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da3fd-181">The original string used to create the current <see cref="T:System.Globalization.SortKey" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="da3fd-182">下列程式碼範例會顯示為原始字串的相等字串和區分大小寫的排序索引鍵和不區分大小寫的排序索引鍵的索引鍵資料。</span><span class="sxs-lookup"><span data-stu-id="da3fd-182">The following code example displays an original string and the equivalent string and key data for a case-sensitive sort key and a case-insensitive sort key.</span></span>  
  
 [!code-csharp[sys.glob.sortkey.tostring#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.sortkey.tostring/cs/ts.cs#1)]
 [!code-vb[sys.glob.sortkey.tostring#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.sortkey.tostring/vb/ts.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.SortKey.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="sortKey.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="da3fd-183">傳回表示目前 <see cref="T:System.Globalization.SortKey" /> 物件的字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da3fd-183">Returns a string that represents the current <see cref="T:System.Globalization.SortKey" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="da3fd-184">代表目前 <see cref="T:System.Globalization.SortKey" /> 物件的字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da3fd-184">A string that represents the current <see cref="T:System.Globalization.SortKey" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da3fd-185">傳回值是"SortKey-"的字串串連、 文化特性識別項和比較選項的目前<xref:System.Globalization.SortKey>物件和值<xref:System.Globalization.SortKey.OriginalString%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="da3fd-185">The return value is the concatenation of the string "SortKey - ", the culture identifier and compare options of the current <xref:System.Globalization.SortKey> object, and the value of the <xref:System.Globalization.SortKey.OriginalString%2A> property.</span></span>  
  
 <span data-ttu-id="da3fd-186">這個方法覆寫 <xref:System.Object.ToString%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="da3fd-186">This method overrides <xref:System.Object.ToString%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="da3fd-187">下列程式碼範例會顯示原始的字串，所產生的字串<xref:System.Globalization.SortKey.ToString%2A>區分大小寫和區分大小寫的排序鍵，和區分大小寫和區分大小寫的排序索引鍵的按鍵資料的方法。</span><span class="sxs-lookup"><span data-stu-id="da3fd-187">The following code example displays an original string, the strings yielded by the <xref:System.Globalization.SortKey.ToString%2A> method for case-sensitive and case-insensitive sort keys, and the key data for case-sensitive and case-insensitive sort keys.</span></span>  
  
 [!code-csharp[sys.glob.sortkey.tostring#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.sortkey.tostring/cs/ts.cs#1)]
 [!code-vb[sys.glob.sortkey.tostring#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.sortkey.tostring/vb/ts.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.ToString" />
      </Docs>
    </Member>
  </Members>
</Type>