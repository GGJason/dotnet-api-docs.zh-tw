<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="TextElementEnumerator.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-567ae5a" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7c5b04be-ac4f-4958-bcde-0afae05845525b95e0156062b38c0d1ce876f4a2550fefe49e1b.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5b95e0156062b38c0d1ce876f4a2550fefe49e1b</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3507e865a3613c00760f25ad1045aaa11bae4dd8</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/23/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Globalization.TextElementEnumerator">
          <source>Enumerates the text elements of a string.</source>
          <target state="translated">列舉字串的文字項目。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.TextElementEnumerator">
          <source>The .NET Framework defines a text element as a unit of text that is displayed as a single character, that is, a grapheme.</source>
          <target state="translated">.NET Framework 定義的文字項目當做一個單位顯示為單一字元，也就是字母的文字。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.TextElementEnumerator">
          <source>A text element can be any of the following:</source>
          <target state="translated">文字項目可以是下列其中一項：</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.TextElementEnumerator">
          <source>A base character, which is represented as a single <ph id="ph1">&lt;xref:System.Char&gt;</ph> value.</source>
          <target state="translated">基底的字元，表示為單一<ph id="ph1">&lt;xref:System.Char&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.TextElementEnumerator">
          <source>For example, LATIN CAPITAL LETTER A (U+0041) and LATIN SMALL LETTER AE (U+00E6) are base characters.</source>
          <target state="translated">例如，英文大寫字母 A (U + 0041) 和小字母 AE 拉丁 (U + 00E6) 都是基底的字元。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.TextElementEnumerator">
          <source>A combining character sequence, which consists of a base character and one or more combining characters.</source>
          <target state="translated">結合字元序列，其中包含基底字元與一或多個組合字元。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.TextElementEnumerator">
          <source>For example, example, LATIN CAPITAL LETTER A (U+0041) followed by COMBINING MACRON (U+0304) is a combining character sequence.</source>
          <target state="translated">例如，範例中，LATIN CAPITAL LETTER A (U + 0041) 後面接著結合長音符號 (U + 0304) 是結合字元序列。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.TextElementEnumerator">
          <source>Surrogate pairs, which the <bpt id="p1">[</bpt>Unicode Standard<ept id="p1">](http://go.microsoft.com/fwlink/?linkid=37123)</ept> defines as a coded character representation for a single abstract character that consists of a sequence of two code units: a high surrogate, and a low surrogate.</source>
          <target state="translated">Surrogate 字組，其中<bpt id="p1">[</bpt>Unicode 標準<ept id="p1">](http://go.microsoft.com/fwlink/?linkid=37123)</ept>定義為包含兩個字碼單位的順序是單一抽象字元編碼的字元表示： 為高 surrogate 和低 surrogate。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.TextElementEnumerator">
          <source>Surrogate pairs are used to represent characters outside of the Unicode Basic Multilingual Plane as UTF-16 encoded characters.</source>
          <target state="translated">Surrogate 字組用來表示不在 Unicode 基本多語文字面為 utf-16 編碼的字元。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.TextElementEnumerator">
          <source>For example, GOTHIC LETTER SAUIL (U+10343) is represented in UTF-16 encoding as a high surrogate whose value is 0xD800 and a low surrogate whose value is 0xDF43.</source>
          <target state="translated">例如，GOTHIC 字母 SAUIL (U + 10343) 都會以 utf-16 編碼方式為高 surrogate，其值是 0xD800 和其值是 0xDF43 為低 surrogate。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.TextElementEnumerator">
          <source>A surrogate pair can represent a base character or a combining character.</source>
          <target state="translated">基底字元或組合字元，可代表 surrogate 字組。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.TextElementEnumerator">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator&gt;</ph> class allows you to work with the text elements in a string rather than with single <ph id="ph2">&lt;xref:System.Char&gt;</ph> objects.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator&gt;</ph>類別可讓您能夠在字串中的文字項目，而非單一<ph id="ph2">&lt;xref:System.Char&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.TextElementEnumerator">
          <source>You instantiate a <ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator&gt;</ph> object that represents a particular string by passing the string to the <ph id="ph2">&lt;xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">您具現化<ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator&gt;</ph>物件，代表特定的字串，由傳遞字串至<ph id="ph2">&lt;xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A?displayProperty=nameWithType&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.TextElementEnumerator">
          <source>This returns an enumerator that is positioned before the first text element in the string.</source>
          <target state="translated">這會傳回位於字串中的第一個文字項目之前的列舉值。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.TextElementEnumerator">
          <source>Calling the <ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator.Reset%2A&gt;</ph> method also brings the enumerator back to this position.</source>
          <target state="translated">呼叫<ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator.Reset%2A&gt;</ph>方法也會列舉值帶回至這個位置。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.TextElementEnumerator">
          <source>Because this represents an invalid state, you must call <ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator.MoveNext%2A&gt;</ph> to advance the enumerator to the first text element of the string before reading the value of the <ph id="ph2">&lt;xref:System.Globalization.TextElementEnumerator.Current%2A&gt;</ph> property to return the current text element.</source>
          <target state="translated">由於這表示無效的狀態，您必須呼叫<ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator.MoveNext%2A&gt;</ph>以前移至字串的第一個文字項目之前讀取值<ph id="ph2">&lt;xref:System.Globalization.TextElementEnumerator.Current%2A&gt;</ph>屬性來傳回目前的文字項目。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.TextElementEnumerator">
          <source>When working with a <ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator&gt;</ph> object, you are responsible for positioning the enumerator.</source>
          <target state="translated">當使用<ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator&gt;</ph>物件，您必須負責定位列舉值。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.TextElementEnumerator">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator.Current%2A&gt;</ph> property returns the same text element until you call either <ph id="ph2">&lt;xref:System.Globalization.TextElementEnumerator.MoveNext%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Globalization.TextElementEnumerator.Reset%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator.Current%2A&gt;</ph>屬性會傳回相同的文字項目，直到您可以呼叫<ph id="ph2">&lt;xref:System.Globalization.TextElementEnumerator.MoveNext%2A&gt;</ph>或<ph id="ph3">&lt;xref:System.Globalization.TextElementEnumerator.Reset%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.TextElementEnumerator">
          <source>The enumerator is in an invalid state if it is positioned before the first text element or after the last text element in the string.</source>
          <target state="translated">列舉程式會處於無效狀態，如果位於第一個文字項目之前或之後在字串中的最後一個文字項目。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.TextElementEnumerator">
          <source>When the enumerator is in an invalid state, attempting to retrieve the value of the <ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator.Current%2A&gt;</ph> property throws an exception.</source>
          <target state="translated">處於無效狀態的列舉值時，嘗試擷取的值<ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator.Current%2A&gt;</ph>屬性會擲回的例外狀況。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.TextElementEnumerator">
          <source>You can determine whether the enumerator is in an invalid state by testing whether the return value of the <ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator.MoveNext%2A&gt;</ph> property is <ph id="ph2">`false`</ph>.</source>
          <target state="translated">您可以判斷列舉值是否處於無效狀態中，藉由測試是否的傳回值<ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator.MoveNext%2A&gt;</ph>屬性是<ph id="ph2">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.TextElementEnumerator">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator&gt;</ph> object represents a snapshot of the current state of a string variable or string literal at the moment that the <ph id="ph2">&lt;xref:System.Globalization.TextElementEnumerator&gt;</ph> object is instantiated.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator&gt;</ph>物件代表目前的字串變數或字串常值的目前狀態的快照集，<ph id="ph2">&lt;xref:System.Globalization.TextElementEnumerator&gt;</ph>物件具現化。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.TextElementEnumerator">
          <source>Note that:</source>
          <target state="translated">請注意：</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.TextElementEnumerator">
          <source>Text element enumerators can only be used to read data in a string.</source>
          <target state="translated">文字項目列舉值只可以用來讀取字串中的資料。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.TextElementEnumerator">
          <source>They cannot modify the underlying string.</source>
          <target state="translated">他們不能修改基礎字串。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.TextElementEnumerator">
          <source>An enumerator does not have exclusive access to the string that it represents.</source>
          <target state="translated">列舉值並沒有獨佔存取權就表示的字串。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.TextElementEnumerator">
          <source>A string variable can be modified after the enumerator is created.</source>
          <target state="translated">建立列舉值之後，就可以修改字串變數。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.TextElementEnumerator">
          <source>A <ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator&gt;</ph> object enumerates the text elements present in the string at the time that the <ph id="ph2">&lt;xref:System.Globalization.TextElementEnumerator&gt;</ph> object was instantiated.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator&gt;</ph>物件列舉字串中時出現的文字項目，<ph id="ph2">&lt;xref:System.Globalization.TextElementEnumerator&gt;</ph>物件已具現化。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.TextElementEnumerator">
          <source>It does not reflect any subsequent changes to the string variable if that variable is modified afterward.</source>
          <target state="translated">如果該變數已修改之後，它不會反映字串變數的任何後續變更。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.TextElementEnumerator">
          <source>Because the <ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator&gt;</ph> class does not override <ph id="ph2">&lt;xref:System.Object.Equals%2A?displayProperty=nameWithType&gt;</ph>, two <ph id="ph3">&lt;xref:System.Globalization.TextElementEnumerator&gt;</ph> objects that represent the same string will be considered unequal.</source>
          <target state="translated">因為<ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator&gt;</ph>類別不會覆寫<ph id="ph2">&lt;xref:System.Object.Equals%2A?displayProperty=nameWithType&gt;</ph>、 兩個<ph id="ph3">&lt;xref:System.Globalization.TextElementEnumerator&gt;</ph>相同的字串表示的物件會被視為不相等。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.TextElementEnumerator">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator&gt;</ph> class to enumerate the text elements of a string.</source>
          <target state="translated">下列範例會使用<ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator&gt;</ph>列舉字串的文字項目類別。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="P:System.Globalization.TextElementEnumerator.Current">
          <source>Gets the current text element in the string.</source>
          <target state="translated">取得字串中目前的文字項目。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Globalization.TextElementEnumerator.Current">
          <source>An object containing the current text element in the string.</source>
          <target state="translated">含有字串中目前文字項目的物件。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Globalization.TextElementEnumerator.Current">
          <source>After an enumerator is created or after a <ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator.Reset%2A&gt;</ph> is called, <ph id="ph2">&lt;xref:System.Globalization.TextElementEnumerator.MoveNext%2A&gt;</ph> must be called to advance the enumerator to the first text element of the string before reading the value of <ph id="ph3">&lt;xref:System.Globalization.TextElementEnumerator.Current%2A&gt;</ph>.</source>
          <target state="translated">建立列舉值之後或在之後<ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator.Reset%2A&gt;</ph>呼叫時，<ph id="ph2">&lt;xref:System.Globalization.TextElementEnumerator.MoveNext%2A&gt;</ph>列舉值前移至字串的第一個文字項目之前讀取的值必須呼叫<ph id="ph3">&lt;xref:System.Globalization.TextElementEnumerator.Current%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Globalization.TextElementEnumerator.Current">
          <source>Otherwise, <ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator.Current%2A&gt;</ph> is undefined.</source>
          <target state="translated">否則，<ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator.Current%2A&gt;</ph>是未定義。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Globalization.TextElementEnumerator.Current">
          <source><ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator.Current%2A&gt;</ph> also throws an exception if the last call to <ph id="ph2">&lt;xref:System.Globalization.TextElementEnumerator.MoveNext%2A&gt;</ph> returned <ph id="ph3">`false`</ph>, which indicates the end of the string.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator.Current%2A&gt;</ph> 也會發生例外狀況，如果最後一個呼叫<ph id="ph2">&lt;xref:System.Globalization.TextElementEnumerator.MoveNext%2A&gt;</ph>傳回<ph id="ph3">`false`</ph>，表示字串的結尾。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Globalization.TextElementEnumerator.Current">
          <source><ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator.Current%2A&gt;</ph> does not move the position of the enumerator, and consecutive calls to <ph id="ph2">&lt;xref:System.Globalization.TextElementEnumerator.Current%2A&gt;</ph> return the same object until either <ph id="ph3">&lt;xref:System.Globalization.TextElementEnumerator.MoveNext%2A&gt;</ph> or <ph id="ph4">&lt;xref:System.Globalization.TextElementEnumerator.Reset%2A&gt;</ph> is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator.Current%2A&gt;</ph> 不會移動的列舉程式及連續呼叫位置<ph id="ph2">&lt;xref:System.Globalization.TextElementEnumerator.Current%2A&gt;</ph>傳回相同的物件直到<ph id="ph3">&lt;xref:System.Globalization.TextElementEnumerator.MoveNext%2A&gt;</ph>或<ph id="ph4">&lt;xref:System.Globalization.TextElementEnumerator.Reset%2A&gt;</ph>呼叫。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="P:System.Globalization.TextElementEnumerator.Current">
          <source>The enumerator is positioned before the first text element of the string or after the last text element.</source>
          <target state="translated">列舉值位於字串的第一個文字項目之前，或最後一個文字項目之後。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="P:System.Globalization.TextElementEnumerator.ElementIndex">
          <source>Gets the index of the text element that the enumerator is currently positioned over.</source>
          <target state="translated">取得列舉值目前所位在的文字項目的索引。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Globalization.TextElementEnumerator.ElementIndex">
          <source>The index of the text element that the enumerator is currently positioned over.</source>
          <target state="translated">列舉值目前所位在的文字項目的索引。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="P:System.Globalization.TextElementEnumerator.ElementIndex">
          <source>The enumerator is positioned before the first text element of the string or after the last text element.</source>
          <target state="translated">列舉值位於字串的第一個文字項目之前，或最後一個文字項目之後。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Globalization.TextElementEnumerator.GetTextElement">
          <source>Gets the current text element in the string.</source>
          <target state="translated">取得字串中目前的文字項目。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Globalization.TextElementEnumerator.GetTextElement">
          <source>A new string containing the current text element in the string being read.</source>
          <target state="translated">含有正被讀取字串中的目前文字項目的新字串。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.TextElementEnumerator.GetTextElement">
          <source>This method returns the same text element as the <ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator.Current%2A&gt;</ph> property.</source>
          <target state="translated">這個方法會傳回相同的文字項目，做為<ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator.Current%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Globalization.TextElementEnumerator.GetTextElement">
          <source>The enumerator is positioned before the first text element of the string or after the last text element.</source>
          <target state="translated">列舉值位於字串的第一個文字項目之前，或最後一個文字項目之後。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Globalization.TextElementEnumerator.MoveNext">
          <source>Advances the enumerator to the next text element of the string.</source>
          <target state="translated">將列舉值前移至字串的下一個文字項目。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Globalization.TextElementEnumerator.MoveNext">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the enumerator was successfully advanced to the next text element; <ph id="ph2">&lt;see langword="false" /&gt;</ph> if the enumerator has passed the end of the string.</source>
          <target state="translated">如果列舉值成功地前移至下一個文字項目則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；如果列舉值已經傳遞字串的結尾則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.TextElementEnumerator.MoveNext">
          <source>After an enumerator is created or after a <ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator.Reset%2A&gt;</ph> is called, the enumerator is positioned before the first text element of the string, and the first call to <ph id="ph2">&lt;xref:System.Globalization.TextElementEnumerator.MoveNext%2A&gt;</ph> moves the enumerator over the first text element of the string.</source>
          <target state="translated">建立列舉值之後或在之後<ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator.Reset%2A&gt;</ph>是呼叫，列舉程式位在字串和第一個呼叫的第一個文字項目之前<ph id="ph2">&lt;xref:System.Globalization.TextElementEnumerator.MoveNext%2A&gt;</ph>字串的第一個文字項目上方移動列舉值。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.TextElementEnumerator.MoveNext">
          <source>If the string is modified after this enumerator was created, <ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator.MoveNext%2A&gt;</ph> throws an exception.</source>
          <target state="translated">如果建立此列舉值之後，修改字串<ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator.MoveNext%2A&gt;</ph>擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.TextElementEnumerator.MoveNext">
          <source>After the end of the string is passed, subsequent calls to <ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator.MoveNext%2A&gt;</ph> return <ph id="ph2">`false`</ph> until <ph id="ph3">&lt;xref:System.Globalization.TextElementEnumerator.Reset%2A&gt;</ph> is called.</source>
          <target state="translated">字串的結尾傳遞，後續呼叫之後<ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator.MoveNext%2A&gt;</ph>傳回<ph id="ph2">`false`</ph>直到<ph id="ph3">&lt;xref:System.Globalization.TextElementEnumerator.Reset%2A&gt;</ph>呼叫。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Globalization.TextElementEnumerator.Reset">
          <source>Sets the enumerator to its initial position, which is before the first text element in the string.</source>
          <target state="translated">設定列舉值至它的初始位置，這是在字串中第一個文字項目之前。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.TextElementEnumerator.Reset">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator.Reset%2A&gt;</ph> method moves the enumerator to the beginning of the string, before the first text element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator.Reset%2A&gt;</ph>方法會移至第一個文字項目之前的字串開頭的列舉值。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.TextElementEnumerator.Reset">
          <source>After calling <ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator.Reset%2A&gt;</ph>, you must call <ph id="ph2">&lt;xref:System.Globalization.TextElementEnumerator.MoveNext%2A&gt;</ph> to advance the enumerator to the first text element of the string before calling <ph id="ph3">&lt;xref:System.Globalization.TextElementEnumerator.Current%2A&gt;</ph> to read the value of the first text element.</source>
          <target state="translated">在呼叫<ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator.Reset%2A&gt;</ph>，您必須呼叫<ph id="ph2">&lt;xref:System.Globalization.TextElementEnumerator.MoveNext%2A&gt;</ph>將列舉值前進到第一個文字項目，然後再呼叫字串的<ph id="ph3">&lt;xref:System.Globalization.TextElementEnumerator.Current%2A&gt;</ph>讀取的第一個文字項目的值。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>