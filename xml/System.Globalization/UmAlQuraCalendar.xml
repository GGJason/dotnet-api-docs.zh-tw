<Type Name="UmAlQuraCalendar" FullName="System.Globalization.UmAlQuraCalendar">
  <Metadata><Meta Name="ms.openlocfilehash" Value="568dcfd7b7ad7f93e6ed6526668870d60d631200" /><Meta Name="ms.sourcegitcommit" Value="c0c07dbd19cd7017243f9ac36915755f79bc8da6" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="11/27/2018" /><Meta Name="ms.locfileid" Value="52356963" /></Metadata><TypeSignature Language="C#" Value="public class UmAlQuraCalendar : System.Globalization.Calendar" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit UmAlQuraCalendar extends System.Globalization.Calendar" />
  <TypeSignature Language="DocId" Value="T:System.Globalization.UmAlQuraCalendar" />
  <TypeSignature Language="VB.NET" Value="Public Class UmAlQuraCalendar&#xA;Inherits Calendar" />
  <TypeSignature Language="C++ CLI" Value="public ref class UmAlQuraCalendar : System::Globalization::Calendar" />
  <TypeSignature Language="F#" Value="type UmAlQuraCalendar = class&#xA;    inherit Calendar" />
  <AssemblyInfo>
    <AssemblyName>System.Globalization.Calendars</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Globalization.Calendar</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>代表沙烏地阿拉伯 (Um Al Qura) 回曆。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.UmAlQuraCalendar>類別是幾乎等同<xref:System.Globalization.HijriCalendar>類別中，但 Um Al Qura 曆法來計算日期，請可以使用以資料表為基礎的演算法，授權沙烏地 government express 1500 年紀元，日期，而不支援<xref:System.Globalization.HijriCalendar.HijriAdjustment%2A>屬性。  
  
> [!NOTE]
>  如需有關使用資訊<xref:System.Globalization.UmAlQuraCalendar>類別和其他的行事曆 .NET Framework 中的類別，請參閱 <<c2> [ 使用行事曆](~/docs/standard/datetime/working-with-calendars.md)。  
  
 針對<xref:System.Globalization.UmAlQuraCalendar>類別，每個月有 29 或 30 天，但通常沒有顯著的順序。 回曆的文件，可提供對應天會顯示每個月中的資料表，而沒有這類一般的資料表可以產生為 Um Al Qura 曆法。  
  
 如需回曆的詳細資訊，請參閱<xref:System.Globalization.HijriCalendar>類別。  
  
 **附註**<xref:System.Globalization.UmAlQuraCalendar>類別只支援從 04/30/1900 00.00.00 （西曆日期） 到 11/16/2077年 23:59:59 （西曆日期）。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Globalization.Calendar" />
    <altmember cref="P:System.Globalization.CultureInfo.Calendar" />
    <altmember cref="P:System.Globalization.CultureInfo.OptionalCalendars" />
    <altmember cref="T:System.Globalization.HijriCalendar" />
    <related type="Article" href="~/docs/standard/datetime/working-with-calendars.md">使用行事曆</related>
    <related type="ExternalDocumentation" href="https://code.msdn.microsoft.com/NET-Framework-4-Calendar-3360a84a">範例： 行事曆週範圍公用程式</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UmAlQuraCalendar ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.UmAlQuraCalendar.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UmAlQuraCalendar();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Globalization.UmAlQuraCalendar" /> 類別的新執行個體。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddMonths">
      <MemberSignature Language="C#" Value="public override DateTime AddMonths (DateTime time, int months);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.DateTime AddMonths(valuetype System.DateTime time, int32 months) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.UmAlQuraCalendar.AddMonths(System.DateTime,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function AddMonths (time As DateTime, months As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override DateTime AddMonths(DateTime time, int months);" />
      <MemberSignature Language="F#" Value="override this.AddMonths : DateTime * int -&gt; DateTime" Usage="umAlQuraCalendar.AddMonths (time, months)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
        <Parameter Name="months" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="time">要在其中加入月份的日期。 <see cref="T:System.Globalization.UmAlQuraCalendar" /> 類別只支援從 04/30/1900 00.00.00 (西曆日期) 到 11/16/2077 23:59:59 (西曆日期) 的日期。</param>
        <param name="months">要加入的正或負月數。</param>
        <summary>計算與指定初始日期相差指定月數的日期。</summary>
        <returns>由 <paramref name="months" /> 參數指定的月數加入至由 <paramref name="time" /> 參數指定的日期所產生的日期。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 產生的日期部分<xref:System.DateTime>產生的日期不在產生的月份，產生的 year 的有效日期會受到影響。 它會變更為產生的 year 之產生的月份中最後一個有效的日期。 產生的年份部分<xref:System.DateTime>產生的月份超出指定的年份會受到影響<xref:System.DateTime>。 此實作會支援目前的紀元。 因此，如果產生的 year 超出指定的紀元會擲回例外狀況<xref:System.DateTime>。 產生的日期時間部分<xref:System.DateTime>維持不變，與指定<xref:System.DateTime>。  
  
 比方說，如果指定的月份是 Zulkadah，有 30 天內，指定某一天是該月的第 30 天，而`months`參數為 3，則產生的 year 是個以上的指定年份中，產生的月份是 Safar，並產生 day 是 29 日，也就是 safar 的最後一天。  
  
 如果值`months`參數是負值，產生<xref:System.DateTime>早於指定<xref:System.DateTime>。  
  
 <xref:System.DateTime.Kind%2A>屬性傳回之<xref:System.DateTime>值一律等於<xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>。 您可以保留<xref:System.DateTime.Kind%2A>的屬性`time`藉由呼叫的參數<xref:System.DateTime.SpecifyKind%2A?displayProperty=nameWithType>方法，如下列範例所示。  
  
 [!code-csharp[System.Globalization.Calendar.AddMethods#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/cs/add1.cs#5)]
 [!code-vb[System.Globalization.Calendar.AddMethods#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/vb/add1.vb#5)]  
  
   
  
## Examples  
 下列範例會具現化<xref:System.DateTime>值，並顯示 Um Al Qura 曆法的數個元件的值。 接著，它會呼叫<xref:System.Globalization.UmAlQuraCalendar.AddYears%2A>和<xref:System.Globalization.UmAlQuraCalendar.AddMonths%2A>2 年 10 月 Um Al Qura 曆法將日期值的方法。 最後，它也不會顯示這些日期元件的值在 Um Al Qura 曆法。  
  
 [!code-csharp[System.Globalization.UmAlQuraCalendar.AddMonths#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.umalquracalendar.addmonths/cs/addmonths1.cs#1)]
 [!code-vb[System.Globalization.UmAlQuraCalendar.AddMonths#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.umalquracalendar.addmonths/vb/addmonths1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">產生的日期不在 <see cref="T:System.Globalization.UmAlQuraCalendar" /> 類別支援的範圍內。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="months" /> 小於 -120,000 或大於 120,000。  
  
-或- 
 <paramref name="time" /> 超出此曆法所支援的範圍。</exception>
      </Docs>
    </Member>
    <Member MemberName="AddYears">
      <MemberSignature Language="C#" Value="public override DateTime AddYears (DateTime time, int years);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.DateTime AddYears(valuetype System.DateTime time, int32 years) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.UmAlQuraCalendar.AddYears(System.DateTime,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function AddYears (time As DateTime, years As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override DateTime AddYears(DateTime time, int years);" />
      <MemberSignature Language="F#" Value="override this.AddYears : DateTime * int -&gt; DateTime" Usage="umAlQuraCalendar.AddYears (time, years)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
        <Parameter Name="years" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="time">要在其中加入年份的日期。 <see cref="T:System.Globalization.UmAlQuraCalendar" /> 類別只支援從 04/30/1900 00.00.00 (西曆日期) 到 11/16/2077 23:59:59 (西曆日期) 的日期。</param>
        <param name="years">要加入的正或負年份。</param>
        <summary>計算與指定初始日期相差指定年份的日期。</summary>
        <returns>由 <paramref name="years" /> 參數指定的年數加入至由 <paramref name="time" /> 參數指定的日期所產生的日期。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 產生的日期部分<xref:System.DateTime>產生的日期不在產生的月份，產生的 year 的有效日期會受到影響。 它會變更為產生的 year 之產生的月份中最後一個有效的日期。 產生的月份部分<xref:System.DateTime>維持不變，與指定<xref:System.DateTime>。 此實作會支援目前的紀元。 因此，如果產生的 year 超出指定的紀元會擲回例外狀況<xref:System.DateTime>。 產生的日期時間部分<xref:System.DateTime>維持不變，與指定<xref:System.DateTime>。  
  
 比方說，Zulhijjah 有 29 天，除了有 30 天的潤年期間。 如果指定的日期是閏年 Zulhijjah 的 30 天，而`years`參數是 1，則產生的日期是 Zulhijjah 29 日，在下一年度。  
  
 如果`years`是負數，產生<xref:System.DateTime>早於指定<xref:System.DateTime>。  
  
 <xref:System.DateTime.Kind%2A>屬性傳回之<xref:System.DateTime>值一律等於<xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>。 您可以保留<xref:System.DateTime.Kind%2A>的屬性`time`藉由呼叫的參數<xref:System.DateTime.SpecifyKind%2A?displayProperty=nameWithType>方法，如下列範例所示。  
  
 [!code-csharp[System.Globalization.Calendar.AddMethods#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/cs/add1.cs#8)]
 [!code-vb[System.Globalization.Calendar.AddMethods#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/vb/add1.vb#8)]  
  
   
  
## Examples  
 下列範例會具現化<xref:System.DateTime>值，並顯示 Um AL Qura 曆法的數個元件的值。 接著，它會呼叫<xref:System.Globalization.UmAlQuraCalendar.AddYears%2A>和<xref:System.Globalization.UmAlQuraCalendar.AddMonths%2A>2 年 10 月 Um Al Qura 曆法將日期值的方法。 最後，它也不會顯示這些日期元件的值在 Um Al Qura 曆法。  
  
 [!code-csharp[System.Globalization.UmAlQuraCalendar.AddMonths#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.umalquracalendar.addmonths/cs/addmonths1.cs#1)]
 [!code-vb[System.Globalization.UmAlQuraCalendar.AddMonths#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.umalquracalendar.addmonths/vb/addmonths1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">產生的日期不在 <see cref="T:System.Globalization.UmAlQuraCalendar" /> 類別支援的範圍內。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="years" /> 小於 -10,000 或大於 10,000。  
  
-或- 
 <paramref name="time" /> 超出此曆法所支援的範圍。</exception>
      </Docs>
    </Member>
    <Member MemberName="AlgorithmType">
      <MemberSignature Language="C#" Value="public override System.Globalization.CalendarAlgorithmType AlgorithmType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Globalization.CalendarAlgorithmType AlgorithmType" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.UmAlQuraCalendar.AlgorithmType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property AlgorithmType As CalendarAlgorithmType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Globalization::CalendarAlgorithmType AlgorithmType { System::Globalization::CalendarAlgorithmType get(); };" />
      <MemberSignature Language="F#" Value="member this.AlgorithmType : System.Globalization.CalendarAlgorithmType" Usage="System.Globalization.UmAlQuraCalendar.AlgorithmType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CalendarAlgorithmType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得值，指出目前的月曆是以陽曆為主、以陰曆為主，還是同時包含兩種曆法。</summary>
        <value>一律傳回 <see cref="F:System.Globalization.CalendarAlgorithmType.LunarCalendar" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列範例會使用反映來具現化每個<xref:System.Globalization.Calendar>型別在.NET Framework 中找到，並顯示的值及其<xref:System.Globalization.Calendar.AlgorithmType%2A>屬性。  
  
 [!code-csharp[System.Globalization.Calendar.AlgorithmType#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.algorithmtype/cs/algorithmtype1.cs#1)]
 [!code-vb[System.Globalization.Calendar.AlgorithmType#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.algorithmtype/vb/algorithmtype1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DaysInYearBeforeMinSupportedYear">
      <MemberSignature Language="C#" Value="protected override int DaysInYearBeforeMinSupportedYear { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DaysInYearBeforeMinSupportedYear" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.UmAlQuraCalendar.DaysInYearBeforeMinSupportedYear" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DaysInYearBeforeMinSupportedYear As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property int DaysInYearBeforeMinSupportedYear { int get(); };" />
      <MemberSignature Language="F#" Value="member this.DaysInYearBeforeMinSupportedYear : int" Usage="System.Globalization.UmAlQuraCalendar.DaysInYearBeforeMinSupportedYear" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得 <see cref="P:System.Globalization.UmAlQuraCalendar.MinSupportedDateTime" /> 屬性指定之年的前一年的天數。</summary>
        <value><see cref="P:System.Globalization.UmAlQuraCalendar.MinSupportedDateTime" /> 指定之年的前一年的天數。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個屬性會傳回為 384 常數值。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Eras">
      <MemberSignature Language="C#" Value="public override int[] Eras { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32[] Eras" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.UmAlQuraCalendar.Eras" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Eras As Integer()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;int&gt; ^ Eras { cli::array &lt;int&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Eras : int[]" Usage="System.Globalization.UmAlQuraCalendar.Eras" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得目前 <see cref="T:System.Globalization.UmAlQuraCalendar" /> 支援的紀元清單。</summary>
        <value>陣列，由值為 <see cref="F:System.Globalization.UmAlQuraCalendar.UmAlQuraEra" /> 的單一元素組成。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 回曆會辨識一個紀元： 紀元 (拉丁文"Anno Hegirae 」，這表示 「 年的移轉，」 參考移轉的 Muhammad (PBUH) 從一)。 這個屬性一律傳回只有一個元素的陣列。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDayOfMonth">
      <MemberSignature Language="C#" Value="public override int GetDayOfMonth (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetDayOfMonth(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.UmAlQuraCalendar.GetDayOfMonth(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDayOfMonth (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetDayOfMonth(DateTime time);" />
      <MemberSignature Language="F#" Value="override this.GetDayOfMonth : DateTime -&gt; int" Usage="umAlQuraCalendar.GetDayOfMonth time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time">要讀取的日期值。 <see cref="T:System.Globalization.UmAlQuraCalendar" /> 類別只支援從 04/30/1900 00.00.00 (西曆日期) 到 11/16/2077 23:59:59 (西曆日期) 的日期。</param>
        <summary>計算指定的日期發生在月份中的哪一天。</summary>
        <returns>1 到 30 的整數，表示 <paramref name="time" /> 參數所指定月份的日期。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列範例會顯示數個元件的值<xref:System.DateTime>方面 Um Al Qura 曆法。  
  
 [!code-csharp[System.Globalization.UmAlQuraCalendar.AddMonths#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.umalquracalendar.addmonths/cs/addmonths1.cs#1)]
 [!code-vb[System.Globalization.UmAlQuraCalendar.AddMonths#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.umalquracalendar.addmonths/vb/addmonths1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="time" /> 超出此曆法所支援的範圍。</exception>
        <altmember cref="P:System.DateTime.Day" />
      </Docs>
    </Member>
    <Member MemberName="GetDayOfWeek">
      <MemberSignature Language="C#" Value="public override DayOfWeek GetDayOfWeek (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.DayOfWeek GetDayOfWeek(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.UmAlQuraCalendar.GetDayOfWeek(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDayOfWeek (time As DateTime) As DayOfWeek" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override DayOfWeek GetDayOfWeek(DateTime time);" />
      <MemberSignature Language="F#" Value="override this.GetDayOfWeek : DateTime -&gt; DayOfWeek" Usage="umAlQuraCalendar.GetDayOfWeek time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DayOfWeek</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time">要讀取的日期值。 <see cref="T:System.Globalization.UmAlQuraCalendar" /> 類別只支援從 04/30/1900 00.00.00 (西曆日期) 到 11/16/2077 23:59:59 (西曆日期) 的日期。</param>
        <summary>計算指定的日期發生在一週中的哪一天。</summary>
        <returns><see cref="T:System.DayOfWeek" /> 值，表示 <paramref name="time" /> 參數所指定之一週的日期。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.DayOfWeek>值如下所示：  
  
|DayOfWeek 值|這表示|  
|---------------------|---------------------|  
|星期日|الاحد (Al Ahad)|  
|週一|الاثنين (Al Ithnayn)|  
|星期二|الثلاثاء (在 Thulaathaa')|  
|星期三|الاربعاء (Al Arbi'aa')|  
|星期四|الخميس (Al Khamiis)|  
|週五|الجمعة (Al Jumu'ah)|  
|星期六|السبت (做為-Sabt)|  
  
   
  
## Examples  
 下列範例會顯示數個元件的值<xref:System.DateTime>方面 Um Al Qura 曆法。  
  
 [!code-csharp[System.Globalization.UmAlQuraCalendar.AddMonths#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.umalquracalendar.addmonths/cs/addmonths1.cs#1)]
 [!code-vb[System.Globalization.UmAlQuraCalendar.AddMonths#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.umalquracalendar.addmonths/vb/addmonths1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="time" /> 超出此曆法所支援的範圍。</exception>
        <altmember cref="P:System.DateTime.DayOfWeek" />
        <altmember cref="T:System.DayOfWeek" />
      </Docs>
    </Member>
    <Member MemberName="GetDayOfYear">
      <MemberSignature Language="C#" Value="public override int GetDayOfYear (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetDayOfYear(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.UmAlQuraCalendar.GetDayOfYear(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDayOfYear (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetDayOfYear(DateTime time);" />
      <MemberSignature Language="F#" Value="override this.GetDayOfYear : DateTime -&gt; int" Usage="umAlQuraCalendar.GetDayOfYear time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time">要讀取的日期值。 <see cref="T:System.Globalization.UmAlQuraCalendar" /> 類別只支援從 04/30/1900 00.00.00 (西曆日期) 到 11/16/2077 23:59:59 (西曆日期) 的日期。</param>
        <summary>計算發生在指定日期之年份的日期。</summary>
        <returns>1 到 355 的整數，表示 <paramref name="time" /> 參數所指定年份的日期。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 年中的日被指從當年第一日的天數。 比方說，<xref:System.Globalization.UmAlQuraCalendar.GetDayOfYear%2A>方法會傳回 1 的年度和總天數在上個月的最後一天的年份的第一個月的第一天。  
  
   
  
## Examples  
 下列範例會顯示數個元件的值<xref:System.DateTime>方面 Um Al Qura 曆法。  
  
 [!code-csharp[System.Globalization.UmALQuraCalendar.AddMonths#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.umalquracalendar.addmonths/cs/addmonths1.cs#1)]
 [!code-vb[System.Globalization.UmALQuraCalendar.AddMonths#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.umalquracalendar.addmonths/vb/addmonths1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="time" /> 超出此曆法所支援的範圍。</exception>
        <altmember cref="P:System.DateTime.DayOfYear" />
      </Docs>
    </Member>
    <Member MemberName="GetDaysInMonth">
      <MemberSignature Language="C#" Value="public override int GetDaysInMonth (int year, int month, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetDaysInMonth(int32 year, int32 month, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.UmAlQuraCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDaysInMonth (year As Integer, month As Integer, era As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetDaysInMonth(int year, int month, int era);" />
      <MemberSignature Language="F#" Value="override this.GetDaysInMonth : int * int * int -&gt; int" Usage="umAlQuraCalendar.GetDaysInMonth (year, month, era)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">一年。</param>
        <param name="month">從 1 到 12 的整數，表示月份。</param>
        <param name="era">一紀元。 指定 <see langword="UmAlQuraCalendar.Eras[UmAlQuraCalendar.CurrentEra]" /> 或 <see cref="F:System.Globalization.UmAlQuraCalendar.UmAlQuraEra" />。</param>
        <summary>計算指定年份和紀元的指定月份中的天數。</summary>
        <returns>指定的年份與紀元中指定月份的天數。 一般年份的傳回值為 29，閏年則為 30。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法會傳回指定月份和閏年，一般年份中的不同的天數。 比方說，這個方法傳回 29 或 30 Zulhijjah (`month` = 12)，這取決於是否`year`是否為閏年。  
  
   
  
## Examples  
 下列範例會呼叫<xref:System.Globalization.UmAlQuraCalendar.GetDaysInMonth%2A>方法來取得每個月的連續的五年的天數。  
  
 [!code-csharp[System.Globalization.UmAlQuraCalendar.GetDaysInMonth#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.umalquracalendar.getdaysinmonth/cs/getdaysinmonth1.cs#1)]
 [!code-vb[System.Globalization.UmAlQuraCalendar.GetDaysInMonth#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.umalquracalendar.getdaysinmonth/vb/getdaysinmonth1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="year" />、<paramref name="month" /> 或 <paramref name="era" /> 不在 <see cref="T:System.Globalization.UmAlQuraCalendar" /> 類別支援的範圍內。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetDaysInYear">
      <MemberSignature Language="C#" Value="public override int GetDaysInYear (int year, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetDaysInYear(int32 year, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.UmAlQuraCalendar.GetDaysInYear(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDaysInYear (year As Integer, era As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetDaysInYear(int year, int era);" />
      <MemberSignature Language="F#" Value="override this.GetDaysInYear : int * int -&gt; int" Usage="umAlQuraCalendar.GetDaysInYear (year, era)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">一年。</param>
        <param name="era">一紀元。 指定 <see langword="UmAlQuraCalendar.Eras[UmAlQuraCalendar.CurrentEra]" /> 或 <see cref="F:System.Globalization.UmAlQuraCalendar.UmAlQuraEra" />。</param>
        <summary>計算指定紀元的指定年份中的天數。</summary>
        <returns>指定年份和紀元中的天數。 一般年份有 354 天，閏年有 355 天。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列範例會呼叫<xref:System.Globalization.UmAlQuraCalendar.GetDaysInYear%2A>方法來取得支援的每個紀元中的十個連續年的天數<xref:System.Globalization.UmAlQuraCalendar>類別。  
  
 [!code-csharp[System.Globalization.UmAlQuraCalendar.GetDaysInYear#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.umalquracalendar.getdaysinyear/cs/getdaysinyear1.cs#1)]
 [!code-vb[System.Globalization.UmAlQuraCalendar.GetDaysInYear#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.umalquracalendar.getdaysinyear/vb/getdaysinyear1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="year" /> 或 <paramref name="era" /> 不在 <see cref="T:System.Globalization.UmAlQuraCalendar" /> 類別支援的範圍內。</exception>
        <altmember cref="F:System.Globalization.UmAlQuraCalendar.UmAlQuraEra" />
      </Docs>
    </Member>
    <Member MemberName="GetEra">
      <MemberSignature Language="C#" Value="public override int GetEra (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetEra(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.UmAlQuraCalendar.GetEra(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEra (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetEra(DateTime time);" />
      <MemberSignature Language="F#" Value="override this.GetEra : DateTime -&gt; int" Usage="umAlQuraCalendar.GetEra time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time">要讀取的日期值。</param>
        <summary>計算指定日期發生的年份。</summary>
        <returns>永遠都傳回 <see cref="F:System.Globalization.UmAlQuraCalendar.UmAlQuraEra" /> 值。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um Al Qura 曆法會辨識一個紀元： 紀元 (拉丁文"Anno Hegirae 」，這表示 「 年的移轉，」 參考移轉的 Muhammad (PBUH) 從一)。  
  
   
  
## Examples  
 下列範例會顯示在 Um Al Qura 曆法的日期的數個元件的值。  
  
 [!code-csharp[System.Globalization.UmAlQuraCalendar.AddMonths#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.umalquracalendar.addmonths/cs/addmonths1.cs#1)]
 [!code-vb[System.Globalization.UmAlQuraCalendar.AddMonths#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.umalquracalendar.addmonths/vb/addmonths1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="time" /> 超出此曆法所支援的範圍。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetLeapMonth">
      <MemberSignature Language="C#" Value="public override int GetLeapMonth (int year, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetLeapMonth(int32 year, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.UmAlQuraCalendar.GetLeapMonth(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetLeapMonth (year As Integer, era As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetLeapMonth(int year, int era);" />
      <MemberSignature Language="F#" Value="override this.GetLeapMonth : int * int -&gt; int" Usage="umAlQuraCalendar.GetLeapMonth (year, era)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">一年。</param>
        <param name="era">一紀元。 指定 <see langword="UmAlQuraCalendar.Eras[UmAlQuraCalendar.CurrentEra]" /> 或 <see cref="F:System.Globalization.UmAlQuraCalendar.UmAlQuraEra" />。</param>
        <summary>計算指定年份和紀元的閏月。</summary>
        <returns>一定是 0，因為 <see cref="T:System.Globalization.UmAlQuraCalendar" /> 類別不支援閏月。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 行事曆支援閏月的概念，在特定月份或任何一年中的月之後，可能會發生的閏月。 比方說，<xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%28System.DateTime%29?displayProperty=nameWithType>方法傳回的數字，介於 1 到 13，表示指定的日期與相關聯的月份。 如果年份的第八個和第九個月之間沒有閏月<xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A>方法會傳回 8，第八個月內，如呈獻第八個月的 9 和 10，第九個月。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="year" /> 小於 1318 或大於 1450。  
  
-或- 
 <paramref name="era" /> 不是 <see langword="UmAlQuraCalendar.Eras[UmAlQuraCalendar.CurrentEra]" /> 或 <see cref="F:System.Globalization.UmAlQuraCalendar.UmAlQuraEra" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetMonth">
      <MemberSignature Language="C#" Value="public override int GetMonth (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetMonth(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.UmAlQuraCalendar.GetMonth(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetMonth (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetMonth(DateTime time);" />
      <MemberSignature Language="F#" Value="override this.GetMonth : DateTime -&gt; int" Usage="umAlQuraCalendar.GetMonth time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time">要讀取的日期值。 <see cref="T:System.Globalization.UmAlQuraCalendar" /> 類別只支援從 04/30/1900 00.00.00 (西曆日期) 到 11/16/2077 23:59:59 (西曆日期) 的日期。</param>
        <summary>計算指定日期發生的月份。</summary>
        <returns>1 到 12 的整數，表示 <paramref name="time" /> 參數所指定日期的月份。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列範例會顯示所支援的日期範圍<xref:System.Globalization.UmAlQuraCalendar>西曆和 Um Al Qura 曆法的類別。 <xref:System.Globalization.UmAlQuraCalendar.GetMonth%2A>方法用來擷取 Um Al Qura 曆法中的最小和最大支援日期的月份，如果它不是目前的文化特性的現行曆法。  
  
 [!code-csharp[System.Globalization.UmAlQuraCalendar.GetMonth#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.umalquracalendar.getmonth/cs/getmonth1.cs#1)]
 [!code-vb[System.Globalization.UmAlQuraCalendar.GetMonth#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.umalquracalendar.getmonth/vb/getmonth1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="time" /> 超出此曆法所支援的範圍。</exception>
        <altmember cref="P:System.DateTime.Month" />
      </Docs>
    </Member>
    <Member MemberName="GetMonthsInYear">
      <MemberSignature Language="C#" Value="public override int GetMonthsInYear (int year, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetMonthsInYear(int32 year, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.UmAlQuraCalendar.GetMonthsInYear(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetMonthsInYear (year As Integer, era As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetMonthsInYear(int year, int era);" />
      <MemberSignature Language="F#" Value="override this.GetMonthsInYear : int * int -&gt; int" Usage="umAlQuraCalendar.GetMonthsInYear (year, era)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">一年。</param>
        <param name="era">一紀元。 指定 <see langword="UmAlQuaraCalendar.Eras[UmAlQuraCalendar.CurrentEra]" /> 或 <see cref="F:System.Globalization.UmAlQuraCalendar.UmAlQuraEra" />。</param>
        <summary>計算指定紀元的指定年份中的月數。</summary>
        <returns>一律為 12。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列範例會呼叫<xref:System.Globalization.UmAlQuraCalendar.GetMonthsInYear%2A>方法，以判斷在四個連續的年，並接著呼叫中的月數<xref:System.Globalization.UmAlQuraCalendar.GetDaysInMonth%2A>方法，以判斷有多少天後會在每個月。  
  
 [!code-csharp[System.Globalization.UmAlQuraCalendar.GetDaysInMonth#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.umalquracalendar.getdaysinmonth/cs/getdaysinmonth1.cs#1)]
 [!code-vb[System.Globalization.UmAlQuraCalendar.GetDaysInMonth#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.umalquracalendar.getdaysinmonth/vb/getdaysinmonth1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="year" /> 超出此曆法所支援的範圍。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="era" /> 超出此曆法所支援的範圍。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetYear">
      <MemberSignature Language="C#" Value="public override int GetYear (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetYear(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.UmAlQuraCalendar.GetYear(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetYear (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetYear(DateTime time);" />
      <MemberSignature Language="F#" Value="override this.GetYear : DateTime -&gt; int" Usage="umAlQuraCalendar.GetYear time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time">要讀取的日期值。 <see cref="T:System.Globalization.UmAlQuraCalendar" /> 類別只支援從 04/30/1900 00.00.00 (西曆日期) 到 11/16/2077 23:59:59 (西曆日期) 的日期。</param>
        <summary>計算由所指定 <see cref="T:System.DateTime" /> 表示的日期年份。</summary>
        <returns>整數，表示 <paramref name="time" /> 參數所指定的年份。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列範例會顯示所支援的日期範圍<xref:System.Globalization.UmAlQuraCalendar>西曆和 Um Al Qura 曆法的類別。 <xref:System.Globalization.UmAlQuraCalendar.GetYear%2A>方法用來擷取 Um Al Qura 曆法中的最小和最大支援日期的年份，如果它不是目前的文化特性的現行曆法。  
  
 [!code-csharp[System.Globalization.UmAlQuraCalendar.GetMonth#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.umalquracalendar.getmonth/cs/getmonth1.cs#1)]
 [!code-vb[System.Globalization.UmAlQuraCalendar.GetMonth#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.umalquracalendar.getmonth/vb/getmonth1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="time" /> 超出此曆法所支援的範圍。</exception>
      </Docs>
    </Member>
    <Member MemberName="IsLeapDay">
      <MemberSignature Language="C#" Value="public override bool IsLeapDay (int year, int month, int day, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsLeapDay(int32 year, int32 month, int32 day, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.UmAlQuraCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsLeapDay (year As Integer, month As Integer, day As Integer, era As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsLeapDay(int year, int month, int day, int era);" />
      <MemberSignature Language="F#" Value="override this.IsLeapDay : int * int * int * int -&gt; bool" Usage="umAlQuraCalendar.IsLeapDay (year, month, day, era)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="day" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">一年。</param>
        <param name="month">從 1 到 12 的整數，表示月份。</param>
        <param name="day">1 到 30 的整數，表示日期。</param>
        <param name="era">一紀元。 指定 <see langword="UmAlQuraCalendar.Eras[UmAlQuraCalendar.CurrentEra]" /> 或 <see cref="F:System.Globalization.UmAlQuraCalendar.UmAlQuraEra" />。</param>
        <summary>判斷指定的日期是否為閏日。</summary>
        <returns>如果指定的日期為閏日，則為 <see langword="true" />，否則為 <see langword="false" />。 傳回值永遠都會是 <see langword="false" />，因為 <see cref="T:System.Globalization.UmAlQuraCalendar" /> 類別不支援閏月。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 為閏日是閏年只會發生一天。  
  
   
  
## Examples  
 下列範例會呼叫<xref:System.Globalization.UmAlQuraCalendar.IsLeapDay%2A>第二個月 （二月），每個紀元中的五年的最後一天的方法。  
  
 [!code-cpp[System.Globalization.HijriCalendar.IsLeapDay#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.HijriCalendar.IsLeapDay/CPP/hijricalendar_isleapday.cpp#1)]
 [!code-csharp[System.Globalization.HijriCalendar.IsLeapDay#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.HijriCalendar.IsLeapDay/CS/hijricalendar_isleapday.cs#1)]
 [!code-vb[System.Globalization.HijriCalendar.IsLeapDay#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.HijriCalendar.IsLeapDay/VB/hijricalendar_isleapday.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="year" />、<paramref name="month" />、<paramref name="day" /> 或 <paramref name="era" /> 不在 <see cref="T:System.Globalization.UmAlQuraCalendar" /> 類別支援的範圍內。</exception>
      </Docs>
    </Member>
    <Member MemberName="IsLeapMonth">
      <MemberSignature Language="C#" Value="public override bool IsLeapMonth (int year, int month, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsLeapMonth(int32 year, int32 month, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.UmAlQuraCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsLeapMonth (year As Integer, month As Integer, era As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsLeapMonth(int year, int month, int era);" />
      <MemberSignature Language="F#" Value="override this.IsLeapMonth : int * int * int -&gt; bool" Usage="umAlQuraCalendar.IsLeapMonth (year, month, era)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">一年。</param>
        <param name="month">從 1 到 12 的整數，表示月份。</param>
        <param name="era">一紀元。 指定 <see langword="UmAlQuraCalendar.Eras[UmAlQuraCalendar.CurrentEra]" /> 或 <see cref="F:System.Globalization.UmAlQuraCalendar.UmAlQuraEra" />。</param>
        <summary>判斷指定年份和紀元中的指定月份是否為閏月。</summary>
        <returns>一定是 <see langword="false" />，因為 <see cref="T:System.Globalization.UmAlQuraCalendar" /> 類別不支援閏月。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 閏月是一整個月，只會發生在為閏年。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="year" />、<paramref name="month" /> 或 <paramref name="era" /> 不在 <see cref="T:System.Globalization.UmAlQuraCalendar" /> 類別支援的範圍內。</exception>
      </Docs>
    </Member>
    <Member MemberName="IsLeapYear">
      <MemberSignature Language="C#" Value="public override bool IsLeapYear (int year, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsLeapYear(int32 year, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.UmAlQuraCalendar.IsLeapYear(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsLeapYear (year As Integer, era As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsLeapYear(int year, int era);" />
      <MemberSignature Language="F#" Value="override this.IsLeapYear : int * int -&gt; bool" Usage="umAlQuraCalendar.IsLeapYear (year, era)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">一年。</param>
        <param name="era">一紀元。 指定 <see langword="UmAlQuraCalendar.Eras[UmAlQuraCalendar.CurrentEra]" /> 或 <see cref="F:System.Globalization.UmAlQuraCalendar.UmAlQuraEra" />。</param>
        <summary>判斷指定紀元中指定的年份是否為閏年。</summary>
        <returns>如果指定的年份為閏年，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 一般年份有 354 天，閏年有 355 天。  
  
   
  
## Examples  
 下列範例會列出十個連續的年和呼叫的天數<xref:System.Globalization.UmAlQuraCalendar.IsLeapYear%2A>方法，以判斷哪一個年都是閏年。  
  
 [!code-csharp[System.Globalization.UmAlQuraCalendar.IsLeapYear#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.umalquracalendar.isleapyear/cs/isleapyear1.cs#1)]
 [!code-vb[System.Globalization.UmAlQuraCalendar.IsLeapYear#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.umalquracalendar.isleapyear/vb/isleapyear1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="year" /> 或 <paramref name="era" /> 不在 <see cref="T:System.Globalization.UmAlQuraCalendar" /> 類別支援的範圍內。</exception>
      </Docs>
    </Member>
    <Member MemberName="MaxSupportedDateTime">
      <MemberSignature Language="C#" Value="public override DateTime MaxSupportedDateTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime MaxSupportedDateTime" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.UmAlQuraCalendar.MaxSupportedDateTime" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property MaxSupportedDateTime As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property DateTime MaxSupportedDateTime { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.MaxSupportedDateTime : DateTime" Usage="System.Globalization.UmAlQuraCalendar.MaxSupportedDateTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得受此曆法所支援的最晚日期和時間。</summary>
        <value>最晚的日期和時間受到<see cref="T:System.Globalization.UmAlQuraCalendar" />類別，這相當於 11 月 16，西元 2077年的最後一刻 西曆。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  開頭[!INCLUDE[net_v45](~/includes/net-v45-md.md)]，值<xref:System.Globalization.UmAlQuraCalendar.MaxSupportedDateTime%2A>屬性是 11/16/2077。 在舊版的.NET Framework 中，其值是 5 月 13，2029 西元的最後一刻 西曆。  
  
   
  
## Examples  
 下列範例會顯示所支援的日期範圍<xref:System.Globalization.UmAlQuraCalendar>西曆和 Um Al Qura 曆法的類別。  
  
 [!code-csharp[System.Globalization.UmAlQuraCalendar.GetMonth#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.umalquracalendar.getmonth/cs/getmonth1.cs#1)]
 [!code-vb[System.Globalization.UmAlQuraCalendar.GetMonth#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.umalquracalendar.getmonth/vb/getmonth1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinSupportedDateTime">
      <MemberSignature Language="C#" Value="public override DateTime MinSupportedDateTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime MinSupportedDateTime" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.UmAlQuraCalendar.MinSupportedDateTime" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property MinSupportedDateTime As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property DateTime MinSupportedDateTime { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.MinSupportedDateTime : DateTime" Usage="System.Globalization.UmAlQuraCalendar.MinSupportedDateTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得此曆法所支援的最早日期和時間。</summary>
        <value>最早日期和時間受到<see cref="T:System.Globalization.UmAlQuraCalendar" />類別，這相當於 1900 年 4 月 30 日西元的第一時間 西曆。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列範例會顯示所支援的日期範圍<xref:System.Globalization.UmAlQuraCalendar>西曆和 Um Al Qura 曆法的類別。  
  
 [!code-csharp[System.Globalization.UmAlQuraCalendar.GetMonth#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.umalquracalendar.getmonth/cs/getmonth1.cs#1)]
 [!code-vb[System.Globalization.UmAlQuraCalendar.GetMonth#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.umalquracalendar.getmonth/vb/getmonth1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToDateTime">
      <MemberSignature Language="C#" Value="public override DateTime ToDateTime (int year, int month, int day, int hour, int minute, int second, int millisecond, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.DateTime ToDateTime(int32 year, int32 month, int32 day, int32 hour, int32 minute, int32 second, int32 millisecond, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.UmAlQuraCalendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToDateTime (year As Integer, month As Integer, day As Integer, hour As Integer, minute As Integer, second As Integer, millisecond As Integer, era As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override DateTime ToDateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, int era);" />
      <MemberSignature Language="F#" Value="override this.ToDateTime : int * int * int * int * int * int * int * int -&gt; DateTime" Usage="umAlQuraCalendar.ToDateTime (year, month, day, hour, minute, second, millisecond, era)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="day" Type="System.Int32" />
        <Parameter Name="hour" Type="System.Int32" />
        <Parameter Name="minute" Type="System.Int32" />
        <Parameter Name="second" Type="System.Int32" />
        <Parameter Name="millisecond" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">一年。</param>
        <param name="month">從 1 到 12 的整數，表示月份。</param>
        <param name="day">1 到 29 的整數，表示日期。</param>
        <param name="hour">0 到 23 的整數，表示小時。</param>
        <param name="minute">0 到 59 的整數，表示分鐘。</param>
        <param name="second">0 到 59 的整數，表示秒鐘。</param>
        <param name="millisecond">0 到 999 的整數，表示毫秒。</param>
        <param name="era">一紀元。 指定 <see langword="UmAlQuraCalendar.Eras[UmAlQuraCalendar.CurrentEra]" /> 或 <see cref="F:System.Globalization.UmAlQuraCalendar.UmAlQuraEra" />。</param>
        <summary>傳回 <see cref="T:System.DateTime" /> 物件，其設定為指定日期、時間和紀元。</summary>
        <returns><see cref="T:System.DateTime" />，設定為目前紀元中指定的日期和時間。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.UmAlQuraCalendar.ToDateTime%2A>方法很有用，因為它可以將目前曆法中的任何日期轉換成的西曆日期。 為西曆日期，之後可用，比方說，來比較不同的行事曆中的日期，或在特定的行事曆中建立相等的日期。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="year" />、<paramref name="month" />、<paramref name="day" /> 或 <paramref name="era" /> 不在 <see cref="T:System.Globalization.UmAlQuraCalendar" /> 類別支援的範圍內。  
  
-或- 
 <paramref name="hour" /> 小於 0 或大於 23。  
  
-或- 
 <paramref name="minute" /> 小於 0 或大於 59。  
  
-或- 
 <paramref name="second" /> 小於 0 或大於 59。  
  
-或- 
 <paramref name="millisecond" /> 小於 0 或大於 999。</exception>
      </Docs>
    </Member>
    <Member MemberName="ToFourDigitYear">
      <MemberSignature Language="C#" Value="public override int ToFourDigitYear (int year);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 ToFourDigitYear(int32 year) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.UmAlQuraCalendar.ToFourDigitYear(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToFourDigitYear (year As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int ToFourDigitYear(int year);" />
      <MemberSignature Language="F#" Value="override this.ToFourDigitYear : int -&gt; int" Usage="umAlQuraCalendar.ToFourDigitYear year" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">從 0 到 99 的 2 位數年份，或是從 1318 到 1450 的 4 位數 Um Al Qura 曆法年份。</param>
        <summary>將指定的年份轉換為 4 位數年份，方法是使用 <see cref="P:System.Globalization.UmAlQuraCalendar.TwoDigitYearMax" /> 屬性以判斷適當的世紀。</summary>
        <returns>如果 <paramref name="year" /> 參數是 2 位數年份，則傳回值為對應的 4 位數年份。 如果 <paramref name="year" /> 參數是 4 位數年份，則傳回值會是未變更的 <paramref name="year" /> 參數。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.UmAlQuraCalendar.ToFourDigitYear%2A>方法會使用`year`參數，<xref:System.Globalization.UmAlQuraCalendar.TwoDigitYearMax%2A>屬性，並計算 4 位數年份的一年。 世紀取決於尋找 2 位數的唯一相符項目`year`該 100 年範圍內的參數。 例如，如果<xref:System.Globalization.UmAlQuraCalendar.TwoDigitYearMax%2A>設為 1429，100 年範圍是從透過 1429年 1330年。 因此，30 的 2 位數值會解譯為 1330 中,，而 2 位數為 29 值解譯為 1429年。  
  
 如果<xref:System.Globalization.UmAlQuraCalendar.TwoDigitYearMax%2A>屬性是特殊值 99<xref:System.Globalization.UmAlQuraCalendar.ToFourDigitYear%2A>方法會忽略區域中的設定和語言選項控制台 中，並傳回`year`未變更的參數。  
  
 <xref:System.Globalization.UmAlQuraCalendar.ToFourDigitYear%2A> 支援的兩位數年份或四位數年份。 傳遞的兩位數年份值 (小於 100) 會導致方法將值轉換為四位數字值，根據<xref:System.Globalization.UmAlQuraCalendar.TwoDigitYearMax%2A>值，表示適當的世紀。 如果應用程式提供支援的行事曆範圍內的四位數年份值<xref:System.Globalization.UmAlQuraCalendar.ToFourDigitYear%2A>，此方法會傳回實際的輸入的值。 應用程式提供四位數字值，超出支援的行事曆的範圍，則會提供為負數值，此方法會擲回例外狀況。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="year" /> 超出此曆法所支援的範圍。</exception>
        <altmember cref="P:System.Globalization.UmAlQuraCalendar.TwoDigitYearMax" />
      </Docs>
    </Member>
    <Member MemberName="TwoDigitYearMax">
      <MemberSignature Language="C#" Value="public override int TwoDigitYearMax { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TwoDigitYearMax" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.UmAlQuraCalendar.TwoDigitYearMax" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property TwoDigitYearMax As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int TwoDigitYearMax { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.TwoDigitYearMax : int with get, set" Usage="System.Globalization.UmAlQuraCalendar.TwoDigitYearMax" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定以二位數年份表示時，該 100 年範圍的最後一年。</summary>
        <value>以二位數年份表示時，該 100 年範圍的最後一年。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個屬性允許的 2 位數年份若要正確轉譯成 4 位數年份。 比方說，如果這個屬性設定為 1429年，100 年範圍是從透過 1429年 1330年。 因此，30 的 2 位數值會解譯為 1330 中,，而 2 位數為 29 值解譯為 1429年。  
  
 這個屬性的初始值被衍生自 [控制台] 的 [地區及語言選項] 部分中的設定。 不過，這項資訊可以變更的存留期間<xref:System.AppDomain>。 <xref:System.Globalization.UmAlQuraCalendar>類別不會偵測系統設定 中的變更會自動。  
  
 特殊值 99 原因<xref:System.Globalization.UmAlQuraCalendar.ToFourDigitYear%2A>方法來略過系統設定，並傳回指定的年份保持不變。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">這個曆法是唯讀的。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">在設定作業中，Um Al Qura 曆法的年份值小於 1318 但不是 99，或大於 1450。</exception>
        <altmember cref="M:System.Globalization.UmAlQuraCalendar.ToFourDigitYear(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="UmAlQuraEra">
      <MemberSignature Language="C#" Value="public const int UmAlQuraEra = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 UmAlQuraEra = (1)" />
      <MemberSignature Language="DocId" Value="F:System.Globalization.UmAlQuraCalendar.UmAlQuraEra" />
      <MemberSignature Language="VB.NET" Value="Public Const UmAlQuraEra As Integer  = 1" />
      <MemberSignature Language="C++ CLI" Value="public: int UmAlQuraEra = 1;" />
      <MemberSignature Language="F#" Value="val mutable UmAlQuraEra : int" Usage="System.Globalization.UmAlQuraCalendar.UmAlQuraEra" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>代表目前的紀元。 這個欄位是常數。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 值<xref:System.Globalization.UmAlQuraCalendar.UmAlQuraEra>欄位為 1。  
  
 Um Al Qura 曆法會辨識一個紀元： 紀元 (拉丁文"Anno Hegirae 」，這表示 「 年的移轉，」 參考移轉的 Muhammad (PBUH) 從一)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>