<Type Name="JapaneseLunisolarCalendar" FullName="System.Globalization.JapaneseLunisolarCalendar">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9d3340c6de421bcc6406054670f6b511bc7ad387" /><Meta Name="ms.sourcegitcommit" Value="2dd0eede6edd6dd3d2aa8f79010848658b967609" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="04/18/2019" /><Meta Name="ms.locfileid" Value="59744385" /></Metadata><TypeSignature Language="C#" Value="public class JapaneseLunisolarCalendar : System.Globalization.EastAsianLunisolarCalendar" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit JapaneseLunisolarCalendar extends System.Globalization.EastAsianLunisolarCalendar" />
  <TypeSignature Language="DocId" Value="T:System.Globalization.JapaneseLunisolarCalendar" />
  <TypeSignature Language="VB.NET" Value="Public Class JapaneseLunisolarCalendar&#xA;Inherits EastAsianLunisolarCalendar" />
  <TypeSignature Language="C++ CLI" Value="public ref class JapaneseLunisolarCalendar : System::Globalization::EastAsianLunisolarCalendar" />
  <TypeSignature Language="F#" Value="type JapaneseLunisolarCalendar = class&#xA;    inherit EastAsianLunisolarCalendar" />
  <AssemblyInfo>
    <AssemblyName>System.Globalization.Calendars</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Globalization.EastAsianLunisolarCalendar</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>表示劃分的時間，例如月、日和年。 年份的計算方式與日本曆法相同，而日期與月份則是使用陰陽曆計算。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.JapaneseLunisolarCalendar>類別衍生自<xref:System.Globalization.EastAsianLunisolarCalendar>類別，其代表陰陽曆。 <xref:System.Globalization.EastAsianLunisolarCalendar>類別支援以六十年的年度週期 （其會重複每隔 60 年） 除了太陽能年及農曆月。 在行事曆中 solar 逐年是以六十年為年、 天干糔礜惎纕分支相關聯，這些行事曆，只能有任何一年的月之後的閏月。 <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A>方法傳回的數字，介於 1 到 13，表示指定的日期與相關聯的月份。 如果年份的第八個和第九個月之間沒有閏月<xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A>方法會傳回 8，第八個月內，如呈獻第八個月的 9 和 10，第九個月。   
  
> [!NOTE]
>  如需有關使用資訊<xref:System.Globalization.JapaneseLunisolarCalendar>類別和其他的行事曆 .NET 類別庫中的類別，請參閱 <<c2> [ 使用行事曆](~/docs/standard/datetime/working-with-calendars.md)。  
  
`JapaneseLuniSolarCalendar`類別會辨識為每個皇帝 reign 一個紀元。 例如，兩個最新的紀元還有平成時代，自西曆 1989 年，Reiwa 時代，開始在西曆 2019 年。 紀元名稱通常會顯示前一年。 例如，2001年西曆年是日文的日曆年度平成 13。 請注意，第一年的時代稱為 「 元年。 」 因此，西曆 1989 年是日文的日曆年度平成元年。  

[!INCLUDE[japanese-era-note](~/includes/calendar-era.md)]

不同於<xref:System.Globalization.JapaneseCalendar>類別，`JapaneseLunisolarCalendar`類別不支援範圍內的明治和 Taisho 紀元的日期。

 此類別會指派數字給紀元，如下所示：  
  
|GetEra 值|紀元名稱|紀元縮寫|西曆日期|  
|------------------|--------------|----------------------|---------------------|  
|5|令和 (Reiwa)|令和 （R、 r）|2019 年 1，來呈現|
|4|平成 （平成）|平 (H、 h)|1989 年 1 月 8 日來呈現|  
|3|昭和 (Showa)|昭 （S，s）|1926 年 12 月 25 日 1989 年 1 月 7日，|  
|2|大正 (Taisho)|提名 （T，t）|1912 年 7 月 30 日 1926 年 12 月 24日，|  
|1|明治 （明治）|明 （M，m）|1868 年 9 月 8 日 1912 年 7 月 29日，|  

 目前，<xref:System.Globalization.JapaneseLunisolarCalendar>不會使用任何支援的文化特性<xref:System.Globalization.CultureInfo>類別。 因此，這個類別可以使用只是用來計算的日文陰陽曆。 它不能為任何所支援的文化特性的預設月曆<xref:System.Globalization.CultureInfo>類別。 
  
 每個<xref:System.Globalization.CultureInfo>物件支援一組的行事曆。 <xref:System.Globalization.CultureInfo.Calendar%2A?displayProperty=nameWithType>屬性傳回的文化特性的預設月曆，<xref:System.Globalization.CultureInfo.OptionalCalendars%2A?displayProperty=nameWithType>屬性會傳回陣列，包含所有支援的文化特性的行事曆。 您可以變更預設的行事曆成任何一種支援的選用月曆<xref:System.Globalization.CultureInfo>執行個體。 若要這樣做，請設定<xref:System.Globalization.DateTimeFormatInfo.Calendar%2A>的屬性<xref:System.Globalization.DateTimeFormatInfo>所傳回的物件<xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType>屬性，以新<xref:System.Globalization.Calendar>。
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Globalization.JapaneseCalendar" />
    <related type="Article" href="~/docs/standard/datetime/working-with-calendars.md">使用行事曆</related>
    <related type="ExternalDocumentation" href="https://code.msdn.microsoft.com/NET-Framework-4-Calendar-3360a84a">範例：行事曆週範圍公用程式</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public JapaneseLunisolarCalendar ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.JapaneseLunisolarCalendar.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; JapaneseLunisolarCalendar();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Globalization.JapaneseLunisolarCalendar" /> 類別的新執行個體。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DaysInYearBeforeMinSupportedYear">
      <MemberSignature Language="C#" Value="protected override int DaysInYearBeforeMinSupportedYear { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DaysInYearBeforeMinSupportedYear" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.JapaneseLunisolarCalendar.DaysInYearBeforeMinSupportedYear" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DaysInYearBeforeMinSupportedYear As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property int DaysInYearBeforeMinSupportedYear { int get(); };" />
      <MemberSignature Language="F#" Value="member this.DaysInYearBeforeMinSupportedYear : int" Usage="System.Globalization.JapaneseLunisolarCalendar.DaysInYearBeforeMinSupportedYear" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得 <see cref="P:System.Globalization.JapaneseLunisolarCalendar.MinSupportedDateTime" /> 屬性指定之年的前一年的天數。</summary>
        <value><see cref="P:System.Globalization.JapaneseLunisolarCalendar.MinSupportedDateTime" /> 指定之年的前一年的天數。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個屬性會傳回 354 的常數值。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Eras">
      <MemberSignature Language="C#" Value="public override int[] Eras { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32[] Eras" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.JapaneseLunisolarCalendar.Eras" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Eras As Integer()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;int&gt; ^ Eras { cli::array &lt;int&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Eras : int[]" Usage="System.Globalization.JapaneseLunisolarCalendar.Eras" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得與 <see cref="T:System.Globalization.JapaneseLunisolarCalendar" /> 物件相關的紀元。</summary>
        <value>32 位元帶正負號整數的陣列，指定相關的紀元。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個屬性所傳回陣列中的值會是範圍從 1 到最大的紀元數的數字。 最大的紀元數會傳回在第一個陣列元素中，而且中最後一個項目會傳回最小的紀元數。  

[!INCLUDE[japanese-era-note](~/includes/calendar-era.md)]

雖然<xref:System.Globalization.JapaneseLunisolarCalendar>定義明治和 Taisho 紀元 (紀元 1 和 2，分別)，行事曆不支援在其範圍中的日期。 例如，呼叫<xref:System.Globalization.JapaneseLunisolarCalendar.GetEra%2A>或是<xref:System.Globalization.EastAsianLunisolarCalendar.ToDateTime%2A>兩用紀元的日期會擲回<xref:System.ArgumentOutOfRangeException>。

 <xref:System.Globalization.JapaneseLunisolarCalendar.Eras%2A?displayProperty=nameWithType>屬性會傳回相同的值<xref:System.Globalization.JapaneseCalendar.Eras%2A?displayProperty=nameWithType>屬性。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEra">
      <MemberSignature Language="C#" Value="public override int GetEra (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetEra(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.JapaneseLunisolarCalendar.GetEra(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEra (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetEra(DateTime time);" />
      <MemberSignature Language="F#" Value="override this.GetEra : DateTime -&gt; int" Usage="japaneseLunisolarCalendar.GetEra time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time">要讀取的 <see cref="T:System.DateTime" />。</param>
        <summary>擷取對應於指定的 <see cref="T:System.DateTime" /> 之紀元。</summary>
        <returns>整數，表示 <paramref name="time" /> 參數中指定的紀元。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  

[!INCLUDE[japanese-era-note](~/includes/calendar-era.md)]

         ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JapaneseEra">
      <MemberSignature Language="C#" Value="public const int JapaneseEra = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 JapaneseEra = (1)" />
      <MemberSignature Language="DocId" Value="F:System.Globalization.JapaneseLunisolarCalendar.JapaneseEra" />
      <MemberSignature Language="VB.NET" Value="Public Const JapaneseEra As Integer  = 1" />
      <MemberSignature Language="C++ CLI" Value="public: int JapaneseEra = 1;" />
      <MemberSignature Language="F#" Value="val mutable JapaneseEra : int" Usage="System.Globalization.JapaneseLunisolarCalendar.JapaneseEra" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>指定目前的紀元。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個欄位的值為 1。  

[!INCLUDE[japanese-era-note](~/includes/calendar-era.md)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxSupportedDateTime">
      <MemberSignature Language="C#" Value="public override DateTime MaxSupportedDateTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime MaxSupportedDateTime" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.JapaneseLunisolarCalendar.MaxSupportedDateTime" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property MaxSupportedDateTime As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property DateTime MaxSupportedDateTime { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.MaxSupportedDateTime : DateTime" Usage="System.Globalization.JapaneseLunisolarCalendar.MaxSupportedDateTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得受 <see cref="T:System.Globalization.JapaneseLunisolarCalendar" /> 類別所支援的日期和時間的最大值。</summary>
        <value>最晚的日期和時間受到<see cref="T:System.Globalization.JapaneseLunisolarCalendar" />類別，這相當於 1 月 22，西元 2050年的最後一刻 西曆。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MinSupportedDateTime">
      <MemberSignature Language="C#" Value="public override DateTime MinSupportedDateTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime MinSupportedDateTime" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.JapaneseLunisolarCalendar.MinSupportedDateTime" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property MinSupportedDateTime As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property DateTime MinSupportedDateTime { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.MinSupportedDateTime : DateTime" Usage="System.Globalization.JapaneseLunisolarCalendar.MinSupportedDateTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得受 <see cref="T:System.Globalization.JapaneseLunisolarCalendar" /> 類別所支援的日期和時間的最小值。</summary>
        <value>最早日期和時間受到<see cref="T:System.Globalization.JapaneseLunisolarCalendar" />類別，這相當於 1960 年 1 月 28，西元的第一時間 西曆。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>