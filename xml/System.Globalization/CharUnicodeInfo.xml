<Type Name="CharUnicodeInfo" FullName="System.Globalization.CharUnicodeInfo">
  <TypeSignature Language="C#" Value="public static class CharUnicodeInfo" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit CharUnicodeInfo extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Globalization.CharUnicodeInfo" />
  <TypeSignature Language="VB.NET" Value="Public Class CharUnicodeInfo" />
  <TypeSignature Language="C++ CLI" Value="public ref class CharUnicodeInfo abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Globalization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="41038-101">擷取 Unicode 字元的相關資訊。</span><span class="sxs-lookup"><span data-stu-id="41038-101">Retrieves information about a Unicode character.</span></span> <span data-ttu-id="41038-102">這個類別無法被繼承。</span><span class="sxs-lookup"><span data-stu-id="41038-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41038-103">[Unicode 標準](http://go.microsoft.com/fwlink/?linkid=37123)定義幾個 Unicode 字元分類。</span><span class="sxs-lookup"><span data-stu-id="41038-103">The [Unicode Standard](http://go.microsoft.com/fwlink/?linkid=37123) defines a number of Unicode character categories.</span></span> <span data-ttu-id="41038-104">例如，字元可能會分類為大寫字母、 小寫字母、 十進位數字、 字母數字、 段落分隔符號、 數學符號或貨幣符號。</span><span class="sxs-lookup"><span data-stu-id="41038-104">For example, a character might be categorized as an uppercase letter, a lowercase letter, a decimal digit number, a letter number, a paragraph separator, a math symbol, or a currency symbol.</span></span> <span data-ttu-id="41038-105">您的應用程式可以使用來管理字串為基礎的作業，例如剖析或擷取使用規則運算式的子字串的字元類別目錄。</span><span class="sxs-lookup"><span data-stu-id="41038-105">Your application can use the character category to govern string-based operations, such as parsing or extracting substring with regular expressions.</span></span> <span data-ttu-id="41038-106"><xref:System.Globalization.UnicodeCategory>列舉型別定義的可能字元類別。</span><span class="sxs-lookup"><span data-stu-id="41038-106">The <xref:System.Globalization.UnicodeCategory> enumeration defines the possible character categories.</span></span>  
  
 <span data-ttu-id="41038-107">您使用<xref:System.Globalization.CharUnicodeInfo>類別來取得<xref:System.Globalization.UnicodeCategory>特定字元的值。</span><span class="sxs-lookup"><span data-stu-id="41038-107">You use the <xref:System.Globalization.CharUnicodeInfo> class to obtain the <xref:System.Globalization.UnicodeCategory> value for a specific character.</span></span> <span data-ttu-id="41038-108"><xref:System.Globalization.CharUnicodeInfo>類別會定義傳回下列 Unicode 字元值的方法：</span><span class="sxs-lookup"><span data-stu-id="41038-108">The <xref:System.Globalization.CharUnicodeInfo> class defines methods that return the following Unicode character values:</span></span>  
  
-   <span data-ttu-id="41038-109">字元或 surrogate 字組所屬的特定類別目錄。</span><span class="sxs-lookup"><span data-stu-id="41038-109">The specific category to which a character or surrogate pair belongs.</span></span> <span data-ttu-id="41038-110">傳回的值屬於<xref:System.Globalization.UnicodeCategory>列舉型別。</span><span class="sxs-lookup"><span data-stu-id="41038-110">The value returned is a member of the <xref:System.Globalization.UnicodeCategory> enumeration.</span></span>  
  
-   <span data-ttu-id="41038-111">數值。</span><span class="sxs-lookup"><span data-stu-id="41038-111">Numeric value.</span></span> <span data-ttu-id="41038-112">僅適用於數字字元，包括分數、 註標、 上標、 羅馬數字、 貨幣分子環狀數字和指令碼特定數字。</span><span class="sxs-lookup"><span data-stu-id="41038-112">Applies only to numeric characters, including fractions, subscripts, superscripts, Roman numerals, currency numerators, encircled numbers, and script-specific digits.</span></span>  
  
-   <span data-ttu-id="41038-113">數字值。</span><span class="sxs-lookup"><span data-stu-id="41038-113">Digit value.</span></span> <span data-ttu-id="41038-114">適用於可以結合其他字元來表示整個數字系統中的數字字元。</span><span class="sxs-lookup"><span data-stu-id="41038-114">Applies to numeric characters that can be combined with other numeric characters to represent a whole number in a numbering system.</span></span>  
  
-   <span data-ttu-id="41038-115">十進位數字值。</span><span class="sxs-lookup"><span data-stu-id="41038-115">Decimal digit value.</span></span> <span data-ttu-id="41038-116">僅適用於表示十進位 (基底 10) 系統中的十進位數字的字元。</span><span class="sxs-lookup"><span data-stu-id="41038-116">Applies only to characters that represent decimal digits in the decimal (base 10) system.</span></span> <span data-ttu-id="41038-117">十進位數字可以是下列其中一個十位數，從 0 到 9。</span><span class="sxs-lookup"><span data-stu-id="41038-117">A decimal digit can be one of ten digits, from zero through nine.</span></span> <span data-ttu-id="41038-118">成員，這些字元出現<xref:System.Globalization.UnicodeCategory.DecimalDigitNumber?displayProperty=nameWithType>類別目錄。</span><span class="sxs-lookup"><span data-stu-id="41038-118">These characters are members of the <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber?displayProperty=nameWithType> category.</span></span>  
  
 <span data-ttu-id="41038-119">此外，<xref:System.Globalization.CharUnicodeInfo>類別可由數項其他.NET Framework 類型和方法，依賴字元分類在內部使用。</span><span class="sxs-lookup"><span data-stu-id="41038-119">In addition, the <xref:System.Globalization.CharUnicodeInfo> class is used internally by a number of other .NET Framework types and methods that rely on character classification.</span></span> <span data-ttu-id="41038-120">它們包括：</span><span class="sxs-lookup"><span data-stu-id="41038-120">These include:</span></span>  
  
-   <span data-ttu-id="41038-121"><xref:System.Globalization.StringInfo>類別，會使用而不是單一字元字串中的文字項目。</span><span class="sxs-lookup"><span data-stu-id="41038-121">The <xref:System.Globalization.StringInfo> class, which works with textual elements instead of single characters in a string.</span></span>  
  
-   <span data-ttu-id="41038-122">多載<xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType>方法，這個方法會判斷字元或 surrogate 字組所屬的類別目錄。</span><span class="sxs-lookup"><span data-stu-id="41038-122">The overloads of the <xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType> method, which determine the category to which a character or surrogate pair belongs.</span></span>  
  
-   <span data-ttu-id="41038-123">[字元類別](~/docs/standard/base-types/character-classes-in-regular-expressions.md)辨識<xref:System.Text.RegularExpressions.Regex>，.NET Framework 規則運算式引擎。</span><span class="sxs-lookup"><span data-stu-id="41038-123">The [character classes](~/docs/standard/base-types/character-classes-in-regular-expressions.md) recognized by <xref:System.Text.RegularExpressions.Regex>, the .NET Framework's regular expression engine.</span></span>  
  
 <span data-ttu-id="41038-124">時在應用程式中使用這個類別，請記住下列程式設計考量使用<xref:System.Char>型別。</span><span class="sxs-lookup"><span data-stu-id="41038-124">When using this class in your applications, keep in mind the following programming considerations for using the <xref:System.Char> type.</span></span> <span data-ttu-id="41038-125">類型很難使用，以及字串比較適合使用通常用於表示語言的內容。</span><span class="sxs-lookup"><span data-stu-id="41038-125">The type can be difficult to use, and strings are generally preferable for representing linguistic content.</span></span>  
  
-   <span data-ttu-id="41038-126">A<xref:System.Char>物件不一定對應至單一字元。</span><span class="sxs-lookup"><span data-stu-id="41038-126">A <xref:System.Char> object does not always correspond to a single character.</span></span> <span data-ttu-id="41038-127">雖然<xref:System.Char>類型代表單一的 16 位元值，某些字元 （例如語素簇和 surrogate 字組） 包含兩個或多個 utf-16 字碼單位。</span><span class="sxs-lookup"><span data-stu-id="41038-127">Although the <xref:System.Char> type represents a single 16-bit value, some characters (such as grapheme clusters and surrogate pairs) consist of two or more UTF-16 code units.</span></span> <span data-ttu-id="41038-128">如需詳細資訊，請參閱 「 Char 物件和 Unicode 字元 」<xref:System.String>類別。</span><span class="sxs-lookup"><span data-stu-id="41038-128">For more information, see "Char Objects and Unicode Characters" in the <xref:System.String> class.</span></span>  
  
-   <span data-ttu-id="41038-129">也有彈性的"character"的概念。</span><span class="sxs-lookup"><span data-stu-id="41038-129">The notion of a "character" is also flexible.</span></span> <span data-ttu-id="41038-130">字元通常視為圖像，但多圖像需要多個字碼指標。</span><span class="sxs-lookup"><span data-stu-id="41038-130">A character is often thought of as a glyph, but many glyphs require multiple code points.</span></span> <span data-ttu-id="41038-131">比方說，ä 可以是表示由兩個字碼指標 （"a"加上 U + 0308，也就是結合 diaeresis），或由的單一程式碼點 （"ä 」 或 U + 00A4）。</span><span class="sxs-lookup"><span data-stu-id="41038-131">For example, ä can be represented either by two code points ("a" plus U+0308, which is the combining diaeresis), or by a single code point ("ä" or U+00A4).</span></span> <span data-ttu-id="41038-132">某些語言具有許多字母、 字元，以及需要多個字碼指標，會造成混淆語言內容的表示法中的圖像。</span><span class="sxs-lookup"><span data-stu-id="41038-132">Some languages have many letters, characters, and glyphs that require multiple code points, which can cause confusion in linguistic content representation.</span></span> <span data-ttu-id="41038-133">例如，沒有 ΰ （U + 03B0、 希臘文的小寫字母二十個太空站 dialytika 與 tonos），但沒有對等大寫的字母。</span><span class="sxs-lookup"><span data-stu-id="41038-133">For example, there is a ΰ (U+03B0, Greek small letter upsilon with dialytika and tonos), but there is no equivalent capital letter.</span></span> <span data-ttu-id="41038-134">寫這類值時，只會擷取原始的值。</span><span class="sxs-lookup"><span data-stu-id="41038-134">Uppercasing such a value simply retrieves the original value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="41038-135">下列程式碼範例會顯示每個不同類型的字元方法所傳回的值。</span><span class="sxs-lookup"><span data-stu-id="41038-135">The following code example shows the values returned by each method for different types of characters.</span></span>  
  
 [!code-cpp[System.Globalization.CharUnicodeInfo_Char#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/CPP/charunicodeinfo_char.cpp#1)]
 [!code-csharp[System.Globalization.CharUnicodeInfo_Char#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/CS/charunicodeinfo_char.cs#1)]
 [!code-vb[System.Globalization.CharUnicodeInfo_Char#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/VB/charunicodeinfo_char.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="usage">
      <para><span data-ttu-id="41038-136">可辨識的字元和其所屬的特定類別 Unicode 標準所定義，而且可以從一個版本的 Unicode 標準將變更為另一個。</span><span class="sxs-lookup"><span data-stu-id="41038-136">Recognized characters and the specific categories to which they belong are defined by the Unicode standard and can change from one version of the Unicode Standard to another.</span></span> <span data-ttu-id="41038-137">特定版本的.NET Framework 中的字元分類根據單一 Unicode 標準，無論基礎.NET Framework 執行所在的作業系統版本。</span><span class="sxs-lookup"><span data-stu-id="41038-137">Categorization of characters in a particular version of the  .NET Framework  is based on a single version of the Unicode Standard regardless of the underlying operating system on which the .NET Framework is running.</span></span> <span data-ttu-id="41038-138">下表列出自.NET Framework 版本[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]和用於字元分類的 Unicode 標準版本。</span><span class="sxs-lookup"><span data-stu-id="41038-138">The following table lists versions of the .NET Framework since the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] and the versions of the Unicode Standard  used to classify characters.</span></span>  
  
 <span data-ttu-id="41038-139"><list type="table"><listheader><term> .NET framework 版本</span><span class="sxs-lookup"><span data-stu-id="41038-139"><list type="table"><listheader><term> .NET Framework version</span></span>  
  
 <span data-ttu-id="41038-140"></term><description> Unicode 標準版本</span><span class="sxs-lookup"><span data-stu-id="41038-140"></term><description> Version of the Unicode Standard</span></span>  
  
 <span data-ttu-id="41038-141"></description></listheader><item><term> [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</span><span class="sxs-lookup"><span data-stu-id="41038-141"></description></listheader><item><term> [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</span></span>  
  
 <span data-ttu-id="41038-142"></term><description> [Unicode Standard 版本 5.0.0](http://www.unicode.org/versions/Unicode5.0.0/)</span><span class="sxs-lookup"><span data-stu-id="41038-142"></term><description> [The Unicode Standard, Version 5.0.0](http://www.unicode.org/versions/Unicode5.0.0/)</span></span>  
  
 <span data-ttu-id="41038-143"></description></item><item><term> [!INCLUDE[net_v45](~/includes/net-v45-md.md)]</span><span class="sxs-lookup"><span data-stu-id="41038-143"></description></item><item><term> [!INCLUDE[net_v45](~/includes/net-v45-md.md)]</span></span>  
  
 <span data-ttu-id="41038-144"></term><description> [Unicode Standard 版本 5.0.0](http://www.unicode.org/versions/Unicode5.0.0/)</span><span class="sxs-lookup"><span data-stu-id="41038-144"></term><description> [The Unicode Standard, Version 5.0.0](http://www.unicode.org/versions/Unicode5.0.0/)</span></span>  
  
 <span data-ttu-id="41038-145"></description></item><item><term> [!INCLUDE[net_v451](~/includes/net-v451-md.md)]</span><span class="sxs-lookup"><span data-stu-id="41038-145"></description></item><item><term> [!INCLUDE[net_v451](~/includes/net-v451-md.md)]</span></span>  
  
 <span data-ttu-id="41038-146"></term><description> [Unicode Standard 版本 5.0.0](http://www.unicode.org/versions/Unicode5.0.0/)</span><span class="sxs-lookup"><span data-stu-id="41038-146"></term><description> [The Unicode Standard, Version 5.0.0](http://www.unicode.org/versions/Unicode5.0.0/)</span></span>  
  
 <span data-ttu-id="41038-147"></description></item><item><term> [!INCLUDE[net_v452](~/includes/net-v452-md.md)]</span><span class="sxs-lookup"><span data-stu-id="41038-147"></description></item><item><term> [!INCLUDE[net_v452](~/includes/net-v452-md.md)]</span></span>  
  
 <span data-ttu-id="41038-148"></term><description> [Unicode Standard 版本 5.0.0](http://www.unicode.org/versions/Unicode5.0.0/)</span><span class="sxs-lookup"><span data-stu-id="41038-148"></term><description> [The Unicode Standard, Version 5.0.0](http://www.unicode.org/versions/Unicode5.0.0/)</span></span>  
  
 <span data-ttu-id="41038-149"></description></item><item><term> [!INCLUDE[net_v46](~/includes/net-v46-md.md)]</span><span class="sxs-lookup"><span data-stu-id="41038-149"></description></item><item><term> [!INCLUDE[net_v46](~/includes/net-v46-md.md)]</span></span>  
  
 <span data-ttu-id="41038-150"></term><description> [Unicode Standard 版本 6.3.0](http://www.unicode.org/versions/Unicode6.3.0/)</span><span class="sxs-lookup"><span data-stu-id="41038-150"></term><description> [The Unicode Standard, Version 6.3.0](http://www.unicode.org/versions/Unicode6.3.0/)</span></span>  
  
 <span data-ttu-id="41038-151"></description></item><item><term> [!INCLUDE[net_v461](~/includes/net-v461-md.md)]</span><span class="sxs-lookup"><span data-stu-id="41038-151"></description></item><item><term> [!INCLUDE[net_v461](~/includes/net-v461-md.md)]</span></span>  
  
 <span data-ttu-id="41038-152"></term><description> [Unicode Standard 版本 6.3.0](http://www.unicode.org/versions/Unicode6.3.0/)</span><span class="sxs-lookup"><span data-stu-id="41038-152"></term><description> [The Unicode Standard, Version 6.3.0](http://www.unicode.org/versions/Unicode6.3.0/)</span></span>  
  
 <span data-ttu-id="41038-153"></description></item><item><term> [!INCLUDE[net_v462](~/includes/net-v462-md.md)]</span><span class="sxs-lookup"><span data-stu-id="41038-153"></description></item><item><term> [!INCLUDE[net_v462](~/includes/net-v462-md.md)]</span></span>  
  
 <span data-ttu-id="41038-154"></term><description> [Unicode Standard 版本 8.0.0](http://www.unicode.org/versions/Unicode8.0.0/)</span><span class="sxs-lookup"><span data-stu-id="41038-154"></term><description> [The Unicode Standard, Version 8.0.0](http://www.unicode.org/versions/Unicode8.0.0/)</span></span>  
  
 </description></item></list>  
  
 <span data-ttu-id="41038-155">Unicode 標準的每個版本包含自舊版以來對 Unicode 字元資料庫資訊。</span><span class="sxs-lookup"><span data-stu-id="41038-155">Each version of the Unicode standard includes information on changes to the Unicode character database since the previous version.</span></span> <span data-ttu-id="41038-156">使用 Unicode 字元資料庫<see cref="T:System.Globalization.CharUnicodeInfo" />類別分類的字元。</span><span class="sxs-lookup"><span data-stu-id="41038-156">The Unicode character database is used by the <see cref="T:System.Globalization.CharUnicodeInfo" /> class for categorizing characters.</span></span></para>
    </block>
    <altmember cref="T:System.Globalization.UnicodeCategory" />
    <altmember cref="N:System.Text" />
  </Docs>
  <Members>
    <MemberGroup MemberName="GetDecimalDigitValue">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="41038-157">取得數字 Unicode 字元的十進位數值。</span><span class="sxs-lookup"><span data-stu-id="41038-157">Gets the decimal digit value of a numeric Unicode character.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetDecimalDigitValue">
      <MemberSignature Language="C#" Value="public static int GetDecimalDigitValue (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetDecimalDigitValue(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CharUnicodeInfo.GetDecimalDigitValue(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDecimalDigitValue (ch As Char) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetDecimalDigitValue(char ch);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ch"><span data-ttu-id="41038-158">要取得十進位數值的 Unicode 字元。</span><span class="sxs-lookup"><span data-stu-id="41038-158">The Unicode character for which to get the decimal digit value.</span></span></param>
        <summary><span data-ttu-id="41038-159">取得指定之數字字元的十進位數值。</span><span class="sxs-lookup"><span data-stu-id="41038-159">Gets the decimal digit value of the specified numeric character.</span></span></summary>
        <returns><span data-ttu-id="41038-160">指定之數字字元的十進位數值。</span><span class="sxs-lookup"><span data-stu-id="41038-160">The decimal digit value of the specified numeric character.</span></span>  
  
 <span data-ttu-id="41038-161">-或-</span><span class="sxs-lookup"><span data-stu-id="41038-161">-or-</span></span>  
  
 <span data-ttu-id="41038-162">如果指定的字元不是十進位數字，則為 -1。</span><span class="sxs-lookup"><span data-stu-id="41038-162">-1, if the specified character is not a decimal digit.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41038-163">這個方法會將轉換成其對等的整數值代表小數位數的字元。</span><span class="sxs-lookup"><span data-stu-id="41038-163">This method converts characters that represent decimal digits to their equivalent integral values.</span></span> <span data-ttu-id="41038-164">小數位數是個字元<xref:System.Globalization.UnicodeCategory.DecimalDigitNumber>代表十位數十進位 (基底 10) 編號從 0 到 9 的系統，其中的類別。</span><span class="sxs-lookup"><span data-stu-id="41038-164">Decimal digits are characters in the <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber> category that can represent one of ten digits in the decimal (base 10) numbering system, from zero through nine.</span></span> <span data-ttu-id="41038-165">它包含例如 U + 0030 （數字零） 到 U + 0039 (數字 9)，U + 0660 （阿拉伯數字零） 到 U + 0669 (阿拉伯數字 9)，U + 07c 0 （NKO 數字零） 到 U + 07C 9 (NKO 數字 9) 和 U + 1040 （緬甸數字零） 字元 （U + 1049年透過緬甸數字 9）。</span><span class="sxs-lookup"><span data-stu-id="41038-165">It includes characters such as U+0030 (DIGIT ZERO) through U+0039 (DIGIT NINE), U+0660 (ARABIC-INDIC DIGIT ZERO) through U+0669 (ARABIC-INDIC DIGIT NINE), U+07C0 (NKO DIGIT ZERO) through U+07C9 (NKO DIGIT NINE), and U+1040 (MYANMAR DIGIT ZERO) through U+1049 (MYANMAR DIGIT NINE).</span></span>  
  
 <span data-ttu-id="41038-166">如需 Unicode 字元的詳細資訊，請參閱[Unicode 標準](http://go.microsoft.com/fwlink/?linkid=37123)。</span><span class="sxs-lookup"><span data-stu-id="41038-166">For more information about Unicode characters, see the [Unicode Standard](http://go.microsoft.com/fwlink/?linkid=37123).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="41038-167">下列程式碼範例會顯示每個不同類型的字元方法所傳回的值。</span><span class="sxs-lookup"><span data-stu-id="41038-167">The following code example shows the values returned by each method for different types of characters.</span></span>  
  
 [!code-cpp[System.Globalization.CharUnicodeInfo_Char#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/CPP/charunicodeinfo_char.cpp#1)]
 [!code-csharp[System.Globalization.CharUnicodeInfo_Char#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/CS/charunicodeinfo_char.cs#1)]
 [!code-vb[System.Globalization.CharUnicodeInfo_Char#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/VB/charunicodeinfo_char.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDecimalDigitValue">
      <MemberSignature Language="C#" Value="public static int GetDecimalDigitValue (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetDecimalDigitValue(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CharUnicodeInfo.GetDecimalDigitValue(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDecimalDigitValue (s As String, index As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetDecimalDigitValue(System::String ^ s, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="41038-168"><see cref="T:System.String" />，包含要取得十進位數值的 Unicode 字元。</span><span class="sxs-lookup"><span data-stu-id="41038-168">The <see cref="T:System.String" /> containing the Unicode character for which to get the decimal digit value.</span></span></param>
        <param name="index"><span data-ttu-id="41038-169">要取得十進位數值之 Unicode 字元的索引。</span><span class="sxs-lookup"><span data-stu-id="41038-169">The index of the Unicode character for which to get the decimal digit value.</span></span></param>
        <summary><span data-ttu-id="41038-170">取得數字字元的十進位數值，其位於指定字串的指定索引處。</span><span class="sxs-lookup"><span data-stu-id="41038-170">Gets the decimal digit value of the numeric character at the specified index of the specified string.</span></span></summary>
        <returns><span data-ttu-id="41038-171">數字字元的十進位數值，其位於指定字串的指定索引處。</span><span class="sxs-lookup"><span data-stu-id="41038-171">The decimal digit value of the numeric character at the specified index of the specified string.</span></span>  
  
 <span data-ttu-id="41038-172">-或-</span><span class="sxs-lookup"><span data-stu-id="41038-172">-or-</span></span>  
  
 <span data-ttu-id="41038-173">如果位於指定字串之指定索引處的字元不是十進位數字，則為 -1。</span><span class="sxs-lookup"><span data-stu-id="41038-173">-1, if the character at the specified index of the specified string is not a decimal digit.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41038-174">這個方法會將轉換成其對等的整數值代表小數位數的字元。</span><span class="sxs-lookup"><span data-stu-id="41038-174">This method converts characters that represent decimal digits to their equivalent integral values.</span></span> <span data-ttu-id="41038-175">小數位數是個字元<xref:System.Globalization.UnicodeCategory.DecimalDigitNumber>代表十位數十進位 (基底 10) 編號從 0 到 9 的系統，其中的類別。</span><span class="sxs-lookup"><span data-stu-id="41038-175">Decimal digits are characters in the <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber> category that can represent one of ten digits in the decimal (base 10) numbering system, from zero through nine.</span></span> <span data-ttu-id="41038-176">它包含例如 U + 0030 （數字零） 到 U + 0039 (數字 9)，U + 0660 （阿拉伯數字零） 到 U + 0669 (阿拉伯數字 9)，U + 07c 0 （NKO 數字零） 到 U + 07C 9 (NKO 數字 9) 和 U + 1040 （緬甸數字零） 字元 （U + 1049年透過緬甸數字 9）。</span><span class="sxs-lookup"><span data-stu-id="41038-176">It includes characters such as U+0030 (DIGIT ZERO) through U+0039 (DIGIT NINE), U+0660 (ARABIC-INDIC DIGIT ZERO) through U+0669 (ARABIC-INDIC DIGIT NINE), U+07C0 (NKO DIGIT ZERO) through U+07C9 (NKO DIGIT NINE), and U+1040 (MYANMAR DIGIT ZERO) through U+1049 (MYANMAR DIGIT NINE).</span></span>  
  
 <span data-ttu-id="41038-177">如需 Unicode 字元的詳細資訊，請參閱[Unicode 標準](http://go.microsoft.com/fwlink/?linkid=37123)。</span><span class="sxs-lookup"><span data-stu-id="41038-177">For more information about Unicode characters, see the [Unicode Standard](http://go.microsoft.com/fwlink/?linkid=37123).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="41038-178">下列程式碼範例會顯示每個不同類型的字元方法所傳回的值。</span><span class="sxs-lookup"><span data-stu-id="41038-178">The following code example shows the values returned by each method for different types of characters.</span></span>  
  
 [!code-cpp[System.Globalization.CharUnicodeInfo_String#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_String/CPP/charunicodeinfo_string.cpp#1)]
 [!code-csharp[System.Globalization.CharUnicodeInfo_String#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_String/CS/charunicodeinfo_string.cs#1)]
 [!code-vb[System.Globalization.CharUnicodeInfo_String#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_String/VB/charunicodeinfo_string.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="41038-179"><paramref name="s" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="41038-179"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="41038-180"><paramref name="index" /> 在 <paramref name="s" /> 的有效索引範圍之外。</span><span class="sxs-lookup"><span data-stu-id="41038-180"><paramref name="index" /> is outside the range of valid indexes in <paramref name="s" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetDigitValue">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="41038-181">取得數字 Unicode 字元的數值。</span><span class="sxs-lookup"><span data-stu-id="41038-181">Gets the digit value of a numeric Unicode character.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetDigitValue">
      <MemberSignature Language="C#" Value="public static int GetDigitValue (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetDigitValue(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CharUnicodeInfo.GetDigitValue(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDigitValue (ch As Char) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetDigitValue(char ch);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ch"><span data-ttu-id="41038-182">要取得數值的 Unicode 字元。</span><span class="sxs-lookup"><span data-stu-id="41038-182">The Unicode character for which to get the digit value.</span></span></param>
        <summary><span data-ttu-id="41038-183">取得指定之數字字元的數值。</span><span class="sxs-lookup"><span data-stu-id="41038-183">Gets the digit value of the specified numeric character.</span></span></summary>
        <returns><span data-ttu-id="41038-184">指定之數字字元的數值。</span><span class="sxs-lookup"><span data-stu-id="41038-184">The digit value of the specified numeric character.</span></span>  
  
 <span data-ttu-id="41038-185">-或-</span><span class="sxs-lookup"><span data-stu-id="41038-185">-or-</span></span>  
  
 <span data-ttu-id="41038-186">如果指定的字元不是數字，則為 -1。</span><span class="sxs-lookup"><span data-stu-id="41038-186">-1, if the specified character is not a digit.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41038-187">數字的值為僅適用於可用來當做數字的數字字元的屬性。</span><span class="sxs-lookup"><span data-stu-id="41038-187">Digit value is a property that applies only to numeric characters that can be used as digits.</span></span> <span data-ttu-id="41038-188">數字是可以與其他數字，表示整個數字系統中結合數字字元。</span><span class="sxs-lookup"><span data-stu-id="41038-188">A digit is a numeric character that can be combined with other digits to represent a whole number in a numbering system.</span></span>  
  
 <span data-ttu-id="41038-189">如需 Unicode 字元的詳細資訊，請參閱[Unicode 標準](http://go.microsoft.com/fwlink/?linkid=37123)。</span><span class="sxs-lookup"><span data-stu-id="41038-189">For more information on Unicode characters, see the [Unicode Standard](http://go.microsoft.com/fwlink/?linkid=37123).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="41038-190">下列程式碼範例會顯示每個不同類型的字元方法所傳回的值。</span><span class="sxs-lookup"><span data-stu-id="41038-190">The following code example shows the values returned by each method for different types of characters.</span></span>  
  
 [!code-cpp[System.Globalization.CharUnicodeInfo_Char#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/CPP/charunicodeinfo_char.cpp#1)]
 [!code-csharp[System.Globalization.CharUnicodeInfo_Char#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/CS/charunicodeinfo_char.cs#1)]
 [!code-vb[System.Globalization.CharUnicodeInfo_Char#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/VB/charunicodeinfo_char.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDigitValue">
      <MemberSignature Language="C#" Value="public static int GetDigitValue (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetDigitValue(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CharUnicodeInfo.GetDigitValue(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDigitValue (s As String, index As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetDigitValue(System::String ^ s, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="41038-191"><see cref="T:System.String" />，包含要取得數值的 Unicode 字元。</span><span class="sxs-lookup"><span data-stu-id="41038-191">The <see cref="T:System.String" /> containing the Unicode character for which to get the digit value.</span></span></param>
        <param name="index"><span data-ttu-id="41038-192">要取得數值之 Unicode 字元的索引。</span><span class="sxs-lookup"><span data-stu-id="41038-192">The index of the Unicode character for which to get the digit value.</span></span></param>
        <summary><span data-ttu-id="41038-193">取得數字字元的數值，其位於指定字串的指定索引處。</span><span class="sxs-lookup"><span data-stu-id="41038-193">Gets the digit value of the numeric character at the specified index of the specified string.</span></span></summary>
        <returns><span data-ttu-id="41038-194">數字字元的數值，其位於指定字串的指定索引處。</span><span class="sxs-lookup"><span data-stu-id="41038-194">The digit value of the numeric character at the specified index of the specified string.</span></span>  
  
 <span data-ttu-id="41038-195">-或-</span><span class="sxs-lookup"><span data-stu-id="41038-195">-or-</span></span>  
  
 <span data-ttu-id="41038-196">如果位於指定字串之指定索引處的字元不是數字，則為 -1。</span><span class="sxs-lookup"><span data-stu-id="41038-196">-1, if the character at the specified index of the specified string is not a digit.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41038-197">數字的值為僅適用於可用來當做數字的數字字元的屬性。</span><span class="sxs-lookup"><span data-stu-id="41038-197">Digit value is a property that applies only to numeric characters that can be used as digits.</span></span> <span data-ttu-id="41038-198">數字是可以與其他數字，表示整個數字系統中結合數字字元。</span><span class="sxs-lookup"><span data-stu-id="41038-198">A digit is a numeric character that can be combined with other digits to represent a whole number in a numbering system.</span></span>  
  
 <span data-ttu-id="41038-199">如需 Unicode 字元的詳細資訊，請參閱[Unicode 標準](http://go.microsoft.com/fwlink/?linkid=37123)。</span><span class="sxs-lookup"><span data-stu-id="41038-199">For more information on Unicode characters, see the [Unicode Standard](http://go.microsoft.com/fwlink/?linkid=37123).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="41038-200">下列程式碼範例會顯示每個不同類型的字元方法所傳回的值。</span><span class="sxs-lookup"><span data-stu-id="41038-200">The following code example shows the values returned by each method for different types of characters.</span></span>  
  
 [!code-cpp[System.Globalization.CharUnicodeInfo_String#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_String/CPP/charunicodeinfo_string.cpp#1)]
 [!code-csharp[System.Globalization.CharUnicodeInfo_String#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_String/CS/charunicodeinfo_string.cs#1)]
 [!code-vb[System.Globalization.CharUnicodeInfo_String#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_String/VB/charunicodeinfo_string.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="41038-201"><paramref name="s" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="41038-201"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="41038-202"><paramref name="index" /> 在 <paramref name="s" /> 的有效索引範圍之外。</span><span class="sxs-lookup"><span data-stu-id="41038-202"><paramref name="index" /> is outside the range of valid indexes in <paramref name="s" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetNumericValue">
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="41038-203">取得與 Unicode 字元關聯的數值。</span><span class="sxs-lookup"><span data-stu-id="41038-203">Gets the numeric value associated with a Unicode character.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetNumericValue">
      <MemberSignature Language="C#" Value="public static double GetNumericValue (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 GetNumericValue(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CharUnicodeInfo.GetNumericValue(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetNumericValue (ch As Char) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double GetNumericValue(char ch);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ch"><span data-ttu-id="41038-204">要取得數值的 Unicode 字元。</span><span class="sxs-lookup"><span data-stu-id="41038-204">The Unicode character for which to get the numeric value.</span></span></param>
        <summary><span data-ttu-id="41038-205">取得與指定字元關聯的數值。</span><span class="sxs-lookup"><span data-stu-id="41038-205">Gets the numeric value associated with the specified character.</span></span></summary>
        <returns><span data-ttu-id="41038-206">與指定字元關聯的數值。</span><span class="sxs-lookup"><span data-stu-id="41038-206">The numeric value associated with the specified character.</span></span>  
  
 <span data-ttu-id="41038-207">-或-</span><span class="sxs-lookup"><span data-stu-id="41038-207">-or-</span></span>  
  
 <span data-ttu-id="41038-208">如果指定的字元不是數字字元，則為 -1。</span><span class="sxs-lookup"><span data-stu-id="41038-208">-1, if the specified character is not a numeric character.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41038-209">數值為僅適用於數字字元，包括分數、 註標、 上標、 羅馬數字、 貨幣分子環狀數字和指令碼特定數字的 Unicode 字元屬性。</span><span class="sxs-lookup"><span data-stu-id="41038-209">Numeric value is a Unicode character property that applies only to numeric characters, which include fractions, subscripts, superscripts, Roman numerals, currency numerators, encircled numbers, and script-specific digits.</span></span> <span data-ttu-id="41038-210">如需 Unicode 字元的詳細資訊，請參閱[Unicode 標準](http://go.microsoft.com/fwlink/?linkid=37123)。</span><span class="sxs-lookup"><span data-stu-id="41038-210">For more information on Unicode characters, see the [Unicode Standard](http://go.microsoft.com/fwlink/?linkid=37123).</span></span>  
  
 <span data-ttu-id="41038-211"><xref:System.Globalization.CharUnicodeInfo.GetNumericValue%28System.Char%29>方法會假設`ch`對應至單一語言的字元，並檢查該字元是否可以轉換成十進位數字。</span><span class="sxs-lookup"><span data-stu-id="41038-211">The <xref:System.Globalization.CharUnicodeInfo.GetNumericValue%28System.Char%29> method assumes that `ch` corresponds to a single linguistic character and checks whether that character can be converted to a decimal digit.</span></span> <span data-ttu-id="41038-212">不過，某些 Unicode 標準中的數字都由兩個<xref:System.Char>會組成 surrogate 字組的物件。</span><span class="sxs-lookup"><span data-stu-id="41038-212">However, some numbers in the Unicode standard are represented by two <xref:System.Char> objects that form a surrogate pair.</span></span> <span data-ttu-id="41038-213">例如，編號系統 Aegean 字碼指標 U + 10107 到 U + 10133 所組成。</span><span class="sxs-lookup"><span data-stu-id="41038-213">For example, the Aegean numbering system consists of code points U+10107 through U+10133.</span></span> <span data-ttu-id="41038-214">下列範例會使用<xref:System.Char.ConvertFromUtf32%2A>方法來具現化字串，代表 AEGEAN 的數字一。</span><span class="sxs-lookup"><span data-stu-id="41038-214">The following example uses the <xref:System.Char.ConvertFromUtf32%2A> method to instantiate a string that represents AEGEAN NUMBER ONE.</span></span> <span data-ttu-id="41038-215">做為範例所示，從輸出<xref:System.Globalization.CharUnicodeInfo.GetNumericValue%28System.Char%29>方法會傳回-1，如果傳遞為高 surrogate 或低 surrogate 的此字元。</span><span class="sxs-lookup"><span data-stu-id="41038-215">As the output from the example shows, the <xref:System.Globalization.CharUnicodeInfo.GetNumericValue%28System.Char%29> method returns -1 if it is passed either a high surrogate or a low surrogate of this character.</span></span>  
  
 [!code-csharp[System.Globalization.CharUnicodeInfo.GetNumericValue#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.charunicodeinfo.getnumericvalue/cs/getnumericvalue1.cs#2)]
 [!code-vb[System.Globalization.CharUnicodeInfo.GetNumericValue#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.charunicodeinfo.getnumericvalue/vb/getnumericvalue1.vb#2)]  
  
   
  
## Examples  
 <span data-ttu-id="41038-216">下列程式碼範例會顯示每個不同類型的字元方法所傳回的值。</span><span class="sxs-lookup"><span data-stu-id="41038-216">The following code example shows the values returned by each method for different types of characters.</span></span>  
  
 [!code-cpp[System.Globalization.CharUnicodeInfo_Char#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/CPP/charunicodeinfo_char.cpp#1)]
 [!code-csharp[System.Globalization.CharUnicodeInfo_Char#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/CS/charunicodeinfo_char.cs#1)]
 [!code-vb[System.Globalization.CharUnicodeInfo_Char#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/VB/charunicodeinfo_char.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNumericValue">
      <MemberSignature Language="C#" Value="public static double GetNumericValue (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 GetNumericValue(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CharUnicodeInfo.GetNumericValue(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetNumericValue (s As String, index As Integer) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double GetNumericValue(System::String ^ s, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="41038-217"><see cref="T:System.String" />，包含要取得數值的 Unicode 字元。</span><span class="sxs-lookup"><span data-stu-id="41038-217">The <see cref="T:System.String" /> containing the Unicode character for which to get the numeric value.</span></span></param>
        <param name="index"><span data-ttu-id="41038-218">要取得數值之 Unicode 字元的索引。</span><span class="sxs-lookup"><span data-stu-id="41038-218">The index of the Unicode character for which to get the numeric value.</span></span></param>
        <summary><span data-ttu-id="41038-219">取得數值，該值與指定字串之指定索引處的字元關聯。</span><span class="sxs-lookup"><span data-stu-id="41038-219">Gets the numeric value associated with the character at the specified index of the specified string.</span></span></summary>
        <returns><span data-ttu-id="41038-220">數值，該值與指定字串之指定索引處的字元關聯。</span><span class="sxs-lookup"><span data-stu-id="41038-220">The numeric value associated with the character at the specified index of the specified string.</span></span>  
  
 <span data-ttu-id="41038-221">-或-</span><span class="sxs-lookup"><span data-stu-id="41038-221">-or-</span></span>  
  
 <span data-ttu-id="41038-222">如果位於指定字串之指定索引處的字元不是數字字元，則為 -1。</span><span class="sxs-lookup"><span data-stu-id="41038-222">-1, if the character at the specified index of the specified string is not a numeric character.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41038-223">數值為僅適用於數字字元，包括分數、 註標、 上標、 羅馬數字、 貨幣分子環狀數字和指令碼特定數字的 Unicode 字元屬性。</span><span class="sxs-lookup"><span data-stu-id="41038-223">Numeric value is a Unicode character property that applies only to numeric characters, which include fractions, subscripts, superscripts, Roman numerals, currency numerators, encircled numbers, and script-specific digits.</span></span> <span data-ttu-id="41038-224">如需 Unicode 字元的詳細資訊，請參閱[Unicode 標準](http://go.microsoft.com/fwlink/?linkid=37123)。</span><span class="sxs-lookup"><span data-stu-id="41038-224">For more information on Unicode characters, see the [Unicode Standard](http://go.microsoft.com/fwlink/?linkid=37123).</span></span>  
  
 <span data-ttu-id="41038-225">如果<xref:System.Char>物件位置`index`是有效的 surrogate 字組，第一個字元<xref:System.Globalization.CharUnicodeInfo.GetNumericValue%28System.String%2CSystem.Int32%29>方法會判斷 surrogate 字組數字，會形成，若是如此，傳回其數字的值。</span><span class="sxs-lookup"><span data-stu-id="41038-225">If the <xref:System.Char> object at position `index` is the first character of a valid surrogate pair, the <xref:System.Globalization.CharUnicodeInfo.GetNumericValue%28System.String%2CSystem.Int32%29> method determines whether the surrogate pair forms a numeric digit, and, if it does, returns its numeric value.</span></span> <span data-ttu-id="41038-226">例如，編號系統 Aegean 字碼指標 U + 10107 到 U + 10133 所組成。</span><span class="sxs-lookup"><span data-stu-id="41038-226">For example, the Aegean numbering system consists of code points U+10107 through U+10133.</span></span> <span data-ttu-id="41038-227">下列範例會使用<xref:System.Char.ConvertFromUtf32%2A>方法來具現化，表示每個 Aegean 的數字的字串。</span><span class="sxs-lookup"><span data-stu-id="41038-227">The following example uses the <xref:System.Char.ConvertFromUtf32%2A> method to instantiate a string that represents each Aegean number.</span></span> <span data-ttu-id="41038-228">做為範例所示，從輸出<xref:System.Globalization.CharUnicodeInfo.GetNumericValue%28System.String%2CSystem.Int32%29>方法會傳回正確的數值，如果傳遞 Aegean 的數字的高 surrogate。</span><span class="sxs-lookup"><span data-stu-id="41038-228">As the output from the example shows, the <xref:System.Globalization.CharUnicodeInfo.GetNumericValue%28System.String%2CSystem.Int32%29> method returns the correct numeric value if it is passed the high surrogate of an Aegean number.</span></span> <span data-ttu-id="41038-229">不過，如果傳遞低 surrogate，它會考慮只在隔離之低 surrogate，傳回-1。</span><span class="sxs-lookup"><span data-stu-id="41038-229">However, if it is passed the low surrogate, it considers only the low surrogate in isolation and returns -1.</span></span>  
  
 [!code-csharp[System.Globalization.CharUnicodeInfo.GetNumericValue#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.charunicodeinfo.getnumericvalue/cs/getnumericvalue1.cs#3)]
 [!code-vb[System.Globalization.CharUnicodeInfo.GetNumericValue#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.charunicodeinfo.getnumericvalue/vb/getnumericvalue1.vb#3)]  
  
   
  
## Examples  
 <span data-ttu-id="41038-230">下列程式碼範例會顯示每個不同類型的字元方法所傳回的值。</span><span class="sxs-lookup"><span data-stu-id="41038-230">The following code example shows the values returned by each method for different types of characters.</span></span>  
  
 [!code-cpp[System.Globalization.CharUnicodeInfo_String#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_String/CPP/charunicodeinfo_string.cpp#1)]
 [!code-csharp[System.Globalization.CharUnicodeInfo_String#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_String/CS/charunicodeinfo_string.cs#1)]
 [!code-vb[System.Globalization.CharUnicodeInfo_String#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_String/VB/charunicodeinfo_string.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="41038-231"><paramref name="s" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="41038-231"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="41038-232"><paramref name="index" /> 在 <paramref name="s" /> 的有效索引範圍之外。</span><span class="sxs-lookup"><span data-stu-id="41038-232"><paramref name="index" /> is outside the range of valid indexes in <paramref name="s" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetUnicodeCategory">
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="41038-233">取得 Unicode 字元的 Unicode 分類。</span><span class="sxs-lookup"><span data-stu-id="41038-233">Gets the Unicode category of a Unicode character.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetUnicodeCategory">
      <MemberSignature Language="C#" Value="public static System.Globalization.UnicodeCategory GetUnicodeCategory (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Globalization.UnicodeCategory GetUnicodeCategory(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CharUnicodeInfo.GetUnicodeCategory(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUnicodeCategory (ch As Char) As UnicodeCategory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::UnicodeCategory GetUnicodeCategory(char ch);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.UnicodeCategory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ch"><span data-ttu-id="41038-234">要取得 Unicode 分類的 Unicode 字元。</span><span class="sxs-lookup"><span data-stu-id="41038-234">The Unicode character for which to get the Unicode category.</span></span></param>
        <summary><span data-ttu-id="41038-235">取得指定之字元的 Unicode 分類。</span><span class="sxs-lookup"><span data-stu-id="41038-235">Gets the Unicode category of the specified character.</span></span></summary>
        <returns><span data-ttu-id="41038-236"><see cref="T:System.Globalization.UnicodeCategory" /> 值，指出指定之字元的分類。</span><span class="sxs-lookup"><span data-stu-id="41038-236">A <see cref="T:System.Globalization.UnicodeCategory" /> value indicating the category of the specified character.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41038-237">Unicode 字元分成類別。</span><span class="sxs-lookup"><span data-stu-id="41038-237">The Unicode characters are divided into categories.</span></span> <span data-ttu-id="41038-238">字元分類是其中一個屬性。</span><span class="sxs-lookup"><span data-stu-id="41038-238">A character's category is one of its properties.</span></span> <span data-ttu-id="41038-239">例如，字元可能是大寫字母、 小寫字母、 十進位數字、 字母數字、 連接子標點符號、 數學符號或貨幣符號。</span><span class="sxs-lookup"><span data-stu-id="41038-239">For example, a character might be an uppercase letter, a lowercase letter, a decimal digit number, a letter number, a connector punctuation, a math symbol, or a currency symbol.</span></span> <span data-ttu-id="41038-240"><xref:System.Globalization.UnicodeCategory>類別會傳回 Unicode 字元分類。</span><span class="sxs-lookup"><span data-stu-id="41038-240">The <xref:System.Globalization.UnicodeCategory> class returns the category of a Unicode character.</span></span> <span data-ttu-id="41038-241">如需 Unicode 字元的詳細資訊，請參閱[Unicode 標準](http://go.microsoft.com/fwlink/?linkid=37123)。</span><span class="sxs-lookup"><span data-stu-id="41038-241">For more information on Unicode characters, see the [Unicode Standard](http://go.microsoft.com/fwlink/?linkid=37123).</span></span>  
  
 <span data-ttu-id="41038-242"><xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%2A>方法會假設`ch`對應至單一語言的字元，並傳回其類別目錄。</span><span class="sxs-lookup"><span data-stu-id="41038-242">The <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%2A> method assumes that `ch` corresponds to a single linguistic character and returns its category.</span></span> <span data-ttu-id="41038-243">這表示，對於 surrogate 字組，它會傳回<xref:System.Globalization.UnicodeCategory.Surrogate?displayProperty=nameWithType>而不是 surrogate 所屬的類別目錄。</span><span class="sxs-lookup"><span data-stu-id="41038-243">This means that, for surrogate pairs, it returns <xref:System.Globalization.UnicodeCategory.Surrogate?displayProperty=nameWithType> instead of the category to which the surrogate belongs.</span></span> <span data-ttu-id="41038-244">例如，Ugaritic 字母佔據字碼指標 U + 10380 到 U + 1039F。</span><span class="sxs-lookup"><span data-stu-id="41038-244">For example, the Ugaritic alphabet occupies code points U+10380 to U+1039F.</span></span> <span data-ttu-id="41038-245">下列範例會使用<xref:System.Char.ConvertFromUtf32%2A>方法來具現化字串，代表 UGARITIC 字母 ALPA (U + 10380)，也就是 Ugaritic 字母的第一個字母。</span><span class="sxs-lookup"><span data-stu-id="41038-245">The following example uses the <xref:System.Char.ConvertFromUtf32%2A> method to instantiate a string that represents UGARITIC LETTER ALPA (U+10380), which is the first letter of the Ugaritic alphabet.</span></span> <span data-ttu-id="41038-246">做為範例所示，從輸出<xref:System.Char.IsNumber%28System.Char%29>方法會傳回`false`如果它傳遞之高 surrogate 或低 surrogate 的此字元。</span><span class="sxs-lookup"><span data-stu-id="41038-246">As the output from the example shows, the <xref:System.Char.IsNumber%28System.Char%29> method returns `false` if it is passed either the high surrogate or the low surrogate of this character.</span></span>  
  
 [!code-csharp[System.Globalization.CharUnicodeInfo.GetUnicodeCategory#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.charunicodeinfo.getunicodecategory/cs/getunicodecategory1.cs#1)]
 [!code-vb[System.Globalization.CharUnicodeInfo.GetUnicodeCategory#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.charunicodeinfo.getunicodecategory/vb/getunicodecategory1.vb#1)]  
  
 <span data-ttu-id="41038-247">請注意，<xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%2A?displayProperty=nameWithType>不一定會傳回相同<xref:System.Globalization.UnicodeCategory>視為<xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType>方法時做為參數傳遞特定的字元。</span><span class="sxs-lookup"><span data-stu-id="41038-247">Note that <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%2A?displayProperty=nameWithType> does not always return the same <xref:System.Globalization.UnicodeCategory> value as the <xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType> method when passed a particular character as a parameter.</span></span> <span data-ttu-id="41038-248"><xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%2A?displayProperty=nameWithType>方法設計用來反映目前版本的 Unicode 標準。</span><span class="sxs-lookup"><span data-stu-id="41038-248">The <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%2A?displayProperty=nameWithType> method is designed to reflect the current version of the Unicode standard.</span></span> <span data-ttu-id="41038-249">相反地，雖然<xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType>方法通常會反映目前版本的 Unicode 標準，它可能會傳回字元的分類，根據舊版的標準，或它可能會從目前的標準，以傳回不同的類別目錄保持回溯相容性。</span><span class="sxs-lookup"><span data-stu-id="41038-249">In contrast, although the <xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType> method usually reflects the current version of the Unicode standard, it might return a character's category based on a previous version of the standard, or it might return a category that differs from the current standard to preserve backward compatibility.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="41038-250">下列程式碼範例會顯示每個不同類型的字元方法所傳回的值。</span><span class="sxs-lookup"><span data-stu-id="41038-250">The following code example shows the values returned by each method for different types of characters.</span></span>  
  
 [!code-cpp[System.Globalization.CharUnicodeInfo_Char#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/CPP/charunicodeinfo_char.cpp#1)]
 [!code-csharp[System.Globalization.CharUnicodeInfo_Char#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/CS/charunicodeinfo_char.cs#1)]
 [!code-vb[System.Globalization.CharUnicodeInfo_Char#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/VB/charunicodeinfo_char.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.UnicodeCategory" />
      </Docs>
    </Member>
    <Member MemberName="GetUnicodeCategory">
      <MemberSignature Language="C#" Value="public static System.Globalization.UnicodeCategory GetUnicodeCategory (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Globalization.UnicodeCategory GetUnicodeCategory(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CharUnicodeInfo.GetUnicodeCategory(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUnicodeCategory (s As String, index As Integer) As UnicodeCategory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::UnicodeCategory GetUnicodeCategory(System::String ^ s, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.UnicodeCategory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="41038-251"><see cref="T:System.String" />，包含要取得 Unicode 分類的 Unicode 字元。</span><span class="sxs-lookup"><span data-stu-id="41038-251">The <see cref="T:System.String" /> containing the Unicode character for which to get the Unicode category.</span></span></param>
        <param name="index"><span data-ttu-id="41038-252">要取得 Unicode 分類之 Unicode 字元的索引。</span><span class="sxs-lookup"><span data-stu-id="41038-252">The index of the Unicode character for which to get the Unicode category.</span></span></param>
        <summary><span data-ttu-id="41038-253">取得字元的 Unicode 分類，其位於指定字串的指定索引處。</span><span class="sxs-lookup"><span data-stu-id="41038-253">Gets the Unicode category of the character at the specified index of the specified string.</span></span></summary>
        <returns><span data-ttu-id="41038-254"><see cref="T:System.Globalization.UnicodeCategory" /> 值，指出位於指定字串之指定索引處的字元分類。</span><span class="sxs-lookup"><span data-stu-id="41038-254">A <see cref="T:System.Globalization.UnicodeCategory" /> value indicating the category of the character at the specified index of the specified string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="41038-255">Unicode 字元分成類別。</span><span class="sxs-lookup"><span data-stu-id="41038-255">The Unicode characters are divided into categories.</span></span> <span data-ttu-id="41038-256">字元分類是其中一個屬性。</span><span class="sxs-lookup"><span data-stu-id="41038-256">A character's category is one of its properties.</span></span> <span data-ttu-id="41038-257">例如，字元可能是大寫字母、 小寫字母、 十進位數字、 字母數字、 連接子標點符號、 數學符號或貨幣符號。</span><span class="sxs-lookup"><span data-stu-id="41038-257">For example, a character might be an uppercase letter, a lowercase letter, a decimal digit number, a letter number, a connector punctuation, a math symbol, or a currency symbol.</span></span> <span data-ttu-id="41038-258"><xref:System.Globalization.UnicodeCategory>類別會傳回 Unicode 字元分類。</span><span class="sxs-lookup"><span data-stu-id="41038-258">The <xref:System.Globalization.UnicodeCategory> class returns the category of a Unicode character.</span></span> <span data-ttu-id="41038-259">如需 Unicode 字元的詳細資訊，請參閱[Unicode 標準](http://go.microsoft.com/fwlink/?linkid=37123)。</span><span class="sxs-lookup"><span data-stu-id="41038-259">For more information on Unicode characters, see the [Unicode Standard](http://go.microsoft.com/fwlink/?linkid=37123).</span></span>  
  
 <span data-ttu-id="41038-260">如果<xref:System.Char>物件位置`index`是有效的 surrogate 字組，第一個字元<xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.String%2CSystem.Int32%29>方法會傳回 surrogate 字組，而不是傳回的 Unicode 分類<xref:System.Globalization.UnicodeCategory.Surrogate?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="41038-260">If the <xref:System.Char> object at position `index` is the first character of a valid surrogate pair, the <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.String%2CSystem.Int32%29> method returns the Unicode category of the surrogate pair instead of returning <xref:System.Globalization.UnicodeCategory.Surrogate?displayProperty=nameWithType>.</span></span> <span data-ttu-id="41038-261">例如，Ugaritic 字母佔據字碼指標 U + 10380 到 U + 1039F。</span><span class="sxs-lookup"><span data-stu-id="41038-261">For example, the Ugaritic alphabet occupies code points U+10380 to U+1039F.</span></span> <span data-ttu-id="41038-262">下列範例會使用<xref:System.Char.ConvertFromUtf32%2A>方法來具現化字串，代表 UGARITIC 字母 ALPA (U + 10380)，也就是 Ugaritic 字母的第一個字母。</span><span class="sxs-lookup"><span data-stu-id="41038-262">The following example uses the <xref:System.Char.ConvertFromUtf32%2A> method to instantiate a string that represents UGARITIC LETTER ALPA (U+10380), which is the first letter of the Ugaritic alphabet.</span></span> <span data-ttu-id="41038-263">做為範例所示，從輸出<xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.String%2CSystem.Int32%29>方法會傳回<xref:System.Globalization.UnicodeCategory.OtherLetter?displayProperty=nameWithType>如果它傳遞之高 surrogate 的字元，這表示它會考慮將 surrogate 字組。</span><span class="sxs-lookup"><span data-stu-id="41038-263">As the output from the example shows, the <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.String%2CSystem.Int32%29> method returns <xref:System.Globalization.UnicodeCategory.OtherLetter?displayProperty=nameWithType> if it is passed the high surrogate of this character, which indicates that it considers the surrogate pair.</span></span> <span data-ttu-id="41038-264">不過，如果傳遞低 surrogate，它會考慮只在隔離之低 surrogate，並傳回<xref:System.Globalization.UnicodeCategory.Surrogate?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="41038-264">However, if it is passed the low surrogate, it considers only the low surrogate in isolation and returns <xref:System.Globalization.UnicodeCategory.Surrogate?displayProperty=nameWithType>.</span></span>  
  
 [!code-csharp[System.Globalization.CharUnicodeInfo.GetUnicodeCategory#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.charunicodeinfo.getunicodecategory/cs/getunicodecategory1.cs#2)]
 [!code-vb[System.Globalization.CharUnicodeInfo.GetUnicodeCategory#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.charunicodeinfo.getunicodecategory/vb/getunicodecategory1.vb#2)]  
  
 <span data-ttu-id="41038-265">請注意，<xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%2A?displayProperty=nameWithType>方法不一定會傳回相同<xref:System.Globalization.UnicodeCategory>視為<xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType>方法時做為參數傳遞特定的字元。</span><span class="sxs-lookup"><span data-stu-id="41038-265">Note that <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%2A?displayProperty=nameWithType> method does not always return the same <xref:System.Globalization.UnicodeCategory> value as the <xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType> method when passed a particular character as a parameter.</span></span> <span data-ttu-id="41038-266"><xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%2A?displayProperty=nameWithType>方法設計用來反映目前版本的 Unicode 標準。</span><span class="sxs-lookup"><span data-stu-id="41038-266">The <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%2A?displayProperty=nameWithType> method is designed to reflect the current version of the Unicode standard.</span></span> <span data-ttu-id="41038-267">相反地，雖然<xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType>方法通常會反映目前版本的 Unicode 標準，它可能會傳回字元的分類，根據舊版的標準，或它可能會從目前的標準，以傳回不同的類別目錄保持回溯相容性。</span><span class="sxs-lookup"><span data-stu-id="41038-267">In contrast, although the <xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType> method usually reflects the current version of the Unicode standard, it might return a character's category based on a previous version of the standard, or it might return a category that differs from the current standard to preserve backward compatibility.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="41038-268">下列程式碼範例會顯示每個不同類型的字元方法所傳回的值。</span><span class="sxs-lookup"><span data-stu-id="41038-268">The following code example shows the values returned by each method for different types of characters.</span></span>  
  
 [!code-cpp[System.Globalization.CharUnicodeInfo_String#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_String/CPP/charunicodeinfo_string.cpp#1)]
 [!code-csharp[System.Globalization.CharUnicodeInfo_String#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_String/CS/charunicodeinfo_string.cs#1)]
 [!code-vb[System.Globalization.CharUnicodeInfo_String#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_String/VB/charunicodeinfo_string.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="41038-269"><paramref name="s" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="41038-269"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="41038-270"><paramref name="index" /> 在 <paramref name="s" /> 的有效索引範圍之外。</span><span class="sxs-lookup"><span data-stu-id="41038-270"><paramref name="index" /> is outside the range of valid indexes in <paramref name="s" />.</span></span></exception>
        <altmember cref="T:System.Globalization.UnicodeCategory" />
      </Docs>
    </Member>
  </Members>
</Type>