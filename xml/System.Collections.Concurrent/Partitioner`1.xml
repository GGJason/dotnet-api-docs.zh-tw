<Type Name="Partitioner&lt;TSource&gt;" FullName="System.Collections.Concurrent.Partitioner&lt;TSource&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2cedc845b94d17da7b67e7839f47924e4332b5e5" /><Meta Name="ms.sourcegitcommit" Value="d8bd5d494445ce3fcad1321267cb87548d23a45b" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="12/15/2018" /><Meta Name="ms.locfileid" Value="53446586" /></Metadata><TypeSignature Language="C#" Value="public abstract class Partitioner&lt;TSource&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit Partitioner`1&lt;TSource&gt; extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Concurrent.Partitioner`1" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Partitioner(Of TSource)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TSource&gt;&#xA;public ref class Partitioner abstract" />
  <TypeSignature Language="F#" Value="type Partitioner&lt;'Source&gt; = class" />
  <AssemblyInfo>
    <AssemblyName>System.Collections.Concurrent</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.14.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TSource" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <typeparam name="TSource">集合中項目的型別。</typeparam>
    <summary>代表將資料來源分割成多個分割的特定方式。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如需詳細資訊，請參閱 [PLINQ 和 TPL 的自訂 Partitioner](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md)。  
  
   
  
## Examples  
 下列範例示範如何實作 partitioner 會一次傳回的單一項目：  
  
 [!code-csharp[System.Collections.Concurrent.Partitioner#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.concurrent.partitioner/cs/partitioner.cs#1)]
 [!code-vb[System.Collections.Concurrent.Partitioner#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.concurrent.partitioner/vb/partitioner.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>上的靜態方法<see cref="T:System.Collections.Concurrent.Partitioner`1" />是所有的執行緒安全，且可能會從多個執行緒同時使用。 不過，在使用中建立的 partitioner 時，基礎資料來源應該不加以修改，不論是從相同的執行緒正在使用 partitioner，或從個別的執行緒。</threadsafe>
    <altmember cref="T:System.Collections.Concurrent.OrderablePartitioner`1" />
    <altmember cref="T:System.Collections.Concurrent.Partitioner" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Partitioner ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.Partitioner`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Partitioner();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>建立新的 Partitioner 執行個體。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Collections.Concurrent.OrderablePartitioner`1" />
        <altmember cref="T:System.Collections.Concurrent.Partitioner" />
        <related type="Article" href="https://msdn.microsoft.com/library/96153688-9a01-47c4-8430-909cee9a2887">PLINQ 和 TPL 的自訂 Partitioner</related>
      </Docs>
    </Member>
    <Member MemberName="GetDynamicPartitions">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;TSource&gt; GetDynamicPartitions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;!TSource&gt; GetDynamicPartitions() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.Partitioner`1.GetDynamicPartitions" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDynamicPartitions () As IEnumerable(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ GetDynamicPartitions();" />
      <MemberSignature Language="F#" Value="abstract member GetDynamicPartitions : unit -&gt; seq&lt;'Source&gt;&#xA;override this.GetDynamicPartitions : unit -&gt; seq&lt;'Source&gt;" Usage="partitioner.GetDynamicPartitions " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>建立物件，這個物件可將基礎集合分割為數量不定的幾個部分。</summary>
        <returns>可針對基礎資料來源建立分割的物件。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 傳回的物件會實作<xref:System.Collections.Generic.IEnumerable%601?displayProperty=nameWithType>介面。 呼叫<xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A>物件上建立另一個磁碟分割序列。  
  
 <xref:System.Collections.Concurrent.Partitioner%601.GetDynamicPartitions%2A>方法時才支援<xref:System.Collections.Concurrent.Partitioner%601.SupportsDynamicPartitions%2A>屬性會傳回 true。 如需詳細資訊，請參閱 [PLINQ 和 TPL 的自訂 Partitioner](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md)。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">基底類別不支援動態資料分割。 您必須在衍生類別中實作它。</exception>
        <altmember cref="T:System.Collections.Concurrent.OrderablePartitioner`1" />
        <altmember cref="T:System.Collections.Concurrent.Partitioner" />
        <related type="Article" href="https://msdn.microsoft.com/library/96153688-9a01-47c4-8430-909cee9a2887">PLINQ 和 TPL 的自訂 Partitioner</related>
      </Docs>
    </Member>
    <Member MemberName="GetPartitions">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IList&lt;System.Collections.Generic.IEnumerator&lt;TSource&gt;&gt; GetPartitions (int partitionCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class System.Collections.Generic.IEnumerator`1&lt;!TSource&gt;&gt; GetPartitions(int32 partitionCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.Partitioner`1.GetPartitions(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetPartitions (partitionCount As Integer) As IList(Of IEnumerator(Of TSource))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Collections::Generic::IList&lt;System::Collections::Generic::IEnumerator&lt;TSource&gt; ^&gt; ^ GetPartitions(int partitionCount);" />
      <MemberSignature Language="F#" Value="abstract member GetPartitions : int -&gt; System.Collections.Generic.IList&lt;System.Collections.Generic.IEnumerator&lt;'Source&gt;&gt;" Usage="partitioner.GetPartitions partitionCount" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Collections.Generic.IEnumerator&lt;TSource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partitionCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="partitionCount">要建立之分割的數目。</param>
        <summary>將基礎集合分割為指定的分割數目。</summary>
        <returns>包含 <paramref name="partitionCount" /> 列舉程式的清單。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 類別若實作此方法應該會傳回完全中所指定的資料分割數目`partitionCount`。 如果分割區不包含任何項目，則傳回空的列舉值，而不是 null (在 Visual Basic 中 Nothing)。 如需詳細資訊，請參閱 [PLINQ 和 TPL 的自訂 Partitioner](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md)。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Concurrent.OrderablePartitioner`1" />
        <altmember cref="T:System.Collections.Concurrent.Partitioner" />
        <related type="Article" href="https://msdn.microsoft.com/library/96153688-9a01-47c4-8430-909cee9a2887">PLINQ 和 TPL 的自訂 Partitioner</related>
      </Docs>
    </Member>
    <Member MemberName="SupportsDynamicPartitions">
      <MemberSignature Language="C#" Value="public virtual bool SupportsDynamicPartitions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsDynamicPartitions" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsDynamicPartitions As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsDynamicPartitions { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsDynamicPartitions : bool" Usage="System.Collections.Concurrent.Partitioner&lt;'Source&gt;.SupportsDynamicPartitions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得值，這個值指出是否能夠動態建立額外的分割。</summary>
        <value><see langword="true" /> 如果<see cref="T:System.Collections.Concurrent.Partitioner`1" />可以建立分割區以動態方式要求;<see langword="false" />如果<see cref="T:System.Collections.Concurrent.Partitioner`1" />只能靜態地配置分割區。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果在衍生的類別不會覆寫和實作<xref:System.Collections.Concurrent.Partitioner%601.GetDynamicPartitions%2A>，<xref:System.Collections.Concurrent.Partitioner%601.SupportsDynamicPartitions%2A>應該會傳回 false。 值<xref:System.Collections.Concurrent.Partitioner%601.SupportsDynamicPartitions%2A>應該不會改變此執行個體的存留期。 如需詳細資訊，請參閱 [PLINQ 和 TPL 的自訂 Partitioner](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md)。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Concurrent.OrderablePartitioner`1" />
        <altmember cref="T:System.Collections.Concurrent.Partitioner" />
        <related type="Article" href="https://msdn.microsoft.com/library/96153688-9a01-47c4-8430-909cee9a2887">PLINQ 和 TPL 的自訂 Partitioner</related>
      </Docs>
    </Member>
  </Members>
</Type>