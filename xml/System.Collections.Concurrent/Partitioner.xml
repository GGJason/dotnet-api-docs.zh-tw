<Type Name="Partitioner" FullName="System.Collections.Concurrent.Partitioner">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="006a934e81a62861707f0183684841c697695c5c" />
    <Meta Name="ms.sourcegitcommit" Value="9dda17222b9f7d3edf130133bfb1370d5b410a4b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="09/22/2018" />
    <Meta Name="ms.locfileid" Value="46607244" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class Partitioner" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Partitioner extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Concurrent.Partitioner" />
  <TypeSignature Language="VB.NET" Value="Public Class Partitioner" />
  <TypeSignature Language="C++ CLI" Value="public ref class Partitioner abstract sealed" />
  <TypeSignature Language="F#" Value="type Partitioner = class" />
  <AssemblyInfo>
    <AssemblyName>System.Collections.Concurrent</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.14.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="d4c0f-101">提供陣列、清單和可列舉值的通用分割策略。</span>
      <span class="sxs-lookup">
        <span data-stu-id="d4c0f-101">Provides common partitioning strategies for arrays, lists, and enumerables.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4c0f-102">如需詳細資訊，請參閱 [PLINQ 和 TPL 的自訂 Partitioner](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md)。</span><span class="sxs-lookup"><span data-stu-id="d4c0f-102">For more information, see [Custom Partitioners for PLINQ and TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md).</span></span>  
  
 ]]></format>
    </remarks>
    <related type="Article" href="http://msdn.microsoft.com/library/c7a66677-cb59-4cbf-969a-d2e8fc61a6ce">
      <span data-ttu-id="d4c0f-103">如何：加速小型迴圈主體</span>
      <span class="sxs-lookup">
        <span data-stu-id="d4c0f-103">How to: Speed Up Small Loop Bodies</span>
      </span>
    </related>
    <related type="Article" href="http://msdn.microsoft.com/library/f4410508-cac6-4ba7-bef1-c5e68b2794f3">
      <span data-ttu-id="d4c0f-104">如何： 實作靜態數目的資料分割的 Partitioner</span>
      <span class="sxs-lookup">
        <span data-stu-id="d4c0f-104">How to: Implement a Partitioner With a Static Number of Partitions</span>
      </span>
    </related>
  </Docs>
  <Members>
    <MemberGroup MemberName="Create">
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d4c0f-105">建立 Partitioner。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c0f-105">Creates a partitioner.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Collections.Concurrent.OrderablePartitioner&lt;Tuple&lt;int,int&gt;&gt; Create (int fromInclusive, int toExclusive);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Concurrent.OrderablePartitioner`1&lt;class System.Tuple`2&lt;int32, int32&gt;&gt; Create(int32 fromInclusive, int32 toExclusive) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.Partitioner.Create(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (fromInclusive As Integer, toExclusive As Integer) As OrderablePartitioner(Of Tuple(Of Integer, Integer))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Concurrent::OrderablePartitioner&lt;Tuple&lt;int, int&gt; ^&gt; ^ Create(int fromInclusive, int toExclusive);" />
      <MemberSignature Language="F#" Value="static member Create : int * int -&gt; System.Collections.Concurrent.OrderablePartitioner&lt;int * int&gt;" Usage="System.Collections.Concurrent.Partitioner.Create (fromInclusive, toExclusive)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Concurrent.OrderablePartitioner&lt;System.Tuple&lt;System.Int32,System.Int32&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fromInclusive" Type="System.Int32" />
        <Parameter Name="toExclusive" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="fromInclusive">
          <span data-ttu-id="d4c0f-106">範圍的下限 (含)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c0f-106">The lower, inclusive bound of the range.</span>
          </span>
        </param>
        <param name="toExclusive">
          <span data-ttu-id="d4c0f-107">範圍的上限 (不含)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c0f-107">The upper, exclusive bound of the range.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d4c0f-108">建立會將使用者指定的範圍分割為區塊的 Partitioner。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c0f-108">Creates a partitioner that chunks the user-specified range.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d4c0f-109">Partitioner。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c0f-109">A partitioner.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4c0f-110">如需詳細資訊和範例，請參閱 < [PLINQ 和 TPL 的自訂 Partitioner](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md)。</span><span class="sxs-lookup"><span data-stu-id="d4c0f-110">For more information and examples, see [Custom Partitioners for PLINQ and TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="d4c0f-111">
            <paramref name="toExclusive" /> 引數小於或等於 <paramref name="fromInclusive" /> 引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c0f-111">The <paramref name="toExclusive" /> argument is less than or equal to the <paramref name="fromInclusive" /> argument.</span>
          </span>
        </exception>
        <related type="Article" href="http://msdn.microsoft.com/library/96153688-9a01-47c4-8430-909cee9a2887">
          <span data-ttu-id="d4c0f-112">PLINQ 和 TPL 的自訂 Partitioner</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c0f-112">Custom Partitioners for PLINQ and TPL</span>
          </span>
        </related>
        <related type="Article" href="http://msdn.microsoft.com/library/c7a66677-cb59-4cbf-969a-d2e8fc61a6ce">
          <span data-ttu-id="d4c0f-113">如何：加速小型迴圈主體</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c0f-113">How to: Speed Up Small Loop Bodies</span>
          </span>
        </related>
        <related type="Article" href="http://msdn.microsoft.com/library/f4410508-cac6-4ba7-bef1-c5e68b2794f3">
          <span data-ttu-id="d4c0f-114">如何： 實作靜態數目的資料分割的 Partitioner</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c0f-114">How to: Implement a Partitioner With a Static Number of Partitions</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Collections.Concurrent.OrderablePartitioner&lt;Tuple&lt;long,long&gt;&gt; Create (long fromInclusive, long toExclusive);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Concurrent.OrderablePartitioner`1&lt;class System.Tuple`2&lt;int64, int64&gt;&gt; Create(int64 fromInclusive, int64 toExclusive) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.Partitioner.Create(System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (fromInclusive As Long, toExclusive As Long) As OrderablePartitioner(Of Tuple(Of Long, Long))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Concurrent::OrderablePartitioner&lt;Tuple&lt;long, long&gt; ^&gt; ^ Create(long fromInclusive, long toExclusive);" />
      <MemberSignature Language="F#" Value="static member Create : int64 * int64 -&gt; System.Collections.Concurrent.OrderablePartitioner&lt;int64 * int64&gt;" Usage="System.Collections.Concurrent.Partitioner.Create (fromInclusive, toExclusive)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Concurrent.OrderablePartitioner&lt;System.Tuple&lt;System.Int64,System.Int64&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fromInclusive" Type="System.Int64" />
        <Parameter Name="toExclusive" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="fromInclusive">
          <span data-ttu-id="d4c0f-115">範圍的下限 (含)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c0f-115">The lower, inclusive bound of the range.</span>
          </span>
        </param>
        <param name="toExclusive">
          <span data-ttu-id="d4c0f-116">範圍的上限 (不含)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c0f-116">The upper, exclusive bound of the range.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d4c0f-117">建立會將使用者指定的範圍分割為區塊的 Partitioner。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c0f-117">Creates a partitioner that chunks the user-specified range.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d4c0f-118">Partitioner。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c0f-118">A partitioner.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4c0f-119">如需詳細資訊和範例，請參閱 < [PLINQ 和 TPL 的自訂 Partitioner](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md)。</span><span class="sxs-lookup"><span data-stu-id="d4c0f-119">For more information and examples, see [Custom Partitioners for PLINQ and TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="d4c0f-120">
            <paramref name="toExclusive" /> 引數小於或等於 <paramref name="fromInclusive" /> 引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c0f-120">The <paramref name="toExclusive" /> argument is less than or equal to the <paramref name="fromInclusive" /> argument.</span>
          </span>
        </exception>
        <related type="Article" href="http://msdn.microsoft.com/library/96153688-9a01-47c4-8430-909cee9a2887">
          <span data-ttu-id="d4c0f-121">PLINQ 和 TPL 的自訂 Partitioner</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c0f-121">Custom Partitioners for PLINQ and TPL</span>
          </span>
        </related>
        <related type="Article" href="http://msdn.microsoft.com/library/c7a66677-cb59-4cbf-969a-d2e8fc61a6ce">
          <span data-ttu-id="d4c0f-122">如何：加速小型迴圈主體</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c0f-122">How to: Speed Up Small Loop Bodies</span>
          </span>
        </related>
        <related type="Article" href="http://msdn.microsoft.com/library/f4410508-cac6-4ba7-bef1-c5e68b2794f3">
          <span data-ttu-id="d4c0f-123">如何： 實作靜態數目的資料分割的 Partitioner</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c0f-123">How to: Implement a Partitioner With a Static Number of Partitions</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Collections.Concurrent.OrderablePartitioner&lt;Tuple&lt;int,int&gt;&gt; Create (int fromInclusive, int toExclusive, int rangeSize);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Concurrent.OrderablePartitioner`1&lt;class System.Tuple`2&lt;int32, int32&gt;&gt; Create(int32 fromInclusive, int32 toExclusive, int32 rangeSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.Partitioner.Create(System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (fromInclusive As Integer, toExclusive As Integer, rangeSize As Integer) As OrderablePartitioner(Of Tuple(Of Integer, Integer))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Concurrent::OrderablePartitioner&lt;Tuple&lt;int, int&gt; ^&gt; ^ Create(int fromInclusive, int toExclusive, int rangeSize);" />
      <MemberSignature Language="F#" Value="static member Create : int * int * int -&gt; System.Collections.Concurrent.OrderablePartitioner&lt;int * int&gt;" Usage="System.Collections.Concurrent.Partitioner.Create (fromInclusive, toExclusive, rangeSize)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Concurrent.OrderablePartitioner&lt;System.Tuple&lt;System.Int32,System.Int32&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fromInclusive" Type="System.Int32" />
        <Parameter Name="toExclusive" Type="System.Int32" />
        <Parameter Name="rangeSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="fromInclusive">
          <span data-ttu-id="d4c0f-124">範圍的下限 (含)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c0f-124">The lower, inclusive bound of the range.</span>
          </span>
        </param>
        <param name="toExclusive">
          <span data-ttu-id="d4c0f-125">範圍的上限 (不含)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c0f-125">The upper, exclusive bound of the range.</span>
          </span>
        </param>
        <param name="rangeSize">
          <span data-ttu-id="d4c0f-126">每一個子範圍的大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c0f-126">The size of each subrange.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d4c0f-127">建立會將使用者指定的範圍分割為區塊的 Partitioner。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c0f-127">Creates a partitioner that chunks the user-specified range.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d4c0f-128">Partitioner。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c0f-128">A partitioner.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4c0f-129">如需詳細資訊和範例，請參閱 < [PLINQ 和 TPL 的自訂 Partitioner](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md)。</span><span class="sxs-lookup"><span data-stu-id="d4c0f-129">For more information and examples, see [Custom Partitioners for PLINQ and TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="d4c0f-130">
            <paramref name="toExclusive" /> 引數小於或等於 <paramref name="fromInclusive" /> 引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c0f-130">The <paramref name="toExclusive" /> argument is less than or equal to the <paramref name="fromInclusive" /> argument.</span>
          </span>
          <span data-ttu-id="d4c0f-131">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c0f-131">-or-</span>
          </span>
          <span data-ttu-id="d4c0f-132">
            <paramref name="rangeSize" /> 引數小於或等於 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c0f-132">The <paramref name="rangeSize" /> argument is less than or equal to 0.</span>
          </span>
        </exception>
        <related type="Article" href="http://msdn.microsoft.com/library/96153688-9a01-47c4-8430-909cee9a2887">
          <span data-ttu-id="d4c0f-133">PLINQ 和 TPL 的自訂 Partitioner</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c0f-133">Custom Partitioners for PLINQ and TPL</span>
          </span>
        </related>
        <related type="Article" href="http://msdn.microsoft.com/library/c7a66677-cb59-4cbf-969a-d2e8fc61a6ce">
          <span data-ttu-id="d4c0f-134">如何：加速小型迴圈主體</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c0f-134">How to: Speed Up Small Loop Bodies</span>
          </span>
        </related>
        <related type="Article" href="http://msdn.microsoft.com/library/f4410508-cac6-4ba7-bef1-c5e68b2794f3">
          <span data-ttu-id="d4c0f-135">如何： 實作靜態數目的資料分割的 Partitioner</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c0f-135">How to: Implement a Partitioner With a Static Number of Partitions</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Collections.Concurrent.OrderablePartitioner&lt;Tuple&lt;long,long&gt;&gt; Create (long fromInclusive, long toExclusive, long rangeSize);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Concurrent.OrderablePartitioner`1&lt;class System.Tuple`2&lt;int64, int64&gt;&gt; Create(int64 fromInclusive, int64 toExclusive, int64 rangeSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.Partitioner.Create(System.Int64,System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (fromInclusive As Long, toExclusive As Long, rangeSize As Long) As OrderablePartitioner(Of Tuple(Of Long, Long))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Concurrent::OrderablePartitioner&lt;Tuple&lt;long, long&gt; ^&gt; ^ Create(long fromInclusive, long toExclusive, long rangeSize);" />
      <MemberSignature Language="F#" Value="static member Create : int64 * int64 * int64 -&gt; System.Collections.Concurrent.OrderablePartitioner&lt;int64 * int64&gt;" Usage="System.Collections.Concurrent.Partitioner.Create (fromInclusive, toExclusive, rangeSize)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Concurrent.OrderablePartitioner&lt;System.Tuple&lt;System.Int64,System.Int64&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fromInclusive" Type="System.Int64" />
        <Parameter Name="toExclusive" Type="System.Int64" />
        <Parameter Name="rangeSize" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="fromInclusive">
          <span data-ttu-id="d4c0f-136">範圍的下限 (含)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c0f-136">The lower, inclusive bound of the range.</span>
          </span>
        </param>
        <param name="toExclusive">
          <span data-ttu-id="d4c0f-137">範圍的上限 (不含)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c0f-137">The upper, exclusive bound of the range.</span>
          </span>
        </param>
        <param name="rangeSize">
          <span data-ttu-id="d4c0f-138">每一個子範圍的大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c0f-138">The size of each subrange.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d4c0f-139">建立會將使用者指定的範圍分割為區塊的 Partitioner。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c0f-139">Creates a partitioner that chunks the user-specified range.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d4c0f-140">Partitioner。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c0f-140">A partitioner.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4c0f-141">如需詳細資訊和範例，請參閱 < [PLINQ 和 TPL 的自訂 Partitioner](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md)。</span><span class="sxs-lookup"><span data-stu-id="d4c0f-141">For more information and examples, see [Custom Partitioners for PLINQ and TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="d4c0f-142">
            <paramref name="toExclusive" /> 引數小於或等於 <paramref name="fromInclusive" /> 引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c0f-142">The <paramref name="toExclusive" /> argument is less than or equal to the <paramref name="fromInclusive" /> argument.</span>
          </span>
          <span data-ttu-id="d4c0f-143">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c0f-143">-or-</span>
          </span>
          <span data-ttu-id="d4c0f-144">
            <paramref name="rangeSize" /> 引數小於或等於 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c0f-144">The <paramref name="rangeSize" /> argument is less than or equal to 0.</span>
          </span>
        </exception>
        <related type="Article" href="http://msdn.microsoft.com/library/96153688-9a01-47c4-8430-909cee9a2887">
          <span data-ttu-id="d4c0f-145">PLINQ 和 TPL 的自訂 Partitioner</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c0f-145">Custom Partitioners for PLINQ and TPL</span>
          </span>
        </related>
        <related type="Article" href="http://msdn.microsoft.com/library/c7a66677-cb59-4cbf-969a-d2e8fc61a6ce">
          <span data-ttu-id="d4c0f-146">如何：加速小型迴圈主體</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c0f-146">How to: Speed Up Small Loop Bodies</span>
          </span>
        </related>
        <related type="Article" href="http://msdn.microsoft.com/library/f4410508-cac6-4ba7-bef1-c5e68b2794f3">
          <span data-ttu-id="d4c0f-147">如何： 實作靜態數目的資料分割的 Partitioner</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c0f-147">How to: Implement a Partitioner With a Static Number of Partitions</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Concurrent.OrderablePartitioner&lt;TSource&gt; Create&lt;TSource&gt; (System.Collections.Generic.IEnumerable&lt;TSource&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Concurrent.OrderablePartitioner`1&lt;!!TSource&gt; Create&lt;TSource&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.Partitioner.Create``1(System.Collections.Generic.IEnumerable{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create(Of TSource) (source As IEnumerable(Of TSource)) As OrderablePartitioner(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA; static System::Collections::Concurrent::OrderablePartitioner&lt;TSource&gt; ^ Create(System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Create : seq&lt;'Source&gt; -&gt; System.Collections.Concurrent.OrderablePartitioner&lt;'Source&gt;" Usage="System.Collections.Concurrent.Partitioner.Create source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Concurrent.OrderablePartitioner&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="d4c0f-148">來源可列舉值中元素的型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c0f-148">Type of the elements in source enumerable.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="d4c0f-149">要分割的可列舉值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c0f-149">The enumerable to be partitioned.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d4c0f-150">從 <see cref="T:System.Collections.Generic.IEnumerable`1" /> 執行個體建立可排序的 Partitioner。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c0f-150">Creates an orderable partitioner from a <see cref="T:System.Collections.Generic.IEnumerable`1" /> instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d4c0f-151">以輸入陣列為基礎的可排序 Partitioner。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c0f-151">An orderable partitioner based on the input array.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4c0f-152">用於建立的 partitioner 中的順序取決於項目的自然的順序從來源可列舉值擷取。</span><span class="sxs-lookup"><span data-stu-id="d4c0f-152">The ordering used in the created partitioner is determined by the natural order of the elements as retrieved from the source enumerable.</span></span> <span data-ttu-id="d4c0f-153">如需詳細資訊和範例，請參閱 < [PLINQ 和 TPL 的自訂 Partitioner](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md)。</span><span class="sxs-lookup"><span data-stu-id="d4c0f-153">For more information and examples, see [Custom Partitioners for PLINQ and TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md).</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/96153688-9a01-47c4-8430-909cee9a2887">
          <span data-ttu-id="d4c0f-154">PLINQ 和 TPL 的自訂 Partitioner</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c0f-154">Custom Partitioners for PLINQ and TPL</span>
          </span>
        </related>
        <related type="Article" href="http://msdn.microsoft.com/library/c7a66677-cb59-4cbf-969a-d2e8fc61a6ce">
          <span data-ttu-id="d4c0f-155">如何：加速小型迴圈主體</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c0f-155">How to: Speed Up Small Loop Bodies</span>
          </span>
        </related>
        <related type="Article" href="http://msdn.microsoft.com/library/c875ad12-a161-43e6-ad1c-3d6927c536a7">
          <span data-ttu-id="d4c0f-156">如何：實作動態磁碟分割</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c0f-156">How to: Implement Dynamic Partitions</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Concurrent.OrderablePartitioner&lt;TSource&gt; Create&lt;TSource&gt; (System.Collections.Generic.IEnumerable&lt;TSource&gt; source, System.Collections.Concurrent.EnumerablePartitionerOptions partitionerOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Concurrent.OrderablePartitioner`1&lt;!!TSource&gt; Create&lt;TSource&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; source, valuetype System.Collections.Concurrent.EnumerablePartitionerOptions partitionerOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.Partitioner.Create``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Concurrent.EnumerablePartitionerOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create(Of TSource) (source As IEnumerable(Of TSource), partitionerOptions As EnumerablePartitionerOptions) As OrderablePartitioner(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA; static System::Collections::Concurrent::OrderablePartitioner&lt;TSource&gt; ^ Create(System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ source, System::Collections::Concurrent::EnumerablePartitionerOptions partitionerOptions);" />
      <MemberSignature Language="F#" Value="static member Create : seq&lt;'Source&gt; * System.Collections.Concurrent.EnumerablePartitionerOptions -&gt; System.Collections.Concurrent.OrderablePartitioner&lt;'Source&gt;" Usage="System.Collections.Concurrent.Partitioner.Create (source, partitionerOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Concurrent.OrderablePartitioner&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" />
        <Parameter Name="partitionerOptions" Type="System.Collections.Concurrent.EnumerablePartitionerOptions" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="d4c0f-157">來源可列舉值中元素的型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c0f-157">Type of the elements in source enumerable.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="d4c0f-158">要分割的可列舉值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c0f-158">The enumerable to be partitioned.</span>
          </span>
        </param>
        <param name="partitionerOptions">
          <span data-ttu-id="d4c0f-159">選項，控制 partitioner 的緩衝行為。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c0f-159">Options to control the buffering behavior of the partitioner.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d4c0f-160">從 <see cref="T:System.Collections.Generic.IEnumerable`1" /> 執行個體建立可排序的 Partitioner。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c0f-160">Creates an orderable partitioner from a <see cref="T:System.Collections.Generic.IEnumerable`1" /> instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d4c0f-161">以輸入陣列為基礎的可排序 Partitioner。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c0f-161">An orderable partitioner based on the input array.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4c0f-162">用於建立的 partitioner 中的順序取決於項目的自然的順序從來源可列舉值擷取。</span><span class="sxs-lookup"><span data-stu-id="d4c0f-162">The ordering used in the created partitioner is determined by the natural order of the elements as retrieved from the source enumerable.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="d4c0f-163">
            <paramref name="partitionerOptions" /> 引數指定的 <see cref="T:System.Collections.Concurrent.EnumerablePartitionerOptions" /> 值不正確。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c0f-163">The <paramref name="partitionerOptions" /> argument specifies an invalid value for <see cref="T:System.Collections.Concurrent.EnumerablePartitionerOptions" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Concurrent.OrderablePartitioner&lt;TSource&gt; Create&lt;TSource&gt; (System.Collections.Generic.IList&lt;TSource&gt; list, bool loadBalance);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Concurrent.OrderablePartitioner`1&lt;!!TSource&gt; Create&lt;TSource&gt;(class System.Collections.Generic.IList`1&lt;!!TSource&gt; list, bool loadBalance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.Partitioner.Create``1(System.Collections.Generic.IList{``0},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create(Of TSource) (list As IList(Of TSource), loadBalance As Boolean) As OrderablePartitioner(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA; static System::Collections::Concurrent::OrderablePartitioner&lt;TSource&gt; ^ Create(System::Collections::Generic::IList&lt;TSource&gt; ^ list, bool loadBalance);" />
      <MemberSignature Language="F#" Value="static member Create : System.Collections.Generic.IList&lt;'Source&gt; * bool -&gt; System.Collections.Concurrent.OrderablePartitioner&lt;'Source&gt;" Usage="System.Collections.Concurrent.Partitioner.Create (list, loadBalance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Concurrent.OrderablePartitioner&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.Generic.IList&lt;TSource&gt;" />
        <Parameter Name="loadBalance" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="d4c0f-164">來源清單中元素的型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c0f-164">Type of the elements in source list.</span>
          </span>
        </typeparam>
        <param name="list">
          <span data-ttu-id="d4c0f-165">要分割的清單。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c0f-165">The list to be partitioned.</span>
          </span>
        </param>
        <param name="loadBalance">
          <span data-ttu-id="d4c0f-166">布林值，指出建立的 Partitioner 是否應該在分割之間動態負載平衡，而非靜態分割。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c0f-166">A Boolean value that indicates whether the created partitioner should dynamically load balance between partitions rather than statically partition.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d4c0f-167">從 <see cref="T:System.Collections.Generic.IList`1" /> 執行個體建立可排序的 Partitioner。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c0f-167">Creates an orderable partitioner from an <see cref="T:System.Collections.Generic.IList`1" /> instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d4c0f-168">以輸入清單為基礎的可排序 Partitioner。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c0f-168">An orderable partitioner based on the input list.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4c0f-169">如需詳細資訊和範例，請參閱 < [PLINQ 和 TPL 的自訂 Partitioner](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md)。</span><span class="sxs-lookup"><span data-stu-id="d4c0f-169">For more information and examples, see [Custom Partitioners for PLINQ and TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md).</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/96153688-9a01-47c4-8430-909cee9a2887">
          <span data-ttu-id="d4c0f-170">PLINQ 和 TPL 的自訂 Partitioner</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c0f-170">Custom Partitioners for PLINQ and TPL</span>
          </span>
        </related>
        <related type="Article" href="http://msdn.microsoft.com/library/c7a66677-cb59-4cbf-969a-d2e8fc61a6ce">
          <span data-ttu-id="d4c0f-171">如何：加速小型迴圈主體</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c0f-171">How to: Speed Up Small Loop Bodies</span>
          </span>
        </related>
        <related type="Article" href="http://msdn.microsoft.com/library/c875ad12-a161-43e6-ad1c-3d6927c536a7">
          <span data-ttu-id="d4c0f-172">如何：實作動態磁碟分割</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c0f-172">How to: Implement Dynamic Partitions</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Concurrent.OrderablePartitioner&lt;TSource&gt; Create&lt;TSource&gt; (TSource[] array, bool loadBalance);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Concurrent.OrderablePartitioner`1&lt;!!TSource&gt; Create&lt;TSource&gt;(!!TSource[] array, bool loadBalance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.Partitioner.Create``1(``0[],System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create(Of TSource) (array As TSource(), loadBalance As Boolean) As OrderablePartitioner(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA; static System::Collections::Concurrent::OrderablePartitioner&lt;TSource&gt; ^ Create(cli::array &lt;TSource&gt; ^ array, bool loadBalance);" />
      <MemberSignature Language="F#" Value="static member Create : 'Source[] * bool -&gt; System.Collections.Concurrent.OrderablePartitioner&lt;'Source&gt;" Usage="System.Collections.Concurrent.Partitioner.Create (array, loadBalance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Concurrent.OrderablePartitioner&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="TSource[]" />
        <Parameter Name="loadBalance" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="d4c0f-173">來源陣列中元素的型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c0f-173">Type of the elements in source array.</span>
          </span>
        </typeparam>
        <param name="array">
          <span data-ttu-id="d4c0f-174">要分割的陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c0f-174">The array to be partitioned.</span>
          </span>
        </param>
        <param name="loadBalance">
          <span data-ttu-id="d4c0f-175">布林值，指出建立的 Partitioner 是否應該在分割之間動態負載平衡，而非靜態分割。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c0f-175">A Boolean value that indicates whether the created partitioner should dynamically load balance between partitions rather than statically partition.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d4c0f-176">從 <see cref="T:System.Array" /> 執行個體建立可排序的 Partitioner。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c0f-176">Creates an orderable partitioner from a <see cref="T:System.Array" /> instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d4c0f-177">以輸入陣列為基礎的可排序 Partitioner。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c0f-177">An orderable partitioner based on the input array.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d4c0f-178">如需詳細資訊和範例，請參閱 < [PLINQ 和 TPL 的自訂 Partitioner](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md)。</span><span class="sxs-lookup"><span data-stu-id="d4c0f-178">For more information and examples, see [Custom Partitioners for PLINQ and TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md).</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/96153688-9a01-47c4-8430-909cee9a2887">
          <span data-ttu-id="d4c0f-179">PLINQ 和 TPL 的自訂 Partitioner</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c0f-179">Custom Partitioners for PLINQ and TPL</span>
          </span>
        </related>
        <related type="Article" href="http://msdn.microsoft.com/library/c7a66677-cb59-4cbf-969a-d2e8fc61a6ce">
          <span data-ttu-id="d4c0f-180">如何：加速小型迴圈主體</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c0f-180">How to: Speed Up Small Loop Bodies</span>
          </span>
        </related>
        <related type="Article" href="http://msdn.microsoft.com/library/c875ad12-a161-43e6-ad1c-3d6927c536a7">
          <span data-ttu-id="d4c0f-181">如何：實作動態磁碟分割</span>
          <span class="sxs-lookup">
            <span data-stu-id="d4c0f-181">How to: Implement Dynamic Partitions</span>
          </span>
        </related>
      </Docs>
    </Member>
  </Members>
</Type>