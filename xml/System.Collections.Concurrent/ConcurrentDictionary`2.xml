<Type Name="ConcurrentDictionary&lt;TKey,TValue&gt;" FullName="System.Collections.Concurrent.ConcurrentDictionary&lt;TKey,TValue&gt;">
  <TypeSignature Language="C#" Value="public class ConcurrentDictionary&lt;TKey,TValue&gt; : System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;, System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;, System.Collections.Generic.IReadOnlyCollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;, System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;, System.Collections.IDictionary" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit ConcurrentDictionary`2&lt;TKey, TValue&gt; extends System.Object implements class System.Collections.Generic.ICollection`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt;&gt;, class System.Collections.Generic.IDictionary`2&lt;!TKey, !TValue&gt;, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt;&gt;, class System.Collections.Generic.IReadOnlyCollection`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt;&gt;, class System.Collections.Generic.IReadOnlyDictionary`2&lt;!TKey, !TValue&gt;, class System.Collections.ICollection, class System.Collections.IDictionary, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Concurrent.ConcurrentDictionary`2" />
  <TypeSignature Language="VB.NET" Value="Public Class ConcurrentDictionary(Of TKey, TValue)&#xA;Implements ICollection(Of KeyValuePair(Of TKey, TValue)), IDictionary, IDictionary(Of TKey, TValue), IEnumerable(Of KeyValuePair(Of TKey, TValue)), IReadOnlyCollection(Of KeyValuePair(Of TKey, TValue)), IReadOnlyDictionary(Of TKey, TValue)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TKey, typename TValue&gt;&#xA;public ref class ConcurrentDictionary : System::Collections::Generic::ICollection&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt;, System::Collections::Generic::IDictionary&lt;TKey, TValue&gt;, System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt;, System::Collections::Generic::IReadOnlyCollection&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt;, System::Collections::Generic::IReadOnlyDictionary&lt;TKey, TValue&gt;, System::Collections::IDictionary" />
  <AssemblyInfo>
    <AssemblyName>System.Collections.Concurrent</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.14.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TKey" />
    <TypeParameter Name="TValue" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IReadOnlyCollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IDictionary</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("Count = {Count}")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerTypeProxy(typeof(System.Collections.Generic.Mscorlib_DictionaryDebugView`2))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="TKey"><span data-ttu-id="ec702-101">字典中的索引鍵類型。</span><span class="sxs-lookup"><span data-stu-id="ec702-101">The type of the keys in the dictionary.</span></span></typeparam>
    <typeparam name="TValue"><span data-ttu-id="ec702-102">字典中的值類型。</span><span class="sxs-lookup"><span data-stu-id="ec702-102">The type of the values in the dictionary.</span></span></typeparam>
    <summary><span data-ttu-id="ec702-103">代表索引鍵/值組的安全執行緒集合，此集合可由多個執行緒並行存取。</span><span class="sxs-lookup"><span data-stu-id="ec702-103">Represents a thread-safe collection of key/value pairs that can be accessed by multiple threads concurrently.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec702-104">針對大型<xref:System.Collections.Concurrent.ConcurrentDictionary%602>物件，您也可以將組態項目設定為 64 位元系統上增加到 2 gb (GB) 的最大陣列大小`true`在執行階段環境中。</span><span class="sxs-lookup"><span data-stu-id="ec702-104">For very large <xref:System.Collections.Concurrent.ConcurrentDictionary%602> objects, you can increase the maximum array size to 2 gigabytes (GB) on a 64-bit system by setting the  configuration element to `true` in the run-time environment.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ec702-105"><xref:System.Collections.Concurrent.ConcurrentDictionary%602> 實作<xref:System.Collections.Generic.IReadOnlyCollection%601>和<xref:System.Collections.Generic.IReadOnlyDictionary%602>開頭的介面[!INCLUDE[net_v46](~/includes/net-v46-md.md)]; 在舊版的.NET Framework 中，<xref:System.Collections.Concurrent.ConcurrentDictionary%602>類別並未實作這些介面。</span><span class="sxs-lookup"><span data-stu-id="ec702-105"><xref:System.Collections.Concurrent.ConcurrentDictionary%602> implements the <xref:System.Collections.Generic.IReadOnlyCollection%601> and <xref:System.Collections.Generic.IReadOnlyDictionary%602> interfaces starting with the [!INCLUDE[net_v46](~/includes/net-v46-md.md)]; in previous versions of the .NET Framework, the <xref:System.Collections.Concurrent.ConcurrentDictionary%602> class did not implement these interfaces.</span></span>  
  
 <span data-ttu-id="ec702-106">像<xref:System.Collections.Generic.Dictionary%602?displayProperty=nameWithType>類別<xref:System.Collections.Concurrent.ConcurrentDictionary%602>實作<xref:System.Collections.Generic.IDictionary%602>介面。</span><span class="sxs-lookup"><span data-stu-id="ec702-106">Like the <xref:System.Collections.Generic.Dictionary%602?displayProperty=nameWithType> class, <xref:System.Collections.Concurrent.ConcurrentDictionary%602> implements the <xref:System.Collections.Generic.IDictionary%602> interface.</span></span> <span data-ttu-id="ec702-107">此外，<xref:System.Collections.Concurrent.ConcurrentDictionary%602>適用於新增或更新索引鍵/值組在字典中，提供數種方法下, 表中所述。</span><span class="sxs-lookup"><span data-stu-id="ec702-107">In addition, <xref:System.Collections.Concurrent.ConcurrentDictionary%602> provides several methods for adding or updating key/value pairs in the dictionary, as described in the following table.</span></span>  
  
|<span data-ttu-id="ec702-108">若要執行此工作</span><span class="sxs-lookup"><span data-stu-id="ec702-108">To do this</span></span>|<span data-ttu-id="ec702-109">使用這個方法</span><span class="sxs-lookup"><span data-stu-id="ec702-109">Use this method</span></span>|<span data-ttu-id="ec702-110">使用注意事項</span><span class="sxs-lookup"><span data-stu-id="ec702-110">Usage notes</span></span>|  
|----------------|---------------------|-----------------|  
|<span data-ttu-id="ec702-111">如果不存在字典中，新的金鑰新增至字典，</span><span class="sxs-lookup"><span data-stu-id="ec702-111">Add a new key to the dictionary, if it doesn’t already exist in the dictionary</span></span>|<xref:System.Collections.Concurrent.ConcurrentDictionary%602.TryAdd%2A>|<span data-ttu-id="ec702-112">如果索引鍵目前不在字典中存在，此方法會將指定的索引鍵/值組。</span><span class="sxs-lookup"><span data-stu-id="ec702-112">This method adds the specified key/value pair, if the key doesn’t currently exist in the dictionary.</span></span> <span data-ttu-id="ec702-113">方法會傳回`true`或`false`根據是否已加入新的組。</span><span class="sxs-lookup"><span data-stu-id="ec702-113">The method returns `true` or `false` depending on whether the new pair was added.</span></span>|  
|<span data-ttu-id="ec702-114">更新在字典中，現有的索引鍵的值，如果該索引鍵的特定值</span><span class="sxs-lookup"><span data-stu-id="ec702-114">Update the value for an existing key in the dictionary, if that key has a specific value</span></span>|<xref:System.Collections.Concurrent.ConcurrentDictionary%602.TryUpdate%2A>|<span data-ttu-id="ec702-115">這個方法會檢查是否機碼具有指定的值，而且如果它，會以新值更新索引鍵。</span><span class="sxs-lookup"><span data-stu-id="ec702-115">This method checks whether the key has a specified value, and if it does, updates the key with a new value.</span></span> <span data-ttu-id="ec702-116">類似於<xref:System.Threading.Interlocked.CompareExchange%2A>方法，但是它的字典項目的使用。</span><span class="sxs-lookup"><span data-stu-id="ec702-116">It's similar to the <xref:System.Threading.Interlocked.CompareExchange%2A> method, except that it's used for dictionary elements.</span></span>|  
|<span data-ttu-id="ec702-117">無條件，儲存在字典中的索引鍵/值組，並覆寫已存在的索引鍵的值</span><span class="sxs-lookup"><span data-stu-id="ec702-117">Store a key/value pair in the dictionary unconditionally, and overwrite the value of a key that already exists</span></span>|<span data-ttu-id="ec702-118">索引子的 setter: `dictionary[key] = newValue`</span><span class="sxs-lookup"><span data-stu-id="ec702-118">The indexer’s setter: `dictionary[key] = newValue`</span></span>||  
|<span data-ttu-id="ec702-119">將索引鍵/值組加入至字典，或如果金鑰已存在，更新索引鍵的現有值為基礎的索引鍵的值</span><span class="sxs-lookup"><span data-stu-id="ec702-119">Add a key/value pair to the dictionary, or if the key already exists, update the value for the key based on the key’s existing value</span></span>|<xref:System.Collections.Concurrent.ConcurrentDictionary%602.AddOrUpdate%28%600%2CSystem.Func%7B%600%2C%601%7D%2CSystem.Func%7B%600%2C%601%2C%601%7D%29><br /><br /> <span data-ttu-id="ec702-120">-或-</span><span class="sxs-lookup"><span data-stu-id="ec702-120">—or—</span></span><br /><br /> <xref:System.Collections.Concurrent.ConcurrentDictionary%602.AddOrUpdate%28%600%2C%601%2CSystem.Func%7B%600%2C%601%2C%601%7D%29>|<span data-ttu-id="ec702-121"><xref:System.Collections.Concurrent.ConcurrentDictionary%602.AddOrUpdate%28%600%2CSystem.Func%7B%600%2C%601%7D%2CSystem.Func%7B%600%2C%601%2C%601%7D%29> 可接受的索引鍵和兩個委派。</span><span class="sxs-lookup"><span data-stu-id="ec702-121"><xref:System.Collections.Concurrent.ConcurrentDictionary%602.AddOrUpdate%28%600%2CSystem.Func%7B%600%2C%601%7D%2CSystem.Func%7B%600%2C%601%2C%601%7D%29> accepts the key and two delegates.</span></span> <span data-ttu-id="ec702-122">它會使用第一個委派，如果索引鍵不存在於字典中。它接受鍵，並傳回應該加入索引鍵的值。</span><span class="sxs-lookup"><span data-stu-id="ec702-122">It uses the first delegate if the key doesn’t exist in the dictionary; it accepts the key and returns the value that should be added for the key.</span></span> <span data-ttu-id="ec702-123">它會使用第二個委派，如果索引鍵不存在。它可接受的索引鍵和其目前值，並傳回新的值，應該設定索引鍵。</span><span class="sxs-lookup"><span data-stu-id="ec702-123">It uses the second delegate if the key does exist; it accepts the key and its current value, and it returns the new value that should be set for the key.</span></span><br /><br /> <span data-ttu-id="ec702-124"><xref:System.Collections.Concurrent.ConcurrentDictionary%602.AddOrUpdate%28%600%2C%601%2CSystem.Func%7B%600%2C%601%2C%601%7D%29> 可接受的索引鍵，若要加入，值和更新委派。</span><span class="sxs-lookup"><span data-stu-id="ec702-124"><xref:System.Collections.Concurrent.ConcurrentDictionary%602.AddOrUpdate%28%600%2C%601%2CSystem.Func%7B%600%2C%601%2C%601%7D%29> accepts the key, a value to add, and the update delegate.</span></span> <span data-ttu-id="ec702-125">這等同於先前的多載中，不同之處在於它不會使用委派新增機碼。</span><span class="sxs-lookup"><span data-stu-id="ec702-125">This is the same as the previous overload, except that it doesn't use a delegate to add a key.</span></span>|  
|<span data-ttu-id="ec702-126">取得在字典中，將值加入至字典，並將其傳回，如果索引鍵不存在的索引鍵的值</span><span class="sxs-lookup"><span data-stu-id="ec702-126">Get the value for a key in the dictionary, adding the value to the dictionary and returning it if the key doesn’t exist</span></span>|<xref:System.Collections.Concurrent.ConcurrentDictionary%602.GetOrAdd%28%600%2C%601%29><br /><br /> <span data-ttu-id="ec702-127">-或-</span><span class="sxs-lookup"><span data-stu-id="ec702-127">—or—</span></span><br /><br /> <xref:System.Collections.Concurrent.ConcurrentDictionary%602.GetOrAdd%28%600%2CSystem.Func%7B%600%2C%601%7D%29>|<span data-ttu-id="ec702-128">這些多載提供延遲初始設定的值才會在沒有加入字典中索引鍵/值組。</span><span class="sxs-lookup"><span data-stu-id="ec702-128">These overloads provide lazy initialization for a key/value pair in the dictionary, adding the value only if it’s not there.</span></span><br /><br /> <span data-ttu-id="ec702-129"><xref:System.Collections.Concurrent.ConcurrentDictionary%602.GetOrAdd%28%600%2C%601%29> 取得要加入如果索引鍵不存在的值。</span><span class="sxs-lookup"><span data-stu-id="ec702-129"><xref:System.Collections.Concurrent.ConcurrentDictionary%602.GetOrAdd%28%600%2C%601%29> takes the value to be added if the key doesn’t exist.</span></span><br /><br /> <span data-ttu-id="ec702-130"><xref:System.Collections.Concurrent.ConcurrentDictionary%602.GetOrAdd%28%600%2CSystem.Func%7B%600%2C%601%7D%29> 會將產生的值，如果索引鍵不存在的委派。</span><span class="sxs-lookup"><span data-stu-id="ec702-130"><xref:System.Collections.Concurrent.ConcurrentDictionary%602.GetOrAdd%28%600%2CSystem.Func%7B%600%2C%601%7D%29> takes a delegate that will generate the value if the key doesn’t exist.</span></span>|  
  
 <span data-ttu-id="ec702-131">所有這些作業是不可部分完成，並是安全執行緒，大致上的所有其他作業相同<xref:System.Collections.Concurrent.ConcurrentDictionary%602>類別。</span><span class="sxs-lookup"><span data-stu-id="ec702-131">All these operations are atomic and are thread-safe with regards to all other operations on the <xref:System.Collections.Concurrent.ConcurrentDictionary%602> class.</span></span> <span data-ttu-id="ec702-132">唯一的例外是方法接受委派，也就是<xref:System.Collections.Concurrent.ConcurrentDictionary%602.AddOrUpdate%2A>和<xref:System.Collections.Concurrent.ConcurrentDictionary%602.GetOrAdd%2A>。</span><span class="sxs-lookup"><span data-stu-id="ec702-132">The only exceptions are the methods that accept a delegate, that is, <xref:System.Collections.Concurrent.ConcurrentDictionary%602.AddOrUpdate%2A> and <xref:System.Collections.Concurrent.ConcurrentDictionary%602.GetOrAdd%2A>.</span></span> <span data-ttu-id="ec702-133">修改，以及寫入作業至字典，<xref:System.Collections.Concurrent.ConcurrentDictionary%602>會使用更細緻鎖定 」，以確保執行緒安全。</span><span class="sxs-lookup"><span data-stu-id="ec702-133">For modifications and write operations to the dictionary, <xref:System.Collections.Concurrent.ConcurrentDictionary%602> uses fine-grained locking to ensure thread safety.</span></span> <span data-ttu-id="ec702-134">（字典上的讀取作業會執行無鎖定的方式）。不過，若要避免發生的問題，可以從執行未知的程式碼，在鎖定下鎖定外部呼叫這些方法的委派。</span><span class="sxs-lookup"><span data-stu-id="ec702-134">(Read operations on the dictionary are performed in a lock-free manner.) However, delegates for these methods are called outside the locks to avoid the problems that can arise from executing unknown code under a lock.</span></span> <span data-ttu-id="ec702-135">因此，這些委派所執行的程式碼不需不可部分完成的作業。</span><span class="sxs-lookup"><span data-stu-id="ec702-135">Therefore, the code executed by these delegates is not subject to the atomicity of the operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ec702-136">下列範例示範如何建構<xref:System.Collections.Concurrent.ConcurrentDictionary%602>物件。</span><span class="sxs-lookup"><span data-stu-id="ec702-136">The following example shows how to construct a <xref:System.Collections.Concurrent.ConcurrentDictionary%602> object.</span></span>  
  
 [!code-csharp[System.Collections.Concurrent.ConcurrentDictionary#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.concurrent.concurrentdictionary/cs/concdictionary.cs#1)]
 [!code-vb[System.Collections.Concurrent.ConcurrentDictionary#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.concurrent.concurrentdictionary/vb/concdictionary.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="ec702-137">所有的 public 和 protected 成員的<see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />是安全執行緒，且可能會從多個執行緒同時使用。</span><span class="sxs-lookup"><span data-stu-id="ec702-137">All public and protected members of <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> are thread-safe and may be used concurrently from multiple threads.</span></span> <span data-ttu-id="ec702-138">不過，透過其中一個介面存取成員<see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />實作，包含擴充方法不保證是安全執行緒，而且可能需要由呼叫端同步。</span><span class="sxs-lookup"><span data-stu-id="ec702-138">However, members accessed through one of the interfaces the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> implements, including extension methods, are not guaranteed to be thread safe and may need to be synchronized by the caller.</span></span></threadsafe>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ec702-139">初始化 <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="ec702-139">Initializes a new instance of the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConcurrentDictionary ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ConcurrentDictionary();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ec702-140">初始化 <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> 類別的新執行個體，這個執行個體是空的、具有預設並行層級、具有預設初始容量，並且使用索引鍵類型的預設比較子。</span><span class="sxs-lookup"><span data-stu-id="ec702-140">Initializes a new instance of the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> class that is empty, has the default concurrency level, has the default initial capacity, and uses the default comparer for the key type.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec702-141">預設並行層級是預設並行乘數 (DEFAULT_CONCURRENCY_MULTIPLIER) 的 Cpu 數目。</span><span class="sxs-lookup"><span data-stu-id="ec702-141">The default concurrency level is the default concurrency multiplier (DEFAULT_CONCURRENCY_MULTIPLIER) times the number of CPUs.</span></span> <span data-ttu-id="ec702-142">高預設並行乘數，更多的並行寫入作業可以進行而不需要干擾並封鎖。</span><span class="sxs-lookup"><span data-stu-id="ec702-142">The higher the default concurrency multiplier is, the more concurrent write operations can take place without interference and blocking.</span></span> <span data-ttu-id="ec702-143">較高的乘數值也會導致需要的所有鎖定的作業 (例如，資料表 調整大小、`ToArray`和`Count`) 變得更耗費資源。</span><span class="sxs-lookup"><span data-stu-id="ec702-143">Higher multiplier values also cause operations that require all locks (for example, table resizing, `ToArray` and `Count`) to become more expensive.</span></span> <span data-ttu-id="ec702-144">預設並行乘數為 4。</span><span class="sxs-lookup"><span data-stu-id="ec702-144">The default concurrency multiplier is 4.</span></span> <span data-ttu-id="ec702-145">建構的大型字典時，預設容量 (DEFAULT_CAPACITY)，它代表 bucket 初始數量，是字典的非常小的大小和調整大小的數目之間的取捨。</span><span class="sxs-lookup"><span data-stu-id="ec702-145">The default capacity (DEFAULT_CAPACITY), which represents the initial number of buckets, is a trade-off between the size of a very small dictionary and the number of resizes when constructing a large dictionary.</span></span> <span data-ttu-id="ec702-146">此外，容量不得整除小質數。</span><span class="sxs-lookup"><span data-stu-id="ec702-146">Also, the capacity should not be divisible by a small prime number.</span></span> <span data-ttu-id="ec702-147">預設的容量為 31。</span><span class="sxs-lookup"><span data-stu-id="ec702-147">The default capacity is 31.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConcurrentDictionary (System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt; collection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt;&gt; collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (collection As IEnumerable(Of KeyValuePair(Of TKey, TValue)))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ConcurrentDictionary(System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt; ^ collection);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="collection" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="collection"><span data-ttu-id="ec702-148">要將其項目複製到新 <see cref="T:System.Collections.Generic.IEnumerable`1" /> 的 <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />。</span><span class="sxs-lookup"><span data-stu-id="ec702-148">The <see cref="T:System.Collections.Generic.IEnumerable`1" /> whose elements are copied to the new <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />.</span></span></param>
        <summary><span data-ttu-id="ec702-149">初始化 <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> 類別的新執行個體，這個執行個體包含從指定的 <see cref="T:System.Collections.Generic.IEnumerable`1" /> 複製的項目、具有預設並行層級、具有預設初始容量，並且使用索引鍵類型的預設比較子。</span><span class="sxs-lookup"><span data-stu-id="ec702-149">Initializes a new instance of the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> class that contains elements copied from the specified <see cref="T:System.Collections.Generic.IEnumerable`1" />, has the default concurrency level, has the default initial capacity, and uses the default comparer for the key type.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ec702-150"><paramref name="collection" /> 或其任何索引鍵為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ec702-150"><paramref name="collection" /> or any of its keys is  <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ec702-151"><paramref name="collection" /> 包含一或多個重複的索引鍵。</span><span class="sxs-lookup"><span data-stu-id="ec702-151"><paramref name="collection" /> contains one or more duplicate keys.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConcurrentDictionary (System.Collections.Generic.IEqualityComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEqualityComparer`1&lt;!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.#ctor(System.Collections.Generic.IEqualityComparer{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (comparer As IEqualityComparer(Of TKey))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ConcurrentDictionary(System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ comparer);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <param name="comparer"><span data-ttu-id="ec702-152">比較索引鍵時所要使用的相等比較實作。</span><span class="sxs-lookup"><span data-stu-id="ec702-152">The equality comparison implementation to use when comparing keys.</span></span></param>
        <summary><span data-ttu-id="ec702-153">初始化 <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> 類別的新執行個體，這個執行個體是空的、具有預設並行層級和容量，並且使用指定的 <see cref="T:System.Collections.Generic.IEqualityComparer`1" />。</span><span class="sxs-lookup"><span data-stu-id="ec702-153">Initializes a new instance of the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> class that is empty, has the default concurrency level and capacity, and uses the specified <see cref="T:System.Collections.Generic.IEqualityComparer`1" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ec702-154"><paramref name="comparer" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ec702-154"><paramref name="comparer" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConcurrentDictionary (System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt; collection, System.Collections.Generic.IEqualityComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt;&gt; collection, class System.Collections.Generic.IEqualityComparer`1&lt;!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}},System.Collections.Generic.IEqualityComparer{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (collection As IEnumerable(Of KeyValuePair(Of TKey, TValue)), comparer As IEqualityComparer(Of TKey))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ConcurrentDictionary(System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt; ^ collection, System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ comparer);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="collection" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <param name="collection"><span data-ttu-id="ec702-155">要將其項目複製到新 <see cref="T:System.Collections.Generic.IEnumerable`1" /> 的 <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />。</span><span class="sxs-lookup"><span data-stu-id="ec702-155">The <see cref="T:System.Collections.Generic.IEnumerable`1" /> whose elements are copied to the new <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />.</span></span></param>
        <param name="comparer"><span data-ttu-id="ec702-156">比較索引鍵時所要使用的 <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> 實作。</span><span class="sxs-lookup"><span data-stu-id="ec702-156">The <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> implementation to use when comparing keys.</span></span></param>
        <summary><span data-ttu-id="ec702-157">初始化 <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> 類別的新執行個體，這個執行個體包含從指定的 <see cref="T:System.Collections.IEnumerable" /> 複製的項目、具有預設並行層級、具有預設初始容量，並且使用指定的 <see cref="T:System.Collections.Generic.IEqualityComparer`1" />。</span><span class="sxs-lookup"><span data-stu-id="ec702-157">Initializes a new instance of the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> class that contains elements copied from the specified <see cref="T:System.Collections.IEnumerable" /> has the default concurrency level, has the default initial capacity, and uses the specified  <see cref="T:System.Collections.Generic.IEqualityComparer`1" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ec702-158"><paramref name="collection" /> 或 <paramref name="comparer" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ec702-158"><paramref name="collection" /> or <paramref name="comparer" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConcurrentDictionary (int concurrencyLevel, int capacity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 concurrencyLevel, int32 capacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.#ctor(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (concurrencyLevel As Integer, capacity As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ConcurrentDictionary(int concurrencyLevel, int capacity);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="concurrencyLevel" Type="System.Int32" />
        <Parameter Name="capacity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="concurrencyLevel"><span data-ttu-id="ec702-159">將同時更新 <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> 的預估執行緒數目。</span><span class="sxs-lookup"><span data-stu-id="ec702-159">The estimated number of threads that will update the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> concurrently.</span></span></param>
        <param name="capacity"><span data-ttu-id="ec702-160"><see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> 可包含的初始項目數。</span><span class="sxs-lookup"><span data-stu-id="ec702-160">The initial number of elements that the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> can contain.</span></span></param>
        <summary><span data-ttu-id="ec702-161">初始化 <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> 類別的新執行個體，這個執行個體是空的、具有指定的並行層級和容量，並且使用索引鍵類型的預設比較子。</span><span class="sxs-lookup"><span data-stu-id="ec702-161">Initializes a new instance of the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> class that is empty, has the specified concurrency level and capacity, and uses the default comparer for the key type.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="ec702-162"><paramref name="concurrencyLevel" /> 小於 1。</span><span class="sxs-lookup"><span data-stu-id="ec702-162"><paramref name="concurrencyLevel" /> is less than 1.</span></span>  
  
 <span data-ttu-id="ec702-163">-或-</span><span class="sxs-lookup"><span data-stu-id="ec702-163">-or-</span></span>  
  
 <span data-ttu-id="ec702-164"><paramref name="capacity" /> 小於 0。</span><span class="sxs-lookup"><span data-stu-id="ec702-164"><paramref name="capacity" /> is less than 0.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConcurrentDictionary (int concurrencyLevel, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt; collection, System.Collections.Generic.IEqualityComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 concurrencyLevel, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt;&gt; collection, class System.Collections.Generic.IEqualityComparer`1&lt;!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.#ctor(System.Int32,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}},System.Collections.Generic.IEqualityComparer{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (concurrencyLevel As Integer, collection As IEnumerable(Of KeyValuePair(Of TKey, TValue)), comparer As IEqualityComparer(Of TKey))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ConcurrentDictionary(int concurrencyLevel, System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt; ^ collection, System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ comparer);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="concurrencyLevel" Type="System.Int32" />
        <Parameter Name="collection" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <param name="concurrencyLevel"><span data-ttu-id="ec702-165">將同時更新 <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> 的預估執行緒數目。</span><span class="sxs-lookup"><span data-stu-id="ec702-165">The estimated number of threads that will update the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> concurrently.</span></span></param>
        <param name="collection"><span data-ttu-id="ec702-166">要將其項目複製到新 <see cref="T:System.Collections.Generic.IEnumerable`1" /> 的 <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />。</span><span class="sxs-lookup"><span data-stu-id="ec702-166">The <see cref="T:System.Collections.Generic.IEnumerable`1" /> whose elements are copied to the new <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />.</span></span></param>
        <param name="comparer"><span data-ttu-id="ec702-167">比較索引鍵時所要使用的 <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> 實作。</span><span class="sxs-lookup"><span data-stu-id="ec702-167">The <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> implementation to use when comparing keys.</span></span></param>
        <summary><span data-ttu-id="ec702-168">初始化 <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> 類別的新執行個體，這個執行個體包含從指定的 <see cref="T:System.Collections.IEnumerable" /> 複製的項目，並且使用指定的 <see cref="T:System.Collections.Generic.IEqualityComparer`1" />。</span><span class="sxs-lookup"><span data-stu-id="ec702-168">Initializes a new instance of the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> class that contains elements copied from the specified <see cref="T:System.Collections.IEnumerable" />, and uses the specified <see cref="T:System.Collections.Generic.IEqualityComparer`1" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ec702-169"><paramref name="collection" /> 或 <paramref name="comparer" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ec702-169"><paramref name="collection" /> or <paramref name="comparer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="ec702-170"><paramref name="concurrencyLevel" /> 小於 1。</span><span class="sxs-lookup"><span data-stu-id="ec702-170"><paramref name="concurrencyLevel" /> is less than 1.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ec702-171"><paramref name="collection" /> 包含一或多個重複的索引鍵。</span><span class="sxs-lookup"><span data-stu-id="ec702-171"><paramref name="collection" /> contains one or more duplicate keys.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConcurrentDictionary (int concurrencyLevel, int capacity, System.Collections.Generic.IEqualityComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 concurrencyLevel, int32 capacity, class System.Collections.Generic.IEqualityComparer`1&lt;!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.#ctor(System.Int32,System.Int32,System.Collections.Generic.IEqualityComparer{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (concurrencyLevel As Integer, capacity As Integer, comparer As IEqualityComparer(Of TKey))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ConcurrentDictionary(int concurrencyLevel, int capacity, System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ comparer);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="concurrencyLevel" Type="System.Int32" />
        <Parameter Name="capacity" Type="System.Int32" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <param name="concurrencyLevel"><span data-ttu-id="ec702-172">將同時更新 <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> 的預估執行緒數目。</span><span class="sxs-lookup"><span data-stu-id="ec702-172">The estimated number of threads that will update the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> concurrently.</span></span></param>
        <param name="capacity"><span data-ttu-id="ec702-173"><see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> 可包含的初始項目數。</span><span class="sxs-lookup"><span data-stu-id="ec702-173">The initial number of elements that the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> can contain.</span></span></param>
        <param name="comparer"><span data-ttu-id="ec702-174">比較索引鍵時所要使用的 <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> 實作。</span><span class="sxs-lookup"><span data-stu-id="ec702-174">The <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> implementation to use when comparing keys.</span></span></param>
        <summary><span data-ttu-id="ec702-175">初始化 <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> 類別的新執行個體，這個執行個體是空的、具有指定的並行層級、具有指定的初始容量，並且使用指定的 <see cref="T:System.Collections.Generic.IEqualityComparer`1" />。</span><span class="sxs-lookup"><span data-stu-id="ec702-175">Initializes a new instance of the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> class that is empty, has the specified concurrency level, has the specified initial capacity, and uses the specified <see cref="T:System.Collections.Generic.IEqualityComparer`1" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ec702-176"><paramref name="comparer" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ec702-176"><paramref name="comparer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="ec702-177"><paramref name="concurrencyLevel" /> 或 <paramref name="capacity" /> 小於 1</span><span class="sxs-lookup"><span data-stu-id="ec702-177"><paramref name="concurrencyLevel" /> or <paramref name="capacity" /> is less than 1.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddOrUpdate">
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ec702-178">如果索引鍵不存在，則將索引鍵/值組加入  <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />，如果索引鍵存在，則更新 <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> 中的索引鍵/值組。</span><span class="sxs-lookup"><span data-stu-id="ec702-178">Adds a key/value pair to the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> if the key does not already exist, or updates a key/value pair in the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> if the key already exists.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ec702-179">下列範例示範如何呼叫<xref:System.Collections.Concurrent.ConcurrentDictionary%602.AddOrUpdate%2A>方法：</span><span class="sxs-lookup"><span data-stu-id="ec702-179">The following example shows how to call the <xref:System.Collections.Concurrent.ConcurrentDictionary%602.AddOrUpdate%2A> method:</span></span>  
  
 [!code-csharp[System.Collections.Concurrent.ConcurrentDictionary#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.concurrent.concurrentdictionary/cs/concdictionary.cs#3)]
 [!code-vb[System.Collections.Concurrent.ConcurrentDictionary#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.concurrent.concurrentdictionary/vb/concdictionary.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddOrUpdate">
      <MemberSignature Language="C#" Value="public TValue AddOrUpdate (TKey key, Func&lt;TKey,TValue&gt; addValueFactory, Func&lt;TKey,TValue,TValue&gt; updateValueFactory);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !TValue AddOrUpdate(!TKey key, class System.Func`2&lt;!TKey, !TValue&gt; addValueFactory, class System.Func`3&lt;!TKey, !TValue, !TValue&gt; updateValueFactory) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate(`0,System.Func{`0,`1},System.Func{`0,`1,`1})" />
      <MemberSignature Language="VB.NET" Value="Public Function AddOrUpdate (key As TKey, addValueFactory As Func(Of TKey, TValue), updateValueFactory As Func(Of TKey, TValue, TValue)) As TValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TValue AddOrUpdate(TKey key, Func&lt;TKey, TValue&gt; ^ addValueFactory, Func&lt;TKey, TValue, TValue&gt; ^ updateValueFactory);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TValue</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
        <Parameter Name="addValueFactory" Type="System.Func&lt;TKey,TValue&gt;" />
        <Parameter Name="updateValueFactory" Type="System.Func&lt;TKey,TValue,TValue&gt;" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="ec702-180">要加入或應該更新其值的索引鍵。</span><span class="sxs-lookup"><span data-stu-id="ec702-180">The key to be added or whose value should be updated</span></span></param>
        <param name="addValueFactory"><span data-ttu-id="ec702-181">用來為不存在的索引鍵產生值的函式。</span><span class="sxs-lookup"><span data-stu-id="ec702-181">The function used to generate a value for an absent key</span></span></param>
        <param name="updateValueFactory"><span data-ttu-id="ec702-182">函式，用來根據索引鍵的現有值為現有索引鍵產生新值。</span><span class="sxs-lookup"><span data-stu-id="ec702-182">The function used to generate a new value for an existing key based on the key's existing value</span></span></param>
        <summary><span data-ttu-id="ec702-183">如果索引鍵不存在，則使用指定的函式將索引鍵/值組加入 <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />；如果索引鍵已經存在，則更新 <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> 中的索引鍵/值組。</span><span class="sxs-lookup"><span data-stu-id="ec702-183">Uses the specified functions to add a key/value pair to the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> if the key does not already exist, or to update a key/value pair in the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> if the key already exists.</span></span></summary>
        <returns><span data-ttu-id="ec702-184">索引鍵的新值。</span><span class="sxs-lookup"><span data-stu-id="ec702-184">The new value for the key.</span></span> <span data-ttu-id="ec702-185">這個值將是 addValueFactory 的結果 (如果索引鍵不存在)，或是 updateValueFactory 的結果 (如果索引鍵存在)。</span><span class="sxs-lookup"><span data-stu-id="ec702-185">This will be either be the result of addValueFactory (if the key was absent) or the result of updateValueFactory (if the key was present).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec702-186">如果您呼叫<xref:System.Collections.Concurrent.ConcurrentDictionary%602.AddOrUpdate%2A>同時在不同的執行緒上`addValueFactory`可呼叫多次，但其索引鍵/值組不可能加入的每個呼叫的字典。</span><span class="sxs-lookup"><span data-stu-id="ec702-186">If you call <xref:System.Collections.Concurrent.ConcurrentDictionary%602.AddOrUpdate%2A> simultaneously on different threads, `addValueFactory` may be called multiple times, but its key/value pair might not be added to the dictionary for every call.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ec702-187"><paramref name="key" /><paramref name="addValueFactory" /> 或 <paramref name="updateValueFactory" /> 是 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ec702-187"><paramref name="key" />, <paramref name="addValueFactory" />, or <paramref name="updateValueFactory" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="ec702-188">字典已經包含項目數目上限 (<see cref="F:System.Int32.MaxValue" />)。</span><span class="sxs-lookup"><span data-stu-id="ec702-188">The dictionary already contains the maximum number of elements (<see cref="F:System.Int32.MaxValue" />).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddOrUpdate">
      <MemberSignature Language="C#" Value="public TValue AddOrUpdate (TKey key, TValue addValue, Func&lt;TKey,TValue,TValue&gt; updateValueFactory);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !TValue AddOrUpdate(!TKey key, !TValue addValue, class System.Func`3&lt;!TKey, !TValue, !TValue&gt; updateValueFactory) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate(`0,`1,System.Func{`0,`1,`1})" />
      <MemberSignature Language="VB.NET" Value="Public Function AddOrUpdate (key As TKey, addValue As TValue, updateValueFactory As Func(Of TKey, TValue, TValue)) As TValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TValue AddOrUpdate(TKey key, TValue addValue, Func&lt;TKey, TValue, TValue&gt; ^ updateValueFactory);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TValue</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
        <Parameter Name="addValue" Type="TValue" />
        <Parameter Name="updateValueFactory" Type="System.Func&lt;TKey,TValue,TValue&gt;" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="ec702-189">要加入或應該更新其值的索引鍵。</span><span class="sxs-lookup"><span data-stu-id="ec702-189">The key to be added or whose value should be updated</span></span></param>
        <param name="addValue"><span data-ttu-id="ec702-190">要為不存在的索引鍵加入的值。</span><span class="sxs-lookup"><span data-stu-id="ec702-190">The value to be added for an absent key</span></span></param>
        <param name="updateValueFactory"><span data-ttu-id="ec702-191">函式，用來根據索引鍵的現有值為現有索引鍵產生新值。</span><span class="sxs-lookup"><span data-stu-id="ec702-191">The function used to generate a new value for an existing key based on the key's existing value</span></span></param>
        <summary><span data-ttu-id="ec702-192">如果索引鍵不存在，則將索引鍵/值組加入 <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />；如果索引鍵已經存在，則使用指定的函式更新 <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> 中的索引鍵/值組。</span><span class="sxs-lookup"><span data-stu-id="ec702-192">Adds a key/value pair to the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> if the key does not already exist, or updates a key/value pair in the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> by using the specified function if the key already exists.</span></span></summary>
        <returns><span data-ttu-id="ec702-193">索引鍵的新值。</span><span class="sxs-lookup"><span data-stu-id="ec702-193">The new value for the key.</span></span> <span data-ttu-id="ec702-194">這個值會是 addValue (如果索引鍵不存在) 或 updateValueFactory (如果索引鍵存在) 的結果。</span><span class="sxs-lookup"><span data-stu-id="ec702-194">This will be either be addValue (if the key was absent) or the result of updateValueFactory (if the key was present).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ec702-195">下列程式碼範例示範如何初始化<xref:System.Collections.Concurrent.ConcurrentDictionary%602>以及如何使用 AddOrUpdate 方法來將額外的項目加入至集合，並更新現有的項目。</span><span class="sxs-lookup"><span data-stu-id="ec702-195">The following code example shows how to initialize an <xref:System.Collections.Concurrent.ConcurrentDictionary%602> and how to use the AddOrUpdate method to add an additional item to the collection, and update the existing items.</span></span>  
  
 [!code-csharp[System.Collections.ConcurrentColAddUpdate#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.concurrentcoladdupdate/cs/program.cs#1)]
 [!code-vb[System.Collections.ConcurrentColAddUpdate#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.concurrentcoladdupdate/vb/module1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ec702-196"><paramref name="key" /> 或 <paramref name="updateValueFactory" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ec702-196"><paramref name="key" /> or <paramref name="updateValueFactory" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="ec702-197">字典已經包含項目數目上限 (<see cref="F:System.Int32.MaxValue" />)。</span><span class="sxs-lookup"><span data-stu-id="ec702-197">The dictionary already contains the maximum number of elements (<see cref="F:System.Int32.MaxValue" />).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddOrUpdate&lt;TArg&gt;">
      <MemberSignature Language="C#" Value="public TValue AddOrUpdate&lt;TArg&gt; (TKey key, Func&lt;TKey,TArg,TValue&gt; addValueFactory, Func&lt;TKey,TValue,TArg,TValue&gt; updateValueFactory, TArg factoryArgument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !TValue AddOrUpdate&lt;TArg&gt;(!TKey key, class System.Func`3&lt;!TKey, !!TArg, !TValue&gt; addValueFactory, class System.Func`4&lt;!TKey, !TValue, !!TArg, !TValue&gt; updateValueFactory, !!TArg factoryArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate``1(`0,System.Func{`0,``0,`1},System.Func{`0,`1,``0,`1},``0)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddOrUpdate(Of TArg) (key As TKey, addValueFactory As Func(Of TKey, TArg, TValue), updateValueFactory As Func(Of TKey, TValue, TArg, TValue), factoryArgument As TArg) As TValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TArg&gt;&#xA; TValue AddOrUpdate(TKey key, Func&lt;TKey, TArg, TValue&gt; ^ addValueFactory, Func&lt;TKey, TValue, TArg, TValue&gt; ^ updateValueFactory, TArg factoryArgument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TValue</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
        <Parameter Name="addValueFactory" Type="System.Func&lt;TKey,TArg,TValue&gt;" />
        <Parameter Name="updateValueFactory" Type="System.Func&lt;TKey,TValue,TArg,TValue&gt;" />
        <Parameter Name="factoryArgument" Type="TArg" />
      </Parameters>
      <Docs>
        <typeparam name="TArg"><span data-ttu-id="ec702-198">此 <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> 中的索引鍵類型</span><span class="sxs-lookup"><span data-stu-id="ec702-198">The type of the keys in this <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /></span></span></typeparam>
        <param name="key"><span data-ttu-id="ec702-199">要新增或應該更新其值的索引鍵。</span><span class="sxs-lookup"><span data-stu-id="ec702-199">The key to be added or whose value should be updated.</span></span></param>
        <param name="addValueFactory"><span data-ttu-id="ec702-200">用來為不存在之索引鍵產生值的函式。</span><span class="sxs-lookup"><span data-stu-id="ec702-200">The function used to generate a value for an absent key.</span></span></param>
        <param name="updateValueFactory"><span data-ttu-id="ec702-201">用來根據索引鍵之現有值為現有索引鍵產生新值的函式。</span><span class="sxs-lookup"><span data-stu-id="ec702-201">The function used to generate a new value for an existing key based on the key's existing value.</span></span></param>
        <param name="factoryArgument"><span data-ttu-id="ec702-202">要傳送至 <c>addValueFactory</c> 和 <c>updateValueFactory</c> 的引數。</span><span class="sxs-lookup"><span data-stu-id="ec702-202">An argument to pass into <c>addValueFactory</c> and <c>updateValueFactory</c>.</span></span></param>
        <summary><span data-ttu-id="ec702-203">如果索引鍵不存在，則將索引鍵/值組加入  <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />，如果索引鍵存在，則更新 <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> 中的索引鍵/值組。</span><span class="sxs-lookup"><span data-stu-id="ec702-203">Adds a key/value pair to the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> if the key does not already exist, or updates a key/value pair in the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> if the key already exists.</span></span></summary>
        <returns><span data-ttu-id="ec702-204">索引鍵的新值。</span><span class="sxs-lookup"><span data-stu-id="ec702-204">The new value for the key.</span></span> <span data-ttu-id="ec702-205">這個值將是 addValueFactory 的結果 (如果索引鍵不存在)，或是 updateValueFactory 的結果 (如果索引鍵存在)。</span><span class="sxs-lookup"><span data-stu-id="ec702-205">This will be either be the result of addValueFactory (if the key was absent) or the result of updateValueFactory (if the key was present).</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ec702-206"><paramref name="key" />、<paramref name="addValueFactory" />或 <paramref name="updateValueFactory" /> 為 Null 參考 (在 Visual Basic 中為 Nothing)。</span><span class="sxs-lookup"><span data-stu-id="ec702-206"><paramref name="key" />, <paramref name="addValueFactory" />, or <paramref name="updateValueFactory" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.Clear</InterfaceMember>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ec702-207">從 <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> 移除所有索引鍵和值。</span><span class="sxs-lookup"><span data-stu-id="ec702-207">Removes all keys and values from the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainsKey">
      <MemberSignature Language="C#" Value="public bool ContainsKey (TKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ContainsKey(!TKey key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.ContainsKey(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function ContainsKey (key As TKey) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ContainsKey(TKey key);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IDictionary`2.ContainsKey(`0)</InterfaceMember>
        <InterfaceMember>M:System.Collections.Generic.IReadOnlyDictionary`2.ContainsKey(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="ec702-208">要在 <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> 中尋找的索引鍵。</span><span class="sxs-lookup"><span data-stu-id="ec702-208">The key to locate in the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />.</span></span></param>
        <summary><span data-ttu-id="ec702-209">判斷 <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> 是否包含特定索引鍵。</span><span class="sxs-lookup"><span data-stu-id="ec702-209">Determines whether the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> contains the specified key.</span></span></summary>
        <returns>
          <span data-ttu-id="ec702-210">如果 <see langword="true" /> 包含具有指定索引鍵的項目，則為 <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ec702-210"><see langword="true" /> if the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> contains an element with the specified key; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ec702-211"><paramref name="key" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ec702-211"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Concurrent.ConcurrentDictionary`2.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.Count</InterfaceMember>
        <InterfaceMember>P:System.Collections.Generic.IReadOnlyCollection`1.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ec702-212">取得 <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> 中所包含的索引鍵/值組數目。</span><span class="sxs-lookup"><span data-stu-id="ec702-212">Gets the number of key/value pairs contained in the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />.</span></span></summary>
        <value><span data-ttu-id="ec702-213"><see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> 中所包含的索引鍵/值組數目。</span><span class="sxs-lookup"><span data-stu-id="ec702-213">The number of key/value pairs contained in the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec702-214">這個屬性具有快照語意，代表中的項目數<xref:System.Collections.Concurrent.ConcurrentDictionary%602?displayProperty=nameWithType>目前存取此屬性。</span><span class="sxs-lookup"><span data-stu-id="ec702-214">This property has snapshot semantics and represents the number of items in the <xref:System.Collections.Concurrent.ConcurrentDictionary%602?displayProperty=nameWithType> at the moment when the property was accessed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="ec702-215">字典已經包含項目數目上限 (<see cref="F:System.Int32.MaxValue" />)。</span><span class="sxs-lookup"><span data-stu-id="ec702-215">The dictionary already contains the maximum number of elements (<see cref="F:System.Int32.MaxValue" />).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt; GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt;&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator(Of KeyValuePair(Of TKey, TValue))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerator&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt; ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ec702-216">傳回在 <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> 中逐一查看的列舉值。</span><span class="sxs-lookup"><span data-stu-id="ec702-216">Returns an enumerator that iterates through the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />.</span></span></summary>
        <returns><span data-ttu-id="ec702-217"><see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> 的列舉程式。</span><span class="sxs-lookup"><span data-stu-id="ec702-217">An enumerator for the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec702-218">傳回從字典的列舉值安全地使用並行讀取和寫入至字典，不過它不代表目前的時間快照集的字典。</span><span class="sxs-lookup"><span data-stu-id="ec702-218">The enumerator returned from the dictionary is safe to use concurrently with reads and writes to the dictionary, however it does not represent a moment-in-time snapshot of the dictionary.</span></span> <span data-ttu-id="ec702-219">列舉程式透過公開的內容可能包含字典之後所做的修改<xref:System.Collections.Concurrent.ConcurrentDictionary%602.GetEnumerator%2A>呼叫。</span><span class="sxs-lookup"><span data-stu-id="ec702-219">The contents exposed through the enumerator may contain modifications made to the dictionary after <xref:System.Collections.Concurrent.ConcurrentDictionary%602.GetEnumerator%2A> was called.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetOrAdd">
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ec702-220">如果索引鍵不存在，則將索引鍵/值組加入 <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />。</span><span class="sxs-lookup"><span data-stu-id="ec702-220">Adds a key/value pair to the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> if the key does not already exist.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ec702-221">下列範例示範如何呼叫<xref:System.Collections.Concurrent.ConcurrentDictionary%602.GetOrAdd%2A>方法：</span><span class="sxs-lookup"><span data-stu-id="ec702-221">The following example shows how to call the <xref:System.Collections.Concurrent.ConcurrentDictionary%602.GetOrAdd%2A> method:</span></span>  
  
 [!code-csharp[System.Collections.Concurrent.ConcurrentDictionary#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.concurrent.concurrentdictionary/cs/concdictionary.cs#3)]
 [!code-vb[System.Collections.Concurrent.ConcurrentDictionary#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.concurrent.concurrentdictionary/vb/concdictionary.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetOrAdd">
      <MemberSignature Language="C#" Value="public TValue GetOrAdd (TKey key, Func&lt;TKey,TValue&gt; valueFactory);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !TValue GetOrAdd(!TKey key, class System.Func`2&lt;!TKey, !TValue&gt; valueFactory) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(`0,System.Func{`0,`1})" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOrAdd (key As TKey, valueFactory As Func(Of TKey, TValue)) As TValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TValue GetOrAdd(TKey key, Func&lt;TKey, TValue&gt; ^ valueFactory);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TValue</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
        <Parameter Name="valueFactory" Type="System.Func&lt;TKey,TValue&gt;" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="ec702-222">要加入的項目的索引鍵。</span><span class="sxs-lookup"><span data-stu-id="ec702-222">The key of the element to add.</span></span></param>
        <param name="valueFactory"><span data-ttu-id="ec702-223">用來為索引鍵產生值的函式。</span><span class="sxs-lookup"><span data-stu-id="ec702-223">The function used to generate a value for the key.</span></span></param>
        <summary><span data-ttu-id="ec702-224">如果索引鍵不存在，則使用指定的函式將索引鍵/值組新增至 <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />；如果索引鍵存在，則傳回現有的值。</span><span class="sxs-lookup"><span data-stu-id="ec702-224">Adds a key/value pair to the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> by using the specified function if the key does not already exist, or returns the existing value if the key exists.</span></span></summary>
        <returns><span data-ttu-id="ec702-225">索引鍵的值。</span><span class="sxs-lookup"><span data-stu-id="ec702-225">The value for the key.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks   
 <span data-ttu-id="ec702-226">因為索引鍵/值可以由另一個執行緒時插入`valueFactory`會產生值，您不能信任，因為`valueFactory`執行，其產生的值將會插入字典，並傳回。</span><span class="sxs-lookup"><span data-stu-id="ec702-226">Since a key/value can be inserted by another thread while `valueFactory` is generating a value, you cannot trust that just because `valueFactory` executed, its produced value will be inserted into the dictionary and returned.</span></span> <span data-ttu-id="ec702-227">如果您呼叫<xref:System.Collections.Concurrent.ConcurrentDictionary%602.GetOrAdd%2A>同時在不同的執行緒上`valueFactory`可呼叫多次，但只能有一個索引鍵/值配對將會加入至字典。</span><span class="sxs-lookup"><span data-stu-id="ec702-227">If you call <xref:System.Collections.Concurrent.ConcurrentDictionary%602.GetOrAdd%2A> simultaneously on different threads, `valueFactory` may be called multiple times, but only one key/value pair will be added to the dictionary.</span></span> 
 
 <span data-ttu-id="ec702-228">傳回的值取決於是否存在的索引鍵字典和另一個執行緒之後是否插入索引鍵/值<xref:System.Collections.Concurrent.ConcurrentDictionary%602.GetOrAdd%2A>前呼叫`valueFactory`會產生一個值：</span><span class="sxs-lookup"><span data-stu-id="ec702-228">The return value depends on the presence of the key in the dictionary and whether a key/value is inserted by another thread after <xref:System.Collections.Concurrent.ConcurrentDictionary%602.GetOrAdd%2A> is called but before `valueFactory` generates a value:</span></span>

 | <span data-ttu-id="ec702-229">情節</span><span class="sxs-lookup"><span data-stu-id="ec702-229">Scenario</span></span> | <span data-ttu-id="ec702-230">傳回值</span><span class="sxs-lookup"><span data-stu-id="ec702-230">Return value</span></span> |
 | -------- | ------------ |
 | <span data-ttu-id="ec702-231">字典中已有索引鍵。</span><span class="sxs-lookup"><span data-stu-id="ec702-231">The key is already in the dictionary.</span></span> | <span data-ttu-id="ec702-232">會傳回現有的值。</span><span class="sxs-lookup"><span data-stu-id="ec702-232">The existing value is returned.</span></span> |
 | <span data-ttu-id="ec702-233">索引鍵不在字典中。</span><span class="sxs-lookup"><span data-stu-id="ec702-233">The key is not in the dictionary.</span></span> <span data-ttu-id="ec702-234">`valueFactory` 產生值。</span><span class="sxs-lookup"><span data-stu-id="ec702-234">`valueFactory` generates a value.</span></span> <span data-ttu-id="ec702-235">在重新檢查索引鍵，位於沒有索引鍵。</span><span class="sxs-lookup"><span data-stu-id="ec702-235">On rechecking for the key, no key is found.</span></span> | <span data-ttu-id="ec702-236">索引鍵/值插入字典，並在傳回的值。</span><span class="sxs-lookup"><span data-stu-id="ec702-236">The key/value is inserted into the dictionary, and the value is returned.</span></span> |
 | <span data-ttu-id="ec702-237">索引鍵不在字典中。</span><span class="sxs-lookup"><span data-stu-id="ec702-237">The key is not in the dictionary.</span></span> <span data-ttu-id="ec702-238">`valueFactory` 產生值。</span><span class="sxs-lookup"><span data-stu-id="ec702-238">`valueFactory` generates a value.</span></span> <span data-ttu-id="ec702-239">雖然`valueFactory`是產生的值，不同的執行緒插入索引鍵的值。</span><span class="sxs-lookup"><span data-stu-id="ec702-239">While `valueFactory` is generating the value, a different thread inserts a value for the key.</span></span> <span data-ttu-id="ec702-240">之後`valueFactory`執行，且找到時重新檢查索引鍵，另一個執行緒所插入的索引鍵。</span><span class="sxs-lookup"><span data-stu-id="ec702-240">After `valueFactory` executes and upon rechecking for the key, the key inserted by the other thread is found.</span></span> | <span data-ttu-id="ec702-241">會傳回插入另一個執行緒的值。</span><span class="sxs-lookup"><span data-stu-id="ec702-241">The value inserted by the other thread is returned.</span></span> |
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ec702-242"><paramref name="key" /> 或 <paramref name="valueFactory" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ec702-242"><paramref name="key" /> or <paramref name="valueFactory" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="ec702-243">字典已經包含項目數目上限 (<see cref="F:System.Int32.MaxValue" />)。</span><span class="sxs-lookup"><span data-stu-id="ec702-243">The dictionary already contains the maximum number of elements (<see cref="F:System.Int32.MaxValue" />).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetOrAdd">
      <MemberSignature Language="C#" Value="public TValue GetOrAdd (TKey key, TValue value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !TValue GetOrAdd(!TKey key, !TValue value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(`0,`1)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOrAdd (key As TKey, value As TValue) As TValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TValue GetOrAdd(TKey key, TValue value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TValue</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
        <Parameter Name="value" Type="TValue" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="ec702-244">要加入的項目的索引鍵。</span><span class="sxs-lookup"><span data-stu-id="ec702-244">The key of the element to add.</span></span></param>
        <param name="value"><span data-ttu-id="ec702-245">索引鍵不存在時要加入的值。</span><span class="sxs-lookup"><span data-stu-id="ec702-245">The value to be added, if the key does not already exist.</span></span></param>
        <summary><span data-ttu-id="ec702-246">如果索引鍵不存在，則將索引鍵/值組加入 <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />。</span><span class="sxs-lookup"><span data-stu-id="ec702-246">Adds a key/value pair to the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> if the key does not already exist.</span></span></summary>
        <returns><span data-ttu-id="ec702-247">索引鍵的值。</span><span class="sxs-lookup"><span data-stu-id="ec702-247">The value for the key.</span></span> <span data-ttu-id="ec702-248">這個值將是索引鍵的現有值 (如果字典中已有索引鍵)，或是新值 (如果字典中沒有索引鍵)。</span><span class="sxs-lookup"><span data-stu-id="ec702-248">This will be either the existing value for the key if the key is already in the dictionary, or the new value if the key was not in the dictionary.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ec702-249"><paramref name="key" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ec702-249"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="ec702-250">字典已經包含項目數目上限 (<see cref="F:System.Int32.MaxValue" />)。</span><span class="sxs-lookup"><span data-stu-id="ec702-250">The dictionary already contains the maximum number of elements (<see cref="F:System.Int32.MaxValue" />).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetOrAdd&lt;TArg&gt;">
      <MemberSignature Language="C#" Value="public TValue GetOrAdd&lt;TArg&gt; (TKey key, Func&lt;TKey,TArg,TValue&gt; valueFactory, TArg factoryArgument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !TValue GetOrAdd&lt;TArg&gt;(!TKey key, class System.Func`3&lt;!TKey, !!TArg, !TValue&gt; valueFactory, !!TArg factoryArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd``1(`0,System.Func{`0,``0,`1},``0)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOrAdd(Of TArg) (key As TKey, valueFactory As Func(Of TKey, TArg, TValue), factoryArgument As TArg) As TValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TArg&gt;&#xA; TValue GetOrAdd(TKey key, Func&lt;TKey, TArg, TValue&gt; ^ valueFactory, TArg factoryArgument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TValue</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
        <Parameter Name="valueFactory" Type="System.Func&lt;TKey,TArg,TValue&gt;" />
        <Parameter Name="factoryArgument" Type="TArg" />
      </Parameters>
      <Docs>
        <typeparam name="TArg"><span data-ttu-id="ec702-251">此 <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> 中的索引鍵類型</span><span class="sxs-lookup"><span data-stu-id="ec702-251">The type of the keys in this <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /></span></span></typeparam>
        <param name="key"><span data-ttu-id="ec702-252">要加入的項目的索引鍵。</span><span class="sxs-lookup"><span data-stu-id="ec702-252">The key of the element to add.</span></span></param>
        <param name="valueFactory"><span data-ttu-id="ec702-253">用來為索引鍵產生值的函式。</span><span class="sxs-lookup"><span data-stu-id="ec702-253">The function used to generate a value for the key.</span></span></param>
        <param name="factoryArgument"><span data-ttu-id="ec702-254">要傳入 <c>名稱</c> 的引數值。</span><span class="sxs-lookup"><span data-stu-id="ec702-254">An argument value to pass into <c>name</c>.</span></span></param>
        <summary><span data-ttu-id="ec702-255">如果索引鍵不存在，則將索引鍵/值組加入 <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />。</span><span class="sxs-lookup"><span data-stu-id="ec702-255">Adds a key/value pair to the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> if the key does not already exist.</span></span></summary>
        <returns><span data-ttu-id="ec702-256">索引鍵的值。</span><span class="sxs-lookup"><span data-stu-id="ec702-256">The value for the key.</span></span>  <span data-ttu-id="ec702-257">如果索引鍵已在字典中，則這個值將是索引鍵的現有值；如果索引鍵不在字典中，則索引鍵的值為 <paramref name="valueFactory" /> 傳回的值。</span><span class="sxs-lookup"><span data-stu-id="ec702-257">This will be either the existing value for the key if the key is already in the dictionary, or the new value for the key as returned by <paramref name="valueFactory" /> if the key was not in the dictionary.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEmpty">
      <MemberSignature Language="C#" Value="public bool IsEmpty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEmpty" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Concurrent.ConcurrentDictionary`2.IsEmpty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsEmpty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEmpty { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ec702-258">取得值，這個值指出 <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> 是否是空的。</span><span class="sxs-lookup"><span data-stu-id="ec702-258">Gets a value that indicates whether the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> is empty.</span></span></summary>
        <value>
          <span data-ttu-id="ec702-259">如果 <see langword="true" /> 是空的，則為 <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ec702-259"><see langword="true" /> if the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> is empty; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public TValue this[TKey key] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !TValue Item(!TKey)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Concurrent.ConcurrentDictionary`2.Item(`0)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(key As TKey) As TValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TValue default[TKey] { TValue get(TKey key); void set(TKey key, TValue value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IDictionary`2.Item(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TValue</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="ec702-260">要取得或設定之值的索引鍵。</span><span class="sxs-lookup"><span data-stu-id="ec702-260">The key of the value to get or set.</span></span></param>
        <summary><span data-ttu-id="ec702-261">取得或設定與指定之索引鍵相關聯的值。</span><span class="sxs-lookup"><span data-stu-id="ec702-261">Gets or sets the value associated with the specified key.</span></span></summary>
        <value><span data-ttu-id="ec702-262">指定之索引處的索引鍵/值組的值。</span><span class="sxs-lookup"><span data-stu-id="ec702-262">The value of the key/value pair at the specified index.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ec702-263"><paramref name="key" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ec702-263"><paramref name="key" /> is  <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Collections.Generic.KeyNotFoundException"><span data-ttu-id="ec702-264">會擷取屬性，且 <paramref name="key" /> 不存在於集合中。</span><span class="sxs-lookup"><span data-stu-id="ec702-264">The property is retrieved and <paramref name="key" /> does not exist in the collection.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Keys">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;TKey&gt; Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;!TKey&gt; Keys" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Concurrent.ConcurrentDictionary`2.Keys" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Keys As ICollection(Of TKey)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;TKey&gt; ^ Keys { System::Collections::Generic::ICollection&lt;TKey&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IDictionary`2.Keys</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;TKey&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ec702-265">取得集合，包含 <see cref="T:System.Collections.Generic.Dictionary`2" /> 中的索引鍵。</span><span class="sxs-lookup"><span data-stu-id="ec702-265">Gets a collection containing the keys in the <see cref="T:System.Collections.Generic.Dictionary`2" />.</span></span></summary>
        <value><span data-ttu-id="ec702-266"><see cref="T:System.Collections.Generic.Dictionary`2" /> 中的索引鍵集合。</span><span class="sxs-lookup"><span data-stu-id="ec702-266">A collection of keys in the <see cref="T:System.Collections.Generic.Dictionary`2" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Add">
      <MemberSignature Language="C#" Value="void ICollection&lt;KeyValuePair&lt;TKey,TValue&gt;&gt;.Add (System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt; keyValuePair);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Add(valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt; keyValuePair) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#Generic#ICollection&lt;System#Collections#Generic#KeyValuePair&lt;TKey,TValue&gt;&gt;#Add(System.Collections.Generic.KeyValuePair{`0,`1})" />
      <MemberSignature Language="VB.NET" Value="Sub Add (keyValuePair As KeyValuePair(Of TKey, TValue)) Implements ICollection(Of KeyValuePair(Of TKey, TValue)).Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Add(System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt; keyValuePair) = System::Collections::Generic::ICollection&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt;::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Add(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyValuePair" Type="System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;" />
      </Parameters>
      <Docs>
        <param name="keyValuePair">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Contains">
      <MemberSignature Language="C#" Value="bool ICollection&lt;KeyValuePair&lt;TKey,TValue&gt;&gt;.Contains (System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt; keyValuePair);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Contains(valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt; keyValuePair) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#Generic#ICollection&lt;System#Collections#Generic#KeyValuePair&lt;TKey,TValue&gt;&gt;#Contains(System.Collections.Generic.KeyValuePair{`0,`1})" />
      <MemberSignature Language="VB.NET" Value="Function Contains (keyValuePair As KeyValuePair(Of TKey, TValue)) As Boolean Implements ICollection(Of KeyValuePair(Of TKey, TValue)).Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Contains(System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt; keyValuePair) = System::Collections::Generic::ICollection&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt;::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Contains(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyValuePair" Type="System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;" />
      </Parameters>
      <Docs>
        <param name="keyValuePair">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection&lt;KeyValuePair&lt;TKey,TValue&gt;&gt;.CopyTo (System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.CopyTo(valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt;[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#Generic#ICollection&lt;System#Collections#Generic#KeyValuePair&lt;TKey,TValue&gt;&gt;#CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub CopyTo (array As KeyValuePair(Of TKey, TValue)(), index As Integer) Implements ICollection(Of KeyValuePair(Of TKey, TValue)).CopyTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.CopyTo(cli::array &lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt; ^ array, int index) = System::Collections::Generic::ICollection&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt;::CopyTo;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">To be added.</param>
        <param name="index">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#Generic#ICollection&lt;System#Collections#Generic#KeyValuePair&lt;TKey,TValue&gt;&gt;#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements ICollection(Of KeyValuePair(Of TKey, TValue)).IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Remove">
      <MemberSignature Language="C#" Value="bool ICollection&lt;KeyValuePair&lt;TKey,TValue&gt;&gt;.Remove (System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt; keyValuePair);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Remove(valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt; keyValuePair) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#Generic#ICollection&lt;System#Collections#Generic#KeyValuePair&lt;TKey,TValue&gt;&gt;#Remove(System.Collections.Generic.KeyValuePair{`0,`1})" />
      <MemberSignature Language="VB.NET" Value="Function Remove (keyValuePair As KeyValuePair(Of TKey, TValue)) As Boolean Implements ICollection(Of KeyValuePair(Of TKey, TValue)).Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Remove(System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt; keyValuePair) = System::Collections::Generic::ICollection&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt;::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Remove(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyValuePair" Type="System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;" />
      </Parameters>
      <Docs>
        <param name="keyValuePair">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.Add">
      <MemberSignature Language="C#" Value="void IDictionary&lt;TKey,TValue&gt;.Add (TKey key, TValue value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.Add(!TKey key, !TValue value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#Generic#IDictionary&lt;TKey,TValue&gt;#Add(`0,`1)" />
      <MemberSignature Language="VB.NET" Value="Sub Add (key As TKey, value As TValue) Implements IDictionary(Of TKey, TValue).Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.Add(TKey key, TValue value) = System::Collections::Generic::IDictionary&lt;TKey, TValue&gt;::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IDictionary`2.Add(`0,`1)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
        <Parameter Name="value" Type="TValue" />
      </Parameters>
      <Docs>
        <param name="key">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.Remove">
      <MemberSignature Language="C#" Value="bool IDictionary&lt;TKey,TValue&gt;.Remove (TKey key);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.Remove(!TKey key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#Generic#IDictionary&lt;TKey,TValue&gt;#Remove(`0)" />
      <MemberSignature Language="VB.NET" Value="Function Remove (key As TKey) As Boolean Implements IDictionary(Of TKey, TValue).Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.Remove(TKey key) = System::Collections::Generic::IDictionary&lt;TKey, TValue&gt;::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IDictionary`2.Remove(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
      </Parameters>
      <Docs>
        <param name="key">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;.Keys">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerable&lt;TKey&gt; System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;.Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;!TKey&gt; System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;.Keys" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#Generic#IReadOnlyDictionary&lt;TKey,TValue&gt;#Keys" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Keys As IEnumerable(Of TKey) Implements IReadOnlyDictionary(Of TKey, TValue).Keys" />
      <MemberSignature Language="C++ CLI" Value="property System::Collections::Generic::IEnumerable&lt;TKey&gt; ^ System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;.Keys { System::Collections::Generic::IEnumerable&lt;TKey&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IReadOnlyDictionary`2.Keys</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;TKey&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;.Values">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerable&lt;TValue&gt; System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;.Values { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;!TValue&gt; System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;.Values" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#Generic#IReadOnlyDictionary&lt;TKey,TValue&gt;#Values" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Values As IEnumerable(Of TValue) Implements IReadOnlyDictionary(Of TKey, TValue).Values" />
      <MemberSignature Language="C++ CLI" Value="property System::Collections::Generic::IEnumerable&lt;TValue&gt; ^ System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;.Values { System::Collections::Generic::IEnumerable&lt;TValue&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IReadOnlyDictionary`2.Values</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;TValue&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ array, int index) = System::Collections::ICollection::CopyTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="ec702-267">一維陣列，表示從這個 <see cref="T:System.Collections.ICollection" /> 複製過來之項目的目的地。</span><span class="sxs-lookup"><span data-stu-id="ec702-267">The one-dimensional array that is the destination of the elements copied from the <see cref="T:System.Collections.ICollection" />.</span></span> <span data-ttu-id="ec702-268">陣列必須有以零為起始的索引。</span><span class="sxs-lookup"><span data-stu-id="ec702-268">The array must have zero-based indexing.</span></span></param>
        <param name="index"><span data-ttu-id="ec702-269"><c>array</c> 中以零起始的索引，複製作業從此處開始。</span><span class="sxs-lookup"><span data-stu-id="ec702-269">The zero-based index in <c>array</c> at which copying begins.</span></span></param>
        <summary><span data-ttu-id="ec702-270">從指定的陣列索引處開始，將 <see cref="T:System.Collections.ICollection" /> 的項目複製到陣列。</span><span class="sxs-lookup"><span data-stu-id="ec702-270">Copies the elements of the <see cref="T:System.Collections.ICollection" /> to an array, starting at the specified array index.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ec702-271"><paramref name="array" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ec702-271"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="ec702-272"><paramref name="index" /> 小於 0。</span><span class="sxs-lookup"><span data-stu-id="ec702-272"><paramref name="index" /> is less than 0.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ec702-273"><paramref name="index" /> 等於或大於 <paramref name="array" /> 的長度。</span><span class="sxs-lookup"><span data-stu-id="ec702-273"><paramref name="index" /> is equal to or greater than the length of the <paramref name="array" />.</span></span>  
  
 <span data-ttu-id="ec702-274">-或-</span><span class="sxs-lookup"><span data-stu-id="ec702-274">-or-</span></span>  
  
 <span data-ttu-id="ec702-275">來源 <see cref="T:System.Collections.ICollection" /> 中的項目數目，大於 <paramref name="index" /> 到目的 <paramref name="array" /> 結尾的可用空間。</span><span class="sxs-lookup"><span data-stu-id="ec702-275">The number of elements in the source <see cref="T:System.Collections.ICollection" /> is greater than the available space from <paramref name="index" /> to the end of the destination <paramref name="array" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.ICollection.IsSynchronized { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ec702-276">取得值，這個值表示對 <see cref="T:System.Collections.ICollection" /> 的存取是否已經與 SyncRoot 同步。</span><span class="sxs-lookup"><span data-stu-id="ec702-276">Gets a value indicating whether access to the <see cref="T:System.Collections.ICollection" /> is synchronized with the SyncRoot.</span></span></summary>
        <value>
          <span data-ttu-id="ec702-277">如果 <see langword="true" /> 的存取為同步 (安全執行緒)，則為 <see cref="T:System.Collections.ICollection" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ec702-277"><see langword="true" /> if access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe); otherwise, <see langword="false" />.</span></span> <span data-ttu-id="ec702-278">如<see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />這個屬性永遠傳回**false**。</span><span class="sxs-lookup"><span data-stu-id="ec702-278">For <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> this property always returns **false**.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.ICollection.SyncRoot { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ec702-279">取得可用以同步存取 <see cref="T:System.Collections.ICollection" /> 的物件。</span><span class="sxs-lookup"><span data-stu-id="ec702-279">Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.</span></span> <span data-ttu-id="ec702-280">不支援這個屬性。</span><span class="sxs-lookup"><span data-stu-id="ec702-280">This property is not supported.</span></span></summary>
        <value><span data-ttu-id="ec702-281">永遠傳回 null。</span><span class="sxs-lookup"><span data-stu-id="ec702-281">Always returns null.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="ec702-282">不支援這個屬性。</span><span class="sxs-lookup"><span data-stu-id="ec702-282">This property is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.Add">
      <MemberSignature Language="C#" Value="void IDictionary.Add (object key, object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IDictionary.Add(object key, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Add (key As Object, value As Object) Implements IDictionary.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IDictionary.Add(System::Object ^ key, System::Object ^ value) = System::Collections::IDictionary::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.Add(System.Object,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="ec702-283">要用做索引鍵的物件。</span><span class="sxs-lookup"><span data-stu-id="ec702-283">The object to use as the key.</span></span></param>
        <param name="value"><span data-ttu-id="ec702-284">要用做值的物件。</span><span class="sxs-lookup"><span data-stu-id="ec702-284">The object to use as the value.</span></span></param>
        <summary><span data-ttu-id="ec702-285">將指定的索引鍵和值加入字典。</span><span class="sxs-lookup"><span data-stu-id="ec702-285">Adds the specified key and value to the dictionary.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ec702-286"><paramref name="key" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ec702-286"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ec702-287"><paramref name="key" /> 屬於無法指派給 <see cref="T:System.Collections.Generic.Dictionary`2" /> 的索引鍵類型的類型。</span><span class="sxs-lookup"><span data-stu-id="ec702-287"><paramref name="key" /> is of a type that is not assignable to the key type  of the <see cref="T:System.Collections.Generic.Dictionary`2" />.</span></span>  
  
 <span data-ttu-id="ec702-288">-或-</span><span class="sxs-lookup"><span data-stu-id="ec702-288">-or-</span></span>  
  
 <span data-ttu-id="ec702-289"><paramref name="value" /> 這個類型無法指派給 <see cref="T:System.Collections.Generic.Dictionary`2" /> 中值的類型。</span><span class="sxs-lookup"><span data-stu-id="ec702-289"><paramref name="value" /> is of a type that is not assignable to the type of values in the <see cref="T:System.Collections.Generic.Dictionary`2" />.</span></span>  
  
 <span data-ttu-id="ec702-290">-或-</span><span class="sxs-lookup"><span data-stu-id="ec702-290">-or-</span></span>  
  
 <span data-ttu-id="ec702-291"><see cref="T:System.Collections.Generic.Dictionary`2" /> 中已存在具有相同索引鍵的值。</span><span class="sxs-lookup"><span data-stu-id="ec702-291">A value with the same key already exists in the <see cref="T:System.Collections.Generic.Dictionary`2" />.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="ec702-292">字典已經包含項目數目上限 (<see cref="F:System.Int32.MaxValue" />)。</span><span class="sxs-lookup"><span data-stu-id="ec702-292">The dictionary already contains the maximum number of elements (<see cref="F:System.Int32.MaxValue" />).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.Contains">
      <MemberSignature Language="C#" Value="bool IDictionary.Contains (object key);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IDictionary.Contains(object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (key As Object) As Boolean Implements IDictionary.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IDictionary.Contains(System::Object ^ key) = System::Collections::IDictionary::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="ec702-293">要在 <see cref="T:System.Collections.Generic.IDictionary`2" /> 中尋找的索引鍵。</span><span class="sxs-lookup"><span data-stu-id="ec702-293">The key to locate in the <see cref="T:System.Collections.Generic.IDictionary`2" />.</span></span></param>
        <summary><span data-ttu-id="ec702-294">取得值，這個值指出 <see cref="T:System.Collections.Generic.IDictionary`2" /> 是否包含具有指定之索引鍵的項目。</span><span class="sxs-lookup"><span data-stu-id="ec702-294">Gets whether the <see cref="T:System.Collections.Generic.IDictionary`2" /> contains an element with the specified key.</span></span></summary>
        <returns>
          <span data-ttu-id="ec702-295">如果 <see langword="true" /> 包含具有指定索引鍵的項目，則為 <see cref="T:System.Collections.Generic.IDictionary`2" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ec702-295"><see langword="true" /> if the <see cref="T:System.Collections.Generic.IDictionary`2" /> contains an element with the specified key; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ec702-296"><paramref name="key" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ec702-296"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IDictionaryEnumerator IDictionary.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IDictionaryEnumerator System.Collections.IDictionary.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IDictionaryEnumerator Implements IDictionary.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IDictionaryEnumerator ^ System.Collections.IDictionary.GetEnumerator() = System::Collections::IDictionary::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionaryEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ec702-297">提供 <see cref="T:System.Collections.IDictionaryEnumerator" /> 的 <see cref="T:System.Collections.Generic.IDictionary`2" />。</span><span class="sxs-lookup"><span data-stu-id="ec702-297">Provides a <see cref="T:System.Collections.IDictionaryEnumerator" /> for the <see cref="T:System.Collections.Generic.IDictionary`2" />.</span></span></summary>
        <returns><span data-ttu-id="ec702-298"><see cref="T:System.Collections.IDictionaryEnumerator" /> 的 <see cref="T:System.Collections.Generic.IDictionary`2" />。</span><span class="sxs-lookup"><span data-stu-id="ec702-298">A <see cref="T:System.Collections.IDictionaryEnumerator" /> for the <see cref="T:System.Collections.Generic.IDictionary`2" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IDictionary.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IDictionary.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IDictionary.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.IDictionary.IsFixedSize { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ec702-299">取得值，指出 <see cref="T:System.Collections.Generic.IDictionary`2" /> 是否有固定的大小。</span><span class="sxs-lookup"><span data-stu-id="ec702-299">Gets a value indicating whether the <see cref="T:System.Collections.Generic.IDictionary`2" /> has a fixed size.</span></span></summary>
        <value>
          <span data-ttu-id="ec702-300">如果 <see langword="true" /> 有固定大小，則為 <see cref="T:System.Collections.Generic.IDictionary`2" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ec702-300"><see langword="true" /> if the <see cref="T:System.Collections.Generic.IDictionary`2" /> has a fixed size; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="ec702-301">若是 <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />，則這個屬性一律傳回 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ec702-301">For <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />, this property always returns <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.IDictionary.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IDictionary.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements IDictionary.IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.IDictionary.IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ec702-302">取得值，指出 <see cref="T:System.Collections.Generic.IDictionary`2" /> 是否唯讀。</span><span class="sxs-lookup"><span data-stu-id="ec702-302">Gets a value indicating whether the <see cref="T:System.Collections.Generic.IDictionary`2" /> is read-only.</span></span></summary>
        <value>
          <span data-ttu-id="ec702-303">如果 <see langword="true" /> 是唯讀，則為 <see cref="T:System.Collections.Generic.IDictionary`2" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ec702-303"><see langword="true" /> if the <see cref="T:System.Collections.Generic.IDictionary`2" /> is read-only; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="ec702-304">若是 <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />，則這個屬性一律傳回 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ec702-304">For <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />, this property always returns <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IDictionary.Item[object key] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IDictionary.Item(object)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#Item(System.Object)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(key As Object) As Object Implements IDictionary.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.IDictionary.Item[System::Object ^] { System::Object ^ get(System::Object ^ key); void set(System::Object ^ key, System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.Item(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="ec702-305">要取得或設定之值的索引鍵。</span><span class="sxs-lookup"><span data-stu-id="ec702-305">The key of the value to get or set.</span></span></param>
        <summary><span data-ttu-id="ec702-306">取得或設定與指定之索引鍵相關聯的值。</span><span class="sxs-lookup"><span data-stu-id="ec702-306">Gets or sets the value associated with the specified key.</span></span></summary>
        <value><span data-ttu-id="ec702-307">與指定索引鍵關聯的值；如果 <see langword="null" /> 不在字典中，或 <paramref name="key" /> 的類型無法指派給 <paramref name="key" /> 的索引鍵類型，則為 <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />。</span><span class="sxs-lookup"><span data-stu-id="ec702-307">The value associated with the specified key, or  <see langword="null" /> if <paramref name="key" /> is not in the dictionary or <paramref name="key" /> is of a type that is not assignable to the key type of the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ec702-308"><paramref name="key" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ec702-308"><paramref name="key" /> is  <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ec702-309">正在指定值，而且 <paramref name="key" /> 是無法指派給 <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> 的索引鍵類型或實值類型的類型。</span><span class="sxs-lookup"><span data-stu-id="ec702-309">A value is being assigned, and <paramref name="key" /> is of a type that is not assignable to the key type or the value type of the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.Keys">
      <MemberSignature Language="C#" Value="System.Collections.ICollection System.Collections.IDictionary.Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection System.Collections.IDictionary.Keys" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#Keys" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Keys As ICollection Implements IDictionary.Keys" />
      <MemberSignature Language="C++ CLI" Value="property System::Collections::ICollection ^ System.Collections.IDictionary.Keys { System::Collections::ICollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.Keys</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ec702-310">取得包含 <see cref="T:System.Collections.ICollection" /> 之索引鍵的 <see cref="T:System.Collections.Generic.IDictionary`2" />。</span><span class="sxs-lookup"><span data-stu-id="ec702-310">Gets an <see cref="T:System.Collections.ICollection" /> that contains the keys of the  <see cref="T:System.Collections.Generic.IDictionary`2" />.</span></span></summary>
        <value><span data-ttu-id="ec702-311">介面，包含 <see cref="T:System.Collections.Generic.IDictionary`2" /> 的索引鍵。</span><span class="sxs-lookup"><span data-stu-id="ec702-311">An interface that contains the keys of the <see cref="T:System.Collections.Generic.IDictionary`2" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.Remove">
      <MemberSignature Language="C#" Value="void IDictionary.Remove (object key);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IDictionary.Remove(object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (key As Object) Implements IDictionary.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IDictionary.Remove(System::Object ^ key) = System::Collections::IDictionary::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="ec702-312">要移除的項目索引鍵。</span><span class="sxs-lookup"><span data-stu-id="ec702-312">The key of the element to remove.</span></span></param>
        <summary><span data-ttu-id="ec702-313">將有指定索引鍵的項目從 <see cref="T:System.Collections.IDictionary" /> 移除。</span><span class="sxs-lookup"><span data-stu-id="ec702-313">Removes the element with the specified key from the <see cref="T:System.Collections.IDictionary" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ec702-314"><paramref name="key" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ec702-314"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.Values">
      <MemberSignature Language="C#" Value="System.Collections.ICollection System.Collections.IDictionary.Values { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection System.Collections.IDictionary.Values" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IDictionary#Values" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Values As ICollection Implements IDictionary.Values" />
      <MemberSignature Language="C++ CLI" Value="property System::Collections::ICollection ^ System.Collections.IDictionary.Values { System::Collections::ICollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.Values</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ec702-315">取得包含 <see cref="T:System.Collections.ICollection" /> 中之值的 <see cref="T:System.Collections.IDictionary" />。</span><span class="sxs-lookup"><span data-stu-id="ec702-315">Gets an <see cref="T:System.Collections.ICollection" /> that contains the values in the <see cref="T:System.Collections.IDictionary" />.</span></span></summary>
        <value><span data-ttu-id="ec702-316">介面，包含 <see cref="T:System.Collections.IDictionary" /> 中的值。</span><span class="sxs-lookup"><span data-stu-id="ec702-316">An interface that contains the values in the <see cref="T:System.Collections.IDictionary" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ec702-317">傳回在 <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> 中逐一查看的列舉值。</span><span class="sxs-lookup"><span data-stu-id="ec702-317">Returns an enumerator that iterates through the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />.</span></span></summary>
        <returns><span data-ttu-id="ec702-318"><see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> 的列舉程式。</span><span class="sxs-lookup"><span data-stu-id="ec702-318">An enumerator for the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec702-319">傳回從字典的列舉值安全地使用並行讀取和寫入至字典，不過它不代表目前的時間快照集的字典。</span><span class="sxs-lookup"><span data-stu-id="ec702-319">The enumerator returned from the dictionary is safe to use concurrently with reads and writes to the dictionary, however it does not represent a moment-in-time snapshot of the dictionary.</span></span> <span data-ttu-id="ec702-320">列舉程式透過公開的內容可能包含字典之後所做的修改<xref:System.Collections.Concurrent.ConcurrentDictionary%602.GetEnumerator%2A>呼叫。</span><span class="sxs-lookup"><span data-stu-id="ec702-320">The contents exposed through the enumerator may contain modifications made to the dictionary after <xref:System.Collections.Concurrent.ConcurrentDictionary%602.GetEnumerator%2A> was called.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToArray">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;[] ToArray ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt;[] ToArray() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.ToArray" />
      <MemberSignature Language="VB.NET" Value="Public Function ToArray () As KeyValuePair(Of TKey, TValue)()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt; ^ ToArray();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ec702-321">將儲存在 <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> 中的索引鍵和值組複製到新陣列。</span><span class="sxs-lookup"><span data-stu-id="ec702-321">Copies the key and value pairs stored in the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> to a new array.</span></span></summary>
        <returns><span data-ttu-id="ec702-322">新陣列，包含從 <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> 複製之索引鍵和值組的快照。</span><span class="sxs-lookup"><span data-stu-id="ec702-322">A new array containing a snapshot of key and value pairs copied from the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryAdd">
      <MemberSignature Language="C#" Value="public bool TryAdd (TKey key, TValue value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryAdd(!TKey key, !TValue value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.TryAdd(`0,`1)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryAdd (key As TKey, value As TValue) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryAdd(TKey key, TValue value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
        <Parameter Name="value" Type="TValue" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="ec702-323">要加入的項目的索引鍵。</span><span class="sxs-lookup"><span data-stu-id="ec702-323">The key of the element to add.</span></span></param>
        <param name="value"><span data-ttu-id="ec702-324">要加入的項目的值。</span><span class="sxs-lookup"><span data-stu-id="ec702-324">The value of the element to add.</span></span> <span data-ttu-id="ec702-325">參考類型的值可以是 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ec702-325">The value can be  <see langword="null" /> for reference types.</span></span></param>
        <summary><span data-ttu-id="ec702-326">嘗試將指定的索引鍵和值加入 <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />。</span><span class="sxs-lookup"><span data-stu-id="ec702-326">Attempts to add the specified key and value to the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />.</span></span></summary>
        <returns>
          <span data-ttu-id="ec702-327"><see langword="true" />如果索引鍵/值組已成功加入至則為 <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />，如果索引鍵已經存在則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ec702-327"><see langword="true" /> if the key/value pair was added to the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> successfully; <see langword="false" /> if the key already exists.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec702-328">這個方法會傳回`false`如果金鑰已存在。</span><span class="sxs-lookup"><span data-stu-id="ec702-328">This method returns `false` if the key already exists.</span></span> <span data-ttu-id="ec702-329">使用<xref:System.Collections.Concurrent.ConcurrentDictionary%602.TryUpdate%2A>或<xref:System.Collections.Concurrent.ConcurrentDictionary%602.AddOrUpdate%2A>方法，以更新的值，如果索引鍵已經存在。</span><span class="sxs-lookup"><span data-stu-id="ec702-329">Use the <xref:System.Collections.Concurrent.ConcurrentDictionary%602.TryUpdate%2A> or <xref:System.Collections.Concurrent.ConcurrentDictionary%602.AddOrUpdate%2A> method to update the value in case a key already exists.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ec702-330">下列範例示範如何呼叫<xref:System.Collections.Concurrent.ConcurrentDictionary%602.TryAdd%2A?displayProperty=nameWithType>方法：</span><span class="sxs-lookup"><span data-stu-id="ec702-330">The following example shows how to call the <xref:System.Collections.Concurrent.ConcurrentDictionary%602.TryAdd%2A?displayProperty=nameWithType> method:</span></span>  
  
 [!code-csharp[System.Collections.Concurrent.ConcurrentDictionary#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.concurrent.concurrentdictionary/cs/concdictionary.cs#2)]
 [!code-vb[System.Collections.Concurrent.ConcurrentDictionary#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.concurrent.concurrentdictionary/vb/concdictionary.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ec702-331"><paramref name="key" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ec702-331"><paramref name="key" /> is  <see langword="null" />.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="ec702-332">字典已經包含項目數目上限 (<see cref="F:System.Int32.MaxValue" />)。</span><span class="sxs-lookup"><span data-stu-id="ec702-332">The dictionary already contains the maximum number of elements (<see cref="F:System.Int32.MaxValue" />).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TryGetValue">
      <MemberSignature Language="C#" Value="public bool TryGetValue (TKey key, out TValue value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryGetValue(!TKey key, [out] !TValue&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.TryGetValue(`0,`1@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetValue (key As TKey, ByRef value As TValue) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool TryGetValue(TKey key, [Runtime::InteropServices::Out] TValue % value);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)</InterfaceMember>
        <InterfaceMember>M:System.Collections.Generic.IReadOnlyDictionary`2.TryGetValue(`0,`1@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
        <Parameter Name="value" Type="TValue&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="ec702-333">要取得之值的索引鍵。</span><span class="sxs-lookup"><span data-stu-id="ec702-333">The key of the value to get.</span></span></param>
        <param name="value"><span data-ttu-id="ec702-334">當這個方法傳回時，會包含 <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> 中具有指定索引鍵的物件；如果作業失敗，則包含類型的預設值。</span><span class="sxs-lookup"><span data-stu-id="ec702-334">When this method returns, contains the object from the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> that has the specified key, or the default value of the type if the operation failed.</span></span></param>
        <summary><span data-ttu-id="ec702-335">嘗試從 <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> 取得與指定索引鍵關聯的值。</span><span class="sxs-lookup"><span data-stu-id="ec702-335">Attempts to get the value associated with the specified key from the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />.</span></span></summary>
        <returns>
          <span data-ttu-id="ec702-336">如果在 <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> 中找到索引鍵則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ec702-336"><see langword="true" /> if the key was found in the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ec702-337"><paramref name="key" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ec702-337"><paramref name="key" /> is  <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TryRemove">
      <MemberSignature Language="C#" Value="public bool TryRemove (TKey key, out TValue value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryRemove(!TKey key, [out] !TValue&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.TryRemove(`0,`1@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryRemove (key As TKey, ByRef value As TValue) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryRemove(TKey key, [Runtime::InteropServices::Out] TValue % value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
        <Parameter Name="value" Type="TValue&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="ec702-338">要移除和傳回的項目索引鍵。</span><span class="sxs-lookup"><span data-stu-id="ec702-338">The key of the element to remove and return.</span></span></param>
        <param name="value"><span data-ttu-id="ec702-339">當這個方法傳回時，會包含已從 <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> 中移除的物件；如果「索引鍵」<c></c>不存在，則包含 <see langword="TValue" /> 類型的預設值。</span><span class="sxs-lookup"><span data-stu-id="ec702-339">When this method returns, contains the object removed from the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />, or the default value of  the <see langword="TValue" /> type if <c>key</c> does not exist.</span></span></param>
        <summary><span data-ttu-id="ec702-340">嘗試從 <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> 中移除並傳回具有指定索引鍵的值。</span><span class="sxs-lookup"><span data-stu-id="ec702-340">Attempts to remove and return the value that has the specified key from the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" />.</span></span></summary>
        <returns>
          <span data-ttu-id="ec702-341">如果已成功移除物件，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ec702-341"><see langword="true" /> if the object was removed successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ec702-342">下列範例示範如何呼叫<xref:System.Collections.Concurrent.ConcurrentDictionary%602.TryRemove%2A?displayProperty=nameWithType>方法：</span><span class="sxs-lookup"><span data-stu-id="ec702-342">The following example shows how to call the <xref:System.Collections.Concurrent.ConcurrentDictionary%602.TryRemove%2A?displayProperty=nameWithType> method:</span></span>  
  
 [!code-csharp[System.Collections.Concurrent.ConcurrentDictionary#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.concurrent.concurrentdictionary/cs/concdictionary.cs#2)]
 [!code-vb[System.Collections.Concurrent.ConcurrentDictionary#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.concurrent.concurrentdictionary/vb/concdictionary.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ec702-343"><paramref name="key" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ec702-343"><paramref name="key" /> is  <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TryUpdate">
      <MemberSignature Language="C#" Value="public bool TryUpdate (TKey key, TValue newValue, TValue comparisonValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryUpdate(!TKey key, !TValue newValue, !TValue comparisonValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentDictionary`2.TryUpdate(`0,`1,`1)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryUpdate (key As TKey, newValue As TValue, comparisonValue As TValue) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryUpdate(TKey key, TValue newValue, TValue comparisonValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
        <Parameter Name="newValue" Type="TValue" />
        <Parameter Name="comparisonValue" Type="TValue" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="ec702-344">其值與 <c>comparisonValue</c> 相比較並可能遭到取代的索引鍵。</span><span class="sxs-lookup"><span data-stu-id="ec702-344">The key whose value is compared with <c>comparisonValue</c> and possibly replaced.</span></span></param>
        <param name="newValue"><span data-ttu-id="ec702-345">如果比較結果相等，則為取代具有指定「索引鍵」<c></c>之項目值的值。</span><span class="sxs-lookup"><span data-stu-id="ec702-345">The value that replaces the value of the element that has the specified <c>key</c> if the comparison results in equality.</span></span></param>
        <param name="comparisonValue"><span data-ttu-id="ec702-346">與具有指定「索引鍵」<c></c>之項目值相比較的值。</span><span class="sxs-lookup"><span data-stu-id="ec702-346">The value that is compared to the value of the element that has the specified <c>key</c>.</span></span></param>
        <summary><span data-ttu-id="ec702-347">比較指定索引鍵的現有值與指定的值，如果兩者相等，則將索引鍵更新成第三個值。</span><span class="sxs-lookup"><span data-stu-id="ec702-347">Compares the existing value for the specified key with a specified value, and if they are equal, updates the key with a third value.</span></span></summary>
        <returns>
          <span data-ttu-id="ec702-348">如果具有 <see langword="true" /> 的值等於 <paramref name="key" /> 並且取代為 <paramref name="comparisonValue" />，則為 <paramref name="newValue" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ec702-348"><see langword="true" /> if the value with <paramref name="key" /> was equal to <paramref name="comparisonValue" /> and was replaced with <paramref name="newValue" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ec702-349">下列範例示範如何呼叫<xref:System.Collections.Concurrent.ConcurrentDictionary%602.TryUpdate%2A>方法：</span><span class="sxs-lookup"><span data-stu-id="ec702-349">The following example shows how to call the <xref:System.Collections.Concurrent.ConcurrentDictionary%602.TryUpdate%2A> method:</span></span>  
  
 [!code-csharp[System.Collections.Concurrent.ConcurrentDictionary#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.concurrent.concurrentdictionary/cs/concdictionary.cs#2)]
 [!code-vb[System.Collections.Concurrent.ConcurrentDictionary#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.concurrent.concurrentdictionary/vb/concdictionary.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ec702-350"><paramref name="key" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ec702-350"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Values">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;TValue&gt; Values { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;!TValue&gt; Values" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Concurrent.ConcurrentDictionary`2.Values" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Values As ICollection(Of TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;TValue&gt; ^ Values { System::Collections::Generic::ICollection&lt;TValue&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IDictionary`2.Values</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;TValue&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ec702-351">取得集合，其中包含 <see cref="T:System.Collections.Generic.Dictionary`2" /> 中的值。</span><span class="sxs-lookup"><span data-stu-id="ec702-351">Gets a collection that contains the values in the <see cref="T:System.Collections.Generic.Dictionary`2" />.</span></span></summary>
        <value><span data-ttu-id="ec702-352">包含 <see cref="T:System.Collections.Generic.Dictionary`2" /> 中之值的集合。</span><span class="sxs-lookup"><span data-stu-id="ec702-352">A collection that contains the values in the <see cref="T:System.Collections.Generic.Dictionary`2" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>