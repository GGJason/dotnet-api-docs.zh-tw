<Type Name="ConcurrentBag&lt;T&gt;" FullName="System.Collections.Concurrent.ConcurrentBag&lt;T&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a5e8ee8831b0cb820c701bbdcfc8739ff89bc11e" /><Meta Name="ms.sourcegitcommit" Value="c0c07dbd19cd7017243f9ac36915755f79bc8da6" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="11/27/2018" /><Meta Name="ms.locfileid" Value="52359481" /></Metadata><TypeSignature Language="C#" Value="public class ConcurrentBag&lt;T&gt; : System.Collections.Concurrent.IProducerConsumerCollection&lt;T&gt;, System.Collections.Generic.IEnumerable&lt;T&gt;, System.Collections.Generic.IReadOnlyCollection&lt;T&gt;, System.Collections.ICollection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit ConcurrentBag`1&lt;T&gt; extends System.Object implements class System.Collections.Concurrent.IProducerConsumerCollection`1&lt;!T&gt;, class System.Collections.Generic.IEnumerable`1&lt;!T&gt;, class System.Collections.Generic.IReadOnlyCollection`1&lt;!T&gt;, class System.Collections.ICollection, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Concurrent.ConcurrentBag`1" />
  <TypeSignature Language="VB.NET" Value="Public Class ConcurrentBag(Of T)&#xA;Implements ICollection, IEnumerable(Of T), IProducerConsumerCollection(Of T), IReadOnlyCollection(Of T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public ref class ConcurrentBag : System::Collections::Concurrent::IProducerConsumerCollection&lt;T&gt;, System::Collections::Generic::IEnumerable&lt;T&gt;, System::Collections::Generic::IReadOnlyCollection&lt;T&gt;, System::Collections::ICollection" />
  <TypeSignature Language="F#" Value="type ConcurrentBag&lt;'T&gt; = class&#xA;    interface IProducerConsumerCollection&lt;'T&gt;&#xA;    interface IReadOnlyCollection&lt;'T&gt;&#xA;    interface seq&lt;'T&gt;&#xA;    interface IEnumerable&#xA;    interface ICollection" />
  <AssemblyInfo>
    <AssemblyName>System.Collections.Concurrent</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.14.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Concurrent.IProducerConsumerCollection&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IReadOnlyCollection&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Diagnostics.DebuggerDisplay("Count = {Count}")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Diagnostics.DebuggerTypeProxy(typeof(System.Collections.Concurrent.SystemThreadingCollection_IProducerConsumerCollectionDebugView`1))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="T"><span data-ttu-id="1829e-101">要儲存在集合中的項目類型。</span><span class="sxs-lookup"><span data-stu-id="1829e-101">The type of the elements to be stored in the collection.</span></span></typeparam>
    <summary><span data-ttu-id="1829e-102">代表安全執行緒的未排序物件集合。</span><span class="sxs-lookup"><span data-stu-id="1829e-102">Represents a thread-safe, unordered collection of objects.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1829e-103">包是適用於儲存物件，當順序並不重要，且不同於集，包支援重複的項目。</span><span class="sxs-lookup"><span data-stu-id="1829e-103">Bags are useful for storing objects when ordering doesn't matter, and unlike sets, bags support duplicates.</span></span> <span data-ttu-id="1829e-104"><xref:System.Collections.Concurrent.ConcurrentBag%601> 是安全執行緒包實作，適用於案例，其中要同時產生並取用儲存封包中的資料相同的執行緒。</span><span class="sxs-lookup"><span data-stu-id="1829e-104"><xref:System.Collections.Concurrent.ConcurrentBag%601> is a thread-safe bag implementation, optimized for scenarios where the same thread will be both producing and consuming data stored in the bag.</span></span>  
  
 <span data-ttu-id="1829e-105"><xref:System.Collections.Concurrent.ConcurrentBag%601> 接受`null`為參考類型的有效值。</span><span class="sxs-lookup"><span data-stu-id="1829e-105"><xref:System.Collections.Concurrent.ConcurrentBag%601> accepts `null` as a valid value for reference types.</span></span>  
  
 <span data-ttu-id="1829e-106">如需詳細資訊，請參閱文章[常見問題集： 是的新並行集合所有無鎖定？](https://blogs.msdn.com/b/pfxteam/archive/2010/01/26/9953725.aspx)中平行程式設計與.NET 部落格。</span><span class="sxs-lookup"><span data-stu-id="1829e-106">For more information, see the entry [FAQ: Are all of the new concurrent collections lock-free?](https://blogs.msdn.com/b/pfxteam/archive/2010/01/26/9953725.aspx) in the Parallel Programming with .NET blog.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1829e-107">下列範例示範如何新增和移除項目<xref:System.Collections.Concurrent.ConcurrentBag%601>:</span><span class="sxs-lookup"><span data-stu-id="1829e-107">The following example shows how to add and remove items from a <xref:System.Collections.Concurrent.ConcurrentBag%601>:</span></span>  
  
 [!code-csharp[System.Collections.Concurrent.ConcurrentBag#1](~/samples/snippets/csharp/api/system.collections.concurrent/concurrentbag/concbag.cs)]
 [!code-vb[System.Collections.Concurrent.ConcurrentBag#1](~/samples/snippets/visualbasic/api/system.collections.concurrent/concurrentbag/concbag.vb)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="1829e-108">所有 public 和 protected 成員<see cref="T:System.Collections.Concurrent.ConcurrentBag`1" />是安全執行緒，且可能會從多個執行緒同時使用。</span><span class="sxs-lookup"><span data-stu-id="1829e-108">All public and protected members of <see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /> are thread-safe and may be used concurrently from multiple threads.</span></span> <span data-ttu-id="1829e-109">不過，透過其中一個介面存取成員<see cref="T:System.Collections.Concurrent.ConcurrentBag`1" />實作，包括擴充方法，不保證是安全執行緒，而且可能需要由呼叫端進行同步處理。</span><span class="sxs-lookup"><span data-stu-id="1829e-109">However, members accessed through one of the interfaces the <see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /> implements, including extension methods, are not guaranteed to be thread safe and may need to be synchronized by the caller.</span></span></threadsafe>
    <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd"><span data-ttu-id="1829e-110">安全執行緒集合</span><span class="sxs-lookup"><span data-stu-id="1829e-110">Thread-Safe Collections</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConcurrentBag ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentBag`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ConcurrentBag();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1829e-111">初始化 <see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="1829e-111">Initializes a new instance of the <see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd"><span data-ttu-id="1829e-112">安全執行緒集合</span><span class="sxs-lookup"><span data-stu-id="1829e-112">Thread-Safe Collections</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConcurrentBag (System.Collections.Generic.IEnumerable&lt;T&gt; collection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;!T&gt; collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentBag`1.#ctor(System.Collections.Generic.IEnumerable{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (collection As IEnumerable(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ConcurrentBag(System::Collections::Generic::IEnumerable&lt;T&gt; ^ collection);" />
      <MemberSignature Language="F#" Value="new System.Collections.Concurrent.ConcurrentBag&lt;'T&gt; : seq&lt;'T&gt; -&gt; System.Collections.Concurrent.ConcurrentBag&lt;'T&gt;" Usage="new System.Collections.Concurrent.ConcurrentBag&lt;'T&gt; collection" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="collection" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="collection"><span data-ttu-id="1829e-113">集合，要將其項目複製至新的 <see cref="T:System.Collections.Concurrent.ConcurrentBag`1" />。</span><span class="sxs-lookup"><span data-stu-id="1829e-113">The collection whose elements are copied to the new <see cref="T:System.Collections.Concurrent.ConcurrentBag`1" />.</span></span></param>
        <summary><span data-ttu-id="1829e-114">初始化 <see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /> 類別的新執行個體，這個類別包含自指定之集合複製過來的項目。</span><span class="sxs-lookup"><span data-stu-id="1829e-114">Initializes a new instance of the <see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /> class that contains elements copied from the specified collection.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1829e-115"><paramref name="collection" /> 是 null 參考 (在 Visual Basic 中為 Nothing)。</span><span class="sxs-lookup"><span data-stu-id="1829e-115"><paramref name="collection" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd"><span data-ttu-id="1829e-116">安全執行緒集合</span><span class="sxs-lookup"><span data-stu-id="1829e-116">Thread-Safe Collections</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentBag`1.Add(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (item As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(T item);" />
      <MemberSignature Language="F#" Value="member this.Add : 'T -&gt; unit" Usage="concurrentBag.Add item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="1829e-117">要加入 <see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /> 的物件。</span><span class="sxs-lookup"><span data-stu-id="1829e-117">The object to be added to the <see cref="T:System.Collections.Concurrent.ConcurrentBag`1" />.</span></span> <span data-ttu-id="1829e-118">值可以是參考類型的 null 參考 (在 Visual Basic 中為 Nothing)。</span><span class="sxs-lookup"><span data-stu-id="1829e-118">The value can be a null reference (Nothing in Visual Basic) for reference types.</span></span></param>
        <summary><span data-ttu-id="1829e-119">將物件加入 <see cref="T:System.Collections.Concurrent.ConcurrentBag`1" />。</span><span class="sxs-lookup"><span data-stu-id="1829e-119">Adds an object to the <see cref="T:System.Collections.Concurrent.ConcurrentBag`1" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd"><span data-ttu-id="1829e-120">安全執行緒集合</span><span class="sxs-lookup"><span data-stu-id="1829e-120">Thread-Safe Collections</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentBag`1.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="concurrentBag.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1829e-121">從 <see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /> 中移除所有的值。</span><span class="sxs-lookup"><span data-stu-id="1829e-121">Removes all values from the <see cref="T:System.Collections.Concurrent.ConcurrentBag`1" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (T[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(!T[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentBag`1.CopyTo(`0[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As T(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(cli::array &lt;T&gt; ^ array, int index);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : 'T[] * int -&gt; unit&#xA;override this.CopyTo : 'T[] * int -&gt; unit" Usage="concurrentBag.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="1829e-122">一維 <see cref="T:System.Array" />，這個項目是從 <see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /> 複製之項目的目的端。</span><span class="sxs-lookup"><span data-stu-id="1829e-122">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from the <see cref="T:System.Collections.Concurrent.ConcurrentBag`1" />.</span></span> <span data-ttu-id="1829e-123"><see cref="T:System.Array" /> 必須有以零為起始的索引。</span><span class="sxs-lookup"><span data-stu-id="1829e-123">The <see cref="T:System.Array" /> must have zero-based indexing.</span></span></param>
        <param name="index"><span data-ttu-id="1829e-124"><paramref name="array" /> 中以零起始的索引，即開始複製的位置。</span><span class="sxs-lookup"><span data-stu-id="1829e-124">The zero-based index in <paramref name="array" /> at which copying begins.</span></span></param>
        <summary><span data-ttu-id="1829e-125">從指定的陣列索引處開始，複製 <see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /> 項目至現有一維 <see cref="T:System.Array" />。</span><span class="sxs-lookup"><span data-stu-id="1829e-125">Copies the <see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /> elements to an existing one-dimensional <see cref="T:System.Array" />, starting at the specified array index.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1829e-126"><paramref name="array" /> 是 null 參考 (在 Visual Basic 中為 Nothing)。</span><span class="sxs-lookup"><span data-stu-id="1829e-126"><paramref name="array" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="1829e-127"><paramref name="index" /> 小於零。</span><span class="sxs-lookup"><span data-stu-id="1829e-127"><paramref name="index" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1829e-128"><paramref name="index" /> 等於或大於 <paramref name="array" /> 的長度，或來源 <see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /> 中的項目個數超過從 <paramref name="index" /> 到目的 <paramref name="array" /> 末尾的可用空間。</span><span class="sxs-lookup"><span data-stu-id="1829e-128"><paramref name="index" /> is equal to or greater than the length of the <paramref name="array" /> -or- the number of elements in the source <see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /> is greater than the available space from <paramref name="index" /> to the end of the destination <paramref name="array" />.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd"><span data-ttu-id="1829e-129">安全執行緒集合</span><span class="sxs-lookup"><span data-stu-id="1829e-129">Thread-Safe Collections</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Concurrent.ConcurrentBag`1.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Collections.Concurrent.ConcurrentBag&lt;'T&gt;.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IReadOnlyCollection`1.Count</InterfaceMember>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1829e-130">取得 <see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /> 中所包含的項目數。</span><span class="sxs-lookup"><span data-stu-id="1829e-130">Gets the number of elements contained in the <see cref="T:System.Collections.Concurrent.ConcurrentBag`1" />.</span></span></summary>
        <value><span data-ttu-id="1829e-131"><see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /> 中所包含的項目數。</span><span class="sxs-lookup"><span data-stu-id="1829e-131">The number of elements contained in the <see cref="T:System.Collections.Concurrent.ConcurrentBag`1" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1829e-132">傳回的計數表示目前時間的快照集的封包內容。</span><span class="sxs-lookup"><span data-stu-id="1829e-132">The count returned represents a moment-in-time snapshot of the contents of the bag.</span></span> <span data-ttu-id="1829e-133">可能是其他執行緒可能會新增或移除項目，只有在您存取之後，立即`Count`屬性。</span><span class="sxs-lookup"><span data-stu-id="1829e-133">It is possible that other threads might add or remove items immediately after you access the `Count` property.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd"><span data-ttu-id="1829e-134">安全執行緒集合</span><span class="sxs-lookup"><span data-stu-id="1829e-134">Thread-Safe Collections</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerator&lt;T&gt; GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;!T&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentBag`1.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerator&lt;T&gt; ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;'T&gt;&#xA;override this.GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;'T&gt;" Usage="concurrentBag.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1829e-135">傳回在 <see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /> 中逐一查看的列舉值。</span><span class="sxs-lookup"><span data-stu-id="1829e-135">Returns an enumerator that iterates through the <see cref="T:System.Collections.Concurrent.ConcurrentBag`1" />.</span></span></summary>
        <returns><span data-ttu-id="1829e-136"><see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /> 內容的列舉程式。</span><span class="sxs-lookup"><span data-stu-id="1829e-136">An enumerator for the contents of the <see cref="T:System.Collections.Concurrent.ConcurrentBag`1" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1829e-137">列舉代表目前的時間快照的封包的內容。</span><span class="sxs-lookup"><span data-stu-id="1829e-137">The enumeration represents a moment-in-time snapshot of the contents of the bag.</span></span> <span data-ttu-id="1829e-138">它不會反映任何更新之後，集合<xref:System.Collections.Concurrent.ConcurrentBag%601.GetEnumerator%2A>呼叫。</span><span class="sxs-lookup"><span data-stu-id="1829e-138">It does not reflect any updates to the collection after <xref:System.Collections.Concurrent.ConcurrentBag%601.GetEnumerator%2A> was called.</span></span> <span data-ttu-id="1829e-139">列舉值安全地使用同時讀取和寫入封包。</span><span class="sxs-lookup"><span data-stu-id="1829e-139">The enumerator is safe to use concurrently with reads from and writes to the bag.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd"><span data-ttu-id="1829e-140">安全執行緒集合</span><span class="sxs-lookup"><span data-stu-id="1829e-140">Thread-Safe Collections</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="IsEmpty">
      <MemberSignature Language="C#" Value="public bool IsEmpty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEmpty" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Concurrent.ConcurrentBag`1.IsEmpty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsEmpty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEmpty { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEmpty : bool" Usage="System.Collections.Concurrent.ConcurrentBag&lt;'T&gt;.IsEmpty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1829e-141">取得值，這個值指出 <see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /> 是否是空的。</span><span class="sxs-lookup"><span data-stu-id="1829e-141">Gets a value that indicates whether the <see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /> is empty.</span></span></summary>
        <value><span data-ttu-id="1829e-142">如果 <see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /> 是空的則為 true，否則為 false。</span><span class="sxs-lookup"><span data-stu-id="1829e-142">true if the <see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /> is empty; otherwise, false.</span></span></value>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd"><span data-ttu-id="1829e-143">安全執行緒集合</span><span class="sxs-lookup"><span data-stu-id="1829e-143">Thread-Safe Collections</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Concurrent.IProducerConsumerCollection&lt;T&gt;.TryAdd">
      <MemberSignature Language="C#" Value="bool IProducerConsumerCollection&lt;T&gt;.TryAdd (T item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.Concurrent.IProducerConsumerCollection&lt;T&gt;.TryAdd(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentBag`1.System#Collections#Concurrent#IProducerConsumerCollection&lt;T&gt;#TryAdd(`0)" />
      <MemberSignature Language="VB.NET" Value="Function TryAdd (item As T) As Boolean Implements IProducerConsumerCollection(Of T).TryAdd" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.Concurrent.IProducerConsumerCollection&lt;T&gt;.TryAdd(T item) = System::Collections::Concurrent::IProducerConsumerCollection&lt;T&gt;::TryAdd;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="1829e-144">要加入 <see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /> 的物件。</span><span class="sxs-lookup"><span data-stu-id="1829e-144">The object to be added to the <see cref="T:System.Collections.Concurrent.ConcurrentBag`1" />.</span></span> <span data-ttu-id="1829e-145">值可以是參考類型的 null 參考 (在 Visual Basic 中為 Nothing)。</span><span class="sxs-lookup"><span data-stu-id="1829e-145">The value can be a null reference (Nothing in Visual Basic) for reference types.</span></span></param>
        <summary><span data-ttu-id="1829e-146">嘗試將物件加入至 <see cref="T:System.Collections.Concurrent.ConcurrentBag`1" />。</span><span class="sxs-lookup"><span data-stu-id="1829e-146">Attempts to add an object to the <see cref="T:System.Collections.Concurrent.ConcurrentBag`1" />.</span></span></summary>
        <returns><span data-ttu-id="1829e-147">一律傳回 true</span><span class="sxs-lookup"><span data-stu-id="1829e-147">Always returns true</span></span></returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd"><span data-ttu-id="1829e-148">安全執行緒集合</span><span class="sxs-lookup"><span data-stu-id="1829e-148">Thread-Safe Collections</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentBag`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ array, int index) = System::Collections::ICollection::CopyTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="1829e-149">一維 <see cref="T:System.Array" />，這個項目是從 <see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /> 複製之項目的目的端。</span><span class="sxs-lookup"><span data-stu-id="1829e-149">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from the <see cref="T:System.Collections.Concurrent.ConcurrentBag`1" />.</span></span> <span data-ttu-id="1829e-150"><see cref="T:System.Array" /> 必須有以零為起始的索引。</span><span class="sxs-lookup"><span data-stu-id="1829e-150">The <see cref="T:System.Array" /> must have zero-based indexing.</span></span></param>
        <param name="index"><span data-ttu-id="1829e-151"><paramref name="array" /> 中以零起始的索引，即開始複製的位置。</span><span class="sxs-lookup"><span data-stu-id="1829e-151">The zero-based index in <paramref name="array" /> at which copying begins.</span></span></param>
        <summary><span data-ttu-id="1829e-152">從特定的 <see cref="T:System.Collections.ICollection" /> 索引開始，將 <see cref="T:System.Array" /> 的項目複製至 <see cref="T:System.Array" />。</span><span class="sxs-lookup"><span data-stu-id="1829e-152">Copies the elements of the <see cref="T:System.Collections.ICollection" /> to an <see cref="T:System.Array" />, starting at a particular <see cref="T:System.Array" /> index.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1829e-153"><paramref name="array" /> 是 null 參考 (在 Visual Basic 中為 Nothing)。</span><span class="sxs-lookup"><span data-stu-id="1829e-153"><paramref name="array" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="1829e-154"><paramref name="index" /> 小於零。</span><span class="sxs-lookup"><span data-stu-id="1829e-154"><paramref name="index" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1829e-155"><paramref name="array" /> 是多維的。</span><span class="sxs-lookup"><span data-stu-id="1829e-155"><paramref name="array" /> is multidimensional.</span></span> <span data-ttu-id="1829e-156">或 <paramref name="array" /> 沒有以零起始的索引。</span><span class="sxs-lookup"><span data-stu-id="1829e-156">-or- <paramref name="array" /> does not have zero-based indexing.</span></span> <span data-ttu-id="1829e-157">或 <paramref name="index" /> 是等於或大於 <paramref name="array" /> 的長度，或者來源 <see cref="T:System.Collections.ICollection" /> 中的項目數大於從 <paramref name="index" /> 到目的地 <paramref name="array" /> 結尾的可用空間。</span><span class="sxs-lookup"><span data-stu-id="1829e-157">-or- <paramref name="index" /> is equal to or greater than the length of the <paramref name="array" /> -or- The number of elements in the source <see cref="T:System.Collections.ICollection" /> is greater than the available space from <paramref name="index" /> to the end of the destination <paramref name="array" />.</span></span> <span data-ttu-id="1829e-158">或來源 <see cref="T:System.Collections.ICollection" /> 的型別無法自動轉換為目的 <paramref name="array" /> 的型別。</span><span class="sxs-lookup"><span data-stu-id="1829e-158">-or- The type of the source <see cref="T:System.Collections.ICollection" /> cannot be cast automatically to the type of the destination <paramref name="array" />.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd"><span data-ttu-id="1829e-159">安全執行緒集合</span><span class="sxs-lookup"><span data-stu-id="1829e-159">Thread-Safe Collections</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Concurrent.ConcurrentBag`1.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::ICollection::IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1829e-160">取得值，這個值表示對 <see cref="T:System.Collections.ICollection" /> 的存取是否已經與 SyncRoot 同步。</span><span class="sxs-lookup"><span data-stu-id="1829e-160">Gets a value indicating whether access to the <see cref="T:System.Collections.ICollection" /> is synchronized with the SyncRoot.</span></span></summary>
        <value><span data-ttu-id="1829e-161">如果對 <see cref="T:System.Collections.ICollection" /> 的存取與 SyncRoot 同步則為 true，否則為 false。</span><span class="sxs-lookup"><span data-stu-id="1829e-161">true if access to the <see cref="T:System.Collections.ICollection" /> is synchronized with the SyncRoot; otherwise, false.</span></span> <span data-ttu-id="1829e-162">對於 <see cref="T:System.Collections.Concurrent.ConcurrentBag`1" />，這個屬性永遠傳回 false。</span><span class="sxs-lookup"><span data-stu-id="1829e-162">For <see cref="T:System.Collections.Concurrent.ConcurrentBag`1" />, this property always returns false.</span></span></value>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd"><span data-ttu-id="1829e-163">安全執行緒集合</span><span class="sxs-lookup"><span data-stu-id="1829e-163">Thread-Safe Collections</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Concurrent.ConcurrentBag`1.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::ICollection::SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1829e-164">取得可用以同步存取 <see cref="T:System.Collections.ICollection" /> 的物件。</span><span class="sxs-lookup"><span data-stu-id="1829e-164">Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.</span></span> <span data-ttu-id="1829e-165">不支援這個屬性。</span><span class="sxs-lookup"><span data-stu-id="1829e-165">This property is not supported.</span></span></summary>
        <value><span data-ttu-id="1829e-166">傳回 null (在 Visual Basic 中為 Nothing)。</span><span class="sxs-lookup"><span data-stu-id="1829e-166">Returns null  (Nothing in Visual Basic).</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="1829e-167">不支援 SyncRoot 屬性。</span><span class="sxs-lookup"><span data-stu-id="1829e-167">The SyncRoot property is not supported.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd"><span data-ttu-id="1829e-168">安全執行緒集合</span><span class="sxs-lookup"><span data-stu-id="1829e-168">Thread-Safe Collections</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentBag`1.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1829e-169">傳回在 <see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /> 中逐一查看的列舉值。</span><span class="sxs-lookup"><span data-stu-id="1829e-169">Returns an enumerator that iterates through the <see cref="T:System.Collections.Concurrent.ConcurrentBag`1" />.</span></span></summary>
        <returns><span data-ttu-id="1829e-170"><see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /> 內容的列舉程式。</span><span class="sxs-lookup"><span data-stu-id="1829e-170">An enumerator for the contents of the <see cref="T:System.Collections.Concurrent.ConcurrentBag`1" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1829e-171">列舉的項目代表時間目前快照集的封包的內容。</span><span class="sxs-lookup"><span data-stu-id="1829e-171">The items enumerated represent a moment-in-time snapshot of the contents of the bag.</span></span> <span data-ttu-id="1829e-172">它不會反映任何更新之後，集合<xref:System.Collections.Concurrent.ConcurrentBag%601.GetEnumerator%2A>呼叫。</span><span class="sxs-lookup"><span data-stu-id="1829e-172">It does not reflect any update to the collection after <xref:System.Collections.Concurrent.ConcurrentBag%601.GetEnumerator%2A> was called.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToArray">
      <MemberSignature Language="C#" Value="public T[] ToArray ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !T[] ToArray() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentBag`1.ToArray" />
      <MemberSignature Language="VB.NET" Value="Public Function ToArray () As T()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;T&gt; ^ ToArray();" />
      <MemberSignature Language="F#" Value="abstract member ToArray : unit -&gt; 'T[]&#xA;override this.ToArray : unit -&gt; 'T[]" Usage="concurrentBag.ToArray " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1829e-173">將 <see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /> 項目複製到新的陣列。</span><span class="sxs-lookup"><span data-stu-id="1829e-173">Copies the <see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /> elements to a new array.</span></span></summary>
        <returns><span data-ttu-id="1829e-174">新的陣列，其中包含從 <see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /> 複製之項目的快照。</span><span class="sxs-lookup"><span data-stu-id="1829e-174">A new array containing a snapshot of elements copied from the <see cref="T:System.Collections.Concurrent.ConcurrentBag`1" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd"><span data-ttu-id="1829e-175">安全執行緒集合</span><span class="sxs-lookup"><span data-stu-id="1829e-175">Thread-Safe Collections</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TryPeek">
      <MemberSignature Language="C#" Value="public bool TryPeek (out T result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryPeek([out] !T&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentBag`1.TryPeek(`0@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryPeek (ByRef result As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryPeek([Runtime::InteropServices::Out] T % result);" />
      <MemberSignature Language="F#" Value="member this.TryPeek :  -&gt; bool" Usage="concurrentBag.TryPeek result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="T" RefType="out" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="1829e-176">當這個方法傳回時，<paramref name="result" /> 會包含來自 <see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /> 的物件；如果作業失敗，則包含預設值 <c>T</c>。</span><span class="sxs-lookup"><span data-stu-id="1829e-176">When this method returns, <paramref name="result" /> contains an object from the <see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /> or the default value of <c>T</c> if the operation failed.</span></span></param>
        <summary><span data-ttu-id="1829e-177">嘗試從 <see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /> 傳回物件，但不將它移除。</span><span class="sxs-lookup"><span data-stu-id="1829e-177">Attempts to return an object from the <see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /> without removing it.</span></span></summary>
        <returns><span data-ttu-id="1829e-178">如果成功傳回物件則為 true，否則為 false。</span><span class="sxs-lookup"><span data-stu-id="1829e-178">true if an object was returned successfully; otherwise, false.</span></span></returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd"><span data-ttu-id="1829e-179">安全執行緒集合</span><span class="sxs-lookup"><span data-stu-id="1829e-179">Thread-Safe Collections</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TryTake">
      <MemberSignature Language="C#" Value="public bool TryTake (out T result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryTake([out] !T&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentBag`1.TryTake(`0@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryTake (ByRef result As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool TryTake([Runtime::InteropServices::Out] T % result);" />
      <MemberSignature Language="F#" Value="abstract member TryTake :  -&gt; bool&#xA;override this.TryTake :  -&gt; bool" Usage="concurrentBag.TryTake result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="T" RefType="out" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="1829e-180">當這個方法傳回時，<paramref name="result" /> 會包含已自 <see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /> 移除的物件；如果 Bag 是空的，則包含預設值 <c>T</c>。</span><span class="sxs-lookup"><span data-stu-id="1829e-180">When this method returns, <paramref name="result" /> contains the object removed from the <see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /> or the default value of <c>T</c> if the bag is empty.</span></span></param>
        <summary><span data-ttu-id="1829e-181">嘗試從 <see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /> 中移除及傳回物件。</span><span class="sxs-lookup"><span data-stu-id="1829e-181">Attempts to remove and return an object from the <see cref="T:System.Collections.Concurrent.ConcurrentBag`1" />.</span></span></summary>
        <returns><span data-ttu-id="1829e-182">如果成功移除物件則為 true，否則為 false。</span><span class="sxs-lookup"><span data-stu-id="1829e-182">true if an object was removed successfully; otherwise, false.</span></span></returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd"><span data-ttu-id="1829e-183">安全執行緒集合</span><span class="sxs-lookup"><span data-stu-id="1829e-183">Thread-Safe Collections</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>