<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ConcurrentBag`1.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac57cb060b3ef6bada101df4e3af916163ffe846aea.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7cb060b3ef6bada101df4e3af916163ffe846aea</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.ConcurrentBag`1">
          <source>The type of the elements to be stored in the collection.</source>
          <target state="translated">要儲存在集合中的項目類型。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Collections.Concurrent.ConcurrentBag`1">
          <source>Represents a thread-safe, unordered collection of objects.</source>
          <target state="translated">代表安全執行緒的未排序物件集合。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.ConcurrentBag`1">
          <source>Bags are useful for storing objects when ordering doesn't matter, and unlike sets, bags support duplicates.</source>
          <target state="translated">包適合用於儲存物件，當順序並不重要，且不同於集包重複項目。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.ConcurrentBag`1">
          <source><ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentBag%601&gt;</ph> is a thread-safe bag implementation, optimized for scenarios where the same thread will be both producing and consuming data stored in the bag.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentBag%601&gt;</ph> 是安全執行緒包實作，適用於案例，其中在相同的執行緒會同時產生並使用儲存在屬性包中的資料。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.ConcurrentBag`1">
          <source><ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentBag%601&gt;</ph> accepts <ph id="ph2">`null`</ph> as a valid value for reference types.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentBag%601&gt;</ph> 接受<ph id="ph2">`null`</ph>做為參考類型的有效的值。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.ConcurrentBag`1">
          <source>For more information, see the entry <bpt id="p1">[</bpt>FAQ: Are all of the new concurrent collections lock-free?<ept id="p1">](http://blogs.msdn.com/b/pfxteam/archive/2010/01/26/9953725.aspx)</ept> in the Parallel Programming with .NET blog.</source>
          <target state="translated">如需詳細資訊，請參閱文章<bpt id="p1">[</bpt>常見問題集： 是的新並行集合的所有無鎖定？<ept id="p1">](http://blogs.msdn.com/b/pfxteam/archive/2010/01/26/9953725.aspx)</ept>中平行程式設計.NET 部落格。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.ConcurrentBag`1">
          <source>The following example shows how to add and remove items from a <ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentBag%601&gt;</ph>:</source>
          <target state="translated">下列範例示範如何加入和移除項目<ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentBag%601&gt;</ph>:</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.ConcurrentBag`1">
          <source>All public and protected members of <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /&gt;</ph> are thread-safe and may be used concurrently from multiple threads.</source>
          <target state="translated">所有的 public 和 protected 成員的<ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /&gt;</ph>是安全執行緒，且可能會從多個執行緒同時使用。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.ConcurrentBag`1">
          <source>However, members accessed through one of the interfaces the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /&gt;</ph> implements, including extension methods, are not guaranteed to be thread safe and may need to be synchronized by the caller.</source>
          <target state="translated">不過，透過其中一個介面存取成員<ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /&gt;</ph>實作，包含擴充方法不保證是安全執行緒，而且可能需要由呼叫端同步。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentBag`1.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentBag`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
          <source>The collection whose elements are copied to the new <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /&gt;</ph>.</source>
          <target state="translated">集合，要將其項目複製至新的 <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentBag`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /&gt;</ph> class that contains elements copied from the specified collection.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /&gt;</ph> 類別的新執行個體，這個類別包含自指定之集合複製過來的項目。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentBag`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
          <source><ph id="ph1">&lt;paramref name="collection" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="collection" /&gt;</ph> 是 null 參考 (在 Visual Basic 中為 Nothing)。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentBag`1.Add(`0)">
          <source>The object to be added to the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /&gt;</ph>.</source>
          <target state="translated">要加入 <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /&gt;</ph> 的物件。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentBag`1.Add(`0)">
          <source>The value can be a null reference (Nothing in Visual Basic) for reference types.</source>
          <target state="translated">值可以是參考類型的 null 參考 (在 Visual Basic 中為 Nothing)。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentBag`1.Add(`0)">
          <source>Adds an object to the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /&gt;</ph>.</source>
          <target state="translated">將物件加入 <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentBag`1.CopyTo(`0[],System.Int32)">
          <source>The one-dimensional <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> that is the destination of the elements copied from the <ph id="ph2">&lt;see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /&gt;</ph>.</source>
          <target state="translated">一維 <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph>，這個項目是從 <ph id="ph2">&lt;see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /&gt;</ph> 複製之項目的目的端。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentBag`1.CopyTo(`0[],System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> must have zero-based indexing.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> 必須有以零為起始的索引。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentBag`1.CopyTo(`0[],System.Int32)">
          <source>The zero-based index in <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> at which copying begins.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> 中以零起始的索引，複製作業從此處開始。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentBag`1.CopyTo(`0[],System.Int32)">
          <source>Copies the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /&gt;</ph> elements to an existing one-dimensional <ph id="ph2">&lt;see cref="T:System.Array" /&gt;</ph>, starting at the specified array index.</source>
          <target state="translated">從指定的陣列索引處開始，複製 <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /&gt;</ph> 項目至現有一維 <ph id="ph2">&lt;see cref="T:System.Array" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentBag`1.CopyTo(`0[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> 是 null 參考 (在 Visual Basic 中為 Nothing)。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentBag`1.CopyTo(`0[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> 小於零。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentBag`1.CopyTo(`0[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is equal to or greater than the length of the <ph id="ph2">&lt;paramref name="array" /&gt;</ph> -or- the number of elements in the source <ph id="ph3">&lt;see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /&gt;</ph> is greater than the available space from <ph id="ph4">&lt;paramref name="index" /&gt;</ph> to the end of the destination <ph id="ph5">&lt;paramref name="array" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> 等於或大於 <ph id="ph2">&lt;paramref name="array" /&gt;</ph> 的長度，或來源 <ph id="ph3">&lt;see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /&gt;</ph> 中的項目個數超過從 <ph id="ph4">&lt;paramref name="index" /&gt;</ph> 到目的 <ph id="ph5">&lt;paramref name="array" /&gt;</ph> 末尾的可用空間。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="P:System.Collections.Concurrent.ConcurrentBag`1.Count">
          <source>Gets the number of elements contained in the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /&gt;</ph>.</source>
          <target state="translated">取得 <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /&gt;</ph> 中所包含的項目數。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Concurrent.ConcurrentBag`1.Count">
          <source>The number of elements contained in the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /&gt;</ph> 中所包含的項目數。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Concurrent.ConcurrentBag`1.Count">
          <source>The count returned represents a moment-in-time snapshot of the contents of the bag.</source>
          <target state="translated">傳回的計數表示目前時間的快照集的屬性包內容。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Concurrent.ConcurrentBag`1.Count">
          <source>It is possible that other threads might add or remove items immediately after you access the <ph id="ph1">`Count`</ph> property.</source>
          <target state="translated">可能是其他執行緒可能會加入或移除項目，只有在您存取之後，立即<ph id="ph1">`Count`</ph>屬性。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentBag`1.GetEnumerator">
          <source>Returns an enumerator that iterates through the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /&gt;</ph>.</source>
          <target state="translated">傳回在 <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /&gt;</ph> 中逐一查看的列舉值。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentBag`1.GetEnumerator">
          <source>An enumerator for the contents of the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /&gt;</ph> 內容的列舉程式。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.ConcurrentBag`1.GetEnumerator">
          <source>The enumeration represents a moment-in-time snapshot of the contents of the bag.</source>
          <target state="translated">列舉，代表目前時間的快照集的屬性包內容。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.ConcurrentBag`1.GetEnumerator">
          <source>It does not reflect any updates to the collection after <ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentBag%601.GetEnumerator%2A&gt;</ph> was called.</source>
          <target state="translated">它並不會反映任何更新之後集合<ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentBag%601.GetEnumerator%2A&gt;</ph>呼叫。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.ConcurrentBag`1.GetEnumerator">
          <source>The enumerator is safe to use concurrently with reads from and writes to the bag.</source>
          <target state="translated">列舉值會安全地使用並行的讀取次數，並寫入屬性包。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="P:System.Collections.Concurrent.ConcurrentBag`1.IsEmpty">
          <source>Gets a value that indicates whether the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /&gt;</ph> is empty.</source>
          <target state="translated">取得值，這個值指出 <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /&gt;</ph> 是否是空的。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Concurrent.ConcurrentBag`1.IsEmpty">
          <source>true if the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /&gt;</ph> is empty; otherwise, false.</source>
          <target state="translated">如果 <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /&gt;</ph> 是空的則為 true，否則為 false。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentBag`1.System#Collections#Concurrent#IProducerConsumerCollection&amp;lt;T&amp;gt;#TryAdd(`0)">
          <source>The object to be added to the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /&gt;</ph>.</source>
          <target state="translated">要加入 <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /&gt;</ph> 的物件。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentBag`1.System#Collections#Concurrent#IProducerConsumerCollection&amp;lt;T&amp;gt;#TryAdd(`0)">
          <source>The value can be a null reference (Nothing in Visual Basic) for reference types.</source>
          <target state="translated">值可以是參考類型的 null 參考 (在 Visual Basic 中為 Nothing)。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentBag`1.System#Collections#Concurrent#IProducerConsumerCollection&amp;lt;T&amp;gt;#TryAdd(`0)">
          <source>Attempts to add an object to the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /&gt;</ph>.</source>
          <target state="translated">嘗試將物件加入至 <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentBag`1.System#Collections#Concurrent#IProducerConsumerCollection&amp;lt;T&amp;gt;#TryAdd(`0)">
          <source>Always returns true</source>
          <target state="translated">一律傳回 true</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentBag`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The one-dimensional <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> that is the destination of the elements copied from the <ph id="ph2">&lt;see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /&gt;</ph>.</source>
          <target state="translated">一維 <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph>，這個項目是從 <ph id="ph2">&lt;see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /&gt;</ph> 複製之項目的目的端。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentBag`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> must have zero-based indexing.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> 必須有以零為起始的索引。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentBag`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The zero-based index in <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> at which copying begins.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> 中以零起始的索引，複製作業從此處開始。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentBag`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>Copies the elements of the <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> to an <ph id="ph2">&lt;see cref="T:System.Array" /&gt;</ph>, starting at a particular <ph id="ph3">&lt;see cref="T:System.Array" /&gt;</ph> index.</source>
          <target state="translated">從特定的 <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> 索引開始，將 <ph id="ph2">&lt;see cref="T:System.Array" /&gt;</ph> 的項目複製至 <ph id="ph3">&lt;see cref="T:System.Array" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentBag`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> 是 null 參考 (在 Visual Basic 中為 Nothing)。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentBag`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> 小於零。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentBag`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is multidimensional.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> 是多維的。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentBag`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>-or- <ph id="ph1">&lt;paramref name="array" /&gt;</ph> does not have zero-based indexing.</source>
          <target state="translated">或 <ph id="ph1">&lt;paramref name="array" /&gt;</ph> 沒有以零起始的索引。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentBag`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>-or- <ph id="ph1">&lt;paramref name="index" /&gt;</ph> is equal to or greater than the length of the <ph id="ph2">&lt;paramref name="array" /&gt;</ph> -or- The number of elements in the source <ph id="ph3">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> is greater than the available space from <ph id="ph4">&lt;paramref name="index" /&gt;</ph> to the end of the destination <ph id="ph5">&lt;paramref name="array" /&gt;</ph>.</source>
          <target state="translated">或 <ph id="ph1">&lt;paramref name="index" /&gt;</ph> 是等於或大於 <ph id="ph2">&lt;paramref name="array" /&gt;</ph> 的長度，或者來源 <ph id="ph3">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> 中的項目數大於從 <ph id="ph4">&lt;paramref name="index" /&gt;</ph> 到目的地 <ph id="ph5">&lt;paramref name="array" /&gt;</ph> 結尾的可用空間。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentBag`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>-or- The type of the source <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> cannot be cast automatically to the type of the destination <ph id="ph2">&lt;paramref name="array" /&gt;</ph>.</source>
          <target state="translated">或來源 <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> 的型別無法自動轉換為目的 <ph id="ph2">&lt;paramref name="array" /&gt;</ph> 的型別。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="P:System.Collections.Concurrent.ConcurrentBag`1.System#Collections#ICollection#IsSynchronized">
          <source>Gets a value indicating whether access to the <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> is synchronized with the SyncRoot.</source>
          <target state="translated">取得值，這個值表示對 <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> 的存取是否已經與 SyncRoot 同步。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Concurrent.ConcurrentBag`1.System#Collections#ICollection#IsSynchronized">
          <source>true if access to the <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> is synchronized with the SyncRoot; otherwise, false.</source>
          <target state="translated">如果對 <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> 的存取與 SyncRoot 同步則為 true，否則為 false。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Concurrent.ConcurrentBag`1.System#Collections#ICollection#IsSynchronized">
          <source>For <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /&gt;</ph>, this property always returns false.</source>
          <target state="translated">對於 <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /&gt;</ph>，這個屬性永遠傳回 false。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="P:System.Collections.Concurrent.ConcurrentBag`1.System#Collections#ICollection#SyncRoot">
          <source>Gets an object that can be used to synchronize access to the <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>.</source>
          <target state="translated">取得可用以同步存取 <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> 的物件。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="P:System.Collections.Concurrent.ConcurrentBag`1.System#Collections#ICollection#SyncRoot">
          <source>This property is not supported.</source>
          <target state="translated">不支援這個屬性。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Concurrent.ConcurrentBag`1.System#Collections#ICollection#SyncRoot">
          <source>Returns null  (Nothing in Visual Basic).</source>
          <target state="translated">傳回 null (在 Visual Basic 中為 Nothing)。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="P:System.Collections.Concurrent.ConcurrentBag`1.System#Collections#ICollection#SyncRoot">
          <source>The SyncRoot property is not supported.</source>
          <target state="translated">不支援 SyncRoot 屬性。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentBag`1.System#Collections#IEnumerable#GetEnumerator">
          <source>Returns an enumerator that iterates through the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /&gt;</ph>.</source>
          <target state="translated">傳回在 <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /&gt;</ph> 中逐一查看的列舉值。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentBag`1.System#Collections#IEnumerable#GetEnumerator">
          <source>An enumerator for the contents of the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /&gt;</ph> 內容的列舉程式。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.ConcurrentBag`1.System#Collections#IEnumerable#GetEnumerator">
          <source>The items enumerated represent a moment-in-time snapshot of the contents of the bag.</source>
          <target state="translated">列舉的項目代表目前時間的快照集的屬性包內容。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.ConcurrentBag`1.System#Collections#IEnumerable#GetEnumerator">
          <source>It does not reflect any update to the collection after <ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentBag%601.GetEnumerator%2A&gt;</ph> was called.</source>
          <target state="translated">它並不會反映更新後的集合可以<ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentBag%601.GetEnumerator%2A&gt;</ph>呼叫。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentBag`1.ToArray">
          <source>Copies the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /&gt;</ph> elements to a new array.</source>
          <target state="translated">將 <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /&gt;</ph> 項目複製到新的陣列。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentBag`1.ToArray">
          <source>A new array containing a snapshot of elements copied from the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /&gt;</ph>.</source>
          <target state="translated">新的陣列，其中包含從 <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /&gt;</ph> 複製之項目的快照。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentBag`1.TryPeek(`0@)">
          <source>When this method returns, <bpt id="p1">&lt;c&gt;</bpt>result<ept id="p1">&lt;/c&gt;</ept> contains an object from the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /&gt;</ph> or the default value of <bpt id="p2">&lt;c&gt;</bpt>T<ept id="p2">&lt;/c&gt;</ept> if the operation failed.</source>
          <target state="translated">這個方法傳回時，<bpt id="p1">&lt;c&gt;</bpt>結果<ept id="p1">&lt;/c&gt;</ept> 會包含來自 <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /&gt;</ph> 的物件，如果作業失敗，則包含預設值 <bpt id="p2">&lt;c&gt;</bpt>T<ept id="p2">&lt;/c&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentBag`1.TryPeek(`0@)">
          <source>Attempts to return an object from the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /&gt;</ph> without removing it.</source>
          <target state="translated">嘗試從 <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /&gt;</ph> 傳回物件，但不將它移除。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentBag`1.TryPeek(`0@)">
          <source>true if and object was returned successfully; otherwise, false.</source>
          <target state="translated">如果成功傳回物件則為 true，否則為 false。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentBag`1.TryTake(`0@)">
          <source>When this method returns, <bpt id="p1">&lt;c&gt;</bpt>result<ept id="p1">&lt;/c&gt;</ept> contains the object removed from the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /&gt;</ph> or the default value of <bpt id="p2">&lt;c&gt;</bpt>T<ept id="p2">&lt;/c&gt;</ept> if the bag is empty.</source>
          <target state="translated">這個方法傳回時，<bpt id="p1">&lt;c&gt;</bpt>結果<ept id="p1">&lt;/c&gt;</ept> 會包含已自 <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /&gt;</ph> 移除的物件，如果封包是空的，則包含預設值 <bpt id="p2">&lt;c&gt;</bpt>T<ept id="p2">&lt;/c&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentBag`1.TryTake(`0@)">
          <source>Attempts to remove and return an object from the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /&gt;</ph>.</source>
          <target state="translated">嘗試從 <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.ConcurrentBag`1" /&gt;</ph> 中移除及傳回物件。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.ConcurrentBag`1.TryTake(`0@)">
          <source>true if an object was removed successfully; otherwise, false.</source>
          <target state="translated">如果成功移除物件則為 true，否則為 false。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>