<Type Name="IProducerConsumerCollection&lt;T&gt;" FullName="System.Collections.Concurrent.IProducerConsumerCollection&lt;T&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4681b8d8218184ae4a7d37291d953f7ebc6a5846" /><Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="11/20/2018" /><Meta Name="ms.locfileid" Value="52235417" /></Metadata><TypeSignature Language="C#" Value="public interface IProducerConsumerCollection&lt;T&gt; : System.Collections.Generic.IEnumerable&lt;T&gt;, System.Collections.ICollection" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IProducerConsumerCollection`1&lt;T&gt; implements class System.Collections.Generic.IEnumerable`1&lt;!T&gt;, class System.Collections.ICollection, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Concurrent.IProducerConsumerCollection`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IProducerConsumerCollection(Of T)&#xA;Implements ICollection, IEnumerable(Of T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public interface class IProducerConsumerCollection : System::Collections::Generic::IEnumerable&lt;T&gt;, System::Collections::ICollection" />
  <TypeSignature Language="F#" Value="type IProducerConsumerCollection&lt;'T&gt; = interface&#xA;    interface seq&lt;'T&gt;&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Collections.Concurrent</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.14.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="T"><span data-ttu-id="0671a-101">指定集合中項目的型別。</span><span class="sxs-lookup"><span data-stu-id="0671a-101">Specifies the type of elements in the collection.</span></span></typeparam>
    <summary><span data-ttu-id="0671a-102">定義方法來管理適用於生產者/消費者使用的安全執行緒集合。</span><span class="sxs-lookup"><span data-stu-id="0671a-102">Defines methods to manipulate thread-safe collections intended for producer/consumer usage.</span></span> <span data-ttu-id="0671a-103">此介面提供生產者/消費者集合的統一表示，因此較高層級的抽象 (如 <see cref="T:System.Collections.Concurrent.BlockingCollection`1" />) 可以使用集合做為基礎儲存機制。</span><span class="sxs-lookup"><span data-stu-id="0671a-103">This interface provides a unified representation for producer/consumer collections so that higher level abstractions such as <see cref="T:System.Collections.Concurrent.BlockingCollection`1" /> can use the collection as the underlying storage mechanism.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0671a-104">如需詳細資訊，請參閱 <<c0> [ 安全執行緒集合](https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd)並[BlockingCollection 概觀](~/docs/standard/collections/thread-safe/blockingcollection-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="0671a-104">For more information, see [Thread-Safe Collections](https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd) and [BlockingCollection Overview](~/docs/standard/collections/thread-safe/blockingcollection-overview.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0671a-105">下列範例示範實作堆疊資料結構<xref:System.Collections.Concurrent.IProducerConsumerCollection%601?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="0671a-105">The following example shows a stack data structure that implements <xref:System.Collections.Concurrent.IProducerConsumerCollection%601?displayProperty=nameWithType>.</span></span>  
  
 [!code-csharp[System.Collections.Concurrent.IProducerConsumerCollection#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.concurrent.iproducerconsumercollection/cs/iprodcon.cs#1)]
 [!code-vb[System.Collections.Concurrent.IProducerConsumerCollection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.concurrent.iproducerconsumercollection/vb/iprodcon.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="0671a-106">這個介面的所有實作必須都啟用此介面用於同時從多個執行緒的所有成員。</span><span class="sxs-lookup"><span data-stu-id="0671a-106">All implementations of this interface must enable all members of this interface to be used concurrently from multiple threads.</span></span></threadsafe>
    <related type="Article" href="https://msdn.microsoft.com/library/4c2492de-3876-4873-b5a1-000bb404d770"><span data-ttu-id="0671a-107">如何： 將界限和封鎖的集合類別的功能</span><span class="sxs-lookup"><span data-stu-id="0671a-107">How to: Add Bounding and Blocking Functionality to a Collection Class</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (T[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(!T[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.IProducerConsumerCollection`1.CopyTo(`0[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As T(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;T&gt; ^ array, int index);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : 'T[] * int -&gt; unit" Usage="iProducerConsumerCollection.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="0671a-108">一維 <see cref="T:System.Array" />，這個項目是從 <see cref="T:System.Collections.Concurrent.IProducerConsumerCollection`1" /> 複製之項目的目的端。</span><span class="sxs-lookup"><span data-stu-id="0671a-108">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from the <see cref="T:System.Collections.Concurrent.IProducerConsumerCollection`1" />.</span></span>  
  
<span data-ttu-id="0671a-109">陣列必須有以零為起始的索引。</span><span class="sxs-lookup"><span data-stu-id="0671a-109">The array must have zero-based indexing.</span></span></param>
        <param name="index"><span data-ttu-id="0671a-110"><paramref name="array" /> 中以零起始的索引，即開始複製的位置。</span><span class="sxs-lookup"><span data-stu-id="0671a-110">The zero-based index in <paramref name="array" /> at which copying begins.</span></span></param>
        <summary><span data-ttu-id="0671a-111">從指定的索引位置開始，將 <see cref="T:System.Collections.Concurrent.IProducerConsumerCollection`1" /> 的項目複製到 <see cref="T:System.Array" />。</span><span class="sxs-lookup"><span data-stu-id="0671a-111">Copies the elements of the <see cref="T:System.Collections.Concurrent.IProducerConsumerCollection`1" /> to an <see cref="T:System.Array" />, starting at a specified index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0671a-112">此方法提供基礎集合的快照集。</span><span class="sxs-lookup"><span data-stu-id="0671a-112">The method provides a snapshot of the underlying collection.</span></span> <span data-ttu-id="0671a-113">可以新增或移除項目，建立複本之後，立即其他執行緒。</span><span class="sxs-lookup"><span data-stu-id="0671a-113">It is possible for other threads to add or remove items immediately after the copy is made.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0671a-114"><paramref name="array" /> 是 null 參考 (在 Visual Basic 中為 Nothing)。</span><span class="sxs-lookup"><span data-stu-id="0671a-114"><paramref name="array" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="0671a-115"><paramref name="index" /> 小於零。</span><span class="sxs-lookup"><span data-stu-id="0671a-115"><paramref name="index" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0671a-116"><paramref name="index" /> 等於或大於 <paramref name="array" /> 的長度，或者，集合中項目的數量大於 <paramref name="index" />  到目的 <paramref name="array" /> 結尾之間可用的空間。</span><span class="sxs-lookup"><span data-stu-id="0671a-116"><paramref name="index" /> is equal to or greater than the length of the <paramref name="array" /> -or- The number of elements in the collection is greater than the available space from <paramref name="index" /> to the end of the destination <paramref name="array" />.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd"><span data-ttu-id="0671a-117">安全執行緒集合</span><span class="sxs-lookup"><span data-stu-id="0671a-117">Thread-Safe Collections</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/987ea3d7-0ad5-4238-8b64-331ce4eb3f0b"><span data-ttu-id="0671a-118">BlockingCollection 概觀</span><span class="sxs-lookup"><span data-stu-id="0671a-118">BlockingCollection Overview</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/4c2492de-3876-4873-b5a1-000bb404d770"><span data-ttu-id="0671a-119">如何： 將界限和封鎖的集合類別的功能</span><span class="sxs-lookup"><span data-stu-id="0671a-119">How to: Add Bounding and Blocking Functionality to a Collection Class</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ToArray">
      <MemberSignature Language="C#" Value="public T[] ToArray ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !T[] ToArray() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.IProducerConsumerCollection`1.ToArray" />
      <MemberSignature Language="VB.NET" Value="Public Function ToArray () As T()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;T&gt; ^ ToArray();" />
      <MemberSignature Language="F#" Value="abstract member ToArray : unit -&gt; 'T[]" Usage="iProducerConsumerCollection.ToArray " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0671a-120">將包含在 <see cref="T:System.Collections.Concurrent.IProducerConsumerCollection`1" /> 中的項目複製到新的陣列。</span><span class="sxs-lookup"><span data-stu-id="0671a-120">Copies the elements contained in the <see cref="T:System.Collections.Concurrent.IProducerConsumerCollection`1" /> to a new array.</span></span></summary>
        <returns><span data-ttu-id="0671a-121">新的陣列，包含從 <see cref="T:System.Collections.Concurrent.IProducerConsumerCollection`1" /> 複製過來的項目。</span><span class="sxs-lookup"><span data-stu-id="0671a-121">A new array containing the elements copied from the <see cref="T:System.Collections.Concurrent.IProducerConsumerCollection`1" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0671a-122">此方法提供基礎集合的快照集。</span><span class="sxs-lookup"><span data-stu-id="0671a-122">The method provides a snapshot of the underlying collection.</span></span> <span data-ttu-id="0671a-123">供其他執行緒來新增或移除項目，立即建立陣列之後，才可以。</span><span class="sxs-lookup"><span data-stu-id="0671a-123">It is possible for other threads to add or remove items immediately after the array is made.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd"><span data-ttu-id="0671a-124">安全執行緒集合</span><span class="sxs-lookup"><span data-stu-id="0671a-124">Thread-Safe Collections</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/987ea3d7-0ad5-4238-8b64-331ce4eb3f0b"><span data-ttu-id="0671a-125">BlockingCollection 概觀</span><span class="sxs-lookup"><span data-stu-id="0671a-125">BlockingCollection Overview</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/4c2492de-3876-4873-b5a1-000bb404d770"><span data-ttu-id="0671a-126">如何： 將界限和封鎖的集合類別的功能</span><span class="sxs-lookup"><span data-stu-id="0671a-126">How to: Add Bounding and Blocking Functionality to a Collection Class</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TryAdd">
      <MemberSignature Language="C#" Value="public bool TryAdd (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryAdd(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.IProducerConsumerCollection`1.TryAdd(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryAdd (item As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryAdd(T item);" />
      <MemberSignature Language="F#" Value="abstract member TryAdd : 'T -&gt; bool" Usage="iProducerConsumerCollection.TryAdd item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="0671a-127">要加入至 <see cref="T:System.Collections.Concurrent.IProducerConsumerCollection`1" /> 的物件。</span><span class="sxs-lookup"><span data-stu-id="0671a-127">The object to add to the <see cref="T:System.Collections.Concurrent.IProducerConsumerCollection`1" />.</span></span></param>
        <summary><span data-ttu-id="0671a-128">嘗試將物件加入至 <see cref="T:System.Collections.Concurrent.IProducerConsumerCollection`1" />。</span><span class="sxs-lookup"><span data-stu-id="0671a-128">Attempts to add an object to the <see cref="T:System.Collections.Concurrent.IProducerConsumerCollection`1" />.</span></span></summary>
        <returns><span data-ttu-id="0671a-129">如果物件加入成功則為 true，否則為 false。</span><span class="sxs-lookup"><span data-stu-id="0671a-129">true if the object was added successfully; otherwise, false.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0671a-130"><paramref name="item" /> 對這個集合無效。</span><span class="sxs-lookup"><span data-stu-id="0671a-130">The <paramref name="item" /> was invalid for this collection.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd"><span data-ttu-id="0671a-131">安全執行緒集合</span><span class="sxs-lookup"><span data-stu-id="0671a-131">Thread-Safe Collections</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/987ea3d7-0ad5-4238-8b64-331ce4eb3f0b"><span data-ttu-id="0671a-132">BlockingCollection 概觀</span><span class="sxs-lookup"><span data-stu-id="0671a-132">BlockingCollection Overview</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/4c2492de-3876-4873-b5a1-000bb404d770"><span data-ttu-id="0671a-133">如何： 將界限和封鎖的集合類別的功能</span><span class="sxs-lookup"><span data-stu-id="0671a-133">How to: Add Bounding and Blocking Functionality to a Collection Class</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TryTake">
      <MemberSignature Language="C#" Value="public bool TryTake (out T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryTake([out] !T&amp; item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.IProducerConsumerCollection`1.TryTake(`0@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryTake (ByRef item As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryTake([Runtime::InteropServices::Out] T % item);" />
      <MemberSignature Language="F#" Value="abstract member TryTake :  -&gt; bool" Usage="iProducerConsumerCollection.TryTake item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" RefType="out" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="0671a-134">如果這個方法會傳回且物件已成功移除和傳回，則 <paramref name="item" /> 會包含移除的物件。</span><span class="sxs-lookup"><span data-stu-id="0671a-134">When this method returns, if the object was removed and returned successfully, <paramref name="item" /> contains the removed object.</span></span> <span data-ttu-id="0671a-135">如果沒有可移除的物件，值會是 unspecified。</span><span class="sxs-lookup"><span data-stu-id="0671a-135">If no object was available to be removed, the value is unspecified.</span></span></param>
        <summary><span data-ttu-id="0671a-136">嘗試從 <see cref="T:System.Collections.Concurrent.IProducerConsumerCollection`1" /> 中移除及傳回物件。</span><span class="sxs-lookup"><span data-stu-id="0671a-136">Attempts to remove and return an object from the <see cref="T:System.Collections.Concurrent.IProducerConsumerCollection`1" />.</span></span></summary>
        <returns><span data-ttu-id="0671a-137">如果物件成功移除及傳回則為 true，否則為 false。</span><span class="sxs-lookup"><span data-stu-id="0671a-137">true if an object was removed and returned successfully; otherwise, false.</span></span></returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd"><span data-ttu-id="0671a-138">安全執行緒集合</span><span class="sxs-lookup"><span data-stu-id="0671a-138">Thread-Safe Collections</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/987ea3d7-0ad5-4238-8b64-331ce4eb3f0b"><span data-ttu-id="0671a-139">BlockingCollection 概觀</span><span class="sxs-lookup"><span data-stu-id="0671a-139">BlockingCollection Overview</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/4c2492de-3876-4873-b5a1-000bb404d770"><span data-ttu-id="0671a-140">如何： 將界限和封鎖的集合類別的功能</span><span class="sxs-lookup"><span data-stu-id="0671a-140">How to: Add Bounding and Blocking Functionality to a Collection Class</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>