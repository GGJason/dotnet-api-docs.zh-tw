<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="CacheDependency.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5971848a65c6d20655c657ffc94cd2e88f373bb0d.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">971848a65c6d20655c657ffc94cd2e88f373bb0d</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Web.Caching.CacheDependency">
          <source>Establishes a dependency relationship between an item stored in an ASP.NET application's <ph id="ph1">&lt;see cref="T:System.Web.Caching.Cache" /&gt;</ph> object and a file, cache key, an array of either, or another <ph id="ph2">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> object.</source>
          <target state="translated">在儲存於 ASP.NET 應用程式的 <ph id="ph1">&lt;see cref="T:System.Web.Caching.Cache" /&gt;</ph> 物件中的項目以及檔案、快取索引鍵、這其中任一個的陣列或另一個 <ph id="ph2">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> 物件之間建立相依性關係。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Web.Caching.CacheDependency">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> class monitors the dependency relationships so that when any of them changes, the cached item will be automatically removed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> 類別會監視相依性關係，如此便能在其中任一個變更時，自動移除快取的項目。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Caching.CacheDependency">
          <source>If you add an item to the cache that is dependent on another object, such as a file or array of files, the dependent item is automatically removed from the cache when the object changes.</source>
          <target state="translated">如果您將項目加入至相依於另一個物件，例如檔案或檔案，陣列的快取會自動移除相依的項目從快取物件變更時。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Caching.CacheDependency">
          <source>For example, suppose you create a <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> object based on data in an XML file.</source>
          <target state="translated">例如，假設您建立<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>XML 檔案中的資料為基礎的物件。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Caching.CacheDependency">
          <source>You can add the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> to the cache with a <ph id="ph2">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> object that makes the <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph> dependent on the XML file.</source>
          <target state="translated">您可以加入<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>至快取<ph id="ph2">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph>物件，可讓<ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>相依於 XML 檔案。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Caching.CacheDependency">
          <source>If the XML file changes, the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> is removed from the cache.</source>
          <target state="translated">如果變更 XML 檔案，<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>從快取中移除。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Caching.CacheDependency">
          <source>You can add items with dependencies to your application's cache with the <ph id="ph1">&lt;xref:System.Web.Caching.Cache.Add%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Web.Caching.Cache.Insert%2A?displayProperty=nameWithType&gt;</ph> methods.</source>
          <target state="translated">您可以將相依的項目加入您的應用程式的快取<ph id="ph1">&lt;xref:System.Web.Caching.Cache.Add%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Web.Caching.Cache.Insert%2A?displayProperty=nameWithType&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Caching.CacheDependency">
          <source>You cannot use the <ph id="ph1">&lt;xref:System.Web.Caching.Cache.Item%2A&gt;</ph> property to add items to the cache with dependencies.</source>
          <target state="translated">您無法使用<ph id="ph1">&lt;xref:System.Web.Caching.Cache.Item%2A&gt;</ph>將項目新增至快取相依性屬性。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Caching.CacheDependency">
          <source>To set up a dependency, you create an instance of the <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> class, specifying the files, keys, or directories on which the item is dependent, and then pass the dependency to the <ph id="ph2">&lt;xref:System.Web.Caching.Cache.Add%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Web.Caching.Cache.Insert%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">若要設定相依性，您建立的執行個體<ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph>類別，指定檔案、 索引鍵或目錄項目是相依，，然後將傳遞至相依性<ph id="ph2">&lt;xref:System.Web.Caching.Cache.Add%2A&gt;</ph>或<ph id="ph3">&lt;xref:System.Web.Caching.Cache.Insert%2A?displayProperty=nameWithType&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Caching.CacheDependency">
          <source>The <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> instance can represent a single file or directory, an array of files or directories, or an array of files or directories along with an array of cache keys (these represent other items stored in the <ph id="ph2">&lt;xref:System.Web.Caching.Cache&gt;</ph> object).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph>執行個體可以代表單一檔案或目錄、 檔案或目錄的陣列或檔案或目錄，以及快取索引鍵陣列的陣列 (這些代表儲存在其他項目<ph id="ph2">&lt;xref:System.Web.Caching.Cache&gt;</ph>物件)。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Caching.CacheDependency">
          <source>The following code example demonstrates using the <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency.HasChanged%2A&gt;</ph> property to determine whether a <ph id="ph2">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> changed since the previous request for an item in the <ph id="ph3">&lt;xref:System.Web.Caching.Cache&gt;</ph>.</source>
          <target state="translated">下列程式碼範例示範如何使用<ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency.HasChanged%2A&gt;</ph>屬性來判斷是否<ph id="ph2">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph>自前一個要求中的項目變更<ph id="ph3">&lt;xref:System.Web.Caching.Cache&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Caching.CacheDependency">
          <source>The <ph id="ph1">`dt`</ph> value passed in the <ph id="ph2">`start`</ph> parameter is set to <ph id="ph3">&lt;xref:System.DateTime.Now%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">`dt`</ph>傳入值<ph id="ph2">`start`</ph>參數設定為<ph id="ph3">&lt;xref:System.DateTime.Now%2A?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="T:System.Web.Caching.CacheDependency">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor">
          <source>If you want to derive your own class from <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph>, implement this version of the <ph id="ph2">&lt;xref:System.Web.Caching.CacheDependency.%23ctor%2A&gt;</ph> constructor.</source>
          <target state="translated">如果您想要衍生您自己從<ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph>，可實作此版本<ph id="ph2">&lt;xref:System.Web.Caching.CacheDependency.%23ctor%2A&gt;</ph>建構函式。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor">
          <source>The following code example is a class that implements this version of the <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> constructor as all classes that derive from <ph id="ph2">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> are required to.</source>
          <target state="translated">下列程式碼範例是一個類別，實作這個版本的<ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph>建構函式做為所有的類別衍生自<ph id="ph2">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph>所需。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String)">
          <source>The path to a file or directory that the cached object is dependent upon.</source>
          <target state="translated">快取物件相依的檔案或目錄路徑。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String)">
          <source>When this resource changes, the cached object becomes obsolete and is removed from the cache.</source>
          <target state="translated">當這項資源變更時，快取物件就會變成過時並從快取中移除。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> class that monitors a file or directory for changes.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> 類別的新執行個體，這執行個體可監視檔案或目錄的變更。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String)">
          <source>If the directory or file specified in the <ph id="ph1">`filename`</ph> parameter is not found in the file system, it will be treated as missing.</source>
          <target state="translated">如果在指定的目錄或檔案<ph id="ph1">`filename`</ph>參數中找不到檔案系統中，它會被視為遺漏。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String)">
          <source>If the directory or file is missing when the object with the dependency is added to the <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph>, the cached object will be removed from the <ph id="ph2">&lt;xref:System.Web.Caching.Cache&gt;</ph> when the directory or file is created.</source>
          <target state="translated">如果找不到目錄或檔案具有相依性物件加入至中時<ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph>，快取的物件會移除<ph id="ph2">&lt;xref:System.Web.Caching.Cache&gt;</ph>建立目錄或檔案時。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String)">
          <source>For example, assume that you add an object to the <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph> with a dependency on the following file path: c:\stocks\xyz.dat.</source>
          <target state="translated">例如，假設您將物件加入<ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph>具有相依性的下列檔案路徑： c:\stocks\xyz.dat。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String)">
          <source>If that file is not found when the <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> object is created, but is created later, the cached object is removed upon the creation of the xyz.dat file.</source>
          <target state="translated">如果該檔案找不到時<ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph>，物件會建立，但稍後建立快取的物件會在 xyz.dat 檔案建立時移除。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String)">
          <source>The following code example creates an instance of the <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> class with a dependency on an XML file.</source>
          <target state="translated">下列程式碼範例建立的執行個體<ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph>類別具有相依性的 XML 檔案。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Web.Caching.Cache.Insert%2A?displayProperty=nameWithType&gt;</ph> method then adds an item to the <ph id="ph2">&lt;xref:System.Web.Caching.Cache&gt;</ph> that is dependent upon that file.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.Caching.Cache.Insert%2A?displayProperty=nameWithType&gt;</ph>方法接著會將項目<ph id="ph2">&lt;xref:System.Web.Caching.Cache&gt;</ph>這是相依於該檔案。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String)">
          <source>You can also use the following technique to add an item to the <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph> with a dependency on a file.</source>
          <target state="translated">您也可以使用下列技巧來將項目加入<ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph>具有相依性的檔案。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[])">
          <source>An array of paths (to files or directories) that the cached object is dependent upon.</source>
          <target state="translated">快取物件所相依的檔案或目錄之路徑陣列。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[])">
          <source>When any of these resources changes, the cached object becomes obsolete and is removed from the cache.</source>
          <target state="translated">當這些資源有任何項目變更時，快取物件就會變成過時，並從快取中移除。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[])">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> class that monitors an array of paths (to files or directories) for changes.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> 類別的新執行個體，其可監視檔案或目錄之路徑陣列的變更。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[])">
          <source>If any of the files or directories in the array changes or is removed from the array, the cached item becomes obsolete and is removed from the application's <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph> object.</source>
          <target state="translated">如果檔案或目錄陣列中的任何變更或從該陣列中移除快取的項目就會變成過時並移除從應用程式的<ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[])">
          <source>Also, if any of the directories or files specified in the <ph id="ph1">`filenames`</ph> parameter is not found in the file system, it is treated as missing.</source>
          <target state="translated">此外，如果任何目錄或檔案中指定<ph id="ph1">`filenames`</ph>參數中找不到檔案系統中，它會被視為遺漏。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[])">
          <source>If a directory or file is missing when the object with the dependency is added to the <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph>, the cached object will be removed from the <ph id="ph2">&lt;xref:System.Web.Caching.Cache&gt;</ph> when that directory or file is created.</source>
          <target state="translated">如果找不到目錄或檔案具有相依性物件加入至中時<ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph>，快取的物件會移除<ph id="ph2">&lt;xref:System.Web.Caching.Cache&gt;</ph>建立該目錄或檔案時。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[])">
          <source>For example, assume that you add an object to the <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph> with a dependency on the following file path: c:\stocks\xyz.dat.</source>
          <target state="translated">例如，假設您將物件加入<ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph>具有相依性的下列檔案路徑： c:\stocks\xyz.dat。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[])">
          <source>If that file is not found when the <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> object is created, but is created later, the cached object is removed upon the creation of the xyz.dat file.</source>
          <target state="translated">如果該檔案找不到時<ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph>，物件會建立，但稍後建立快取的物件會在 xyz.dat 檔案建立時移除。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[])">
          <source>When you create the array that contains the file dependencies, you must define the number of files that the item you are adding to the <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph> is dependent on.</source>
          <target state="translated">當您建立陣列，其中包含檔案相依性時，您必須定義的檔案數目您加入的項目<ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph>而定。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[])">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Web.Caching.Cache.Insert%2A?displayProperty=nameWithType&gt;</ph> method to add an item to the <ph id="ph2">&lt;xref:System.Web.Caching.Cache&gt;</ph> with dependencies on an array of files.</source>
          <target state="translated">下列程式碼範例示範如何使用<ph id="ph1">&lt;xref:System.Web.Caching.Cache.Insert%2A?displayProperty=nameWithType&gt;</ph>方法，以將項目加入<ph id="ph2">&lt;xref:System.Web.Caching.Cache&gt;</ph>依存性的檔案陣列。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[])">
          <source>You can also make the item dependent on an array of directories.</source>
          <target state="translated">您也可以將項目相依於的目錄陣列。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String,System.DateTime)">
          <source>The path to a file or directory that the cached object is dependent upon.</source>
          <target state="translated">快取物件相依的檔案或目錄路徑。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String,System.DateTime)">
          <source>When this resource changes, the cached object becomes obsolete and is removed from the cache.</source>
          <target state="translated">當這項資源變更時，快取物件就會變成過時並從快取中移除。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String,System.DateTime)">
          <source>The time against which to check the last modified date of the directory or file.</source>
          <target state="translated">檢查目錄或檔案的上次修改日期所根據的時間。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String,System.DateTime)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> class that monitors a file or directory for changes.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> 類別的新執行個體，這執行個體可監視檔案或目錄的變更。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String,System.DateTime)">
          <source>If the directory or file specified in the <ph id="ph1">`filename`</ph> parameter is not found in the file system, it will be treated as missing.</source>
          <target state="translated">如果在指定的目錄或檔案<ph id="ph1">`filename`</ph>參數中找不到檔案系統中，它會被視為遺漏。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String,System.DateTime)">
          <source>If the directory or file is missing when the object with the dependency is added to the <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph>, the cached object will be removed from the <ph id="ph2">&lt;xref:System.Web.Caching.Cache&gt;</ph> when the directory or file is created.</source>
          <target state="translated">如果找不到目錄或檔案具有相依性物件加入至中時<ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph>，快取的物件會移除<ph id="ph2">&lt;xref:System.Web.Caching.Cache&gt;</ph>建立目錄或檔案時。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String,System.DateTime)">
          <source>For example, assume that you add an object to the <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph> with a dependency on the following file path: c:\stocks\xyz.dat.</source>
          <target state="translated">例如，假設您將物件加入<ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph>具有相依性的下列檔案路徑： c:\stocks\xyz.dat。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String,System.DateTime)">
          <source>If that file is not found when the <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> object is created, but is created later, the cached object is removed upon the creation of the xyz.dat file.</source>
          <target state="translated">如果該檔案找不到時<ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph>，物件會建立，但稍後建立快取的物件會在 xyz.dat 檔案建立時移除。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String,System.DateTime)">
          <source>Change tracking begins immediately and is not directly based on the <ph id="ph1">`start`</ph> parameter.</source>
          <target state="translated">變更追蹤會立即開始並不直接根據<ph id="ph1">`start`</ph>參數。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String,System.DateTime)">
          <source>Use the <ph id="ph1">`start`</ph> parameter to pass a date and time in the past against which you want to check the last modified date of the directory or file passed in the <ph id="ph2">`filename`</ph> parameter.</source>
          <target state="translated">使用<ph id="ph1">`start`</ph>要傳遞的日期和時間在過去，針對您想要檢查的上次修改日期的目錄或檔案的傳入參數<ph id="ph2">`filename`</ph>參數。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String,System.DateTime)">
          <source>If the last modified date is later than the date and time set passed in the <ph id="ph1">`start`</ph> parameter, the cached item is removed from the <ph id="ph2">&lt;xref:System.Web.Caching.Cache&gt;</ph>.</source>
          <target state="translated">如果上次修改日期晚於日期和時間設定傳入<ph id="ph1">`start`</ph>參數，快取的項目移除從<ph id="ph2">&lt;xref:System.Web.Caching.Cache&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String,System.DateTime)">
          <source>The following code example uses this constructor to instantiate a <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> object, then inserts an item into the <ph id="ph2">&lt;xref:System.Web.Caching.Cache&gt;</ph> with that dependency.</source>
          <target state="translated">下列程式碼範例會使用這個建構函式來具現化<ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph>物件，然後插入項目<ph id="ph2">&lt;xref:System.Web.Caching.Cache&gt;</ph>與該相依性。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String,System.DateTime)">
          <source>The <ph id="ph1">`dt`</ph> value passed in the <ph id="ph2">`start`</ph> parameter is set to <ph id="ph3">&lt;xref:System.DateTime.Now%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">`dt`</ph>傳入值<ph id="ph2">`start`</ph>參數設定為<ph id="ph3">&lt;xref:System.DateTime.Now%2A?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.DateTime)">
          <source>An array of paths (to files or directories) that the cached object is dependent upon.</source>
          <target state="translated">快取物件所相依的檔案或目錄之路徑陣列。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.DateTime)">
          <source>When any of these resources changes, the cached object becomes obsolete and is removed from the cache.</source>
          <target state="translated">當這些資源有任何項目變更時，快取物件就會變成過時，並從快取中移除。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.DateTime)">
          <source>The time against which to check the last modified date of the objects in the array.</source>
          <target state="translated">檢查陣列中物件的上次修改日期所根據的時間。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.DateTime)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> class that monitors an array of paths (to files or directories) for changes and specifies a time when change monitoring begins.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> 類別的新執行個體，其可監視檔案或目錄的路徑陣列之變更，並指定變更監視開始的時間。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.DateTime)">
          <source>If any of the directories or files specified in the <ph id="ph1">`filenames`</ph> parameter is not found in the file system, it is treated as missing.</source>
          <target state="translated">如果任何目錄或檔案中指定<ph id="ph1">`filenames`</ph>參數中找不到檔案系統中，它會被視為遺漏。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.DateTime)">
          <source>If a directory or file is missing when the object with the dependency is added to the <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph>, the cached object will be removed from the <ph id="ph2">&lt;xref:System.Web.Caching.Cache&gt;</ph> when that directory or file is created.</source>
          <target state="translated">如果找不到目錄或檔案具有相依性物件加入至中時<ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph>，快取的物件會移除<ph id="ph2">&lt;xref:System.Web.Caching.Cache&gt;</ph>建立該目錄或檔案時。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.DateTime)">
          <source>For example, assume that you add an object to the <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph> with a dependency on the following file path: c:\stocks\xyz.dat.</source>
          <target state="translated">例如，假設您將物件加入<ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph>具有相依性的下列檔案路徑： c:\stocks\xyz.dat。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.DateTime)">
          <source>If that file is not found when the <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> object is created, but is created later, the cached object is removed upon the creation of the xyz.dat file.</source>
          <target state="translated">如果該檔案找不到時<ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph>，物件會建立，但稍後建立快取的物件會在 xyz.dat 檔案建立時移除。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.DateTime)">
          <source>Change tracking begins immediately and is not directly based on the <ph id="ph1">`start`</ph> parameter.</source>
          <target state="translated">變更追蹤會立即開始並不直接根據<ph id="ph1">`start`</ph>參數。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.DateTime)">
          <source>Use the <ph id="ph1">`start`</ph> parameter to pass a date and time in the past against which you want to check the last modified date of the array passed in the <ph id="ph2">`filenames`</ph> parameter.</source>
          <target state="translated">使用<ph id="ph1">`start`</ph>傳遞日期和時間，以針對您想要檢查陣列的上次修改的日期在過去的參數傳遞給<ph id="ph2">`filenames`</ph>參數。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.DateTime)">
          <source>If the last modified date of any object in the array is later than the date and time set passed in the <ph id="ph1">`start`</ph> parameter, the cached item is removed from the <ph id="ph2">&lt;xref:System.Web.Caching.Cache&gt;</ph>.</source>
          <target state="translated">如果上次修改陣列中的任何物件的日期不晚於日期和時間設定傳入<ph id="ph1">`start`</ph>參數，快取的項目移除從<ph id="ph2">&lt;xref:System.Web.Caching.Cache&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.DateTime)">
          <source>The following code example creates a <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> object that passes two XML files and a <ph id="ph2">&lt;xref:System.DateTime.Now%2A?displayProperty=nameWithType&gt;</ph> value when the object is included as a parameter argument in an <ph id="ph3">&lt;xref:System.Web.Caching.Cache.Insert%2A?displayProperty=nameWithType&gt;</ph> method call.</source>
          <target state="translated">下列程式碼範例會建立<ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph>會傳遞兩個 XML 檔案的物件和<ph id="ph2">&lt;xref:System.DateTime.Now%2A?displayProperty=nameWithType&gt;</ph>值的物件是做為參數引數包含<ph id="ph3">&lt;xref:System.Web.Caching.Cache.Insert%2A?displayProperty=nameWithType&gt;</ph>方法呼叫。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[])">
          <source>An array of paths (to files or directories) that the cached object is dependent upon.</source>
          <target state="translated">快取物件所相依的檔案或目錄之路徑陣列。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[])">
          <source>When any of these resources changes, the cached object becomes obsolete and is removed from the cache.</source>
          <target state="translated">當這些資源有任何項目變更時，快取物件就會變成過時，並從快取中移除。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[])">
          <source>An array of cache keys that the new object monitors for changes.</source>
          <target state="translated">快取索引鍵的陣列，新物件會監視它的變更。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[])">
          <source>When any of these cache keys changes, the cached object associated with this dependency object becomes obsolete and is removed from the cache.</source>
          <target state="translated">當有任何快取索引鍵變更時，與這個相依性物件關聯的快取物件會變成過時，並從快取中移除。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[])">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> class that monitors an array of paths (to files or directories), an array of cache keys, or both for changes.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> 類別的新執行個體，其可監視檔案或目錄的路徑陣列、快取索引鍵的陣列或這兩者的變更。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[])">
          <source>Also, if any of the directories or files specified in the <ph id="ph1">`filenames`</ph> parameter is not found in the file system, it is treated as missing.</source>
          <target state="translated">此外，如果任何目錄或檔案中指定<ph id="ph1">`filenames`</ph>參數中找不到檔案系統中，它會被視為遺漏。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[])">
          <source>If a directory or file is missing when the object with the dependency is added to the <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph>, the cached object will be removed from the <ph id="ph2">&lt;xref:System.Web.Caching.Cache&gt;</ph> when that directory or file is created.</source>
          <target state="translated">如果找不到目錄或檔案具有相依性物件加入至中時<ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph>，快取的物件會移除<ph id="ph2">&lt;xref:System.Web.Caching.Cache&gt;</ph>建立該目錄或檔案時。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[])">
          <source>For example, assume that you add an object to the <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph> with a dependency on the following file path: c:\stocks\xyz.dat.</source>
          <target state="translated">例如，假設您將物件加入<ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph>具有相依性的下列檔案路徑： c:\stocks\xyz.dat。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[])">
          <source>If that file is not found when the <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> object is created, but is created later, the cached object is removed upon the creation of the xyz.dat file.</source>
          <target state="translated">如果該檔案找不到時<ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph>，物件會建立，但稍後建立快取的物件會在 xyz.dat 檔案建立時移除。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[])">
          <source>However, the <ph id="ph1">`cachekeys`</ph> dependency does not work the same way.</source>
          <target state="translated">不過，<ph id="ph1">`cachekeys`</ph>相依性無法運作方式相同。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[])">
          <source>If at least one value in the <ph id="ph1">`cachekeys`</ph> parameter does not exist at the time of an insert, the insert fails.</source>
          <target state="translated">如果中至少一個值<ph id="ph1">`cachekeys`</ph>參數不存在於插入的時間，則插入會失敗。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[])">
          <source>Note that there is no exception thrown for this scenario.</source>
          <target state="translated">請注意，這種情況下，會擲回任何例外狀況。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[])">
          <source>The following code fragment demonstrates how to insert an item into your application's <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph> with a dependency on a key to another item placed in the cache.</source>
          <target state="translated">下列程式碼片段將示範如何將項目插入您的應用程式<ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph>具有相依性的索引鍵，另一個項目放在快取中。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[])">
          <source>Since this method uses array syntax, you must define the number of keys on which the item you are adding to the <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph> is dependent.</source>
          <target state="translated">因為這個方法會使用陣列語法，您必須定義索引鍵數目的項目加入<ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph>相依。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.DateTime)">
          <source>An array of paths (to files or directories) that the cached object is dependent upon.</source>
          <target state="translated">快取物件所相依的檔案或目錄之路徑陣列。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.DateTime)">
          <source>When any of these resources changes, the cached object becomes obsolete and is removed from the cache.</source>
          <target state="translated">當這些資源有任何項目變更時，快取物件就會變成過時，並從快取中移除。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.DateTime)">
          <source>An array of cache keys that the new object monitors for changes.</source>
          <target state="translated">快取索引鍵的陣列，新物件會監視它的變更。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.DateTime)">
          <source>When any of these cache keys changes, the cached object associated with this dependency object becomes obsolete and is removed from the cache.</source>
          <target state="translated">當有任何快取索引鍵變更時，與這個相依性物件關聯的快取物件會變成過時，並從快取中移除。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.DateTime)">
          <source>The date and time against which to check the last modified date of the objects passed in the <bpt id="p1">&lt;c&gt;</bpt>filenames<ept id="p1">&lt;/c&gt;</ept> and <bpt id="p2">&lt;c&gt;</bpt>cachekeys<ept id="p2">&lt;/c&gt;</ept> arrays.</source>
          <target state="translated">檢查傳入 <bpt id="p1">&lt;c&gt;</bpt>filenames<ept id="p1">&lt;/c&gt;</ept> 和 <bpt id="p2">&lt;c&gt;</bpt>cachekeys<ept id="p2">&lt;/c&gt;</ept> 陣列的物件上次修改日期的日期時間依據。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.DateTime)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> class that monitors an array of paths (to files or directories), an array of cache keys, or both for changes.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> 類別的新執行個體，其可監視檔案或目錄的路徑陣列、快取索引鍵的陣列或這兩者的變更。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.DateTime)">
          <source>Also, if any of the directories or files specified in the <ph id="ph1">`filenames`</ph> parameter is not found in the file system, it is treated as missing.</source>
          <target state="translated">此外，如果任何目錄或檔案中指定<ph id="ph1">`filenames`</ph>參數中找不到檔案系統中，它會被視為遺漏。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.DateTime)">
          <source>If a directory or file is missing when the object with the dependency is added to the <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph>, the cached object will be removed from the <ph id="ph2">&lt;xref:System.Web.Caching.Cache&gt;</ph> when that directory or file is created.</source>
          <target state="translated">如果找不到目錄或檔案具有相依性物件加入至中時<ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph>，快取的物件會移除<ph id="ph2">&lt;xref:System.Web.Caching.Cache&gt;</ph>建立該目錄或檔案時。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.DateTime)">
          <source>For example, assume that you add an object to the <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph> with a dependency on the following file path: c:\stocks\xyz.dat.</source>
          <target state="translated">例如，假設您將物件加入<ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph>具有相依性的下列檔案路徑： c:\stocks\xyz.dat。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.DateTime)">
          <source>If that file is not found when the <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> object is created, but is created later, the cached object is removed upon the creation of the xyz.dat file.</source>
          <target state="translated">如果該檔案找不到時<ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph>，物件會建立，但稍後建立快取的物件會在 xyz.dat 檔案建立時移除。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.DateTime)">
          <source>However, the <ph id="ph1">`cachekeys`</ph> dependency does not work the same way.</source>
          <target state="translated">不過，<ph id="ph1">`cachekeys`</ph>相依性無法運作方式相同。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.DateTime)">
          <source>If at least one value in the <ph id="ph1">`cachekeys`</ph> parameter does not exist at the time of an insert, the insert fails.</source>
          <target state="translated">如果中至少一個值<ph id="ph1">`cachekeys`</ph>參數不存在於插入的時間，則插入會失敗。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.DateTime)">
          <source>Note that there is no exception thrown for this scenario.</source>
          <target state="translated">請注意，這種情況下，會擲回任何例外狀況。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.DateTime)">
          <source>Change tracking begins immediately and is not directly based on the <ph id="ph1">`start`</ph> parameter.</source>
          <target state="translated">變更追蹤會立即開始並不直接根據<ph id="ph1">`start`</ph>參數。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.DateTime)">
          <source>Use the <ph id="ph1">`start`</ph> parameter to pass a date and time in the past against which you want to check the last modified date of any object passed in the <ph id="ph2">`filenames`</ph> or <ph id="ph3">`cachekeys`</ph> parameters.</source>
          <target state="translated">使用<ph id="ph1">`start`</ph>傳遞日期和時間，以針對您想要檢查的任何物件的上次修改的日期在過去的參數傳遞給<ph id="ph2">`filenames`</ph>或<ph id="ph3">`cachekeys`</ph>參數。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.DateTime)">
          <source>If the last modified date of any of those objects is later than the date and time set passed in the <ph id="ph1">`start`</ph> parameter, the cached item is removed from the <ph id="ph2">&lt;xref:System.Web.Caching.Cache&gt;</ph>.</source>
          <target state="translated">如果上次修改任何這些物件的日期不晚於日期和時間設定傳入<ph id="ph1">`start`</ph>參數，快取的項目移除從<ph id="ph2">&lt;xref:System.Web.Caching.Cache&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.DateTime)">
          <source>The following code example creates a <ph id="ph1">`CreateDependency`</ph> method.</source>
          <target state="translated">下列程式碼範例會建立<ph id="ph1">`CreateDependency`</ph>方法。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.DateTime)">
          <source>When this method is called, it creates a <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> object and the <ph id="ph2">&lt;xref:System.Web.Caching.Cache.Item%2A?displayProperty=nameWithType&gt;</ph> property is used to add an item to the cache with a <ph id="ph3">`key`</ph> parameter of <ph id="ph4">`key1`</ph> and a value of <ph id="ph5">`Value 1`</ph>.</source>
          <target state="translated">當呼叫此方法時，它會建立<ph id="ph1">&lt;xref:System.DateTime&gt;</ph>物件和<ph id="ph2">&lt;xref:System.Web.Caching.Cache.Item%2A?displayProperty=nameWithType&gt;</ph>屬性用來將項目加入至快取<ph id="ph3">`key`</ph>參數<ph id="ph4">`key1`</ph>以及值<ph id="ph5">`Value 1`</ph>。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.DateTime)">
          <source>An array of strings, <ph id="ph1">`dependencyKey`</ph>, is then created with the value of <ph id="ph2">`key1`</ph> as well.</source>
          <target state="translated">Strings 的陣列， <ph id="ph1">`dependencyKey`</ph>，接著會建立其值為<ph id="ph2">`key1`</ph>以及。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.DateTime)">
          <source>This <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> constructor then instantiates a <ph id="ph2">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> object that passes <ph id="ph3">`dependencyKey`</ph> and the <ph id="ph4">&lt;xref:System.DateTime&gt;</ph> object as parameter arguments.</source>
          <target state="translated">這<ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph>建構函式接著會執行個體化<ph id="ph2">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph>傳遞物件的<ph id="ph3">`dependencyKey`</ph>和<ph id="ph4">&lt;xref:System.DateTime&gt;</ph>做為參數的引數的物件。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.DateTime)">
          <source>The <ph id="ph1">&lt;xref:System.Web.Caching.Cache.Insert%2A?displayProperty=nameWithType&gt;</ph> method is called next, using the <ph id="ph2">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> object as a parameter.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.Caching.Cache.Insert%2A?displayProperty=nameWithType&gt;</ph>方法使用接下來，呼叫<ph id="ph2">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph>物件做為參數。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.DateTime)">
          <source>This makes the object added to the cache using the <ph id="ph1">&lt;xref:System.Web.Caching.Cache.Insert%2A&gt;</ph> method dependent on the <ph id="ph2">`key1`</ph> key.</source>
          <target state="translated">這樣就可以加入至快取使用的物件<ph id="ph1">&lt;xref:System.Web.Caching.Cache.Insert%2A&gt;</ph>方法取決於<ph id="ph2">`key1`</ph>索引鍵。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency)">
          <source>An array of paths (to files or directories) that the cached object is dependent upon.</source>
          <target state="translated">快取物件所相依的檔案或目錄之路徑陣列。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency)">
          <source>When any of these resources changes, the cached object becomes obsolete and is removed from the cache.</source>
          <target state="translated">當這些資源有任何項目變更時，快取物件就會變成過時，並從快取中移除。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency)">
          <source>An array of cache keys that the new object monitors for changes.</source>
          <target state="translated">快取索引鍵的陣列，新物件會監視它的變更。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency)">
          <source>When any of these cache keys changes, the cached object associated with this dependency object becomes obsolete and is removed from the cache.</source>
          <target state="translated">當有任何快取索引鍵變更時，與這個相依性物件關聯的快取物件會變成過時，並從快取中移除。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency)">
          <source>Another instance of the <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> class that this instance is dependent upon.</source>
          <target state="translated">這個執行個體相依之 <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> 類別的另一個執行個體。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> class that monitors an array of paths (to files or directories), an array of cache keys, or both for changes.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> 類別的新執行個體，其可監視檔案或目錄的路徑陣列、快取索引鍵的陣列或這兩者的變更。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency)">
          <source>It also makes itself dependent upon a separate instance of the <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> class.</source>
          <target state="translated">它也會使本身相依於 <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> 類別的個別執行個體。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency)">
          <source>Also, if any of the directories or files specified in the <ph id="ph1">`filenames`</ph> parameter is not found in the file system, it is treated as missing.</source>
          <target state="translated">此外，如果任何目錄或檔案中指定<ph id="ph1">`filenames`</ph>參數中找不到檔案系統中，它會被視為遺漏。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency)">
          <source>If a directory or file is missing when the object with the dependency is added to the <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph>, the cached object will be removed from the <ph id="ph2">&lt;xref:System.Web.Caching.Cache&gt;</ph> when that directory or file is created.</source>
          <target state="translated">如果找不到目錄或檔案具有相依性物件加入至中時<ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph>，快取的物件會移除<ph id="ph2">&lt;xref:System.Web.Caching.Cache&gt;</ph>建立該目錄或檔案時。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency)">
          <source>For example, assume that you add an object to the <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph> with a dependency on the following file path: c:\stocks\xyz.dat.</source>
          <target state="translated">例如，假設您將物件加入<ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph>具有相依性的下列檔案路徑： c:\stocks\xyz.dat。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency)">
          <source>If that file is not found when the <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> object is created, but is created later, the cached object is removed upon the creation of the xyz.dat file.</source>
          <target state="translated">如果該檔案找不到時<ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph>，物件會建立，但稍後建立快取的物件會在 xyz.dat 檔案建立時移除。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency)">
          <source>However, the <ph id="ph1">`cachekeys`</ph> dependency does not work the same way.</source>
          <target state="translated">不過，<ph id="ph1">`cachekeys`</ph>相依性無法運作方式相同。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency)">
          <source>If at least one value in the <ph id="ph1">`cachekeys`</ph> parameter does not exist at the time of an insert, the insert fails.</source>
          <target state="translated">如果中至少一個值<ph id="ph1">`cachekeys`</ph>參數不存在於插入的時間，則插入會失敗。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency)">
          <source>Note that there is no exception thrown for this scenario.</source>
          <target state="translated">請注意，這種情況下，會擲回任何例外狀況。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency)">
          <source>The following code example creates a <ph id="ph1">`CreateDependency`</ph> method.</source>
          <target state="translated">下列程式碼範例會建立<ph id="ph1">`CreateDependency`</ph>方法。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency)">
          <source>When this method is called, it uses the <ph id="ph1">&lt;xref:System.Web.Caching.Cache.Item%2A?displayProperty=nameWithType&gt;</ph> property to add an item to the cache with a <ph id="ph2">`key`</ph> parameter of <ph id="ph3">`key1`</ph> and a value of <ph id="ph4">`Value 1`</ph>.</source>
          <target state="translated">當呼叫此方法時，它會使用<ph id="ph1">&lt;xref:System.Web.Caching.Cache.Item%2A?displayProperty=nameWithType&gt;</ph>屬性新增至快取的項目<ph id="ph2">`key`</ph>參數<ph id="ph3">`key1`</ph>以及值<ph id="ph4">`Value 1`</ph>。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency)">
          <source>An array of strings, <ph id="ph1">`dependencyKey`</ph>, is then created with the value of <ph id="ph2">`key1`</ph> as well.</source>
          <target state="translated">Strings 的陣列， <ph id="ph1">`dependencyKey`</ph>，接著會建立其值為<ph id="ph2">`key1`</ph>以及。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency)">
          <source>The <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency.%23ctor%2A?displayProperty=nameWithType&gt;</ph> constructor is used to create a <ph id="ph2">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> object, <ph id="ph3">`dep1`</ph>, which passes <ph id="ph4">`dependencyKey`</ph> as a parameter argument.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency.%23ctor%2A?displayProperty=nameWithType&gt;</ph>建構函式用來建立<ph id="ph2">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph>物件<ph id="ph3">`dep1`</ph>，哪個階段<ph id="ph4">`dependencyKey`</ph>做為參數引數。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency)">
          <source>A second <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> object, <ph id="ph2">`dep2`</ph>, is created using this constructor, with <ph id="ph3">`dep1`</ph> passed as the third parameter argument.</source>
          <target state="translated">第二個<ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph>物件<ph id="ph2">`dep2`</ph>，會使用這個建構函式，以建立<ph id="ph3">`dep1`</ph>傳遞做為第三個參數引數。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency)">
          <source>This second dependency is dependent on the first.</source>
          <target state="translated">此第二個相依性會相依於第一個項目。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency)">
          <source>The <ph id="ph1">&lt;xref:System.Web.Caching.Cache.Insert%2A?displayProperty=nameWithType&gt;</ph> method is called next, using the second <ph id="ph2">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> object as a parameter.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.Caching.Cache.Insert%2A?displayProperty=nameWithType&gt;</ph>方法使用第二個接下來，呼叫<ph id="ph2">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph>物件做為參數。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency)">
          <source>If the first dependency changes in any way, the cached item will be invalidated.</source>
          <target state="translated">如果第一個相依性以任何方式變更，快取的項目將會失效。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency,System.DateTime)">
          <source>An array of paths (to files or directories) that the cached object is dependent upon.</source>
          <target state="translated">快取物件所相依的檔案或目錄之路徑陣列。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency,System.DateTime)">
          <source>When any of these resources changes, the cached object becomes obsolete and is removed from the cache.</source>
          <target state="translated">當這些資源有任何項目變更時，快取物件就會變成過時，並從快取中移除。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency,System.DateTime)">
          <source>An array of cache keys that the new object monitors for changes.</source>
          <target state="translated">快取索引鍵的陣列，新物件會監視它的變更。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency,System.DateTime)">
          <source>When any of these cache keys changes, the cached object associated with this dependency object becomes obsolete and is removed from the cache.</source>
          <target state="translated">當有任何快取索引鍵變更時，與這個相依性物件關聯的快取物件會變成過時，並從快取中移除。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency,System.DateTime)">
          <source>Another instance of the <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> class that this instance is dependent upon.</source>
          <target state="translated">這個執行個體相依之 <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> 類別的另一個執行個體。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency,System.DateTime)">
          <source>The time against which to check the last modified date of the objects in the arrays and the <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> object.</source>
          <target state="translated">檢查陣列中物件和 <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> 物件的上次修改日期所根據的時間。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency,System.DateTime)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> class that monitors an array of paths (to files or directories), an array of cache keys, or both for changes.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> 類別的新執行個體，其可監視檔案或目錄的路徑陣列、快取索引鍵的陣列或這兩者的變更。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency,System.DateTime)">
          <source>It also makes itself dependent upon another instance of the <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> class and a time when the change monitoring begins.</source>
          <target state="translated">它也會使本身相依於 <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> 類別的另一個執行個體和開始監控變更的時間。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency,System.DateTime)">
          <source>Also, if any of the directories or files specified in the <ph id="ph1">`filenames`</ph> parameter is not found in the file system, it is treated as missing.</source>
          <target state="translated">此外，如果任何目錄或檔案中指定<ph id="ph1">`filenames`</ph>參數中找不到檔案系統中，它會被視為遺漏。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency,System.DateTime)">
          <source>If a directory or file is missing when the object with the dependency is added to the <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph>, the cached object will be removed from the <ph id="ph2">&lt;xref:System.Web.Caching.Cache&gt;</ph> when that directory or file is created.</source>
          <target state="translated">如果找不到目錄或檔案具有相依性物件加入至中時<ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph>，快取的物件會移除<ph id="ph2">&lt;xref:System.Web.Caching.Cache&gt;</ph>建立該目錄或檔案時。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency,System.DateTime)">
          <source>For example, assume that you add an object to the <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph> with a dependency on the following file path: c:\stocks\xyz.dat.</source>
          <target state="translated">例如，假設您將物件加入<ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph>具有相依性的下列檔案路徑： c:\stocks\xyz.dat。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency,System.DateTime)">
          <source>If that file is not found when the <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> object is created, but is created later, the cached object is removed upon the creation of the xyz.dat file.</source>
          <target state="translated">如果該檔案找不到時<ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph>，物件會建立，但稍後建立快取的物件會在 xyz.dat 檔案建立時移除。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency,System.DateTime)">
          <source>However, the <ph id="ph1">`cachekeys`</ph> dependency does not work the same way.</source>
          <target state="translated">不過，<ph id="ph1">`cachekeys`</ph>相依性無法運作方式相同。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency,System.DateTime)">
          <source>If at least one value in the <ph id="ph1">`cachekeys`</ph> parameter does not exist at the time of an insert, the insert fails.</source>
          <target state="translated">如果中至少一個值<ph id="ph1">`cachekeys`</ph>參數不存在於插入的時間，則插入會失敗。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency,System.DateTime)">
          <source>Note that there is no exception thrown for this scenario.</source>
          <target state="translated">請注意，這種情況下，會擲回任何例外狀況。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency,System.DateTime)">
          <source>Change tracking begins immediately and is not directly based on the <ph id="ph1">`start`</ph> parameter.</source>
          <target state="translated">變更追蹤會立即開始並不直接根據<ph id="ph1">`start`</ph>參數。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency,System.DateTime)">
          <source>Use the <ph id="ph1">`start`</ph> parameter to pass a date and time in the past against which you want to check the last modified date of any of the objects passed in the <ph id="ph2">`filenames`</ph>, <ph id="ph3">`cachekeys`</ph>, or <ph id="ph4">`dependency`</ph> parameters.</source>
          <target state="translated">使用<ph id="ph1">`start`</ph>傳遞日期和時間，以針對您想要檢查的任何物件的上次修改的日期在過去的參數傳遞給<ph id="ph2">`filenames`</ph>， <ph id="ph3">`cachekeys`</ph>，或<ph id="ph4">`dependency`</ph>參數。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency,System.DateTime)">
          <source>If the last modified date for any of those objects is later than the date and time passed in the <ph id="ph1">`start`</ph> parameter, the cached item is removed from the <ph id="ph2">&lt;xref:System.Web.Caching.Cache&gt;</ph>.</source>
          <target state="translated">如果上次修改日期的任何這些物件是晚於日期和時間傳入<ph id="ph1">`start`</ph>參數，快取的項目移除從<ph id="ph2">&lt;xref:System.Web.Caching.Cache&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency,System.DateTime)">
          <source>The following code example shows a <ph id="ph1">`CreateDependency`</ph> method.</source>
          <target state="translated">下列程式碼範例示範<ph id="ph1">`CreateDependency`</ph>方法。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency,System.DateTime)">
          <source>When this method is called, it creates a <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> object and the <ph id="ph2">&lt;xref:System.Web.Caching.Cache.Item%2A?displayProperty=nameWithType&gt;</ph> property is used to add an item to the cache with a key parameter of <ph id="ph3">`key1`</ph> and a value of <ph id="ph4">`Value 1`</ph>.</source>
          <target state="translated">當呼叫此方法時，它會建立<ph id="ph1">&lt;xref:System.DateTime&gt;</ph>物件和<ph id="ph2">&lt;xref:System.Web.Caching.Cache.Item%2A?displayProperty=nameWithType&gt;</ph>屬性用來將項目至快取的索引鍵參數<ph id="ph3">`key1`</ph>以及值<ph id="ph4">`Value 1`</ph>。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency,System.DateTime)">
          <source>An array of strings, <ph id="ph1">`dependencyKey`</ph>, is then created with the value at its first (and only) index set to the value of <ph id="ph2">`key1`</ph> as well.</source>
          <target state="translated">Strings 的陣列， <ph id="ph1">`dependencyKey`</ph>，接著會建立與設定的值為其第一個 （且唯一） 索引處的值<ph id="ph2">`key1`</ph>以及。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency,System.DateTime)">
          <source>The <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency.%23ctor%2A?displayProperty=nameWithType&gt;</ph> constructor is then used to create a <ph id="ph2">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> object, <ph id="ph3">`dep1`</ph>, which passes <ph id="ph4">`dependencyKey`</ph> as a parameter argument.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency.%23ctor%2A?displayProperty=nameWithType&gt;</ph>建構函式後用於建立<ph id="ph2">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph>物件<ph id="ph3">`dep1`</ph>，哪個階段<ph id="ph4">`dependencyKey`</ph>做為參數引數。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency,System.DateTime)">
          <source>A second <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> object, <ph id="ph2">`dep2`</ph>, is then created using this constructor, with <ph id="ph3">`dep1`</ph> and the <ph id="ph4">&lt;xref:System.DateTime&gt;</ph> object passed as parameter arguments.</source>
          <target state="translated">第二個<ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph>物件<ph id="ph2">`dep2`</ph>，然後建立使用這個建構函式，<ph id="ph3">`dep1`</ph>和<ph id="ph4">&lt;xref:System.DateTime&gt;</ph>物件傳遞為參數的引數。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency,System.DateTime)">
          <source>This second dependency is dependent on the first, and dependency monitoring will begin 10 seconds after the <ph id="ph1">`CreateDependency`</ph> method is called.</source>
          <target state="translated">此第二個相依性，是根據第一和相依性監視會開始，10 秒後<ph id="ph1">`CreateDependency`</ph>方法呼叫。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency,System.DateTime)">
          <source>The <ph id="ph1">&lt;xref:System.Web.Caching.Cache.Insert%2A?displayProperty=nameWithType&gt;</ph> method is called next, using the second <ph id="ph2">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> object as a parameter.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.Caching.Cache.Insert%2A?displayProperty=nameWithType&gt;</ph>方法使用第二個接下來，呼叫<ph id="ph2">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph>物件做為參數。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency,System.DateTime)">
          <source>If the first dependency changes in any way, the cached item will be invalidated.</source>
          <target state="translated">如果第一個相依性以任何方式變更，快取的項目將會失效。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.DependencyDispose">
          <source>Releases the resources used by the <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> class and any classes that derive from <ph id="ph2">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph>.</source>
          <target state="translated">釋放由 <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> 類別及任何衍生自 <ph id="ph2">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> 的類別所使用的資源。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.DependencyDispose">
          <source>Any class that derives from the <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> class is required to implement this method to clean up resources the derived class has used.</source>
          <target state="translated">任何衍生自的類別<ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph>類別實作時需要這個方法，以清除的資源已在使用衍生的類別。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.DependencyDispose">
          <source>The following code example shows a class that inherits from the <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> class and overrides the <ph id="ph2">&lt;xref:System.Web.Caching.CacheDependency.DependencyDispose%2A&gt;</ph> method.</source>
          <target state="translated">下列程式碼範例示範繼承自類別<ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph>類別並覆寫<ph id="ph2">&lt;xref:System.Web.Caching.CacheDependency.DependencyDispose%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.DependencyDispose">
          <source>When this method is called, it sets a custom Boolean property named <ph id="ph1">`Disposed`</ph> to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">呼叫這個方法時，它會設定自訂的布林值屬性，名為<ph id="ph1">`Disposed`</ph>至<ph id="ph2">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.Dispose">
          <source>Releases the resources used by the <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> object.</source>
          <target state="translated">釋放 <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> 物件所使用的資源。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.FinishInit">
          <source>Completes initialization of the <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> object.</source>
          <target state="translated">完成 <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> 物件的初始化。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.FinishInit">
          <source>The <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency.FinishInit%2A&gt;</ph> method completes the initialization of the <ph id="ph2">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency.FinishInit%2A&gt;</ph>方法完成初始化<ph id="ph2">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.FinishInit">
          <source>This method is called by all <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> constructors.</source>
          <target state="translated">這個方法會呼叫所有<ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph>建構函式。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.FinishInit">
          <source>The <ph id="ph1">&lt;see cref="M:System.Web.Caching.CacheDependency.FinishInit" /&gt;</ph> method must be called at the end of the constructor for derived classes to complete the initialization of the <ph id="ph2">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Web.Caching.CacheDependency.FinishInit" /&gt;</ph>方法必須完成的初始化衍生類別的建構函式結束時呼叫<ph id="ph2">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.GetFileDependencies">
          <source>Gets the file dependencies.</source>
          <target state="translated">取得檔案相依性。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.GetFileDependencies">
          <source>The file dependencies.</source>
          <target state="translated">檔案相依性。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.GetUniqueID">
          <source>Retrieves a unique identifier for a <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> object.</source>
          <target state="translated">擷取 <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> 物件的唯一識別項。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.GetUniqueID">
          <source>The unique identifier for the <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> 物件的唯一識別碼。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.GetUniqueID">
          <source>This method can be particularly useful for tracking multiple instances of the <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> class associated with an item or an application.</source>
          <target state="translated">這個方法會特別有用的追蹤多個執行個體<ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph>項目或應用程式相關聯的類別。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.GetUniqueID">
          <source>The identifier is a combination of either the file name (for a file dependency) or the key name (for a cache-key dependency) and a string that this method assigns to the dependency.</source>
          <target state="translated">識別碼是 （適用於檔案相依性） 的檔案名稱或索引鍵的名稱 （適用於快取索引鍵的相依性） 和字串，這個方法會將指派給相依性的組合。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.GetUniqueID">
          <source>In classes that derive from the <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> class, you can override this method to customize how it generates the unique identifier.</source>
          <target state="translated">在衍生自的<ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph>類別，您可以覆寫這個方法以自訂方式會產生的唯一識別碼。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.GetUniqueID">
          <source>The following code example creates an <ph id="ph1">&lt;xref:System.Web.Caching.AggregateCacheDependency&gt;</ph> object, named <ph id="ph2">`aggDep`</ph>, with two <ph id="ph3">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> objects in its array.</source>
          <target state="translated">下列程式碼範例會建立<ph id="ph1">&lt;xref:System.Web.Caching.AggregateCacheDependency&gt;</ph>物件，名為<ph id="ph2">`aggDep`</ph>，具有兩個<ph id="ph3">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph>其陣列中的物件。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.GetUniqueID">
          <source>Once <ph id="ph1">`aggDep`</ph> is instantiated, the code calls the <ph id="ph2">&lt;xref:System.Web.Caching.CacheDependency.GetUniqueID%2A&gt;</ph> method to generate a unique identifier for both dependencies that <ph id="ph3">`aggDep`</ph> contains and displays the identifiers to the containing page.</source>
          <target state="translated">一次<ph id="ph1">`aggDep`</ph>具現化程式碼會呼叫<ph id="ph2">&lt;xref:System.Web.Caching.CacheDependency.GetUniqueID%2A&gt;</ph>方法來產生兩個相依性的唯一識別碼，<ph id="ph3">`aggDep`</ph>包含並顯示包含頁面的識別碼。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.GetUniqueID">
          <source>An item is then added to the <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph>, using the <ph id="ph2">&lt;xref:System.Web.Caching.Cache.Insert%2A&gt;</ph> method, with <ph id="ph3">`aggDep`</ph> as a dependency.</source>
          <target state="translated">若要再加入項目<ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph>，並使用<ph id="ph2">&lt;xref:System.Web.Caching.Cache.Insert%2A&gt;</ph>方法，與<ph id="ph3">`aggDep`</ph>做為相依性。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="P:System.Web.Caching.CacheDependency.HasChanged">
          <source>Gets a value indicating whether the <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> object has changed.</source>
          <target state="translated">取得值，指出 <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> 是否已經變更。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Caching.CacheDependency.HasChanged">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> object has changed; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph2">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> 物件已經變更，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Caching.CacheDependency.HasChanged">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">預設值為 <ph id="ph1">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Caching.CacheDependency.HasChanged">
          <source>You can add an item to an ASP.NET application's <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph> with a <ph id="ph2">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph>.</source>
          <target state="translated">您可以將項目加入至 ASP.NET 應用程式的<ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph>與<ph id="ph2">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Caching.CacheDependency.HasChanged">
          <source>When the <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> changes, the item added to the <ph id="ph2">&lt;xref:System.Web.Caching.Cache&gt;</ph> is invalidated and removed from the cache.</source>
          <target state="translated">當<ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph>變更時，若要加入的項目<ph id="ph2">&lt;xref:System.Web.Caching.Cache&gt;</ph>失效，並從快取中移除。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Caching.CacheDependency.HasChanged">
          <source>You can use this property to determine whether a <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> has changed, and recreate the item in the <ph id="ph2">&lt;xref:System.Web.Caching.Cache&gt;</ph> if that has occurred.</source>
          <target state="translated">您可以使用這個屬性來判斷是否<ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph>已變更，並重新建立中的項目<ph id="ph2">&lt;xref:System.Web.Caching.Cache&gt;</ph>，已發生。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Caching.CacheDependency.HasChanged">
          <source>The following code example demonstrates using the <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency.HasChanged%2A&gt;</ph> property to determine whether a <ph id="ph2">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> changed since the previous request for an item in the <ph id="ph3">&lt;xref:System.Web.Caching.Cache&gt;</ph>.</source>
          <target state="translated">下列程式碼範例示範如何使用<ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency.HasChanged%2A&gt;</ph>屬性來判斷是否<ph id="ph2">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph>自前一個要求中的項目變更<ph id="ph3">&lt;xref:System.Web.Caching.Cache&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Caching.CacheDependency.HasChanged">
          <source>The <ph id="ph1">`dt`</ph> value passed in the <ph id="ph2">`start`</ph> parameter is set to <ph id="ph3">&lt;xref:System.DateTime.Now%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">`dt`</ph>傳入值<ph id="ph2">`start`</ph>參數設定為<ph id="ph3">&lt;xref:System.DateTime.Now%2A?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.ItemRemoved">
          <source>Called when a monitored cache entry is removed.</source>
          <target state="translated">已在移除受監視的快取項目時呼叫。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.KeepDependenciesAlive">
          <source>Updates the last access time of every cache item that depends on this item.</source>
          <target state="translated">針對相依於這個項目的每個快取項目，更新上次存取時間。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.NotifyDependencyChanged(System.Object,System.EventArgs)">
          <source>The source of the event.</source>
          <target state="translated">事件的來源。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.NotifyDependencyChanged(System.Object,System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> object that contains the event data.</source>
          <target state="translated">包含事件資料的 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> 物件。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.NotifyDependencyChanged(System.Object,System.EventArgs)">
          <source>Notifies the base <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> object that the dependency represented by a derived <ph id="ph2">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> class has changed.</source>
          <target state="translated">告知基底 <ph id="ph1">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> 物件，由衍生的 <ph id="ph2">&lt;see cref="T:System.Web.Caching.CacheDependency" /&gt;</ph> 類別所表示的相依性已經變更。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.NotifyDependencyChanged(System.Object,System.EventArgs)">
          <source>Any class that derives from the <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> class must implement this method.</source>
          <target state="translated">任何衍生自的類別<ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph>類別必須實作這個方法。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.NotifyDependencyChanged(System.Object,System.EventArgs)">
          <source>When you derive from the <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> class, you use the base functionality of any method or property that you have not overridden.</source>
          <target state="translated">當您衍生自<ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph>類別，使用任何方法或屬性，您不覆寫的基底功能。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.NotifyDependencyChanged(System.Object,System.EventArgs)">
          <source>When you create an instance of the derived class, it represents the files, cache keys, database tables, or other arbitrary objects that you want to make a cached item dependent upon.</source>
          <target state="translated">當您建立衍生類別的執行個體時，它代表檔案、 快取索引鍵、 資料庫資料表或您想要使快取的項目相依於其他任意物件。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.NotifyDependencyChanged(System.Object,System.EventArgs)">
          <source>When a dependency item changes, this method notifies the base functionality of the <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> class that the item has changed, so that the values of the <ph id="ph2">&lt;xref:System.Web.Caching.CacheDependency.HasChanged%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Web.Caching.CacheDependency.UtcLastModified%2A&gt;</ph> properties can be updated.</source>
          <target state="translated">當相依性項目變更時，這個方法會通知的基本功能<ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph>類別的項目已變更，讓值<ph id="ph2">&lt;xref:System.Web.Caching.CacheDependency.HasChanged%2A&gt;</ph>和<ph id="ph3">&lt;xref:System.Web.Caching.CacheDependency.UtcLastModified%2A&gt;</ph>屬性皆可更新。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.NotifyDependencyChanged(System.Object,System.EventArgs)">
          <source>The following code example shows a class that inherits from the <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> class.</source>
          <target state="translated">下列程式碼範例示範繼承自類別<ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.NotifyDependencyChanged(System.Object,System.EventArgs)">
          <source>It creates a public method, <ph id="ph1">`ResetDependency`</ph>, that uses the <ph id="ph2">&lt;xref:System.Web.Caching.CacheDependency.SetUtcLastModified%2A&gt;</ph> method to change the time at which the dependency was modified, and then calls the <ph id="ph3">&lt;xref:System.Web.Caching.CacheDependency.NotifyDependencyChanged%2A&gt;</ph> method.</source>
          <target state="translated">它會建立公用的方法<ph id="ph1">`ResetDependency`</ph>，使用<ph id="ph2">&lt;xref:System.Web.Caching.CacheDependency.SetUtcLastModified%2A&gt;</ph>方法，以變更所在的相依性修改的時間，然後呼叫<ph id="ph3">&lt;xref:System.Web.Caching.CacheDependency.NotifyDependencyChanged%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.SetCacheDependencyChanged(System.Action{System.Object,System.EventArgs})">
          <source>The dependency changed action.</source>
          <target state="translated">相依性已變更的動作。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.SetCacheDependencyChanged(System.Action{System.Object,System.EventArgs})">
          <source>Adds an Action method to handle notifying interested party in changes to this dependency.</source>
          <target state="translated">加入 Action 方法來處理在變更此相依性時通知有興趣的對象。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.SetUtcLastModified(System.DateTime)">
          <source>The time when the dependency last changed.</source>
          <target state="translated">上次變更相依性的時間。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.SetUtcLastModified(System.DateTime)">
          <source>Marks the time when a dependency last changed.</source>
          <target state="translated">標記上次變更相依性的時間。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.SetUtcLastModified(System.DateTime)">
          <source>The following code example shows a class that inherits from the <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> class.</source>
          <target state="translated">下列程式碼範例示範繼承自類別<ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.SetUtcLastModified(System.DateTime)">
          <source>It creates a public method, <ph id="ph1">`ResetDependency`</ph>, that uses the <ph id="ph2">&lt;xref:System.Web.Caching.CacheDependency.SetUtcLastModified%2A&gt;</ph> method to change the time at which the dependency was modified, and then calls the <ph id="ph3">&lt;xref:System.Web.Caching.CacheDependency.NotifyDependencyChanged%2A&gt;</ph> method.</source>
          <target state="translated">它會建立公用的方法<ph id="ph1">`ResetDependency`</ph>，使用<ph id="ph2">&lt;xref:System.Web.Caching.CacheDependency.SetUtcLastModified%2A&gt;</ph>方法，以變更所在的相依性修改的時間，然後呼叫<ph id="ph3">&lt;xref:System.Web.Caching.CacheDependency.NotifyDependencyChanged%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.TakeOwnership">
          <source>Allows the first user to declare exclusive ownership of this dependency.</source>
          <target state="translated">允許第一位使用者宣告這個相依性的獨佔擁有權。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.TakeOwnership">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph><ph id="ph2">
</ph><ph id="ph3">&lt;see langword="true" /&gt;</ph> if the item was the first to take ownership otherwise <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果項目是第一個取得擁有權的項目，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph><ph id="ph2">
</ph><ph id="ph3">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="M:System.Web.Caching.CacheDependency.TakeOwnership">
          <source><ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.TakeOwnership">
          <source>This method declares that the dependency is used.</source>
          <target state="translated">這個方法宣告使用的相依性。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.TakeOwnership">
          <source>If another item previously called this method and took ownership, <ph id="ph1">`false`</ph> is returned.</source>
          <target state="translated">如果另一個項目之前呼叫這個方法，並擁有權，<ph id="ph1">`false`</ph>傳回。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.TakeOwnership">
          <source>A  <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> can only be used by one cache entry.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph>僅能由一個快取項目。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Caching.CacheDependency.TakeOwnership">
          <source>When an item is added to a cache with any cache dependencies specified, the cache should take ownership of those dependencies to make sure that they are not reused somewhere else.</source>
          <target state="translated">當項目具有任何指定的快取相依性加入至快取時，快取應該採取這些相依性，以確定，它們都不會重複使用某處其他擁有的權。</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="P:System.Web.Caching.CacheDependency.UtcLastModified">
          <source>Gets the time when the dependency was last changed.</source>
          <target state="translated">取得上次變更相依性的時間。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Caching.CacheDependency.UtcLastModified">
          <source>The time when the dependency was last changed.</source>
          <target state="translated">上次變更相依性的時間。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Caching.CacheDependency.UtcLastModified">
          <source>This property is measured in Coordinated Universal Time (UTC) (also known as Greenwich Mean Time).</source>
          <target state="translated">這個屬性的測量以國際標準時間 (UTC) （也稱為格林威治標準時間）。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Caching.CacheDependency.UtcLastModified">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.Web.Caching.AggregateCacheDependency&gt;</ph> class to add an item, with two <ph id="ph2">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> object dependencies, to the <ph id="ph3">&lt;xref:System.Web.Caching.Cache&gt;</ph>.</source>
          <target state="translated">下列程式碼範例使用<ph id="ph1">&lt;xref:System.Web.Caching.AggregateCacheDependency&gt;</ph>新增項目，具有兩個類別<ph id="ph2">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph>為物件的相依性， <ph id="ph3">&lt;xref:System.Web.Caching.Cache&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Caching.CacheDependency.UtcLastModified">
          <source>When a request for the <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph> item is made, the code checks whether the item is in the <ph id="ph2">&lt;xref:System.Web.Caching.Cache&gt;</ph>.</source>
          <target state="translated">當要求<ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph>項目，程式碼會檢查的項目是否在<ph id="ph2">&lt;xref:System.Web.Caching.Cache&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Caching.CacheDependency.UtcLastModified">
          <source>If it is, the <ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency.UtcLastModified%2A&gt;</ph> property is converted to a string and displayed on the page.</source>
          <target state="translated">如果是，<ph id="ph1">&lt;xref:System.Web.Caching.CacheDependency.UtcLastModified%2A&gt;</ph>屬性轉換為字串，且頁面上顯示。</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Caching.CacheDependency.UtcLastModified">
          <source>If it is not, the item and its two dependencies are created and added to the <ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph>.</source>
          <target state="translated">如果不是，項目和其兩個相依性會建立並新增到<ph id="ph1">&lt;xref:System.Web.Caching.Cache&gt;</ph>。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>