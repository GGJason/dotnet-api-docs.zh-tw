<Type Name="CacheDependency" FullName="System.Web.Caching.CacheDependency">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c0839951f67fd4bcdf0655ac9d9150e9c2e6093c" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36405517" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class CacheDependency : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi CacheDependency extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Web.Caching.CacheDependency" />
  <TypeSignature Language="VB.NET" Value="Public Class CacheDependency&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class CacheDependency : IDisposable" />
  <TypeSignature Language="F#" Value="type CacheDependency = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Establishes a dependency relationship between an item stored in an ASP.NET application's <see cref="T:System.Web.Caching.Cache" /> object and a file, cache key, an array of either, or another <see cref="T:System.Web.Caching.CacheDependency" /> object. The <see cref="T:System.Web.Caching.CacheDependency" /> class monitors the dependency relationships so that when any of them changes, the cached item will be automatically removed.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果您將項目加入至相依於另一個物件，例如檔案或檔案，陣列的快取會自動移除相依的項目從快取物件變更時。 例如，假設您建立<xref:System.Data.DataSet>XML 檔案中的資料為基礎的物件。 您可以加入<xref:System.Data.DataSet>至快取<xref:System.Web.Caching.CacheDependency>物件，可讓<xref:System.Data.DataSet>相依於 XML 檔案。 如果變更 XML 檔案，<xref:System.Data.DataSet>從快取中移除。  
  
 您可以將相依的項目加入您的應用程式的快取<xref:System.Web.Caching.Cache.Add%2A>和<xref:System.Web.Caching.Cache.Insert%2A?displayProperty=nameWithType>方法。 您無法使用<xref:System.Web.Caching.Cache.Item%2A>將項目新增至快取相依性屬性。  
  
 若要設定相依性，您建立的執行個體<xref:System.Web.Caching.CacheDependency>類別，指定檔案、 索引鍵或目錄項目是相依，，然後將傳遞至相依性<xref:System.Web.Caching.Cache.Add%2A>或<xref:System.Web.Caching.Cache.Insert%2A?displayProperty=nameWithType>方法。 <xref:System.Web.Caching.CacheDependency>執行個體可以代表單一檔案或目錄、 檔案或目錄的陣列或檔案或目錄，以及快取索引鍵陣列的陣列 (這些代表儲存在其他項目<xref:System.Web.Caching.Cache>物件)。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.Caching.CacheDependency.HasChanged%2A>屬性來判斷是否<xref:System.Web.Caching.CacheDependency>自前一個要求中的項目變更<xref:System.Web.Caching.Cache>。 `dt`傳入值`start`參數設定為<xref:System.DateTime.Now%2A?displayProperty=nameWithType>。  
  
 [!code-csharp[System.Web.Caching.CacheDependency_HasChanged#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Caching.CacheDependency_HasChanged/CS/t.cs.aspx#1)]
 [!code-vb[System.Web.Caching.CacheDependency_HasChanged#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Caching.CacheDependency_HasChanged/VB/t.vb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Caching.Cache" />
    <altmember cref="M:System.Web.Caching.Cache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency)" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Web.Caching.CacheDependency" /> class.</summary>
        <altmember cref="T:System.Web.Caching.Cache" />
        <altmember cref="M:System.Web.Caching.Cache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency)" />
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CacheDependency ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.CacheDependency.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; CacheDependency();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Web.Caching.CacheDependency" /> class.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果您想要衍生您自己從<xref:System.Web.Caching.CacheDependency>，可實作此版本<xref:System.Web.Caching.CacheDependency.%23ctor%2A>建構函式。  
  
   
  
## Examples  
 下列程式碼範例是一個類別，實作這個版本的<xref:System.Web.Caching.CacheDependency>建構函式做為所有的類別衍生自<xref:System.Web.Caching.CacheDependency>所需。  
  
 [!code-vb[CacheDependency_Whidbey_Example1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CacheDependency_Whidbey_Example1/VB/cachedependencysample.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Caching.Cache" />
        <altmember cref="M:System.Web.Caching.Cache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CacheDependency (string filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string filename) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.CacheDependency.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (filename As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CacheDependency(System::String ^ filename);" />
      <MemberSignature Language="F#" Value="new System.Web.Caching.CacheDependency : string -&gt; System.Web.Caching.CacheDependency" Usage="new System.Web.Caching.CacheDependency filename" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filename">The path to a file or directory that the cached object is dependent upon. When this resource changes, the cached object becomes obsolete and is removed from the cache.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Web.Caching.CacheDependency" /> class that monitors a file or directory for changes.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果在指定的目錄或檔案`filename`參數中找不到檔案系統中，它會被視為遺漏。 如果找不到目錄或檔案具有相依性物件加入至中時<xref:System.Web.Caching.Cache>，快取的物件會移除<xref:System.Web.Caching.Cache>建立目錄或檔案時。  
  
 例如，假設您將物件加入<xref:System.Web.Caching.Cache>具有相依性的下列檔案路徑： c:\stocks\xyz.dat。 如果該檔案找不到時<xref:System.Web.Caching.CacheDependency>，物件會建立，但稍後建立快取的物件會在 xyz.dat 檔案建立時移除。  
  
   
  
## Examples  
 下列程式碼範例建立的執行個體<xref:System.Web.Caching.CacheDependency>類別具有相依性的 XML 檔案。 <xref:System.Web.Caching.Cache.Insert%2A?displayProperty=nameWithType>方法接著會將項目<xref:System.Web.Caching.Cache>這是相依於該檔案。  
  
 [!code-csharp[Classic CacheDependency.CacheDependency Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic CacheDependency.CacheDependency Example/CS/source.cs#1)]
 [!code-vb[Classic CacheDependency.CacheDependency Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic CacheDependency.CacheDependency Example/VB/source.vb#1)]  
  
 您也可以使用下列技巧來將項目加入<xref:System.Web.Caching.Cache>具有相依性的檔案。  
  
 [!code-csharp[Single File Dependency Cache entry#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Single File Dependency Cache entry/CS/DependencySingleFilecs.aspx#1)]
 [!code-vb[Single File Dependency Cache entry#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Single File Dependency Cache entry/VB/DependencySingleFilevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Caching.Cache" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CacheDependency (string[] filenames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string[] filenames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.CacheDependency.#ctor(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (filenames As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CacheDependency(cli::array &lt;System::String ^&gt; ^ filenames);" />
      <MemberSignature Language="F#" Value="new System.Web.Caching.CacheDependency : string[] -&gt; System.Web.Caching.CacheDependency" Usage="new System.Web.Caching.CacheDependency filenames" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="filenames" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="filenames">An array of paths (to files or directories) that the cached object is dependent upon. When any of these resources changes, the cached object becomes obsolete and is removed from the cache.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Web.Caching.CacheDependency" /> class that monitors an array of paths (to files or directories) for changes.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果檔案或目錄陣列中的任何變更或從該陣列中移除快取的項目就會變成過時並移除從應用程式的<xref:System.Web.Caching.Cache>物件。  
  
 此外，如果任何目錄或檔案中指定`filenames`參數中找不到檔案系統中，它會被視為遺漏。 如果找不到目錄或檔案具有相依性物件加入至中時<xref:System.Web.Caching.Cache>，快取的物件會移除<xref:System.Web.Caching.Cache>建立該目錄或檔案時。  
  
 例如，假設您將物件加入<xref:System.Web.Caching.Cache>具有相依性的下列檔案路徑： c:\stocks\xyz.dat。 如果該檔案找不到時<xref:System.Web.Caching.CacheDependency>，物件會建立，但稍後建立快取的物件會在 xyz.dat 檔案建立時移除。  
  
> [!NOTE]
>  當您建立陣列，其中包含檔案相依性時，您必須定義的檔案數目您加入的項目<xref:System.Web.Caching.Cache>而定。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.Caching.Cache.Insert%2A?displayProperty=nameWithType>方法，以將項目加入<xref:System.Web.Caching.Cache>依存性的檔案陣列。 您也可以將項目相依於的目錄陣列。  
  
 [!code-csharp[Multiple file based dependency#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Multiple file based dependency/CS/DependencyMultiFilecs.aspx#1)]
 [!code-vb[Multiple file based dependency#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Multiple file based dependency/VB/DependencyMultiFilevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Caching.Cache" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CacheDependency (string filename, DateTime start);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string filename, valuetype System.DateTime start) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.CacheDependency.#ctor(System.String,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (filename As String, start As DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CacheDependency(System::String ^ filename, DateTime start);" />
      <MemberSignature Language="F#" Value="new System.Web.Caching.CacheDependency : string * DateTime -&gt; System.Web.Caching.CacheDependency" Usage="new System.Web.Caching.CacheDependency (filename, start)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
        <Parameter Name="start" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="filename">The path to a file or directory that the cached object is dependent upon. When this resource changes, the cached object becomes obsolete and is removed from the cache.</param>
        <param name="start">The time against which to check the last modified date of the directory or file.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Web.Caching.CacheDependency" /> class that monitors a file or directory for changes.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果在指定的目錄或檔案`filename`參數中找不到檔案系統中，它會被視為遺漏。 如果找不到目錄或檔案具有相依性物件加入至中時<xref:System.Web.Caching.Cache>，快取的物件會移除<xref:System.Web.Caching.Cache>建立目錄或檔案時。  
  
 例如，假設您將物件加入<xref:System.Web.Caching.Cache>具有相依性的下列檔案路徑： c:\stocks\xyz.dat。 如果該檔案找不到時<xref:System.Web.Caching.CacheDependency>，物件會建立，但稍後建立快取的物件會在 xyz.dat 檔案建立時移除。  
  
> [!NOTE]
>  變更追蹤會立即開始並不直接根據`start`參數。 使用`start`要傳遞的日期和時間在過去，針對您想要檢查的上次修改日期的目錄或檔案的傳入參數`filename`參數。 如果上次修改日期晚於日期和時間設定傳入`start`參數，快取的項目移除從<xref:System.Web.Caching.Cache>。  
  
   
  
## Examples  
 下列程式碼範例會使用這個建構函式來具現化<xref:System.Web.Caching.CacheDependency>物件，然後插入項目<xref:System.Web.Caching.Cache>與該相依性。 `dt`傳入值`start`參數設定為<xref:System.DateTime.Now%2A?displayProperty=nameWithType>。  
  
 [!code-csharp[System.Web.Caching.CacheDependency_HasChanged#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Caching.CacheDependency_HasChanged/CS/t.cs.aspx#1)]
 [!code-vb[System.Web.Caching.CacheDependency_HasChanged#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Caching.CacheDependency_HasChanged/VB/t.vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Caching.Cache" />
        <altmember cref="M:System.Web.Caching.Cache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CacheDependency (string[] filenames, DateTime start);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string[] filenames, valuetype System.DateTime start) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (filenames As String(), start As DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CacheDependency(cli::array &lt;System::String ^&gt; ^ filenames, DateTime start);" />
      <MemberSignature Language="F#" Value="new System.Web.Caching.CacheDependency : string[] * DateTime -&gt; System.Web.Caching.CacheDependency" Usage="new System.Web.Caching.CacheDependency (filenames, start)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="filenames" Type="System.String[]" />
        <Parameter Name="start" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="filenames">An array of paths (to files or directories) that the cached object is dependent upon. When any of these resources changes, the cached object becomes obsolete and is removed from the cache.</param>
        <param name="start">The time against which to check the last modified date of the objects in the array.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Web.Caching.CacheDependency" /> class that monitors an array of paths (to files or directories) for changes and specifies a time when change monitoring begins.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果任何目錄或檔案中指定`filenames`參數中找不到檔案系統中，它會被視為遺漏。 如果找不到目錄或檔案具有相依性物件加入至中時<xref:System.Web.Caching.Cache>，快取的物件會移除<xref:System.Web.Caching.Cache>建立該目錄或檔案時。  
  
 例如，假設您將物件加入<xref:System.Web.Caching.Cache>具有相依性的下列檔案路徑： c:\stocks\xyz.dat。 如果該檔案找不到時<xref:System.Web.Caching.CacheDependency>，物件會建立，但稍後建立快取的物件會在 xyz.dat 檔案建立時移除。  
  
> [!NOTE]
>  變更追蹤會立即開始並不直接根據`start`參數。 使用`start`傳遞日期和時間，以針對您想要檢查陣列的上次修改的日期在過去的參數傳遞給`filenames`參數。 如果上次修改陣列中的任何物件的日期不晚於日期和時間設定傳入`start`參數，快取的項目移除從<xref:System.Web.Caching.Cache>。  
  
   
  
## Examples  
 下列程式碼範例會建立<xref:System.Web.Caching.CacheDependency>會傳遞兩個 XML 檔案的物件和<xref:System.DateTime.Now%2A?displayProperty=nameWithType>值的物件是做為參數引數包含<xref:System.Web.Caching.Cache.Insert%2A?displayProperty=nameWithType>方法呼叫。  
  
 [!code-csharp[CacheDependency Constructor4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CacheDependency Constructor4/CS/depmultifilestimecs.aspx#1)]
 [!code-vb[CacheDependency Constructor4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CacheDependency Constructor4/VB/depmultifilestimevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Caching.Cache" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CacheDependency (string[] filenames, string[] cachekeys);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string[] filenames, string[] cachekeys) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (filenames As String(), cachekeys As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CacheDependency(cli::array &lt;System::String ^&gt; ^ filenames, cli::array &lt;System::String ^&gt; ^ cachekeys);" />
      <MemberSignature Language="F#" Value="new System.Web.Caching.CacheDependency : string[] * string[] -&gt; System.Web.Caching.CacheDependency" Usage="new System.Web.Caching.CacheDependency (filenames, cachekeys)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="filenames" Type="System.String[]" />
        <Parameter Name="cachekeys" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="filenames">An array of paths (to files or directories) that the cached object is dependent upon. When any of these resources changes, the cached object becomes obsolete and is removed from the cache.</param>
        <param name="cachekeys">An array of cache keys that the new object monitors for changes. When any of these cache keys changes, the cached object associated with this dependency object becomes obsolete and is removed from the cache.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Web.Caching.CacheDependency" /> class that monitors an array of paths (to files or directories), an array of cache keys, or both for changes.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此外，如果任何目錄或檔案中指定`filenames`參數中找不到檔案系統中，它會被視為遺漏。 如果找不到目錄或檔案具有相依性物件加入至中時<xref:System.Web.Caching.Cache>，快取的物件會移除<xref:System.Web.Caching.Cache>建立該目錄或檔案時。  
  
 例如，假設您將物件加入<xref:System.Web.Caching.Cache>具有相依性的下列檔案路徑： c:\stocks\xyz.dat。 如果該檔案找不到時<xref:System.Web.Caching.CacheDependency>，物件會建立，但稍後建立快取的物件會在 xyz.dat 檔案建立時移除。  
  
 不過，`cachekeys`相依性無法運作方式相同。 如果中至少一個值`cachekeys`參數不存在於插入的時間，則插入會失敗。 請注意，這種情況下，會擲回任何例外狀況。  
  
## Examples  
 下列程式碼片段將示範如何將項目插入您的應用程式<xref:System.Web.Caching.Cache>具有相依性的索引鍵，另一個項目放在快取中。 因為這個方法會使用陣列語法，您必須定義索引鍵數目的項目加入<xref:System.Web.Caching.Cache>相依。  
  
 [!code-csharp[Key based dependency#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Key based dependency/CS/DependencyKeycs.aspx#1)]
 [!code-vb[Key based dependency#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Key based dependency/VB/DependencyKeyvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Caching.Cache" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CacheDependency (string[] filenames, string[] cachekeys, DateTime start);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string[] filenames, string[] cachekeys, valuetype System.DateTime start) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (filenames As String(), cachekeys As String(), start As DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CacheDependency(cli::array &lt;System::String ^&gt; ^ filenames, cli::array &lt;System::String ^&gt; ^ cachekeys, DateTime start);" />
      <MemberSignature Language="F#" Value="new System.Web.Caching.CacheDependency : string[] * string[] * DateTime -&gt; System.Web.Caching.CacheDependency" Usage="new System.Web.Caching.CacheDependency (filenames, cachekeys, start)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="filenames" Type="System.String[]" />
        <Parameter Name="cachekeys" Type="System.String[]" />
        <Parameter Name="start" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="filenames">An array of paths (to files or directories) that the cached object is dependent upon. When any of these resources changes, the cached object becomes obsolete and is removed from the cache.</param>
        <param name="cachekeys">An array of cache keys that the new object monitors for changes. When any of these cache keys changes, the cached object associated with this dependency object becomes obsolete and is removed from the cache.</param>
        <param name="start">The date and time against which to check the last modified date of the objects passed in the <c>filenames</c> and <c>cachekeys</c> arrays.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Web.Caching.CacheDependency" /> class that monitors an array of paths (to files or directories), an array of cache keys, or both for changes.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此外，如果任何目錄或檔案中指定`filenames`參數中找不到檔案系統中，它會被視為遺漏。 如果找不到目錄或檔案具有相依性物件加入至中時<xref:System.Web.Caching.Cache>，快取的物件會移除<xref:System.Web.Caching.Cache>建立該目錄或檔案時。  
  
 例如，假設您將物件加入<xref:System.Web.Caching.Cache>具有相依性的下列檔案路徑： c:\stocks\xyz.dat。 如果該檔案找不到時<xref:System.Web.Caching.CacheDependency>，物件會建立，但稍後建立快取的物件會在 xyz.dat 檔案建立時移除。  
  
 不過，`cachekeys`相依性無法運作方式相同。 如果中至少一個值`cachekeys`參數不存在於插入的時間，則插入會失敗。 請注意，這種情況下，會擲回任何例外狀況。

> [!NOTE]
>  變更追蹤會立即開始並不直接根據`start`參數。 使用`start`傳遞日期和時間，以針對您想要檢查的任何物件的上次修改的日期在過去的參數傳遞給`filenames`或`cachekeys`參數。 如果上次修改任何這些物件的日期不晚於日期和時間設定傳入`start`參數，快取的項目移除從<xref:System.Web.Caching.Cache>。  
  
   
  
## Examples  
 下列程式碼範例會建立`CreateDependency`方法。 當呼叫此方法時，它會建立<xref:System.DateTime>物件和<xref:System.Web.Caching.Cache.Item%2A?displayProperty=nameWithType>屬性用來將項目加入至快取`key`參數`key1`以及值`Value 1`。 Strings 的陣列， `dependencyKey`，接著會建立其值為`key1`以及。 這<xref:System.Web.Caching.CacheDependency>建構函式接著會執行個體化<xref:System.Web.Caching.CacheDependency>傳遞物件的`dependencyKey`和<xref:System.DateTime>做為參數的引數的物件。 <xref:System.Web.Caching.Cache.Insert%2A?displayProperty=nameWithType>方法使用接下來，呼叫<xref:System.Web.Caching.CacheDependency>物件做為參數。 這樣就可以加入至快取使用的物件<xref:System.Web.Caching.Cache.Insert%2A>方法取決於`key1`索引鍵。  
  
 [!code-csharp[CacheDependency Constructor6#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CacheDependency Constructor6/CS/depkeytimecs.aspx#1)]
 [!code-vb[CacheDependency Constructor6#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CacheDependency Constructor6/VB/depkeytimevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Caching.Cache" />
        <altmember cref="M:System.Web.Caching.Cache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CacheDependency (string[] filenames, string[] cachekeys, System.Web.Caching.CacheDependency dependency);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string[] filenames, string[] cachekeys, class System.Web.Caching.CacheDependency dependency) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (filenames As String(), cachekeys As String(), dependency As CacheDependency)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CacheDependency(cli::array &lt;System::String ^&gt; ^ filenames, cli::array &lt;System::String ^&gt; ^ cachekeys, System::Web::Caching::CacheDependency ^ dependency);" />
      <MemberSignature Language="F#" Value="new System.Web.Caching.CacheDependency : string[] * string[] * System.Web.Caching.CacheDependency -&gt; System.Web.Caching.CacheDependency" Usage="new System.Web.Caching.CacheDependency (filenames, cachekeys, dependency)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="filenames" Type="System.String[]" />
        <Parameter Name="cachekeys" Type="System.String[]" />
        <Parameter Name="dependency" Type="System.Web.Caching.CacheDependency" />
      </Parameters>
      <Docs>
        <param name="filenames">An array of paths (to files or directories) that the cached object is dependent upon. When any of these resources changes, the cached object becomes obsolete and is removed from the cache.</param>
        <param name="cachekeys">An array of cache keys that the new object monitors for changes. When any of these cache keys changes, the cached object associated with this dependency object becomes obsolete and is removed from the cache.</param>
        <param name="dependency">Another instance of the <see cref="T:System.Web.Caching.CacheDependency" /> class that this instance is dependent upon.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Web.Caching.CacheDependency" /> class that monitors an array of paths (to files or directories), an array of cache keys, or both for changes. It also makes itself dependent upon a separate instance of the <see cref="T:System.Web.Caching.CacheDependency" /> class.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此外，如果任何目錄或檔案中指定`filenames`參數中找不到檔案系統中，它會被視為遺漏。 如果找不到目錄或檔案具有相依性物件加入至中時<xref:System.Web.Caching.Cache>，快取的物件會移除<xref:System.Web.Caching.Cache>建立該目錄或檔案時。  
  
 例如，假設您將物件加入<xref:System.Web.Caching.Cache>具有相依性的下列檔案路徑： c:\stocks\xyz.dat。 如果該檔案找不到時<xref:System.Web.Caching.CacheDependency>，物件會建立，但稍後建立快取的物件會在 xyz.dat 檔案建立時移除。  
  
 不過，`cachekeys`相依性無法運作方式相同。 如果中至少一個值`cachekeys`參數不存在於插入的時間，則插入會失敗。 請注意，這種情況下，會擲回任何例外狀況。
  
## Examples  
 下列程式碼範例會建立`CreateDependency`方法。 當呼叫此方法時，它會使用<xref:System.Web.Caching.Cache.Item%2A?displayProperty=nameWithType>屬性新增至快取的項目`key`參數`key1`以及值`Value 1`。 Strings 的陣列， `dependencyKey`，接著會建立其值為`key1`以及。 <xref:System.Web.Caching.CacheDependency.%23ctor%2A?displayProperty=nameWithType>建構函式用來建立<xref:System.Web.Caching.CacheDependency>物件`dep1`，哪個階段`dependencyKey`做為參數引數。 第二個<xref:System.Web.Caching.CacheDependency>物件`dep2`，會使用這個建構函式，以建立`dep1`傳遞做為第三個參數引數。 此第二個相依性會相依於第一個項目。 <xref:System.Web.Caching.Cache.Insert%2A?displayProperty=nameWithType>方法使用第二個接下來，呼叫<xref:System.Web.Caching.CacheDependency>物件做為參數。 如果第一個相依性以任何方式變更，快取的項目將會失效。  
  
 [!code-csharp[CacheDependency Constructor7#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CacheDependency Constructor7/CS/dependencycs.aspx#1)]
 [!code-vb[CacheDependency Constructor7#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CacheDependency Constructor7/VB/dependencyvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CacheDependency (string[] filenames, string[] cachekeys, System.Web.Caching.CacheDependency dependency, DateTime start);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string[] filenames, string[] cachekeys, class System.Web.Caching.CacheDependency dependency, valuetype System.DateTime start) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.CacheDependency.#ctor(System.String[],System.String[],System.Web.Caching.CacheDependency,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (filenames As String(), cachekeys As String(), dependency As CacheDependency, start As DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CacheDependency(cli::array &lt;System::String ^&gt; ^ filenames, cli::array &lt;System::String ^&gt; ^ cachekeys, System::Web::Caching::CacheDependency ^ dependency, DateTime start);" />
      <MemberSignature Language="F#" Value="new System.Web.Caching.CacheDependency : string[] * string[] * System.Web.Caching.CacheDependency * DateTime -&gt; System.Web.Caching.CacheDependency" Usage="new System.Web.Caching.CacheDependency (filenames, cachekeys, dependency, start)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="filenames" Type="System.String[]" />
        <Parameter Name="cachekeys" Type="System.String[]" />
        <Parameter Name="dependency" Type="System.Web.Caching.CacheDependency" />
        <Parameter Name="start" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="filenames">An array of paths (to files or directories) that the cached object is dependent upon. When any of these resources changes, the cached object becomes obsolete and is removed from the cache.</param>
        <param name="cachekeys">An array of cache keys that the new object monitors for changes. When any of these cache keys changes, the cached object associated with this dependency object becomes obsolete and is removed from the cache.</param>
        <param name="dependency">Another instance of the <see cref="T:System.Web.Caching.CacheDependency" /> class that this instance is dependent upon.</param>
        <param name="start">The time against which to check the last modified date of the objects in the arrays and the <see cref="T:System.Web.Caching.CacheDependency" /> object.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Web.Caching.CacheDependency" /> class that monitors an array of paths (to files or directories), an array of cache keys, or both for changes. It also makes itself dependent upon another instance of the <see cref="T:System.Web.Caching.CacheDependency" /> class and a time when the change monitoring begins.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此外，如果任何目錄或檔案中指定`filenames`參數中找不到檔案系統中，它會被視為遺漏。 如果找不到目錄或檔案具有相依性物件加入至中時<xref:System.Web.Caching.Cache>，快取的物件會移除<xref:System.Web.Caching.Cache>建立該目錄或檔案時。  
  
 例如，假設您將物件加入<xref:System.Web.Caching.Cache>具有相依性的下列檔案路徑： c:\stocks\xyz.dat。 如果該檔案找不到時<xref:System.Web.Caching.CacheDependency>，物件會建立，但稍後建立快取的物件會在 xyz.dat 檔案建立時移除。  
 
 不過，`cachekeys`相依性無法運作方式相同。 如果中至少一個值`cachekeys`參數不存在於插入的時間，則插入會失敗。 請注意，這種情況下，會擲回任何例外狀況。

> [!NOTE]
>  變更追蹤會立即開始並不直接根據`start`參數。 使用`start`傳遞日期和時間，以針對您想要檢查的任何物件的上次修改的日期在過去的參數傳遞給`filenames`， `cachekeys`，或`dependency`參數。 如果上次修改日期的任何這些物件是晚於日期和時間傳入`start`參數，快取的項目移除從<xref:System.Web.Caching.Cache>。  
  
   
  
## Examples  
 下列程式碼範例示範`CreateDependency`方法。 當呼叫此方法時，它會建立<xref:System.DateTime>物件和<xref:System.Web.Caching.Cache.Item%2A?displayProperty=nameWithType>屬性用來將項目至快取的索引鍵參數`key1`以及值`Value 1`。 Strings 的陣列， `dependencyKey`，接著會建立與設定的值為其第一個 （且唯一） 索引處的值`key1`以及。 <xref:System.Web.Caching.CacheDependency.%23ctor%2A?displayProperty=nameWithType>建構函式後用於建立<xref:System.Web.Caching.CacheDependency>物件`dep1`，哪個階段`dependencyKey`做為參數引數。 第二個<xref:System.Web.Caching.CacheDependency>物件`dep2`，然後建立使用這個建構函式，`dep1`和<xref:System.DateTime>物件傳遞為參數的引數。 此第二個相依性，是根據第一和相依性監視會開始，10 秒後`CreateDependency`方法呼叫。 <xref:System.Web.Caching.Cache.Insert%2A?displayProperty=nameWithType>方法使用第二個接下來，呼叫<xref:System.Web.Caching.CacheDependency>物件做為參數。 如果第一個相依性以任何方式變更，快取的項目將會失效。  
  
 [!code-csharp[CacheDependency Constructor8#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CacheDependency Constructor8/CS/dependencytimecs.aspx#1)]
 [!code-vb[CacheDependency Constructor8#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CacheDependency Constructor8/VB/dependencytimevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Caching.Cache" />
        <altmember cref="M:System.Web.Caching.Cache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency)" />
      </Docs>
    </Member>
    <Member MemberName="DependencyDispose">
      <MemberSignature Language="C#" Value="protected virtual void DependencyDispose ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void DependencyDispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.CacheDependency.DependencyDispose" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub DependencyDispose ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void DependencyDispose();" />
      <MemberSignature Language="F#" Value="abstract member DependencyDispose : unit -&gt; unit&#xA;override this.DependencyDispose : unit -&gt; unit" Usage="cacheDependency.DependencyDispose " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Releases the resources used by the <see cref="T:System.Web.Caching.CacheDependency" /> class and any classes that derive from <see cref="T:System.Web.Caching.CacheDependency" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 任何衍生自的類別<xref:System.Web.Caching.CacheDependency>類別實作時需要這個方法，以清除的資源已在使用衍生的類別。  
  
   
  
## Examples  
 下列程式碼範例示範繼承自類別<xref:System.Web.Caching.CacheDependency>類別並覆寫<xref:System.Web.Caching.CacheDependency.DependencyDispose%2A>方法。 呼叫這個方法時，它會設定自訂的布林值屬性，名為`Disposed`至`true`。  
  
 [!code-vb[CacheDependency_Whidbey_Example1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CacheDependency_Whidbey_Example1/VB/cachedependencysample.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Caching.Cache" />
        <altmember cref="M:System.Web.Caching.Cache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency)" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.CacheDependency.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="cacheDependency.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Releases the resources used by the <see cref="T:System.Web.Caching.CacheDependency" /> object.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FinishInit">
      <MemberSignature Language="C#" Value="protected internal void FinishInit ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void FinishInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.CacheDependency.FinishInit" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub FinishInit ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; void FinishInit();" />
      <MemberSignature Language="F#" Value="member this.FinishInit : unit -&gt; unit" Usage="cacheDependency.FinishInit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Completes initialization of the <see cref="T:System.Web.Caching.CacheDependency" /> object.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Caching.CacheDependency.FinishInit%2A>方法完成初始化<xref:System.Web.Caching.CacheDependency>物件。 這個方法會呼叫所有<xref:System.Web.Caching.CacheDependency>建構函式。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <see cref="M:System.Web.Caching.CacheDependency.FinishInit" />方法必須完成的初始化衍生類別的建構函式結束時呼叫<see cref="T:System.Web.Caching.CacheDependency" />物件。</para>
        </block>
        <altmember cref="T:System.Web.Caching.Cache" />
        <altmember cref="M:System.Web.Caching.Cache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency)" />
      </Docs>
    </Member>
    <Member MemberName="GetFileDependencies">
      <MemberSignature Language="C#" Value="public virtual string[] GetFileDependencies ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetFileDependencies() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.CacheDependency.GetFileDependencies" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFileDependencies () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::String ^&gt; ^ GetFileDependencies();" />
      <MemberSignature Language="F#" Value="abstract member GetFileDependencies : unit -&gt; string[]&#xA;override this.GetFileDependencies : unit -&gt; string[]" Usage="cacheDependency.GetFileDependencies " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets the file dependencies.</summary>
        <returns>The file dependencies.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUniqueID">
      <MemberSignature Language="C#" Value="public virtual string GetUniqueID ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetUniqueID() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.CacheDependency.GetUniqueID" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetUniqueID () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetUniqueID();" />
      <MemberSignature Language="F#" Value="abstract member GetUniqueID : unit -&gt; string&#xA;override this.GetUniqueID : unit -&gt; string" Usage="cacheDependency.GetUniqueID " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retrieves a unique identifier for a <see cref="T:System.Web.Caching.CacheDependency" /> object.</summary>
        <returns>The unique identifier for the <see cref="T:System.Web.Caching.CacheDependency" /> object.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法會特別有用的追蹤多個執行個體<xref:System.Web.Caching.CacheDependency>項目或應用程式相關聯的類別。  
  
 識別碼是 （適用於檔案相依性） 的檔案名稱或索引鍵的名稱 （適用於快取索引鍵的相依性） 和字串，這個方法會將指派給相依性的組合。 在衍生自的<xref:System.Web.Caching.CacheDependency>類別，您可以覆寫這個方法以自訂方式會產生的唯一識別碼。  
  
   
  
## Examples  
 下列程式碼範例會建立<xref:System.Web.Caching.AggregateCacheDependency>物件，名為`aggDep`，具有兩個<xref:System.Web.Caching.CacheDependency>其陣列中的物件。 一次`aggDep`具現化程式碼會呼叫<xref:System.Web.Caching.CacheDependency.GetUniqueID%2A>方法來產生兩個相依性的唯一識別碼，`aggDep`包含並顯示包含頁面的識別碼。 若要再加入項目<xref:System.Web.Caching.Cache>，並使用<xref:System.Web.Caching.Cache.Insert%2A>方法，與`aggDep`做為相依性。  
  
 [!code-vb[CachingSamples_AggregateCacheDependency1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CachingSamples_AggregateCacheDependency1/VB/aggregatecachedependencysamplevb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Caching.Cache" />
      </Docs>
    </Member>
    <Member MemberName="HasChanged">
      <MemberSignature Language="C#" Value="public bool HasChanged { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasChanged" />
      <MemberSignature Language="DocId" Value="P:System.Web.Caching.CacheDependency.HasChanged" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasChanged As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasChanged { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasChanged : bool" Usage="System.Web.Caching.CacheDependency.HasChanged" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether the <see cref="T:System.Web.Caching.CacheDependency" /> object has changed.</summary>
        <value>
          <see langword="true" /> 如果<see cref="T:System.Web.Caching.CacheDependency" />物件已變更，否則<see langword="false" />。 預設值為 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以將項目加入至 ASP.NET 應用程式的<xref:System.Web.Caching.Cache>與<xref:System.Web.Caching.CacheDependency>。 當<xref:System.Web.Caching.CacheDependency>變更時，若要加入的項目<xref:System.Web.Caching.Cache>失效，並從快取中移除。 您可以使用這個屬性來判斷是否<xref:System.Web.Caching.CacheDependency>已變更，並重新建立中的項目<xref:System.Web.Caching.Cache>，已發生。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.Caching.CacheDependency.HasChanged%2A>屬性來判斷是否<xref:System.Web.Caching.CacheDependency>自前一個要求中的項目變更<xref:System.Web.Caching.Cache>。 `dt`傳入值`start`參數設定為<xref:System.DateTime.Now%2A?displayProperty=nameWithType>。  
  
 [!code-csharp[System.Web.Caching.CacheDependency_HasChanged#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Caching.CacheDependency_HasChanged/CS/t.cs.aspx#1)]
 [!code-vb[System.Web.Caching.CacheDependency_HasChanged#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Caching.CacheDependency_HasChanged/VB/t.vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Caching.Cache" />
        <altmember cref="M:System.Web.Caching.Cache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency)" />
      </Docs>
    </Member>
    <Member MemberName="ItemRemoved">
      <MemberSignature Language="C#" Value="public void ItemRemoved ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ItemRemoved() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.CacheDependency.ItemRemoved" />
      <MemberSignature Language="VB.NET" Value="Public Sub ItemRemoved ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ItemRemoved();" />
      <MemberSignature Language="F#" Value="member this.ItemRemoved : unit -&gt; unit" Usage="cacheDependency.ItemRemoved " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Called when a monitored cache entry is removed.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeepDependenciesAlive">
      <MemberSignature Language="C#" Value="public void KeepDependenciesAlive ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void KeepDependenciesAlive() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.CacheDependency.KeepDependenciesAlive" />
      <MemberSignature Language="VB.NET" Value="Public Sub KeepDependenciesAlive ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void KeepDependenciesAlive();" />
      <MemberSignature Language="F#" Value="member this.KeepDependenciesAlive : unit -&gt; unit" Usage="cacheDependency.KeepDependenciesAlive " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Updates the last access time of every cache item that depends on this item.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NotifyDependencyChanged">
      <MemberSignature Language="C#" Value="protected void NotifyDependencyChanged (object sender, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void NotifyDependencyChanged(object sender, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.CacheDependency.NotifyDependencyChanged(System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub NotifyDependencyChanged (sender As Object, e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void NotifyDependencyChanged(System::Object ^ sender, EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="member this.NotifyDependencyChanged : obj * EventArgs -&gt; unit" Usage="cacheDependency.NotifyDependencyChanged (sender, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">The source of the event.</param>
        <param name="e">An <see cref="T:System.EventArgs" /> object that contains the event data.</param>
        <summary>Notifies the base <see cref="T:System.Web.Caching.CacheDependency" /> object that the dependency represented by a derived <see cref="T:System.Web.Caching.CacheDependency" /> class has changed.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 任何衍生自的類別<xref:System.Web.Caching.CacheDependency>類別必須實作這個方法。  
  
 當您衍生自<xref:System.Web.Caching.CacheDependency>類別，使用任何方法或屬性，您不覆寫的基底功能。 當您建立衍生類別的執行個體時，它代表檔案、 快取索引鍵、 資料庫資料表或您想要使快取的項目相依於其他任意物件。 當相依性項目變更時，這個方法會通知的基本功能<xref:System.Web.Caching.CacheDependency>類別的項目已變更，讓值<xref:System.Web.Caching.CacheDependency.HasChanged%2A>和<xref:System.Web.Caching.CacheDependency.UtcLastModified%2A>屬性皆可更新。  
  
   
  
## Examples  
 下列程式碼範例示範繼承自類別<xref:System.Web.Caching.CacheDependency>類別。 它會建立公用的方法`ResetDependency`，使用<xref:System.Web.Caching.CacheDependency.SetUtcLastModified%2A>方法，以變更所在的相依性修改的時間，然後呼叫<xref:System.Web.Caching.CacheDependency.NotifyDependencyChanged%2A>方法。  
  
 [!code-vb[CacheDependency_Whidbey_Example1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CacheDependency_Whidbey_Example1/VB/cachedependencysample.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Caching.Cache" />
        <altmember cref="M:System.Web.Caching.Cache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency)" />
      </Docs>
    </Member>
    <Member MemberName="SetCacheDependencyChanged">
      <MemberSignature Language="C#" Value="public void SetCacheDependencyChanged (Action&lt;object,EventArgs&gt; dependencyChangedAction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetCacheDependencyChanged(class System.Action`2&lt;object, class System.EventArgs&gt; dependencyChangedAction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.CacheDependency.SetCacheDependencyChanged(System.Action{System.Object,System.EventArgs})" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetCacheDependencyChanged (dependencyChangedAction As Action(Of Object, EventArgs))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetCacheDependencyChanged(Action&lt;System::Object ^, EventArgs ^&gt; ^ dependencyChangedAction);" />
      <MemberSignature Language="F#" Value="member this.SetCacheDependencyChanged : Action&lt;obj, EventArgs&gt; -&gt; unit" Usage="cacheDependency.SetCacheDependencyChanged dependencyChangedAction" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependencyChangedAction" Type="System.Action&lt;System.Object,System.EventArgs&gt;" />
      </Parameters>
      <Docs>
        <param name="dependencyChangedAction">The dependency changed action.</param>
        <summary>Adds an Action method to handle notifying interested party in changes to this dependency.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetUtcLastModified">
      <MemberSignature Language="C#" Value="protected void SetUtcLastModified (DateTime utcLastModified);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetUtcLastModified(valuetype System.DateTime utcLastModified) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.CacheDependency.SetUtcLastModified(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SetUtcLastModified (utcLastModified As DateTime)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetUtcLastModified(DateTime utcLastModified);" />
      <MemberSignature Language="F#" Value="member this.SetUtcLastModified : DateTime -&gt; unit" Usage="cacheDependency.SetUtcLastModified utcLastModified" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="utcLastModified" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="utcLastModified">The time when the dependency last changed.</param>
        <summary>Marks the time when a dependency last changed.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列程式碼範例示範繼承自類別<xref:System.Web.Caching.CacheDependency>類別。 它會建立公用的方法`ResetDependency`，使用<xref:System.Web.Caching.CacheDependency.SetUtcLastModified%2A>方法，以變更所在的相依性修改的時間，然後呼叫<xref:System.Web.Caching.CacheDependency.NotifyDependencyChanged%2A>方法。  
  
 [!code-vb[CacheDependency_Whidbey_Example1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CacheDependency_Whidbey_Example1/VB/cachedependencysample.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Caching.Cache" />
        <altmember cref="M:System.Web.Caching.Cache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency)" />
      </Docs>
    </Member>
    <Member MemberName="TakeOwnership">
      <MemberSignature Language="C#" Value="public bool TakeOwnership ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TakeOwnership() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.CacheDependency.TakeOwnership" />
      <MemberSignature Language="VB.NET" Value="Public Function TakeOwnership () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TakeOwnership();" />
      <MemberSignature Language="F#" Value="member this.TakeOwnership : unit -&gt; bool" Usage="cacheDependency.TakeOwnership " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Allows the first user to declare exclusive ownership of this dependency.</summary>
        <returns>
          <see langword="true" />
          <see langword="true" /> if the item was the first to take ownership otherwise <see langword="false" />. <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法宣告使用的相依性。 如果另一個項目之前呼叫這個方法，並擁有權，`false`傳回。 A<xref:System.Web.Caching.CacheDependency>僅能由一個快取項目。 當項目具有任何指定的快取相依性加入至快取時，快取應該採取這些相依性，以確定，它們都不會重複使用某處其他擁有的權。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UtcLastModified">
      <MemberSignature Language="C#" Value="public DateTime UtcLastModified { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime UtcLastModified" />
      <MemberSignature Language="DocId" Value="P:System.Web.Caching.CacheDependency.UtcLastModified" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UtcLastModified As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime UtcLastModified { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.UtcLastModified : DateTime" Usage="System.Web.Caching.CacheDependency.UtcLastModified" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the time when the dependency was last changed.</summary>
        <value>上次變更相依性的時間。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個屬性的測量以國際標準時間 (UTC) （也稱為格林威治標準時間）。  
  
   
  
## Examples  
 下列程式碼範例使用<xref:System.Web.Caching.AggregateCacheDependency>新增項目，具有兩個類別<xref:System.Web.Caching.CacheDependency>為物件的相依性， <xref:System.Web.Caching.Cache>。 當要求<xref:System.Web.Caching.Cache>項目，程式碼會檢查的項目是否在<xref:System.Web.Caching.Cache>。 如果是，<xref:System.Web.Caching.CacheDependency.UtcLastModified%2A>屬性轉換為字串，且頁面上顯示。 如果不是，項目和其兩個相依性會建立並新增到<xref:System.Web.Caching.Cache>。  
  
 [!code-vb[CachingSamples_AggregateCacheDependency1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CachingSamples_AggregateCacheDependency1/VB/aggregatecachedependencysamplevb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Caching.Cache" />
        <altmember cref="M:System.Web.Caching.Cache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency)" />
      </Docs>
    </Member>
  </Members>
</Type>