<Type Name="Cache" FullName="System.Web.Caching.Cache">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9cbce0d0f80ca7f944a9fa13480e768fede119bd" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30530872" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class Cache : System.Collections.IEnumerable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Cache extends System.Object implements class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Web.Caching.Cache" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Cache&#xA;Implements IEnumerable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Cache sealed : System::Collections::IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>實作 Web 應用程式的快取。 這個類別無法被繼承。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 建立一個執行個體，這個類別的每個應用程式網域，且只要在應用程式定義域會保持使用中仍有效。 這個類別的執行個體的資訊是透過`Cache`屬性<xref:System.Web.HttpContext>物件或`Cache`屬性<xref:System.Web.UI.Page>物件。  
  
> [!NOTE]
>  <xref:System.Web.Caching.Cache>類別並不適合用於 ASP.NET 應用程式之外。 它在設計和測試以提供 Web 應用程式的快取的 ASP.NET 中使用。 對於其他類型的應用程式，例如主控台應用程式或 Windows Forms 應用程式，使用<xref:System.Runtime.Caching.ObjectCache>類別。  
  
   
  
## Examples  
 下列範例為頁面的值指派給快取中，項目會顯示使用者，並通知它們從快取中移除項目時。 它會建立`RemovedCallback`方法簽章的`CacheItemRemovedCallback`委派，會移除快取項目，並使用時通知使用者<xref:System.Web.Caching.CacheItemRemovedReason>列舉型別來告知它們為何它已被移除。 此外，它會使用<xref:System.Web.Caching.Cache.Item%2A?displayProperty=nameWithType>屬性，以將物件新增至快取，然後擷取這些物件的值。 在`AddItemToCache`方法，它會使用<xref:System.Web.Caching.Cache.Add%2A?displayProperty=nameWithType>方法將項目新增至快取。 若要使用`CacheItemRemovedCallback`委派，必須使用此方法將項目加入至快取或<xref:System.Web.Caching.Cache.Insert%2A?displayProperty=nameWithType>方法，因此，ASP.NET 可以自動讓適當的方法呼叫時已移除項目。 自訂`RemoveItemFromCache`方法會使用<xref:System.Web.Caching.Cache.Remove%2A?displayProperty=nameWithType>方法明確地刪除的項目從快取，造成`RemovedCallback`方法被叫用。  
  
> [!NOTE]
>  存取下列片段所模式化的快取的執行個體是屬於<xref:System.Web.UI.Page>這個範例會繼承的物件。  
  
 [!code-aspx-csharp[System.Web.Caching Examples#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Caching Examples/CS/cachecs.aspx#1)]
 [!code-aspx-vb[System.Web.Caching Examples#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Caching Examples/VB/cachevb.aspx#1)]
  
 ]]></format>
    </remarks>
    <threadsafe>此型別具備執行緒安全。</threadsafe>
    <altmember cref="T:System.Web.HttpContext" />
    <altmember cref="T:System.Web.Caching.CacheDependency" />
    <altmember cref="T:System.Web.Caching.CacheItemRemovedCallback" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Cache ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.Cache.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Cache();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.Caching.Cache" /> 類別的新執行個體。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public object Add (string key, object value, System.Web.Caching.CacheDependency dependencies, DateTime absoluteExpiration, TimeSpan slidingExpiration, System.Web.Caching.CacheItemPriority priority, System.Web.Caching.CacheItemRemovedCallback onRemoveCallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Add(string key, object value, class System.Web.Caching.CacheDependency dependencies, valuetype System.DateTime absoluteExpiration, valuetype System.TimeSpan slidingExpiration, valuetype System.Web.Caching.CacheItemPriority priority, class System.Web.Caching.CacheItemRemovedCallback onRemoveCallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.Cache.Add(System.String,System.Object,System.Web.Caching.CacheDependency,System.DateTime,System.TimeSpan,System.Web.Caching.CacheItemPriority,System.Web.Caching.CacheItemRemovedCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (key As String, value As Object, dependencies As CacheDependency, absoluteExpiration As DateTime, slidingExpiration As TimeSpan, priority As CacheItemPriority, onRemoveCallback As CacheItemRemovedCallback) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Add(System::String ^ key, System::Object ^ value, System::Web::Caching::CacheDependency ^ dependencies, DateTime absoluteExpiration, TimeSpan slidingExpiration, System::Web::Caching::CacheItemPriority priority, System::Web::Caching::CacheItemRemovedCallback ^ onRemoveCallback);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="dependencies" Type="System.Web.Caching.CacheDependency" />
        <Parameter Name="absoluteExpiration" Type="System.DateTime" />
        <Parameter Name="slidingExpiration" Type="System.TimeSpan" />
        <Parameter Name="priority" Type="System.Web.Caching.CacheItemPriority" />
        <Parameter Name="onRemoveCallback" Type="System.Web.Caching.CacheItemRemovedCallback" />
      </Parameters>
      <Docs>
        <param name="key">用來參考項目的快取索引鍵。</param>
        <param name="value">加入至快取的項目。</param>
        <param name="dependencies">項目的檔案或快取索引鍵相依性。 任何相依性變更時，物件會變成無效並從快取中移除。 如果沒有相依性，這個參數就會包含 <see langword="null" />。</param>
        <param name="absoluteExpiration">新增的物件過期並從快取中移除的時間。 如果使用的是滑動期限，則 <c>absoluteExpiration</c> 參數必須設為 <see cref="F:System.Web.Caching.Cache.NoAbsoluteExpiration" />。</param>
        <param name="slidingExpiration">上次存取加入物件的時間與該物件到期的時間之間隔。 如果這個值等於二十分鐘，那麼物件會在最後存取的二十分鐘後過期，並從快取中移除。 如果使用的是絕對期限，則 <c>slidingExpiration</c> 參數必須設為 <see cref="F:System.Web.Caching.Cache.NoSlidingExpiration" />。</param>
        <param name="priority">物件的相對花費，如 <see cref="T:System.Web.Caching.CacheItemPriority" /> 列舉型別所示。 在其清除物件時，快取會使用這個值；花費較低的物件會在花費較高的物件之前從快取移除。</param>
        <param name="onRemoveCallback">當物件從快取移除時，會呼叫委派 (如果有提供的話)。 您可以使用這個在它們的物件從快取刪除時告知應用程式。</param>
        <summary>使用相依性、期限和優先權原則，將指定項目加入 <see cref="T:System.Web.Caching.Cache" /> 物件，並且您也可以從 <see langword="Cache" /> 移除插入項目時使用委派 (Delegate) 來告知您的應用程式。</summary>
        <returns>如果加入的項目先前已儲存在快取中，則為表示此項目的物件，否則為 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果具有相同的項目至這個方法的呼叫將失敗`key`參數已經儲存在`Cache`。 若要覆寫現有`Cache`使用相同的項目`key`參數，使用<xref:System.Web.Caching.Cache.Insert%2A>方法。  
  
 您不能同時設定`absoluteExpiration`和`slidingExpiration`參數。 如果您想在特定時間過期的快取項目，設定`absoluteExpiration`參數為特定的時間，而`slidingExpiration`參數<xref:System.Web.Caching.Cache.NoSlidingExpiration>。  
  
 如果您想要快取項目在一段時間之後過期後經過上一次存取項目，則設定`slidingExpiration`到期時間間隔的參數和`absoluteExpiration`參數<xref:System.Web.Caching.Cache.NoAbsoluteExpiration>。  
  
   
  
## Examples  
 下列範例會建立`AddItemToCache`方法。 當呼叫此方法時，它會設定`itemRemoved`屬性`false`並註冊`onRemove`方法的新執行個體<xref:System.Web.Caching.CacheItemRemovedCallback>委派。 委派的簽章用於`RemovedCallback`方法。 `AddItemToCache`方法接著會檢查相關聯的值`Key1`快取中的索引鍵。 如果值為`null`、`Add`方法將項目放在快取索引鍵為`Key1`，值為`Value 1`，絕對期限為 60 秒，而較高的快取的優先順序。 它也會使用`onRemove`做為引數的方法。 這可讓`RemovedCallback`要從快取中移除此項目時呼叫的方法。  
  
> [!NOTE]
>  如需如何使用的範例<xref:System.Web.Caching.CacheDependency>類別和<xref:System.Web.Caching.CacheItemRemovedCallback>委派，請參閱[快取應用程式資料](http://msdn.microsoft.com/library/206f977d-7860-4d20-bdd5-c3b3d8479f3d)。  
  
 [!code-csharp[System.Web.Caching Examples#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Caching Examples/CS/cachecs.aspx#3)]
 [!code-vb[System.Web.Caching Examples#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Caching Examples/VB/cachevb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="key" /> 或 <paramref name="value" /> 參數是設定為 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="slidingExpiration" /> 參數設定為小於 <see langword="TimeSpan.Zero" /> 或多於一年。</exception>
        <exception cref="T:System.ArgumentException">您要為 <see langword="Cache" /> 加入的項目都會設定 <paramref name="absoluteExpiration" /> 和 <paramref name="slidingExpiration" /> 參數。</exception>
        <altmember cref="T:System.Web.Caching.CacheDependency" />
        <altmember cref="T:System.Web.Caching.CacheItemPriority" />
        <altmember cref="T:System.Web.Caching.CacheItemRemovedCallback" />
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Web.Caching.Cache.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得快取中所儲存的項目數。</summary>
        <value>快取中所儲存的項目數。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 監視應用程式的效能時，或使用 ASP.NET 追蹤功能時，這個屬性可以是很有用。  
  
   
  
## Examples  
 下列範例會取得的值`Count`屬性，將它轉換為字串，並將指派到字串<xref:System.Web.UI.WebControls.Label.Text%2A>屬性<xref:System.Web.UI.WebControls.Label>Web 伺服器控制項`Label1`。  
  
 [!code-csharp[System.Web.Caching.Cache.Count#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Caching.Cache.Count/CS/cachecountcs.aspx#1)]
 [!code-vb[System.Web.Caching.Cache.Count#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Caching.Cache.Count/VB/cachecountvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EffectivePercentagePhysicalMemoryLimit">
      <MemberSignature Language="C#" Value="public long EffectivePercentagePhysicalMemoryLimit { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 EffectivePercentagePhysicalMemoryLimit" />
      <MemberSignature Language="DocId" Value="P:System.Web.Caching.Cache.EffectivePercentagePhysicalMemoryLimit" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EffectivePercentagePhysicalMemoryLimit As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long EffectivePercentagePhysicalMemoryLimit { long get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得應用程式可以消耗的實體記憶體百分比，超過這個百分比，ASP.NET 就會開始移除快取區中的項目。</summary>
        <value>應用程式可用的實體記憶體百分比。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Caching.Cache.EffectivePercentagePhysicalMemoryLimit%2A>屬性會傳回可用於應用程式的實體記憶體的百分比。 可用百分比變低時，快取演算法會開始從快取中移除項目。  
  
 <xref:System.Web.Caching.Cache.EffectivePercentagePhysicalMemoryLimit%2A>屬性可以設定與`percentagePhysicalMemoryUsedLimit`屬性[快取項目 （ASP.NET 設定結構描述） 快取](http://msdn.microsoft.com/library/68fa0040-5abf-4c73-93fc-17e3c6af3299)應用程式的組態檔中的項目。 如果`percentagePhysicalMemoryUsedLimit`屬性未設定，快取演算法決定快取的大小上限和<xref:System.Web.Caching.Cache.EffectivePercentagePhysicalMemoryLimit%2A>計算屬性。  
  
 <xref:System.Web.Caching.Cache.EffectivePercentagePhysicalMemoryLimit%2A> .NET Framework 3.5 版中引進。  如需詳細資訊，請參閱[版本和相依性](~/docs/framework/migration-guide/versions-and-dependencies.md)。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.Caching.Cache.EffectivePrivateBytesLimit" />
      </Docs>
    </Member>
    <Member MemberName="EffectivePrivateBytesLimit">
      <MemberSignature Language="C#" Value="public long EffectivePrivateBytesLimit { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 EffectivePrivateBytesLimit" />
      <MemberSignature Language="DocId" Value="P:System.Web.Caching.Cache.EffectivePrivateBytesLimit" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EffectivePrivateBytesLimit As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long EffectivePrivateBytesLimit { long get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得快取可用的位元組數目。</summary>
        <value>快取可用的位元組數目。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Caching.Cache.EffectivePrivateBytesLimit%2A>屬性會傳回可由應用程式處理序的位元組數目。 一旦達到此限制時，快取演算法開始積極地清除快取。  
  
 <xref:System.Web.Caching.Cache.EffectivePrivateBytesLimit%2A>屬性可以設定與`privateBytesLimit`屬性[快取項目 （ASP.NET 設定結構描述） 快取](http://msdn.microsoft.com/library/68fa0040-5abf-4c73-93fc-17e3c6af3299)應用程式的組態檔中的項目。 當`privateBytesLimit`屬性未設定，快取演算法決定快取的大小上限和<xref:System.Web.Caching.Cache.EffectivePrivateBytesLimit%2A>屬性包含演算法所選擇的大小。  
  
   
  
## Examples  
 <xref:System.Web.Caching.Cache.EffectivePercentagePhysicalMemoryLimit%2A>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public object Get (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Get(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.Cache.Get(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Get (key As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Get(System::String ^ key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">要擷取的快取項目識別項。</param>
        <summary>從 <see cref="T:System.Web.Caching.Cache" /> 擷取指定的項目。</summary>
        <returns>擷取的快取項目，或如果沒有找到索引鍵時，則為 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列範例會示範如何擷取快取的 ASP.NET 文字方塊伺服器控制項的值。  
  
 [!code-csharp[Classic Cache.Get Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Cache.Get Example/CS/source.cs#1)]
 [!code-vb[Classic Cache.Get Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Cache.Get Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IDictionaryEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.IDictionaryEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.Cache.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IDictionaryEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IDictionaryEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionaryEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>擷取字典列舉程式，用來逐一查看金鑰設定及其在快取中所包含的值。</summary>
        <returns>要在整個 <see cref="T:System.Web.Caching.Cache" /> 物件中重複的列舉值。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 項目可以加入或移除從快取，而這個方法列舉的項目之間。  
  
   
  
## Examples  
 下列範例會建立<xref:System.Collections.IDictionaryEnumerator>物件`CacheEnum`，並使用`GetEnumerator`方法。 列舉值會移到快取中，將每個快取項目的值，轉換為字串，並再將值寫入至 Web Form 頁面。  
  
 [!code-csharp[Cache.GetEnumerator#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Cache.GetEnumerator/CS/getenumcs.aspx#1)]
 [!code-vb[Cache.GetEnumerator#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Cache.GetEnumerator/VB/getenumvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Insert">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>插入項目至 <see cref="T:System.Web.Caching.Cache" /> 物件。 使用這個方法的其中一個版本以相同 <paramref name="key" /> 參數來覆寫現有 <see langword="Cache" /> 項目。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (string key, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(string key, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.Cache.Insert(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (key As String, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(System::String ^ key, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key">用來參考項目的快取索引鍵。</param>
        <param name="value">要插入至快取的物件。</param>
        <summary>使用 <see cref="T:System.Web.Caching.Cache" /> 列舉型別所提供的預設值，將項目插入 <see cref="T:System.Web.Caching.CacheItemPriority" /> 物件，並讓快取索引鍵參考其位置。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法會覆寫現有的快取項目索引鍵符合`key`參數。 使用這個多載的快取中加入的物件`Insert`方法已插入不含檔案或快取相依性，優先順序為<xref:System.Web.Caching.CacheItemPriority.Default>、 滑動逾期值<xref:System.Web.Caching.Cache.NoSlidingExpiration>，和絕對逾期值的<xref:System.Web.Caching.Cache.NoAbsoluteExpiration>。  
  
   
  
## Examples  
 下列範例會示範如何將項目插入至應用程式的快取。  
  
 [!code-csharp[Classic Cache.Insert Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Cache.Insert Example/CS/source.cs#1)]
 [!code-vb[Classic Cache.Insert Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Cache.Insert Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="key" /> 或 <paramref name="value" /> 參數為 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (string key, object value, System.Web.Caching.CacheDependency dependencies);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(string key, object value, class System.Web.Caching.CacheDependency dependencies) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.Cache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (key As String, value As Object, dependencies As CacheDependency)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(System::String ^ key, System::Object ^ value, System::Web::Caching::CacheDependency ^ dependencies);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="dependencies" Type="System.Web.Caching.CacheDependency" />
      </Parameters>
      <Docs>
        <param name="key">用來識別項目的快取索引鍵。</param>
        <param name="value">要插入至快取的物件。</param>
        <param name="dependencies">插入物件的檔案或快取索引鍵相依性。 任何相依性變更時，物件會變成無效並從快取中移除。 如果沒有相依性，這個參數就會包含 <see langword="null" />。</param>
        <summary>將物件插入至有檔案或索引鍵相依性的 <see cref="T:System.Web.Caching.Cache" />。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法會覆寫現有的快取項目索引鍵符合`key`參數。 使用這個多載的快取中加入的物件`Insert`方法已插入不含檔案或快取相依性，優先順序為<xref:System.Web.Caching.CacheItemPriority.Default>、 滑動逾期值<xref:System.Web.Caching.Cache.NoSlidingExpiration>，和絕對逾期值的<xref:System.Web.Caching.Cache.NoAbsoluteExpiration>。  
  
   
  
## Examples  
 下列範例會示範如何將項目插入快取相依性的 XML 設定檔的應用程式的快取。  
  
 [!code-csharp[Classic Cache.Insert1 Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Cache.Insert1 Example/CS/source.cs#1)]
 [!code-vb[Classic Cache.Insert1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Cache.Insert1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="key" /> 或 <paramref name="value" /> 參數為 <see langword="null" />。</exception>
        <altmember cref="T:System.Web.Caching.CacheDependency" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (string key, object value, System.Web.Caching.CacheDependency dependencies, DateTime absoluteExpiration, TimeSpan slidingExpiration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(string key, object value, class System.Web.Caching.CacheDependency dependencies, valuetype System.DateTime absoluteExpiration, valuetype System.TimeSpan slidingExpiration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.Cache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency,System.DateTime,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (key As String, value As Object, dependencies As CacheDependency, absoluteExpiration As DateTime, slidingExpiration As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(System::String ^ key, System::Object ^ value, System::Web::Caching::CacheDependency ^ dependencies, DateTime absoluteExpiration, TimeSpan slidingExpiration);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="dependencies" Type="System.Web.Caching.CacheDependency" />
        <Parameter Name="absoluteExpiration" Type="System.DateTime" />
        <Parameter Name="slidingExpiration" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="key">用來參考物件的快取索引鍵。</param>
        <param name="value">要插入至快取的物件。</param>
        <param name="dependencies">插入物件的檔案或快取索引鍵相依性。 任何相依性變更時，物件會變成無效並從快取中移除。 如果沒有相依性，這個參數就會包含 <see langword="null" />。</param>
        <param name="absoluteExpiration">插入物件過期並從快取移除的時間。 為避免當地時間發生問題 (例如，從標準時間變更為日光節約時間)，請使用 <see cref="P:System.DateTime.UtcNow" /> 而非 <see cref="P:System.DateTime.Now" /> 做為這個參數值。 如果使用的是絕對期限，則 <c>slidingExpiration</c> 參數必須設為 <see cref="F:System.Web.Caching.Cache.NoSlidingExpiration" />。</param>
        <param name="slidingExpiration">在上次存取所插入物件的時間以及該物件到期時間之間的間隔。 如果此值相當於 20 分鐘，物件將會到期，而且會從上次存取之後的 20 分鐘從快取中移除。 如果使用的是滑動期限，則 <c>absoluteExpiration</c> 參數必須設為 <see cref="F:System.Web.Caching.Cache.NoAbsoluteExpiration" />。</param>
        <summary>使用相依性和期限原則將物件插入 <see cref="T:System.Web.Caching.Cache" />。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法將覆寫現有`Cache`具有相同的項目`key`參數。  
  
 如果`slidingExpiration`參數設定為<xref:System.Web.Caching.Cache.NoSlidingExpiration>，滑動期限會停用。 如果您設定`slidingExpiration`參數大於<xref:System.TimeSpan.Zero>、`absoluteExpiration`參數設定為<xref:System.DateTime.Now%2A>中包含的值加`slidingExpiration`參數。 如果項目會從快取要求之前所指定的時間量`absoluteExpiration`參數，此項目將會放置於快取，和`absoluteExpiration`再次設定為`DateTime.Now`中包含的值加`slidingExpiration`參數。 如果項目未要求從快取中的日期之前`absoluteExpiration`參數，此項目會從快取移除。 。 使用這個方法多載，插入快取中加入的項目會插入優先順序為<xref:System.Web.Caching.CacheItemPriority.Default>。  
  
   
  
## Examples  
 下列範例會示範如何將項目插入快取的應用程式絕對期限。  
  
> [!NOTE]
>  這種形式的自`Insert`方法支援快取相依性，如果此項目沒有任何相依性，您必須宣告`dependency`參數做為`null`(`Nothing`在 Visual Basic 中) 以逗號分隔清單中的參數。  
  
 [!code-csharp[Classic Cache.Insert2 Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Cache.Insert2 Example/CS/source.cs#1)]
 [!code-vb[Classic Cache.Insert2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Cache.Insert2 Example/VB/source.vb#1)]  
  
 下列範例會示範如何將項目插入快取使用滑動期限。  
  
 [!code-csharp[Classic Cache.Insert2 Example#2](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Cache.Insert2 Example/CS/source.cs#2)]
 [!code-vb[Classic Cache.Insert2 Example#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Cache.Insert2 Example/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="key" /> 或 <paramref name="value" /> 參數為 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">請將 <paramref name="slidingExpiration" /> 參數設定為小於 <see langword="TimeSpan.Zero" />，或等於一年以上。</exception>
        <exception cref="T:System.ArgumentException">您要為 <see langword="Cache" /> 加入的項目都會設定 <paramref name="absoluteExpiration" /> 和 <paramref name="slidingExpiration" /> 參數。</exception>
        <altmember cref="T:System.DateTime" />
        <altmember cref="T:System.TimeSpan" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (string key, object value, System.Web.Caching.CacheDependency dependencies, DateTime absoluteExpiration, TimeSpan slidingExpiration, System.Web.Caching.CacheItemUpdateCallback onUpdateCallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(string key, object value, class System.Web.Caching.CacheDependency dependencies, valuetype System.DateTime absoluteExpiration, valuetype System.TimeSpan slidingExpiration, class System.Web.Caching.CacheItemUpdateCallback onUpdateCallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.Cache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency,System.DateTime,System.TimeSpan,System.Web.Caching.CacheItemUpdateCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (key As String, value As Object, dependencies As CacheDependency, absoluteExpiration As DateTime, slidingExpiration As TimeSpan, onUpdateCallback As CacheItemUpdateCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(System::String ^ key, System::Object ^ value, System::Web::Caching::CacheDependency ^ dependencies, DateTime absoluteExpiration, TimeSpan slidingExpiration, System::Web::Caching::CacheItemUpdateCallback ^ onUpdateCallback);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="dependencies" Type="System.Web.Caching.CacheDependency" />
        <Parameter Name="absoluteExpiration" Type="System.DateTime" />
        <Parameter Name="slidingExpiration" Type="System.TimeSpan" />
        <Parameter Name="onUpdateCallback" Type="System.Web.Caching.CacheItemUpdateCallback" />
      </Parameters>
      <Docs>
        <param name="key">用來參考物件的快取索引鍵。</param>
        <param name="value">要插入至快取中的物件。</param>
        <param name="dependencies">項目的檔案或快取索引鍵相依性。 任何相依性變更時，物件會變成無效並從快取中移除。 如果沒有相依性，這個參數就會包含 <see langword="null" />。</param>
        <param name="absoluteExpiration">插入物件過期並從快取移除的時間。 為避免當地時間發生問題 (例如，從標準時間變更為日光節約時間)，請使用 <see cref="P:System.DateTime.UtcNow" /> 而非 <see cref="P:System.DateTime.Now" /> 做為這個參數值。 如果使用的是絕對期限，則 <c>slidingExpiration</c> 參數必須設為 <see cref="F:System.Web.Caching.Cache.NoSlidingExpiration" />。</param>
        <param name="slidingExpiration">上次存取快取物件的時間與該物件到期的時間之間隔。 如果此值相當於 20 分鐘，物件將會到期，而且會從上次存取之後的 20 分鐘從快取中移除。 如果使用的是滑動期限，則 <c>absoluteExpiration</c> 參數必須設為 <see cref="F:System.Web.Caching.Cache.NoAbsoluteExpiration" />。</param>
        <param name="onUpdateCallback">從快取中移除物件之前呼叫的委派。 您可以使用此委派更新快取項目，並且確保該項目不會從快取中移除。</param>
        <summary>從快取區移除項目之前，將物件連同相依性、期限原則及可用來通知應用程式的委派一併插入 <see cref="T:System.Web.Caching.Cache" /> 物件中。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Caching.Cache.Insert%2A>方法可讓您快取中插入新項目，並提供從快取移除項目之前呼叫的委派。 在委派中，您可以更新快取的項目，並藉此防止它正在從快取中移除。  
  
 這個方法將覆寫現有`Cache`具有相同的項目`key`參數。  
  
 您不能同時設定`absoluteExpiration`和`slidingExpiration`參數。 如果您想在特定時間過期的快取項目，設定`absoluteExpiration`參數為特定的時間，而`slidingExpiration`參數<xref:System.Web.Caching.Cache.NoSlidingExpiration>。  
  
 如果您想要快取項目來設定項目之後的時間週期之後過期一次被存取，則設定`slidingExpiration`參數的到期間隔，以及您要設定`absoluteExpiration`參數<xref:System.Web.Caching.Cache.NoAbsoluteExpiration>。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="key" />、<paramref name="value" /> 或 <paramref name="onUpdateCallback" /> 參數是 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">請將 <paramref name="slidingExpiration" /> 參數設定為小於 <see langword="TimeSpan.Zero" />，或等於一年以上。</exception>
        <exception cref="T:System.ArgumentException">您要為 <see langword="Cache" /> 加入的項目都會設定 <paramref name="absoluteExpiration" /> 和 <paramref name="slidingExpiration" /> 參數。  
  
 -或-  
  
 <paramref name="dependencies" /> 參數為 <see langword="null" />，而且 <paramref name="absoluteExpiration" /> 參數設為 <see cref="F:System.Web.Caching.Cache.NoAbsoluteExpiration" />，<paramref name="slidingExpiration" /> 參數則設為 <see cref="F:System.Web.Caching.Cache.NoSlidingExpiration" />。</exception>
        <altmember cref="T:System.Web.Caching.CacheItemUpdateCallback" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (string key, object value, System.Web.Caching.CacheDependency dependencies, DateTime absoluteExpiration, TimeSpan slidingExpiration, System.Web.Caching.CacheItemPriority priority, System.Web.Caching.CacheItemRemovedCallback onRemoveCallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(string key, object value, class System.Web.Caching.CacheDependency dependencies, valuetype System.DateTime absoluteExpiration, valuetype System.TimeSpan slidingExpiration, valuetype System.Web.Caching.CacheItemPriority priority, class System.Web.Caching.CacheItemRemovedCallback onRemoveCallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.Cache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency,System.DateTime,System.TimeSpan,System.Web.Caching.CacheItemPriority,System.Web.Caching.CacheItemRemovedCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (key As String, value As Object, dependencies As CacheDependency, absoluteExpiration As DateTime, slidingExpiration As TimeSpan, priority As CacheItemPriority, onRemoveCallback As CacheItemRemovedCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(System::String ^ key, System::Object ^ value, System::Web::Caching::CacheDependency ^ dependencies, DateTime absoluteExpiration, TimeSpan slidingExpiration, System::Web::Caching::CacheItemPriority priority, System::Web::Caching::CacheItemRemovedCallback ^ onRemoveCallback);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="dependencies" Type="System.Web.Caching.CacheDependency" />
        <Parameter Name="absoluteExpiration" Type="System.DateTime" />
        <Parameter Name="slidingExpiration" Type="System.TimeSpan" />
        <Parameter Name="priority" Type="System.Web.Caching.CacheItemPriority" />
        <Parameter Name="onRemoveCallback" Type="System.Web.Caching.CacheItemRemovedCallback" />
      </Parameters>
      <Docs>
        <param name="key">用來參考物件的快取索引鍵。</param>
        <param name="value">要插入至快取的物件。</param>
        <param name="dependencies">項目的檔案或快取索引鍵相依性。 任何相依性變更時，物件會變成無效並從快取中移除。 如果沒有相依性，這個參數就會包含 <see langword="null" />。</param>
        <param name="absoluteExpiration">插入物件過期並從快取移除的時間。 為避免當地時間發生問題 (例如，從標準時間變更為日光節約時間)，請使用 <see cref="P:System.DateTime.UtcNow" /> 而非 <see cref="P:System.DateTime.Now" /> 做為這個參數值。 如果使用的是絕對期限，則 <c>slidingExpiration</c> 參數必須設為 <see cref="F:System.Web.Caching.Cache.NoSlidingExpiration" />。</param>
        <param name="slidingExpiration">上次存取插入物件的時間與該物件到期的時間之間隔。 如果此值相當於 20 分鐘，物件將會到期，而且會從上次存取之後的 20 分鐘從快取中移除。 如果使用的是滑動期限，則 <c>absoluteExpiration</c> 參數必須設為 <see cref="F:System.Web.Caching.Cache.NoAbsoluteExpiration" />。</param>
        <param name="priority">與儲存在快取中其他項目相關的物件之花費，如 <see cref="T:System.Web.Caching.CacheItemPriority" /> 列舉型別所示。 當快取清除物件時會用到這個值；花費較低的物件會在花費較高的物件之前從快取中移除。</param>
        <param name="onRemoveCallback">當物件從快取移除時，將會呼叫委派 (如果有提供的話)。 您可以使用這個在它們的物件從快取刪除時告知應用程式。</param>
        <summary>使用相依性、期限和優先權原則，將指定項目插入 <see cref="T:System.Web.Caching.Cache" /> 物件，並且您也可以從 <see langword="Cache" /> 移除插入項目時使用委派來告知您的應用程式。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法將覆寫現有`Cache`具有相同的項目`key`參數。  
  
 您不能同時設定`absoluteExpiration`和`slidingExpiration`參數。 如果您想在特定時間過期的快取項目，設定`absoluteExpiration`參數為特定的時間，而`slidingExpiration`參數<xref:System.Web.Caching.Cache.NoSlidingExpiration>。  
  
 如果您想要快取項目在一段時間之後過期，已經過一次存取項目，您設定`slidingExpiration`到期時間間隔的參數和`absoluteExpiration`參數<xref:System.Web.Caching.Cache.NoAbsoluteExpiration>。  
  
   
  
## Examples  
 下列範例示範如何插入您的應用程式時，指派項目高優先權`Cache`物件。  
  
> [!NOTE]
>  如需有關如何使用這個方法與<xref:System.Web.Caching.CacheItemRemovedCallback>委派，請參閱[How to： 通知應用程式時移除項目是從快取](http://msdn.microsoft.com/library/38c33aa0-afe9-40ba-a1a4-1ebab95286ef)。  
  
 [!code-csharp[Classic Cache.Insert3 Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Cache.Insert3 Example/CS/source.cs#1)]
 [!code-vb[Classic Cache.Insert3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Cache.Insert3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="key" /> 或 <paramref name="value" /> 參數為 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">請將 <paramref name="slidingExpiration" /> 參數設定為小於 <see langword="TimeSpan.Zero" />，或等於一年以上。</exception>
        <exception cref="T:System.ArgumentException">您要為 <see langword="Cache" /> 加入的項目都會設定 <paramref name="absoluteExpiration" /> 和 <paramref name="slidingExpiration" /> 參數。</exception>
        <altmember cref="T:System.DateTime" />
        <altmember cref="T:System.TimeSpan" />
        <altmember cref="T:System.Web.Caching.CacheItemPriority" />
        <altmember cref="T:System.Web.Caching.CacheItemRemovedCallback" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[string key] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Web.Caching.Cache.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(key As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[System::String ^] { System::Object ^ get(System::String ^ key); void set(System::String ^ key, System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">
          <see cref="T:System.String" /> 物件，表示快取項目的索引鍵。</param>
        <summary>取得或設定在指定索引鍵的快取項目。</summary>
        <value>指定的快取項目。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以使用這個屬性，擷取指定的快取項目值，或將項目和索引鍵為其新增至快取。 加入快取項目使用<xref:System.Web.Caching.Cache.Item%2A>屬性就相當於呼叫<xref:System.Web.Caching.Cache.Insert%2A?displayProperty=nameWithType>方法。  
  
   
  
## Examples  
 下列範例會使用`Item`屬性，以擷取快取的物件相關聯的值`Key1`索引鍵。 然後它會使用<xref:System.Web.HttpResponse.Write%2A?displayProperty=nameWithType>方法，將寫入 Web Form 網頁上的值和簡介文字和 B HTML 項目。  
  
 [!code-csharp[System.Web.Caching Examples#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Caching Examples/CS/cachecs.aspx#5)]
 [!code-vb[System.Web.Caching Examples#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Caching Examples/VB/cachevb.aspx#5)]  
  
 下列範例會示範使用此屬性的文字方塊中的值插入快取。  
  
 [!code-csharp[Classic Cache.this Example#2](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Cache.this Example/CS/source.cs#2)]
 [!code-vb[Classic Cache.this Example#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Cache.this Example/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NoAbsoluteExpiration">
      <MemberSignature Language="C#" Value="public static readonly DateTime NoAbsoluteExpiration;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.DateTime NoAbsoluteExpiration" />
      <MemberSignature Language="DocId" Value="F:System.Web.Caching.Cache.NoAbsoluteExpiration" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly NoAbsoluteExpiration As DateTime " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly DateTime NoAbsoluteExpiration;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在 <see cref="M:System.Web.Caching.Cache.Insert(System.String,System.Object)" /> 方法呼叫中的 <paramref name="absoluteExpiration" /> 參數中使用，以指示該項目應該永不過期。 此欄位為唯讀。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用時，此欄位會設定`absoluteExpiration`參數等於<xref:System.DateTime.MaxValue>，它是一個常數代表最大可能`DateTime`值 12/31/9999 11:59:59 PM。  
  
   
  
## Examples  
 下列範例示範如何使用`NoAbsoluteExpiration`插入中的項目時，停用絕對到期日欄位`Cache`。  
  
 [!code-csharp[Classic Cache.NoAbsoluteExpiration Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Cache.NoAbsoluteExpiration Example/CS/source.cs#1)]
 [!code-vb[Classic Cache.NoAbsoluteExpiration Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Cache.NoAbsoluteExpiration Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.DateTime" />
        <altmember cref="M:System.Web.Caching.Cache.Insert(System.String,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="NoSlidingExpiration">
      <MemberSignature Language="C#" Value="public static readonly TimeSpan NoSlidingExpiration;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.TimeSpan NoSlidingExpiration" />
      <MemberSignature Language="DocId" Value="F:System.Web.Caching.Cache.NoSlidingExpiration" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly NoSlidingExpiration As TimeSpan " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly TimeSpan NoSlidingExpiration;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>使用來做為 <see cref="M:System.Web.Caching.Cache.Insert(System.String,System.Object)" /> 或 <see cref="M:System.Web.Caching.Cache.Add(System.String,System.Object,System.Web.Caching.CacheDependency,System.DateTime,System.TimeSpan,System.Web.Caching.CacheItemPriority,System.Web.Caching.CacheItemRemovedCallback)" /> 方法呼叫中的 <paramref name="slidingExpiration" /> 參數以停用變動性期限。 此欄位為唯讀。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用時，此欄位會設定`slidingExpiration`參數<xref:System.TimeSpan.Zero?displayProperty=nameWithType>欄位有常數值為零。 按照所使用的快取的項目到期`absoluteExpiration`參數相關聯`Insert`或`Add`方法呼叫。  
  
   
  
## Examples  
 下列範例示範如何使用 Insert 方法，將項目加入<xref:System.Web.Caching.Cache>物件使用`NoSlidingExpiration`欄位。  
  
 [!code-csharp[Classic Cache.NoSlidingExpiration Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Cache.NoSlidingExpiration Example/CS/source.cs#1)]
 [!code-vb[Classic Cache.NoSlidingExpiration Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Cache.NoSlidingExpiration Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.TimeSpan.Zero" />
        <altmember cref="M:System.Web.Caching.Cache.Insert(System.String,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public object Remove (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Remove(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.Cache.Remove(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (key As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Remove(System::String ^ key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">要移除之快取項目的 <see cref="T:System.String" /> 識別項。</param>
        <summary>從應用程式的 <see cref="T:System.Web.Caching.Cache" /> 物件移除指定的項目。</summary>
        <returns>從 <see langword="Cache" /> 移除的項目。 如果沒有找到索引鍵參數中的值，會傳回 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列範例會建立`RemoveItemFromCache`方法。 當呼叫此方法時，它會使用<xref:System.Web.Caching.Cache.Item%2A>檢查快取是否包含物件相關聯的屬性`Key1`機碼值。 若是如此，`Remove`呼叫方法來移除該物件。  
  
 [!code-csharp[System.Web.Caching Examples#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Caching Examples/CS/cachecs.aspx#4)]
 [!code-vb[System.Web.Caching Examples#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Caching Examples/VB/cachevb.aspx#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Caching.Cache.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>傳回列舉值，可逐一查看 <see cref="T:System.Web.Caching.Cache" /> 物件集合。</summary>
        <returns>可逐一查看 <see cref="T:System.Web.Caching.Cache" /> 物件集合的列舉值。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>