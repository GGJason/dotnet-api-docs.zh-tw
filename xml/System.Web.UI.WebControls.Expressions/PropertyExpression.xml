<Type Name="PropertyExpression" FullName="System.Web.UI.WebControls.Expressions.PropertyExpression">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b662e2ee96b5e8cf11b7ec0a8b795b7a2e7c46ad" />
    <Meta Name="ms.sourcegitcommit" Value="d877ae76e9e11799bf919379507239e2c4072742" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="08/09/2018" />
    <Meta Name="ms.locfileid" Value="39812737" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class PropertyExpression : System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PropertyExpression extends System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.Expressions.PropertyExpression" />
  <TypeSignature Language="VB.NET" Value="Public Class PropertyExpression&#xA;Inherits ParameterDataSourceExpression" />
  <TypeSignature Language="C++ CLI" Value="public ref class PropertyExpression : System::Web::UI::WebControls::Expressions::ParameterDataSourceExpression" />
  <TypeSignature Language="F#" Value="type PropertyExpression = class&#xA;    inherit ParameterDataSourceExpression" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="9d447-101">提供從 <see cref="P:System.Web.UI.WebControls.LinqDataSource.WhereParameters" /> 集合中的參數建立 <see langword="Where" /> 子句的方法。</span>
      <span class="sxs-lookup">
        <span data-stu-id="9d447-101">Provides a way to create a <see langword="Where" /> clause from parameters in a <see cref="P:System.Web.UI.WebControls.LinqDataSource.WhereParameters" /> collection.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d447-102"><xref:System.Web.UI.WebControls.Expressions.PropertyExpression>類別會搭配<xref:System.Web.UI.WebControls.QueryExtender>控制項來篩選資料欄位中的資料。</span><span class="sxs-lookup"><span data-stu-id="9d447-102">The <xref:System.Web.UI.WebControls.Expressions.PropertyExpression> class is used with the <xref:System.Web.UI.WebControls.QueryExtender> control to filter data in data fields.</span></span> <span data-ttu-id="9d447-103"><xref:System.Web.UI.WebControls.Expressions.PropertyExpression>類別比較指定的值的資料行的屬性值。</span><span class="sxs-lookup"><span data-stu-id="9d447-103">The <xref:System.Web.UI.WebControls.Expressions.PropertyExpression> class compares a property value of a column to a specified value.</span></span> <span data-ttu-id="9d447-104">例如，您可以比較資料庫的 Products 資料表的已停用資料行中值的布林值。</span><span class="sxs-lookup"><span data-stu-id="9d447-104">For example, you can compare a Boolean value to the value in the discontinued column of a Products table in a database.</span></span>  
  
 <span data-ttu-id="9d447-105"><xref:System.Web.UI.WebControls.Expressions.PropertyExpression>類別建立的對應屬性的每個參數值的 equals （= =） 比較<xref:System.Linq.IQueryable>資料物件。</span><span class="sxs-lookup"><span data-stu-id="9d447-105">The <xref:System.Web.UI.WebControls.Expressions.PropertyExpression> class creates an equals (==) comparison for the value of each parameter and the corresponding property of the <xref:System.Linq.IQueryable> data object.</span></span> <span data-ttu-id="9d447-106">如果您提供多個參數，參數會結合使用邏輯`AND`運算子。</span><span class="sxs-lookup"><span data-stu-id="9d447-106">If you provide more than one parameter, the parameters are combined using the logical `AND` operator.</span></span> <span data-ttu-id="9d447-107">包含空值的參數不會新增至`Where`子句。</span><span class="sxs-lookup"><span data-stu-id="9d447-107">Parameters that contain an empty value are not added to the `Where` clause.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9d447-108">下列範例示範如何搜尋產品 資料表的 AdventureWorks 資料庫之產品的`MakeFlag`屬性 （布林值的資料行） 設定為`true`。</span><span class="sxs-lookup"><span data-stu-id="9d447-108">The following example shows how to search the Products table of the AdventureWorks database for products whose `MakeFlag` property (a Boolean column) is set to `true`.</span></span> <span data-ttu-id="9d447-109">布林值參數設定 核取方塊。</span><span class="sxs-lookup"><span data-stu-id="9d447-109">The Boolean value parameter is set in a check box.</span></span> <span data-ttu-id="9d447-110">查詢所傳回的結果<xref:System.Web.UI.WebControls.LinqDataSource>控制項顯示在<xref:System.Web.UI.WebControls.GridView>控制項。</span><span class="sxs-lookup"><span data-stu-id="9d447-110">The result of the query that is returned from the <xref:System.Web.UI.WebControls.LinqDataSource> control is displayed in a <xref:System.Web.UI.WebControls.GridView> control.</span></span>  
  
 <span data-ttu-id="9d447-111">此程式碼範例是中提供之較大範例的一部分[逐步解說： 在網頁上使用宣告式語法中的 篩選資料](http://msdn.microsoft.com/library/b305ae31-1a1b-4d07-a678-51457c17614f)。</span><span class="sxs-lookup"><span data-stu-id="9d447-111">This code example is part of a larger example that is provided in [Walkthrough: Filtering Data in a Web Page Using Declarative Syntax](http://msdn.microsoft.com/library/b305ae31-1a1b-4d07-a678-51457c17614f).</span></span>  
  
  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PropertyExpression ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Expressions.PropertyExpression.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PropertyExpression();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9d447-112">初始化 <see cref="T:System.Web.UI.WebControls.Expressions.PropertyExpression" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d447-112">Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.Expressions.PropertyExpression" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetQueryable">
      <MemberSignature Language="C#" Value="public override System.Linq.IQueryable GetQueryable (System.Linq.IQueryable source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Linq.IQueryable GetQueryable(class System.Linq.IQueryable source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Expressions.PropertyExpression.GetQueryable(System.Linq.IQueryable)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetQueryable (source As IQueryable) As IQueryable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Linq::IQueryable ^ GetQueryable(System::Linq::IQueryable ^ source);" />
      <MemberSignature Language="F#" Value="override this.GetQueryable : System.Linq.IQueryable -&gt; System.Linq.IQueryable" Usage="propertyExpression.GetQueryable source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="9d447-113">要用於查詢的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d447-113">The object to use for the query.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9d447-114">使用指定的 <see cref="T:System.Web.UI.WebControls.Expressions.PropertyExpression" /> 資料來源物件來套用 <see cref="T:System.Linq.IQueryable" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d447-114">Applies a <see cref="T:System.Web.UI.WebControls.Expressions.PropertyExpression" /> object by using the specified <see cref="T:System.Linq.IQueryable" /> data source object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9d447-115">已套用運算式之物件的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d447-115">An instance of the object that the expressions were applied to.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d447-116">這個方法會結合指定<xref:System.Linq.IQueryable>物件中的運算式<xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A>使用的邏輯集合`AND`運算子。</span><span class="sxs-lookup"><span data-stu-id="9d447-116">This method combines the specified <xref:System.Linq.IQueryable> object with the expressions in the <xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A> collection by using the logical `AND` operator.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>