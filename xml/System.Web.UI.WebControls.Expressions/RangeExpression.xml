<Type Name="RangeExpression" FullName="System.Web.UI.WebControls.Expressions.RangeExpression">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f0a8625ed398f1952abefd34796fd6ceaa7e13a7" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36585908" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class RangeExpression : System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RangeExpression extends System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.Expressions.RangeExpression" />
  <TypeSignature Language="VB.NET" Value="Public Class RangeExpression&#xA;Inherits ParameterDataSourceExpression" />
  <TypeSignature Language="C++ CLI" Value="public ref class RangeExpression : System::Web::UI::WebControls::Expressions::ParameterDataSourceExpression" />
  <TypeSignature Language="F#" Value="type RangeExpression = class&#xA;    inherit ParameterDataSourceExpression" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Provides a way to determine whether a value is greater than or less than a specified value, or whether a value is between two specified values.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.QueryExtender>控制使用中的類別可讓您在網頁中的篩選資料<xref:System.Web.UI.WebControls.Expressions>命名空間。 這些類別包括<xref:System.Web.UI.WebControls.Expressions.RangeExpression>類別。  
  
 <xref:System.Web.UI.WebControls.Expressions.RangeExpression>類別搜尋資料行使用一組定義範圍的值。 您使用<xref:System.Web.UI.WebControls.Expressions.RangeExpression.DataField%2A>屬性來指定要搜尋的資料行。 您使用<xref:System.Web.UI.WebControls.Expressions.RangeExpression.MinType%2A>屬性來指定是否要包含或排除在搜尋中的最小的結果，而且您使用<xref:System.Web.UI.WebControls.Expressions.RangeExpression.MaxType%2A>屬性來指定是否要包含或排除的最大值。 最大和最小的值可以指定[!INCLUDE[vstecasp](~/includes/vstecasp-md.md)]控制項，而其值可以接著傳遞給<xref:System.Web.UI.WebControls.QueryExtender>控制項中的參數為<xref:System.Web.UI.WebControls.ControlParameter>控制項。 結果通常會在資料繫結控制項中顯示。  
  
   
  
## Examples  
 下列範例示範如何在 AdventureWorks 資料庫中指定的範圍中包含標價的產品 [產品] 資料表中搜尋 ListPrice 資料行`FromTextBox`和`ToTextBox`文字方塊。 篩選器包含的最小值，但會排除在結果中的最大值。 結果會顯示在<xref:System.Web.UI.WebControls.Label>控制項。  
  
 這個程式碼範例是中提供之較大範例的一部分[逐步解說： 篩選資料的網頁使用宣告式語法](http://msdn.microsoft.com/library/b305ae31-1a1b-4d07-a678-51457c17614f)。  
  
  
  
 ]]></format>
    </remarks>
    <exception cref="T:System.InvalidOperationException">The <see cref="P:System.Web.UI.WebControls.Expressions.RangeExpression.DataField" /> property is <see langword="null" />.</exception>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RangeExpression ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Expressions.RangeExpression.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RangeExpression();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.Expressions.RangeExpression" /> class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataField">
      <MemberSignature Language="C#" Value="public string DataField { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataField" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Expressions.RangeExpression.DataField" />
      <MemberSignature Language="VB.NET" Value="Public Property DataField As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataField { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataField : string with get, set" Usage="System.Web.UI.WebControls.Expressions.RangeExpression.DataField" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the field to use for the comparison.</summary>
        <value>要用於比較的欄位。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 範圍運算式搜尋在指定範圍的資料欄位。  
  
   
  
## Examples  
 下列範例示範如何在 AdventureWorks 資料庫中指定的範圍中包含標價的產品 [產品] 資料表中搜尋清單價格資料行`FromTextBox`和`ToTextBox`文字方塊。  
  
 這個程式碼範例是中提供之較大範例的一部分[逐步解說： 篩選資料的網頁使用宣告式語法](http://msdn.microsoft.com/library/b305ae31-1a1b-4d07-a678-51457c17614f)。  
  
```  
<asp:RangeExpression DataField="ListPrice"    
    MinType="Inclusive" MaxType="Exclusive">  
  <asp:ControlParameter ControlID="FromTextBox" />  
  <asp:ControlParameter ControlID="ToTextBox" />  
</asp:RangeExpression>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetQueryable">
      <MemberSignature Language="C#" Value="public override System.Linq.IQueryable GetQueryable (System.Linq.IQueryable source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Linq.IQueryable GetQueryable(class System.Linq.IQueryable source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Expressions.RangeExpression.GetQueryable(System.Linq.IQueryable)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetQueryable (source As IQueryable) As IQueryable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Linq::IQueryable ^ GetQueryable(System::Linq::IQueryable ^ source);" />
      <MemberSignature Language="F#" Value="override this.GetQueryable : System.Linq.IQueryable -&gt; System.Linq.IQueryable" Usage="rangeExpression.GetQueryable source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable" />
      </Parameters>
      <Docs>
        <param name="source">The object to use for the comparison.</param>
        <summary>Gets the <see cref="T:System.Linq.IQueryable" /> object that the range comparison was performed on.</summary>
        <returns>An instance of the <see cref="T:System.Linq.IQueryable" /> object that the expression was applied to.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法會使用指定<xref:System.Linq.IQueryable>物件以解析此運算式。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The <see cref="P:System.Web.UI.WebControls.Expressions.RangeExpression.DataField" /> property is <see langword="null" />.  -or-  The <see cref="P:System.Web.UI.WebControls.Expressions.RangeExpression.MinType" /> and the <see cref="P:System.Web.UI.WebControls.Expressions.RangeExpression.MaxType" /> properties are set to <see cref="F:System.Web.UI.WebControls.Expressions.RangeType.None" />.  -or-  The <see cref="P:System.Web.UI.WebControls.Expressions.RangeExpression.MinType" /> or <see cref="P:System.Web.UI.WebControls.Expressions.RangeExpression.MaxType" /> property is not set to <see cref="F:System.Web.UI.WebControls.Expressions.RangeType.None" /> and the parameter collection is empty.</exception>
      </Docs>
    </Member>
    <Member MemberName="MaxType">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Expressions.RangeType MaxType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.Expressions.RangeType MaxType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Expressions.RangeExpression.MaxType" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxType As RangeType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Expressions::RangeType MaxType { System::Web::UI::WebControls::Expressions::RangeType get(); void set(System::Web::UI::WebControls::Expressions::RangeType value); };" />
      <MemberSignature Language="F#" Value="member this.MaxType : System.Web.UI.WebControls.Expressions.RangeType with get, set" Usage="System.Web.UI.WebControls.Expressions.RangeExpression.MaxType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Expressions.RangeType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the maximum value of the range.</summary>
        <value>要使用的最大值的比較類型。 預設值是<see cref="F:System.Web.UI.WebControls.Expressions.RangeType.None" />，這表示，最大值的比較不會執行。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個屬性的可能值為<xref:System.Web.UI.WebControls.Expressions.RangeType.Inclusive>， <xref:System.Web.UI.WebControls.Expressions.RangeType.Exclusive>，和<xref:System.Web.UI.WebControls.Expressions.RangeType.None>。  
  
 當<xref:System.Web.UI.WebControls.Expressions.RangeExpression.MaxType%2A>設<xref:System.Web.UI.WebControls.Expressions.RangeType.Inclusive>，範圍的最大值包含在搜尋結果。 這相當於執行 > = 作業。 如果您將屬性設定為<xref:System.Web.UI.WebControls.Expressions.RangeType.Exclusive> 欄位中，它相當於指定 > 或 < 作業。 如果您將屬性設定為<xref:System.Web.UI.WebControls.Expressions.RangeType.None>，則沒有限制的範圍。  
  
   
  
## Examples  
 下列範例示範如何加入指定範圍中的最小值以及如何排除的最大值。 在文字方塊中輸入的最大和最小值。 這個程式碼範例是中提供之較大範例的一部分[逐步解說： 篩選資料的網頁使用宣告式語法](http://msdn.microsoft.com/library/b305ae31-1a1b-4d07-a678-51457c17614f)。  
  
```  
<asp:RangeExpression DataField="ListPrice"    
    MinType="Inclusive" MaxType="Exclusive">  
  <asp:ControlParameter ControlID="FromTextBox" />  
  <asp:ControlParameter ControlID="ToTextBox" />  
</asp:RangeExpression>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinType">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Expressions.RangeType MinType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.Expressions.RangeType MinType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Expressions.RangeExpression.MinType" />
      <MemberSignature Language="VB.NET" Value="Public Property MinType As RangeType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Expressions::RangeType MinType { System::Web::UI::WebControls::Expressions::RangeType get(); void set(System::Web::UI::WebControls::Expressions::RangeType value); };" />
      <MemberSignature Language="F#" Value="member this.MinType : System.Web.UI.WebControls.Expressions.RangeType with get, set" Usage="System.Web.UI.WebControls.Expressions.RangeExpression.MinType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Expressions.RangeType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the minimum value of the range.</summary>
        <value>要使用的最小值的比較類型。 預設值是<see cref="F:System.Web.UI.WebControls.Expressions.RangeType.None" />，這表示，最小值的比較不會執行。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個屬性的可能值為<xref:System.Web.UI.WebControls.Expressions.RangeType.Inclusive>， <xref:System.Web.UI.WebControls.Expressions.RangeType.Exclusive>，和<xref:System.Web.UI.WebControls.Expressions.RangeType.None>。  
  
 當<xref:System.Web.UI.WebControls.Expressions.RangeExpression.MinType%2A>或<xref:System.Web.UI.WebControls.Expressions.RangeExpression.MaxType%2A>屬性設定為<xref:System.Web.UI.WebControls.Expressions.RangeType.Inclusive>，範圍的最小和最大值包含在搜尋結果。 這相當於執行 > = 或\<= 作業。 <xref:System.Web.UI.WebControls.Expressions.RangeType.Exclusive>欄位相當於 > 或 < 作業和<xref:System.Web.UI.WebControls.Expressions.RangeType.None>沒有施加限制的範圍。  
  
   
  
## Examples  
 下列範例示範如何加入指定範圍中的最小值以及如何排除的最大值。 在文字方塊中輸入的最大和最小值。 這個程式碼範例是中提供之較大範例的一部分[逐步解說： 篩選資料的網頁使用宣告式語法](http://msdn.microsoft.com/library/b305ae31-1a1b-4d07-a678-51457c17614f)。  
  
```  
<asp:RangeExpression DataField="ListPrice"    
    MinType="Inclusive" MaxType="Exclusive">  
  <asp:ControlParameter ControlID="FromTextBox" />  
  <asp:ControlParameter ControlID="ToTextBox" />  
</asp:RangeExpression>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>