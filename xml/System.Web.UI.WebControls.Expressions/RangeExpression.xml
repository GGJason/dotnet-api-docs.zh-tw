<Type Name="RangeExpression" FullName="System.Web.UI.WebControls.Expressions.RangeExpression">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="48f90c0a0c789d50b9df3f9cf17d55258bd68166" />
    <Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="11/17/2018" />
    <Meta Name="ms.locfileid" Value="51900495" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class RangeExpression : System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RangeExpression extends System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.Expressions.RangeExpression" />
  <TypeSignature Language="VB.NET" Value="Public Class RangeExpression&#xA;Inherits ParameterDataSourceExpression" />
  <TypeSignature Language="C++ CLI" Value="public ref class RangeExpression : System::Web::UI::WebControls::Expressions::ParameterDataSourceExpression" />
  <TypeSignature Language="F#" Value="type RangeExpression = class&#xA;    inherit ParameterDataSourceExpression" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>提供方法來判斷值大於還是小於指定的值，或值是否介於兩個指定的值之間。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.QueryExtender>控制項使用中的類別提供在網頁上的篩選資料的能力<xref:System.Web.UI.WebControls.Expressions>命名空間。 這些類別包括<xref:System.Web.UI.WebControls.Expressions.RangeExpression>類別。  
  
 <xref:System.Web.UI.WebControls.Expressions.RangeExpression>類別搜尋資料行使用一組定義的範圍的值。 您使用<xref:System.Web.UI.WebControls.Expressions.RangeExpression.DataField%2A>屬性來指定要搜尋的資料行。 您使用<xref:System.Web.UI.WebControls.Expressions.RangeExpression.MinType%2A>屬性來指定是否要包含或排除在搜尋中的最小的結果，而且您使用<xref:System.Web.UI.WebControls.Expressions.RangeExpression.MaxType%2A>屬性來指定是否要包含或排除的最大值。 可以指定最大和最小值[!INCLUDE[vstecasp](~/includes/vstecasp-md.md)]控制項和值接著會傳遞給<xref:System.Web.UI.WebControls.QueryExtender>控制項中的參數<xref:System.Web.UI.WebControls.ControlParameter>控制項。 結果通常會在資料繫結控制項中顯示。  
  
   
  
## Examples  
 下列範例示範如何在 AdventureWorks 資料庫中指定的範圍中包含標價的產品 [產品] 資料表中搜尋 ListPrice 資料行`FromTextBox`和`ToTextBox`文字方塊。 篩選條件包含的最小值，但排除在結果中的最大值。 結果會顯示在<xref:System.Web.UI.WebControls.Label>控制項。  
  
 此程式碼範例是中提供之較大範例的一部分[逐步解說： 在網頁上使用宣告式語法中的 篩選資料](https://msdn.microsoft.com/library/b305ae31-1a1b-4d07-a678-51457c17614f)。  
  
  
  
 ]]></format>
    </remarks>
    <exception cref="T:System.InvalidOperationException">
      <see cref="P:System.Web.UI.WebControls.Expressions.RangeExpression.DataField" /> 屬性為 <see langword="null" />。</exception>
    <related type="Article" href="https://msdn.microsoft.com/library/b93e32b9-af41-4539-a009-6cbbe809c702">QueryExtender Web 伺服器控制項概觀</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RangeExpression ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Expressions.RangeExpression.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RangeExpression();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.UI.WebControls.Expressions.RangeExpression" /> 類別的新執行個體。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataField">
      <MemberSignature Language="C#" Value="public string DataField { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataField" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Expressions.RangeExpression.DataField" />
      <MemberSignature Language="VB.NET" Value="Public Property DataField As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataField { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataField : string with get, set" Usage="System.Web.UI.WebControls.Expressions.RangeExpression.DataField" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定要用於比較的欄位。</summary>
        <value>要用於比較的欄位。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 範圍運算式會搜尋指定的範圍內的資料欄位。  
  
   
  
## Examples  
 下列範例示範如何在 AdventureWorks 資料庫中指定的範圍中包含標價的產品 [產品] 資料表中搜尋的清單價格資料行`FromTextBox`和`ToTextBox`文字方塊。  
  
 此程式碼範例是中提供之較大範例的一部分[逐步解說： 在網頁上使用宣告式語法中的 篩選資料](https://msdn.microsoft.com/library/b305ae31-1a1b-4d07-a678-51457c17614f)。  
  
```  
<asp:RangeExpression DataField="ListPrice"    
    MinType="Inclusive" MaxType="Exclusive">  
  <asp:ControlParameter ControlID="FromTextBox" />  
  <asp:ControlParameter ControlID="ToTextBox" />  
</asp:RangeExpression>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetQueryable">
      <MemberSignature Language="C#" Value="public override System.Linq.IQueryable GetQueryable (System.Linq.IQueryable source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Linq.IQueryable GetQueryable(class System.Linq.IQueryable source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Expressions.RangeExpression.GetQueryable(System.Linq.IQueryable)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetQueryable (source As IQueryable) As IQueryable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Linq::IQueryable ^ GetQueryable(System::Linq::IQueryable ^ source);" />
      <MemberSignature Language="F#" Value="override this.GetQueryable : System.Linq.IQueryable -&gt; System.Linq.IQueryable" Usage="rangeExpression.GetQueryable source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable" />
      </Parameters>
      <Docs>
        <param name="source">要用於比較的物件。</param>
        <summary>取得已執行範圍比較的 <see cref="T:System.Linq.IQueryable" /> 物件。</summary>
        <returns>已套用運算式之 <see cref="T:System.Linq.IQueryable" /> 物件的執行個體。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法會使用指定<xref:System.Linq.IQueryable>解析運算式的物件。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:System.Web.UI.WebControls.Expressions.RangeExpression.DataField" /> 屬性為 <see langword="null" />。  
  
-或- 
<see cref="P:System.Web.UI.WebControls.Expressions.RangeExpression.MinType" /> 和 <see cref="P:System.Web.UI.WebControls.Expressions.RangeExpression.MaxType" /> 屬性會設定為 <see cref="F:System.Web.UI.WebControls.Expressions.RangeType.None" />。  
  
-或- 
<see cref="P:System.Web.UI.WebControls.Expressions.RangeExpression.MinType" /> 或 <see cref="P:System.Web.UI.WebControls.Expressions.RangeExpression.MaxType" /> 屬性不是設定為 <see cref="F:System.Web.UI.WebControls.Expressions.RangeType.None" />，而且參數集合是空的。</exception>
      </Docs>
    </Member>
    <Member MemberName="MaxType">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Expressions.RangeType MaxType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.Expressions.RangeType MaxType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Expressions.RangeExpression.MaxType" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxType As RangeType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Expressions::RangeType MaxType { System::Web::UI::WebControls::Expressions::RangeType get(); void set(System::Web::UI::WebControls::Expressions::RangeType value); };" />
      <MemberSignature Language="F#" Value="member this.MaxType : System.Web.UI.WebControls.Expressions.RangeType with get, set" Usage="System.Web.UI.WebControls.Expressions.RangeExpression.MaxType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Expressions.RangeType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定範圍的最大值。</summary>
        <value>要針對最大值使用的比較類型。 預設值為 <see cref="F:System.Web.UI.WebControls.Expressions.RangeType.None" />，表示不執行最大值比較。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 可能的值，這個屬性為<xref:System.Web.UI.WebControls.Expressions.RangeType.Inclusive>， <xref:System.Web.UI.WebControls.Expressions.RangeType.Exclusive>，和<xref:System.Web.UI.WebControls.Expressions.RangeType.None>。  
  
 當<xref:System.Web.UI.WebControls.Expressions.RangeExpression.MaxType%2A>設為<xref:System.Web.UI.WebControls.Expressions.RangeType.Inclusive>，範圍的最大值包含在搜尋結果。 這相當於執行 > = 作業。 如果您將屬性設定為<xref:System.Web.UI.WebControls.Expressions.RangeType.Exclusive> 欄位中，它相當於指定 > 或 < 作業。 如果您將屬性設定為<xref:System.Web.UI.WebControls.Expressions.RangeType.None>，則沒有限制的範圍。  
  
   
  
## Examples  
 下列範例顯示如何納入範圍中指定的最小值及如何排除的最大值。 最大和最小值會輸入到文字方塊。 此程式碼範例是中提供之較大範例的一部分[逐步解說： 在網頁上使用宣告式語法中的 篩選資料](https://msdn.microsoft.com/library/b305ae31-1a1b-4d07-a678-51457c17614f)。  
  
```  
<asp:RangeExpression DataField="ListPrice"    
    MinType="Inclusive" MaxType="Exclusive">  
  <asp:ControlParameter ControlID="FromTextBox" />  
  <asp:ControlParameter ControlID="ToTextBox" />  
</asp:RangeExpression>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinType">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Expressions.RangeType MinType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.Expressions.RangeType MinType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Expressions.RangeExpression.MinType" />
      <MemberSignature Language="VB.NET" Value="Public Property MinType As RangeType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Expressions::RangeType MinType { System::Web::UI::WebControls::Expressions::RangeType get(); void set(System::Web::UI::WebControls::Expressions::RangeType value); };" />
      <MemberSignature Language="F#" Value="member this.MinType : System.Web.UI.WebControls.Expressions.RangeType with get, set" Usage="System.Web.UI.WebControls.Expressions.RangeExpression.MinType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Expressions.RangeType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定範圍的最小值。</summary>
        <value>要針對最小值使用的比較類型。 預設值為 <see cref="F:System.Web.UI.WebControls.Expressions.RangeType.None" />，表示不執行最小值比較。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 可能的值，這個屬性為<xref:System.Web.UI.WebControls.Expressions.RangeType.Inclusive>， <xref:System.Web.UI.WebControls.Expressions.RangeType.Exclusive>，和<xref:System.Web.UI.WebControls.Expressions.RangeType.None>。  
  
 當<xref:System.Web.UI.WebControls.Expressions.RangeExpression.MinType%2A>或是<xref:System.Web.UI.WebControls.Expressions.RangeExpression.MaxType%2A>屬性設定為<xref:System.Web.UI.WebControls.Expressions.RangeType.Inclusive>，範圍的最小和最大值包含在搜尋結果。 這相當於執行 > = 或\<= 作業。 <xref:System.Web.UI.WebControls.Expressions.RangeType.Exclusive>欄位就相當於 > 或 < 作業和<xref:System.Web.UI.WebControls.Expressions.RangeType.None>沒有施加限制的範圍。  
  
   
  
## Examples  
 下列範例顯示如何納入範圍中指定的最小值及如何排除的最大值。 最大和最小值會輸入到文字方塊。 此程式碼範例是中提供之較大範例的一部分[逐步解說： 在網頁上使用宣告式語法中的 篩選資料](https://msdn.microsoft.com/library/b305ae31-1a1b-4d07-a678-51457c17614f)。  
  
```  
<asp:RangeExpression DataField="ListPrice"    
    MinType="Inclusive" MaxType="Exclusive">  
  <asp:ControlParameter ControlID="FromTextBox" />  
  <asp:ControlParameter ControlID="ToTextBox" />  
</asp:RangeExpression>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>