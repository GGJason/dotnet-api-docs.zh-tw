<Type Name="IHash&lt;TKey,TValue&gt;" FullName="Microsoft.VisualC.StlClr.IHash&lt;TKey,TValue&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9788435894d164d5b9fb25037c8f7f8b85166c9b" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55313709" /></Metadata><TypeSignature Language="C#" Value="public interface IHash&lt;TKey,TValue&gt; : ICloneable, Microsoft.VisualC.StlClr.Generic.IBidirectionalContainer&lt;TValue&gt;, System.Collections.ICollection" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit IHash`2&lt;TKey, TValue&gt; implements class Microsoft.VisualC.StlClr.Generic.IBidirectionalContainer`1&lt;!TValue&gt;, class System.Collections.ICollection, class System.Collections.IEnumerable, class System.ICloneable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualC.StlClr.IHash`2" />
  <TypeSignature Language="VB.NET" Value="Public Interface IHash(Of TKey, TValue)&#xA;Implements IBidirectionalContainer(Of TValue), ICloneable, ICollection" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TKey, typename TValue&gt;&#xA;public interface class IHash : ICloneable, Microsoft::VisualC::StlClr::Generic::IBidirectionalContainer&lt;TValue&gt;, System::Collections::ICollection" />
  <TypeSignature Language="F#" Value="type IHash&lt;'Key, 'Value&gt; = interface&#xA;    interface IBidirectionalContainer&lt;'Value&gt;&#xA;    interface ICloneable&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TKey" />
    <TypeParameter Name="TValue" />
  </TypeParameters>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.VisualC.StlClr.Generic.IBidirectionalContainer&lt;TValue&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1005")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="TKey"><span data-ttu-id="086e9-101">受控制序列中項目的主要元件型別。</span><span class="sxs-lookup"><span data-stu-id="086e9-101">The type of the key component of an element in the controlled sequence.</span></span></typeparam>
    <typeparam name="TValue"><span data-ttu-id="086e9-102">受控制序列中項目的實值元件型別。</span><span class="sxs-lookup"><span data-stu-id="086e9-102">The type of the value component of an element in the controlled sequence.</span></span></typeparam>
    <summary><span data-ttu-id="086e9-103">定義 STL/CLR <c>hash_map</c>、<c>hash_multimap</c>、<c>hash_set</c> 和 <c>hash_multiset</c> 物件的介面。</span><span class="sxs-lookup"><span data-stu-id="086e9-103">Defines the interface of the STL/CLR <c>hash_map</c>, <c>hash_multimap</c>, <c>hash_set</c>, and <c>hash_multiset</c> objects.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[unnamed_parm](~/includes/unnamed-parm-md.md)]  
  
 <span data-ttu-id="086e9-104">如需詳細資訊，請參閱 <<c0> [ 雜湊\_地圖 (STL/CLR)](/cpp/dotnet/hash-map-stl-clr)，[雜湊\_multimap (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr)，[雜湊\_設定 (STL/CLR)](/cpp/dotnet/hash-set-stl-clr)，以及[雜湊\_multiset (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr)。</span><span class="sxs-lookup"><span data-stu-id="086e9-104">For more information, see [hash\_map (STL/CLR)](/cpp/dotnet/hash-map-stl-clr), [hash\_multimap (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr), [hash\_set (STL/CLR)](/cpp/dotnet/hash-set-stl-clr), and [hash\_multiset (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="begin">
      <MemberSignature Language="C#" Value="public void begin (ref Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt; );" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.void begin(class Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1&lt;!TValue&gt;&amp; ) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IHash`2.begin(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@)" />
      <MemberSignature Language="VB.NET" Value="Public Function begin (ByRef  As ContainerBidirectionalIterator(Of TValue)) As Void" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ^ begin(Microsoft::VisualC::StlClr::Generic::ContainerBidirectionalIterator&lt;TValue&gt; ^ % );" />
      <MemberSignature Language="F#" Value="abstract member begin :  -&gt; unit" Usage="iHash.begin " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="" Type="Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name=""><span data-ttu-id="086e9-105">雙向 Iterator，指定受控制序列的第一個項目，或只是超出空序列的結尾。</span><span class="sxs-lookup"><span data-stu-id="086e9-105">A bidirectional iterator that designates the first element of the controlled sequence, or just beyond the end of an empty sequence.</span></span> <span data-ttu-id="086e9-106">您要用它來取得的 Iterator 可指定受控制序列之 <paramref name="current" /> 開頭，但是，如果受控制序列的長度變更，它的狀態也可以變更。</span><span class="sxs-lookup"><span data-stu-id="086e9-106">You use it to obtain an iterator that designates the <paramref name="current" /> beginning of the controlled sequence, but its status can change if the length of the controlled sequence changes.</span></span></param>
        <summary><span data-ttu-id="086e9-107">指定受控制序列的開頭。</span><span class="sxs-lookup"><span data-stu-id="086e9-107">Designates the beginning of the controlled sequence.</span></span></summary>
        <returns><span data-ttu-id="086e9-108">迭代器。</span><span class="sxs-lookup"><span data-stu-id="086e9-108">An iterator.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
 <span data-ttu-id="086e9-109">如需詳細資訊，請參閱 <<c0> [ 雜湊\_map:: begin (STL/CLR)](/cpp/dotnet/hash-map-begin-stl-clr)，[雜湊\_multimap:: begin (STL/CLR)](/cpp/dotnet/hash-multimap-begin-stl-clr)，[雜湊\_set:: begin (STL/CLR)](/cpp/dotnet/hash-set-begin-stl-clr)，並[雜湊\_multiset:: begin (STL/CLR)](/cpp/dotnet/hash-multiset-begin-stl-clr)。</span><span class="sxs-lookup"><span data-stu-id="086e9-109">For more information, see [hash\_map::begin (STL/CLR)](/cpp/dotnet/hash-map-begin-stl-clr), [hash\_multimap::begin (STL/CLR)](/cpp/dotnet/hash-multimap-begin-stl-clr), [hash\_set::begin (STL/CLR)](/cpp/dotnet/hash-set-begin-stl-clr), and [hash\_multiset::begin (STL/CLR)](/cpp/dotnet/hash-multiset-begin-stl-clr).</span></span>  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="bucket_count">
      <MemberSignature Language="C#" Value="public int bucket_count ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 bucket_count() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IHash`2.bucket_count" />
      <MemberSignature Language="VB.NET" Value="Public Function bucket_count () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int bucket_count();" />
      <MemberSignature Language="F#" Value="abstract member bucket_count : unit -&gt; int" Usage="iHash.bucket_count " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="086e9-110">計數雜湊資料表中 Bucket 的數目。</span><span class="sxs-lookup"><span data-stu-id="086e9-110">Counts the number of buckets in the hash table.</span></span></summary>
        <returns><span data-ttu-id="086e9-111">雜湊資料表中 Bucket 目前的數目。</span><span class="sxs-lookup"><span data-stu-id="086e9-111">The current number of buckets in the hash table.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086e9-112">如需詳細資訊，請參閱 <<c0> [ 雜湊\_map::bucket_count (STL/CLR)](/cpp/dotnet/hash-map-bucket-count-stl-clr)，[雜湊\_multimap::bucket_count (STL/CLR)](/cpp/dotnet/hash-multimap-bucket-count-stl-clr)，[雜湊\_set::bucket(STL/CLR) _count](/cpp/dotnet/hash-set-bucket-count-stl-clr)，並[雜湊\_multiset::bucket_count (STL/CLR)](/cpp/dotnet/hash-multiset-bucket-count-stl-clr)。</span><span class="sxs-lookup"><span data-stu-id="086e9-112">For more information, see [hash\_map::bucket_count (STL/CLR)](/cpp/dotnet/hash-map-bucket-count-stl-clr), [hash\_multimap::bucket_count (STL/CLR)](/cpp/dotnet/hash-multimap-bucket-count-stl-clr), [hash\_set::bucket_count (STL/CLR)](/cpp/dotnet/hash-set-bucket-count-stl-clr), and [hash\_multiset::bucket_count (STL/CLR)](/cpp/dotnet/hash-multiset-bucket-count-stl-clr).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="clear">
      <MemberSignature Language="C#" Value="public void clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IHash`2.clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void clear();" />
      <MemberSignature Language="F#" Value="abstract member clear : unit -&gt; unit" Usage="iHash.clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="086e9-113">移除容器中的所有項目。</span><span class="sxs-lookup"><span data-stu-id="086e9-113">Removes all elements from the container.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086e9-114">如需詳細資訊，請參閱 <<c0> [ 雜湊\_map:: clear (STL/CLR)](/cpp/dotnet/hash-map-clear-stl-clr)，[雜湊\_multimap:: clear (STL/CLR)](/cpp/dotnet/hash-multimap-clear-stl-clr)，[雜湊\_set:: clear (STL/CLR)](/cpp/dotnet/hash-set-clear-stl-clr)，並[雜湊\_multiset:: clear (STL/CLR)](/cpp/dotnet/hash-multiset-clear-stl-clr)。</span><span class="sxs-lookup"><span data-stu-id="086e9-114">For more information, see [hash\_map::clear (STL/CLR)](/cpp/dotnet/hash-map-clear-stl-clr), [hash\_multimap::clear (STL/CLR)](/cpp/dotnet/hash-multimap-clear-stl-clr), [hash\_set::clear (STL/CLR)](/cpp/dotnet/hash-set-clear-stl-clr), and [hash\_multiset::clear (STL/CLR)](/cpp/dotnet/hash-multiset-clear-stl-clr).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="count">
      <MemberSignature Language="C#" Value="public int count (TKey _Keyval);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 count(!TKey _Keyval) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IHash`2.count(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function count (_Keyval As TKey) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int count(TKey _Keyval);" />
      <MemberSignature Language="F#" Value="abstract member count : 'Key -&gt; int" Usage="iHash.count _Keyval" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="_Keyval" Type="TKey" />
      </Parameters>
      <Docs>
        <param name="_Keyval"><span data-ttu-id="086e9-115">要搜尋的索引鍵值。</span><span class="sxs-lookup"><span data-stu-id="086e9-115">The key value for which to search.</span></span></param>
        <summary><span data-ttu-id="086e9-116">尋找符合指定索引鍵的項目數目。</span><span class="sxs-lookup"><span data-stu-id="086e9-116">Finds the number of elements that match a specified key.</span></span></summary>
        <returns><span data-ttu-id="086e9-117">受控制序列中具有和 <paramref name="_Keyval" /> 相同之索引鍵的項目數目。</span><span class="sxs-lookup"><span data-stu-id="086e9-117">The number of elements in the controlled sequence that have the same key as <paramref name="_Keyval" />.</span></span> <span data-ttu-id="086e9-118">您會用它來判斷目前在受控制序列中，符合指定之索引鍵的項目數目。</span><span class="sxs-lookup"><span data-stu-id="086e9-118">You use it to determine the number of elements currently in the controlled sequence that match a specified key.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086e9-119">如需詳細資訊，請參閱 <<c0> [ 雜湊\_map:: count (STL/CLR)](/cpp/dotnet/hash-map-count-stl-clr)，[雜湊\_multimap:: count (STL/CLR)](/cpp/dotnet/hash-multimap-count-stl-clr)，[雜湊\_set:: count (STL/CLR)](/cpp/dotnet/hash-set-count-stl-clr)，並[雜湊\_multiset:: count (STL/CLR)](/cpp/dotnet/hash-multiset-count-stl-clr)。</span><span class="sxs-lookup"><span data-stu-id="086e9-119">For more information, see [hash\_map::count (STL/CLR)](/cpp/dotnet/hash-map-count-stl-clr), [hash\_multimap::count (STL/CLR)](/cpp/dotnet/hash-multimap-count-stl-clr), [hash\_set::count (STL/CLR)](/cpp/dotnet/hash-set-count-stl-clr), and [hash\_multiset::count (STL/CLR)](/cpp/dotnet/hash-multiset-count-stl-clr).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="empty">
      <MemberSignature Language="C#" Value="public bool empty ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool empty() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IHash`2.empty" />
      <MemberSignature Language="VB.NET" Value="Public Function empty () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool empty();" />
      <MemberSignature Language="F#" Value="abstract member empty : unit -&gt; bool" Usage="iHash.empty " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="086e9-120">測試容器中是否沒有項目存在。</span><span class="sxs-lookup"><span data-stu-id="086e9-120">Tests whether no elements are present in the container.</span></span></summary>
        <returns><span data-ttu-id="086e9-121">如果容器沒有項目則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="086e9-121"><see langword="true" /> if the container has no elements; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086e9-122">如需詳細資訊，請參閱 <<c0> [ 雜湊\_map:: empty (STL/CLR)](/cpp/dotnet/hash-map-empty-stl-clr)，[雜湊\_multimap:: empty (STL/CLR)](/cpp/dotnet/hash-multimap-empty-stl-clr)，[雜湊\_set:: empty (STL/CLR)](/cpp/dotnet/hash-set-empty-stl-clr)，並[雜湊\_multiset:: empty (STL/CLR)](/cpp/dotnet/hash-multiset-empty-stl-clr)。</span><span class="sxs-lookup"><span data-stu-id="086e9-122">For more information, see [hash\_map::empty (STL/CLR)](/cpp/dotnet/hash-map-empty-stl-clr), [hash\_multimap::empty (STL/CLR)](/cpp/dotnet/hash-multimap-empty-stl-clr), [hash\_set::empty (STL/CLR)](/cpp/dotnet/hash-set-empty-stl-clr), and [hash\_multiset::empty (STL/CLR)](/cpp/dotnet/hash-multiset-empty-stl-clr).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="end">
      <MemberSignature Language="C#" Value="public void end (ref Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt; );" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.void end(class Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1&lt;!TValue&gt;&amp; ) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IHash`2.end(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@)" />
      <MemberSignature Language="VB.NET" Value="Public Function end (ByRef  As ContainerBidirectionalIterator(Of TValue)) As Void" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ^ end(Microsoft::VisualC::StlClr::Generic::ContainerBidirectionalIterator&lt;TValue&gt; ^ % );" />
      <MemberSignature Language="F#" Value="abstract member end :  -&gt; unit" Usage="iHash.end " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="" Type="Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name=""><span data-ttu-id="086e9-123">指向超過受控制序列之結尾的雙向 Iterator。</span><span class="sxs-lookup"><span data-stu-id="086e9-123">A bidirectional iterator that points just beyond the end of the controlled sequence.</span></span> <span data-ttu-id="086e9-124">您要用它來取得的 Iterator 可指定受控制序列的結尾。</span><span class="sxs-lookup"><span data-stu-id="086e9-124">You use it to obtain an iterator that designates the end of the controlled sequence.</span></span> <span data-ttu-id="086e9-125">當受控制序列的長度變更時，它的狀態並不會變更。</span><span class="sxs-lookup"><span data-stu-id="086e9-125">Its status does not change when the length of the controlled sequence changes.</span></span></param>
        <summary><span data-ttu-id="086e9-126">指定受控制序列的結尾。</span><span class="sxs-lookup"><span data-stu-id="086e9-126">Designates the end of the controlled sequence.</span></span></summary>
        <returns><span data-ttu-id="086e9-127">迭代器。</span><span class="sxs-lookup"><span data-stu-id="086e9-127">An iterator.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
 <span data-ttu-id="086e9-128">如需詳細資訊，請參閱 <<c0> [ 雜湊\_map:: end (STL/CLR)](/cpp/dotnet/hash-map-end-stl-clr)，[雜湊\_multimap:: end (STL/CLR)](/cpp/dotnet/hash-multimap-end-stl-clr)，[雜湊\_set:: end (STL/CLR)](/cpp/dotnet/hash-set-end-stl-clr)，並[雜湊\_multiset:: end (STL/CLR)](/cpp/dotnet/hash-multiset-end-stl-clr)。</span><span class="sxs-lookup"><span data-stu-id="086e9-128">For more information, see [hash\_map::end (STL/CLR)](/cpp/dotnet/hash-map-end-stl-clr), [hash\_multimap::end (STL/CLR)](/cpp/dotnet/hash-multimap-end-stl-clr), [hash\_set::end (STL/CLR)](/cpp/dotnet/hash-set-end-stl-clr), and [hash\_multiset::end (STL/CLR)](/cpp/dotnet/hash-multiset-end-stl-clr).</span></span>  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="equal_range">
      <MemberSignature Language="C#" Value="public void equal_range (ref Microsoft.VisualC.StlClr.GenericPair&lt;Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt;,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt;&gt; , TKey _Keyval);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.void equal_range(class Microsoft.VisualC.StlClr.GenericPair`2&lt;class Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1&lt;!TValue&gt;, class Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1&lt;!TValue&gt;&gt;&amp; , !TKey _Keyval) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IHash`2.equal_range(Microsoft.VisualC.StlClr.GenericPair{Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1},Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}}@,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function equal_range (ByRef  As GenericPair(Of ContainerBidirectionalIterator(Of TValue), ContainerBidirectionalIterator(Of TValue)), _Keyval As TKey) As Void" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ^ equal_range(Microsoft::VisualC::StlClr::GenericPair&lt;Microsoft::VisualC::StlClr::Generic::ContainerBidirectionalIterator&lt;TValue&gt; ^, Microsoft::VisualC::StlClr::Generic::ContainerBidirectionalIterator&lt;TValue&gt; ^&gt; ^ % , TKey _Keyval);" />
      <MemberSignature Language="F#" Value="abstract member equal_range :  * 'Key -&gt; unit" Usage="iHash.equal_range (, _Keyval)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="" Type="Microsoft.VisualC.StlClr.GenericPair&lt;Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt;,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt;&gt;" RefType="ref" />
        <Parameter Name="_Keyval" Type="TKey" />
      </Parameters>
      <Docs>
        <param name=""><span data-ttu-id="086e9-129">一組 Iterator，判斷目前在受控制序列中符合指定之索引鍵的項目範圍。</span><span class="sxs-lookup"><span data-stu-id="086e9-129">A pair of iterators that determine the range of elements currently in the controlled sequence that match a specified key.</span></span></param>
        <param name="_Keyval"><span data-ttu-id="086e9-130">要搜尋的索引鍵值。</span><span class="sxs-lookup"><span data-stu-id="086e9-130">The key value for which to search.</span></span></param>
        <summary><span data-ttu-id="086e9-131">尋找符合指定之索引鍵的範圍。</span><span class="sxs-lookup"><span data-stu-id="086e9-131">Finds the range that matches a specified key.</span></span></summary>
        <returns><span data-ttu-id="086e9-132">一組 Iterator。</span><span class="sxs-lookup"><span data-stu-id="086e9-132">A pair of iterators.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
 <span data-ttu-id="086e9-133">如需詳細資訊，請參閱 [雜湊\_map:: equal_range (STL/CLR)][雜湊\_map:: equal_range (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#equal_range))，[雜湊\_multimap:: equal_range (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#equal_range)，[雜湊\_set:: equal_range (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#equal_range)，以及[雜湊\_multiset:: equal_range (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#equal_range)。</span><span class="sxs-lookup"><span data-stu-id="086e9-133">For more information, see [hash\_map::equal_range (STL/CLR)][hash\_map::equal_range (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#equal_range)), [hash\_multimap::equal_range (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#equal_range), [hash\_set::equal_range (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#equal_range), and [hash\_multiset::equal_range (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#equal_range).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="erase">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="086e9-134">移除容器中的項目。</span><span class="sxs-lookup"><span data-stu-id="086e9-134">Removes elements from the container.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086e9-135">如需詳細資訊，請參閱 <<c0> [ 雜湊\_map:: erase (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#erase)，[雜湊\_multimap:: erase (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#erase)，[雜湊\_set:: erase (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#erase)，並[雜湊\_multiset:: erase (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#erase)。</span><span class="sxs-lookup"><span data-stu-id="086e9-135">For more information, see [hash\_map::erase (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#erase), [hash\_multimap::erase (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#erase), [hash\_set::erase (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#erase), and [hash\_multiset::erase (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#erase).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="erase">
      <MemberSignature Language="C#" Value="public int erase (TKey _Keyval);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 erase(!TKey _Keyval) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IHash`2.erase(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function erase (_Keyval As TKey) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int erase(TKey _Keyval);" />
      <MemberSignature Language="F#" Value="abstract member erase : 'Key -&gt; int" Usage="iHash.erase _Keyval" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="_Keyval" Type="TKey" />
      </Parameters>
      <Docs>
        <param name="_Keyval"><span data-ttu-id="086e9-136">要清除的索引鍵值。</span><span class="sxs-lookup"><span data-stu-id="086e9-136">The key value to erase.</span></span></param>
        <summary><span data-ttu-id="086e9-137">從容器移除符合指定之索引鍵的項目。</span><span class="sxs-lookup"><span data-stu-id="086e9-137">Removes elements from the container that match the specified key.</span></span></summary>
        <returns><span data-ttu-id="086e9-138">移除的項目數目。</span><span class="sxs-lookup"><span data-stu-id="086e9-138">The number of elements removed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086e9-139">如需詳細資訊，請參閱 <<c0> [ 雜湊\_map:: erase (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#erase)，[雜湊\_multimap:: erase (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#erase)，[雜湊\_set:: erase (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#erase)，並[雜湊\_multiset:: erase (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#erase)。</span><span class="sxs-lookup"><span data-stu-id="086e9-139">For more information, see [hash\_map::erase (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#erase), [hash\_multimap::erase (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#erase), [hash\_set::erase (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#erase), and [hash\_multiset::erase (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#erase).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="erase">
      <MemberSignature Language="C#" Value="public void erase (ref Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt; , Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt; _Where);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.void erase(class Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1&lt;!TValue&gt;&amp; , class Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1&lt;!TValue&gt; _Where) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IHash`2.erase(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}|System.Runtime.CompilerServices.IsByValue)" />
      <MemberSignature Language="VB.NET" Value="Public Function erase (ByRef  As ContainerBidirectionalIterator(Of TValue), _Where As ContainerBidirectionalIterator(Of TValue)) As Void" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ^ erase(Microsoft::VisualC::StlClr::Generic::ContainerBidirectionalIterator&lt;TValue&gt; ^ % , Microsoft::VisualC::StlClr::Generic::ContainerBidirectionalIterator&lt;TValue&gt; ^ _Where);" />
      <MemberSignature Language="F#" Value="abstract member erase :  * Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;'Value&gt; -&gt; unit" Usage="iHash.erase (, _Where)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="" Type="Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt;" RefType="ref" />
        <Parameter Name="_Where" Type="Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt;" />
      </Parameters>
      <Docs>
        <param name=""><span data-ttu-id="086e9-140">指定超過所移除項目之第一個項目的 Iterator，如果沒有此類項目存在則為 <see cref="M:Microsoft.VisualC.StlClr.IHash`2.end(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@)" />。</span><span class="sxs-lookup"><span data-stu-id="086e9-140">An iterator that designates the first element beyond the removed element, or <see cref="M:Microsoft.VisualC.StlClr.IHash`2.end(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@)" /> if no such element exists.</span></span></param>
        <param name="_Where"><span data-ttu-id="086e9-141">指向要清除之項目的 Iterator。</span><span class="sxs-lookup"><span data-stu-id="086e9-141">An iterator that points to the element to erase.</span></span></param>
        <summary><span data-ttu-id="086e9-142">從容器移除由指定之 Iterator 所指定的項目。</span><span class="sxs-lookup"><span data-stu-id="086e9-142">Removes from the container the element that is specified by the given iterator.</span></span></summary>
        <returns><span data-ttu-id="086e9-143">迭代器。</span><span class="sxs-lookup"><span data-stu-id="086e9-143">An iterator.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
<span data-ttu-id="086e9-144">如需詳細資訊，請參閱 <<c0> [ 雜湊\_map:: erase (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#erase)，[雜湊\_multimap:: erase (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#erase)，[雜湊\_set:: erase (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#erase)，並[雜湊\_multiset:: erase (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#erase)。</span><span class="sxs-lookup"><span data-stu-id="086e9-144">For more information, see [hash\_map::erase (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#erase), [hash\_multimap::erase (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#erase), [hash\_set::erase (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#erase), and [hash\_multiset::erase (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#erase).</span></span>

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="erase">
      <MemberSignature Language="C#" Value="public void erase (ref Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt; , Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt; _First_iter, Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt; _Last_iter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.void erase(class Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1&lt;!TValue&gt;&amp; , class Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1&lt;!TValue&gt; _First_iter, class Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1&lt;!TValue&gt; _Last_iter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IHash`2.erase(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}|System.Runtime.CompilerServices.IsByValue)" />
      <MemberSignature Language="VB.NET" Value="Public Function erase (ByRef  As ContainerBidirectionalIterator(Of TValue), _First_iter As ContainerBidirectionalIterator(Of TValue), _Last_iter As ContainerBidirectionalIterator(Of TValue)) As Void" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ^ erase(Microsoft::VisualC::StlClr::Generic::ContainerBidirectionalIterator&lt;TValue&gt; ^ % , Microsoft::VisualC::StlClr::Generic::ContainerBidirectionalIterator&lt;TValue&gt; ^ _First_iter, Microsoft::VisualC::StlClr::Generic::ContainerBidirectionalIterator&lt;TValue&gt; ^ _Last_iter);" />
      <MemberSignature Language="F#" Value="abstract member erase :  * Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;'Value&gt; * Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;'Value&gt; -&gt; unit" Usage="iHash.erase (, _First_iter, _Last_iter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="" Type="Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt;" RefType="ref" />
        <Parameter Name="_First_iter" Type="Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt;" />
        <Parameter Name="_Last_iter" Type="Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt;" />
      </Parameters>
      <Docs>
        <param name=""><span data-ttu-id="086e9-145">指定超過所移除項目之第一個項目的 Iterator，如果沒有此類項目存在則為 <see cref="M:Microsoft.VisualC.StlClr.IHash`2.end(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@)" />。</span><span class="sxs-lookup"><span data-stu-id="086e9-145">An iterator that designates the first element beyond the elements removed, or <see cref="M:Microsoft.VisualC.StlClr.IHash`2.end(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@)" /> if no such element exists.</span></span></param>
        <param name="_First_iter"><span data-ttu-id="086e9-146">指向要清除之範圍開頭的 Iterator。</span><span class="sxs-lookup"><span data-stu-id="086e9-146">An iterator that points to the beginning of the range to erase.</span></span></param>
        <param name="_Last_iter"><span data-ttu-id="086e9-147">指向緊接在要清除之範圍後的位置之 Iterator。</span><span class="sxs-lookup"><span data-stu-id="086e9-147">An iterator that points to the position that immediately follows the range to erase.</span></span></param>
        <summary><span data-ttu-id="086e9-148">從容器移除指定之 Iterator 之間的項目。</span><span class="sxs-lookup"><span data-stu-id="086e9-148">Removes from the container the elements between the specified iterators.</span></span></summary>
        <returns><span data-ttu-id="086e9-149">迭代器。</span><span class="sxs-lookup"><span data-stu-id="086e9-149">An iterator.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
<span data-ttu-id="086e9-150">如需詳細資訊，請參閱 <<c0> [ 雜湊\_map:: erase (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#erase)，[雜湊\_multimap:: erase (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#erase)，[雜湊\_set:: erase (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#erase)，並[雜湊\_multiset:: erase (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#erase)。</span><span class="sxs-lookup"><span data-stu-id="086e9-150">For more information, see [hash\_map::erase (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#erase), [hash\_multimap::erase (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#erase), [hash\_set::erase (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#erase), and [hash\_multiset::erase (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#erase).</span></span>

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="find">
      <MemberSignature Language="C#" Value="public void find (ref Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt; , TKey _Keyval);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.void find(class Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1&lt;!TValue&gt;&amp; , !TKey _Keyval) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IHash`2.find(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function find (ByRef  As ContainerBidirectionalIterator(Of TValue), _Keyval As TKey) As Void" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ^ find(Microsoft::VisualC::StlClr::Generic::ContainerBidirectionalIterator&lt;TValue&gt; ^ % , TKey _Keyval);" />
      <MemberSignature Language="F#" Value="abstract member find :  * 'Key -&gt; unit" Usage="iHash.find (, _Keyval)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="" Type="Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt;" RefType="ref" />
        <Parameter Name="_Keyval" Type="TKey" />
      </Parameters>
      <Docs>
        <param name=""><span data-ttu-id="086e9-151">指定其中一個所找到之項目的 Iterator，如果找不到項目則為 <see cref="M:Microsoft.VisualC.StlClr.IHash`2.end(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@)" />。</span><span class="sxs-lookup"><span data-stu-id="086e9-151">An iterator that designates one of the found elements; or <see cref="M:Microsoft.VisualC.StlClr.IHash`2.end(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@)" /> if no element is found.</span></span></param>
        <param name="_Keyval"><span data-ttu-id="086e9-152">要搜尋的索引鍵值。</span><span class="sxs-lookup"><span data-stu-id="086e9-152">The key value for which to search.</span></span></param>
        <summary><span data-ttu-id="086e9-153">尋找符合指定之索引鍵的元素。</span><span class="sxs-lookup"><span data-stu-id="086e9-153">Finds an element that matches a specified key.</span></span></summary>
        <returns><span data-ttu-id="086e9-154">迭代器。</span><span class="sxs-lookup"><span data-stu-id="086e9-154">An iterator.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
 <span data-ttu-id="086e9-155">如需詳細資訊，請參閱 <<c0> [ 雜湊\_map:: find (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#find)，[雜湊\_multimap:: find (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#find)，[雜湊\_set:: find (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#find)，並[雜湊\_multiset:: find (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#find)。</span><span class="sxs-lookup"><span data-stu-id="086e9-155">For more information, see [hash\_map::find (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#find), [hash\_multimap::find (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#find), [hash\_set::find (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#find), and [hash\_multiset::find (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#find).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="hash_delegate">
      <MemberSignature Language="C#" Value="public Microsoft.VisualC.StlClr.UnaryDelegate&lt;TKey,int&gt; hash_delegate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.VisualC.StlClr.UnaryDelegate`2&lt;!TKey, int32&gt; hash_delegate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IHash`2.hash_delegate" />
      <MemberSignature Language="VB.NET" Value="Public Function hash_delegate () As UnaryDelegate(Of TKey, Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::VisualC::StlClr::UnaryDelegate&lt;TKey, int&gt; ^ hash_delegate();" />
      <MemberSignature Language="F#" Value="abstract member hash_delegate : unit -&gt; Microsoft.VisualC.StlClr.UnaryDelegate&lt;'Key, int&gt;" Usage="iHash.hash_delegate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualC.StlClr.UnaryDelegate&lt;TKey,System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="086e9-156">傳回用於將索引鍵值轉換成整數的委派。</span><span class="sxs-lookup"><span data-stu-id="086e9-156">Returns the delegate that is used to convert a key value to an integer.</span></span></summary>
        <returns><span data-ttu-id="086e9-157">用於將索引鍵值轉換成整數的委派。</span><span class="sxs-lookup"><span data-stu-id="086e9-157">The delegate that is used to convert a key value to an integer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086e9-158">如需詳細資訊，請參閱 <<c0> [ 雜湊\_map::hash_delegate (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#hash_delegate)，[雜湊\_multimap::hash_delegate (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#hash_delegate)，[雜湊\_set::hash_delegate (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#hash_delegate)，並[雜湊\_multiset::hash_delegate (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#hash_delegate)。</span><span class="sxs-lookup"><span data-stu-id="086e9-158">For more information, see [hash\_map::hash_delegate (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#hash_delegate), [hash\_multimap::hash_delegate (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#hash_delegate), [hash\_set::hash_delegate (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#hash_delegate), and [hash\_multiset::hash_delegate (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#hash_delegate).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="insert">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="086e9-159">將項目加入至容器。</span><span class="sxs-lookup"><span data-stu-id="086e9-159">Adds elements to the container.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086e9-160">如需詳細資訊，請參閱 <<c0> [ 雜湊\_map:: insert (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#insert)，[雜湊\_multimap:: insert (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#insert)，[雜湊\_set:: insert (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#insert)，並[雜湊\_multiset:: insert (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#insert)。</span><span class="sxs-lookup"><span data-stu-id="086e9-160">For more information, see [hash\_map::insert (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#insert), [hash\_multimap::insert (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#insert), [hash\_set::insert (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#insert), and [hash\_multiset::insert (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#insert).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="insert">
      <MemberSignature Language="C#" Value="public void insert (System.Collections.IEnumerable _Right);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void insert(class System.Collections.IEnumerable _Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IHash`2.insert(System.Collections.IEnumerable)" />
      <MemberSignature Language="VB.NET" Value="Public Sub insert (_Right As IEnumerable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void insert(System::Collections::IEnumerable ^ _Right);" />
      <MemberSignature Language="F#" Value="abstract member insert : System.Collections.IEnumerable -&gt; unit" Usage="iHash.insert _Right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="_Right" Type="System.Collections.IEnumerable" />
      </Parameters>
      <Docs>
        <param name="_Right"><span data-ttu-id="086e9-161">要插入容器中的列舉型別。</span><span class="sxs-lookup"><span data-stu-id="086e9-161">The enumeration to insert into the container.</span></span></param>
        <summary><span data-ttu-id="086e9-162">將指定的列舉新增至容器。</span><span class="sxs-lookup"><span data-stu-id="086e9-162">Adds the given enumeration to the container.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086e9-163">如需詳細資訊，請參閱 <<c0> [ 雜湊\_map:: insert (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#insert)，[雜湊\_multimap:: insert (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#insert)，[雜湊\_set:: insert (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#insert)，並[雜湊\_multiset:: insert (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#insert)。</span><span class="sxs-lookup"><span data-stu-id="086e9-163">For more information, see [hash\_map::insert (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#insert), [hash\_multimap::insert (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#insert), [hash\_set::insert (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#insert), and [hash\_multiset::insert (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#insert).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="insert">
      <MemberSignature Language="C#" Value="public void insert (Microsoft.VisualC.StlClr.Generic.IInputIterator&lt;TValue&gt; _First, Microsoft.VisualC.StlClr.Generic.IInputIterator&lt;TValue&gt; _Last);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void insert(class Microsoft.VisualC.StlClr.Generic.IInputIterator`1&lt;!TValue&gt; _First, class Microsoft.VisualC.StlClr.Generic.IInputIterator`1&lt;!TValue&gt; _Last) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IHash`2.insert(Microsoft.VisualC.StlClr.Generic.IInputIterator{`1},Microsoft.VisualC.StlClr.Generic.IInputIterator{`1})" />
      <MemberSignature Language="VB.NET" Value="Public Sub insert (_First As IInputIterator(Of TValue), _Last As IInputIterator(Of TValue))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void insert(Microsoft::VisualC::StlClr::Generic::IInputIterator&lt;TValue&gt; ^ _First, Microsoft::VisualC::StlClr::Generic::IInputIterator&lt;TValue&gt; ^ _Last);" />
      <MemberSignature Language="F#" Value="abstract member insert : Microsoft.VisualC.StlClr.Generic.IInputIterator&lt;'Value&gt; * Microsoft.VisualC.StlClr.Generic.IInputIterator&lt;'Value&gt; -&gt; unit" Usage="iHash.insert (_First, _Last)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="_First" Type="Microsoft.VisualC.StlClr.Generic.IInputIterator&lt;TValue&gt;" />
        <Parameter Name="_Last" Type="Microsoft.VisualC.StlClr.Generic.IInputIterator&lt;TValue&gt;" />
      </Parameters>
      <Docs>
        <param name="_First"><span data-ttu-id="086e9-164">指向要插入之項目範圍開頭的 Iterator。</span><span class="sxs-lookup"><span data-stu-id="086e9-164">An iterator that points to the beginning of the range of elements to insert.</span></span></param>
        <param name="_Last"><span data-ttu-id="086e9-165">指向緊接在要插入之項目範圍後的項目之 Iterator。</span><span class="sxs-lookup"><span data-stu-id="086e9-165">An iterator that points to the element that immediately follows the range of elements to insert.</span></span></param>
        <summary><span data-ttu-id="086e9-166">將指定之 Iterator 所指定的項目新增至容器。</span><span class="sxs-lookup"><span data-stu-id="086e9-166">Adds to the container the elements specified by the given iterators.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086e9-167">如需詳細資訊，請參閱 <<c0> [ 雜湊\_map:: insert (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#insert)，[雜湊\_multimap:: insert (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#insert)，[雜湊\_set:: insert (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#insert)，並[雜湊\_multiset:: insert (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#insert)。</span><span class="sxs-lookup"><span data-stu-id="086e9-167">For more information, see [hash\_map::insert (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#insert), [hash\_multimap::insert (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#insert), [hash\_set::insert (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#insert), and [hash\_multiset::insert (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#insert).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="insert">
      <MemberSignature Language="C#" Value="public void insert (ref Microsoft.VisualC.StlClr.GenericPair&lt;Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt;,bool&gt; , TValue _Val);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.void insert(class Microsoft.VisualC.StlClr.GenericPair`2&lt;class Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1&lt;!TValue&gt;, bool&gt;&amp; , !TValue _Val) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IHash`2.insert(Microsoft.VisualC.StlClr.GenericPair{Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1},System.Boolean}@,`1)" />
      <MemberSignature Language="VB.NET" Value="Public Function insert (ByRef  As GenericPair(Of ContainerBidirectionalIterator(Of TValue), Boolean), _Val As TValue) As Void" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ^ insert(Microsoft::VisualC::StlClr::GenericPair&lt;Microsoft::VisualC::StlClr::Generic::ContainerBidirectionalIterator&lt;TValue&gt; ^, bool&gt; ^ % , TValue _Val);" />
      <MemberSignature Language="F#" Value="abstract member insert :  * 'Value -&gt; unit" Usage="iHash.insert (, _Val)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="" Type="Microsoft.VisualC.StlClr.GenericPair&lt;Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt;,System.Boolean&gt;" RefType="ref" />
        <Parameter Name="_Val" Type="TValue" />
      </Parameters>
      <Docs>
        <param name=""><span data-ttu-id="086e9-168">一對 X 值。如果 X.second 為 <see langword="true" />，X.first 會指定新插入的元素，否則 X.first 會指定具有已經存在之對等排序的元素，而且不會插入新元素。</span><span class="sxs-lookup"><span data-stu-id="086e9-168">A pair of values X. If X.second is <see langword="true" />, X.first designates the newly inserted element; otherwise X.first designates an element with equivalent ordering that already exists, and no new element is inserted.</span></span></param>
        <param name="_Val"><span data-ttu-id="086e9-169">要插入容器中的索引鍵值。</span><span class="sxs-lookup"><span data-stu-id="086e9-169">The key value to insert into the container.</span></span></param>
        <summary><span data-ttu-id="086e9-170">將指定的值新增至容器。</span><span class="sxs-lookup"><span data-stu-id="086e9-170">Adds the given value to the container.</span></span></summary>
        <returns><span data-ttu-id="086e9-171">一組 Iterator。</span><span class="sxs-lookup"><span data-stu-id="086e9-171">A pair of iterators.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
 <span data-ttu-id="086e9-172">如需詳細資訊，請參閱 <<c0> [ 雜湊\_map:: insert (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#insert)，[雜湊\_multimap:: insert (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#insert)，[雜湊\_set:: insert (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#insert)，並[雜湊\_multiset:: insert (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#insert)。</span><span class="sxs-lookup"><span data-stu-id="086e9-172">For more information, see [hash\_map::insert (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#insert), [hash\_multimap::insert (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#insert), [hash\_set::insert (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#insert), and [hash\_multiset::insert (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#insert).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="insert">
      <MemberSignature Language="C#" Value="public void insert (ref Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt; , Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt; _Where, TValue _Val);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.void insert(class Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1&lt;!TValue&gt;&amp; , class Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1&lt;!TValue&gt; _Where, !TValue _Val) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IHash`2.insert(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}|System.Runtime.CompilerServices.IsByValue,`1)" />
      <MemberSignature Language="VB.NET" Value="Public Function insert (ByRef  As ContainerBidirectionalIterator(Of TValue), _Where As ContainerBidirectionalIterator(Of TValue), _Val As TValue) As Void" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ^ insert(Microsoft::VisualC::StlClr::Generic::ContainerBidirectionalIterator&lt;TValue&gt; ^ % , Microsoft::VisualC::StlClr::Generic::ContainerBidirectionalIterator&lt;TValue&gt; ^ _Where, TValue _Val);" />
      <MemberSignature Language="F#" Value="abstract member insert :  * Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;'Value&gt; * 'Value -&gt; unit" Usage="iHash.insert (, _Where, _Val)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="" Type="Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt;" RefType="ref" />
        <Parameter Name="_Where" Type="Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt;" />
        <Parameter Name="_Val" Type="TValue" />
      </Parameters>
      <Docs>
        <param name=""><span data-ttu-id="086e9-173">指定新插入之元素的迭代器。</span><span class="sxs-lookup"><span data-stu-id="086e9-173">An iterator that designates the newly inserted element.</span></span></param>
        <param name="_Where"><span data-ttu-id="086e9-174">指定容器中要插入項目之位置的 Iterator。</span><span class="sxs-lookup"><span data-stu-id="086e9-174">An iterator that specifies where in the container to insert the element.</span></span> <span data-ttu-id="086e9-175">這只是用於增進效能的提示。</span><span class="sxs-lookup"><span data-stu-id="086e9-175">This is a hint only and is used to improve performance.</span></span> <span data-ttu-id="086e9-176">項目可能不會插入這個位置。</span><span class="sxs-lookup"><span data-stu-id="086e9-176">The element might not be inserted at this location.</span></span></param>
        <param name="_Val"><span data-ttu-id="086e9-177">要插入容器中的索引鍵值。</span><span class="sxs-lookup"><span data-stu-id="086e9-177">The key value to insert into the container.</span></span></param>
        <summary><span data-ttu-id="086e9-178">將指定的項目新增至容器。</span><span class="sxs-lookup"><span data-stu-id="086e9-178">Adds the given element to the container.</span></span></summary>
        <returns><span data-ttu-id="086e9-179">迭代器。</span><span class="sxs-lookup"><span data-stu-id="086e9-179">An iterator.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
<span data-ttu-id="086e9-180">如需詳細資訊，請參閱 <<c0> [ 雜湊\_map:: insert (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#insert)，[雜湊\_multimap:: insert (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#insert)，[雜湊\_set:: insert (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#insert)，並[雜湊\_multiset:: insert (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#insert)。</span><span class="sxs-lookup"><span data-stu-id="086e9-180">For more information, see [hash\_map::insert (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#insert), [hash\_multimap::insert (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#insert), [hash\_set::insert (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#insert), and [hash\_multiset::insert (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#insert).</span></span>

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="key_comp">
      <MemberSignature Language="C#" Value="public Microsoft.VisualC.StlClr.BinaryDelegate&lt;TKey,TKey,bool&gt; key_comp ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.VisualC.StlClr.BinaryDelegate`3&lt;!TKey, !TKey, bool&gt; key_comp() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IHash`2.key_comp" />
      <MemberSignature Language="VB.NET" Value="Public Function key_comp () As BinaryDelegate(Of TKey, TKey, Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::VisualC::StlClr::BinaryDelegate&lt;TKey, TKey, bool&gt; ^ key_comp();" />
      <MemberSignature Language="F#" Value="abstract member key_comp : unit -&gt; Microsoft.VisualC.StlClr.BinaryDelegate&lt;'Key, 'Key, bool&gt;" Usage="iHash.key_comp " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualC.StlClr.BinaryDelegate&lt;TKey,TKey,System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="086e9-181">傳回用於排序受控制序列的順序委派。</span><span class="sxs-lookup"><span data-stu-id="086e9-181">Returns the ordering delegate that is used to order the controlled sequence.</span></span> <span data-ttu-id="086e9-182">您會用它來比較兩個索引鍵。</span><span class="sxs-lookup"><span data-stu-id="086e9-182">You use it to compare two keys.</span></span></summary>
        <returns><span data-ttu-id="086e9-183">用來排序受控制列序的順序委派。</span><span class="sxs-lookup"><span data-stu-id="086e9-183">The ordering delegate that is used to order the controlled sequence.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086e9-184">如需詳細資訊，請參閱 <<c0> [ 雜湊\_map:: key_comp (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#key_comp)，[雜湊\_multimap:: key_comp (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#key_comp)，[雜湊\_set:: key_comp (STL /CLR)](/cpp/dotnet/hash-set-stl-clr#key_comp)，並[雜湊\_multiset:: key_comp (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#key_comp)。</span><span class="sxs-lookup"><span data-stu-id="086e9-184">For more information, see [hash\_map::key_comp (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#key_comp), [hash\_multimap::key_comp (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#key_comp), [hash\_set::key_comp (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#key_comp), and [hash\_multiset::key_comp (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#key_comp).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="load_factor">
      <MemberSignature Language="C#" Value="public float load_factor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float32 load_factor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IHash`2.load_factor" />
      <MemberSignature Language="VB.NET" Value="Public Function load_factor () As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; float load_factor();" />
      <MemberSignature Language="F#" Value="abstract member load_factor : unit -&gt; single" Usage="iHash.load_factor " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="086e9-185">計數雜湊資料表中各 Bucket 之項目的平均數目。</span><span class="sxs-lookup"><span data-stu-id="086e9-185">Counts the average number of elements per bucket in the hash table.</span></span></summary>
        <returns><span data-ttu-id="086e9-186">雜湊資料表中各 Bucket 之項目的平均數目。</span><span class="sxs-lookup"><span data-stu-id="086e9-186">The average number of elements per bucket in the hash table.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086e9-187">如需詳細資訊，請參閱 <<c0> [ 雜湊\_map::load_factor (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#load_factor)，[雜湊\_multimap::load_factor (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#load_factor)，[雜湊\_set::load_(STL/CLR) 的因素](/cpp/dotnet/hash-set-stl-clr#load_factor)，並[雜湊\_multiset::load_factor (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#load_factor)。</span><span class="sxs-lookup"><span data-stu-id="086e9-187">For more information, see [hash\_map::load_factor (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#load_factor), [hash\_multimap::load_factor (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#load_factor), [hash\_set::load_factor (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#load_factor), and [hash\_multiset::load_factor (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#load_factor).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="lower_bound">
      <MemberSignature Language="C#" Value="public void lower_bound (ref Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt; , TKey _Keyval);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.void lower_bound(class Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1&lt;!TValue&gt;&amp; , !TKey _Keyval) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IHash`2.lower_bound(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function lower_bound (ByRef  As ContainerBidirectionalIterator(Of TValue), _Keyval As TKey) As Void" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ^ lower_bound(Microsoft::VisualC::StlClr::Generic::ContainerBidirectionalIterator&lt;TValue&gt; ^ % , TKey _Keyval);" />
      <MemberSignature Language="F#" Value="abstract member lower_bound :  * 'Key -&gt; unit" Usage="iHash.lower_bound (, _Keyval)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="" Type="Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt;" RefType="ref" />
        <Parameter Name="_Keyval" Type="TKey" />
      </Parameters>
      <Docs>
        <param name=""><span data-ttu-id="086e9-188">Iterator，指定受控制序列中第一個雜湊至與 <paramref name="_Keyval" /> 相同 Bucket 的項目，以及與 <paramref name="_Keyval" /> 相等排序的項目。</span><span class="sxs-lookup"><span data-stu-id="086e9-188">An iterator that designates the first element in the controlled sequence that hashes to the same bucket as <paramref name="_Keyval" /> and has equivalent ordering to <paramref name="_Keyval" />.</span></span> <span data-ttu-id="086e9-189">如果沒有此類項目存在，便會傳回 <see cref="M:Microsoft.VisualC.StlClr.IHash`2.end(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@)" />。</span><span class="sxs-lookup"><span data-stu-id="086e9-189">If no such element exists, it returns <see cref="M:Microsoft.VisualC.StlClr.IHash`2.end(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@)" />.</span></span></param>
        <param name="_Keyval"><span data-ttu-id="086e9-190">要搜尋的索引鍵值。</span><span class="sxs-lookup"><span data-stu-id="086e9-190">The key value for which to search.</span></span></param>
        <summary><span data-ttu-id="086e9-191">尋找符合指定索引鍵之項目範圍的開頭。</span><span class="sxs-lookup"><span data-stu-id="086e9-191">Finds the beginning of the range of elements that match a specified key.</span></span></summary>
        <returns><span data-ttu-id="086e9-192">迭代器。</span><span class="sxs-lookup"><span data-stu-id="086e9-192">An iterator.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
 <span data-ttu-id="086e9-193">如需詳細資訊，請參閱 <<c0> [ 雜湊\_map:: lower_bound (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#lower_bound)，[雜湊\_multimap:: lower_bound (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#lower_bound)，[雜湊\_set::lower_繫結 (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#lower_bound)，並[雜湊\_multiset:: lower_bound (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#lower_bound)。</span><span class="sxs-lookup"><span data-stu-id="086e9-193">For more information, see [hash\_map::lower_bound (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#lower_bound), [hash\_multimap::lower_bound (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#lower_bound), [hash\_set::lower_bound (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#lower_bound), and [hash\_multiset::lower_bound (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#lower_bound).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="max_load_factor">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="086e9-194">取得或設定雜湊資料表中各 Bucket 的最大項目數目。</span><span class="sxs-lookup"><span data-stu-id="086e9-194">Gets or sets the maximum number of elements per bucket in the hash table.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086e9-195">如需詳細資訊，請參閱 <<c0> [ 雜湊\_map::max_load_factor (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#max_load_factor)，[雜湊\_multimap::max_load_factor (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#max_load_factor)，[雜湊\_設定：max_load_factor (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#load_factor)，並[雜湊\_multiset::max_load_factor (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#max_load_factor)。</span><span class="sxs-lookup"><span data-stu-id="086e9-195">For more information, see [hash\_map::max_load_factor (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#max_load_factor), [hash\_multimap::max_load_factor (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#max_load_factor), [hash\_set::max_load_factor (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#load_factor), and [hash\_multiset::max_load_factor (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#max_load_factor).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="max_load_factor">
      <MemberSignature Language="C#" Value="public float max_load_factor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float32 max_load_factor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IHash`2.max_load_factor" />
      <MemberSignature Language="VB.NET" Value="Public Function max_load_factor () As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; float max_load_factor();" />
      <MemberSignature Language="F#" Value="abstract member max_load_factor : unit -&gt; single" Usage="iHash.max_load_factor " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="086e9-196">取得雜湊資料表中各 Bucket 的最大項目數目。</span><span class="sxs-lookup"><span data-stu-id="086e9-196">Gets the maximum number of elements per bucket in the hash table.</span></span></summary>
        <returns><span data-ttu-id="086e9-197">雜湊資料表中各 Bucket 的最大項目數目。</span><span class="sxs-lookup"><span data-stu-id="086e9-197">The maximum number of elements per bucket in the hash table.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086e9-198">如需詳細資訊，請參閱 <<c0> [ 雜湊\_map::max_load_factor (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#max_load_factor)，[雜湊\_multimap::max_load_factor (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#max_load_factor)，[雜湊\_設定：max_load_factor (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#load_factor)，並[雜湊\_multiset::max_load_factor (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#max_load_factor)。</span><span class="sxs-lookup"><span data-stu-id="086e9-198">For more information, see [hash\_map::max_load_factor (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#max_load_factor), [hash\_multimap::max_load_factor (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#max_load_factor), [hash\_set::max_load_factor (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#load_factor), and [hash\_multiset::max_load_factor (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#max_load_factor).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="max_load_factor">
      <MemberSignature Language="C#" Value="public void max_load_factor (float _Newmax);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void max_load_factor(float32 _Newmax) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IHash`2.max_load_factor(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub max_load_factor (_Newmax As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void max_load_factor(float _Newmax);" />
      <MemberSignature Language="F#" Value="abstract member max_load_factor : single -&gt; unit" Usage="iHash.max_load_factor _Newmax" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="_Newmax" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="_Newmax"><span data-ttu-id="086e9-199">雜湊資料表中各 Bucket 的最大項目數目。</span><span class="sxs-lookup"><span data-stu-id="086e9-199">The maximum number of elements per bucket in the hash table.</span></span></param>
        <summary><span data-ttu-id="086e9-200">設定雜湊資料表中各 Bucket 的最大項目數目。</span><span class="sxs-lookup"><span data-stu-id="086e9-200">Sets the maximum number of elements per bucket in the hash table.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086e9-201">如需詳細資訊，請參閱 <<c0> [ 雜湊\_map::max_load_factor (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#max_load_factor)，[雜湊\_multimap::max_load_factor (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#max_load_factor)，[雜湊\_設定：max_load_factor (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#load_factor)，並[雜湊\_multiset::max_load_factor (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#max_load_factor)。</span><span class="sxs-lookup"><span data-stu-id="086e9-201">For more information, see [hash\_map::max_load_factor (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#max_load_factor), [hash\_multimap::max_load_factor (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#max_load_factor), [hash\_set::max_load_factor (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#load_factor), and [hash\_multiset::max_load_factor (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#max_load_factor).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="rbegin">
      <MemberSignature Language="C#" Value="public void rbegin (ref Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator&lt;TValue&gt; );" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.void rbegin(class Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1&lt;!TValue&gt;&amp; ) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IHash`2.rbegin(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`1}@)" />
      <MemberSignature Language="VB.NET" Value="Public Function rbegin (ByRef  As ReverseBidirectionalIterator(Of TValue)) As Void" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ^ rbegin(Microsoft::VisualC::StlClr::Generic::ReverseBidirectionalIterator&lt;TValue&gt; ^ % );" />
      <MemberSignature Language="F#" Value="abstract member rbegin :  -&gt; unit" Usage="iHash.rbegin " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="" Type="Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator&lt;TValue&gt;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name=""><span data-ttu-id="086e9-202">反向 Iterator，指派受控制序列的最後一個項目，或只是超出空序列的開頭。</span><span class="sxs-lookup"><span data-stu-id="086e9-202">A reverse iterator that designates the last element of the controlled sequence, or just beyond the beginning of an empty sequence.</span></span> <span data-ttu-id="086e9-203">因此，它會指定反向序列的 <paramref name="beginning" />。</span><span class="sxs-lookup"><span data-stu-id="086e9-203">Hence, it designates the <paramref name="beginning" /> of the reverse sequence.</span></span> <span data-ttu-id="086e9-204">您會用它來取得 Iterator，用以指定以反向順序顯示之受控制序列的 <paramref name="current" /> 開頭。</span><span class="sxs-lookup"><span data-stu-id="086e9-204">You use it to obtain an iterator that designates the <paramref name="current" /> beginning of the controlled sequence seen in reverse order.</span></span> <span data-ttu-id="086e9-205">如果受控制的序列長度變更，它的狀態也會變更。</span><span class="sxs-lookup"><span data-stu-id="086e9-205">Its status can change if the length of the controlled sequence changes.</span></span></param>
        <summary><span data-ttu-id="086e9-206">指定反向受控制序列的開頭。</span><span class="sxs-lookup"><span data-stu-id="086e9-206">Designates the beginning of the reversed controlled sequence.</span></span></summary>
        <returns><span data-ttu-id="086e9-207">迭代器。</span><span class="sxs-lookup"><span data-stu-id="086e9-207">An iterator.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
 <span data-ttu-id="086e9-208">如需詳細資訊，請參閱 <<c0> [ 雜湊\_map:: rbegin (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#rbegin)，[雜湊\_multimap:: rbegin (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#rbegin)，[雜湊\_set:: rbegin (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#rbegin)，並[雜湊\_multiset:: rbegin (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#rbegin)。</span><span class="sxs-lookup"><span data-stu-id="086e9-208">For more information, see [hash\_map::rbegin (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#rbegin), [hash\_multimap::rbegin (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#rbegin), [hash\_set::rbegin (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#rbegin), and [hash\_multiset::rbegin (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#rbegin).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="rehash">
      <MemberSignature Language="C#" Value="public void rehash (int _Buckets);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void rehash(int32 _Buckets) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IHash`2.rehash(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub rehash (_Buckets As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void rehash(int _Buckets);" />
      <MemberSignature Language="F#" Value="abstract member rehash : int -&gt; unit" Usage="iHash.rehash _Buckets" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="_Buckets" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="_Buckets"><span data-ttu-id="086e9-209">雜湊資料表中 Bucket 的數目。</span><span class="sxs-lookup"><span data-stu-id="086e9-209">The number of buckets for the hash table.</span></span></param>
        <summary><span data-ttu-id="086e9-210">重建雜湊資料表。</span><span class="sxs-lookup"><span data-stu-id="086e9-210">Rebuilds the hash table.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086e9-211">如需詳細資訊，請參閱 <<c0> [ 雜湊\_map::rehash (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#rehash)，[雜湊\_multimap::rehash (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#rehash)，[雜湊\_set::rehash (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#rehash)，並[雜湊\_multiset::rehash (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#rehash)。</span><span class="sxs-lookup"><span data-stu-id="086e9-211">For more information, see [hash\_map::rehash (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#rehash), [hash\_multimap::rehash (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#rehash), [hash\_set::rehash (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#rehash), and [hash\_multiset::rehash (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#rehash).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="rend">
      <MemberSignature Language="C#" Value="public void rend (ref Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator&lt;TValue&gt; );" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.void rend(class Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1&lt;!TValue&gt;&amp; ) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IHash`2.rend(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`1}@)" />
      <MemberSignature Language="VB.NET" Value="Public Function rend (ByRef  As ReverseBidirectionalIterator(Of TValue)) As Void" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ^ rend(Microsoft::VisualC::StlClr::Generic::ReverseBidirectionalIterator&lt;TValue&gt; ^ % );" />
      <MemberSignature Language="F#" Value="abstract member rend :  -&gt; unit" Usage="iHash.rend " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="" Type="Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator&lt;TValue&gt;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name=""><span data-ttu-id="086e9-212">反向 Iterator，指向超出受控制序列的開頭。</span><span class="sxs-lookup"><span data-stu-id="086e9-212">A reverse iterator that points just beyond the beginning of the controlled sequence.</span></span> <span data-ttu-id="086e9-213">因此，它會指定反向序列的 <paramref name="end" />。</span><span class="sxs-lookup"><span data-stu-id="086e9-213">Hence, it designates the <paramref name="end" /> of the reverse sequence.</span></span> <span data-ttu-id="086e9-214">您會用它來取得 Iterator，用以指定以反向順序顯示之受控制序列的 <paramref name="current" /> 結尾。</span><span class="sxs-lookup"><span data-stu-id="086e9-214">You use it to obtain an iterator that designates the <paramref name="current" /> end of the controlled sequence seen in reverse order.</span></span> <span data-ttu-id="086e9-215">如果受控制的序列長度變更，它的狀態也會變更。</span><span class="sxs-lookup"><span data-stu-id="086e9-215">Its status can change if the length of the controlled sequence changes.</span></span></param>
        <summary><span data-ttu-id="086e9-216">指定反向受控制序列的結尾。</span><span class="sxs-lookup"><span data-stu-id="086e9-216">Designates the end of the reversed controlled sequence.</span></span></summary>
        <returns><span data-ttu-id="086e9-217">迭代器。</span><span class="sxs-lookup"><span data-stu-id="086e9-217">An iterator.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
 <span data-ttu-id="086e9-218">如需詳細資訊，請參閱 <<c0> [ 雜湊\_map:: rend (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#rend)，[雜湊\_multimap:: rend (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#rend)，[雜湊\_set:: rend (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#rend)，並[雜湊\_multiset:: rend (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#rend)。</span><span class="sxs-lookup"><span data-stu-id="086e9-218">For more information, see [hash\_map::rend (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#rend), [hash\_multimap::rend (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#rend), [hash\_set::rend (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#rend), and [hash\_multiset::rend (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#rend).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="size">
      <MemberSignature Language="C#" Value="public int size ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 size() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IHash`2.size" />
      <MemberSignature Language="VB.NET" Value="Public Function size () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int size();" />
      <MemberSignature Language="F#" Value="abstract member size : unit -&gt; int" Usage="iHash.size " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="086e9-219">計算容器中的項目數目。</span><span class="sxs-lookup"><span data-stu-id="086e9-219">Counts the number of elements in the container.</span></span></summary>
        <returns><span data-ttu-id="086e9-220">受控制序列的長度。</span><span class="sxs-lookup"><span data-stu-id="086e9-220">The length of the controlled sequence.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086e9-221">如需詳細資訊，請參閱 <<c0> [ 雜湊\_map:: size (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#size)，[雜湊\_multimap:: size (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#size)，[雜湊\_set:: size (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#size)，並[雜湊\_multiset:: size (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#size)。</span><span class="sxs-lookup"><span data-stu-id="086e9-221">For more information, see [hash\_map::size (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#size), [hash\_multimap::size (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#size), [hash\_set::size (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#size), and [hash\_multiset::size (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#size).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="swap">
      <MemberSignature Language="C#" Value="public void swap (Microsoft.VisualC.StlClr.IHash&lt;TKey,TValue&gt; _Right);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void swap(class Microsoft.VisualC.StlClr.IHash`2&lt;!TKey, !TValue&gt; _Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IHash`2.swap(Microsoft.VisualC.StlClr.IHash{`0,`1})" />
      <MemberSignature Language="VB.NET" Value="Public Sub swap (_Right As IHash(Of TKey, TValue))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void swap(Microsoft::VisualC::StlClr::IHash&lt;TKey, TValue&gt; ^ _Right);" />
      <MemberSignature Language="F#" Value="abstract member swap : Microsoft.VisualC.StlClr.IHash&lt;'Key, 'Value&gt; -&gt; unit" Usage="iHash.swap _Right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="_Right" Type="Microsoft.VisualC.StlClr.IHash&lt;TKey,TValue&gt;" />
      </Parameters>
      <Docs>
        <param name="_Right"><span data-ttu-id="086e9-222">要和其交換內容的容器。</span><span class="sxs-lookup"><span data-stu-id="086e9-222">The container with which to swap contents.</span></span></param>
        <summary><span data-ttu-id="086e9-223">交換兩個容器的內容。</span><span class="sxs-lookup"><span data-stu-id="086e9-223">Swaps the contents of two containers.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086e9-224">如需詳細資訊，請參閱 <<c0> [ 雜湊\_map:: swap (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#swap)，[雜湊\_multimap:: swap (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#swap)，[雜湊\_set:: swap (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#swap)，並[雜湊\_multiset:: swap (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#swap)。</span><span class="sxs-lookup"><span data-stu-id="086e9-224">For more information, see [hash\_map::swap (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#swap), [hash\_multimap::swap (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#swap), [hash\_set::swap (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#swap), and [hash\_multiset::swap (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#swap).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="upper_bound">
      <MemberSignature Language="C#" Value="public void upper_bound (ref Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt; , TKey _Keyval);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.void upper_bound(class Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1&lt;!TValue&gt;&amp; , !TKey _Keyval) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IHash`2.upper_bound(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function upper_bound (ByRef  As ContainerBidirectionalIterator(Of TValue), _Keyval As TKey) As Void" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ^ upper_bound(Microsoft::VisualC::StlClr::Generic::ContainerBidirectionalIterator&lt;TValue&gt; ^ % , TKey _Keyval);" />
      <MemberSignature Language="F#" Value="abstract member upper_bound :  * 'Key -&gt; unit" Usage="iHash.upper_bound (, _Keyval)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="" Type="Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator&lt;TValue&gt;" RefType="ref" />
        <Parameter Name="_Keyval" Type="TKey" />
      </Parameters>
      <Docs>
        <param name=""><span data-ttu-id="086e9-225">Iterator，指定受控制序列中第一個超越最後一個項目且雜湊至與 <paramref name="_Keyval" /> 相同 Bucket 的項目，以及與 <paramref name="_Keyval" /> 相等排序的項目。</span><span class="sxs-lookup"><span data-stu-id="086e9-225">An iterator that designates the first element beyond the last element in the controlled sequence that hashes to the same bucket as <paramref name="_Keyval" /> and has equivalent ordering to <paramref name="_Keyval" />.</span></span> <span data-ttu-id="086e9-226">如果沒有此類項目存在，便會傳回 <see cref="M:Microsoft.VisualC.StlClr.IHash`2.end(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@)" />。</span><span class="sxs-lookup"><span data-stu-id="086e9-226">If no such element exists, it returns <see cref="M:Microsoft.VisualC.StlClr.IHash`2.end(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@)" />.</span></span></param>
        <param name="_Keyval"><span data-ttu-id="086e9-227">要搜尋的索引鍵值。</span><span class="sxs-lookup"><span data-stu-id="086e9-227">The key value to search for.</span></span></param>
        <summary><span data-ttu-id="086e9-228">尋找符合指定索引鍵之項目範圍的結尾。</span><span class="sxs-lookup"><span data-stu-id="086e9-228">Finds the end of the range of elements that match a specified key.</span></span></summary>
        <returns><span data-ttu-id="086e9-229">迭代器。</span><span class="sxs-lookup"><span data-stu-id="086e9-229">An iterator.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
 <span data-ttu-id="086e9-230">如需詳細資訊，請參閱 <<c0> [ 雜湊\_map:: upper_bound (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#upper_bound)，[雜湊\_multimap:: upper_bound (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#upper_bound)，[雜湊\_set::upper_繫結 (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#upper_bound)，並[雜湊\_multiset:: upper_bound (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#upper_bound)。</span><span class="sxs-lookup"><span data-stu-id="086e9-230">For more information, see [hash\_map::upper_bound (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#upper_bound), [hash\_multimap::upper_bound (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#upper_bound), [hash\_set::upper_bound (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#upper_bound), and [hash\_multiset::upper_bound (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#upper_bound).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="value_comp">
      <MemberSignature Language="C#" Value="public Microsoft.VisualC.StlClr.BinaryDelegate&lt;TValue,TValue,bool&gt; value_comp ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.VisualC.StlClr.BinaryDelegate`3&lt;!TValue, !TValue, bool&gt; value_comp() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualC.StlClr.IHash`2.value_comp" />
      <MemberSignature Language="VB.NET" Value="Public Function value_comp () As BinaryDelegate(Of TValue, TValue, Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::VisualC::StlClr::BinaryDelegate&lt;TValue, TValue, bool&gt; ^ value_comp();" />
      <MemberSignature Language="F#" Value="abstract member value_comp : unit -&gt; Microsoft.VisualC.StlClr.BinaryDelegate&lt;'Value, 'Value, bool&gt;" Usage="iHash.value_comp " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualC.StlClr.BinaryDelegate&lt;TValue,TValue,System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="086e9-231">傳回用於排序受控制序列的順序委派。</span><span class="sxs-lookup"><span data-stu-id="086e9-231">Returns the ordering delegate that is used to order the controlled sequence.</span></span></summary>
        <returns><span data-ttu-id="086e9-232">用來排序受控制列序的順序委派。</span><span class="sxs-lookup"><span data-stu-id="086e9-232">The ordering delegate that is used to order the controlled sequence.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="086e9-233">如需詳細資訊，請參閱 <<c0> [ 雜湊\_map:: value_comp (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#value_comp)，[雜湊\_multimap:: value_comp (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#value_comp)，[雜湊\_set:: value_comp(STL/CLR)](/cpp/dotnet/hash-set-stl-clr#value_comp)，並[雜湊\_multiset:: value_comp (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#value_comp)。</span><span class="sxs-lookup"><span data-stu-id="086e9-233">For more information, see [hash\_map::value_comp (STL/CLR)](/cpp/dotnet/hash-map-stl-clr#value_comp), [hash\_multimap::value_comp (STL/CLR)](/cpp/dotnet/hash-multimap-stl-clr#value_comp), [hash\_set::value_comp (STL/CLR)](/cpp/dotnet/hash-set-stl-clr#value_comp), and [hash\_multiset::value_comp (STL/CLR)](/cpp/dotnet/hash-multiset-stl-clr#value_comp).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>