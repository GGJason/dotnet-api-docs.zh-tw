<Type Name="ContentType" FullName="System.Net.Mime.ContentType">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="97918e0a00eeb1d87f0b58bb21364936d8d4a5d1" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36475275" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ContentType" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ContentType extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.Mime.ContentType" />
  <TypeSignature Language="VB.NET" Value="Public Class ContentType" />
  <TypeSignature Language="C++ CLI" Value="public ref class ContentType" />
  <TypeSignature Language="F#" Value="type ContentType = class" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Net.Mail</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>表示 MIME 通訊協定內容類型標頭。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 中的資訊<xref:System.Net.Mime.ContentType>類別用來描述包含在電子郵件訊息的方式顯示電子郵件的軟體在適當的方式中會有內容中的資料。 <xref:System.Net.Mime.ContentType> 搭配使用<xref:System.Net.Mail.Attachment>附件中指定的內容類型的類別。  
  
 Content-type 標頭的語法是在 RFC 2045 5.1 節中所述。 RFC 2046 提供 MIME 媒體類型和其參數的詳細的資訊。 這些 Rfc 位於[ https://www.ietf.org ](https://www.ietf.org/)。  
  
   
  
## Examples  
 下列程式碼範例會傳送附件的電子郵件訊息，並顯示<xref:System.Net.Mail.Attachment.ContentDisposition%2A>附件的內容。  
  
 [!code-cpp[NclMailSync#6](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#6)]
 [!code-csharp[NclMailSync#6](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#6)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Net.Mail.SmtpClient" />
    <altmember cref="T:System.Net.Mail.MailMessage" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Net.Mime.ContentType" /> 類別的新執行個體。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ContentType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mime.ContentType.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ContentType();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Net.Mime.ContentType" /> 類別預設的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個建構函式會將 <xref:System.Net.Mime.ContentType.MediaType%2A> 屬性初始化為 `"application/octet-stream"`。  
  
   
  
## Examples  
 下列程式碼範例示範如何呼叫這個建構函式。  
  
 [!code-cpp[NclMailSync#15](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#15)]
 [!code-csharp[NclMailSync#15](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#15)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ContentType (string contentType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string contentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mime.ContentType.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (contentType As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ContentType(System::String ^ contentType);" />
      <MemberSignature Language="F#" Value="new System.Net.Mime.ContentType : string -&gt; System.Net.Mime.ContentType" Usage="new System.Net.Mime.ContentType contentType" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="contentType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="contentType">
          <see cref="T:System.String" />，例如 <c>"text/plain; charset=us-ascii"</c>，其中包含 MIME 媒體類型、子類型和選擇性的參數。</param>
        <summary>以指定的字串初始化 <see cref="T:System.Net.Mime.ContentType" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 語法`contentType`字串 RFC 2045 一節所述 5.1 位於[ https://www.ietf.org ](https://www.ietf.org/)。  
  
   
  
## Examples  
 下列程式碼範例示範如何呼叫這個建構函式。  
  
 [!code-cpp[NclMailSync#15](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#15)]
 [!code-csharp[NclMailSync#15](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="contentType" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="contentType" /> 為 <see cref="F:System.String.Empty" /> ("")。</exception>
        <exception cref="T:System.FormatException">
          <paramref name="contentType" /> 處於無法剖析的形式。</exception>
      </Docs>
    </Member>
    <Member MemberName="Boundary">
      <MemberSignature Language="C#" Value="public string Boundary { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Boundary" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mime.ContentType.Boundary" />
      <MemberSignature Language="VB.NET" Value="Public Property Boundary As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Boundary { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Boundary : string with get, set" Usage="System.Net.Mime.ContentType.Boundary" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定界限參數值，其包含在這個執行個體所表示的內容類型標頭中。</summary>
        <value>
          <see cref="T:System.String" />，包含與界限參數關聯的值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在下列範例中的 Content-type 標頭的值<xref:System.Net.Mime.ContentType.Boundary%2A>參數是"`-----boundary---0`"。  
  
 `content-type: multipart/mixed; boundary=-----boundary---0`  
  
 將此屬性設定為`null`或<xref:System.String.Empty?displayProperty=nameWithType>移除標頭中的界限資訊。  
  
 Content-type 標頭的語法是在 RFC 2045 5.1 節中所述。 深入討論界限參數被包含在 RFC 2046 第 5.1.1 節。 這些 Rfc 位於[ https://www.ietf.org ](https://www.ietf.org/)。  
  
   
  
## Examples  
 下列程式碼範例顯示的值<xref:System.Net.Mime.ContentType.Boundary%2A>屬性。  
  
 [!code-cpp[NclMailSync#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#5)]
 [!code-csharp[NclMailSync#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CharSet">
      <MemberSignature Language="C#" Value="public string CharSet { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CharSet" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mime.ContentType.CharSet" />
      <MemberSignature Language="VB.NET" Value="Public Property CharSet As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CharSet { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CharSet : string with get, set" Usage="System.Net.Mime.ContentType.CharSet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定字元集參數值，其包含在這個執行個體所表示的內容類型標頭中。</summary>
        <value>
          <see cref="T:System.String" />，包含與字元集參數關聯的值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在下列範例中的 Content-type 標頭的值<xref:System.Net.Mime.ContentType.CharSet%2A>屬性是 「`us-ascii`"。  
  
 `content-type: application/x-myType; charset=us-ascii`  
  
 將此屬性設定為`null`或<xref:System.String.Empty?displayProperty=nameWithType>移除 charset 資訊從標頭。  
  
 文法的詳細資料的內容類型標頭的語法是在 RFC 2045 5.1 節中所述。 Charset 參數的深入討論被包含在 RFC 2046 4.1.2 節。 這些 Rfc 位於[ https://www.ietf.org ](https://www.ietf.org/)。  
  
   
  
## Examples  
 下列程式碼範例會顯示屬性的值。  
  
 [!code-cpp[NclMailSync#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#5)]
 [!code-csharp[NclMailSync#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object rparam);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object rparam) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mime.ContentType.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (rparam As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ rparam);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="contentType.Equals rparam" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rparam" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="rparam">要與這個物件比較的 <see cref="T:System.Net.Mime.ContentType" /> 物件。</param>
        <summary>判斷指定 <see cref="T:System.Net.Mime.ContentType" /> 物件的內容類型標頭，是否等於這個物件的內容類型標頭。</summary>
        <returns>如果內容類型標頭相同則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mime.ContentType.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="contentType.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>決定指定之 <see cref="T:System.Net.Mime.ContentType" /> 物件的雜湊程式碼。</summary>
        <returns>整數雜湊值。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MediaType">
      <MemberSignature Language="C#" Value="public string MediaType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MediaType" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mime.ContentType.MediaType" />
      <MemberSignature Language="VB.NET" Value="Public Property MediaType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MediaType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MediaType : string with get, set" Usage="System.Net.Mime.ContentType.MediaType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定媒體類型值，其包含在這個執行個體所表示的內容類型標頭中。</summary>
        <value>
          <see cref="T:System.String" />，包含媒體類型與子類型值。 這個值未包含接在子類型後面的分號 (;) 分隔符號。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在下列範例中的 Content-type 標頭的值<xref:System.Net.Mime.ContentType.MediaType%2A>屬性是`"application/x-myType"`。  
  
 `content-type: application/x-myType; name=data.xyz`  
  
 將此屬性設定為`null`或<xref:System.String.Empty?displayProperty=nameWithType>移除標頭的名稱資訊。  
  
 Content-type 標頭的語法是在 RFC 2045 5.1 節中所述。 RFC 2046 提供 MIME 媒體類型的詳細的資訊。 這些 Rfc 位於[ https://www.ietf.org ](https://www.ietf.org/)。  
  
   
  
## Examples  
 下列程式碼範例會設定這個屬性的值。  
  
 [!code-cpp[NclMailSync#13](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#13)]
 [!code-csharp[NclMailSync#13](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">為設定作業指定的值為 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException">為設定作業指定的值是 <see cref="F:System.String.Empty" /> ("")。</exception>
        <exception cref="T:System.FormatException">為設定作業指定的值採用無法剖析的格式。</exception>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mime.ContentType.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Net.Mime.ContentType.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定名稱參數值，其包含在這個執行個體所表示的內容類型標頭中。</summary>
        <value>
          <see cref="T:System.String" />，包含與名稱參數關聯的值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在下列範例中的 Content-type 標頭的值<xref:System.Net.Mime.ContentType.Name%2A>屬性是`"data.xyz"`。  
  
 `content-type: application/x-myType; name=data.xyz`  
  
 詳細資料的內容類型標頭的語法文法 RFC 2045 一節所述 5.1 中，位於[ https://www.ietf.org ](https://www.ietf.org/)。  
  
 指定的內容時<xref:System.Net.Mail.Attachment>為<xref:System.IO.Stream>或<xref:System.String>，您可以使用<xref:System.Net.Mime.ContentType.Name%2A>設定的收件者的系統儲存內容的檔案名稱。  
  
   
  
## Examples  
 下列程式碼範例會設定指定要做為資料流附加檔案的名稱屬性的值。  
  
 [!code-cpp[NclMailSync#15](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#15)]
 [!code-csharp[NclMailSync#15](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#15)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parameters">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.StringDictionary Parameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.StringDictionary Parameters" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mime.ContentType.Parameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parameters As StringDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::StringDictionary ^ Parameters { System::Collections::Specialized::StringDictionary ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Parameters : System.Collections.Specialized.StringDictionary" Usage="System.Net.Mime.ContentType.Parameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.StringDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得包含參數的字典，這些參數包含在這個執行個體所表示的內容類型標頭中。</summary>
        <value>可寫入的 <see cref="T:System.Collections.Specialized.StringDictionary" />，包含名稱和值組。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以藉由指定的整個內容標頭值建構時設定參數<xref:System.Net.Mime.ContentType>物件，或您可以加入參數，以便<xref:System.Collections.Specialized.StringDictionary>傳回<xref:System.Net.Mime.ContentType.Parameters%2A>屬性。  
  
 將參數項目加入至字典中，參數的名稱是項目的索引鍵和參數的值則是項目的值。  
  
 文法的詳細資料的內容類型標頭的語法是在 RFC 2045 5.1 節中所述。 RFC 2046 MIME 媒體類型，以及其相關聯的參數提供的詳細的資訊。 這些 Rfc 位於[ https://www.ietf.org ](https://www.ietf.org/)。  
  
   
  
## Examples  
 下列程式碼範例會顯示值，這個屬性所傳回之字典中。  
  
 [!code-cpp[NclMailSync#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#5)]
 [!code-csharp[NclMailSync#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mime.ContentType.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="contentType.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>傳回這個 <see cref="T:System.Net.Mime.ContentType" /> 物件的字串表示。</summary>
        <returns>
          <see cref="T:System.String" />，包含這個 <see cref="T:System.Net.Mime.ContentType" /> 的目前設定。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 值<xref:System.Net.Mime.ContentType.ToString%2A>方法包含用來建立此字串<xref:System.Net.Mime.ContentType>，如果有指定，而且沒有任何屬性值已變更。 如果未指定字串，或因為此變更一個或多個屬性值<xref:System.Net.Mime.ContentType>已建立的值<xref:System.Net.Mime.ContentType.ToString%2A>是使用目前的屬性值由所組成的 Content-type 標頭格式的字串。 字串沒有包括`"Content-type:"`前置詞。  
  
 Content-type 標頭的語法 RFC 2045 一節所述 5.1 中，位於[ https://www.ietf.org ](https://www.ietf.org/)。  
  
   
  
## Examples  
 下列程式碼範例顯示的字串表示<xref:System.Net.Mime.ContentType>。  
  
 [!code-cpp[NclMailSync#13](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#13)]
 [!code-csharp[NclMailSync#13](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>