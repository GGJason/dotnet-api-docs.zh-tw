<Type Name="XpsDocument" FullName="System.Windows.Xps.Packaging.XpsDocument">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="50ac12e0458317abeeb551c487cd7be76dc0bea7" />
    <Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="11/17/2018" />
    <Meta Name="ms.locfileid" Value="51868606" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XpsDocument : System.Windows.Xps.Packaging.XpsPartBase, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XpsDocument extends System.Windows.Xps.Packaging.XpsPartBase implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Xps.Packaging.XpsDocument" />
  <TypeSignature Language="VB.NET" Value="Public Class XpsDocument&#xA;Inherits XpsPartBase&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class XpsDocument : System::Windows::Xps::Packaging::XpsPartBase, IDisposable" />
  <TypeSignature Language="F#" Value="type XpsDocument = class&#xA;    inherit XpsPartBase&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>ReachFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Xps.Packaging.XpsPartBase</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>提供存放 XPS 文件之內容的 <see cref="T:System.IO.Packaging.Package" />。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Xps.Packaging.XpsDocument>包含<xref:System.Windows.Documents.FixedDocumentSequence>組成一或多個<xref:System.Windows.Documents.FixedDocument>項目。  
  
 <xref:System.Windows.Xps.Packaging.XpsDocument.%23ctor%2A>的參考傳遞給建構函式<xref:System.IO.Packaging.Package>撰寫、 儲存和讀取的文件內容的項目。  
  
 新的空[!INCLUDE[TLA2#tla_xps](~/includes/tla2sharptla-xps-md.md)]<xref:System.IO.Packaging.Package>由使用<xref:System.IO.Packaging.Package.%23ctor%2A>建構函式。  
  
 將現有[!INCLUDE[TLA2#tla_xps](~/includes/tla2sharptla-xps-md.md)]<xref:System.IO.Packaging.Package>使用開啟<xref:System.IO.Packaging.Package.Open%2A?displayProperty=nameWithType>方法。  
  
 A<xref:System.Windows.Documents.FixedDocumentSequence>根會新增至空[!INCLUDE[TLA2#tla_xps](~/includes/tla2sharptla-xps-md.md)]<xref:System.IO.Packaging.Package>藉由呼叫<xref:System.Windows.Xps.Packaging.XpsDocument.AddFixedDocumentSequence%2A>方法。  
  
 <xref:System.Printing.PrintTicket> 印表機資訊與控制的項目也會與相關聯<xref:System.Windows.Documents.FixedDocumentSequence>，或個別<xref:System.Windows.Documents.FixedDocument>並<xref:System.Windows.Documents.FixedPage>中所儲存的項目<xref:System.Windows.Xps.Packaging.XpsDocument>。  
  
 如需詳細資訊[!INCLUDE[TLA2#tla_xps](~/includes/tla2sharptla-xps-md.md)]請參閱 XML Paper Specification (XPS) 下載[ http://go.microsoft.com/fwlink/?LinkID=65761 ](https://go.microsoft.com/fwlink/?LinkID=65761)。  
  
 ]]></format>
    </remarks>
    <altmember cref="N:System.IO.Packaging" />
    <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=71255">開放式封裝慣例 (OPC) 規格</related>
    <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=74494">Digital Signing Framework of the Open Packaging Conventions</related>
    <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=65761">XML 文件規格 (XPS)</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>ReachFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Windows.Xps.Packaging.XpsDocument" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列範例示範如何建立和關閉<xref:System.Windows.Xps.Packaging.XpsDocument>。  
  
 [!code-cpp[XpsCreate#XpsCreatePackageOpen](~/samples/snippets/cpp/VS_Snippets_Wpf/XpsCreate/CPP/XpsCreate.cpp#xpscreatepackageopen)]
 [!code-csharp[XpsCreate#XpsCreatePackageOpen](~/samples/snippets/csharp/VS_Snippets_Wpf/XpsCreate/CSharp/XpsCreate.cs#xpscreatepackageopen)]
 [!code-vb[XpsCreate#XpsCreatePackageOpen](~/samples/snippets/visualbasic/VS_Snippets_Wpf/XpsCreate/visualbasic/xpscreate.vb#xpscreatepackageopen)]  
  
 下列範例也示範如何建立和關閉<xref:System.Windows.Xps.Packaging.XpsDocument>。  
  
 [!code-csharp[DocumentSerialize#DocSerializeLinked](~/samples/snippets/csharp/VS_Snippets_Wpf/DocumentSerialize/CSharp/ThumbViewer.cs#docserializelinked)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XpsDocument (System.IO.Packaging.Package package);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Packaging.Package package) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Xps.Packaging.XpsDocument.#ctor(System.IO.Packaging.Package)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XpsDocument(System::IO::Packaging::Package ^ package);" />
      <MemberSignature Language="F#" Value="new System.Windows.Xps.Packaging.XpsDocument : System.IO.Packaging.Package -&gt; System.Windows.Xps.Packaging.XpsDocument" Usage="new System.Windows.Xps.Packaging.XpsDocument package" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>ReachFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="package" Type="System.IO.Packaging.Package" />
      </Parameters>
      <Docs>
        <param name="package">
          <see cref="T:System.Windows.Xps.Packaging.XpsDocument" /> 的目標 [!INCLUDE[TLA2#tla_metro](~/includes/tla2sharptla-metro-md.md)] 封裝。</param>
        <summary>以存取指定的 [!INCLUDE[TLA#tla_metro](~/includes/tlasharptla-metro-md.md)] <see cref="T:System.IO.Packaging.Package" /> 和預設的交錯、資源和壓縮選項，將 <see cref="T:System.Windows.Xps.Packaging.XpsDocument" /> 類別的新執行個體初始化。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列範例示範如何建立和關閉<xref:System.Windows.Xps.Packaging.XpsDocument>。  
  
 [!code-cpp[XpsCreate#XpsCreatePackageOpen](~/samples/snippets/cpp/VS_Snippets_Wpf/XpsCreate/CPP/XpsCreate.cpp#xpscreatepackageopen)]
 [!code-csharp[XpsCreate#XpsCreatePackageOpen](~/samples/snippets/csharp/VS_Snippets_Wpf/XpsCreate/CSharp/XpsCreate.cs#xpscreatepackageopen)]
 [!code-vb[XpsCreate#XpsCreatePackageOpen](~/samples/snippets/visualbasic/VS_Snippets_Wpf/XpsCreate/visualbasic/xpscreate.vb#xpscreatepackageopen)]  
  
 下列範例也示範如何建立和關閉<xref:System.Windows.Xps.Packaging.XpsDocument>。  
  
 [!code-csharp[DocumentSerialize#DocSerializeLinked](~/samples/snippets/csharp/VS_Snippets_Wpf/DocumentSerialize/CSharp/ThumbViewer.cs#docserializelinked)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XpsDocument (System.IO.Packaging.Package package, System.IO.Packaging.CompressionOption compressionOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Packaging.Package package, valuetype System.IO.Packaging.CompressionOption compressionOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Xps.Packaging.XpsDocument.#ctor(System.IO.Packaging.Package,System.IO.Packaging.CompressionOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XpsDocument(System::IO::Packaging::Package ^ package, System::IO::Packaging::CompressionOption compressionOption);" />
      <MemberSignature Language="F#" Value="new System.Windows.Xps.Packaging.XpsDocument : System.IO.Packaging.Package * System.IO.Packaging.CompressionOption -&gt; System.Windows.Xps.Packaging.XpsDocument" Usage="new System.Windows.Xps.Packaging.XpsDocument (package, compressionOption)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>ReachFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="package" Type="System.IO.Packaging.Package" />
        <Parameter Name="compressionOption" Type="System.IO.Packaging.CompressionOption" />
      </Parameters>
      <Docs>
        <param name="package">
          <see cref="T:System.Windows.Xps.Packaging.XpsDocument" /> 的目標封裝。</param>
        <param name="compressionOption">封裝壓縮選項。</param>
        <summary>使用指定的預設交錯、資源和壓縮選項，初始化 <see cref="T:System.Windows.Xps.Packaging.XpsDocument" /> 類別的新執行個體，此類別包含於指定的 <see cref="T:System.IO.Packaging.Package" />。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列範例示範如何建立和關閉<xref:System.Windows.Xps.Packaging.XpsDocument>。  
  
 [!code-cpp[XpsCreate#XpsCreatePackageOpen](~/samples/snippets/cpp/VS_Snippets_Wpf/XpsCreate/CPP/XpsCreate.cpp#xpscreatepackageopen)]
 [!code-csharp[XpsCreate#XpsCreatePackageOpen](~/samples/snippets/csharp/VS_Snippets_Wpf/XpsCreate/CSharp/XpsCreate.cs#xpscreatepackageopen)]
 [!code-vb[XpsCreate#XpsCreatePackageOpen](~/samples/snippets/visualbasic/VS_Snippets_Wpf/XpsCreate/visualbasic/xpscreate.vb#xpscreatepackageopen)]  
  
 下列範例也示範如何建立和關閉<xref:System.Windows.Xps.Packaging.XpsDocument>。  
  
 [!code-csharp[DocumentSerialize#DocSerializeLinked](~/samples/snippets/csharp/VS_Snippets_Wpf/DocumentSerialize/CSharp/ThumbViewer.cs#docserializelinked)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XpsDocument (string path, System.IO.FileAccess packageAccess);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, valuetype System.IO.FileAccess packageAccess) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Xps.Packaging.XpsDocument.#ctor(System.String,System.IO.FileAccess)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String, packageAccess As FileAccess)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XpsDocument(System::String ^ path, System::IO::FileAccess packageAccess);" />
      <MemberSignature Language="F#" Value="new System.Windows.Xps.Packaging.XpsDocument : string * System.IO.FileAccess -&gt; System.Windows.Xps.Packaging.XpsDocument" Usage="new System.Windows.Xps.Packaging.XpsDocument (path, packageAccess)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>ReachFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="packageAccess" Type="System.IO.FileAccess" />
      </Parameters>
      <Docs>
        <param name="path">
          <see cref="T:System.IO.Packaging.Package" /> 之目標 <see cref="T:System.Windows.Xps.Packaging.XpsDocument" /> 的路徑和檔案名稱。</param>
        <param name="packageAccess">開啟 <see cref="T:System.Windows.Xps.Packaging.XpsDocument" /> 的檔案 I/O 模式。</param>
        <summary>使用預設交錯、資源和壓縮選項，初始化 <see cref="T:System.Windows.Xps.Packaging.XpsDocument" /> 類別的新執行個體，此類別包含於指定的 <see cref="T:System.IO.Packaging.Package" /> 檔案。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列範例示範如何建立和關閉<xref:System.Windows.Xps.Packaging.XpsDocument>。  
  
 [!code-cpp[XpsCreate#XpsCreatePackageOpen](~/samples/snippets/cpp/VS_Snippets_Wpf/XpsCreate/CPP/XpsCreate.cpp#xpscreatepackageopen)]
 [!code-csharp[XpsCreate#XpsCreatePackageOpen](~/samples/snippets/csharp/VS_Snippets_Wpf/XpsCreate/CSharp/XpsCreate.cs#xpscreatepackageopen)]
 [!code-vb[XpsCreate#XpsCreatePackageOpen](~/samples/snippets/visualbasic/VS_Snippets_Wpf/XpsCreate/visualbasic/xpscreate.vb#xpscreatepackageopen)]  
  
 下列範例也示範如何建立和關閉<xref:System.Windows.Xps.Packaging.XpsDocument>。  
  
 [!code-csharp[DocumentSerialize#DocSerializeLinked](~/samples/snippets/csharp/VS_Snippets_Wpf/DocumentSerialize/CSharp/ThumbViewer.cs#docserializelinked)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XpsDocument (System.IO.Packaging.Package package, System.IO.Packaging.CompressionOption compressionOption, string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Packaging.Package package, valuetype System.IO.Packaging.CompressionOption compressionOption, string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Xps.Packaging.XpsDocument.#ctor(System.IO.Packaging.Package,System.IO.Packaging.CompressionOption,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XpsDocument(System::IO::Packaging::Package ^ package, System::IO::Packaging::CompressionOption compressionOption, System::String ^ path);" />
      <MemberSignature Language="F#" Value="new System.Windows.Xps.Packaging.XpsDocument : System.IO.Packaging.Package * System.IO.Packaging.CompressionOption * string -&gt; System.Windows.Xps.Packaging.XpsDocument" Usage="new System.Windows.Xps.Packaging.XpsDocument (package, compressionOption, path)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>ReachFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="package" Type="System.IO.Packaging.Package" />
        <Parameter Name="compressionOption" Type="System.IO.Packaging.CompressionOption" />
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="package">
          <see cref="T:System.Windows.Xps.Packaging.XpsDocument" /> 的目標封裝。</param>
        <param name="compressionOption">封裝壓縮選項。</param>
        <param name="path">在文件的[!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] 做為字串。</param>
        <summary>使用指定的預設交錯、資源和壓縮選項，初始化 <see cref="T:System.Windows.Xps.Packaging.XpsDocument" /> 類別的新執行個體，此類別包含於指定的 <see cref="T:System.IO.Packaging.Package" />。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列範例示範如何建立和關閉<xref:System.Windows.Xps.Packaging.XpsDocument>。  
  
 [!code-cpp[XpsCreate#XpsCreatePackageOpen](~/samples/snippets/cpp/VS_Snippets_Wpf/XpsCreate/CPP/XpsCreate.cpp#xpscreatepackageopen)]
 [!code-csharp[XpsCreate#XpsCreatePackageOpen](~/samples/snippets/csharp/VS_Snippets_Wpf/XpsCreate/CSharp/XpsCreate.cs#xpscreatepackageopen)]
 [!code-vb[XpsCreate#XpsCreatePackageOpen](~/samples/snippets/visualbasic/VS_Snippets_Wpf/XpsCreate/visualbasic/xpscreate.vb#xpscreatepackageopen)]  
  
 下列範例也示範如何建立和關閉<xref:System.Windows.Xps.Packaging.XpsDocument>。  
  
 [!code-csharp[DocumentSerialize#DocSerializeLinked](~/samples/snippets/csharp/VS_Snippets_Wpf/DocumentSerialize/CSharp/ThumbViewer.cs#docserializelinked)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XpsDocument (string path, System.IO.FileAccess packageAccess, System.IO.Packaging.CompressionOption compressionOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, valuetype System.IO.FileAccess packageAccess, valuetype System.IO.Packaging.CompressionOption compressionOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Xps.Packaging.XpsDocument.#ctor(System.String,System.IO.FileAccess,System.IO.Packaging.CompressionOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XpsDocument(System::String ^ path, System::IO::FileAccess packageAccess, System::IO::Packaging::CompressionOption compressionOption);" />
      <MemberSignature Language="F#" Value="new System.Windows.Xps.Packaging.XpsDocument : string * System.IO.FileAccess * System.IO.Packaging.CompressionOption -&gt; System.Windows.Xps.Packaging.XpsDocument" Usage="new System.Windows.Xps.Packaging.XpsDocument (path, packageAccess, compressionOption)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>ReachFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="packageAccess" Type="System.IO.FileAccess" />
        <Parameter Name="compressionOption" Type="System.IO.Packaging.CompressionOption" />
      </Parameters>
      <Docs>
        <param name="path">
          <see cref="T:System.IO.Packaging.Package" /> 之目標 <see cref="T:System.Windows.Xps.Packaging.XpsDocument" /> 的路徑和檔案名稱。</param>
        <param name="packageAccess">開啟 <see cref="T:System.Windows.Xps.Packaging.XpsDocument" /> 的檔案 I/O 模式。</param>
        <param name="compressionOption">封裝壓縮選項。</param>
        <summary>使用預設交錯、資源和壓縮選項，初始化 <see cref="T:System.Windows.Xps.Packaging.XpsDocument" /> 類別的新執行個體，此類別包含於指定的 <see cref="T:System.IO.Packaging.Package" /> 檔案。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列範例示範如何建立和關閉<xref:System.Windows.Xps.Packaging.XpsDocument>。  
  
 [!code-cpp[XpsCreate#XpsCreatePackageOpen](~/samples/snippets/cpp/VS_Snippets_Wpf/XpsCreate/CPP/XpsCreate.cpp#xpscreatepackageopen)]
 [!code-csharp[XpsCreate#XpsCreatePackageOpen](~/samples/snippets/csharp/VS_Snippets_Wpf/XpsCreate/CSharp/XpsCreate.cs#xpscreatepackageopen)]
 [!code-vb[XpsCreate#XpsCreatePackageOpen](~/samples/snippets/visualbasic/VS_Snippets_Wpf/XpsCreate/visualbasic/xpscreate.vb#xpscreatepackageopen)]  
  
 下列範例也示範如何建立和關閉<xref:System.Windows.Xps.Packaging.XpsDocument>。  
  
 [!code-csharp[DocumentSerialize#DocSerializeLinked](~/samples/snippets/csharp/VS_Snippets_Wpf/DocumentSerialize/CSharp/ThumbViewer.cs#docserializelinked)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddFixedDocumentSequence">
      <MemberSignature Language="C#" Value="public System.Windows.Xps.Packaging.IXpsFixedDocumentSequenceWriter AddFixedDocumentSequence ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Xps.Packaging.IXpsFixedDocumentSequenceWriter AddFixedDocumentSequence() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Xps.Packaging.XpsDocument.AddFixedDocumentSequence" />
      <MemberSignature Language="VB.NET" Value="Public Function AddFixedDocumentSequence () As IXpsFixedDocumentSequenceWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Xps::Packaging::IXpsFixedDocumentSequenceWriter ^ AddFixedDocumentSequence();" />
      <MemberSignature Language="F#" Value="member this.AddFixedDocumentSequence : unit -&gt; System.Windows.Xps.Packaging.IXpsFixedDocumentSequenceWriter" Usage="xpsDocument.AddFixedDocumentSequence " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ReachFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Xps.Packaging.IXpsFixedDocumentSequenceWriter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>將根 <see cref="T:System.Windows.Documents.FixedDocumentSequence" /> 加入至封裝，並傳回寫入器。</summary>
        <returns>這個 <see cref="T:System.Windows.Xps.Packaging.XpsDocument" /> 的 [!INCLUDE[TLA#tla_xps](~/includes/tlasharptla-xps-md.md)] 固定格式文件序列寫入器。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個類別會使用單數名稱，雖然<xref:System.Windows.Xps.Packaging.XpsDocument>可以是其中一個的一組 （序列）<xref:System.Windows.Documents.FixedDocument>或多個文件。  
  
   
  
## Examples  
 下列範例示範如何使用<xref:System.Windows.Xps.Packaging.XpsDocument.AddFixedDocumentSequence%2A>方法來插入到內容<xref:System.Windows.Xps.Packaging.XpsDocument>。  
  
 [!code-cpp[XpsCreate#XpsCreateAddPkgContent](~/samples/snippets/cpp/VS_Snippets_Wpf/XpsCreate/CPP/XpsCreate.cpp#xpscreateaddpkgcontent)]
 [!code-csharp[XpsCreate#XpsCreateAddPkgContent](~/samples/snippets/csharp/VS_Snippets_Wpf/XpsCreate/CSharp/XpsCreate.cs#xpscreateaddpkgcontent)]
 [!code-vb[XpsCreate#XpsCreateAddPkgContent](~/samples/snippets/visualbasic/VS_Snippets_Wpf/XpsCreate/visualbasic/xpscreate.vb#xpscreateaddpkgcontent)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Xps.Packaging.XpsDocument.FixedDocumentSequenceReader" />
      </Docs>
    </Member>
    <Member MemberName="AddThumbnail">
      <MemberSignature Language="C#" Value="public System.Windows.Xps.Packaging.XpsThumbnail AddThumbnail (System.Windows.Xps.Packaging.XpsImageType imageType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Xps.Packaging.XpsThumbnail AddThumbnail(valuetype System.Windows.Xps.Packaging.XpsImageType imageType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Xps.Packaging.XpsDocument.AddThumbnail(System.Windows.Xps.Packaging.XpsImageType)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddThumbnail (imageType As XpsImageType) As XpsThumbnail" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Xps::Packaging::XpsThumbnail ^ AddThumbnail(System::Windows::Xps::Packaging::XpsImageType imageType);" />
      <MemberSignature Language="F#" Value="member this.AddThumbnail : System.Windows.Xps.Packaging.XpsImageType -&gt; System.Windows.Xps.Packaging.XpsThumbnail" Usage="xpsDocument.AddThumbnail imageType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ReachFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Xps.Packaging.XpsThumbnail</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="imageType" Type="System.Windows.Xps.Packaging.XpsImageType" />
      </Parameters>
      <Docs>
        <param name="imageType">影像的格式。</param>
        <summary>將縮圖影像加入至封裝。</summary>
        <returns>新加入的 <see cref="T:System.Windows.Xps.Packaging.XpsThumbnail" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Xps.Packaging.XpsDocument.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberSignature Language="F#" Value="member this.Close : unit -&gt; unit" Usage="xpsDocument.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ReachFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>關閉 XPS 文件 <see cref="T:System.IO.Packaging.Package" />。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果<xref:System.Windows.Xps.Packaging.XpsDocument>已針對寫入存取，資料緩衝區寫入存放區和實體的文件開啟<xref:System.IO.Packaging.Package>已關閉。  
  
 在後<xref:System.Windows.Xps.Packaging.XpsDocument.Close%2A>已被呼叫，文件的任何部分可以存取與這個<xref:System.Windows.Xps.Packaging.XpsDocument>執行個體。  
  
   
  
## Examples  
 下列範例示範如何開啟、 插入內容，並關閉<xref:System.Windows.Xps.Packaging.XpsDocument>。  
  
 [!code-cpp[XpsCreate#XpsCreatePackageOpen](~/samples/snippets/cpp/VS_Snippets_Wpf/XpsCreate/CPP/XpsCreate.cpp#xpscreatepackageopen)]
 [!code-csharp[XpsCreate#XpsCreatePackageOpen](~/samples/snippets/csharp/VS_Snippets_Wpf/XpsCreate/CSharp/XpsCreate.cs#xpscreatepackageopen)]
 [!code-vb[XpsCreate#XpsCreatePackageOpen](~/samples/snippets/visualbasic/VS_Snippets_Wpf/XpsCreate/visualbasic/xpscreate.vb#xpscreatepackageopen)]  
  
 下列範例也示範如何開啟、 寫入和關閉<xref:System.Windows.Xps.Packaging.XpsDocument>。  
  
 [!code-csharp[DocumentSerialize#DocSerializeLinked](~/samples/snippets/csharp/VS_Snippets_Wpf/DocumentSerialize/CSharp/ThumbViewer.cs#docserializelinked)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CoreDocumentProperties">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackageProperties CoreDocumentProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Packaging.PackageProperties CoreDocumentProperties" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Xps.Packaging.XpsDocument.CoreDocumentProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CoreDocumentProperties As PackageProperties" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Packaging::PackageProperties ^ CoreDocumentProperties { System::IO::Packaging::PackageProperties ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CoreDocumentProperties : System.IO.Packaging.PackageProperties" Usage="System.Windows.Xps.Packaging.XpsDocument.CoreDocumentProperties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>ReachFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackageProperties</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得 [!INCLUDE[TLA2#tla_xps](~/includes/tla2sharptla-xps-md.md)] 文件的核心 <see cref="T:System.IO.Packaging.PackageProperties" />。</summary>
        <value>核心屬性<see cref="T:System.Windows.Xps.Packaging.XpsDocument" /><see cref="T:System.IO.Packaging.Package" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateXpsDocumentWriter">
      <MemberSignature Language="C#" Value="public static System.Windows.Xps.XpsDocumentWriter CreateXpsDocumentWriter (System.Windows.Xps.Packaging.XpsDocument xpsDocument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Xps.XpsDocumentWriter CreateXpsDocumentWriter(class System.Windows.Xps.Packaging.XpsDocument xpsDocument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Xps.Packaging.XpsDocument.CreateXpsDocumentWriter(System.Windows.Xps.Packaging.XpsDocument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Xps::XpsDocumentWriter ^ CreateXpsDocumentWriter(System::Windows::Xps::Packaging::XpsDocument ^ xpsDocument);" />
      <MemberSignature Language="F#" Value="static member CreateXpsDocumentWriter : System.Windows.Xps.Packaging.XpsDocument -&gt; System.Windows.Xps.XpsDocumentWriter" Usage="System.Windows.Xps.Packaging.XpsDocument.CreateXpsDocumentWriter xpsDocument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ReachFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Xps.XpsDocumentWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xpsDocument" Type="System.Windows.Xps.Packaging.XpsDocument" />
      </Parameters>
      <Docs>
        <param name="xpsDocument">要寫入的 [!INCLUDE[TLA2#tla_xps](~/includes/tla2sharptla-xps-md.md)] 文件。</param>
        <summary>建立用於寫入 <see cref="T:System.Windows.Xps.XpsDocumentWriter" /> 的 <see cref="T:System.Windows.Xps.Packaging.XpsDocument" />。</summary>
        <returns>要用於寫入 [!INCLUDE[TLA#tla_xps](~/includes/tlasharptla-xps-md.md)] 文件的 <see cref="T:System.Windows.Xps.XpsDocumentWriter" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列範例示範如何使用<xref:System.Windows.Xps.Packaging.XpsDocument.CreateXpsDocumentWriter%2A>方法，以寫入<xref:System.Windows.Xps.Packaging.XpsDocument>。  
  
 [!code-csharp[DocumentSerialize#DocSerializeLinked](~/samples/snippets/csharp/VS_Snippets_Wpf/DocumentSerialize/CSharp/ThumbViewer.cs#docserializelinked)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Xps.Packaging.XpsDocument.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="xpsDocument.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ReachFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <see langword="true" /> 表示釋放 Managed 和 Unmanaged 資源，<see langword="false" /> 則表示只釋放 Unmanaged 資源。</param>
        <summary>釋放 <see cref="T:System.Windows.Xps.Packaging.XpsDocument" /> 所使用的 Unmanaged 資源，並選擇性地釋放 Managed 資源。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法會呼叫公用`Dispose()`方法和<xref:System.Object.Finalize%2A>方法。 `Dispose()` 叫用受保護`Dispose(Boolean)`方法`disposing`參數設為`true`。 <xref:System.Object.Finalize%2A> 叫用`Dispose`具有`disposing`設定為`false`。  
  
 當`disposing`參數為 true 時，這個方法的任何 managed 物件所持有的資源全部釋出這個<xref:System.Windows.Xps.Packaging.XpsDocument>參考。 這個方法會叫用每個參考物件的 `Dispose()` 方法。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>其他物件可以呼叫<see langword="Dispose" />多次。 當您覆寫<see langword="Dispose(Boolean)" />，請小心不要參考已在先前呼叫之前處置的物件<see langword="Dispose" />。 如需有關如何實作<see langword="Dispose(Boolean)" />，請參閱 &lt;&lt;c2&gt; [ 實作 Dispose 方法](~/docs/standard/garbage-collection/implementing-dispose.md)。  
  
如需詳細資訊<see langword="Dispose" />和<see cref="M:System.Object.Finalize" />，請參閱[清除 Unmanaged 資源總](~/docs/standard/garbage-collection/unmanaged.md)並[覆寫 Finalize 方法](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100))。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="FixedDocumentSequenceReader">
      <MemberSignature Language="C#" Value="public System.Windows.Xps.Packaging.IXpsFixedDocumentSequenceReader FixedDocumentSequenceReader { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Xps.Packaging.IXpsFixedDocumentSequenceReader FixedDocumentSequenceReader" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Xps.Packaging.XpsDocument.FixedDocumentSequenceReader" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FixedDocumentSequenceReader As IXpsFixedDocumentSequenceReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Xps::Packaging::IXpsFixedDocumentSequenceReader ^ FixedDocumentSequenceReader { System::Windows::Xps::Packaging::IXpsFixedDocumentSequenceReader ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FixedDocumentSequenceReader : System.Windows.Xps.Packaging.IXpsFixedDocumentSequenceReader" Usage="System.Windows.Xps.Packaging.XpsDocument.FixedDocumentSequenceReader" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>ReachFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Xps.Packaging.IXpsFixedDocumentSequenceReader</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得用於讀取文件的 <see cref="T:System.Windows.Xps.Packaging.IXpsFixedDocumentSequenceReader" />。</summary>
        <value>用於讀取文件的 <see cref="T:System.Windows.Xps.Packaging.IXpsFixedDocumentSequenceReader" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個類別會使用單數名稱，雖然<xref:System.Windows.Xps.Packaging.XpsDocument>可以是其中一個的一組 （序列）<xref:System.Windows.Documents.FixedDocument>或多個文件。  
  
   
  
## Examples  
 下列範例示範如何取得<xref:System.Windows.Xps.Packaging.XpsDocument.FixedDocumentSequenceReader%2A>才能存取<xref:System.Windows.Documents.FixedDocument>組件中<xref:System.Windows.Xps.Packaging.XpsDocument>。  
  
 [!code-csharp[DocumentStructure#DocStrucFixedDoc](~/samples/snippets/csharp/VS_Snippets_Wpf/DocumentStructure/CSharp/Window1.xaml.cs#docstrucfixeddoc)]
 [!code-vb[DocumentStructure#DocStrucFixedDoc](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DocumentStructure/visualbasic/window1.xaml.vb#docstrucfixeddoc)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Xps.Packaging.XpsDocument.GetFixedDocumentSequence" />
        <altmember cref="M:System.Windows.Xps.Packaging.XpsDocument.AddFixedDocumentSequence" />
      </Docs>
    </Member>
    <Member MemberName="GetFixedDocumentSequence">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.FixedDocumentSequence GetFixedDocumentSequence ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Documents.FixedDocumentSequence GetFixedDocumentSequence() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Xps.Packaging.XpsDocument.GetFixedDocumentSequence" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFixedDocumentSequence () As FixedDocumentSequence" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Documents::FixedDocumentSequence ^ GetFixedDocumentSequence();" />
      <MemberSignature Language="F#" Value="member this.GetFixedDocumentSequence : unit -&gt; System.Windows.Documents.FixedDocumentSequence" Usage="xpsDocument.GetFixedDocumentSequence " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ReachFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.FixedDocumentSequence</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>在封裝的根傳回固定格式文件序列。</summary>
        <returns>封裝的 <see cref="T:System.Windows.Documents.FixedDocumentSequence" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個類別會使用單數名稱，雖然<xref:System.Windows.Xps.Packaging.XpsDocument>可以是其中一個的一組 （序列）<xref:System.Windows.Documents.FixedDocument>或多個文件。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReader">
      <MemberSignature Language="C#" Value="public bool IsReader { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReader" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Xps.Packaging.XpsDocument.IsReader" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReader As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReader { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReader : bool" Usage="System.Windows.Xps.Packaging.XpsDocument.IsReader" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>ReachFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得值，指出封裝是否為可讀取。</summary>
        <value>如果封裝是可讀取的則為 <see langword="true" />，否則為 <see langword="false" />。</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Xps.Packaging.XpsDocument.IsWriter" />
      </Docs>
    </Member>
    <Member MemberName="IsSignable">
      <MemberSignature Language="C#" Value="public bool IsSignable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSignable" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Xps.Packaging.XpsDocument.IsSignable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSignable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSignable { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSignable : bool" Usage="System.Windows.Xps.Packaging.XpsDocument.IsSignable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>ReachFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得值，指示封裝是否可以數位方式簽署。</summary>
        <value>如果封裝可以被簽署，則為 <see langword="true" />，否則為 <see langword="false" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsWriter">
      <MemberSignature Language="C#" Value="public bool IsWriter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsWriter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Xps.Packaging.XpsDocument.IsWriter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsWriter As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsWriter { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsWriter : bool" Usage="System.Windows.Xps.Packaging.XpsDocument.IsWriter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>ReachFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得值，指出封裝是否為可寫入。</summary>
        <value>如果封裝是可寫入的則為 <see langword="true" />，否則為 <see langword="false" />。</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Xps.Packaging.XpsDocument.IsReader" />
      </Docs>
    </Member>
    <Member MemberName="RemoveSignature">
      <MemberSignature Language="C#" Value="public void RemoveSignature (System.Windows.Xps.Packaging.XpsDigitalSignature signature);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveSignature(class System.Windows.Xps.Packaging.XpsDigitalSignature signature) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Xps.Packaging.XpsDocument.RemoveSignature(System.Windows.Xps.Packaging.XpsDigitalSignature)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveSignature (signature As XpsDigitalSignature)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveSignature(System::Windows::Xps::Packaging::XpsDigitalSignature ^ signature);" />
      <MemberSignature Language="F#" Value="member this.RemoveSignature : System.Windows.Xps.Packaging.XpsDigitalSignature -&gt; unit" Usage="xpsDocument.RemoveSignature signature" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ReachFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="signature" Type="System.Windows.Xps.Packaging.XpsDigitalSignature" />
      </Parameters>
      <Docs>
        <param name="signature">已刪除的簽章。</param>
        <summary>刪除封裝中的簽章。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Signatures">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.Xps.Packaging.XpsDigitalSignature&gt; Signatures { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Windows.Xps.Packaging.XpsDigitalSignature&gt; Signatures" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Xps.Packaging.XpsDocument.Signatures" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Signatures As ReadOnlyCollection(Of XpsDigitalSignature)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Windows::Xps::Packaging::XpsDigitalSignature ^&gt; ^ Signatures { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Windows::Xps::Packaging::XpsDigitalSignature ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Signatures : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.Xps.Packaging.XpsDigitalSignature&gt;" Usage="System.Windows.Xps.Packaging.XpsDocument.Signatures" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>ReachFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.Xps.Packaging.XpsDigitalSignature&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得 [!INCLUDE[TLA#tla_metro](~/includes/tlasharptla-metro-md.md)] 簽章的集合，這些簽章與封裝相關聯。</summary>
        <value>
          <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> 物件的 <see cref="T:System.Windows.Xps.Packaging.XpsDigitalSignature" />，表示與封裝相關聯的簽章。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Xps.Packaging.XpsDocument.Signatures%2A>清單識別哪些部分會簽署和簽章是否有效。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SignDigitally">
      <AssemblyInfo>
        <AssemblyName>ReachFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>使用指定的 X.509 憑證，簽署封裝組件的集合。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列範例會示範如何使用 <xref:System.Windows.Xps.Packaging.XpsDocument.SignDigitally%2A> 方法。  
  
 [!code-csharp[XpsReadWriteSign#SignXpsDocument](~/samples/snippets/csharp/VS_Snippets_Wpf/XpsReadWriteSign/CSharp/SignatureDefinitionsAndSigning.cs#signxpsdocument)]
 [!code-vb[XpsReadWriteSign#SignXpsDocument](~/samples/snippets/visualbasic/VS_Snippets_Wpf/XpsReadWriteSign/visualbasic/signaturedefinitionsandsigning.vb#signxpsdocument)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="SignDigitally">
      <MemberSignature Language="C#" Value="public System.Windows.Xps.Packaging.XpsDigitalSignature SignDigitally (System.Security.Cryptography.X509Certificates.X509Certificate certificate, bool embedCertificate, System.Windows.Xps.Packaging.XpsDigSigPartAlteringRestrictions restrictions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Xps.Packaging.XpsDigitalSignature SignDigitally(class System.Security.Cryptography.X509Certificates.X509Certificate certificate, bool embedCertificate, valuetype System.Windows.Xps.Packaging.XpsDigSigPartAlteringRestrictions restrictions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Xps.Packaging.XpsDocument.SignDigitally(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Windows.Xps.Packaging.XpsDigSigPartAlteringRestrictions)" />
      <MemberSignature Language="VB.NET" Value="Public Function SignDigitally (certificate As X509Certificate, embedCertificate As Boolean, restrictions As XpsDigSigPartAlteringRestrictions) As XpsDigitalSignature" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Xps::Packaging::XpsDigitalSignature ^ SignDigitally(System::Security::Cryptography::X509Certificates::X509Certificate ^ certificate, bool embedCertificate, System::Windows::Xps::Packaging::XpsDigSigPartAlteringRestrictions restrictions);" />
      <MemberSignature Language="F#" Value="member this.SignDigitally : System.Security.Cryptography.X509Certificates.X509Certificate * bool * System.Windows.Xps.Packaging.XpsDigSigPartAlteringRestrictions -&gt; System.Windows.Xps.Packaging.XpsDigitalSignature" Usage="xpsDocument.SignDigitally (certificate, embedCertificate, restrictions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ReachFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Xps.Packaging.XpsDigitalSignature</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" />
        <Parameter Name="embedCertificate" Type="System.Boolean" />
        <Parameter Name="restrictions" Type="System.Windows.Xps.Packaging.XpsDigSigPartAlteringRestrictions" />
      </Parameters>
      <Docs>
        <param name="certificate">要用於簽署每個組件的 X.509 憑證；若要提示使用者選取已安裝的憑證，則為 <see langword="null" />。</param>
        <param name="embedCertificate">
          <see langword="true" /> 表示要將憑證儲存在封裝中；否則為 <see langword="false" />。</param>
        <param name="restrictions">旗標，表示哪些相依組件必須排除在簽署之外。</param>
        <summary>以指定的 X.509 憑證簽署封裝組件的集合。</summary>
        <returns>
          <see cref="T:System.Windows.Xps.Packaging.XpsDigitalSignature" />，包含簽章的相關資訊。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果`certificate`是`null`，會出現一個對話方塊，可讓使用者選取已安裝的 X.509 憑證，例如，從智慧卡讀取裝置。  
  
   
  
## Examples  
 下列範例會示範如何使用 <xref:System.Windows.Xps.Packaging.XpsDocument.SignDigitally%2A> 方法。  
  
 [!code-csharp[XpsReadWriteSign#SignXpsDocument](~/samples/snippets/csharp/VS_Snippets_Wpf/XpsReadWriteSign/CSharp/SignatureDefinitionsAndSigning.cs#signxpsdocument)]
 [!code-vb[XpsReadWriteSign#SignXpsDocument](~/samples/snippets/visualbasic/VS_Snippets_Wpf/XpsReadWriteSign/visualbasic/signaturedefinitionsandsigning.vb#signxpsdocument)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignDigitally">
      <MemberSignature Language="C#" Value="public System.Windows.Xps.Packaging.XpsDigitalSignature SignDigitally (System.Security.Cryptography.X509Certificates.X509Certificate certificate, bool embedCertificate, System.Windows.Xps.Packaging.XpsDigSigPartAlteringRestrictions restrictions, Guid id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Xps.Packaging.XpsDigitalSignature SignDigitally(class System.Security.Cryptography.X509Certificates.X509Certificate certificate, bool embedCertificate, valuetype System.Windows.Xps.Packaging.XpsDigSigPartAlteringRestrictions restrictions, valuetype System.Guid id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Xps.Packaging.XpsDocument.SignDigitally(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Windows.Xps.Packaging.XpsDigSigPartAlteringRestrictions,System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Function SignDigitally (certificate As X509Certificate, embedCertificate As Boolean, restrictions As XpsDigSigPartAlteringRestrictions, id As Guid) As XpsDigitalSignature" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Xps::Packaging::XpsDigitalSignature ^ SignDigitally(System::Security::Cryptography::X509Certificates::X509Certificate ^ certificate, bool embedCertificate, System::Windows::Xps::Packaging::XpsDigSigPartAlteringRestrictions restrictions, Guid id);" />
      <MemberSignature Language="F#" Value="member this.SignDigitally : System.Security.Cryptography.X509Certificates.X509Certificate * bool * System.Windows.Xps.Packaging.XpsDigSigPartAlteringRestrictions * Guid -&gt; System.Windows.Xps.Packaging.XpsDigitalSignature" Usage="xpsDocument.SignDigitally (certificate, embedCertificate, restrictions, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ReachFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Xps.Packaging.XpsDigitalSignature</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" />
        <Parameter Name="embedCertificate" Type="System.Boolean" />
        <Parameter Name="restrictions" Type="System.Windows.Xps.Packaging.XpsDigSigPartAlteringRestrictions" />
        <Parameter Name="id" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="certificate">要用於簽署每個組件的 X.509 憑證；若要提示使用者選取已安裝的憑證，則為 <see langword="null" />。</param>
        <param name="embedCertificate">
          <see langword="true" /> 表示要將憑證儲存在封裝中；否則為 <see langword="false" />。</param>
        <param name="restrictions">旗標，表示哪些相依組件要排除在簽署之外。</param>
        <param name="id">指派給簽章的識別碼。</param>
        <summary>使用指定的 X.509 憑證，簽署封裝組件的集合。</summary>
        <returns>
          <see cref="T:System.Windows.Xps.Packaging.XpsDigitalSignature" />，包含簽章的相關資訊。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果`certificate`是`null`，會出現一個對話方塊，可讓使用者選取已安裝的 X.509 憑證，例如，從智慧卡讀取裝置。  
  
   
  
## Examples  
 下列範例會示範如何使用 <xref:System.Windows.Xps.Packaging.XpsDocument.SignDigitally%2A> 方法。  
  
 [!code-csharp[XpsReadWriteSign#SignXpsDocument](~/samples/snippets/csharp/VS_Snippets_Wpf/XpsReadWriteSign/CSharp/SignatureDefinitionsAndSigning.cs#signxpsdocument)]
 [!code-vb[XpsReadWriteSign#SignXpsDocument](~/samples/snippets/visualbasic/VS_Snippets_Wpf/XpsReadWriteSign/visualbasic/signaturedefinitionsandsigning.vb#signxpsdocument)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignDigitally">
      <MemberSignature Language="C#" Value="public System.Windows.Xps.Packaging.XpsDigitalSignature SignDigitally (System.Security.Cryptography.X509Certificates.X509Certificate certificate, bool embedCertificate, System.Windows.Xps.Packaging.XpsDigSigPartAlteringRestrictions restrictions, Guid id, bool testIsSignable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Xps.Packaging.XpsDigitalSignature SignDigitally(class System.Security.Cryptography.X509Certificates.X509Certificate certificate, bool embedCertificate, valuetype System.Windows.Xps.Packaging.XpsDigSigPartAlteringRestrictions restrictions, valuetype System.Guid id, bool testIsSignable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Xps.Packaging.XpsDocument.SignDigitally(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Windows.Xps.Packaging.XpsDigSigPartAlteringRestrictions,System.Guid,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function SignDigitally (certificate As X509Certificate, embedCertificate As Boolean, restrictions As XpsDigSigPartAlteringRestrictions, id As Guid, testIsSignable As Boolean) As XpsDigitalSignature" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Xps::Packaging::XpsDigitalSignature ^ SignDigitally(System::Security::Cryptography::X509Certificates::X509Certificate ^ certificate, bool embedCertificate, System::Windows::Xps::Packaging::XpsDigSigPartAlteringRestrictions restrictions, Guid id, bool testIsSignable);" />
      <MemberSignature Language="F#" Value="member this.SignDigitally : System.Security.Cryptography.X509Certificates.X509Certificate * bool * System.Windows.Xps.Packaging.XpsDigSigPartAlteringRestrictions * Guid * bool -&gt; System.Windows.Xps.Packaging.XpsDigitalSignature" Usage="xpsDocument.SignDigitally (certificate, embedCertificate, restrictions, id, testIsSignable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ReachFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Xps.Packaging.XpsDigitalSignature</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" />
        <Parameter Name="embedCertificate" Type="System.Boolean" />
        <Parameter Name="restrictions" Type="System.Windows.Xps.Packaging.XpsDigSigPartAlteringRestrictions" />
        <Parameter Name="id" Type="System.Guid" />
        <Parameter Name="testIsSignable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="certificate">要用於簽署每個組件的 X.509 憑證；若要提示使用者選取已安裝的憑證，則為 <see langword="null" />。</param>
        <param name="embedCertificate">
          <see langword="true" /> 表示要將憑證儲存在封裝中；否則為 <see langword="false" />。</param>
        <param name="restrictions">旗標，表示哪些相依組件要排除在簽署之外。</param>
        <param name="id">指派給簽章的識別碼。</param>
        <param name="testIsSignable">
          <see langword="true" /> 表示要在簽署前確認 <see cref="P:System.Windows.Xps.Packaging.XpsDocument.IsSignable" /> 為 <see langword="true" />；否則為 <see langword="false" />。</param>
        <summary>以指定的 X.509 憑證簽署封裝組件的集合。</summary>
        <returns>
          <see cref="T:System.Windows.Xps.Packaging.XpsDigitalSignature" />，包含簽章的相關資訊。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果`certificate`是`null`，對話方塊會顯示，可讓使用者選取已安裝的 X.509 憑證，例如，從智慧卡讀取裝置。  
  
 <xref:System.Security.Cryptography.CryptographicException> 如果擲回`certificate`是`null`和未安裝任何憑證。  
  
   
  
## Examples  
 下列範例會示範如何使用 <xref:System.Windows.Xps.Packaging.XpsDocument.SignDigitally%2A> 方法。  
  
 [!code-csharp[XpsReadWriteSign#SignXpsDocument](~/samples/snippets/csharp/VS_Snippets_Wpf/XpsReadWriteSign/CSharp/SignatureDefinitionsAndSigning.cs#signxpsdocument)]
 [!code-vb[XpsReadWriteSign#SignXpsDocument](~/samples/snippets/visualbasic/VS_Snippets_Wpf/XpsReadWriteSign/visualbasic/signaturedefinitionsandsigning.vb#signxpsdocument)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Xps.Packaging.XpsDocument.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>ReachFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>這個成員支援 [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] 基礎結構，但是您不可以從程式碼直接使用它。 請改用類型安全的 <see cref="M:System.Windows.Xps.Packaging.XpsDocument.Dispose(System.Boolean)" /> 方法。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Thumbnail">
      <MemberSignature Language="C#" Value="public System.Windows.Xps.Packaging.XpsThumbnail Thumbnail { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Xps.Packaging.XpsThumbnail Thumbnail" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Xps.Packaging.XpsDocument.Thumbnail" />
      <MemberSignature Language="VB.NET" Value="Public Property Thumbnail As XpsThumbnail" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Xps::Packaging::XpsThumbnail ^ Thumbnail { System::Windows::Xps::Packaging::XpsThumbnail ^ get(); void set(System::Windows::Xps::Packaging::XpsThumbnail ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Thumbnail : System.Windows.Xps.Packaging.XpsThumbnail with get, set" Usage="System.Windows.Xps.Packaging.XpsDocument.Thumbnail" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>ReachFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Xps.Packaging.XpsThumbnail</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定 [!INCLUDE[TLA#tla_xps](~/includes/tlasharptla-xps-md.md)] 縮圖影像，此影像與文件相關聯。</summary>
        <value>
          <see cref="T:System.Windows.Xps.Packaging.XpsThumbnail" />，表示與文件相關聯的縮圖影像。</value>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Xps.Packaging.XpsDocument.AddThumbnail(System.Windows.Xps.Packaging.XpsImageType)" />
      </Docs>
    </Member>
  </Members>
</Type>