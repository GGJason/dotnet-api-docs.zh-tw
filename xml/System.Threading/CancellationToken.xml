<Type Name="CancellationToken" FullName="System.Threading.CancellationToken">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="de6f75d4506356775c02922ff31f88f46d43b9c8" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36606416" />
  </Metadata>
  <TypeSignature Language="C#" Value="public struct CancellationToken" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit CancellationToken extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.Threading.CancellationToken" />
  <TypeSignature Language="VB.NET" Value="Public Structure CancellationToken" />
  <TypeSignature Language="C++ CLI" Value="public value class CancellationToken" />
  <TypeSignature Language="F#" Value="type CancellationToken = struct" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.Tasks</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("IsCancellationRequested = {IsCancellationRequested}")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="386b7-101">散佈通知，表示不應取消作業。</span>
      <span class="sxs-lookup">
        <span data-stu-id="386b7-101">Propagates notification that operations should be canceled.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="386b7-102">A<xref:System.Threading.CancellationToken>可讓執行緒，執行緒集區工作項目之間的合作式取消或<xref:System.Threading.Tasks.Task>物件。</span><span class="sxs-lookup"><span data-stu-id="386b7-102">A <xref:System.Threading.CancellationToken> enables cooperative cancellation between threads, thread pool work items, or <xref:System.Threading.Tasks.Task> objects.</span></span> <span data-ttu-id="386b7-103">您建立的取消語彙基元，藉由執行個體化<xref:System.Threading.CancellationTokenSource>從擷取物件，取消語彙基元會管理其<xref:System.Threading.CancellationTokenSource.Token%2A?displayProperty=nameWithType>屬性。</span><span class="sxs-lookup"><span data-stu-id="386b7-103">You create a cancellation token by instantiating a <xref:System.Threading.CancellationTokenSource> object, which manages cancellation tokens retrieved from its <xref:System.Threading.CancellationTokenSource.Token%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="386b7-104">然後，您會傳遞取消語彙基元給任何數目的執行緒、 工作或應該接收取消通知的作業。</span><span class="sxs-lookup"><span data-stu-id="386b7-104">You then  pass the cancellation token to any number of threads, tasks, or operations that should receive notice of cancellation.</span></span> <span data-ttu-id="386b7-105">語彙基元無法用來初始化取消。</span><span class="sxs-lookup"><span data-stu-id="386b7-105">The token cannot be used to initiate cancellation.</span></span> <span data-ttu-id="386b7-106">當主控的物件呼叫<xref:System.Threading.CancellationTokenSource.Cancel%2A?displayProperty=nameWithType>、<xref:System.Threading.CancellationToken.IsCancellationRequested%2A>取消語彙基元的每個複本上的屬性設定為`true`。</span><span class="sxs-lookup"><span data-stu-id="386b7-106">When the owning object calls <xref:System.Threading.CancellationTokenSource.Cancel%2A?displayProperty=nameWithType>, the <xref:System.Threading.CancellationToken.IsCancellationRequested%2A> property on every copy of the cancellation token is set to `true`.</span></span> <span data-ttu-id="386b7-107">接收通知的物件可以在適合的任何方式回覆。</span><span class="sxs-lookup"><span data-stu-id="386b7-107">The objects that receive the notification can respond in whatever manner is appropriate.</span></span>  
  
 <span data-ttu-id="386b7-108">如需詳細資訊和程式碼範例，請參閱[Managed 執行緒中的取消](~/docs/standard/threading/cancellation-in-managed-threads.md)。</span><span class="sxs-lookup"><span data-stu-id="386b7-108">For more information and code examples see [Cancellation in Managed Threads](~/docs/standard/threading/cancellation-in-managed-threads.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="386b7-109">下列範例會使用隨機號碼產生器，來模擬從 11 個不同的工具讀取 10 的整數值的資料集合應用程式。</span><span class="sxs-lookup"><span data-stu-id="386b7-109">The following example uses a random number generator to emulate a data collection application that reads 10 integral values from eleven different instruments.</span></span> <span data-ttu-id="386b7-110">值為零表示度量已針對一個檢測，在此情況下應該取消作業和任何整體平均應該計算失敗。</span><span class="sxs-lookup"><span data-stu-id="386b7-110">A value of zero indicates that the measurement has failed for one instrument, in which case the operation should be cancelled and no overall mean should be computed.</span></span>  
  
 <span data-ttu-id="386b7-111">若要處理可能取消作業，此範例會具現化<xref:System.Threading.CancellationTokenSource>物件，會產生傳遞給的取消語彙基元<xref:System.Threading.Tasks.TaskFactory>物件。</span><span class="sxs-lookup"><span data-stu-id="386b7-111">To handle the possible cancellation of the operation, the example instantiates a <xref:System.Threading.CancellationTokenSource> object that generates a cancellation token which is passed to a <xref:System.Threading.Tasks.TaskFactory> object.</span></span> <span data-ttu-id="386b7-112"><xref:System.Threading.Tasks.TaskFactory>物件接著會傳遞取消語彙基元至每項工作負責收集特定的檢測的讀數。</span><span class="sxs-lookup"><span data-stu-id="386b7-112">The <xref:System.Threading.Tasks.TaskFactory> object in turn passes the cancellation token to each of the tasks responsible for collecting readings for a particular instrument.</span></span> <span data-ttu-id="386b7-113"><xref:System.Threading.Tasks.TaskFactory.ContinueWhenAll%60%602%28System.Threading.Tasks.Task%7B%60%600%7D%5B%5D%2CSystem.Func%7BSystem.Threading.Tasks.Task%7B%60%600%7D%5B%5D%2C%60%601%7D%2CSystem.Threading.CancellationToken%29?displayProperty=nameWithType>以確保平均值會計算所有讀數都已經成功之後，才會呼叫方法。</span><span class="sxs-lookup"><span data-stu-id="386b7-113">The <xref:System.Threading.Tasks.TaskFactory.ContinueWhenAll%60%602%28System.Threading.Tasks.Task%7B%60%600%7D%5B%5D%2CSystem.Func%7BSystem.Threading.Tasks.Task%7B%60%600%7D%5B%5D%2C%60%601%7D%2CSystem.Threading.CancellationToken%29?displayProperty=nameWithType> method is called to ensure that the mean is computed only after all readings have been gathered successfully.</span></span> <span data-ttu-id="386b7-114">如果工作已不是已取消，因為呼叫<xref:System.Threading.Tasks.TaskFactory.ContinueWhenAll%2A?displayProperty=nameWithType>方法會擲回的例外狀況。</span><span class="sxs-lookup"><span data-stu-id="386b7-114">If a task has not because it has been cancelled, the call to the <xref:System.Threading.Tasks.TaskFactory.ContinueWhenAll%2A?displayProperty=nameWithType> method throws an exception.</span></span>  
  
 [!code-csharp[System.Threading.CancellationTokenSource.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.threading.cancellationtokensource.class/cs/cancel1.cs#1)]
 [!code-vb[System.Threading.CancellationTokenSource.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.threading.cancellationtokensource.class/vb/cancel1.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="386b7-115">所有的 public 和 protected 成員的<see cref="T:System.Threading.CancellationToken" />是安全執行緒，且可能會從多個執行緒同時使用。</span>
      <span class="sxs-lookup">
        <span data-stu-id="386b7-115">All public and protected members of <see cref="T:System.Threading.CancellationToken" /> are thread-safe and may be used concurrently from multiple threads.</span>
      </span>
    </threadsafe>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CancellationToken (bool canceled);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool canceled) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.CancellationToken.#ctor(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (canceled As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CancellationToken(bool canceled);" />
      <MemberSignature Language="F#" Value="new System.Threading.CancellationToken : bool -&gt; System.Threading.CancellationToken" Usage="new System.Threading.CancellationToken canceled" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="canceled" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="canceled">
          <span data-ttu-id="386b7-116">語彙基元的已取消狀態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="386b7-116">The canceled state for the token.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="386b7-117">初始化 <see cref="T:System.Threading.CancellationToken" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="386b7-117">Initializes the <see cref="T:System.Threading.CancellationToken" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="386b7-118">使用這個建構函式建立的語彙基元依然會在所指定的已取消狀態`canceled`參數。</span><span class="sxs-lookup"><span data-stu-id="386b7-118">Tokens created with this constructor will remain in the canceled state specified by the `canceled` parameter.</span></span> <span data-ttu-id="386b7-119">如果`canceled`是`false`，這兩個<xref:System.Threading.CancellationToken.CanBeCanceled%2A>和<xref:System.Threading.CancellationToken.IsCancellationRequested%2A>將`false`。</span><span class="sxs-lookup"><span data-stu-id="386b7-119">If `canceled` is `false`, both <xref:System.Threading.CancellationToken.CanBeCanceled%2A> and <xref:System.Threading.CancellationToken.IsCancellationRequested%2A> will be `false`.</span></span>  
  
 <span data-ttu-id="386b7-120">如果`canceled`是`true`，這兩個<xref:System.Threading.CancellationToken.CanBeCanceled%2A>和<xref:System.Threading.CancellationToken.IsCancellationRequested%2A>將`true`。</span><span class="sxs-lookup"><span data-stu-id="386b7-120">If `canceled` is `true`, both <xref:System.Threading.CancellationToken.CanBeCanceled%2A> and <xref:System.Threading.CancellationToken.IsCancellationRequested%2A> will be `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanBeCanceled">
      <MemberSignature Language="C#" Value="public bool CanBeCanceled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanBeCanceled" />
      <MemberSignature Language="DocId" Value="P:System.Threading.CancellationToken.CanBeCanceled" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanBeCanceled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanBeCanceled { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanBeCanceled : bool" Usage="System.Threading.CancellationToken.CanBeCanceled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="386b7-121">取得這個語彙基元是否能夠處於已取消狀態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="386b7-121">Gets whether this token is capable of being in the canceled state.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="386b7-122">如果這個語彙基元能夠處於已取消狀態，則為 <see langword="true" />；否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="386b7-122">
              <see langword="true" /> if this token is capable of being in the canceled state; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="386b7-123">如果<xref:System.Threading.CancellationToken.CanBeCanceled%2A>傳回`false`，這樣會保證，語彙基元將永遠不會轉換為已取消的狀態，表示<xref:System.Threading.CancellationToken.IsCancellationRequested%2A>永遠不會傳回`true`。</span><span class="sxs-lookup"><span data-stu-id="386b7-123">If <xref:System.Threading.CancellationToken.CanBeCanceled%2A> returns `false`, it is guaranteed that the token will never transition into a canceled state, meaning that <xref:System.Threading.CancellationToken.IsCancellationRequested%2A> will never return `true`.</span></span> <span data-ttu-id="386b7-124">無法取消的取消語彙基元所傳回的靜態<xref:System.Threading.CancellationToken.None%2A?displayProperty=nameWithType>屬性。</span><span class="sxs-lookup"><span data-stu-id="386b7-124">A cancellation token that cannot be canceled is returned by the static <xref:System.Threading.CancellationToken.None%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="386b7-125">您選擇可以使用這個屬性來判斷是否可以進行的取消語彙基元取消 examing 之前的值<xref:System.Threading.CancellationToken.IsCancellationRequested%2A>屬性來判斷是否已取消。</span><span class="sxs-lookup"><span data-stu-id="386b7-125">You can optionally use this property to determine whether a cancellation token can be canceled before examing the value of the <xref:System.Threading.CancellationToken.IsCancellationRequested%2A> property to determine whether it has been canceled.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="386b7-126">判斷目前的 <see cref="T:System.Threading.CancellationToken" /> 執行個體與指定的語彙基元是否相等。</span>
          <span class="sxs-lookup">
            <span data-stu-id="386b7-126">Determines whether the current <see cref="T:System.Threading.CancellationToken" /> instance is equal to the specified token.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.CancellationToken.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (other As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ other);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="cancellationToken.Equals other" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="other">
          <span data-ttu-id="386b7-127">與這個執行個體相互比較的其他物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="386b7-127">The other object to compare with this instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="386b7-128">判斷目前的 <see cref="T:System.Threading.CancellationToken" /> 執行個體與指定的 <see cref="T:System.Object" /> 是否相等。</span>
          <span class="sxs-lookup">
            <span data-stu-id="386b7-128">Determines whether the current <see cref="T:System.Threading.CancellationToken" /> instance is equal to the specified <see cref="T:System.Object" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="386b7-129">如果 <paramref name="other" /> 是 <see cref="T:System.Threading.CancellationToken" />，且兩個執行個體相等，則為 <see langword="true" />；否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="386b7-129">
              <see langword="true" /> if <paramref name="other" /> is a <see cref="T:System.Threading.CancellationToken" /> and if the two instances are equal; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="386b7-130">如需詳細資訊，請參閱＜備註＞一節。</span>
          <span class="sxs-lookup">
            <span data-stu-id="386b7-130">See the Remarks section for more information.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
## Remarks  

<span data-ttu-id="386b7-131">兩個取消語彙基元是相等，如果任何一個下列條件成立：</span><span class="sxs-lookup"><span data-stu-id="386b7-131">Two cancellation tokens are equal if any one of the following conditions is true:</span></span> 

- <span data-ttu-id="386b7-132">它們與相同相關聯<xref:System.Threading.CancellationTokenSource>。</span><span class="sxs-lookup"><span data-stu-id="386b7-132">They are associated with the same <xref:System.Threading.CancellationTokenSource>.</span></span>

- <span data-ttu-id="386b7-133">兩者都從公用來建構他們<xref:System.Threading.CancellationToken>建構函式，且其<xref:System.Threading.CancellationToken.IsCancellationRequested?displayProperty=nameWithType>值是否相等。</span><span class="sxs-lookup"><span data-stu-id="386b7-133">They were both constructed from public <xref:System.Threading.CancellationToken> constructors, and their <xref:System.Threading.CancellationToken.IsCancellationRequested?displayProperty=nameWithType> values are equal.</span></span>

- <span data-ttu-id="386b7-134">這兩個取消語彙基元的值是<xref:System.Threading.CancellationToken.None?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="386b7-134">The value of both cancellation tokens is <xref:System.Threading.CancellationToken.None?displayProperty=nameWithType>.</span></span>

       ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="386b7-135">相關聯的 <see cref="T:System.Threading.CancellationTokenSource" /> 已經過處置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="386b7-135">An associated <see cref="T:System.Threading.CancellationTokenSource" /> has been disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Threading.CancellationToken other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Equals(valuetype System.Threading.CancellationToken other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.CancellationToken.Equals(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As CancellationToken) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equals(System::Threading::CancellationToken other);" />
      <MemberSignature Language="F#" Value="override this.Equals : System.Threading.CancellationToken -&gt; bool" Usage="cancellationToken.Equals other" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="other">
          <span data-ttu-id="386b7-136">與這個執行個體比較的其他 <see cref="T:System.Threading.CancellationToken" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="386b7-136">The other <see cref="T:System.Threading.CancellationToken" /> to compare with this instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="386b7-137">判斷目前的 <see cref="T:System.Threading.CancellationToken" /> 執行個體與指定的語彙基元是否相等。</span>
          <span class="sxs-lookup">
            <span data-stu-id="386b7-137">Determines whether the current <see cref="T:System.Threading.CancellationToken" /> instance is equal to the specified token.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="386b7-138">如果執行個體相等，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="386b7-138">
              <see langword="true" /> if the instances are equal; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="386b7-139">如需詳細資訊，請參閱＜備註＞一節。</span>
          <span class="sxs-lookup">
            <span data-stu-id="386b7-139">See the Remarks section for more information.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
## Remarks  

<span data-ttu-id="386b7-140">兩個取消語彙基元是相等，如果任何一個下列條件成立：</span><span class="sxs-lookup"><span data-stu-id="386b7-140">Two cancellation tokens are equal if any one of the following conditions is true:</span></span> 

- <span data-ttu-id="386b7-141">它們與相同相關聯<xref:System.Threading.CancellationTokenSource>。</span><span class="sxs-lookup"><span data-stu-id="386b7-141">They are associated with the same <xref:System.Threading.CancellationTokenSource>.</span></span>

- <span data-ttu-id="386b7-142">兩者都從公用來建構他們<xref:System.Threading.CancellationToken>建構函式，且其<xref:System.Threading.CancellationToken.IsCancellationRequested?displayProperty=nameWithType>值是否相等。</span><span class="sxs-lookup"><span data-stu-id="386b7-142">They were both constructed from public <xref:System.Threading.CancellationToken> constructors, and their <xref:System.Threading.CancellationToken.IsCancellationRequested?displayProperty=nameWithType> values are equal.</span></span>

- <span data-ttu-id="386b7-143">這兩個取消語彙基元的值是<xref:System.Threading.CancellationToken.None?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="386b7-143">The value of both cancellation tokens is <xref:System.Threading.CancellationToken.None?displayProperty=nameWithType>.</span></span>

       ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.CancellationToken.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="cancellationToken.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="386b7-144">做為 <see cref="T:System.Threading.CancellationToken" /> 的雜湊函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="386b7-144">Serves as a hash function for a <see cref="T:System.Threading.CancellationToken" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="386b7-145">目前 <see cref="T:System.Threading.CancellationToken" /> 執行個體的雜湊碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="386b7-145">A hash code for the current <see cref="T:System.Threading.CancellationToken" /> instance.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCancellationRequested">
      <MemberSignature Language="C#" Value="public bool IsCancellationRequested { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCancellationRequested" />
      <MemberSignature Language="DocId" Value="P:System.Threading.CancellationToken.IsCancellationRequested" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsCancellationRequested As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCancellationRequested { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsCancellationRequested : bool" Usage="System.Threading.CancellationToken.IsCancellationRequested" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="386b7-146">取得是否已要求取消這個語彙基元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="386b7-146">Gets whether cancellation has been requested for this token.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="386b7-147">
            <see langword="true" /> 如果取消已要求此語彙基元。否則， <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="386b7-147">
              <see langword="true" /> if cancellation has been requested for this token; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="386b7-148">這個屬性會指出是否已要求取消這個語彙基元，透過語彙基元已取消的狀態，一開始所建構，或是透過呼叫<xref:System.Threading.CancellationTokenSource.Cancel%2A>上相關聯的權杖的<xref:System.Threading.CancellationTokenSource>。</span><span class="sxs-lookup"><span data-stu-id="386b7-148">This property indicates whether cancellation has been requested for this token, either through the token initially being constructed in a canceled state, or through calling <xref:System.Threading.CancellationTokenSource.Cancel%2A> on the token's associated <xref:System.Threading.CancellationTokenSource>.</span></span>  
  
 <span data-ttu-id="386b7-149">如果這個屬性是`true`，它只保證已要求取消。</span><span class="sxs-lookup"><span data-stu-id="386b7-149">If this property is `true`, it only guarantees that cancellation has been requested.</span></span> <span data-ttu-id="386b7-150">它並不保證每個已註冊的處理常式已完成執行時，也不發出取消要求已完成傳播到所有註冊處理常式。</span><span class="sxs-lookup"><span data-stu-id="386b7-150">It does not guarantee that every registered handler has finished executing, nor that cancellation requests have finished propagating to all registered handlers.</span></span> <span data-ttu-id="386b7-151">額外的同步處理可能需要的特別是在情況下，同時取消相關的物件位置。</span><span class="sxs-lookup"><span data-stu-id="386b7-151">Additional synchronization may be required, particularly in situations where related objects are being canceled concurrently.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="386b7-152">以下是簡單的範例執行的伺服器處理序，直到<xref:System.Threading.CancellationToken.IsCancellationRequested%2A>屬性會傳回`true`。</span><span class="sxs-lookup"><span data-stu-id="386b7-152">The following is a simple example that executes a server process until the <xref:System.Threading.CancellationToken.IsCancellationRequested%2A> property returns `true`.</span></span>  
  
 [!code-csharp[System.Threading.Tasks.CancellationToken.IsCancellationRequested#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Threading.Tasks.CancellationToken.IsCancellationRequested/cs/cancellation.cs#12)]
 [!code-vb[System.Threading.Tasks.CancellationToken.IsCancellationRequested#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Threading.Tasks.CancellationToken.IsCancellationRequested/vb/cancelthreads.vb#12)]  
  
 <span data-ttu-id="386b7-153">此範例會具現化<xref:System.Threading.CancellationTokenSource>物件，用來控制存取權的取消語彙基元。</span><span class="sxs-lookup"><span data-stu-id="386b7-153">The example instantiates a <xref:System.Threading.CancellationTokenSource> object, which controls access to the cancellation token.</span></span> <span data-ttu-id="386b7-154">然後，它會定義兩個執行緒程序。</span><span class="sxs-lookup"><span data-stu-id="386b7-154">It then defines two thread procedures.</span></span> <span data-ttu-id="386b7-155">第一個定義為 lambda 運算式的集區鍵盤，並按下的"C"索引鍵時，會呼叫<xref:System.Threading.CancellationTokenSource.Cancel%2A?displayProperty=nameWithType>設為取消語彙基元已取消的狀態。</span><span class="sxs-lookup"><span data-stu-id="386b7-155">The first is defined as a lambda expression that pools the keyboard and, when the "C" key is pressed, calls <xref:System.Threading.CancellationTokenSource.Cancel%2A?displayProperty=nameWithType> to set the cancellation token to the cancelled state.</span></span> <span data-ttu-id="386b7-156">第二個是參數化的方法， `ServerClass.StaticMethod`，會執行迴圈，直到<xref:System.Threading.CancellationToken.IsCancellationRequested%2A>屬性是`true`。</span><span class="sxs-lookup"><span data-stu-id="386b7-156">The second is a parameterized method, `ServerClass.StaticMethod`, that executes a loop until the <xref:System.Threading.CancellationToken.IsCancellationRequested%2A> property is `true`.</span></span>  
  
 <span data-ttu-id="386b7-157">主執行緒然後啟動區塊與兩個執行緒的執行緒執行，直到`ServerClass.StaticMethod`方法會結束。</span><span class="sxs-lookup"><span data-stu-id="386b7-157">The main thread then starts the two threads and blocks until the thread that executes the `ServerClass.StaticMethod` method terminates.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="None">
      <MemberSignature Language="C#" Value="public static System.Threading.CancellationToken None { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Threading.CancellationToken None" />
      <MemberSignature Language="DocId" Value="P:System.Threading.CancellationToken.None" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property None As CancellationToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Threading::CancellationToken None { System::Threading::CancellationToken get(); };" />
      <MemberSignature Language="F#" Value="member this.None : System.Threading.CancellationToken" Usage="System.Threading.CancellationToken.None" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.CancellationToken</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="386b7-158">傳回空的 <see cref="T:System.Threading.CancellationToken" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="386b7-158">Returns an empty <see cref="T:System.Threading.CancellationToken" /> value.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="386b7-159">空的取消語彙基元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="386b7-159">An empty cancellation token.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="386b7-160">無法取消的取消語彙基元這個屬性所傳回。也就是說，其<xref:System.Threading.CancellationToken.CanBeCanceled%2A>屬性是`false`。</span><span class="sxs-lookup"><span data-stu-id="386b7-160">The cancellation token returned by this property cannot be canceled; that is, its <xref:System.Threading.CancellationToken.CanBeCanceled%2A> property is `false`.</span></span>  
  
 <span data-ttu-id="386b7-161">您也可以使用 C# [default(CancellationToken)](~/docs/csharp/language-reference/keywords/default.md)陳述式來建立空的取消語彙基元。</span><span class="sxs-lookup"><span data-stu-id="386b7-161">You can also use the C#  [default(CancellationToken)](~/docs/csharp/language-reference/keywords/default.md) statement to create an empty cancellation token.</span></span> 

 <span data-ttu-id="386b7-162">兩個空的取消語彙基元永遠相等。</span><span class="sxs-lookup"><span data-stu-id="386b7-162">Two empty cancellation tokens are always equal.</span></span>
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Threading.CancellationToken left, System.Threading.CancellationToken right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Threading.CancellationToken left, valuetype System.Threading.CancellationToken right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.CancellationToken.op_Equality(System.Threading.CancellationToken,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As CancellationToken, right As CancellationToken) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Threading::CancellationToken left, System::Threading::CancellationToken right);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Threading.CancellationToken * System.Threading.CancellationToken -&gt; bool" Usage="left = right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Threading.CancellationToken" />
        <Parameter Name="right" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="386b7-163">第一個執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="386b7-163">The first instance.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="386b7-164">第二個執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="386b7-164">The second instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="386b7-165">判斷兩個 <see cref="T:System.Threading.CancellationToken" /> 執行個體是否相等。</span>
          <span class="sxs-lookup">
            <span data-stu-id="386b7-165">Determines whether two <see cref="T:System.Threading.CancellationToken" /> instances are equal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="386b7-166">如果執行個體相等，則為 <see langword="true" />；否則為 <see langword="false" />。如需詳細資訊，請參閱＜備註＞一節。</span>
          <span class="sxs-lookup">
            <span data-stu-id="386b7-166">
              <see langword="true" /> if the instances are equal; otherwise, <see langword="false" /> See the Remarks section for more information.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
## Remarks  

<span data-ttu-id="386b7-167">兩個取消語彙基元是相等，如果任何一個下列條件成立：</span><span class="sxs-lookup"><span data-stu-id="386b7-167">Two cancellation tokens are equal if any one of the following conditions is true:</span></span> 

- <span data-ttu-id="386b7-168">它們與相同相關聯<xref:System.Threading.CancellationTokenSource>。</span><span class="sxs-lookup"><span data-stu-id="386b7-168">They are associated with the same <xref:System.Threading.CancellationTokenSource>.</span></span>

- <span data-ttu-id="386b7-169">兩者都從公用來建構他們<xref:System.Threading.CancellationToken>建構函式，且其<xref:System.Threading.CancellationToken.IsCancellationRequested?displayProperty=nameWithType>值是否相等。</span><span class="sxs-lookup"><span data-stu-id="386b7-169">They were both constructed from public <xref:System.Threading.CancellationToken> constructors, and their <xref:System.Threading.CancellationToken.IsCancellationRequested?displayProperty=nameWithType> values are equal.</span></span>

- <span data-ttu-id="386b7-170">這兩個取消語彙基元的值是<xref:System.Threading.CancellationToken.None?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="386b7-170">The value of both cancellation tokens is <xref:System.Threading.CancellationToken.None?displayProperty=nameWithType>.</span></span>
       ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="386b7-171">相關聯的 <see cref="T:System.Threading.CancellationTokenSource" /> 已經過處置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="386b7-171">An associated <see cref="T:System.Threading.CancellationTokenSource" /> has been disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Threading.CancellationToken left, System.Threading.CancellationToken right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Threading.CancellationToken left, valuetype System.Threading.CancellationToken right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.CancellationToken.op_Inequality(System.Threading.CancellationToken,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As CancellationToken, right As CancellationToken) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Threading::CancellationToken left, System::Threading::CancellationToken right);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Threading.CancellationToken * System.Threading.CancellationToken -&gt; bool" Usage="System.Threading.CancellationToken.op_Inequality (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Threading.CancellationToken" />
        <Parameter Name="right" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="386b7-172">第一個執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="386b7-172">The first instance.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="386b7-173">第二個執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="386b7-173">The second instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="386b7-174">判斷兩個 <see cref="T:System.Threading.CancellationToken" /> 執行個體是否不相等。</span>
          <span class="sxs-lookup">
            <span data-stu-id="386b7-174">Determines whether two <see cref="T:System.Threading.CancellationToken" /> instances are not equal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="386b7-175">如果執行個體不相等則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="386b7-175">
              <see langword="true" /> if the instances are not equal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
## Remarks  

<span data-ttu-id="386b7-176">相等的定義，請參閱<xref:System.Threading.CancellationToken.Equals%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="386b7-176">For the definition of equality, see the <xref:System.Threading.CancellationToken.Equals%2A> method.</span></span> 
       ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="386b7-177">相關聯的 <see cref="T:System.Threading.CancellationTokenSource" /> 已經過處置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="386b7-177">An associated <see cref="T:System.Threading.CancellationTokenSource" /> has been disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Register">
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="386b7-178">註冊委派，當取消這個 <see cref="T:System.Threading.CancellationToken" /> 時將會呼叫該委派。</span>
          <span class="sxs-lookup">
            <span data-stu-id="386b7-178">Registers a delegate that will be called when this <see cref="T:System.Threading.CancellationToken" /> is canceled.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Register">
      <MemberSignature Language="C#" Value="public System.Threading.CancellationTokenRegistration Register (Action callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Threading.CancellationTokenRegistration Register(class System.Action callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.CancellationToken.Register(System.Action)" />
      <MemberSignature Language="VB.NET" Value="Public Function Register (callback As Action) As CancellationTokenRegistration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::CancellationTokenRegistration Register(Action ^ callback);" />
      <MemberSignature Language="F#" Value="member this.Register : Action -&gt; System.Threading.CancellationTokenRegistration" Usage="cancellationToken.Register callback" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.CancellationTokenRegistration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Action" />
      </Parameters>
      <Docs>
        <param name="callback">
          <span data-ttu-id="386b7-179">取消 <see cref="T:System.Threading.CancellationToken" /> 時所要執行的委派。</span>
          <span class="sxs-lookup">
            <span data-stu-id="386b7-179">The delegate to be executed when the <see cref="T:System.Threading.CancellationToken" /> is canceled.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="386b7-180">註冊委派，當取消這個 <see cref="T:System.Threading.CancellationToken" /> 時將會呼叫該委派。</span>
          <span class="sxs-lookup">
            <span data-stu-id="386b7-180">Registers a delegate that will be called when this <see cref="T:System.Threading.CancellationToken" /> is canceled.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="386b7-181">可用來取消註冊回呼的 <see cref="T:System.Threading.CancellationTokenRegistration" /> 執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="386b7-181">The <see cref="T:System.Threading.CancellationTokenRegistration" /> instance that can be used to unregister the callback.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="386b7-182">如果這個語彙基元已取消的狀態，委派將會立即和同步地執行。</span><span class="sxs-lookup"><span data-stu-id="386b7-182">If this token is already in the canceled state, the delegate will be run immediately and synchronously.</span></span> <span data-ttu-id="386b7-183">委派會產生任何例外狀況會傳播超出這個方法呼叫。</span><span class="sxs-lookup"><span data-stu-id="386b7-183">Any exception the delegate generates will be propagated out of this method call.</span></span>  
  
 <span data-ttu-id="386b7-184">目前<xref:System.Threading.ExecutionContext>委派以及擷取，而且會在執行它時使用。</span><span class="sxs-lookup"><span data-stu-id="386b7-184">The current <xref:System.Threading.ExecutionContext> is captured along with the delegate and will be used when executing it.</span></span> 

 <span data-ttu-id="386b7-185">目前<xref:System.Threading.SynchronizationContext>不會擷取。</span><span class="sxs-lookup"><span data-stu-id="386b7-185">The current <xref:System.Threading.SynchronizationContext> is not captured.</span></span>
 
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="386b7-186">相關聯的 <see cref="T:System.Threading.CancellationTokenSource" /> 已經處置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="386b7-186">The associated <see cref="T:System.Threading.CancellationTokenSource" /> has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="386b7-187">
            <paramref name="callback" /> 為 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="386b7-187">
              <paramref name="callback" /> is null.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Register">
      <MemberSignature Language="C#" Value="public System.Threading.CancellationTokenRegistration Register (Action callback, bool useSynchronizationContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Threading.CancellationTokenRegistration Register(class System.Action callback, bool useSynchronizationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.CancellationToken.Register(System.Action,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function Register (callback As Action, useSynchronizationContext As Boolean) As CancellationTokenRegistration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::CancellationTokenRegistration Register(Action ^ callback, bool useSynchronizationContext);" />
      <MemberSignature Language="F#" Value="member this.Register : Action * bool -&gt; System.Threading.CancellationTokenRegistration" Usage="cancellationToken.Register (callback, useSynchronizationContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.CancellationTokenRegistration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Action" />
        <Parameter Name="useSynchronizationContext" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="callback">
          <span data-ttu-id="386b7-188">取消 <see cref="T:System.Threading.CancellationToken" /> 時所要執行的委派。</span>
          <span class="sxs-lookup">
            <span data-stu-id="386b7-188">The delegate to be executed when the <see cref="T:System.Threading.CancellationToken" /> is canceled.</span>
          </span>
        </param>
        <param name="useSynchronizationContext">
          <span data-ttu-id="386b7-189">值，指出是否要擷取目前的 <see cref="T:System.Threading.SynchronizationContext" />，並在叫用 <c>callback</c> 時使用它。</span>
          <span class="sxs-lookup">
            <span data-stu-id="386b7-189">A value that indicates whether to capture the current <see cref="T:System.Threading.SynchronizationContext" /> and use it when invoking the <c>callback</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="386b7-190">註冊委派，當取消這個 <see cref="T:System.Threading.CancellationToken" /> 時將會呼叫該委派。</span>
          <span class="sxs-lookup">
            <span data-stu-id="386b7-190">Registers a delegate that will be called when this <see cref="T:System.Threading.CancellationToken" /> is canceled.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="386b7-191">可用來取消註冊回呼的 <see cref="T:System.Threading.CancellationTokenRegistration" /> 執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="386b7-191">The <see cref="T:System.Threading.CancellationTokenRegistration" /> instance that can be used to unregister the callback.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="386b7-192">如果這個語彙基元已取消的狀態，委派將會立即和同步地執行。</span><span class="sxs-lookup"><span data-stu-id="386b7-192">If this token is already in the canceled state, the delegate will be run immediately and synchronously.</span></span> <span data-ttu-id="386b7-193">委派會產生任何例外狀況會傳播超出這個方法呼叫。</span><span class="sxs-lookup"><span data-stu-id="386b7-193">Any exception the delegate generates will be propagated out of this method call.</span></span>  
  
 <span data-ttu-id="386b7-194">目前<xref:System.Threading.ExecutionContext>委派以及擷取，而且會在執行它時使用。</span><span class="sxs-lookup"><span data-stu-id="386b7-194">The current <xref:System.Threading.ExecutionContext> is captured along with the delegate and will be used when executing it.</span></span> 

 <span data-ttu-id="386b7-195">如果`useSynchronizationContext`是`true`，目前<xref:System.Threading.SynchronizationContext>，如果其中一個存在，也會擷取與委派一起而且會在執行它時使用。</span><span class="sxs-lookup"><span data-stu-id="386b7-195">If `useSynchronizationContext` is `true`, the current <xref:System.Threading.SynchronizationContext>, if one exists, is also captured along with the delegate and will be used when executing it.</span></span> <span data-ttu-id="386b7-196">否則，<xref:System.Threading.SynchronizationContext>不會擷取。</span><span class="sxs-lookup"><span data-stu-id="386b7-196">Otherwise, <xref:System.Threading.SynchronizationContext> is not captured.</span></span>
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="386b7-197">相關聯的 <see cref="T:System.Threading.CancellationTokenSource" /> 已經處置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="386b7-197">The associated <see cref="T:System.Threading.CancellationTokenSource" /> has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="386b7-198">
            <paramref name="callback" /> 為 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="386b7-198">
              <paramref name="callback" /> is null.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Register">
      <MemberSignature Language="C#" Value="public System.Threading.CancellationTokenRegistration Register (Action&lt;object&gt; callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Threading.CancellationTokenRegistration Register(class System.Action`1&lt;object&gt; callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.CancellationToken.Register(System.Action{System.Object},System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Register (callback As Action(Of Object), state As Object) As CancellationTokenRegistration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::CancellationTokenRegistration Register(Action&lt;System::Object ^&gt; ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.Register : Action&lt;obj&gt; * obj -&gt; System.Threading.CancellationTokenRegistration" Usage="cancellationToken.Register (callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.CancellationTokenRegistration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Action&lt;System.Object&gt;" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">
          <span data-ttu-id="386b7-199">取消 <see cref="T:System.Threading.CancellationToken" /> 時所要執行的委派。</span>
          <span class="sxs-lookup">
            <span data-stu-id="386b7-199">The delegate to be executed when the <see cref="T:System.Threading.CancellationToken" /> is canceled.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="386b7-200">當叫用委派時，要傳遞給 <c>callback</c> 的狀態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="386b7-200">The state to pass to the <c>callback</c> when the delegate is invoked.</span>
          </span>
          <span data-ttu-id="386b7-201">這可能是 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="386b7-201">This may be null.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="386b7-202">註冊委派，當取消這個 <see cref="T:System.Threading.CancellationToken" /> 時將會呼叫該委派。</span>
          <span class="sxs-lookup">
            <span data-stu-id="386b7-202">Registers a delegate that will be called when this <see cref="T:System.Threading.CancellationToken" /> is canceled.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="386b7-203">可用來取消註冊回呼的 <see cref="T:System.Threading.CancellationTokenRegistration" /> 執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="386b7-203">The <see cref="T:System.Threading.CancellationTokenRegistration" /> instance that can be used to unregister the callback.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="386b7-204">如果這個語彙基元已取消的狀態，委派將會立即和同步地執行。</span><span class="sxs-lookup"><span data-stu-id="386b7-204">If this token is already in the canceled state, the delegate will be run immediately and synchronously.</span></span> <span data-ttu-id="386b7-205">委派會產生任何例外狀況會傳播超出這個方法呼叫。</span><span class="sxs-lookup"><span data-stu-id="386b7-205">Any exception the delegate generates will be propagated out of this method call.</span></span>  
  
 <span data-ttu-id="386b7-206">目前<xref:System.Threading.ExecutionContext>委派以及擷取，而且會在執行它時使用。</span><span class="sxs-lookup"><span data-stu-id="386b7-206">The current <xref:System.Threading.ExecutionContext> is captured along with the delegate and will be used when executing it.</span></span> 

 <span data-ttu-id="386b7-207">目前<xref:System.Threading.SynchronizationContext>不會擷取。</span><span class="sxs-lookup"><span data-stu-id="386b7-207">The current <xref:System.Threading.SynchronizationContext> is not captured.</span></span>
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="386b7-208">相關聯的 <see cref="T:System.Threading.CancellationTokenSource" /> 已經處置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="386b7-208">The associated <see cref="T:System.Threading.CancellationTokenSource" /> has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="386b7-209">
            <paramref name="callback" /> 為 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="386b7-209">
              <paramref name="callback" /> is null.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Register">
      <MemberSignature Language="C#" Value="public System.Threading.CancellationTokenRegistration Register (Action&lt;object&gt; callback, object state, bool useSynchronizationContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Threading.CancellationTokenRegistration Register(class System.Action`1&lt;object&gt; callback, object state, bool useSynchronizationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.CancellationToken.Register(System.Action{System.Object},System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function Register (callback As Action(Of Object), state As Object, useSynchronizationContext As Boolean) As CancellationTokenRegistration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::CancellationTokenRegistration Register(Action&lt;System::Object ^&gt; ^ callback, System::Object ^ state, bool useSynchronizationContext);" />
      <MemberSignature Language="F#" Value="member this.Register : Action&lt;obj&gt; * obj * bool -&gt; System.Threading.CancellationTokenRegistration" Usage="cancellationToken.Register (callback, state, useSynchronizationContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.CancellationTokenRegistration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Action&lt;System.Object&gt;" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="useSynchronizationContext" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="callback">
          <span data-ttu-id="386b7-210">取消 <see cref="T:System.Threading.CancellationToken" /> 時所要執行的委派。</span>
          <span class="sxs-lookup">
            <span data-stu-id="386b7-210">The delegate to be executed when the <see cref="T:System.Threading.CancellationToken" /> is canceled.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="386b7-211">當叫用委派時，要傳遞給 <c>callback</c> 的狀態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="386b7-211">The state to pass to the <c>callback</c> when the delegate is invoked.</span>
          </span>
          <span data-ttu-id="386b7-212">這可能是 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="386b7-212">This may be null.</span>
          </span>
        </param>
        <param name="useSynchronizationContext">
          <span data-ttu-id="386b7-213">布林值，指出是否要擷取目前的 <see cref="T:System.Threading.SynchronizationContext" />，並在叫用 <c>callback</c> 時使用它。</span>
          <span class="sxs-lookup">
            <span data-stu-id="386b7-213">A Boolean value that indicates whether to capture the current <see cref="T:System.Threading.SynchronizationContext" /> and use it when invoking the <c>callback</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="386b7-214">註冊委派，當取消這個 <see cref="T:System.Threading.CancellationToken" /> 時將會呼叫該委派。</span>
          <span class="sxs-lookup">
            <span data-stu-id="386b7-214">Registers a delegate that will be called when this <see cref="T:System.Threading.CancellationToken" /> is canceled.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="386b7-215">可用來取消註冊回呼的 <see cref="T:System.Threading.CancellationTokenRegistration" /> 執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="386b7-215">The <see cref="T:System.Threading.CancellationTokenRegistration" /> instance that can be used to unregister the callback.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="386b7-216">如果這個語彙基元已取消的狀態，委派將會立即和同步地執行。</span><span class="sxs-lookup"><span data-stu-id="386b7-216">If this token is already in the canceled state, the delegate will be run immediately and synchronously.</span></span> <span data-ttu-id="386b7-217">委派會產生任何例外狀況會傳播超出這個方法呼叫。</span><span class="sxs-lookup"><span data-stu-id="386b7-217">Any exception the delegate generates will be propagated out of this method call.</span></span>  
  
 <span data-ttu-id="386b7-218">目前<xref:System.Threading.ExecutionContext>委派以及擷取，而且會在執行它時使用。</span><span class="sxs-lookup"><span data-stu-id="386b7-218">The current <xref:System.Threading.ExecutionContext> is captured along with the delegate and will be used when executing it.</span></span> 

 <span data-ttu-id="386b7-219">如果`useSynchronizationContext`是`true`，目前<xref:System.Threading.SynchronizationContext>，如果其中一個存在，也會擷取與委派一起而且會在執行它時使用。</span><span class="sxs-lookup"><span data-stu-id="386b7-219">If `useSynchronizationContext` is `true`, the current <xref:System.Threading.SynchronizationContext>, if one exists, is also captured along with the delegate and will be used when executing it.</span></span> <span data-ttu-id="386b7-220">否則，<xref:System.Threading.SynchronizationContext>不會擷取。</span><span class="sxs-lookup"><span data-stu-id="386b7-220">Otherwise, <xref:System.Threading.SynchronizationContext> is not captured.</span></span>
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="386b7-221">相關聯的 <see cref="T:System.Threading.CancellationTokenSource" /> 已經處置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="386b7-221">The associated <see cref="T:System.Threading.CancellationTokenSource" /> has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="386b7-222">
            <paramref name="callback" /> 為 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="386b7-222">
              <paramref name="callback" /> is null.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowIfCancellationRequested">
      <MemberSignature Language="C#" Value="public void ThrowIfCancellationRequested ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ThrowIfCancellationRequested() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.CancellationToken.ThrowIfCancellationRequested" />
      <MemberSignature Language="VB.NET" Value="Public Sub ThrowIfCancellationRequested ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ThrowIfCancellationRequested();" />
      <MemberSignature Language="F#" Value="member this.ThrowIfCancellationRequested : unit -&gt; unit" Usage="cancellationToken.ThrowIfCancellationRequested " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="386b7-223">如果已要求取消這個語彙基元，則擲回 <see cref="T:System.OperationCanceledException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="386b7-223">Throws a <see cref="T:System.OperationCanceledException" /> if this token has had cancellation requested.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="386b7-224">這個方法會提供功能相當於：</span><span class="sxs-lookup"><span data-stu-id="386b7-224">This method provides functionality equivalent to:</span></span>  
  
 <span data-ttu-id="386b7-225">C#</span><span class="sxs-lookup"><span data-stu-id="386b7-225">C#</span></span>  
  
```csharp  
if (token.IsCancellationRequested)   
    throw new OperationCanceledException(token);  
```  
  
```vb  
If token.IsCancellationRequested Then  
    Throw New OperationCanceledException(token)  
End If  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="386b7-226">已要求取消這個語彙基元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="386b7-226">The token has had cancellation requested.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="386b7-227">相關聯的 <see cref="T:System.Threading.CancellationTokenSource" /> 已經處置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="386b7-227">The associated <see cref="T:System.Threading.CancellationTokenSource" /> has been disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WaitHandle">
      <MemberSignature Language="C#" Value="public System.Threading.WaitHandle WaitHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Threading.WaitHandle WaitHandle" />
      <MemberSignature Language="DocId" Value="P:System.Threading.CancellationToken.WaitHandle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WaitHandle As WaitHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Threading::WaitHandle ^ WaitHandle { System::Threading::WaitHandle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.WaitHandle : System.Threading.WaitHandle" Usage="System.Threading.CancellationToken.WaitHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.WaitHandle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="386b7-228">取得取消語彙基元時所發出的 <see cref="T:System.Threading.WaitHandle" /> 信號。</span>
          <span class="sxs-lookup">
            <span data-stu-id="386b7-228">Gets a <see cref="T:System.Threading.WaitHandle" /> that is signaled when the token is canceled.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="386b7-229">取消語彙基元時所發出的 <see cref="T:System.Threading.WaitHandle" /> 信號。</span>
          <span class="sxs-lookup">
            <span data-stu-id="386b7-229">A <see cref="T:System.Threading.WaitHandle" /> that is signaled when the token is canceled.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="386b7-230">存取這個屬性會導致<xref:System.Threading.WaitHandle>来具現化。</span><span class="sxs-lookup"><span data-stu-id="386b7-230">Accessing this property causes a <xref:System.Threading.WaitHandle> to be instantiated.</span></span> <span data-ttu-id="386b7-231">最好只使用 必要時，這個屬性，以及然後處置相關聯<xref:System.Threading.CancellationTokenSource>儘早 (disposing 來源會處置這個已配置的控制代碼) 的執行個體。</span><span class="sxs-lookup"><span data-stu-id="386b7-231">It is preferable to only use this property when necessary, and to then dispose the associated <xref:System.Threading.CancellationTokenSource> instance at the earliest opportunity (disposing the source will dispose of this allocated handle).</span></span> <span data-ttu-id="386b7-232">控制代碼不應關閉或處置直接。</span><span class="sxs-lookup"><span data-stu-id="386b7-232">The handle should not be closed or disposed directly.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="386b7-233">相關聯的 <see cref="T:System.Threading.CancellationTokenSource" /> 已經處置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="386b7-233">The associated <see cref="T:System.Threading.CancellationTokenSource" /> has been disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>