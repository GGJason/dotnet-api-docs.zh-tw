<Type Name="SpinWait" FullName="System.Threading.SpinWait">
  <Metadata><Meta Name="ms.openlocfilehash" Value="abb7bbb7dbaa77dbfde0e2229f83e792d539dc8b" /><Meta Name="ms.sourcegitcommit" Value="312579b66a6a983587a84f05c419be8fb0df7326" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="05/09/2019" /><Meta Name="ms.locfileid" Value="65473678" /></Metadata><TypeSignature Language="C#" Value="public struct SpinWait" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit SpinWait extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.Threading.SpinWait" />
  <TypeSignature Language="VB.NET" Value="Public Structure SpinWait" />
  <TypeSignature Language="C++ CLI" Value="public value class SpinWait" />
  <TypeSignature Language="F#" Value="type SpinWait = struct" />
  <AssemblyInfo>
    <AssemblyName>System.Threading</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="7f303-101">提供微調式等候支援。</span><span class="sxs-lookup"><span data-stu-id="7f303-101">Provides support for spin-based waiting.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7f303-102"><xref:System.Threading.SpinWait> 封裝一般轉動式邏輯。</span><span class="sxs-lookup"><span data-stu-id="7f303-102"><xref:System.Threading.SpinWait> encapsulates common spinning logic.</span></span> <span data-ttu-id="7f303-103">單一處理器電腦上，而不是忙碌中等候，一律使用產生，並在電腦上採用超執行緒技術的 Intel 處理器，很有幫助防止硬體執行緒資源用盡。</span><span class="sxs-lookup"><span data-stu-id="7f303-103">On single-processor machines, yields are always used instead of busy waits, and on computers with Intel processors employing Hyper-Threading technology, it helps to prevent hardware thread starvation.</span></span> <span data-ttu-id="7f303-104">SpinWait 封裝良好混用旋轉和產生的則為 true。</span><span class="sxs-lookup"><span data-stu-id="7f303-104">SpinWait encapsulates a good mixture of spinning and true yielding.</span></span>  
  
 <span data-ttu-id="7f303-105"><xref:System.Threading.SpinWait> 是實值類型，這表示，低層級的程式碼還可以利用 SpinWait 毋需擔心的不必要的配置額外負荷。</span><span class="sxs-lookup"><span data-stu-id="7f303-105"><xref:System.Threading.SpinWait> is a value type, which means that low-level code can utilize SpinWait without fear of unnecessary allocation overheads.</span></span> <span data-ttu-id="7f303-106">SpinWait 不通常適用於一般的應用程式。</span><span class="sxs-lookup"><span data-stu-id="7f303-106">SpinWait is not generally useful for ordinary applications.</span></span> <span data-ttu-id="7f303-107">在大部分情況下，您應該使用提供.NET Framework 中，這類的同步處理類別<xref:System.Threading.Monitor>。</span><span class="sxs-lookup"><span data-stu-id="7f303-107">In most cases, you should use the synchronization classes provided by the .NET Framework, such as <xref:System.Threading.Monitor>.</span></span> <span data-ttu-id="7f303-108">微調等候需要的地方，不過，大部分用途而言<xref:System.Threading.SpinWait>類型應該是偏好透過<xref:System.Threading.Thread.SpinWait%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="7f303-108">For most purposes where spin waiting is required, however, the <xref:System.Threading.SpinWait> type should be preferred over the <xref:System.Threading.Thread.SpinWait%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7f303-109">下列範例示範如何使用<xref:System.Threading.SpinWait>:</span><span class="sxs-lookup"><span data-stu-id="7f303-109">The following example shows how to use a <xref:System.Threading.SpinWait>:</span></span>  
  
 [!code-csharp[System.Threading.SpinWait#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.threading.spinwait/cs/spinwait.cs#01)]
 [!code-vb[System.Threading.SpinWait#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.threading.spinwait/vb/spinwait.vb#01)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="7f303-110">雖然<see cref="T:System.Threading.SpinWait" />是設計成在並行的應用程式，它不是從多個執行緒同時使用。</span><span class="sxs-lookup"><span data-stu-id="7f303-110">While <see cref="T:System.Threading.SpinWait" /> is designed to be used in concurrent applications, it is not designed to be used from multiple threads concurrently.</span></span> <span data-ttu-id="7f303-111"><see cref="T:System.Threading.SpinWait" /> 成員不是安全執行緒。</span><span class="sxs-lookup"><span data-stu-id="7f303-111"><see cref="T:System.Threading.SpinWait" /> members are not thread-safe.</span></span> <span data-ttu-id="7f303-112">如果必須微調多個執行緒，每個應該使用自己的執行個體<see cref="T:System.Threading.SpinWait" />。</span><span class="sxs-lookup"><span data-stu-id="7f303-112">If multiple threads must spin, each should use its own instance of <see cref="T:System.Threading.SpinWait" />.</span></span></threadsafe>
    <related type="Article" href="~/docs/standard/threading/spinwait.md"><span data-ttu-id="7f303-113">SpinWait</span><span class="sxs-lookup"><span data-stu-id="7f303-113">SpinWait</span></span></related>
    <related type="Article" href="~/docs/standard/threading/how-to-use-spinwait-to-implement-a-two-phase-wait-operation.md"><span data-ttu-id="7f303-114">作法：使用 SpinWait 實作兩階段等候作業</span><span class="sxs-lookup"><span data-stu-id="7f303-114">How to: Use SpinWait to Implement a Two-Phase Wait Operation</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Threading.SpinWait.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Threading.SpinWait.Count" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7f303-115">取得的次數<see cref="M:System.Threading.SpinWait.SpinOnce" />已呼叫這個執行個體上。</span><span class="sxs-lookup"><span data-stu-id="7f303-115">Gets the number of times <see cref="M:System.Threading.SpinWait.SpinOnce" /> has been called on this instance.</span></span></summary>
        <value><span data-ttu-id="7f303-116">傳回一個整數，表示的次數<see cref="M:System.Threading.SpinWait.SpinOnce" />已呼叫這個執行個體上。</span><span class="sxs-lookup"><span data-stu-id="7f303-116">Returns an integer that represents the number of times <see cref="M:System.Threading.SpinWait.SpinOnce" /> has been called on this instance.</span></span></value>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/36012f42-34e5-4f86-adf4-973f433ed6c6"><span data-ttu-id="7f303-117">SpinWait</span><span class="sxs-lookup"><span data-stu-id="7f303-117">SpinWait</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/b2ac4e4a-051a-4f65-b4b9-f8e103aff195"><span data-ttu-id="7f303-118">作法：使用 SpinWait 實作兩階段等候作業</span><span class="sxs-lookup"><span data-stu-id="7f303-118">How to: Use SpinWait to Implement a Two-Phase Wait Operation</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="NextSpinWillYield">
      <MemberSignature Language="C#" Value="public bool NextSpinWillYield { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NextSpinWillYield" />
      <MemberSignature Language="DocId" Value="P:System.Threading.SpinWait.NextSpinWillYield" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NextSpinWillYield As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool NextSpinWillYield { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.NextSpinWillYield : bool" Usage="System.Threading.SpinWait.NextSpinWillYield" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7f303-119">取得是否下次呼叫<see cref="M:System.Threading.SpinWait.SpinOnce" />讓出處理器，並觸發強制的環境切換。</span><span class="sxs-lookup"><span data-stu-id="7f303-119">Gets whether the next call to <see cref="M:System.Threading.SpinWait.SpinOnce" /> will yield the processor, triggering a forced context switch.</span></span></summary>
        <value><span data-ttu-id="7f303-120">下一步，是否呼叫至<see cref="M:System.Threading.SpinWait.SpinOnce" />讓出處理器，並觸發強制的環境切換。</span><span class="sxs-lookup"><span data-stu-id="7f303-120">Whether the next call to <see cref="M:System.Threading.SpinWait.SpinOnce" /> will yield the processor, triggering a forced context switch.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7f303-121">單一 CPU 的電腦上<xref:System.Threading.SpinWait.SpinOnce%2A>永遠會產生處理器。</span><span class="sxs-lookup"><span data-stu-id="7f303-121">On a single-CPU machine, <xref:System.Threading.SpinWait.SpinOnce%2A> always yields the processor.</span></span> <span data-ttu-id="7f303-122">使用多個 Cpu 的機器上<xref:System.Threading.SpinWait.SpinOnce%2A>呼叫中未指定的次數之後，可能會產生。</span><span class="sxs-lookup"><span data-stu-id="7f303-122">On machines with multiple CPUs, <xref:System.Threading.SpinWait.SpinOnce%2A> may yield after an unspecified number of calls.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/36012f42-34e5-4f86-adf4-973f433ed6c6"><span data-ttu-id="7f303-123">SpinWait</span><span class="sxs-lookup"><span data-stu-id="7f303-123">SpinWait</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/b2ac4e4a-051a-4f65-b4b9-f8e103aff195"><span data-ttu-id="7f303-124">作法：使用 SpinWait 實作兩階段等候作業</span><span class="sxs-lookup"><span data-stu-id="7f303-124">How to: Use SpinWait to Implement a Two-Phase Wait Operation</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.SpinWait.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset();" />
      <MemberSignature Language="F#" Value="member this.Reset : unit -&gt; unit" Usage="spinWait.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7f303-125">重設微調計數器。</span><span class="sxs-lookup"><span data-stu-id="7f303-125">Resets the spin counter.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7f303-126">這可讓<xref:System.Threading.SpinWait.SpinOnce%2A>並<xref:System.Threading.SpinWait.NextSpinWillYield%2A>行為，但沒有呼叫<xref:System.Threading.SpinWait.SpinOnce%2A>已發出這個執行個體上。</span><span class="sxs-lookup"><span data-stu-id="7f303-126">This makes <xref:System.Threading.SpinWait.SpinOnce%2A> and <xref:System.Threading.SpinWait.NextSpinWillYield%2A> behave as though no calls to <xref:System.Threading.SpinWait.SpinOnce%2A> had been issued on this instance.</span></span> <span data-ttu-id="7f303-127">如果<xref:System.Threading.SpinWait>多次重複使用執行個體，它可以用來以重設它，以避免產生太快。</span><span class="sxs-lookup"><span data-stu-id="7f303-127">If a <xref:System.Threading.SpinWait> instance is reused many times, it may be useful to reset it to avoid yielding too soon.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7f303-128">以下是簡單的無鎖堆疊實作中使用 SpinWait 的範例。</span><span class="sxs-lookup"><span data-stu-id="7f303-128">The following is an example of using SpinWait in a simple lock-free stack implementation.</span></span> <span data-ttu-id="7f303-129">（這是只是範例。</span><span class="sxs-lookup"><span data-stu-id="7f303-129">(This is just an example.</span></span> <span data-ttu-id="7f303-130">如果需要有效率的安全執行緒的堆疊，請考慮使用 ConcurrentStack。）</span><span class="sxs-lookup"><span data-stu-id="7f303-130">If an efficient, thread-safe stack is needed, consider using ConcurrentStack.)</span></span>  
  
 [!code-csharp[System.Threading.SpinWait.Reset#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.threading.spinwait/cs/reset.cs#01)]
 [!code-vb[System.Threading.SpinWait.Reset#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.threading.spinwait/vb/reset.vb#01)]

 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/36012f42-34e5-4f86-adf4-973f433ed6c6"><span data-ttu-id="7f303-131">SpinWait</span><span class="sxs-lookup"><span data-stu-id="7f303-131">SpinWait</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/b2ac4e4a-051a-4f65-b4b9-f8e103aff195"><span data-ttu-id="7f303-132">作法：使用 SpinWait 實作兩階段等候作業</span><span class="sxs-lookup"><span data-stu-id="7f303-132">How to: Use SpinWait to Implement a Two-Phase Wait Operation</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SpinOnce">
      <MemberSignature Language="C#" Value="public void SpinOnce ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SpinOnce() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.SpinWait.SpinOnce" />
      <MemberSignature Language="VB.NET" Value="Public Sub SpinOnce ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SpinOnce();" />
      <MemberSignature Language="F#" Value="member this.SpinOnce : unit -&gt; unit" Usage="spinWait.SpinOnce " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7f303-133">執行單一微調。</span><span class="sxs-lookup"><span data-stu-id="7f303-133">Performs a single spin.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7f303-134">這通常稱為在迴圈中，並可能會變更的次數為基礎行為<xref:System.Threading.SpinWait.SpinOnce%2A>呼叫這個執行個體上為止。</span><span class="sxs-lookup"><span data-stu-id="7f303-134">This is typically called in a loop, and may change in behavior based on the number of times a <xref:System.Threading.SpinWait.SpinOnce%2A> has been called thus far on this instance.</span></span> <span data-ttu-id="7f303-135">每個微調導致<xref:System.Threading.Thread.SpinWait%2A>所呼叫的方法。</span><span class="sxs-lookup"><span data-stu-id="7f303-135">Each spin results in the <xref:System.Threading.Thread.SpinWait%2A> method being called.</span></span> <span data-ttu-id="7f303-136">計數會保留的次數<xref:System.Threading.SpinWait.SpinOnce%2A>呼叫時，並達到臨界值計數之後,<xref:System.Threading.Thread.Yield%2A>呼叫方法。</span><span class="sxs-lookup"><span data-stu-id="7f303-136">A count is kept of the number of times <xref:System.Threading.SpinWait.SpinOnce%2A> is called, and after a threshold count is reached, the <xref:System.Threading.Thread.Yield%2A> method is called.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/36012f42-34e5-4f86-adf4-973f433ed6c6"><span data-ttu-id="7f303-137">SpinWait</span><span class="sxs-lookup"><span data-stu-id="7f303-137">SpinWait</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/b2ac4e4a-051a-4f65-b4b9-f8e103aff195"><span data-ttu-id="7f303-138">HOW TO：使用 SpinWait 實作兩階段等候作業</span><span class="sxs-lookup"><span data-stu-id="7f303-138">How to: Use SpinWait to Implement a Two-Phase Wait Operation</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SpinOnce">
      <MemberSignature Language="C#" Value="public void SpinOnce (int sleep1Threshold);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SpinOnce(int32 sleep1Threshold) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.SpinWait.SpinOnce(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SpinOnce (sleep1Threshold As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SpinOnce(int sleep1Threshold);" />
      <MemberSignature Language="F#" Value="member this.SpinOnce : int -&gt; unit" Usage="spinWait.SpinOnce sleep1Threshold" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sleep1Threshold" Type="System.Int32" Index="0" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="sleep1Threshold">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SpinUntil">
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7f303-139">執行微調，直到滿足指定的條件。</span><span class="sxs-lookup"><span data-stu-id="7f303-139">Spins until the specified condition is satisfied.</span></span></summary>
        <related type="Article" href="https://msdn.microsoft.com/library/36012f42-34e5-4f86-adf4-973f433ed6c6"><span data-ttu-id="7f303-140">SpinWait</span><span class="sxs-lookup"><span data-stu-id="7f303-140">SpinWait</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/b2ac4e4a-051a-4f65-b4b9-f8e103aff195"><span data-ttu-id="7f303-141">HOW TO：使用 SpinWait 實作兩階段等候作業</span><span class="sxs-lookup"><span data-stu-id="7f303-141">How to: Use SpinWait to Implement a Two-Phase Wait Operation</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="SpinUntil">
      <MemberSignature Language="C#" Value="public static void SpinUntil (Func&lt;bool&gt; condition);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SpinUntil(class System.Func`1&lt;bool&gt; condition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.SpinWait.SpinUntil(System.Func{System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SpinUntil (condition As Func(Of Boolean))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SpinUntil(Func&lt;bool&gt; ^ condition);" />
      <MemberSignature Language="F#" Value="static member SpinUntil : Func&lt;bool&gt; -&gt; unit" Usage="System.Threading.SpinWait.SpinUntil condition" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Func&lt;System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="condition"><span data-ttu-id="7f303-142">委派以反覆執行，直到它傳回 true。</span><span class="sxs-lookup"><span data-stu-id="7f303-142">A delegate to be executed over and over until it returns true.</span></span></param>
        <summary><span data-ttu-id="7f303-143">執行微調，直到滿足指定的條件。</span><span class="sxs-lookup"><span data-stu-id="7f303-143">Spins until the specified condition is satisfied.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7f303-144"><paramref name="condition" /> 引數為 null。</span><span class="sxs-lookup"><span data-stu-id="7f303-144">The <paramref name="condition" /> argument is null.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/36012f42-34e5-4f86-adf4-973f433ed6c6"><span data-ttu-id="7f303-145">SpinWait</span><span class="sxs-lookup"><span data-stu-id="7f303-145">SpinWait</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/b2ac4e4a-051a-4f65-b4b9-f8e103aff195"><span data-ttu-id="7f303-146">作法：使用 SpinWait 實作兩階段等候作業</span><span class="sxs-lookup"><span data-stu-id="7f303-146">How to: Use SpinWait to Implement a Two-Phase Wait Operation</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SpinUntil">
      <MemberSignature Language="C#" Value="public static bool SpinUntil (Func&lt;bool&gt; condition, int millisecondsTimeout);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool SpinUntil(class System.Func`1&lt;bool&gt; condition, int32 millisecondsTimeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.SpinWait.SpinUntil(System.Func{System.Boolean},System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SpinUntil (condition As Func(Of Boolean), millisecondsTimeout As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool SpinUntil(Func&lt;bool&gt; ^ condition, int millisecondsTimeout);" />
      <MemberSignature Language="F#" Value="static member SpinUntil : Func&lt;bool&gt; * int -&gt; bool" Usage="System.Threading.SpinWait.SpinUntil (condition, millisecondsTimeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Func&lt;System.Boolean&gt;" />
        <Parameter Name="millisecondsTimeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="condition"><span data-ttu-id="7f303-147">委派以反覆執行，直到它傳回 true。</span><span class="sxs-lookup"><span data-stu-id="7f303-147">A delegate to be executed over and over until it returns true.</span></span></param>
        <param name="millisecondsTimeout"><span data-ttu-id="7f303-148">要等候的毫秒數，如果要無限期等候，則為 <see cref="F:System.Threading.Timeout.Infinite" /> (-1)。</span><span class="sxs-lookup"><span data-stu-id="7f303-148">The number of milliseconds to wait, or <see cref="F:System.Threading.Timeout.Infinite" /> (-1) to wait indefinitely.</span></span></param>
        <summary><span data-ttu-id="7f303-149">執行微調，直到滿足指定的條件，或直到指定的逾時過期為止。</span><span class="sxs-lookup"><span data-stu-id="7f303-149">Spins until the specified condition is satisfied or until the specified timeout is expired.</span></span></summary>
        <returns><span data-ttu-id="7f303-150">如果在逾時; 內符合的條件，則為 true。否則為 false</span><span class="sxs-lookup"><span data-stu-id="7f303-150">True if the condition is satisfied within the timeout; otherwise, false</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7f303-151"><paramref name="condition" /> 引數為 null。</span><span class="sxs-lookup"><span data-stu-id="7f303-151">The <paramref name="condition" /> argument is null.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="7f303-152"><paramref name="millisecondsTimeout" /> 為 -1 以外的負數，表示無限逾時。</span><span class="sxs-lookup"><span data-stu-id="7f303-152"><paramref name="millisecondsTimeout" /> is a negative number other than -1, which represents an infinite time-out.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/36012f42-34e5-4f86-adf4-973f433ed6c6"><span data-ttu-id="7f303-153">SpinWait</span><span class="sxs-lookup"><span data-stu-id="7f303-153">SpinWait</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/b2ac4e4a-051a-4f65-b4b9-f8e103aff195"><span data-ttu-id="7f303-154">作法：使用 SpinWait 實作兩階段等候作業</span><span class="sxs-lookup"><span data-stu-id="7f303-154">How to: Use SpinWait to Implement a Two-Phase Wait Operation</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SpinUntil">
      <MemberSignature Language="C#" Value="public static bool SpinUntil (Func&lt;bool&gt; condition, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool SpinUntil(class System.Func`1&lt;bool&gt; condition, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.SpinWait.SpinUntil(System.Func{System.Boolean},System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SpinUntil (condition As Func(Of Boolean), timeout As TimeSpan) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool SpinUntil(Func&lt;bool&gt; ^ condition, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="static member SpinUntil : Func&lt;bool&gt; * TimeSpan -&gt; bool" Usage="System.Threading.SpinWait.SpinUntil (condition, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Func&lt;System.Boolean&gt;" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="condition"><span data-ttu-id="7f303-155">委派以反覆執行，直到它傳回 true。</span><span class="sxs-lookup"><span data-stu-id="7f303-155">A delegate to be executed over and over until it returns true.</span></span></param>
        <param name="timeout"><span data-ttu-id="7f303-156">A <see cref="T:System.TimeSpan" /> ，代表要等候的毫秒數或 TimeSpan，表示無限期等候的-1 毫秒。</span><span class="sxs-lookup"><span data-stu-id="7f303-156">A <see cref="T:System.TimeSpan" /> that represents the number of milliseconds to wait, or a TimeSpan that represents -1 milliseconds to wait indefinitely.</span></span></param>
        <summary><span data-ttu-id="7f303-157">執行微調，直到滿足指定的條件，或直到指定的逾時過期為止。</span><span class="sxs-lookup"><span data-stu-id="7f303-157">Spins until the specified condition is satisfied or until the specified timeout is expired.</span></span></summary>
        <returns><span data-ttu-id="7f303-158">如果在逾時; 內符合的條件，則為 true。否則為 false</span><span class="sxs-lookup"><span data-stu-id="7f303-158">True if the condition is satisfied within the timeout; otherwise, false</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7f303-159"><paramref name="condition" /> 引數為 null。</span><span class="sxs-lookup"><span data-stu-id="7f303-159">The <paramref name="condition" /> argument is null.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="7f303-160"><paramref name="timeout" /> 是-1 毫秒，表示無限逾時-或-逾時大於以外的負數<see cref="F:System.Int32.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="7f303-160"><paramref name="timeout" /> is a negative number other than -1 milliseconds, which represents an infinite time-out -or- timeout is greater than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/36012f42-34e5-4f86-adf4-973f433ed6c6"><span data-ttu-id="7f303-161">SpinWait</span><span class="sxs-lookup"><span data-stu-id="7f303-161">SpinWait</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/b2ac4e4a-051a-4f65-b4b9-f8e103aff195"><span data-ttu-id="7f303-162">作法：使用 SpinWait 實作兩階段等候作業</span><span class="sxs-lookup"><span data-stu-id="7f303-162">How to: Use SpinWait to Implement a Two-Phase Wait Operation</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
