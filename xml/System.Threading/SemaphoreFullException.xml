<Type Name="SemaphoreFullException" FullName="System.Threading.SemaphoreFullException">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7911a6e69665eb977577a79ae51cbff6b20c98e9" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57936500" /></Metadata><TypeSignature Language="C#" Value="public class SemaphoreFullException : SystemException" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit SemaphoreFullException extends System.SystemException" />
  <TypeSignature Language="DocId" Value="T:System.Threading.SemaphoreFullException" />
  <TypeSignature Language="VB.NET" Value="Public Class SemaphoreFullException&#xA;Inherits SystemException" />
  <TypeSignature Language="C++ CLI" Value="public ref class SemaphoreFullException : SystemException" />
  <TypeSignature Language="F#" Value="type SemaphoreFullException = class&#xA;    inherit SystemException" />
  <AssemblyInfo>
    <AssemblyName>System.Threading</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Exception</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-4.5">System.SystemException</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("System, Version=2.0.0.0, Culture=Neutral, PublicKeyToken=b77a5c561934e089")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="3bf50-101">在已經達到最大計數的號誌上呼叫 <see cref="Overload:System.Threading.Semaphore.Release" /> 方法時，所擲回的例外狀況。</span><span class="sxs-lookup"><span data-stu-id="3bf50-101">The exception that is thrown when the <see cref="Overload:System.Threading.Semaphore.Release" /> method is called on a semaphore whose count is already at the maximum.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bf50-102">號誌計數會每次在執行緒進入號誌，及執行緒釋放號誌時，遞增遞減。</span><span class="sxs-lookup"><span data-stu-id="3bf50-102">The count on a semaphore is decremented each time a thread enters the semaphore, and incremented when a thread releases the semaphore.</span></span> <span data-ttu-id="3bf50-103">當計數為零時，後續的要求封鎖，直到其他執行緒釋放號誌。</span><span class="sxs-lookup"><span data-stu-id="3bf50-103">When the count is zero, subsequent requests block until other threads release the semaphore.</span></span> <span data-ttu-id="3bf50-104">所有執行緒都釋放號誌，計數會達到最大值時指定已建立的號誌。</span><span class="sxs-lookup"><span data-stu-id="3bf50-104">When all threads have released the semaphore, the count is at the maximum value specified when the semaphore was created.</span></span> <span data-ttu-id="3bf50-105">如果是程式設計錯誤會造成呼叫執行緒<xref:System.Threading.Semaphore.Release%2A?displayProperty=nameWithType>到目前為止，方法<xref:System.Threading.SemaphoreFullException>就會擲回。</span><span class="sxs-lookup"><span data-stu-id="3bf50-105">If a programming error causes a thread to call the <xref:System.Threading.Semaphore.Release%2A?displayProperty=nameWithType> method at this point, a <xref:System.Threading.SemaphoreFullException> is thrown.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3bf50-106"><xref:System.Threading.Semaphore>類別不會強制呼叫的執行緒身分識別<xref:System.Threading.WaitHandle.WaitOne%2A?displayProperty=nameWithType>和<xref:System.Threading.Semaphore.Release%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="3bf50-106">The <xref:System.Threading.Semaphore> class does not enforce thread identity on calls to the <xref:System.Threading.WaitHandle.WaitOne%2A?displayProperty=nameWithType> and <xref:System.Threading.Semaphore.Release%2A?displayProperty=nameWithType> methods.</span></span> <span data-ttu-id="3bf50-107">您不需要為同一個執行緒呼叫<xref:System.Threading.WaitHandle.WaitOne%2A>呼叫<xref:System.Threading.Semaphore.Release%2A>。</span><span class="sxs-lookup"><span data-stu-id="3bf50-107">It is not necessary for the same thread that called <xref:System.Threading.WaitHandle.WaitOne%2A> to call <xref:System.Threading.Semaphore.Release%2A>.</span></span>  
  
 <span data-ttu-id="3bf50-108"><xref:System.Threading.SemaphoreFullException> 不一定表示有問題發生例外狀況的程式碼。</span><span class="sxs-lookup"><span data-stu-id="3bf50-108"><xref:System.Threading.SemaphoreFullException> does not necessarily indicate a problem with the code where the exception occurred.</span></span> <span data-ttu-id="3bf50-109">請考慮下列案例：執行緒 A 和 B 的執行緒進入號誌，有兩個最大計數。</span><span class="sxs-lookup"><span data-stu-id="3bf50-109">Consider the following scenario: Thread A and thread B enter a semaphore that has a maximum count of two.</span></span> <span data-ttu-id="3bf50-110">執行緒 B 中的程式設計錯誤導致呼叫<xref:System.Threading.Semaphore.Release%2A>兩次，以便在號誌計數已滿。</span><span class="sxs-lookup"><span data-stu-id="3bf50-110">A programming error in thread B causes it to call <xref:System.Threading.Semaphore.Release%2A> twice, so that the count on the semaphore is full.</span></span> <span data-ttu-id="3bf50-111">如此一來，當執行緒 A 終於呼叫<xref:System.Threading.Semaphore.Release%2A>、<xref:System.Threading.SemaphoreFullException>就會擲回。</span><span class="sxs-lookup"><span data-stu-id="3bf50-111">As a result, when thread A eventually calls <xref:System.Threading.Semaphore.Release%2A>, a <xref:System.Threading.SemaphoreFullException> is thrown.</span></span>  
  
 <span data-ttu-id="3bf50-112">如需 <xref:System.Threading.SemaphoreFullException> 類別之執行個體的初始屬性值清單，請參閱 <xref:System.Threading.SemaphoreFullException.%23ctor> 建構函式。</span><span class="sxs-lookup"><span data-stu-id="3bf50-112">For a list of initial property values for an instance of the <xref:System.Threading.SemaphoreFullException> class, see the <xref:System.Threading.SemaphoreFullException.%23ctor> constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3bf50-113">下列程式碼範例示範如何在一個執行緒的程式設計錯誤導致<xref:System.Threading.SemaphoreFullException>另一個執行緒：兩個執行緒進入號誌。</span><span class="sxs-lookup"><span data-stu-id="3bf50-113">The following code example shows how a programming error in one thread can lead to a <xref:System.Threading.SemaphoreFullException> in another thread: Two threads enter a semaphore.</span></span> <span data-ttu-id="3bf50-114">兩次，而第一個執行緒仍在執行其工作時，第二個執行緒將釋放號誌。</span><span class="sxs-lookup"><span data-stu-id="3bf50-114">The second thread releases the semaphore twice, while the first thread is still executing its task.</span></span> <span data-ttu-id="3bf50-115">當第一個執行緒完成並釋放號誌時，號誌計數已滿，並擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="3bf50-115">When the first thread finishes and releases the semaphore, the semaphore count is already full and an exception is thrown.</span></span>  
  
 [!code-cpp[System.Threading.SemaphoreFullException#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.SemaphoreFullException/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.SemaphoreFullException#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.SemaphoreFullException/CS/source.cs#1)]
 [!code-vb[System.Threading.SemaphoreFullException#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.SemaphoreFullException/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Threading.Semaphore" />
    <related type="Article" href="~/docs/standard/threading/semaphore-and-semaphoreslim.md"><span data-ttu-id="3bf50-116">Semaphore</span><span class="sxs-lookup"><span data-stu-id="3bf50-116">Semaphore</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3bf50-117">初始化 <see cref="T:System.Threading.SemaphoreFullException" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="3bf50-117">Initializes a new instance of the <see cref="T:System.Threading.SemaphoreFullException" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SemaphoreFullException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.SemaphoreFullException.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SemaphoreFullException();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3bf50-118">使用預設值，初始化 <see cref="T:System.Threading.SemaphoreFullException" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="3bf50-118">Initializes a new instance of the <see cref="T:System.Threading.SemaphoreFullException" /> class with default values.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bf50-119">這個建構函式初始化<xref:System.Exception.Message%2A>屬性的新執行個體的系統提供的訊息，說明錯誤，例如 「 號誌中加入指定的計數會使它超過最大計數。 」</span><span class="sxs-lookup"><span data-stu-id="3bf50-119">This constructor initializes the <xref:System.Exception.Message%2A> property of the new instance to a system-supplied message that describes the error, such as "Adding the given count to the semaphore would cause it to exceed its maximum count."</span></span> <span data-ttu-id="3bf50-120">此訊息會考量目前的系統文化特性。</span><span class="sxs-lookup"><span data-stu-id="3bf50-120">This message takes into account the current system culture.</span></span>  
  
 <span data-ttu-id="3bf50-121">下表顯示 <xref:System.Threading.SemaphoreFullException> 類別執行個體的初始屬性值。</span><span class="sxs-lookup"><span data-stu-id="3bf50-121">The following table shows the initial property values for an instance of the <xref:System.Threading.SemaphoreFullException> class.</span></span>  
  
|<span data-ttu-id="3bf50-122">屬性</span><span class="sxs-lookup"><span data-stu-id="3bf50-122">Property</span></span>|<span data-ttu-id="3bf50-123">值</span><span class="sxs-lookup"><span data-stu-id="3bf50-123">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="3bf50-124">`null`.</span><span class="sxs-lookup"><span data-stu-id="3bf50-124">`null`.</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="3bf50-125">系統提供的錯誤訊息字串。</span><span class="sxs-lookup"><span data-stu-id="3bf50-125">The system-supplied error message string.</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Threading.Semaphore" />
        <related type="Article" href="~/docs/standard/threading/semaphore-and-semaphoreslim.md"><span data-ttu-id="3bf50-126">Semaphore</span><span class="sxs-lookup"><span data-stu-id="3bf50-126">Semaphore</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SemaphoreFullException (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.SemaphoreFullException.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SemaphoreFullException(System::String ^ message);" />
      <MemberSignature Language="F#" Value="new System.Threading.SemaphoreFullException : string -&gt; System.Threading.SemaphoreFullException" Usage="new System.Threading.SemaphoreFullException message" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="3bf50-127">解釋例外狀況原因的錯誤訊息。</span><span class="sxs-lookup"><span data-stu-id="3bf50-127">The error message that explains the reason for the exception.</span></span></param>
        <summary><span data-ttu-id="3bf50-128">使用指定的錯誤訊息，初始化 <see cref="T:System.Threading.SemaphoreFullException" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="3bf50-128">Initializes a new instance of the <see cref="T:System.Threading.SemaphoreFullException" /> class with a specified error message.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bf50-129">內容`message`的文字字串用意在於通知使用者有關例外狀況。</span><span class="sxs-lookup"><span data-stu-id="3bf50-129">The content of `message` is a text string intended to inform the user about the exception.</span></span> <span data-ttu-id="3bf50-130">這個建構函式的呼叫端必須確保這個字串已經被當地語系化 (為了目前系統的文化特性)。</span><span class="sxs-lookup"><span data-stu-id="3bf50-130">The caller of this constructor is required to ensure that this string has been localized for the current system culture.</span></span>  
  
 <span data-ttu-id="3bf50-131">下表顯示執行個體的初始屬性值<xref:System.Threading.SemaphoreFullException>使用這個建構函式初始化的類別。</span><span class="sxs-lookup"><span data-stu-id="3bf50-131">The following table shows the initial property values for an instance of the <xref:System.Threading.SemaphoreFullException> class initialized with this constructor.</span></span>  
  
|<span data-ttu-id="3bf50-132">屬性</span><span class="sxs-lookup"><span data-stu-id="3bf50-132">Property</span></span>|<span data-ttu-id="3bf50-133">值</span><span class="sxs-lookup"><span data-stu-id="3bf50-133">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="3bf50-134">`null`.</span><span class="sxs-lookup"><span data-stu-id="3bf50-134">`null`.</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="3bf50-135">`message`.</span><span class="sxs-lookup"><span data-stu-id="3bf50-135">`message`.</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Threading.Semaphore" />
        <related type="Article" href="~/docs/standard/threading/semaphore-and-semaphoreslim.md"><span data-ttu-id="3bf50-136">Semaphore</span><span class="sxs-lookup"><span data-stu-id="3bf50-136">Semaphore</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SemaphoreFullException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.SemaphoreFullException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SemaphoreFullException(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new System.Threading.SemaphoreFullException : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; System.Threading.SemaphoreFullException" Usage="new System.Threading.SemaphoreFullException (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="3bf50-137"><see cref="T:System.Runtime.Serialization.SerializationInfo" /> 物件，包含有關擲回之例外狀況的序列化物件資料。</span><span class="sxs-lookup"><span data-stu-id="3bf50-137">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object that holds the serialized object data about the exception being thrown.</span></span></param>
        <param name="context"><span data-ttu-id="3bf50-138"><see cref="T:System.Runtime.Serialization.StreamingContext" /> 物件，包含關於來源或目的端的內容資訊。</span><span class="sxs-lookup"><span data-stu-id="3bf50-138">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> object that contains contextual information about the source or destination.</span></span></param>
        <summary><span data-ttu-id="3bf50-139">使用序列化資料，初始化 <see cref="T:System.Threading.SemaphoreFullException" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="3bf50-139">Initializes a new instance of the <see cref="T:System.Threading.SemaphoreFullException" /> class with serialized data.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bf50-140">進行還原序列化 (Deserialization) 期間會呼叫這個建構函式，以便重新構成經由資料流傳送的例外狀況物件。</span><span class="sxs-lookup"><span data-stu-id="3bf50-140">This constructor is called during deserialization to reconstitute the exception object transmitted over a stream.</span></span> <span data-ttu-id="3bf50-141">如需詳細資訊，請參閱 < [XML 和 SOAP 序列化](~/docs/standard/serialization/xml-and-soap-serialization.md)。</span><span class="sxs-lookup"><span data-stu-id="3bf50-141">For more information, see [XML and SOAP Serialization](~/docs/standard/serialization/xml-and-soap-serialization.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Threading.Semaphore" />
        <related type="Article" href="~/docs/standard/threading/semaphore-and-semaphoreslim.md"><span data-ttu-id="3bf50-142">Semaphore</span><span class="sxs-lookup"><span data-stu-id="3bf50-142">Semaphore</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SemaphoreFullException (string message, Exception innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.SemaphoreFullException.#ctor(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, innerException As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SemaphoreFullException(System::String ^ message, Exception ^ innerException);" />
      <MemberSignature Language="F#" Value="new System.Threading.SemaphoreFullException : string * Exception -&gt; System.Threading.SemaphoreFullException" Usage="new System.Threading.SemaphoreFullException (message, innerException)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="3bf50-143">解釋例外狀況原因的錯誤訊息。</span><span class="sxs-lookup"><span data-stu-id="3bf50-143">The error message that explains the reason for the exception.</span></span></param>
        <param name="innerException"><span data-ttu-id="3bf50-144">做為目前例外狀況發生原因的例外狀況。</span><span class="sxs-lookup"><span data-stu-id="3bf50-144">The exception that is the cause of the current exception.</span></span> <span data-ttu-id="3bf50-145">如果 <paramref name="innerException" /> 參數不是 <see langword="null" />，則目前的例外狀況會在處理內部例外的 <see langword="catch" /> 區塊中引發。</span><span class="sxs-lookup"><span data-stu-id="3bf50-145">If the <paramref name="innerException" /> parameter is not <see langword="null" />, the current exception is raised in a <see langword="catch" /> block that handles the inner exception.</span></span></param>
        <summary><span data-ttu-id="3bf50-146">使用指定的錯誤訊息以及造成此例外狀況的內部例外狀況的參考，初始化 <see cref="T:System.Threading.SemaphoreFullException" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="3bf50-146">Initializes a new instance of the <see cref="T:System.Threading.SemaphoreFullException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3bf50-147">被擲回以做為前一個例外狀況直接結果的例外狀況，應該在 <xref:System.Exception.InnerException%2A> 屬性中包含對前一個例外狀況的參考。</span><span class="sxs-lookup"><span data-stu-id="3bf50-147">An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property.</span></span> <span data-ttu-id="3bf50-148"><xref:System.Exception.InnerException%2A> 屬性會傳回與傳入建構函式中相同的值；如果 `null` 屬性沒有提供內部例外值給建構函式，則傳回 <xref:System.Exception.InnerException%2A>。</span><span class="sxs-lookup"><span data-stu-id="3bf50-148">The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or `null` if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Threading.Semaphore" />
        <related type="Article" href="~/docs/standard/threading/semaphore-and-semaphoreslim.md"><span data-ttu-id="3bf50-149">Semaphore</span><span class="sxs-lookup"><span data-stu-id="3bf50-149">Semaphore</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>