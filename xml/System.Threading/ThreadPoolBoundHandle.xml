<Type Name="ThreadPoolBoundHandle" FullName="System.Threading.ThreadPoolBoundHandle">
  <Metadata><Meta Name="ms.openlocfilehash" Value="465d338dbc38447ed70aa0a16bc93a4dd04694b8" /><Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="11/20/2018" /><Meta Name="ms.locfileid" Value="52212255" /></Metadata><TypeSignature Language="C#" Value="public sealed class ThreadPoolBoundHandle : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ThreadPoolBoundHandle extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Threading.ThreadPoolBoundHandle" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ThreadPoolBoundHandle&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class ThreadPoolBoundHandle sealed : IDisposable" />
  <TypeSignature Language="F#" Value="type ThreadPoolBoundHandle = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.Overlapped</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netstandard-2.0">
      <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="95b97-101">表示 I/O 控制代碼，繫結至系統執行緒集區，並讓低階元件接收非同步 I/O 作業的通知。</span><span class="sxs-lookup"><span data-stu-id="95b97-101">Represents an I/O handle that is bound to the system thread pool and enables low-level components to receive notifications for asynchronous I/O operations.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="AllocateNativeOverlapped">
      <AssemblyInfo>
        <AssemblyName>System.Threading.Overlapped</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="95b97-102">傳回 <see cref="T:System.Threading.NativeOverlapped" /> 結構的 Unmanaged 指標。</span><span class="sxs-lookup"><span data-stu-id="95b97-102">Returns an unmanaged pointer to a <see cref="T:System.Threading.NativeOverlapped" /> structure.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AllocateNativeOverlapped">
      <MemberSignature Language="C#" Value="public System.Threading.NativeOverlapped* AllocateNativeOverlapped (System.Threading.PreAllocatedOverlapped preAllocated);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Threading.NativeOverlapped* AllocateNativeOverlapped(class System.Threading.PreAllocatedOverlapped preAllocated) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.ThreadPoolBoundHandle.AllocateNativeOverlapped(System.Threading.PreAllocatedOverlapped)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::NativeOverlapped* AllocateNativeOverlapped(System::Threading::PreAllocatedOverlapped ^ preAllocated);" />
      <MemberSignature Language="F#" Value="member this.AllocateNativeOverlapped : System.Threading.PreAllocatedOverlapped -&gt; nativeptr&lt;System.Threading.NativeOverlapped&gt;" Usage="threadPoolBoundHandle.AllocateNativeOverlapped preAllocated" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Overlapped</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.NativeOverlapped*</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="preAllocated" Type="System.Threading.PreAllocatedOverlapped" />
      </Parameters>
      <Docs>
        <param name="preAllocated"><span data-ttu-id="95b97-103">要從中建立 <see cref="T:System.Threading.NativeOverlapped" /> 指標的物件。</span><span class="sxs-lookup"><span data-stu-id="95b97-103">An object from which to create the <see cref="T:System.Threading.NativeOverlapped" /> pointer.</span></span></param>
        <summary><span data-ttu-id="95b97-104">傳回 <see cref="T:System.Threading.NativeOverlapped" /> 結構的 Unmanaged 指標，此結構使用回呼狀態以及與指定 <see cref="T:System.Threading.PreAllocatedOverlapped" /> 物件建立關聯的緩衝區。</span><span class="sxs-lookup"><span data-stu-id="95b97-104">Returns an unmanaged pointer to a <see cref="T:System.Threading.NativeOverlapped" /> structure using the callback state and buffers associated with the specified <see cref="T:System.Threading.PreAllocatedOverlapped" /> object.</span></span></summary>
        <returns><span data-ttu-id="95b97-105"><see cref="T:System.Threading.NativeOverlapped" /> 結構的 Unmanaged 指標。</span><span class="sxs-lookup"><span data-stu-id="95b97-105">An unmanaged pointer to a <see cref="T:System.Threading.NativeOverlapped" /> structure.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95b97-106">這個方法所傳回的 unmanaged 的指標可以傳遞至重疊的 I/O 作業中的作業系統。</span><span class="sxs-lookup"><span data-stu-id="95b97-106">The unmanaged pointer returned by this method can be passed to the operating system in overlapped I/O operations.</span></span> <span data-ttu-id="95b97-107"><xref:System.Threading.NativeOverlapped>結構中實體記憶體中，直到修正<xref:System.Threading.ThreadPoolBoundHandle.FreeNativeOverlapped%2A>呼叫方法。</span><span class="sxs-lookup"><span data-stu-id="95b97-107">The  <xref:System.Threading.NativeOverlapped> structure is fixed in physical memory until the <xref:System.Threading.ThreadPoolBoundHandle.FreeNativeOverlapped%2A> method is called.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="95b97-108"><paramref name="preAllocated" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="95b97-108"><paramref name="preAllocated" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="95b97-109">另一個 I/O 作業目前正在使用 <paramref name="preAllocated" />。</span><span class="sxs-lookup"><span data-stu-id="95b97-109"><paramref name="preAllocated" /> is currently in use for another I/O operation.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="95b97-110">處置 <see cref="T:System.Threading.ThreadPoolBoundHandle" /> 後才呼叫這個方法。</span><span class="sxs-lookup"><span data-stu-id="95b97-110">This method was called after the <see cref="T:System.Threading.ThreadPoolBoundHandle" /> was disposed.</span></span>  
  
<span data-ttu-id="95b97-111">-或-</span><span class="sxs-lookup"><span data-stu-id="95b97-111">-or-</span></span> 
<span data-ttu-id="95b97-112">處置 <paramref name="preAllocated" /> 後才呼叫這個方法。</span><span class="sxs-lookup"><span data-stu-id="95b97-112">This method was called after <paramref name="preAllocated" /> was disposed.</span></span></exception>
        <altmember cref="T:System.Threading.PreAllocatedOverlapped" />
      </Docs>
    </Member>
    <Member MemberName="AllocateNativeOverlapped">
      <MemberSignature Language="C#" Value="public System.Threading.NativeOverlapped* AllocateNativeOverlapped (System.Threading.IOCompletionCallback callback, object state, object pinData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Threading.NativeOverlapped* AllocateNativeOverlapped(class System.Threading.IOCompletionCallback callback, object state, object pinData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.ThreadPoolBoundHandle.AllocateNativeOverlapped(System.Threading.IOCompletionCallback,System.Object,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::NativeOverlapped* AllocateNativeOverlapped(System::Threading::IOCompletionCallback ^ callback, System::Object ^ state, System::Object ^ pinData);" />
      <MemberSignature Language="F#" Value="member this.AllocateNativeOverlapped : System.Threading.IOCompletionCallback * obj * obj -&gt; nativeptr&lt;System.Threading.NativeOverlapped&gt;" Usage="threadPoolBoundHandle.AllocateNativeOverlapped (callback, state, pinData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Overlapped</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.NativeOverlapped*</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Threading.IOCompletionCallback" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="pinData" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="95b97-113">委派，表示當非同步 I/O 作業完成時叫用的回呼方法。</span><span class="sxs-lookup"><span data-stu-id="95b97-113">A delegate that represents the callback method to invoke when the asynchronous I/O operation completes.</span></span></param>
        <param name="state"><span data-ttu-id="95b97-114">使用者提供的物件，可區別此 <see cref="T:System.Threading.NativeOverlapped" /> 執行個體和其他 <see cref="T:System.Threading.NativeOverlapped" /> 執行個體。</span><span class="sxs-lookup"><span data-stu-id="95b97-114">A user-provided object that distinguishes this <see cref="T:System.Threading.NativeOverlapped" /> instance from other <see cref="T:System.Threading.NativeOverlapped" /> instances.</span></span></param>
        <param name="pinData"><span data-ttu-id="95b97-115">物件或物件陣列，代表作業的輸入或輸出緩衝區或 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="95b97-115">An object or array of objects that represent the input or output buffer for the operation, or <see langword="null" />.</span></span> <span data-ttu-id="95b97-116">每個物件代表一個緩衝區，例如位元組陣列。</span><span class="sxs-lookup"><span data-stu-id="95b97-116">Each object represents a buffer, such an array of bytes.</span></span></param>
        <summary><span data-ttu-id="95b97-117">傳回 <see cref="T:System.Threading.NativeOverlapped" /> 結構的 Unmanaged 指標，指定於非同步 I/O 作業完成時叫用的委派、提供內容的使用者提供物件，以及作為緩衝區的 Managed 物件。</span><span class="sxs-lookup"><span data-stu-id="95b97-117">Returns an unmanaged pointer to a <see cref="T:System.Threading.NativeOverlapped" /> structure, specifying a delegate that is invoked when the asynchronous I/O operation is complete, a user-provided object that supplies context, and managed objects that serve as buffers.</span></span></summary>
        <returns><span data-ttu-id="95b97-118"><see cref="T:System.Threading.NativeOverlapped" /> 結構的 Unmanaged 指標。</span><span class="sxs-lookup"><span data-stu-id="95b97-118">An unmanaged pointer to a <see cref="T:System.Threading.NativeOverlapped" /> structure.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="95b97-119"><paramref name="callback" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="95b97-119"><paramref name="callback" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="95b97-120">處置 <see cref="T:System.Threading.ThreadPoolBoundHandle" /> 物件後才呼叫這個方法。</span><span class="sxs-lookup"><span data-stu-id="95b97-120">This method was called after the <see cref="T:System.Threading.ThreadPoolBoundHandle" /> object was disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BindHandle">
      <MemberSignature Language="C#" Value="public static System.Threading.ThreadPoolBoundHandle BindHandle (System.Runtime.InteropServices.SafeHandle handle);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.ThreadPoolBoundHandle BindHandle(class System.Runtime.InteropServices.SafeHandle handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.ThreadPoolBoundHandle.BindHandle(System.Runtime.InteropServices.SafeHandle)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BindHandle (handle As SafeHandle) As ThreadPoolBoundHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Threading::ThreadPoolBoundHandle ^ BindHandle(System::Runtime::InteropServices::SafeHandle ^ handle);" />
      <MemberSignature Language="F#" Value="static member BindHandle : System.Runtime.InteropServices.SafeHandle -&gt; System.Threading.ThreadPoolBoundHandle" Usage="System.Threading.ThreadPoolBoundHandle.BindHandle handle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Overlapped</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.ThreadPoolBoundHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="System.Runtime.InteropServices.SafeHandle" />
      </Parameters>
      <Docs>
        <param name="handle"><span data-ttu-id="95b97-121">物件，持有作業系統控制代碼。</span><span class="sxs-lookup"><span data-stu-id="95b97-121">An object that holds the operating system handle.</span></span> <span data-ttu-id="95b97-122">控制代碼必須已經對 Unmanaged 程式碼中的重疊 I/O 開啟。</span><span class="sxs-lookup"><span data-stu-id="95b97-122">The handle must have been opened for overlapped I/O in unmanaged code.</span></span></param>
        <summary><span data-ttu-id="95b97-123">傳回指定控制代碼的 <see cref="T:System.Threading.ThreadPoolBoundHandle" />，它繫結至系統執行緒集區。</span><span class="sxs-lookup"><span data-stu-id="95b97-123">Returns a <see cref="T:System.Threading.ThreadPoolBoundHandle" /> for the specified handle, which is bound to the system thread pool.</span></span></summary>
        <returns><span data-ttu-id="95b97-124"><paramref name="handle" /> 的 <see cref="T:System.Threading.ThreadPoolBoundHandle" />，它繫結至系統執行緒集區。</span><span class="sxs-lookup"><span data-stu-id="95b97-124">A <see cref="T:System.Threading.ThreadPoolBoundHandle" /> for <paramref name="handle" />, which is bound to the system thread pool.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95b97-125">這個方法應該呼叫每個控制代碼的一次。</span><span class="sxs-lookup"><span data-stu-id="95b97-125">This method should be called once per handle.</span></span>  
  
 <span data-ttu-id="95b97-126"><xref:System.Threading.ThreadPoolBoundHandle>物件不會擁有權`handle`; 它會保持呼叫者的責任<xref:System.Runtime.InteropServices.SafeHandle.Dispose%2A>。</span><span class="sxs-lookup"><span data-stu-id="95b97-126">The <xref:System.Threading.ThreadPoolBoundHandle> object does not take ownership of `handle`; it remains the responsibility of the caller to call <xref:System.Runtime.InteropServices.SafeHandle.Dispose%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="95b97-127"><paramref name="handle" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="95b97-127"><paramref name="handle" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="95b97-128">已處置 <paramref name="handle" />。</span><span class="sxs-lookup"><span data-stu-id="95b97-128"><paramref name="handle" /> has been disposed.</span></span>  
  
<span data-ttu-id="95b97-129">-或-</span><span class="sxs-lookup"><span data-stu-id="95b97-129">-or-</span></span> 
 <span data-ttu-id="95b97-130"><paramref name="handle" /> 不表示有效的 I/O 控制代碼。</span><span class="sxs-lookup"><span data-stu-id="95b97-130"><paramref name="handle" /> does not refer to a valid I/O handle.</span></span>  
  
<span data-ttu-id="95b97-131">-或-</span><span class="sxs-lookup"><span data-stu-id="95b97-131">-or-</span></span> 
 <span data-ttu-id="95b97-132"><paramref name="handle" /> 是指重疊 I/O 尚未開啟的控制代碼。</span><span class="sxs-lookup"><span data-stu-id="95b97-132"><paramref name="handle" /> refers to a handle that has not been opened for overlapped I/O.</span></span>  
  
<span data-ttu-id="95b97-133">-或-</span><span class="sxs-lookup"><span data-stu-id="95b97-133">-or-</span></span> 
 <span data-ttu-id="95b97-134"><paramref name="handle" /> 是指已繫結的控制代碼。</span><span class="sxs-lookup"><span data-stu-id="95b97-134"><paramref name="handle" /> refers to a handle that has already been bound.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.ThreadPoolBoundHandle.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="threadPoolBoundHandle.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Overlapped</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="95b97-135">釋放 <see cref="T:System.Threading.ThreadPoolBoundHandle" /> 執行個體使用的所有 Unmanaged 資源。</span><span class="sxs-lookup"><span data-stu-id="95b97-135">Releases all unmanaged resources used by the <see cref="T:System.Threading.ThreadPoolBoundHandle" /> instance.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FreeNativeOverlapped">
      <MemberSignature Language="C#" Value="public void FreeNativeOverlapped (System.Threading.NativeOverlapped* overlapped);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FreeNativeOverlapped(valuetype System.Threading.NativeOverlapped* overlapped) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.ThreadPoolBoundHandle.FreeNativeOverlapped(System.Threading.NativeOverlapped*)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FreeNativeOverlapped(System::Threading::NativeOverlapped* overlapped);" />
      <MemberSignature Language="F#" Value="member this.FreeNativeOverlapped : nativeptr&lt;System.Threading.NativeOverlapped&gt; -&gt; unit" Usage="threadPoolBoundHandle.FreeNativeOverlapped overlapped" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Overlapped</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="overlapped" Type="System.Threading.NativeOverlapped*" />
      </Parameters>
      <Docs>
        <param name="overlapped"><span data-ttu-id="95b97-136">要釋放之 <see cref="T:System.Threading.NativeOverlapped" /> 結構的 Unmanaged 指標。</span><span class="sxs-lookup"><span data-stu-id="95b97-136">An unmanaged pointer to the <see cref="T:System.Threading.NativeOverlapped" /> structure structure to be freed.</span></span></param>
        <summary><span data-ttu-id="95b97-137">釋放 <see cref="Overload:System.Threading.ThreadPoolBoundHandle.AllocateNativeOverlapped" /> 方法所配置之與 <see cref="T:System.Threading.NativeOverlapped" /> 結構建立關聯的記憶體。</span><span class="sxs-lookup"><span data-stu-id="95b97-137">Frees the memory associated with a <see cref="T:System.Threading.NativeOverlapped" /> structure allocated by the <see cref="Overload:System.Threading.ThreadPoolBoundHandle.AllocateNativeOverlapped" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!CAUTION]
>  <span data-ttu-id="95b97-138">您必須呼叫<xref:System.Threading.ThreadPoolBoundHandle.FreeNativeOverlapped%2A>正好一次上的方法每隔<xref:System.Threading.NativeOverlapped>使用所配置的 unmanaged 的指標<xref:System.Threading.ThreadPoolBoundHandle.AllocateNativeOverlapped%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="95b97-138">You must call the <xref:System.Threading.ThreadPoolBoundHandle.FreeNativeOverlapped%2A> method exactly once on every <xref:System.Threading.NativeOverlapped> unmanaged pointer allocated by using the <xref:System.Threading.ThreadPoolBoundHandle.AllocateNativeOverlapped%2A> method.</span></span> <span data-ttu-id="95b97-139">如果您不能呼叫<xref:System.Threading.ThreadPoolBoundHandle.FreeNativeOverlapped%2A>方法中，您將會造成記憶體流失。</span><span class="sxs-lookup"><span data-stu-id="95b97-139">If you do not call the <xref:System.Threading.ThreadPoolBoundHandle.FreeNativeOverlapped%2A> method, you will leak memory.</span></span> <span data-ttu-id="95b97-140">如果您呼叫<xref:System.Threading.ThreadPoolBoundHandle.FreeNativeOverlapped%2A>方法超過一次在同一個<xref:System.Threading.NativeOverlapped>unmanaged 的指標，記憶體將會損毀。</span><span class="sxs-lookup"><span data-stu-id="95b97-140">If you call the <xref:System.Threading.ThreadPoolBoundHandle.FreeNativeOverlapped%2A> method method more than once on the same <xref:System.Threading.NativeOverlapped> unmanaged pointer, memory will be corrupted.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="95b97-141"><paramref name="overlapped" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="95b97-141"><paramref name="overlapped" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="95b97-142">處置 <see cref="T:System.Threading.ThreadPoolBoundHandle" /> 物件後才呼叫這個方法。</span><span class="sxs-lookup"><span data-stu-id="95b97-142">This method was called after the <see cref="T:System.Threading.ThreadPoolBoundHandle" /> object was disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetNativeOverlappedState">
      <MemberSignature Language="C#" Value="public static object GetNativeOverlappedState (System.Threading.NativeOverlapped* overlapped);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetNativeOverlappedState(valuetype System.Threading.NativeOverlapped* overlapped) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.ThreadPoolBoundHandle.GetNativeOverlappedState(System.Threading.NativeOverlapped*)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetNativeOverlappedState(System::Threading::NativeOverlapped* overlapped);" />
      <MemberSignature Language="F#" Value="static member GetNativeOverlappedState : nativeptr&lt;System.Threading.NativeOverlapped&gt; -&gt; obj" Usage="System.Threading.ThreadPoolBoundHandle.GetNativeOverlappedState overlapped" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Overlapped</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="overlapped" Type="System.Threading.NativeOverlapped*" />
      </Parameters>
      <Docs>
        <param name="overlapped"><span data-ttu-id="95b97-143">傳回相關聯的使用者提供物件之 <see cref="T:System.Threading.NativeOverlapped" /> 結構的 Unmanaged 指標。</span><span class="sxs-lookup"><span data-stu-id="95b97-143">An unmanaged pointer to the <see cref="T:System.Threading.NativeOverlapped" /> structure from which to return the associated user-provided object.</span></span></param>
        <summary><span data-ttu-id="95b97-144">傳回透過呼叫 <see cref="M:System.Threading.ThreadPoolBoundHandle.AllocateNativeOverlapped(System.Threading.IOCompletionCallback,System.Object,System.Object)" /> 方法配置 <see cref="T:System.Threading.NativeOverlapped" /> 執行個體時，指定的使用者提供物件。</span><span class="sxs-lookup"><span data-stu-id="95b97-144">Returns the user-provided object that was specified when the <see cref="T:System.Threading.NativeOverlapped" /> instance was allocated by calling the <see cref="M:System.Threading.ThreadPoolBoundHandle.AllocateNativeOverlapped(System.Threading.IOCompletionCallback,System.Object,System.Object)" /> method.</span></span></summary>
        <returns><span data-ttu-id="95b97-145">使用者提供的物件，可區別此 <see cref="T:System.Threading.NativeOverlapped" /> 執行個體和其他 <see cref="T:System.Threading.NativeOverlapped" /> 執行個體，或透過呼叫 <see cref="Overload:System.Threading.ThreadPoolBoundHandle.AllocateNativeOverlapped" /> 方法配置執行個體時如未指定，則為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="95b97-145">A user-provided object that distinguishes this <see cref="T:System.Threading.NativeOverlapped" /> instance from other <see cref="T:System.Threading.NativeOverlapped" /> instances, or <see langword="null" /> if one was not specified when the intstance was allocated by calling the <see cref="Overload:System.Threading.ThreadPoolBoundHandle.AllocateNativeOverlapped" /> method.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="95b97-146"><paramref name="overlapped" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="95b97-146"><paramref name="overlapped" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Handle">
      <MemberSignature Language="C#" Value="public System.Runtime.InteropServices.SafeHandle Handle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Runtime.InteropServices.SafeHandle Handle" />
      <MemberSignature Language="DocId" Value="P:System.Threading.ThreadPoolBoundHandle.Handle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Handle As SafeHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::InteropServices::SafeHandle ^ Handle { System::Runtime::InteropServices::SafeHandle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Handle : System.Runtime.InteropServices.SafeHandle" Usage="System.Threading.ThreadPoolBoundHandle.Handle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Overlapped</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.SafeHandle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="95b97-147">取得繫結作業系統控制代碼。</span><span class="sxs-lookup"><span data-stu-id="95b97-147">Gets the bound operating system handle.</span></span></summary>
        <value><span data-ttu-id="95b97-148">物件，持有繫結作業系統控制代碼。</span><span class="sxs-lookup"><span data-stu-id="95b97-148">An object that holds the bound operating system handle.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>