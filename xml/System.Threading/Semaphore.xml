<Type Name="Semaphore" FullName="System.Threading.Semaphore">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="47dc3c315c3032983e55c27b5310ada10bd2501f" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36406827" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class Semaphore : System.Threading.WaitHandle" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Semaphore extends System.Threading.WaitHandle" />
  <TypeSignature Language="DocId" Value="T:System.Threading.Semaphore" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Semaphore&#xA;Inherits WaitHandle" />
  <TypeSignature Language="C++ CLI" Value="public ref class Semaphore sealed : System::Threading::WaitHandle" />
  <TypeSignature Language="F#" Value="type Semaphore = class&#xA;    inherit WaitHandle" />
  <AssemblyInfo>
    <AssemblyName>System.Threading</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Threading.WaitHandle</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="35d9c-101">Limits the number of threads that can access a resource or pool of resources concurrently.</span>
      <span class="sxs-lookup">
        <span data-stu-id="35d9c-101">Limits the number of threads that can access a resource or pool of resources concurrently.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35d9c-102">使用<xref:System.Threading.Semaphore>類別來控制存取權的資源集區。</span><span class="sxs-lookup"><span data-stu-id="35d9c-102">Use the <xref:System.Threading.Semaphore> class to control access to a pool of resources.</span></span> <span data-ttu-id="35d9c-103">執行緒進入號誌，藉由呼叫<xref:System.Threading.WaitHandle.WaitOne%2A>方法，都繼承自<xref:System.Threading.WaitHandle>類別，並藉由呼叫釋放號誌<xref:System.Threading.Semaphore.Release%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="35d9c-103">Threads enter the semaphore by calling the <xref:System.Threading.WaitHandle.WaitOne%2A> method, which is inherited from the <xref:System.Threading.WaitHandle> class, and release the semaphore by calling the <xref:System.Threading.Semaphore.Release%2A> method.</span></span>  
  
 <span data-ttu-id="35d9c-104">號誌計數會每次在執行緒進入號誌，及執行緒釋放號誌時遞增遞減。</span><span class="sxs-lookup"><span data-stu-id="35d9c-104">The count on a semaphore is decremented each time a thread enters the semaphore, and incremented when a thread releases the semaphore.</span></span> <span data-ttu-id="35d9c-105">當計數為零時，後續的要求封鎖，直到其他的執行緒釋放號誌。</span><span class="sxs-lookup"><span data-stu-id="35d9c-105">When the count is zero, subsequent requests block until other threads release the semaphore.</span></span> <span data-ttu-id="35d9c-106">所有執行緒都釋放號誌，計數為最大值時指定已建立號誌。</span><span class="sxs-lookup"><span data-stu-id="35d9c-106">When all threads have released the semaphore, the count is at the maximum value specified when the semaphore was created.</span></span>  
  
 <span data-ttu-id="35d9c-107">沒有任何的保證的順序，例如 FIFO 或 LIFO，在其中已封鎖的執行緒進入號誌。</span><span class="sxs-lookup"><span data-stu-id="35d9c-107">There is no guaranteed order, such as FIFO or LIFO, in which blocked threads enter the semaphore.</span></span>  
  
 <span data-ttu-id="35d9c-108">執行緒可以進入號誌多次，藉由呼叫<xref:System.Threading.WaitHandle.WaitOne%2A>方法重複。</span><span class="sxs-lookup"><span data-stu-id="35d9c-108">A thread can enter the semaphore multiple times, by calling the <xref:System.Threading.WaitHandle.WaitOne%2A> method repeatedly.</span></span> <span data-ttu-id="35d9c-109">若要釋放部分或所有這些項目，執行緒可以呼叫無參數<xref:System.Threading.Semaphore.Release>多的時間，或可以呼叫的方法多載<xref:System.Threading.Semaphore.Release%28System.Int32%29>方法多載會指定釋出的項目數目。</span><span class="sxs-lookup"><span data-stu-id="35d9c-109">To release some or all of these entries, the thread can call the parameterless <xref:System.Threading.Semaphore.Release> method overload multiple times, or it can call the <xref:System.Threading.Semaphore.Release%28System.Int32%29> method overload that specifies the number of entries to be released.</span></span>  
  
 <span data-ttu-id="35d9c-110"><xref:System.Threading.Semaphore>類別不會強制執行呼叫的執行緒識別<xref:System.Threading.WaitHandle.WaitOne%2A>或<xref:System.Threading.Semaphore.Release%2A>。</span><span class="sxs-lookup"><span data-stu-id="35d9c-110">The <xref:System.Threading.Semaphore> class does not enforce thread identity on calls to <xref:System.Threading.WaitHandle.WaitOne%2A> or <xref:System.Threading.Semaphore.Release%2A>.</span></span> <span data-ttu-id="35d9c-111">它是程式設計人員的責任在於確保的執行緒沒有釋放號誌太多次。</span><span class="sxs-lookup"><span data-stu-id="35d9c-111">It is the programmer's responsibility to ensure that threads do not release the semaphore too many times.</span></span> <span data-ttu-id="35d9c-112">例如，假設某個號誌的最大計數為 2，且執行緒 A 和執行緒 B 都進入號誌。</span><span class="sxs-lookup"><span data-stu-id="35d9c-112">For example, suppose a semaphore has a maximum count of two, and that thread A and thread B both enter the semaphore.</span></span> <span data-ttu-id="35d9c-113">如果執行緒 B 中的程式設計錯誤導致呼叫<xref:System.Threading.Semaphore.Release%2A>兩次，這兩個呼叫會成功。</span><span class="sxs-lookup"><span data-stu-id="35d9c-113">If a programming error in thread B causes it to call <xref:System.Threading.Semaphore.Release%2A> twice, both calls succeed.</span></span> <span data-ttu-id="35d9c-114">此時號誌計數已滿，當執行緒 A 終於呼叫 <xref:System.Threading.Semaphore.Release%2A> 時，就會擲回 <xref:System.Threading.SemaphoreFullException>。</span><span class="sxs-lookup"><span data-stu-id="35d9c-114">The count on the semaphore is full, and when thread A eventually calls <xref:System.Threading.Semaphore.Release%2A>, a <xref:System.Threading.SemaphoreFullException> is thrown.</span></span>  
  
 <span data-ttu-id="35d9c-115">號誌有兩種類型： 本機號誌和具名的系統號誌。</span><span class="sxs-lookup"><span data-stu-id="35d9c-115">Semaphores are of two types: local semaphores and named system semaphores.</span></span> <span data-ttu-id="35d9c-116">如果您建立<xref:System.Threading.Semaphore>物件使用的建構函式接受名稱，它是與作業系統號誌，該名稱的關聯。</span><span class="sxs-lookup"><span data-stu-id="35d9c-116">If you create a <xref:System.Threading.Semaphore> object using a constructor that accepts a name, it is associated with an operating-system semaphore of that name.</span></span> <span data-ttu-id="35d9c-117">具名的系統號誌可在作業系統各處並可用來同步處理程序的活動。</span><span class="sxs-lookup"><span data-stu-id="35d9c-117">Named system semaphores are visible throughout the operating system, and can be used to synchronize the activities of processes.</span></span> <span data-ttu-id="35d9c-118">您可以建立多個<xref:System.Threading.Semaphore>物件，代表相同具名系統號誌，而且您可以使用<xref:System.Threading.Semaphore.OpenExisting%2A>方法來開啟現有的具名系統號誌。</span><span class="sxs-lookup"><span data-stu-id="35d9c-118">You can create multiple <xref:System.Threading.Semaphore> objects that represent the same named system semaphore, and you can use the <xref:System.Threading.Semaphore.OpenExisting%2A> method to open an existing named system semaphore.</span></span>  
  
 <span data-ttu-id="35d9c-119">只有在您的程序內，存在本機號誌。</span><span class="sxs-lookup"><span data-stu-id="35d9c-119">A local semaphore exists only within your process.</span></span> <span data-ttu-id="35d9c-120">在處理序內，只要是參考了本機 <xref:System.Threading.Semaphore> 物件的執行緒，就可使用本機 Mutex。</span><span class="sxs-lookup"><span data-stu-id="35d9c-120">It can be used by any thread in your process that has a reference to the local <xref:System.Threading.Semaphore> object.</span></span> <span data-ttu-id="35d9c-121">每個<xref:System.Threading.Semaphore>物件是不同的區域號誌。</span><span class="sxs-lookup"><span data-stu-id="35d9c-121">Each <xref:System.Threading.Semaphore> object is a separate local semaphore.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="35d9c-122">下列程式碼範例會建立信號的最大計數的三個與初始計數為零。</span><span class="sxs-lookup"><span data-stu-id="35d9c-122">The following code example creates a semaphore with a maximum count of three and an initial count of zero.</span></span> <span data-ttu-id="35d9c-123">此範例會啟動五個執行緒，封鎖而等待號誌。</span><span class="sxs-lookup"><span data-stu-id="35d9c-123">The example starts five threads, which block waiting for the semaphore.</span></span> <span data-ttu-id="35d9c-124">主要執行緒會使用<xref:System.Threading.Semaphore.Release%28System.Int32%29>號誌計數增加至其最大值，讓三個執行緒進入號誌的方法多載。</span><span class="sxs-lookup"><span data-stu-id="35d9c-124">The main thread uses the <xref:System.Threading.Semaphore.Release%28System.Int32%29> method overload to increase the semaphore count to its maximum, allowing three threads to enter the semaphore.</span></span> <span data-ttu-id="35d9c-125">每個執行緒使用<xref:System.Threading.Thread.Sleep%2A?displayProperty=nameWithType>方法等候一秒，以模擬工作，然後呼叫<xref:System.Threading.Semaphore.Release>方法多載來釋放號誌。</span><span class="sxs-lookup"><span data-stu-id="35d9c-125">Each thread uses the <xref:System.Threading.Thread.Sleep%2A?displayProperty=nameWithType> method to wait for one second, to simulate work, and then calls the <xref:System.Threading.Semaphore.Release> method overload to release the semaphore.</span></span> <span data-ttu-id="35d9c-126">已釋放號誌，每次會顯示先前的號誌計數。</span><span class="sxs-lookup"><span data-stu-id="35d9c-126">Each time the semaphore is released, the previous semaphore count is displayed.</span></span> <span data-ttu-id="35d9c-127">主控台訊息追蹤號誌的使用。</span><span class="sxs-lookup"><span data-stu-id="35d9c-127">Console messages track semaphore use.</span></span> <span data-ttu-id="35d9c-128">模擬的工作間隔會稍微增加每個執行緒，可讓輸出更容易閱讀。</span><span class="sxs-lookup"><span data-stu-id="35d9c-128">The simulated work interval is increased slightly for each thread, to make the output easier to read.</span></span>  
  
 [!code-cpp[System.Threading.Semaphore2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Semaphore2/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.Semaphore2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Semaphore2/CS/source.cs#1)]
 [!code-vb[System.Threading.Semaphore2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Semaphore2/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="35d9c-129">此型別具備執行緒安全。</span>
      <span class="sxs-lookup">
        <span data-stu-id="35d9c-129">This type is thread safe.</span>
      </span>
    </threadsafe>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="35d9c-130">Initializes a new instance of the <see cref="T:System.Threading.Semaphore" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35d9c-130">Initializes a new instance of the <see cref="T:System.Threading.Semaphore" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Semaphore (int initialCount, int maximumCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 initialCount, int32 maximumCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Semaphore.#ctor(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (initialCount As Integer, maximumCount As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Semaphore(int initialCount, int maximumCount);" />
      <MemberSignature Language="F#" Value="new System.Threading.Semaphore : int * int -&gt; System.Threading.Semaphore" Usage="new System.Threading.Semaphore (initialCount, maximumCount)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="initialCount" Type="System.Int32" />
        <Parameter Name="maximumCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="initialCount">
          <span data-ttu-id="35d9c-131">The initial number of requests for the semaphore that can be granted concurrently.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35d9c-131">The initial number of requests for the semaphore that can be granted concurrently.</span>
          </span>
        </param>
        <param name="maximumCount">
          <span data-ttu-id="35d9c-132">The maximum number of requests for the semaphore that can be granted concurrently.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35d9c-132">The maximum number of requests for the semaphore that can be granted concurrently.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="35d9c-133">Initializes a new instance of the <see cref="T:System.Threading.Semaphore" /> class, specifying the initial number of entries and the maximum number of concurrent entries.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35d9c-133">Initializes a new instance of the <see cref="T:System.Threading.Semaphore" /> class, specifying the initial number of entries and the maximum number of concurrent entries.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35d9c-134">這個建構函式會初始化未命名的號誌。</span><span class="sxs-lookup"><span data-stu-id="35d9c-134">This constructor initializes an unnamed semaphore.</span></span> <span data-ttu-id="35d9c-135">使用這類號誌的執行個體的所有執行緒都必須都有執行個體的參考。</span><span class="sxs-lookup"><span data-stu-id="35d9c-135">All threads that use an instance of such a semaphore must have references to the instance.</span></span>  
  
 <span data-ttu-id="35d9c-136">如果`initialCount`是小於`maximumCount`，結果是相同的目前執行緒已呼叫<xref:System.Threading.WaitHandle.WaitOne%2A>(`maximumCount`減去`initialCount`) 時間。</span><span class="sxs-lookup"><span data-stu-id="35d9c-136">If `initialCount` is less than `maximumCount`, the effect is the same as if the current thread had called <xref:System.Threading.WaitHandle.WaitOne%2A> (`maximumCount` minus `initialCount`) times.</span></span> <span data-ttu-id="35d9c-137">如果您不想要保留之執行緒建立號誌的任何項目，使用相同號碼`maximumCount`和`initialCount`。</span><span class="sxs-lookup"><span data-stu-id="35d9c-137">If you do not want to reserve any entries for the thread that creates the semaphore, use the same number for `maximumCount` and `initialCount`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="35d9c-138">下列範例會建立一個號誌的最大計數，這三個與初始計數為零。</span><span class="sxs-lookup"><span data-stu-id="35d9c-138">The following example creates a semaphore with a maximum count of three and an initial count of zero.</span></span> <span data-ttu-id="35d9c-139">此範例會啟動五個執行緒，封鎖而等待號誌。</span><span class="sxs-lookup"><span data-stu-id="35d9c-139">The example starts five threads, which block waiting for the semaphore.</span></span> <span data-ttu-id="35d9c-140">主要執行緒會使用<xref:System.Threading.Semaphore.Release%28System.Int32%29>號誌計數增加至其最大值，讓三個執行緒進入號誌的方法多載。</span><span class="sxs-lookup"><span data-stu-id="35d9c-140">The main thread uses the <xref:System.Threading.Semaphore.Release%28System.Int32%29> method overload to increase the semaphore count to its maximum, allowing three threads to enter the semaphore.</span></span> <span data-ttu-id="35d9c-141">每個執行緒使用<xref:System.Threading.Thread.Sleep%2A?displayProperty=nameWithType>方法等候一秒，以模擬工作，然後呼叫<xref:System.Threading.Semaphore.Release>方法多載來釋放號誌。</span><span class="sxs-lookup"><span data-stu-id="35d9c-141">Each thread uses the <xref:System.Threading.Thread.Sleep%2A?displayProperty=nameWithType> method to wait for one second, to simulate work, and then calls the <xref:System.Threading.Semaphore.Release> method overload to release the semaphore.</span></span> <span data-ttu-id="35d9c-142">已釋放號誌，每次會顯示先前的號誌計數。</span><span class="sxs-lookup"><span data-stu-id="35d9c-142">Each time the semaphore is released, the previous semaphore count is displayed.</span></span> <span data-ttu-id="35d9c-143">主控台訊息追蹤號誌的使用。</span><span class="sxs-lookup"><span data-stu-id="35d9c-143">Console messages track semaphore use.</span></span> <span data-ttu-id="35d9c-144">模擬的工作間隔會稍微增加每個執行緒，可讓輸出更容易閱讀。</span><span class="sxs-lookup"><span data-stu-id="35d9c-144">The simulated work interval is increased slightly for each thread, to make the output easier to read.</span></span>  
  
 [!code-cpp[System.Threading.Semaphore2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Semaphore2/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.Semaphore2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Semaphore2/CS/source.cs#1)]
 [!code-vb[System.Threading.Semaphore2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Semaphore2/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="35d9c-145">
            <paramref name="initialCount" /> is greater than <paramref name="maximumCount" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35d9c-145">
              <paramref name="initialCount" /> is greater than <paramref name="maximumCount" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="35d9c-146">
            <paramref name="maximumCount" /> is less than 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35d9c-146">
              <paramref name="maximumCount" /> is less than 1.</span>
          </span>
          <span data-ttu-id="35d9c-147">-or-  <paramref name="initialCount" /> is less than 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35d9c-147">-or-  <paramref name="initialCount" /> is less than 0.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Semaphore (int initialCount, int maximumCount, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 initialCount, int32 maximumCount, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Semaphore.#ctor(System.Int32,System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (initialCount As Integer, maximumCount As Integer, name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Semaphore(int initialCount, int maximumCount, System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Threading.Semaphore : int * int * string -&gt; System.Threading.Semaphore" Usage="new System.Threading.Semaphore (initialCount, maximumCount, name)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="initialCount" Type="System.Int32" />
        <Parameter Name="maximumCount" Type="System.Int32" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="initialCount">
          <span data-ttu-id="35d9c-148">The initial number of requests for the semaphore that can be granted concurrently.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35d9c-148">The initial number of requests for the semaphore that can be granted concurrently.</span>
          </span>
        </param>
        <param name="maximumCount">
          <span data-ttu-id="35d9c-149">The maximum number of requests for the semaphore that can be granted concurrently.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35d9c-149">The maximum number of requests for the semaphore that can be granted concurrently.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="35d9c-150">The name of a named system semaphore object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35d9c-150">The name of a named system semaphore object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="35d9c-151">Initializes a new instance of the <see cref="T:System.Threading.Semaphore" /> class, specifying the initial number of entries and the maximum number of concurrent entries, and optionally specifying the name of a system semaphore object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35d9c-151">Initializes a new instance of the <see cref="T:System.Threading.Semaphore" /> class, specifying the initial number of entries and the maximum number of concurrent entries, and optionally specifying the name of a system semaphore object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35d9c-152">這個建構函式初始化<xref:System.Threading.Semaphore>表示具名的系統號誌的物件。</span><span class="sxs-lookup"><span data-stu-id="35d9c-152">This constructor initializes a <xref:System.Threading.Semaphore> object that represents a named system semaphore.</span></span> <span data-ttu-id="35d9c-153">您可以建立多個<xref:System.Threading.Semaphore>物件，代表相同具名系統號誌。</span><span class="sxs-lookup"><span data-stu-id="35d9c-153">You can create multiple <xref:System.Threading.Semaphore> objects that represent the same named system semaphore.</span></span>  
  
 <span data-ttu-id="35d9c-154">如果具名的系統號誌不存在，就會建立初始計數與所指定的最大計數`initialCount`和`maximumCount`。</span><span class="sxs-lookup"><span data-stu-id="35d9c-154">If the named system semaphore does not exist, it is created with the initial count and maximum count specified by `initialCount` and `maximumCount`.</span></span> <span data-ttu-id="35d9c-155">如果已經存在的具名的系統號誌，`initialCount`和`maximumCount`不會使用，雖然無效的值仍然會造成例外狀況。</span><span class="sxs-lookup"><span data-stu-id="35d9c-155">If the named system semaphore already exists, `initialCount` and `maximumCount` are not used, although invalid values still cause exceptions.</span></span> <span data-ttu-id="35d9c-156">如果您需要確定是否具名的系統號誌已建立，請使用<xref:System.Threading.Semaphore.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.String%2CSystem.Boolean%40%29>改為建構函式多載。</span><span class="sxs-lookup"><span data-stu-id="35d9c-156">If you need to determine whether or not a named system semaphore was created, use the <xref:System.Threading.Semaphore.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.String%2CSystem.Boolean%40%29> constructor overload instead.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="35d9c-157">當您使用這個建構函式多載時，建議的作法是指定相同數目的`initialCount`和`maximumCount`。</span><span class="sxs-lookup"><span data-stu-id="35d9c-157">When you use this constructor overload, the recommended practice is to specify the same number for `initialCount` and `maximumCount`.</span></span> <span data-ttu-id="35d9c-158">如果`initialCount`是小於`maximumCount`，和建立具名的系統號誌，結果是相同的目前執行緒已呼叫<xref:System.Threading.WaitHandle.WaitOne%2A>(`maximumCount`減去`initialCount`) 時間。</span><span class="sxs-lookup"><span data-stu-id="35d9c-158">If `initialCount` is less than `maximumCount`, and a named system semaphore is created, the effect is the same as if the current thread had called <xref:System.Threading.WaitHandle.WaitOne%2A> (`maximumCount` minus `initialCount`) times.</span></span> <span data-ttu-id="35d9c-159">不過，使用這個建構函式多載沒有任何方法來判斷是否已建立了具名的系統號誌。</span><span class="sxs-lookup"><span data-stu-id="35d9c-159">However, with this constructor overload there is no way to determine whether a named system semaphore was created.</span></span>  
  
 <span data-ttu-id="35d9c-160">如果您指定`null`或為空字串。 `name`，建立本機號誌時，您必須呼叫<xref:System.Threading.Semaphore.%23ctor%28System.Int32%2CSystem.Int32%29>建構函式多載。</span><span class="sxs-lookup"><span data-stu-id="35d9c-160">If you specify `null` or an empty string for `name`, a local semaphore is created, as if you had called the <xref:System.Threading.Semaphore.%23ctor%28System.Int32%2CSystem.Int32%29> constructor overload.</span></span>  
  
 <span data-ttu-id="35d9c-161">由於具名號誌是在作業系統各處，它們可用來協調資源使用跨處理序界限。</span><span class="sxs-lookup"><span data-stu-id="35d9c-161">Because named semaphores are visible throughout the operating system, they can be used to coordinate resource use across process boundaries.</span></span>  
  
 <span data-ttu-id="35d9c-162">如果您想要了解是否有具名的系統號誌，請使用<xref:System.Threading.Semaphore.OpenExisting%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="35d9c-162">If you want to find out whether a named system semaphore exists, use the <xref:System.Threading.Semaphore.OpenExisting%2A> method.</span></span> <span data-ttu-id="35d9c-163"><xref:System.Threading.Semaphore.OpenExisting%2A>方法會嘗試開啟現有的具名號誌，並擲回例外狀況，如果不存在之系統號誌。</span><span class="sxs-lookup"><span data-stu-id="35d9c-163">The <xref:System.Threading.Semaphore.OpenExisting%2A> method attempts to open an existing named semaphore, and throws an exception if the system semaphore does not exist.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="35d9c-164">下列程式碼範例示範具名號誌的跨處理序行為。</span><span class="sxs-lookup"><span data-stu-id="35d9c-164">The following code example demonstrates the cross-process behavior of a named semaphore.</span></span> <span data-ttu-id="35d9c-165">範例會建立具名號誌的最大計數為 5 與初始計數為 5。</span><span class="sxs-lookup"><span data-stu-id="35d9c-165">The example creates a named semaphore with a maximum count of five and an initial count of five.</span></span> <span data-ttu-id="35d9c-166">讓程式三次呼叫<xref:System.Threading.WaitHandle.WaitOne%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="35d9c-166">The program makes three calls to the <xref:System.Threading.WaitHandle.WaitOne%2A> method.</span></span> <span data-ttu-id="35d9c-167">因此，如果您從兩個命令視窗執行編譯的範例，第二個副本將會封鎖第三個呼叫<xref:System.Threading.WaitHandle.WaitOne%2A>。</span><span class="sxs-lookup"><span data-stu-id="35d9c-167">Thus, if you run the compiled example from two command windows, the second copy will block on the third call to <xref:System.Threading.WaitHandle.WaitOne%2A>.</span></span> <span data-ttu-id="35d9c-168">放開解除封鎖第二個程式的第一個複本中的一個或多個項目。</span><span class="sxs-lookup"><span data-stu-id="35d9c-168">Release one or more entries in the first copy of the program to unblock the second.</span></span>  
  
 [!code-cpp[System.Threading.Semaphore.ctor named 3#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Semaphore.ctor named 3/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.Semaphore.ctor named 3#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Semaphore.ctor named 3/CS/source.cs#1)]
 [!code-vb[System.Threading.Semaphore.ctor named 3#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Semaphore.ctor named 3/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="35d9c-169">
            <paramref name="initialCount" /> is greater than <paramref name="maximumCount" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35d9c-169">
              <paramref name="initialCount" /> is greater than <paramref name="maximumCount" />.</span>
          </span>
          <span data-ttu-id="35d9c-170">-or-  <paramref name="name" /> is longer than 260 characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35d9c-170">-or-  <paramref name="name" /> is longer than 260 characters.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="35d9c-171">
            <paramref name="maximumCount" /> is less than 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35d9c-171">
              <paramref name="maximumCount" /> is less than 1.</span>
          </span>
          <span data-ttu-id="35d9c-172">-or-  <paramref name="initialCount" /> is less than 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35d9c-172">-or-  <paramref name="initialCount" /> is less than 0.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="35d9c-173">A Win32 error occurred.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35d9c-173">A Win32 error occurred.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="35d9c-174">The named semaphore exists and has access control security, and the user does not have <see cref="F:System.Security.AccessControl.SemaphoreRights.FullControl" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35d9c-174">The named semaphore exists and has access control security, and the user does not have <see cref="F:System.Security.AccessControl.SemaphoreRights.FullControl" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Threading.WaitHandleCannotBeOpenedException">
          <span data-ttu-id="35d9c-175">The named semaphore cannot be created, perhaps because a wait handle of a different type has the same name.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35d9c-175">The named semaphore cannot be created, perhaps because a wait handle of a different type has the same name.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="35d9c-176">用於呼叫 unmanaged 程式碼來建立具名的系統號誌。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35d9c-176">for calling unmanaged code to create a named system semaphore.</span>
          </span>
          <span data-ttu-id="35d9c-177">列舉型別相關聯： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35d9c-177">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span>
          </span>
          <span data-ttu-id="35d9c-178">安全性動作： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35d9c-178">Security action: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Semaphore (int initialCount, int maximumCount, string name, out bool createdNew);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 initialCount, int32 maximumCount, string name, [out] bool&amp; createdNew) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Semaphore.#ctor(System.Int32,System.Int32,System.String,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (initialCount As Integer, maximumCount As Integer, name As String, ByRef createdNew As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Semaphore(int initialCount, int maximumCount, System::String ^ name, [Runtime::InteropServices::Out] bool % createdNew);" />
      <MemberSignature Language="F#" Value="new System.Threading.Semaphore : int * int * string *  -&gt; System.Threading.Semaphore" Usage="new System.Threading.Semaphore (initialCount, maximumCount, name, createdNew)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="initialCount" Type="System.Int32" />
        <Parameter Name="maximumCount" Type="System.Int32" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="createdNew" Type="System.Boolean&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="initialCount">
          <span data-ttu-id="35d9c-179">The initial number of requests for the semaphore that can be satisfied concurrently.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35d9c-179">The initial number of requests for the semaphore that can be satisfied concurrently.</span>
          </span>
        </param>
        <param name="maximumCount">
          <span data-ttu-id="35d9c-180">The maximum number of requests for the semaphore that can be satisfied concurrently.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35d9c-180">The maximum number of requests for the semaphore that can be satisfied concurrently.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="35d9c-181">The name of a named system semaphore object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35d9c-181">The name of a named system semaphore object.</span>
          </span>
        </param>
        <param name="createdNew">
          <span data-ttu-id="35d9c-182">When this method returns, contains <see langword="true" /> if a local semaphore was created (that is, if <c>name</c> is <see langword="null" /> or an empty string) or if the specified named system semaphore was created; <see langword="false" /> if the specified named system semaphore already existed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35d9c-182">When this method returns, contains <see langword="true" /> if a local semaphore was created (that is, if <c>name</c> is <see langword="null" /> or an empty string) or if the specified named system semaphore was created; <see langword="false" /> if the specified named system semaphore already existed.</span>
          </span>
          <span data-ttu-id="35d9c-183">This parameter is passed uninitialized.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35d9c-183">This parameter is passed uninitialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="35d9c-184">Initializes a new instance of the <see cref="T:System.Threading.Semaphore" /> class, specifying the initial number of entries and the maximum number of concurrent entries, optionally specifying the name of a system semaphore object, and specifying a variable that receives a value indicating whether a new system semaphore was created.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35d9c-184">Initializes a new instance of the <see cref="T:System.Threading.Semaphore" /> class, specifying the initial number of entries and the maximum number of concurrent entries, optionally specifying the name of a system semaphore object, and specifying a variable that receives a value indicating whether a new system semaphore was created.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35d9c-185">這個建構函式初始化<xref:System.Threading.Semaphore>表示具名的系統號誌的物件。</span><span class="sxs-lookup"><span data-stu-id="35d9c-185">This constructor initializes a <xref:System.Threading.Semaphore> object that represents a named system semaphore.</span></span> <span data-ttu-id="35d9c-186">您可以建立多個<xref:System.Threading.Semaphore>物件，代表相同具名系統號誌。</span><span class="sxs-lookup"><span data-stu-id="35d9c-186">You can create multiple <xref:System.Threading.Semaphore> objects that represent the same named system semaphore.</span></span>  
  
 <span data-ttu-id="35d9c-187">如果具名的系統號誌不存在，就會建立初始計數與所指定的最大計數`initialCount`和`maximumCount`。</span><span class="sxs-lookup"><span data-stu-id="35d9c-187">If the named system semaphore does not exist, it is created with the initial count and maximum count specified by `initialCount` and `maximumCount`.</span></span> <span data-ttu-id="35d9c-188">如果已經存在的具名的系統號誌，`initialCount`和`maximumCount`不會使用，雖然無效的值仍然會造成例外狀況。</span><span class="sxs-lookup"><span data-stu-id="35d9c-188">If the named system semaphore already exists, `initialCount` and `maximumCount` are not used, although invalid values still cause exceptions.</span></span> <span data-ttu-id="35d9c-189">使用`createdNew`來判斷是否已建立之系統號誌。</span><span class="sxs-lookup"><span data-stu-id="35d9c-189">Use `createdNew` to determine whether the system semaphore was created.</span></span>  
  
 <span data-ttu-id="35d9c-190">如果`initialCount`是小於`maximumCount`，和`createdNew`是`true`，結果是相同的目前執行緒已呼叫<xref:System.Threading.WaitHandle.WaitOne%2A>(`maximumCount`減去`initialCount`) 時間。</span><span class="sxs-lookup"><span data-stu-id="35d9c-190">If `initialCount` is less than `maximumCount`, and `createdNew` is `true`, the effect is the same as if the current thread had called <xref:System.Threading.WaitHandle.WaitOne%2A> (`maximumCount` minus `initialCount`) times.</span></span>  
  
 <span data-ttu-id="35d9c-191">如果您指定`null`或為空字串。 `name`，建立本機號誌時，您必須呼叫<xref:System.Threading.Semaphore.%23ctor%28System.Int32%2CSystem.Int32%29>建構函式多載。</span><span class="sxs-lookup"><span data-stu-id="35d9c-191">If you specify `null` or an empty string for `name`, a local semaphore is created, as if you had called the <xref:System.Threading.Semaphore.%23ctor%28System.Int32%2CSystem.Int32%29> constructor overload.</span></span> <span data-ttu-id="35d9c-192">在此情況下，`createdNew`一律`true`。</span><span class="sxs-lookup"><span data-stu-id="35d9c-192">In this case, `createdNew` is always `true`.</span></span>  
  
 <span data-ttu-id="35d9c-193">由於具名號誌是在作業系統各處，它們可用來協調資源使用跨處理序界限。</span><span class="sxs-lookup"><span data-stu-id="35d9c-193">Because named semaphores are visible throughout the operating system, they can be used to coordinate resource use across process boundaries.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="35d9c-194">下列程式碼範例示範具名號誌的跨處理序行為。</span><span class="sxs-lookup"><span data-stu-id="35d9c-194">The following code example demonstrates the cross-process behavior of a named semaphore.</span></span> <span data-ttu-id="35d9c-195">範例會建立具名號誌的最大計數為 5，且兩個初始計數。</span><span class="sxs-lookup"><span data-stu-id="35d9c-195">The example creates a named semaphore with a maximum count of five and an initial count of two.</span></span> <span data-ttu-id="35d9c-196">也就是說，它會保留之執行緒的呼叫建構函式的三個項目。</span><span class="sxs-lookup"><span data-stu-id="35d9c-196">That is, it reserves three entries for the thread that calls the constructor.</span></span> <span data-ttu-id="35d9c-197">如果`createNew`是`false`，讓程式三次呼叫<xref:System.Threading.WaitHandle.WaitOne%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="35d9c-197">If `createNew` is `false`, the program makes three calls to the <xref:System.Threading.WaitHandle.WaitOne%2A> method.</span></span> <span data-ttu-id="35d9c-198">因此，如果您從兩個命令視窗執行編譯的範例，第二個副本將會封鎖第三個呼叫<xref:System.Threading.WaitHandle.WaitOne%2A>。</span><span class="sxs-lookup"><span data-stu-id="35d9c-198">Thus, if you run the compiled example from two command windows, the second copy will block on the third call to <xref:System.Threading.WaitHandle.WaitOne%2A>.</span></span> <span data-ttu-id="35d9c-199">放開解除封鎖第二個程式的第一個複本中的一個或多個項目。</span><span class="sxs-lookup"><span data-stu-id="35d9c-199">Release one or more entries in the first copy of the program to unblock the second.</span></span>  
  
 [!code-cpp[System.Threading.Semaphore.ctor named 4#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Semaphore.ctor named 4/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.Semaphore.ctor named 4#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Semaphore.ctor named 4/CS/source.cs#1)]
 [!code-vb[System.Threading.Semaphore.ctor named 4#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Semaphore.ctor named 4/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="35d9c-200">
            <paramref name="initialCount" /> is greater than <paramref name="maximumCount" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35d9c-200">
              <paramref name="initialCount" /> is greater than <paramref name="maximumCount" />.</span>
          </span>
          <span data-ttu-id="35d9c-201">-or-  <paramref name="name" /> is longer than 260 characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35d9c-201">-or-  <paramref name="name" /> is longer than 260 characters.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="35d9c-202">
            <paramref name="maximumCount" /> is less than 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35d9c-202">
              <paramref name="maximumCount" /> is less than 1.</span>
          </span>
          <span data-ttu-id="35d9c-203">-or-  <paramref name="initialCount" /> is less than 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35d9c-203">-or-  <paramref name="initialCount" /> is less than 0.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="35d9c-204">A Win32 error occurred.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35d9c-204">A Win32 error occurred.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="35d9c-205">The named semaphore exists and has access control security, and the user does not have <see cref="F:System.Security.AccessControl.SemaphoreRights.FullControl" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35d9c-205">The named semaphore exists and has access control security, and the user does not have <see cref="F:System.Security.AccessControl.SemaphoreRights.FullControl" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Threading.WaitHandleCannotBeOpenedException">
          <span data-ttu-id="35d9c-206">The named semaphore cannot be created, perhaps because a wait handle of a different type has the same name.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35d9c-206">The named semaphore cannot be created, perhaps because a wait handle of a different type has the same name.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="35d9c-207">用於呼叫 unmanaged 程式碼來建立具名的系統號誌。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35d9c-207">for calling unmanaged code to create a named system semaphore.</span>
          </span>
          <span data-ttu-id="35d9c-208">列舉型別相關聯： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35d9c-208">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span>
          </span>
          <span data-ttu-id="35d9c-209">安全性動作： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35d9c-209">Security action: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Semaphore (int initialCount, int maximumCount, string name, out bool createdNew, System.Security.AccessControl.SemaphoreSecurity semaphoreSecurity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 initialCount, int32 maximumCount, string name, [out] bool&amp; createdNew, class System.Security.AccessControl.SemaphoreSecurity semaphoreSecurity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Semaphore.#ctor(System.Int32,System.Int32,System.String,System.Boolean@,System.Security.AccessControl.SemaphoreSecurity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Semaphore(int initialCount, int maximumCount, System::String ^ name, [Runtime::InteropServices::Out] bool % createdNew, System::Security::AccessControl::SemaphoreSecurity ^ semaphoreSecurity);" />
      <MemberSignature Language="F#" Value="new System.Threading.Semaphore : int * int * string *  * System.Security.AccessControl.SemaphoreSecurity -&gt; System.Threading.Semaphore" Usage="new System.Threading.Semaphore (initialCount, maximumCount, name, createdNew, semaphoreSecurity)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="initialCount" Type="System.Int32" />
        <Parameter Name="maximumCount" Type="System.Int32" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="createdNew" Type="System.Boolean&amp;" RefType="out" />
        <Parameter Name="semaphoreSecurity" Type="System.Security.AccessControl.SemaphoreSecurity" />
      </Parameters>
      <Docs>
        <param name="initialCount">
          <span data-ttu-id="35d9c-210">The initial number of requests for the semaphore that can be satisfied concurrently.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35d9c-210">The initial number of requests for the semaphore that can be satisfied concurrently.</span>
          </span>
        </param>
        <param name="maximumCount">
          <span data-ttu-id="35d9c-211">The maximum number of requests for the semaphore that can be satisfied concurrently.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35d9c-211">The maximum number of requests for the semaphore that can be satisfied concurrently.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="35d9c-212">The name of a named system semaphore object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35d9c-212">The name of a named system semaphore object.</span>
          </span>
        </param>
        <param name="createdNew">
          <span data-ttu-id="35d9c-213">When this method returns, contains <see langword="true" /> if a local semaphore was created (that is, if <c>name</c> is <see langword="null" /> or an empty string) or if the specified named system semaphore was created; <see langword="false" /> if the specified named system semaphore already existed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35d9c-213">When this method returns, contains <see langword="true" /> if a local semaphore was created (that is, if <c>name</c> is <see langword="null" /> or an empty string) or if the specified named system semaphore was created; <see langword="false" /> if the specified named system semaphore already existed.</span>
          </span>
          <span data-ttu-id="35d9c-214">This parameter is passed uninitialized.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35d9c-214">This parameter is passed uninitialized.</span>
          </span>
        </param>
        <param name="semaphoreSecurity">
          <span data-ttu-id="35d9c-215">A <see cref="T:System.Security.AccessControl.SemaphoreSecurity" /> object that represents the access control security to be applied to the named system semaphore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35d9c-215">A <see cref="T:System.Security.AccessControl.SemaphoreSecurity" /> object that represents the access control security to be applied to the named system semaphore.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="35d9c-216">Initializes a new instance of the <see cref="T:System.Threading.Semaphore" /> class, specifying the initial number of entries and the maximum number of concurrent entries, optionally specifying the name of a system semaphore object, specifying a variable that receives a value indicating whether a new system semaphore was created, and specifying security access control for the system semaphore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35d9c-216">Initializes a new instance of the <see cref="T:System.Threading.Semaphore" /> class, specifying the initial number of entries and the maximum number of concurrent entries, optionally specifying the name of a system semaphore object, specifying a variable that receives a value indicating whether a new system semaphore was created, and specifying security access control for the system semaphore.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35d9c-217">要套用至具名的系統號誌的存取控制安全性，建立時，防止控管之號誌的其他程式碼中使用這個建構函式。</span><span class="sxs-lookup"><span data-stu-id="35d9c-217">Use this constructor to apply access control security to a named system semaphore when it is created, preventing other code from taking control of the semaphore.</span></span>  
  
 <span data-ttu-id="35d9c-218">這個建構函式初始化<xref:System.Threading.Semaphore>表示具名的系統號誌的物件。</span><span class="sxs-lookup"><span data-stu-id="35d9c-218">This constructor initializes a <xref:System.Threading.Semaphore> object that represents a named system semaphore.</span></span> <span data-ttu-id="35d9c-219">您可以建立多個<xref:System.Threading.Semaphore>物件，代表相同具名系統號誌。</span><span class="sxs-lookup"><span data-stu-id="35d9c-219">You can create multiple <xref:System.Threading.Semaphore> objects that represent the same named system semaphore.</span></span>  
  
 <span data-ttu-id="35d9c-220">如果具名的系統號誌不存在，則會建立具有指定的存取控制安全性。</span><span class="sxs-lookup"><span data-stu-id="35d9c-220">If the named system semaphore does not exist, it is created with the specified access control security.</span></span> <span data-ttu-id="35d9c-221">如果具名號誌已存在，則會忽略指定的存取控制安全性。</span><span class="sxs-lookup"><span data-stu-id="35d9c-221">If the named semaphore exists, the specified access control security is ignored.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="35d9c-222">呼叫端具有對於新建立的完整控制權<xref:System.Threading.Semaphore>物件，即使`semaphoreSecurity`拒絕，或將某些存取權授與目前的使用者就會失敗。</span><span class="sxs-lookup"><span data-stu-id="35d9c-222">The caller has full control over the newly created <xref:System.Threading.Semaphore> object even if `semaphoreSecurity` denies or fails to grant some access rights to the current user.</span></span> <span data-ttu-id="35d9c-223">不過，如果目前的使用者試圖取得另一個<xref:System.Threading.Semaphore>物件代表相同具名號誌，使用建構函式或<xref:System.Threading.Semaphore.OpenExisting%2A>方法時，Windows 會套用存取控制安全性。</span><span class="sxs-lookup"><span data-stu-id="35d9c-223">However, if the current user attempts to get another <xref:System.Threading.Semaphore> object to represent the same named semaphore, using either a constructor or the <xref:System.Threading.Semaphore.OpenExisting%2A> method, Windows access control security is applied.</span></span>  
  
 <span data-ttu-id="35d9c-224">如果具名的系統號誌不存在，就會建立初始計數與所指定的最大計數`initialCount`和`maximumCount`。</span><span class="sxs-lookup"><span data-stu-id="35d9c-224">If the named system semaphore does not exist, it is created with the initial count and maximum count specified by `initialCount` and `maximumCount`.</span></span> <span data-ttu-id="35d9c-225">如果已經存在的具名的系統號誌，`initialCount`和`maximumCount`不會使用，雖然無效的值仍然會造成例外狀況。</span><span class="sxs-lookup"><span data-stu-id="35d9c-225">If the named system semaphore already exists, `initialCount` and `maximumCount` are not used, although invalid values still cause exceptions.</span></span> <span data-ttu-id="35d9c-226">使用`createdNew`參數，來判斷是否由這個建構函式所建立之系統號誌。</span><span class="sxs-lookup"><span data-stu-id="35d9c-226">Use the `createdNew` parameter to determine whether the system semaphore was created by this constructor.</span></span>  
  
 <span data-ttu-id="35d9c-227">如果`initialCount`是小於`maximumCount`，和`createdNew`是`true`，結果是相同的目前執行緒已呼叫<xref:System.Threading.WaitHandle.WaitOne%2A>(`maximumCount`減去`initialCount`) 時間。</span><span class="sxs-lookup"><span data-stu-id="35d9c-227">If `initialCount` is less than `maximumCount`, and `createdNew` is `true`, the effect is the same as if the current thread had called <xref:System.Threading.WaitHandle.WaitOne%2A> (`maximumCount` minus `initialCount`) times.</span></span>  
  
 <span data-ttu-id="35d9c-228">如果您指定`null`或為空字串。 `name`，建立本機號誌時，您必須呼叫<xref:System.Threading.Semaphore.%23ctor%28System.Int32%2CSystem.Int32%29>建構函式多載。</span><span class="sxs-lookup"><span data-stu-id="35d9c-228">If you specify `null` or an empty string for `name`, a local semaphore is created, as if you had called the <xref:System.Threading.Semaphore.%23ctor%28System.Int32%2CSystem.Int32%29> constructor overload.</span></span> <span data-ttu-id="35d9c-229">在此情況下，`createdNew`一律`true`。</span><span class="sxs-lookup"><span data-stu-id="35d9c-229">In this case, `createdNew` is always `true`.</span></span>  
  
 <span data-ttu-id="35d9c-230">由於具名號誌是在作業系統各處，它們可用來協調資源使用跨處理序界限。</span><span class="sxs-lookup"><span data-stu-id="35d9c-230">Because named semaphores are visible throughout the operating system, they can be used to coordinate resource use across process boundaries.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="35d9c-231">下列程式碼範例示範具名號誌的跨處理序行為與存取控制安全性。</span><span class="sxs-lookup"><span data-stu-id="35d9c-231">The following code example demonstrates the cross-process behavior of a named semaphore with access control security.</span></span> <span data-ttu-id="35d9c-232">此範例會使用<xref:System.Threading.Semaphore.OpenExisting%28System.String%29>方法多載來測試是否存在的具名號誌。</span><span class="sxs-lookup"><span data-stu-id="35d9c-232">The example uses the <xref:System.Threading.Semaphore.OpenExisting%28System.String%29> method overload to test for the existence of a named semaphore.</span></span> <span data-ttu-id="35d9c-233">如果號誌不存在，它會建立兩個的最大計數與拒絕目前的使用者使用號誌的權限，但讀取和變更，號誌上的權限的權限會授與存取控制安全性。</span><span class="sxs-lookup"><span data-stu-id="35d9c-233">If the semaphore does not exist, it is created with a maximum count of two and with access control security that denies the current user the right to use the semaphore but grants the right to read and change permissions on the semaphore.</span></span> <span data-ttu-id="35d9c-234">如果您從兩個命令視窗執行編譯的範例，第二個副本將會擲回存取違規的例外狀況上呼叫<xref:System.Threading.Semaphore.OpenExisting%28System.String%29>方法。</span><span class="sxs-lookup"><span data-stu-id="35d9c-234">If you run the compiled example from two command windows, the second copy will throw an access violation exception on the call to the <xref:System.Threading.Semaphore.OpenExisting%28System.String%29> method.</span></span> <span data-ttu-id="35d9c-235">例外狀況時，和此範例會使用<xref:System.Threading.Semaphore.OpenExisting%28System.String%2CSystem.Security.AccessControl.SemaphoreRights%29>方法多載來讀取和變更的權限所需的權限來開啟號誌。</span><span class="sxs-lookup"><span data-stu-id="35d9c-235">The exception is caught, and the example uses the <xref:System.Threading.Semaphore.OpenExisting%28System.String%2CSystem.Security.AccessControl.SemaphoreRights%29> method overload to open the semaphore with the rights needed to read and change the permissions.</span></span>  
  
 <span data-ttu-id="35d9c-236">變更權限之後，號誌被開啟來輸入，並釋放所需的權限。</span><span class="sxs-lookup"><span data-stu-id="35d9c-236">After the permissions are changed, the semaphore is opened with the rights required to enter and release.</span></span> <span data-ttu-id="35d9c-237">如果您是從第三個命令視窗執行編譯的範例，它會使用執行新的權限。</span><span class="sxs-lookup"><span data-stu-id="35d9c-237">If you run the compiled example from a third command window, it runs using the new permissions.</span></span>  
  
 [!code-cpp[System.Threading.Semaphore.ctor named 5a#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Semaphore.ctor named 5a/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.Semaphore.ctor named 5a#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Semaphore.ctor named 5a/CS/source.cs#1)]
 [!code-vb[System.Threading.Semaphore.ctor named 5a#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Semaphore.ctor named 5a/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="35d9c-238">
            <paramref name="initialCount" /> is greater than <paramref name="maximumCount" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35d9c-238">
              <paramref name="initialCount" /> is greater than <paramref name="maximumCount" />.</span>
          </span>
          <span data-ttu-id="35d9c-239">-or-  <paramref name="name" /> is longer than 260 characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35d9c-239">-or-  <paramref name="name" /> is longer than 260 characters.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="35d9c-240">
            <paramref name="maximumCount" /> is less than 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35d9c-240">
              <paramref name="maximumCount" /> is less than 1.</span>
          </span>
          <span data-ttu-id="35d9c-241">-or-  <paramref name="initialCount" /> is less than 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35d9c-241">-or-  <paramref name="initialCount" /> is less than 0.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="35d9c-242">The named semaphore exists and has access control security, and the user does not have <see cref="F:System.Security.AccessControl.SemaphoreRights.FullControl" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35d9c-242">The named semaphore exists and has access control security, and the user does not have <see cref="F:System.Security.AccessControl.SemaphoreRights.FullControl" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="35d9c-243">A Win32 error occurred.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35d9c-243">A Win32 error occurred.</span>
          </span>
        </exception>
        <exception cref="T:System.Threading.WaitHandleCannotBeOpenedException">
          <span data-ttu-id="35d9c-244">The named semaphore cannot be created, perhaps because a wait handle of a different type has the same name.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35d9c-244">The named semaphore cannot be created, perhaps because a wait handle of a different type has the same name.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="35d9c-245">用於呼叫 unmanaged 程式碼來建立具名的系統號誌。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35d9c-245">for calling unmanaged code to create a named system semaphore.</span>
          </span>
          <span data-ttu-id="35d9c-246">列舉型別相關聯： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35d9c-246">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span>
          </span>
          <span data-ttu-id="35d9c-247">安全性動作： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35d9c-247">Security action: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetAccessControl">
      <MemberSignature Language="C#" Value="public System.Security.AccessControl.SemaphoreSecurity GetAccessControl ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.AccessControl.SemaphoreSecurity GetAccessControl() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Semaphore.GetAccessControl" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAccessControl () As SemaphoreSecurity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::AccessControl::SemaphoreSecurity ^ GetAccessControl();" />
      <MemberSignature Language="F#" Value="member this.GetAccessControl : unit -&gt; System.Security.AccessControl.SemaphoreSecurity" Usage="semaphore.GetAccessControl " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.SemaphoreSecurity</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="35d9c-248">Gets the access control security for a named system semaphore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35d9c-248">Gets the access control security for a named system semaphore.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="35d9c-249">A <see cref="T:System.Security.AccessControl.SemaphoreSecurity" /> object that represents the access control security for the named system semaphore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35d9c-249">A <see cref="T:System.Security.AccessControl.SemaphoreSecurity" /> object that represents the access control security for the named system semaphore.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35d9c-250"><xref:System.Threading.Semaphore.GetAccessControl%2A>方法會使用下列旗標 （使用位元 OR 運算結合） 的組合來搜尋權限： <xref:System.Security.AccessControl.AccessControlSections.Access?displayProperty=nameWithType>， <xref:System.Security.AccessControl.AccessControlSections.Owner?displayProperty=nameWithType>，和<xref:System.Security.AccessControl.AccessControlSections.Group?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="35d9c-250">The <xref:System.Threading.Semaphore.GetAccessControl%2A> method uses the following combination of flags (combined using the bitwise OR operation) to search for permissions: <xref:System.Security.AccessControl.AccessControlSections.Access?displayProperty=nameWithType>, <xref:System.Security.AccessControl.AccessControlSections.Owner?displayProperty=nameWithType>, and <xref:System.Security.AccessControl.AccessControlSections.Group?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="35d9c-251">使用者必須擁有<xref:System.Security.AccessControl.SemaphoreRights.ReadPermissions?displayProperty=nameWithType>呼叫這個方法和號誌的權限必須是與開啟<xref:System.Security.AccessControl.SemaphoreRights.ReadPermissions?displayProperty=nameWithType>權限。</span><span class="sxs-lookup"><span data-stu-id="35d9c-251">The user must have <xref:System.Security.AccessControl.SemaphoreRights.ReadPermissions?displayProperty=nameWithType> rights to call this method, and the semaphore must have been opened with <xref:System.Security.AccessControl.SemaphoreRights.ReadPermissions?displayProperty=nameWithType> rights.</span></span>  
  
 <span data-ttu-id="35d9c-252">存取控制安全性區域號誌，是不相關。</span><span class="sxs-lookup"><span data-stu-id="35d9c-252">On a local semaphore, access control security is irrelevant.</span></span> <span data-ttu-id="35d9c-253">如果<xref:System.Threading.Semaphore>物件不代表具名的系統號誌，則這個方法會傳回<xref:System.Security.AccessControl.SemaphoreSecurity>授與任何使用者所有權限的物件。</span><span class="sxs-lookup"><span data-stu-id="35d9c-253">If the <xref:System.Threading.Semaphore> object does not represent a named system semaphore, this method returns a <xref:System.Security.AccessControl.SemaphoreSecurity> object that grants all rights to any user.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="35d9c-254">下列程式碼範例示範具名號誌的跨處理序行為與存取控制安全性。</span><span class="sxs-lookup"><span data-stu-id="35d9c-254">The following code example demonstrates the cross-process behavior of a named semaphore with access control security.</span></span> <span data-ttu-id="35d9c-255">此範例會使用<xref:System.Threading.Semaphore.OpenExisting%28System.String%29>方法多載來測試是否存在的具名號誌。</span><span class="sxs-lookup"><span data-stu-id="35d9c-255">The example uses the <xref:System.Threading.Semaphore.OpenExisting%28System.String%29> method overload to test for the existence of a named semaphore.</span></span>  
  
 <span data-ttu-id="35d9c-256">如果號誌不存在，它會建立兩個的最大計數與拒絕目前使用者的權限使用號誌，但讀取和變更，號誌上的權限的權限會授與存取控制安全性。</span><span class="sxs-lookup"><span data-stu-id="35d9c-256">If the semaphore does not exist, it is created with a maximum count of two and with access control security that denies the current user the right to use the semaphore, but grants the right to read and change permissions on the semaphore.</span></span>  
  
 <span data-ttu-id="35d9c-257">如果您從兩個命令視窗執行編譯的範例，第二個副本將會擲回存取違規的例外狀況上呼叫<xref:System.Threading.Semaphore.OpenExisting%28System.String%29>方法。</span><span class="sxs-lookup"><span data-stu-id="35d9c-257">If you run the compiled example from two command windows, the second copy will throw an access violation exception on the call to the <xref:System.Threading.Semaphore.OpenExisting%28System.String%29> method.</span></span> <span data-ttu-id="35d9c-258">例外狀況時，和此範例會使用<xref:System.Threading.Semaphore.OpenExisting%28System.String%2CSystem.Security.AccessControl.SemaphoreRights%29>方法多載來讀取和變更的權限所需的權限來開啟號誌。</span><span class="sxs-lookup"><span data-stu-id="35d9c-258">The exception is caught, and the example uses the <xref:System.Threading.Semaphore.OpenExisting%28System.String%2CSystem.Security.AccessControl.SemaphoreRights%29> method overload to open the semaphore with the rights needed to read and change the permissions.</span></span> <span data-ttu-id="35d9c-259">使用來取得系統號誌的存取控制安全性<xref:System.Threading.Semaphore.GetAccessControl%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="35d9c-259">The access control security for the system semaphore is obtained using the <xref:System.Threading.Semaphore.GetAccessControl%2A> method.</span></span>  
  
 <span data-ttu-id="35d9c-260">變更權限之後，號誌被開啟來輸入，並釋放所需的權限。</span><span class="sxs-lookup"><span data-stu-id="35d9c-260">After the permissions are changed, the semaphore is opened with the rights required to enter and release.</span></span> <span data-ttu-id="35d9c-261">如果您是從第三個命令視窗執行編譯的範例，它會使用執行新的權限。</span><span class="sxs-lookup"><span data-stu-id="35d9c-261">If you run the compiled example from a third command window, it runs using the new permissions.</span></span>  
  
 [!code-cpp[System.Threading.Semaphore.ctor named 5a#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Semaphore.ctor named 5a/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.Semaphore.ctor named 5a#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Semaphore.ctor named 5a/CS/source.cs#1)]
 [!code-vb[System.Threading.Semaphore.ctor named 5a#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Semaphore.ctor named 5a/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="35d9c-262">The current <see cref="T:System.Threading.Semaphore" /> object represents a named system semaphore, and the user does not have <see cref="F:System.Security.AccessControl.SemaphoreRights.ReadPermissions" /> rights.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35d9c-262">The current <see cref="T:System.Threading.Semaphore" /> object represents a named system semaphore, and the user does not have <see cref="F:System.Security.AccessControl.SemaphoreRights.ReadPermissions" /> rights.</span>
          </span>
          <span data-ttu-id="35d9c-263">-or-  The current <see cref="T:System.Threading.Semaphore" /> object represents a named system semaphore and was not opened with <see cref="F:System.Security.AccessControl.SemaphoreRights.ReadPermissions" /> rights.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35d9c-263">-or-  The current <see cref="T:System.Threading.Semaphore" /> object represents a named system semaphore and was not opened with <see cref="F:System.Security.AccessControl.SemaphoreRights.ReadPermissions" /> rights.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="35d9c-264">Not supported for Windows 98 or Windows Millennium Edition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35d9c-264">Not supported for Windows 98 or Windows Millennium Edition.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenExisting">
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="35d9c-265">Opens a specified named semaphore, if it already exists.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35d9c-265">Opens a specified named semaphore, if it already exists.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenExisting">
      <MemberSignature Language="C#" Value="public static System.Threading.Semaphore OpenExisting (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Semaphore OpenExisting(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Semaphore.OpenExisting(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenExisting (name As String) As Semaphore" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Threading::Semaphore ^ OpenExisting(System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member OpenExisting : string -&gt; System.Threading.Semaphore" Usage="System.Threading.Semaphore.OpenExisting name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Semaphore</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="35d9c-266">The name of the system semaphore to open.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35d9c-266">The name of the system semaphore to open.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="35d9c-267">Opens the specified named semaphore, if it already exists.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35d9c-267">Opens the specified named semaphore, if it already exists.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="35d9c-268">An object that represents the named system semaphore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35d9c-268">An object that represents the named system semaphore.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35d9c-269"><xref:System.Threading.Semaphore.OpenExisting%2A>方法嘗試開啟指定的具名號誌。</span><span class="sxs-lookup"><span data-stu-id="35d9c-269">The <xref:System.Threading.Semaphore.OpenExisting%2A> method tries to open the specified named semaphore.</span></span> <span data-ttu-id="35d9c-270">如果不存在之系統號誌，這個方法會擲回例外狀況而建立之系統號誌。</span><span class="sxs-lookup"><span data-stu-id="35d9c-270">If the system semaphore does not exist, this method throws an exception instead of creating the system semaphore.</span></span> <span data-ttu-id="35d9c-271">若要建立之系統號誌，已經不存在時，使用其中一種<xref:System.Threading.Semaphore.%23ctor%2A>建構函式具有`name`參數。</span><span class="sxs-lookup"><span data-stu-id="35d9c-271">To create the system semaphore when it does not already exist, use one of the <xref:System.Threading.Semaphore.%23ctor%2A> constructors that has a `name` parameter.</span></span>  
  
 <span data-ttu-id="35d9c-272">使用相同的值，這個方法的多次呼叫`name`不一定會傳回相同<xref:System.Threading.Semaphore>物件，即使會傳回代表的物件相同具名系統號誌。</span><span class="sxs-lookup"><span data-stu-id="35d9c-272">Multiple calls to this method that use the same value for `name` do not necessarily return the same <xref:System.Threading.Semaphore> object, even though the objects that are returned represent the same named system semaphore.</span></span>  
  
 <span data-ttu-id="35d9c-273">這個方法多載就相當於呼叫<xref:System.Threading.Semaphore.OpenExisting%2A>方法多載，並指定<xref:System.Security.AccessControl.SemaphoreRights.Synchronize?displayProperty=nameWithType>和<xref:System.Security.AccessControl.SemaphoreRights.Modify?displayProperty=nameWithType>權限，使用位元 OR 運算結合。</span><span class="sxs-lookup"><span data-stu-id="35d9c-273">This method overload is equivalent to calling the <xref:System.Threading.Semaphore.OpenExisting%2A> method overload and specifying <xref:System.Security.AccessControl.SemaphoreRights.Synchronize?displayProperty=nameWithType> and <xref:System.Security.AccessControl.SemaphoreRights.Modify?displayProperty=nameWithType> rights, combined by using the bitwise OR operation.</span></span>  
  
 <span data-ttu-id="35d9c-274">指定<xref:System.Security.AccessControl.SemaphoreRights.Synchronize?displayProperty=nameWithType>旗標可讓執行緒進入號誌，並指定<xref:System.Security.AccessControl.SemaphoreRights.Modify?displayProperty=nameWithType>旗標可讓呼叫執行緒<xref:System.Threading.Semaphore.Release%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="35d9c-274">Specifying the <xref:System.Security.AccessControl.SemaphoreRights.Synchronize?displayProperty=nameWithType> flag allows a thread to enter the semaphore, and specifying the <xref:System.Security.AccessControl.SemaphoreRights.Modify?displayProperty=nameWithType> flag allows a thread to call the <xref:System.Threading.Semaphore.Release%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="35d9c-275">下列程式碼範例示範具名號誌的跨處理序行為與存取控制安全性。</span><span class="sxs-lookup"><span data-stu-id="35d9c-275">The following code example demonstrates the cross-process behavior of a named semaphore with access control security.</span></span> <span data-ttu-id="35d9c-276">此範例會使用<xref:System.Threading.Semaphore.OpenExisting%28System.String%29>方法多載來測試是否存在的具名號誌。</span><span class="sxs-lookup"><span data-stu-id="35d9c-276">The example uses the <xref:System.Threading.Semaphore.OpenExisting%28System.String%29> method overload to test for the existence of a named semaphore.</span></span>  
  
 <span data-ttu-id="35d9c-277">如果號誌不存在，它會建立兩個的最大計數與拒絕的目前使用者的權限使用號誌，但以授與讀取和變更，號誌上的權限的權限的存取控制安全性。</span><span class="sxs-lookup"><span data-stu-id="35d9c-277">If the semaphore does not exist, it is created with a maximum count of two and with access control security that denies the current user the right to use the semaphore, but which grants the right to read and change permissions on the semaphore.</span></span>  
  
 <span data-ttu-id="35d9c-278">如果您從兩個命令視窗執行編譯的範例，第二個副本將會擲回存取違規的例外狀況上呼叫<xref:System.Threading.Semaphore.OpenExisting%28System.String%29>方法多載。</span><span class="sxs-lookup"><span data-stu-id="35d9c-278">If you run the compiled example from two command windows, the second copy will throw an access violation exception on the call to the <xref:System.Threading.Semaphore.OpenExisting%28System.String%29> method overload.</span></span> <span data-ttu-id="35d9c-279">例外狀況時，和此範例會使用<xref:System.Threading.Semaphore.OpenExisting%28System.String%2CSystem.Security.AccessControl.SemaphoreRights%29>方法多載來讀取和變更的權限所需的權限來開啟號誌。</span><span class="sxs-lookup"><span data-stu-id="35d9c-279">The exception is caught, and the example uses the <xref:System.Threading.Semaphore.OpenExisting%28System.String%2CSystem.Security.AccessControl.SemaphoreRights%29> method overload to open the semaphore with the rights needed to read and change the permissions.</span></span>  
  
 <span data-ttu-id="35d9c-280">變更權限之後，號誌被開啟輸入，並釋放它所需的權限。</span><span class="sxs-lookup"><span data-stu-id="35d9c-280">After the permissions are changed, the semaphore is opened with the rights required to enter and release it.</span></span> <span data-ttu-id="35d9c-281">如果您是從第三個命令視窗執行編譯的範例，它會使用執行新的權限。</span><span class="sxs-lookup"><span data-stu-id="35d9c-281">If you run the compiled example from a third command window, it runs using the new permissions.</span></span>  
  
 [!code-cpp[System.Threading.Semaphore.ctor named 5a#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Semaphore.ctor named 5a/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.Semaphore.ctor named 5a#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Semaphore.ctor named 5a/CS/source.cs#1)]
 [!code-vb[System.Threading.Semaphore.ctor named 5a#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Semaphore.ctor named 5a/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="35d9c-282">
            <paramref name="name" /> is an empty string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35d9c-282">
              <paramref name="name" /> is an empty string.</span>
          </span>
          <span data-ttu-id="35d9c-283">-or-  <paramref name="name" /> is longer than 260 characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35d9c-283">-or-  <paramref name="name" /> is longer than 260 characters.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="35d9c-284">
            <paramref name="name" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35d9c-284">
              <paramref name="name" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Threading.WaitHandleCannotBeOpenedException">
          <span data-ttu-id="35d9c-285">The named semaphore does not exist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35d9c-285">The named semaphore does not exist.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="35d9c-286">A Win32 error occurred.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35d9c-286">A Win32 error occurred.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="35d9c-287">The named semaphore exists, but the user does not have the security access required to use it.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35d9c-287">The named semaphore exists, but the user does not have the security access required to use it.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="35d9c-288">用於呼叫 unmanaged 程式碼，以開啟具名的系統號誌。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35d9c-288">for calling unmanaged code to open a named system semaphore.</span>
          </span>
          <span data-ttu-id="35d9c-289">列舉型別相關聯： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35d9c-289">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span>
          </span>
          <span data-ttu-id="35d9c-290">安全性動作： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35d9c-290">Security action: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="OpenExisting">
      <MemberSignature Language="C#" Value="public static System.Threading.Semaphore OpenExisting (string name, System.Security.AccessControl.SemaphoreRights rights);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Semaphore OpenExisting(string name, valuetype System.Security.AccessControl.SemaphoreRights rights) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Semaphore.OpenExisting(System.String,System.Security.AccessControl.SemaphoreRights)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenExisting (name As String, rights As SemaphoreRights) As Semaphore" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Threading::Semaphore ^ OpenExisting(System::String ^ name, System::Security::AccessControl::SemaphoreRights rights);" />
      <MemberSignature Language="F#" Value="static member OpenExisting : string * System.Security.AccessControl.SemaphoreRights -&gt; System.Threading.Semaphore" Usage="System.Threading.Semaphore.OpenExisting (name, rights)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Semaphore</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="rights" Type="System.Security.AccessControl.SemaphoreRights" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="35d9c-291">The name of the system semaphore to open.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35d9c-291">The name of the system semaphore to open.</span>
          </span>
        </param>
        <param name="rights">
          <span data-ttu-id="35d9c-292">A bitwise combination of the enumeration values that represent the desired security access.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35d9c-292">A bitwise combination of the enumeration values that represent the desired security access.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="35d9c-293">Opens the specified named semaphore, if it already exists, with the desired security access.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35d9c-293">Opens the specified named semaphore, if it already exists, with the desired security access.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="35d9c-294">An object that represents the named system semaphore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35d9c-294">An object that represents the named system semaphore.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35d9c-295">`rights`參數必須包含<xref:System.Security.AccessControl.SemaphoreRights.Synchronize?displayProperty=nameWithType>旗標以允許的執行緒進入號誌，而<xref:System.Security.AccessControl.SemaphoreRights.Modify?displayProperty=nameWithType>旗標以允許呼叫的執行緒<xref:System.Threading.Semaphore.Release%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="35d9c-295">The `rights` parameter must include the <xref:System.Security.AccessControl.SemaphoreRights.Synchronize?displayProperty=nameWithType> flag to allow threads to enter the semaphore, and the <xref:System.Security.AccessControl.SemaphoreRights.Modify?displayProperty=nameWithType> flag to allow threads to call the <xref:System.Threading.Semaphore.Release%2A> method.</span></span>  
  
 <span data-ttu-id="35d9c-296"><xref:System.Threading.Semaphore.OpenExisting%2A>方法嘗試開啟現有的具名號誌。</span><span class="sxs-lookup"><span data-stu-id="35d9c-296">The <xref:System.Threading.Semaphore.OpenExisting%2A> method tries to open an existing named semaphore.</span></span> <span data-ttu-id="35d9c-297">如果不存在之系統號誌，這個方法會擲回例外狀況而建立之系統號誌。</span><span class="sxs-lookup"><span data-stu-id="35d9c-297">If the system semaphore does not exist, this method throws an exception instead of creating the system semaphore.</span></span> <span data-ttu-id="35d9c-298">若要建立之系統號誌，已經不存在時，使用其中一種<xref:System.Threading.Semaphore.%23ctor%2A>建構函式具有`name`參數。</span><span class="sxs-lookup"><span data-stu-id="35d9c-298">To create the system semaphore when it does not already exist, use one of the <xref:System.Threading.Semaphore.%23ctor%2A> constructors that has a `name` parameter.</span></span>  
  
 <span data-ttu-id="35d9c-299">使用相同的值，這個方法的多次呼叫`name`不一定會傳回相同<xref:System.Threading.Semaphore>物件，即使會傳回代表的物件相同具名系統號誌。</span><span class="sxs-lookup"><span data-stu-id="35d9c-299">Multiple calls to this method that use the same value for `name` do not necessarily return the same <xref:System.Threading.Semaphore> object, even though the objects that are returned represent the same named system semaphore.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="35d9c-300">下列程式碼範例示範具名號誌的跨處理序行為與存取控制安全性。</span><span class="sxs-lookup"><span data-stu-id="35d9c-300">The following code example demonstrates the cross-process behavior of a named semaphore with access control security.</span></span> <span data-ttu-id="35d9c-301">此範例會使用<xref:System.Threading.Semaphore.OpenExisting%28System.String%29>方法多載來測試是否存在的具名號誌。</span><span class="sxs-lookup"><span data-stu-id="35d9c-301">The example uses the <xref:System.Threading.Semaphore.OpenExisting%28System.String%29> method overload to test for the existence of a named semaphore.</span></span>  
  
 <span data-ttu-id="35d9c-302">如果號誌不存在，它會建立兩個的最大計數與拒絕目前使用者的權限使用號誌，但讀取和變更，號誌上的權限的權限會授與存取控制安全性。</span><span class="sxs-lookup"><span data-stu-id="35d9c-302">If the semaphore does not exist, it is created with a maximum count of two and with access control security that denies the current user the right to use the semaphore, but grants the right to read and change permissions on the semaphore.</span></span>  
  
 <span data-ttu-id="35d9c-303">如果您從兩個命令視窗執行編譯的範例，第二個副本將會擲回存取違規的例外狀況上呼叫<xref:System.Threading.Semaphore.OpenExisting%28System.String%29>方法。</span><span class="sxs-lookup"><span data-stu-id="35d9c-303">If you run the compiled example from two command windows, the second copy will throw an access violation exception on the call to the <xref:System.Threading.Semaphore.OpenExisting%28System.String%29> method.</span></span> <span data-ttu-id="35d9c-304">例外狀況時，和此範例會使用<xref:System.Threading.Semaphore.OpenExisting%28System.String%2CSystem.Security.AccessControl.SemaphoreRights%29>方法多載來讀取和變更的權限所需的權限來開啟號誌。</span><span class="sxs-lookup"><span data-stu-id="35d9c-304">The exception is caught, and the example uses the <xref:System.Threading.Semaphore.OpenExisting%28System.String%2CSystem.Security.AccessControl.SemaphoreRights%29> method overload to open the semaphore with the rights needed to read and change the permissions.</span></span>  
  
 <span data-ttu-id="35d9c-305">變更權限之後，號誌被開啟輸入，並釋放它所需的權限。</span><span class="sxs-lookup"><span data-stu-id="35d9c-305">After the permissions are changed, the semaphore is opened with the rights required to enter and release it.</span></span> <span data-ttu-id="35d9c-306">如果您是從第三個命令視窗執行編譯的範例，它會使用執行新的權限。</span><span class="sxs-lookup"><span data-stu-id="35d9c-306">If you run the compiled example from a third command window, it runs using the new permissions.</span></span>  
  
 [!code-cpp[System.Threading.Semaphore.ctor named 5a#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Semaphore.ctor named 5a/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.Semaphore.ctor named 5a#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Semaphore.ctor named 5a/CS/source.cs#1)]
 [!code-vb[System.Threading.Semaphore.ctor named 5a#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Semaphore.ctor named 5a/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="35d9c-307">
            <paramref name="name" /> is an empty string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35d9c-307">
              <paramref name="name" /> is an empty string.</span>
          </span>
          <span data-ttu-id="35d9c-308">-or-  <paramref name="name" /> is longer than 260 characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35d9c-308">-or-  <paramref name="name" /> is longer than 260 characters.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="35d9c-309">
            <paramref name="name" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35d9c-309">
              <paramref name="name" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Threading.WaitHandleCannotBeOpenedException">
          <span data-ttu-id="35d9c-310">The named semaphore does not exist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35d9c-310">The named semaphore does not exist.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="35d9c-311">A Win32 error occurred.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35d9c-311">A Win32 error occurred.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="35d9c-312">The named semaphore exists, but the user does not have the desired security access rights.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35d9c-312">The named semaphore exists, but the user does not have the desired security access rights.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="35d9c-313">用於呼叫 unmanaged 程式碼來建立具名的系統號誌。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35d9c-313">for calling unmanaged code to create a named system semaphore.</span>
          </span>
          <span data-ttu-id="35d9c-314">列舉型別相關聯： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35d9c-314">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span>
          </span>
          <span data-ttu-id="35d9c-315">安全性動作： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35d9c-315">Security action: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="Release">
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="35d9c-316">Exits the semaphore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35d9c-316">Exits the semaphore.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Release">
      <MemberSignature Language="C#" Value="public int Release ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Release() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Semaphore.Release" />
      <MemberSignature Language="VB.NET" Value="Public Function Release () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Release();" />
      <MemberSignature Language="F#" Value="member this.Release : unit -&gt; int" Usage="semaphore.Release " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.PrePrepareMethod</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="35d9c-317">Exits the semaphore and returns the previous count.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35d9c-317">Exits the semaphore and returns the previous count.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="35d9c-318">The count on the semaphore before the <see cref="Overload:System.Threading.Semaphore.Release" /> method was called.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35d9c-318">The count on the semaphore before the <see cref="Overload:System.Threading.Semaphore.Release" /> method was called.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35d9c-319">執行緒通常會使用<xref:System.Threading.WaitHandle.WaitOne%2A>方法進入號誌，而且它們通常使用這個方法多載來結束。</span><span class="sxs-lookup"><span data-stu-id="35d9c-319">Threads typically use the <xref:System.Threading.WaitHandle.WaitOne%2A> method to enter the semaphore, and they typically use this method overload to exit.</span></span>  
  
 <span data-ttu-id="35d9c-320">如果<xref:System.Threading.SemaphoreFullException>，所擲回<xref:System.Threading.Semaphore.Release%2A>方法，不一定表示呼叫執行緒的問題。</span><span class="sxs-lookup"><span data-stu-id="35d9c-320">If a <xref:System.Threading.SemaphoreFullException> is thrown by the <xref:System.Threading.Semaphore.Release%2A> method, it does not necessarily indicate a problem with the calling thread.</span></span> <span data-ttu-id="35d9c-321">另一個執行緒中的程式設計錯誤可能導致該執行緒結束次數多於進入號誌。</span><span class="sxs-lookup"><span data-stu-id="35d9c-321">A programming error in another thread might have caused that thread to exit the semaphore more times than it entered.</span></span>  
  
 <span data-ttu-id="35d9c-322">如果目前<xref:System.Threading.Semaphore>物件代表具名的系統號誌，使用者必須擁有<xref:System.Security.AccessControl.SemaphoreRights.Modify?displayProperty=nameWithType>權限和號誌必須已經開啟與<xref:System.Security.AccessControl.SemaphoreRights.Modify?displayProperty=nameWithType>權限。</span><span class="sxs-lookup"><span data-stu-id="35d9c-322">If the current <xref:System.Threading.Semaphore> object represents a named system semaphore, the user must have <xref:System.Security.AccessControl.SemaphoreRights.Modify?displayProperty=nameWithType> rights and the semaphore must have been opened with <xref:System.Security.AccessControl.SemaphoreRights.Modify?displayProperty=nameWithType> rights.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="35d9c-323">下列程式碼範例會建立信號的最大計數的三個與初始計數為零。</span><span class="sxs-lookup"><span data-stu-id="35d9c-323">The following code example creates a semaphore with a maximum count of three and an initial count of zero.</span></span> <span data-ttu-id="35d9c-324">此範例會啟動五個執行緒，封鎖而等待號誌。</span><span class="sxs-lookup"><span data-stu-id="35d9c-324">The example starts five threads, which block waiting for the semaphore.</span></span> <span data-ttu-id="35d9c-325">主要執行緒會使用<xref:System.Threading.Semaphore.Release%28System.Int32%29>號誌計數增加至其最大值，讓三個執行緒進入號誌的方法多載。</span><span class="sxs-lookup"><span data-stu-id="35d9c-325">The main thread uses the <xref:System.Threading.Semaphore.Release%28System.Int32%29> method overload to increase the semaphore count to its maximum, allowing three threads to enter the semaphore.</span></span> <span data-ttu-id="35d9c-326">每個執行緒使用<xref:System.Threading.Thread.Sleep%2A?displayProperty=nameWithType>方法等候一秒，以模擬工作，然後呼叫<xref:System.Threading.Semaphore.Release>方法多載來釋放號誌。</span><span class="sxs-lookup"><span data-stu-id="35d9c-326">Each thread uses the <xref:System.Threading.Thread.Sleep%2A?displayProperty=nameWithType> method to wait for one second, to simulate work, and then calls the <xref:System.Threading.Semaphore.Release> method overload to release the semaphore.</span></span>  
  
 <span data-ttu-id="35d9c-327">已釋放號誌，每次會顯示先前的號誌計數。</span><span class="sxs-lookup"><span data-stu-id="35d9c-327">Each time the semaphore is released, the previous semaphore count is displayed.</span></span> <span data-ttu-id="35d9c-328">主控台訊息追蹤號誌的使用。</span><span class="sxs-lookup"><span data-stu-id="35d9c-328">Console messages track semaphore use.</span></span> <span data-ttu-id="35d9c-329">模擬的工作間隔會稍微增加每個執行緒，可讓輸出更容易閱讀。</span><span class="sxs-lookup"><span data-stu-id="35d9c-329">The simulated work interval is increased slightly for each thread, to make the output easier to read.</span></span>  
  
 [!code-cpp[System.Threading.Semaphore2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Semaphore2/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.Semaphore2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Semaphore2/CS/source.cs#1)]
 [!code-vb[System.Threading.Semaphore2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Semaphore2/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Threading.SemaphoreFullException">
          <span data-ttu-id="35d9c-330">The semaphore count is already at the maximum value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35d9c-330">The semaphore count is already at the maximum value.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="35d9c-331">A Win32 error occurred with a named semaphore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35d9c-331">A Win32 error occurred with a named semaphore.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="35d9c-332">The current semaphore represents a named system semaphore, but the user does not have <see cref="F:System.Security.AccessControl.SemaphoreRights.Modify" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35d9c-332">The current semaphore represents a named system semaphore, but the user does not have <see cref="F:System.Security.AccessControl.SemaphoreRights.Modify" />.</span>
          </span>
          <span data-ttu-id="35d9c-333">-or-  The current semaphore represents a named system semaphore, but it was not opened with <see cref="F:System.Security.AccessControl.SemaphoreRights.Modify" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35d9c-333">-or-  The current semaphore represents a named system semaphore, but it was not opened with <see cref="F:System.Security.AccessControl.SemaphoreRights.Modify" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Release">
      <MemberSignature Language="C#" Value="public int Release (int releaseCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Release(int32 releaseCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Semaphore.Release(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Release (releaseCount As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Release(int releaseCount);" />
      <MemberSignature Language="F#" Value="member this.Release : int -&gt; int" Usage="semaphore.Release releaseCount" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="releaseCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="releaseCount">
          <span data-ttu-id="35d9c-334">The number of times to exit the semaphore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35d9c-334">The number of times to exit the semaphore.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="35d9c-335">Exits the semaphore a specified number of times and returns the previous count.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35d9c-335">Exits the semaphore a specified number of times and returns the previous count.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="35d9c-336">The count on the semaphore before the <see cref="Overload:System.Threading.Semaphore.Release" /> method was called.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35d9c-336">The count on the semaphore before the <see cref="Overload:System.Threading.Semaphore.Release" /> method was called.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35d9c-337">如果執行緒已進入號誌多次，這個方法多載可讓與某個呼叫還原整個號誌計數。</span><span class="sxs-lookup"><span data-stu-id="35d9c-337">If a thread has entered the semaphore multiple times, this method overload allows the entire semaphore count to be restored with one call.</span></span>  
  
 <span data-ttu-id="35d9c-338">如果<xref:System.Threading.SemaphoreFullException>，所擲回<xref:System.Threading.Semaphore.Release%2A>方法，不一定表示呼叫執行緒的問題。</span><span class="sxs-lookup"><span data-stu-id="35d9c-338">If a <xref:System.Threading.SemaphoreFullException> is thrown by the <xref:System.Threading.Semaphore.Release%2A> method, it does not necessarily indicate a problem with the calling thread.</span></span> <span data-ttu-id="35d9c-339">另一個執行緒中的程式設計錯誤可能導致該執行緒結束次數多於進入號誌。</span><span class="sxs-lookup"><span data-stu-id="35d9c-339">A programming error in another thread might have caused that thread to exit the semaphore more times than it entered.</span></span>  
  
 <span data-ttu-id="35d9c-340">如果目前<xref:System.Threading.Semaphore>物件代表具名的系統號誌，使用者必須擁有<xref:System.Security.AccessControl.SemaphoreRights.Modify?displayProperty=nameWithType>權限和號誌必須已經開啟與<xref:System.Security.AccessControl.SemaphoreRights.Modify?displayProperty=nameWithType>權限。</span><span class="sxs-lookup"><span data-stu-id="35d9c-340">If the current <xref:System.Threading.Semaphore> object represents a named system semaphore, the user must have <xref:System.Security.AccessControl.SemaphoreRights.Modify?displayProperty=nameWithType> rights and the semaphore must have been opened with <xref:System.Security.AccessControl.SemaphoreRights.Modify?displayProperty=nameWithType> rights.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="35d9c-341">下列程式碼範例會建立信號的最大計數的三個與初始計數為零。</span><span class="sxs-lookup"><span data-stu-id="35d9c-341">The following code example creates a semaphore with a maximum count of three and an initial count of zero.</span></span> <span data-ttu-id="35d9c-342">此範例會啟動五個執行緒，封鎖而等待號誌。</span><span class="sxs-lookup"><span data-stu-id="35d9c-342">The example starts five threads, which block waiting for the semaphore.</span></span> <span data-ttu-id="35d9c-343">主要執行緒會使用<xref:System.Threading.Semaphore.Release%28System.Int32%29>號誌計數增加至其最大值，讓三個執行緒進入號誌的方法多載。</span><span class="sxs-lookup"><span data-stu-id="35d9c-343">The main thread uses the <xref:System.Threading.Semaphore.Release%28System.Int32%29> method overload to increase the semaphore count to its maximum, allowing three threads to enter the semaphore.</span></span> <span data-ttu-id="35d9c-344">每個執行緒使用<xref:System.Threading.Thread.Sleep%2A?displayProperty=nameWithType>方法等候一秒，以模擬工作，然後呼叫<xref:System.Threading.Semaphore.Release>方法多載來釋放號誌。</span><span class="sxs-lookup"><span data-stu-id="35d9c-344">Each thread uses the <xref:System.Threading.Thread.Sleep%2A?displayProperty=nameWithType> method to wait for one second, to simulate work, and then calls the <xref:System.Threading.Semaphore.Release> method overload to release the semaphore.</span></span>  
  
 <span data-ttu-id="35d9c-345">已釋放號誌，每次會顯示先前的號誌計數。</span><span class="sxs-lookup"><span data-stu-id="35d9c-345">Each time the semaphore is released, the previous semaphore count is displayed.</span></span> <span data-ttu-id="35d9c-346">主控台訊息追蹤號誌的使用。</span><span class="sxs-lookup"><span data-stu-id="35d9c-346">Console messages track semaphore use.</span></span> <span data-ttu-id="35d9c-347">模擬的工作間隔會稍微增加每個執行緒，可讓輸出更容易閱讀。</span><span class="sxs-lookup"><span data-stu-id="35d9c-347">The simulated work interval is increased slightly for each thread, to make the output easier to read.</span></span>  
  
 [!code-cpp[System.Threading.Semaphore2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Semaphore2/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.Semaphore2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Semaphore2/CS/source.cs#1)]
 [!code-vb[System.Threading.Semaphore2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Semaphore2/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="35d9c-348">
            <paramref name="releaseCount" /> is less than 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35d9c-348">
              <paramref name="releaseCount" /> is less than 1.</span>
          </span>
        </exception>
        <exception cref="T:System.Threading.SemaphoreFullException">
          <span data-ttu-id="35d9c-349">The semaphore count is already at the maximum value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35d9c-349">The semaphore count is already at the maximum value.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="35d9c-350">A Win32 error occurred with a named semaphore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35d9c-350">A Win32 error occurred with a named semaphore.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="35d9c-351">The current semaphore represents a named system semaphore, but the user does not have <see cref="F:System.Security.AccessControl.SemaphoreRights.Modify" /> rights.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35d9c-351">The current semaphore represents a named system semaphore, but the user does not have <see cref="F:System.Security.AccessControl.SemaphoreRights.Modify" /> rights.</span>
          </span>
          <span data-ttu-id="35d9c-352">-or-  The current semaphore represents a named system semaphore, but it was not opened with <see cref="F:System.Security.AccessControl.SemaphoreRights.Modify" /> rights.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35d9c-352">-or-  The current semaphore represents a named system semaphore, but it was not opened with <see cref="F:System.Security.AccessControl.SemaphoreRights.Modify" /> rights.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SetAccessControl">
      <MemberSignature Language="C#" Value="public void SetAccessControl (System.Security.AccessControl.SemaphoreSecurity semaphoreSecurity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAccessControl(class System.Security.AccessControl.SemaphoreSecurity semaphoreSecurity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Semaphore.SetAccessControl(System.Security.AccessControl.SemaphoreSecurity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAccessControl(System::Security::AccessControl::SemaphoreSecurity ^ semaphoreSecurity);" />
      <MemberSignature Language="F#" Value="member this.SetAccessControl : System.Security.AccessControl.SemaphoreSecurity -&gt; unit" Usage="semaphore.SetAccessControl semaphoreSecurity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="semaphoreSecurity" Type="System.Security.AccessControl.SemaphoreSecurity" />
      </Parameters>
      <Docs>
        <param name="semaphoreSecurity">
          <span data-ttu-id="35d9c-353">A <see cref="T:System.Security.AccessControl.SemaphoreSecurity" /> object that represents the access control security to be applied to the named system semaphore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35d9c-353">A <see cref="T:System.Security.AccessControl.SemaphoreSecurity" /> object that represents the access control security to be applied to the named system semaphore.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="35d9c-354">Sets the access control security for a named system semaphore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35d9c-354">Sets the access control security for a named system semaphore.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35d9c-355">您只能上設定存取控制安全性<xref:System.Threading.Semaphore>表示具名的系統號誌的物件。</span><span class="sxs-lookup"><span data-stu-id="35d9c-355">You can set access control security only on <xref:System.Threading.Semaphore> objects that represent named system semaphores.</span></span>  
  
 <span data-ttu-id="35d9c-356">使用者必須擁有<xref:System.Security.AccessControl.SemaphoreRights.ChangePermissions?displayProperty=nameWithType>呼叫這個方法和號誌的權限必須是與開啟<xref:System.Security.AccessControl.SemaphoreRights.ChangePermissions?displayProperty=nameWithType>權限。</span><span class="sxs-lookup"><span data-stu-id="35d9c-356">The user must have <xref:System.Security.AccessControl.SemaphoreRights.ChangePermissions?displayProperty=nameWithType> rights to call this method, and the semaphore must have been opened with <xref:System.Security.AccessControl.SemaphoreRights.ChangePermissions?displayProperty=nameWithType> rights.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="35d9c-357">下列程式碼範例示範具名號誌的跨處理序行為與存取控制安全性。</span><span class="sxs-lookup"><span data-stu-id="35d9c-357">The following code example demonstrates the cross-process behavior of a named semaphore with access control security.</span></span> <span data-ttu-id="35d9c-358">此範例會使用<xref:System.Threading.Semaphore.OpenExisting%28System.String%29>方法多載來測試是否存在的具名號誌。</span><span class="sxs-lookup"><span data-stu-id="35d9c-358">The example uses the <xref:System.Threading.Semaphore.OpenExisting%28System.String%29> method overload to test for the existence of a named semaphore.</span></span>  
  
 <span data-ttu-id="35d9c-359">如果號誌不存在，它會建立兩個的最大計數與拒絕目前的使用者使用號誌的權限，但讀取和變更，號誌上的權限的權限會授與存取控制安全性。</span><span class="sxs-lookup"><span data-stu-id="35d9c-359">If the semaphore does not exist, it is created with a maximum count of two and with access control security that denies the current user the right to use the semaphore but grants the right to read and change permissions on the semaphore.</span></span>  
  
 <span data-ttu-id="35d9c-360">如果您從兩個命令視窗執行編譯的範例，第二個副本將會擲回存取違規的例外狀況上呼叫<xref:System.Threading.Semaphore.OpenExisting%28System.String%29>方法。</span><span class="sxs-lookup"><span data-stu-id="35d9c-360">If you run the compiled example from two command windows, the second copy will throw an access violation exception on the call to the <xref:System.Threading.Semaphore.OpenExisting%28System.String%29> method.</span></span> <span data-ttu-id="35d9c-361">例外狀況時，和此範例會使用<xref:System.Threading.Semaphore.OpenExisting%28System.String%2CSystem.Security.AccessControl.SemaphoreRights%29>方法多載來讀取和變更的權限所需的權限來開啟號誌。</span><span class="sxs-lookup"><span data-stu-id="35d9c-361">The exception is caught, and the example uses the <xref:System.Threading.Semaphore.OpenExisting%28System.String%2CSystem.Security.AccessControl.SemaphoreRights%29> method overload to open the semaphore with the rights needed to read and change the permissions.</span></span>  
  
 <span data-ttu-id="35d9c-362">變更的權限，使用後<xref:System.Threading.Semaphore.SetAccessControl%2A>來輸入，並釋放所需的權限開啟方法，號誌。</span><span class="sxs-lookup"><span data-stu-id="35d9c-362">After the permissions are changed, using the <xref:System.Threading.Semaphore.SetAccessControl%2A> method, the semaphore is opened with the rights required to enter and release.</span></span> <span data-ttu-id="35d9c-363">如果您是從第三個命令視窗執行編譯的範例，它會使用執行新的權限。</span><span class="sxs-lookup"><span data-stu-id="35d9c-363">If you run the compiled example from a third command window, it runs using the new permissions.</span></span>  
  
 [!code-cpp[System.Threading.Semaphore.ctor named 5a#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Semaphore.ctor named 5a/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.Semaphore.ctor named 5a#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Semaphore.ctor named 5a/CS/source.cs#1)]
 [!code-vb[System.Threading.Semaphore.ctor named 5a#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Semaphore.ctor named 5a/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="35d9c-364">
            <paramref name="semaphoreSecurity" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35d9c-364">
              <paramref name="semaphoreSecurity" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="35d9c-365">The user does not have <see cref="F:System.Security.AccessControl.SemaphoreRights.ChangePermissions" /> rights.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35d9c-365">The user does not have <see cref="F:System.Security.AccessControl.SemaphoreRights.ChangePermissions" /> rights.</span>
          </span>
          <span data-ttu-id="35d9c-366">-or-  The semaphore was not opened with <see cref="F:System.Security.AccessControl.SemaphoreRights.ChangePermissions" /> rights.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35d9c-366">-or-  The semaphore was not opened with <see cref="F:System.Security.AccessControl.SemaphoreRights.ChangePermissions" /> rights.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="35d9c-367">The current <see cref="T:System.Threading.Semaphore" /> object does not represent a named system semaphore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35d9c-367">The current <see cref="T:System.Threading.Semaphore" /> object does not represent a named system semaphore.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryOpenExisting">
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="35d9c-368">Opens a specified named semaphore, if it already exists, and returns a value that indicates whether the operation succeeded.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35d9c-368">Opens a specified named semaphore, if it already exists, and returns a value that indicates whether the operation succeeded.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TryOpenExisting">
      <MemberSignature Language="C#" Value="public static bool TryOpenExisting (string name, out System.Threading.Semaphore result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryOpenExisting(string name, [out] class System.Threading.Semaphore&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Semaphore.TryOpenExisting(System.String,System.Threading.Semaphore@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryOpenExisting (name As String, ByRef result As Semaphore) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryOpenExisting(System::String ^ name, [Runtime::InteropServices::Out] System::Threading::Semaphore ^ % result);" />
      <MemberSignature Language="F#" Value="static member TryOpenExisting : string *  -&gt; bool" Usage="System.Threading.Semaphore.TryOpenExisting (name, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="result" Type="System.Threading.Semaphore&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="35d9c-369">The name of the system semaphore to open.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35d9c-369">The name of the system semaphore to open.</span>
          </span>
        </param>
        <param name="result">
          <span data-ttu-id="35d9c-370">When this method returns, contains a <see cref="T:System.Threading.Semaphore" /> object that represents the named semaphore if the call succeeded, or <see langword="null" /> if the call failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35d9c-370">When this method returns, contains a <see cref="T:System.Threading.Semaphore" /> object that represents the named semaphore if the call succeeded, or <see langword="null" /> if the call failed.</span>
          </span>
          <span data-ttu-id="35d9c-371">This parameter is treated as uninitialized.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35d9c-371">This parameter is treated as uninitialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="35d9c-372">Opens the specified named semaphore, if it already exists, and returns a value that indicates whether the operation succeeded.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35d9c-372">Opens the specified named semaphore, if it already exists, and returns a value that indicates whether the operation succeeded.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="35d9c-373">
            <see langword="true" /> if the named semaphore was opened successfully; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35d9c-373">
              <see langword="true" /> if the named semaphore was opened successfully; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35d9c-374">如果不存在的具名號誌，這個方法不會建立它。</span><span class="sxs-lookup"><span data-stu-id="35d9c-374">If the named semaphore does not exist, this method does not create it.</span></span> <span data-ttu-id="35d9c-375">若要建立之系統號誌，已經不存在時，使用其中一種<xref:System.Threading.Semaphore.%23ctor%2A>建構函式具有`name`參數。</span><span class="sxs-lookup"><span data-stu-id="35d9c-375">To create the system semaphore when it does not already exist, use one of the <xref:System.Threading.Semaphore.%23ctor%2A> constructors that has a `name` parameter.</span></span>  
  
 <span data-ttu-id="35d9c-376">如果您不確定具名號誌是否存在，請使用這個方法多載，而不是<xref:System.Threading.Semaphore.OpenExisting%28System.String%29>方法多載，如果號誌不存在，擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="35d9c-376">If you are uncertain whether a named semaphore exists, use this method overload instead of the <xref:System.Threading.Semaphore.OpenExisting%28System.String%29> method overload, which throws an exception if the semaphore does not exist.</span></span>  
  
 <span data-ttu-id="35d9c-377">這個方法多載就相當於呼叫<xref:System.Threading.Semaphore.TryOpenExisting%2A>方法多載，並指定<xref:System.Security.AccessControl.SemaphoreRights.Synchronize?displayProperty=nameWithType>和<xref:System.Security.AccessControl.SemaphoreRights.Modify?displayProperty=nameWithType>權限，使用位元 OR 運算結合。</span><span class="sxs-lookup"><span data-stu-id="35d9c-377">This method overload is equivalent to calling the <xref:System.Threading.Semaphore.TryOpenExisting%2A> method overload and specifying <xref:System.Security.AccessControl.SemaphoreRights.Synchronize?displayProperty=nameWithType> and <xref:System.Security.AccessControl.SemaphoreRights.Modify?displayProperty=nameWithType> rights, combined by using the bitwise OR operation.</span></span> <span data-ttu-id="35d9c-378">指定<xref:System.Security.AccessControl.SemaphoreRights.Synchronize?displayProperty=nameWithType>旗標可讓執行緒進入號誌，並指定<xref:System.Security.AccessControl.SemaphoreRights.Modify?displayProperty=nameWithType>旗標可讓呼叫執行緒<xref:System.Threading.Semaphore.Release%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="35d9c-378">Specifying the <xref:System.Security.AccessControl.SemaphoreRights.Synchronize?displayProperty=nameWithType> flag allows a thread to enter the semaphore, and specifying the   <xref:System.Security.AccessControl.SemaphoreRights.Modify?displayProperty=nameWithType> flag allows a thread to call the <xref:System.Threading.Semaphore.Release%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="35d9c-379">
            <paramref name="name" /> is an empty string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35d9c-379">
              <paramref name="name" /> is an empty string.</span>
          </span>
          <span data-ttu-id="35d9c-380">-or-  <paramref name="name" /> is longer than 260 characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35d9c-380">-or-  <paramref name="name" /> is longer than 260 characters.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="35d9c-381">
            <paramref name="name" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35d9c-381">
              <paramref name="name" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="35d9c-382">A Win32 error occurred.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35d9c-382">A Win32 error occurred.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="35d9c-383">The named semaphore exists, but the user does not have the security access required to use it.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35d9c-383">The named semaphore exists, but the user does not have the security access required to use it.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="TryOpenExisting">
      <MemberSignature Language="C#" Value="public static bool TryOpenExisting (string name, System.Security.AccessControl.SemaphoreRights rights, out System.Threading.Semaphore result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryOpenExisting(string name, valuetype System.Security.AccessControl.SemaphoreRights rights, [out] class System.Threading.Semaphore&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Semaphore.TryOpenExisting(System.String,System.Security.AccessControl.SemaphoreRights,System.Threading.Semaphore@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryOpenExisting (name As String, rights As SemaphoreRights, ByRef result As Semaphore) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryOpenExisting(System::String ^ name, System::Security::AccessControl::SemaphoreRights rights, [Runtime::InteropServices::Out] System::Threading::Semaphore ^ % result);" />
      <MemberSignature Language="F#" Value="static member TryOpenExisting : string * System.Security.AccessControl.SemaphoreRights *  -&gt; bool" Usage="System.Threading.Semaphore.TryOpenExisting (name, rights, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="rights" Type="System.Security.AccessControl.SemaphoreRights" />
        <Parameter Name="result" Type="System.Threading.Semaphore&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="35d9c-384">The name of the system semaphore to open.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35d9c-384">The name of the system semaphore to open.</span>
          </span>
        </param>
        <param name="rights">
          <span data-ttu-id="35d9c-385">A bitwise combination of the enumeration values that represent the desired security access.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35d9c-385">A bitwise combination of the enumeration values that represent the desired security access.</span>
          </span>
        </param>
        <param name="result">
          <span data-ttu-id="35d9c-386">When this method returns, contains a <see cref="T:System.Threading.Semaphore" /> object that represents the named semaphore if the call succeeded, or <see langword="null" /> if the call failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35d9c-386">When this method returns, contains a <see cref="T:System.Threading.Semaphore" /> object that represents the named semaphore if the call succeeded, or <see langword="null" /> if the call failed.</span>
          </span>
          <span data-ttu-id="35d9c-387">This parameter is treated as uninitialized.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35d9c-387">This parameter is treated as uninitialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="35d9c-388">Opens the specified named semaphore, if it already exists, with the desired security access, and returns a value that indicates whether the operation succeeded.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35d9c-388">Opens the specified named semaphore, if it already exists, with the desired security access, and returns a value that indicates whether the operation succeeded.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="35d9c-389">
            <see langword="true" /> if the named semaphore was opened successfully; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35d9c-389">
              <see langword="true" /> if the named semaphore was opened successfully; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35d9c-390">如果不存在的具名號誌，這個方法不會建立它。</span><span class="sxs-lookup"><span data-stu-id="35d9c-390">If the named semaphore does not exist, this method does not create it.</span></span> <span data-ttu-id="35d9c-391">若要建立之系統號誌，已經不存在時，使用其中一種<xref:System.Threading.Semaphore.%23ctor%2A>建構函式具有`name`參數。</span><span class="sxs-lookup"><span data-stu-id="35d9c-391">To create the system semaphore when it does not already exist, use one of the <xref:System.Threading.Semaphore.%23ctor%2A> constructors that has a `name` parameter.</span></span>  
  
 <span data-ttu-id="35d9c-392">如果您不確定具名號誌是否存在，請使用這個方法多載，而不是<xref:System.Threading.Semaphore.OpenExisting%28System.String%2CSystem.Security.AccessControl.SemaphoreRights%29>方法多載，如果號誌不存在，擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="35d9c-392">If you are uncertain whether a named semaphore exists, use this method overload instead of the <xref:System.Threading.Semaphore.OpenExisting%28System.String%2CSystem.Security.AccessControl.SemaphoreRights%29> method overload, which throws an exception if the semaphore does not exist.</span></span>  
  
 <span data-ttu-id="35d9c-393">`rights`參數必須包含<xref:System.Security.AccessControl.SemaphoreRights.Synchronize?displayProperty=nameWithType>旗標以允許的執行緒進入號誌，而<xref:System.Security.AccessControl.SemaphoreRights.Modify?displayProperty=nameWithType>旗標以允許呼叫的執行緒<xref:System.Threading.Semaphore.Release%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="35d9c-393">The `rights` parameter must include the <xref:System.Security.AccessControl.SemaphoreRights.Synchronize?displayProperty=nameWithType> flag to allow threads to enter the semaphore, and the <xref:System.Security.AccessControl.SemaphoreRights.Modify?displayProperty=nameWithType> flag to allow threads to call the <xref:System.Threading.Semaphore.Release%2A> method.</span></span>  
  
 <span data-ttu-id="35d9c-394">使用相同的值，這個方法的多次呼叫`name`不一定會傳回相同<xref:System.Threading.Semaphore>物件，即使會傳回代表的物件相同具名系統號誌。</span><span class="sxs-lookup"><span data-stu-id="35d9c-394">Multiple calls to this method that use the same value for `name` do not necessarily return the same <xref:System.Threading.Semaphore> object, even though the objects that are returned represent the same named system semaphore.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="35d9c-395">
            <paramref name="name" /> is an empty string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35d9c-395">
              <paramref name="name" /> is an empty string.</span>
          </span>
          <span data-ttu-id="35d9c-396">-or-  <paramref name="name" /> is longer than 260 characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35d9c-396">-or-  <paramref name="name" /> is longer than 260 characters.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="35d9c-397">
            <paramref name="name" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35d9c-397">
              <paramref name="name" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="35d9c-398">A Win32 error occurred.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35d9c-398">A Win32 error occurred.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="35d9c-399">The named semaphore exists, but the user does not have the security access required to use it.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35d9c-399">The named semaphore exists, but the user does not have the security access required to use it.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>