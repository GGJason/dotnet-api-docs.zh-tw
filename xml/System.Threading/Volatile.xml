<Type Name="Volatile" FullName="System.Threading.Volatile">
  <TypeSignature Language="C#" Value="public static class Volatile" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Volatile extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Threading.Volatile" />
  <TypeSignature Language="VB.NET" Value="Public Class Volatile" />
  <TypeSignature Language="C++ CLI" Value="public ref class Volatile abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Threading</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="3413d-101">包含用於執行動態記憶體作業的方法。</span><span class="sxs-lookup"><span data-stu-id="3413d-101">Contains methods for performing volatile memory operations.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3413d-102">在多處理器系統上，在暫時性寫入作業可確保寫入記憶體位置的值就會立即顯示所有處理器。</span><span class="sxs-lookup"><span data-stu-id="3413d-102">On a multiprocessor system, a volatile write operation ensures that a value written to a memory location is immediately visible to all processors.</span></span> <span data-ttu-id="3413d-103">變動性的讀取的作業會取得最新的值由任意處理器寫入記憶體位置。</span><span class="sxs-lookup"><span data-stu-id="3413d-103">A volatile read operation obtains the very latest value written to a memory location by any processor.</span></span> <span data-ttu-id="3413d-104">這些作業可能需要清除處理器快取，可能會影響效能。</span><span class="sxs-lookup"><span data-stu-id="3413d-104">These operations might require flushing processor caches, which can affect performance.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3413d-105">單一處理器的系統上，變動性的讀取和寫入，可確保某值為讀取或寫入記憶體並不會快取 （例如，在處理器暫存器）。</span><span class="sxs-lookup"><span data-stu-id="3413d-105">On a uniprocessor system, volatile reads and writes ensure that a value is read or written to memory and not cached (for example, in a processor register).</span></span> <span data-ttu-id="3413d-106">因此，您可以使用這些作業，以同步存取可以由另一個執行緒或硬體所更新的欄位。</span><span class="sxs-lookup"><span data-stu-id="3413d-106">Thus, you can use these operations to synchronize access to a field that can be updated by another thread or by hardware.</span></span>  
  
 <span data-ttu-id="3413d-107">動態記憶體作業是特殊的情況下，同步處理，其中正常鎖定不是可接受的替代方式。</span><span class="sxs-lookup"><span data-stu-id="3413d-107">Volatile memory operations are for special cases of synchronization, where normal locking is not an acceptable alternative.</span></span> <span data-ttu-id="3413d-108">在一般情況下，C#`lock`陳述式，Visual Basic`SyncLock`陳述式，和<xref:System.Threading.Monitor>類別會提供最簡單且最容易出錯的方式同步處理存取資料，而<xref:System.Lazy%601>類別會提供簡單到寫入不直接使用延遲初始設定程式碼重複檢查鎖定。</span><span class="sxs-lookup"><span data-stu-id="3413d-108">Under normal circumstances, the C# `lock` statement, the Visual Basic `SyncLock` statement, and the <xref:System.Threading.Monitor> class provide the easiest and least error-prone way of synchronizing access to data, and the <xref:System.Lazy%601> class provides a simple way to write lazy initialization code without directly using double-checked locking.</span></span>  
  
 <span data-ttu-id="3413d-109"><xref:System.Threading.Volatile.Read%2A?displayProperty=nameWithType>和<xref:System.Threading.Volatile.Write%2A?displayProperty=nameWithType>方法可讓不支援語言的功能。</span><span class="sxs-lookup"><span data-stu-id="3413d-109">The <xref:System.Threading.Volatile.Read%2A?displayProperty=nameWithType> and <xref:System.Threading.Volatile.Write%2A?displayProperty=nameWithType> methods enable functionality that is not supported in languages.</span></span> <span data-ttu-id="3413d-110">例如: </span><span class="sxs-lookup"><span data-stu-id="3413d-110">For example:</span></span>  
  
-   <span data-ttu-id="3413d-111">某些語言，例如 Visual Basic 中，無法辨識的動態記憶體作業的概念。</span><span class="sxs-lookup"><span data-stu-id="3413d-111">Some languages, such as Visual Basic, do not recognize the concept of volatile memory operations.</span></span> <span data-ttu-id="3413d-112"><xref:System.Threading.Volatile>類別會提供這類語言中的功能。</span><span class="sxs-lookup"><span data-stu-id="3413d-112">The <xref:System.Threading.Volatile> class provides that functionality in such languages.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="3413d-113">呼叫其中一種方法只會影響單一記憶體存取。</span><span class="sxs-lookup"><span data-stu-id="3413d-113">Calling one of these methods affects only a single memory access.</span></span> <span data-ttu-id="3413d-114">若要提供有效欄位的同步處理，必須使用欄位的所有存取<xref:System.Threading.Volatile.Read%2A?displayProperty=nameWithType>和<xref:System.Threading.Volatile.Write%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="3413d-114">To provide effective synchronization for a field, all access to the field must use <xref:System.Threading.Volatile.Read%2A?displayProperty=nameWithType> and <xref:System.Threading.Volatile.Write%2A?displayProperty=nameWithType>.</span></span>  
  
-   <span data-ttu-id="3413d-115">在 C# 中，使用`volatile`欄位修飾詞可確保每次存取該欄位會使用<xref:System.Threading.Volatile.Read%2A?displayProperty=nameWithType>和<xref:System.Threading.Volatile.Write%2A?displayProperty=nameWithType>方法，但`volatile`修飾詞無法套用至陣列元素。</span><span class="sxs-lookup"><span data-stu-id="3413d-115">In C#, using the `volatile` modifier on a field guarantees that every access to that field uses the <xref:System.Threading.Volatile.Read%2A?displayProperty=nameWithType> and <xref:System.Threading.Volatile.Write%2A?displayProperty=nameWithType> methods, but the `volatile` modifier cannot be applied to array elements.</span></span> <span data-ttu-id="3413d-116"><xref:System.Threading.Volatile.Read%2A?displayProperty=nameWithType>和<xref:System.Threading.Volatile.Write%2A?displayProperty=nameWithType>方法可針對陣列元素。</span><span class="sxs-lookup"><span data-stu-id="3413d-116">The <xref:System.Threading.Volatile.Read%2A?displayProperty=nameWithType> and <xref:System.Threading.Volatile.Write%2A?displayProperty=nameWithType> methods can be used on array elements.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="Read">
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3413d-117">讀取欄位值。</span><span class="sxs-lookup"><span data-stu-id="3413d-117">Reads the value of a field.</span></span> <span data-ttu-id="3413d-118">在需要它的系統上，以如下方式插入可防止處理器重新排序記憶體作業的記憶體屏障：如果程式碼中這個方法之後出現讀取或寫入，處理器便無法在這個方法之前移動它。</span><span class="sxs-lookup"><span data-stu-id="3413d-118">On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public static bool Read (ref bool location);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Read(bool&amp; location) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Volatile.Read(System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Read (ByRef location As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Read(bool % location);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="System.Boolean&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="location"><span data-ttu-id="3413d-119">要讀取的欄位。</span><span class="sxs-lookup"><span data-stu-id="3413d-119">The field to read.</span></span></param>
        <summary><span data-ttu-id="3413d-120">讀取指定之欄位的值。</span><span class="sxs-lookup"><span data-stu-id="3413d-120">Reads the value of the specified field.</span></span> <span data-ttu-id="3413d-121">在需要它的系統上，以如下方式插入可防止處理器重新排序記憶體作業的記憶體屏障：如果程式碼中這個方法之後出現讀取或寫入，處理器便無法在這個方法之前移動它。</span><span class="sxs-lookup"><span data-stu-id="3413d-121">On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.</span></span></summary>
        <returns><span data-ttu-id="3413d-122">已讀取的值。</span><span class="sxs-lookup"><span data-stu-id="3413d-122">The value that was read.</span></span> <span data-ttu-id="3413d-123">這個值是由電腦中的任何處理器最新寫入的，與處理器的數目或處理器快取的狀態無關。</span><span class="sxs-lookup"><span data-stu-id="3413d-123">This value is the latest written by any processor in the computer, regardless of the number of processors or the state of processor cache.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3413d-124">如需詳細資訊，請參閱 <xref:System.Threading.Volatile> 類別。</span><span class="sxs-lookup"><span data-stu-id="3413d-124">For more information, see the <xref:System.Threading.Volatile> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public static byte Read (ref byte location);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 Read(unsigned int8&amp; location) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Volatile.Read(System.Byte@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Read (ByRef location As Byte) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte Read(System::Byte % location);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="System.Byte&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="location"><span data-ttu-id="3413d-125">要讀取的欄位。</span><span class="sxs-lookup"><span data-stu-id="3413d-125">The field to read.</span></span></param>
        <summary><span data-ttu-id="3413d-126">讀取指定之欄位的值。</span><span class="sxs-lookup"><span data-stu-id="3413d-126">Reads the value of the specified field.</span></span> <span data-ttu-id="3413d-127">在需要它的系統上，以如下方式插入可防止處理器重新排序記憶體作業的記憶體屏障：如果程式碼中這個方法之後出現讀取或寫入，處理器便無法在這個方法之前移動它。</span><span class="sxs-lookup"><span data-stu-id="3413d-127">On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.</span></span></summary>
        <returns><span data-ttu-id="3413d-128">已讀取的值。</span><span class="sxs-lookup"><span data-stu-id="3413d-128">The value that was read.</span></span> <span data-ttu-id="3413d-129">這個值是由電腦中的任何處理器最新寫入的，與處理器的數目或處理器快取的狀態無關。</span><span class="sxs-lookup"><span data-stu-id="3413d-129">This value is the latest written by any processor in the computer, regardless of the number of processors or the state of processor cache.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3413d-130">如需詳細資訊，請參閱 <xref:System.Threading.Volatile> 類別。</span><span class="sxs-lookup"><span data-stu-id="3413d-130">For more information, see the <xref:System.Threading.Volatile> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public static double Read (ref double location);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Read(float64&amp; location) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Volatile.Read(System.Double@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Read (ByRef location As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Read(double % location);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="System.Double&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="location"><span data-ttu-id="3413d-131">要讀取的欄位。</span><span class="sxs-lookup"><span data-stu-id="3413d-131">The field to read.</span></span></param>
        <summary><span data-ttu-id="3413d-132">讀取指定之欄位的值。</span><span class="sxs-lookup"><span data-stu-id="3413d-132">Reads the value of the specified field.</span></span> <span data-ttu-id="3413d-133">在需要它的系統上，以如下方式插入可防止處理器重新排序記憶體作業的記憶體屏障：如果程式碼中這個方法之後出現讀取或寫入，處理器便無法在這個方法之前移動它。</span><span class="sxs-lookup"><span data-stu-id="3413d-133">On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.</span></span></summary>
        <returns><span data-ttu-id="3413d-134">已讀取的值。</span><span class="sxs-lookup"><span data-stu-id="3413d-134">The value that was read.</span></span> <span data-ttu-id="3413d-135">這個值是由電腦中的任何處理器最新寫入的，與處理器的數目或處理器快取的狀態無關。</span><span class="sxs-lookup"><span data-stu-id="3413d-135">This value is the latest written by any processor in the computer, regardless of the number of processors or the state of processor cache.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3413d-136">如需詳細資訊，請參閱 <xref:System.Threading.Volatile> 類別。</span><span class="sxs-lookup"><span data-stu-id="3413d-136">For more information, see the <xref:System.Threading.Volatile> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public static short Read (ref short location);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 Read(int16&amp; location) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Volatile.Read(System.Int16@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Read (ByRef location As Short) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short Read(short % location);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="System.Int16&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="location"><span data-ttu-id="3413d-137">要讀取的欄位。</span><span class="sxs-lookup"><span data-stu-id="3413d-137">The field to read.</span></span></param>
        <summary><span data-ttu-id="3413d-138">讀取指定之欄位的值。</span><span class="sxs-lookup"><span data-stu-id="3413d-138">Reads the value of the specified field.</span></span> <span data-ttu-id="3413d-139">在需要它的系統上，以如下方式插入可防止處理器重新排序記憶體作業的記憶體屏障：如果程式碼中這個方法之後出現讀取或寫入，處理器便無法在這個方法之前移動它。</span><span class="sxs-lookup"><span data-stu-id="3413d-139">On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.</span></span></summary>
        <returns><span data-ttu-id="3413d-140">已讀取的值。</span><span class="sxs-lookup"><span data-stu-id="3413d-140">The value that was read.</span></span> <span data-ttu-id="3413d-141">這個值是由電腦中的任何處理器最新寫入的，與處理器的數目或處理器快取的狀態無關。</span><span class="sxs-lookup"><span data-stu-id="3413d-141">This value is the latest written by any processor in the computer, regardless of the number of processors or the state of processor cache.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3413d-142">如需詳細資訊，請參閱 <xref:System.Threading.Volatile> 類別。</span><span class="sxs-lookup"><span data-stu-id="3413d-142">For more information, see the <xref:System.Threading.Volatile> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public static int Read (ref int location);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Read(int32&amp; location) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Volatile.Read(System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Read (ByRef location As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Read(int % location);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="System.Int32&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="location"><span data-ttu-id="3413d-143">要讀取的欄位。</span><span class="sxs-lookup"><span data-stu-id="3413d-143">The field to read.</span></span></param>
        <summary><span data-ttu-id="3413d-144">讀取指定之欄位的值。</span><span class="sxs-lookup"><span data-stu-id="3413d-144">Reads the value of the specified field.</span></span> <span data-ttu-id="3413d-145">在需要它的系統上，以如下方式插入可防止處理器重新排序記憶體作業的記憶體屏障：如果程式碼中這個方法之後出現讀取或寫入，處理器便無法在這個方法之前移動它。</span><span class="sxs-lookup"><span data-stu-id="3413d-145">On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.</span></span></summary>
        <returns><span data-ttu-id="3413d-146">已讀取的值。</span><span class="sxs-lookup"><span data-stu-id="3413d-146">The value that was read.</span></span> <span data-ttu-id="3413d-147">這個值是由電腦中的任何處理器最新寫入的，與處理器的數目或處理器快取的狀態無關。</span><span class="sxs-lookup"><span data-stu-id="3413d-147">This value is the latest written by any processor in the computer, regardless of the number of processors or the state of processor cache.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3413d-148">如需詳細資訊，請參閱 <xref:System.Threading.Volatile> 類別。</span><span class="sxs-lookup"><span data-stu-id="3413d-148">For more information, see the <xref:System.Threading.Volatile> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public static long Read (ref long location);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 Read(int64&amp; location) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Volatile.Read(System.Int64@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Read (ByRef location As Long) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long Read(long % location);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="System.Int64&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="location"><span data-ttu-id="3413d-149">要讀取的欄位。</span><span class="sxs-lookup"><span data-stu-id="3413d-149">The field to read.</span></span></param>
        <summary><span data-ttu-id="3413d-150">讀取指定之欄位的值。</span><span class="sxs-lookup"><span data-stu-id="3413d-150">Reads the value of the specified field.</span></span> <span data-ttu-id="3413d-151">在需要它的系統上，以如下方式插入可防止處理器重新排序記憶體作業的記憶體屏障：如果程式碼中這個方法之後出現讀取或寫入，處理器便無法在這個方法之前移動它。</span><span class="sxs-lookup"><span data-stu-id="3413d-151">On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.</span></span></summary>
        <returns><span data-ttu-id="3413d-152">已讀取的值。</span><span class="sxs-lookup"><span data-stu-id="3413d-152">The value that was read.</span></span> <span data-ttu-id="3413d-153">這個值是由電腦中的任何處理器最新寫入的，與處理器的數目或處理器快取的狀態無關。</span><span class="sxs-lookup"><span data-stu-id="3413d-153">This value is the latest written by any processor in the computer, regardless of the number of processors or the state of processor cache.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3413d-154">如需詳細資訊，請參閱 <xref:System.Threading.Volatile> 類別。</span><span class="sxs-lookup"><span data-stu-id="3413d-154">For more information, see the <xref:System.Threading.Volatile> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public static IntPtr Read (ref IntPtr location);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int Read(native int&amp; location) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Volatile.Read(System.IntPtr@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Read (ByRef location As IntPtr) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr Read(IntPtr % location);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="System.IntPtr&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="location"><span data-ttu-id="3413d-155">要讀取的欄位。</span><span class="sxs-lookup"><span data-stu-id="3413d-155">The field to read.</span></span></param>
        <summary><span data-ttu-id="3413d-156">讀取指定之欄位的值。</span><span class="sxs-lookup"><span data-stu-id="3413d-156">Reads the value of the specified field.</span></span> <span data-ttu-id="3413d-157">在需要它的系統上，以如下方式插入可防止處理器重新排序記憶體作業的記憶體屏障：如果程式碼中這個方法之後出現讀取或寫入，處理器便無法在這個方法之前移動它。</span><span class="sxs-lookup"><span data-stu-id="3413d-157">On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.</span></span></summary>
        <returns><span data-ttu-id="3413d-158">已讀取的值。</span><span class="sxs-lookup"><span data-stu-id="3413d-158">The value that was read.</span></span> <span data-ttu-id="3413d-159">這個值是由電腦中的任何處理器最新寫入的，與處理器的數目或處理器快取的狀態無關。</span><span class="sxs-lookup"><span data-stu-id="3413d-159">This value is the latest written by any processor in the computer, regardless of the number of processors or the state of processor cache.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3413d-160">如需詳細資訊，請參閱 <xref:System.Threading.Volatile> 類別。</span><span class="sxs-lookup"><span data-stu-id="3413d-160">For more information, see the <xref:System.Threading.Volatile> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public static sbyte Read (ref sbyte location);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 Read(int8&amp; location) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Volatile.Read(System.SByte@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Read (ByRef location As SByte) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte Read(System::SByte % location);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="System.SByte&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="location"><span data-ttu-id="3413d-161">要讀取的欄位。</span><span class="sxs-lookup"><span data-stu-id="3413d-161">The field to read.</span></span></param>
        <summary><span data-ttu-id="3413d-162">讀取指定之欄位的值。</span><span class="sxs-lookup"><span data-stu-id="3413d-162">Reads the value of the specified field.</span></span> <span data-ttu-id="3413d-163">在需要它的系統上，以如下方式插入可防止處理器重新排序記憶體作業的記憶體屏障：如果程式碼中這個方法之後出現讀取或寫入，處理器便無法在這個方法之前移動它。</span><span class="sxs-lookup"><span data-stu-id="3413d-163">On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.</span></span></summary>
        <returns><span data-ttu-id="3413d-164">已讀取的值。</span><span class="sxs-lookup"><span data-stu-id="3413d-164">The value that was read.</span></span> <span data-ttu-id="3413d-165">這個值是由電腦中的任何處理器最新寫入的，與處理器的數目或處理器快取的狀態無關。</span><span class="sxs-lookup"><span data-stu-id="3413d-165">This value is the latest written by any processor in the computer, regardless of the number of processors or the state of processor cache.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3413d-166">如需詳細資訊，請參閱 <xref:System.Threading.Volatile> 類別。</span><span class="sxs-lookup"><span data-stu-id="3413d-166">For more information, see the <xref:System.Threading.Volatile> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public static float Read (ref float location);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Read(float32&amp; location) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Volatile.Read(System.Single@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Read (ByRef location As Single) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float Read(float % location);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="System.Single&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="location"><span data-ttu-id="3413d-167">要讀取的欄位。</span><span class="sxs-lookup"><span data-stu-id="3413d-167">The field to read.</span></span></param>
        <summary><span data-ttu-id="3413d-168">讀取指定之欄位的值。</span><span class="sxs-lookup"><span data-stu-id="3413d-168">Reads the value of the specified field.</span></span> <span data-ttu-id="3413d-169">在需要它的系統上，以如下方式插入可防止處理器重新排序記憶體作業的記憶體屏障：如果程式碼中這個方法之後出現讀取或寫入，處理器便無法在這個方法之前移動它。</span><span class="sxs-lookup"><span data-stu-id="3413d-169">On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.</span></span></summary>
        <returns><span data-ttu-id="3413d-170">已讀取的值。</span><span class="sxs-lookup"><span data-stu-id="3413d-170">The value that was read.</span></span> <span data-ttu-id="3413d-171">這個值是由電腦中的任何處理器最新寫入的，與處理器的數目或處理器快取的狀態無關。</span><span class="sxs-lookup"><span data-stu-id="3413d-171">This value is the latest written by any processor in the computer, regardless of the number of processors or the state of processor cache.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3413d-172">如需詳細資訊，請參閱 <xref:System.Threading.Volatile> 類別。</span><span class="sxs-lookup"><span data-stu-id="3413d-172">For more information, see the <xref:System.Threading.Volatile> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public static ushort Read (ref ushort location);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 Read(unsigned int16&amp; location) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Volatile.Read(System.UInt16@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Read (ByRef location As UShort) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 Read(System::UInt16 % location);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="System.UInt16&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="location"><span data-ttu-id="3413d-173">要讀取的欄位。</span><span class="sxs-lookup"><span data-stu-id="3413d-173">The field to read.</span></span></param>
        <summary><span data-ttu-id="3413d-174">讀取指定之欄位的值。</span><span class="sxs-lookup"><span data-stu-id="3413d-174">Reads the value of the specified field.</span></span> <span data-ttu-id="3413d-175">在需要它的系統上，以如下方式插入可防止處理器重新排序記憶體作業的記憶體屏障：如果程式碼中這個方法之後出現讀取或寫入，處理器便無法在這個方法之前移動它。</span><span class="sxs-lookup"><span data-stu-id="3413d-175">On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.</span></span></summary>
        <returns><span data-ttu-id="3413d-176">已讀取的值。</span><span class="sxs-lookup"><span data-stu-id="3413d-176">The value that was read.</span></span> <span data-ttu-id="3413d-177">這個值是由電腦中的任何處理器最新寫入的，與處理器的數目或處理器快取的狀態無關。</span><span class="sxs-lookup"><span data-stu-id="3413d-177">This value is the latest written by any processor in the computer, regardless of the number of processors or the state of processor cache.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3413d-178">如需詳細資訊，請參閱 <xref:System.Threading.Volatile> 類別。</span><span class="sxs-lookup"><span data-stu-id="3413d-178">For more information, see the <xref:System.Threading.Volatile> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Threading.Volatile.Read(System.Int16@)" />
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public static uint Read (ref uint location);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 Read(unsigned int32&amp; location) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Volatile.Read(System.UInt32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Read (ByRef location As UInteger) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 Read(System::UInt32 % location);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="System.UInt32&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="location"><span data-ttu-id="3413d-179">要讀取的欄位。</span><span class="sxs-lookup"><span data-stu-id="3413d-179">The field to read.</span></span></param>
        <summary><span data-ttu-id="3413d-180">讀取指定之欄位的值。</span><span class="sxs-lookup"><span data-stu-id="3413d-180">Reads the value of the specified field.</span></span> <span data-ttu-id="3413d-181">在需要它的系統上，以如下方式插入可防止處理器重新排序記憶體作業的記憶體屏障：如果程式碼中這個方法之後出現讀取或寫入，處理器便無法在這個方法之前移動它。</span><span class="sxs-lookup"><span data-stu-id="3413d-181">On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.</span></span></summary>
        <returns><span data-ttu-id="3413d-182">已讀取的值。</span><span class="sxs-lookup"><span data-stu-id="3413d-182">The value that was read.</span></span> <span data-ttu-id="3413d-183">這個值是由電腦中的任何處理器最新寫入的，與處理器的數目或處理器快取的狀態無關。</span><span class="sxs-lookup"><span data-stu-id="3413d-183">This value is the latest written by any processor in the computer, regardless of the number of processors or the state of processor cache.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3413d-184">如需詳細資訊，請參閱 <xref:System.Threading.Volatile> 類別。</span><span class="sxs-lookup"><span data-stu-id="3413d-184">For more information, see the <xref:System.Threading.Volatile> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Threading.Volatile.Read(System.Int32@)" />
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public static ulong Read (ref ulong location);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 Read(unsigned int64&amp; location) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Volatile.Read(System.UInt64@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Read (ByRef location As ULong) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 Read(System::UInt64 % location);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="System.UInt64&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="location"><span data-ttu-id="3413d-185">要讀取的欄位。</span><span class="sxs-lookup"><span data-stu-id="3413d-185">The field to read.</span></span></param>
        <summary><span data-ttu-id="3413d-186">讀取指定之欄位的值。</span><span class="sxs-lookup"><span data-stu-id="3413d-186">Reads the value of the specified field.</span></span> <span data-ttu-id="3413d-187">在需要它的系統上，以如下方式插入可防止處理器重新排序記憶體作業的記憶體屏障：如果程式碼中這個方法之後出現讀取或寫入，處理器便無法在這個方法之前移動它。</span><span class="sxs-lookup"><span data-stu-id="3413d-187">On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.</span></span></summary>
        <returns><span data-ttu-id="3413d-188">已讀取的值。</span><span class="sxs-lookup"><span data-stu-id="3413d-188">The value that was read.</span></span> <span data-ttu-id="3413d-189">這個值是由電腦中的任何處理器最新寫入的，與處理器的數目或處理器快取的狀態無關。</span><span class="sxs-lookup"><span data-stu-id="3413d-189">This value is the latest written by any processor in the computer, regardless of the number of processors or the state of processor cache.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3413d-190">如需詳細資訊，請參閱 <xref:System.Threading.Volatile> 類別。</span><span class="sxs-lookup"><span data-stu-id="3413d-190">For more information, see the <xref:System.Threading.Volatile> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Threading.Volatile.Read(System.Int64@)" />
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public static UIntPtr Read (ref UIntPtr location);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native unsigned int Read(native unsigned int&amp; location) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Volatile.Read(System.UIntPtr@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Read (ByRef location As UIntPtr) As UIntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static UIntPtr Read(UIntPtr % location);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UIntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="System.UIntPtr&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="location"><span data-ttu-id="3413d-191">要讀取的欄位。</span><span class="sxs-lookup"><span data-stu-id="3413d-191">The field to read.</span></span></param>
        <summary><span data-ttu-id="3413d-192">讀取指定之欄位的值。</span><span class="sxs-lookup"><span data-stu-id="3413d-192">Reads the value of the specified field.</span></span> <span data-ttu-id="3413d-193">在需要它的系統上，以如下方式插入可防止處理器重新排序記憶體作業的記憶體屏障：如果程式碼中這個方法之後出現讀取或寫入，處理器便無法在這個方法之前移動它。</span><span class="sxs-lookup"><span data-stu-id="3413d-193">On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.</span></span></summary>
        <returns><span data-ttu-id="3413d-194">已讀取的值。</span><span class="sxs-lookup"><span data-stu-id="3413d-194">The value that was read.</span></span> <span data-ttu-id="3413d-195">這個值是由電腦中的任何處理器最新寫入的，與處理器的數目或處理器快取的狀態無關。</span><span class="sxs-lookup"><span data-stu-id="3413d-195">This value is the latest written by any processor in the computer, regardless of the number of processors or the state of processor cache.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3413d-196">如需詳細資訊，請參閱 <xref:System.Threading.Volatile> 類別。</span><span class="sxs-lookup"><span data-stu-id="3413d-196">For more information, see the <xref:System.Threading.Volatile> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Threading.Volatile.Read(System.IntPtr@)" />
      </Docs>
    </Member>
    <Member MemberName="Read&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T Read&lt;T&gt; (ref T location) where T : class;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T Read&lt;class T&gt;(!!T&amp; location) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Volatile.Read``1(``0@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Read(Of T As Class) (ByRef location As T) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : class static T Read(T % location);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="location" Type="T&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="3413d-197">要讀取之欄位的型別。</span><span class="sxs-lookup"><span data-stu-id="3413d-197">The type of field to read.</span></span> <span data-ttu-id="3413d-198">此型別必須是參考型別，不得為實值型別。</span><span class="sxs-lookup"><span data-stu-id="3413d-198">This must be a reference type, not a value type.</span></span></typeparam>
        <param name="location"><span data-ttu-id="3413d-199">要讀取的欄位。</span><span class="sxs-lookup"><span data-stu-id="3413d-199">The field to read.</span></span></param>
        <summary><span data-ttu-id="3413d-200">從指定的欄位讀取物件參考。</span><span class="sxs-lookup"><span data-stu-id="3413d-200">Reads the object reference from the specified field.</span></span> <span data-ttu-id="3413d-201">在需要它的系統上，以如下方式插入可防止處理器重新排序記憶體作業的記憶體屏障：如果程式碼中這個方法之後出現讀取或寫入，處理器便無法在這個方法之前移動它。</span><span class="sxs-lookup"><span data-stu-id="3413d-201">On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.</span></span></summary>
        <returns><span data-ttu-id="3413d-202">已讀取之 <paramref name="T" /> 的參考。</span><span class="sxs-lookup"><span data-stu-id="3413d-202">The reference to <paramref name="T" /> that was read.</span></span> <span data-ttu-id="3413d-203">這個參考是由電腦中的任何處理器最新寫入的，與處理器的數目或處理器快取的狀態無關。</span><span class="sxs-lookup"><span data-stu-id="3413d-203">This reference is the latest written by any processor in the computer, regardless of the number of processors or the state of processor cache.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3413d-204">如需詳細資訊，請參閱 <xref:System.Threading.Volatile> 類別。</span><span class="sxs-lookup"><span data-stu-id="3413d-204">For more information, see the <xref:System.Threading.Volatile> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Write">
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3413d-205">將值寫入欄位中。</span><span class="sxs-lookup"><span data-stu-id="3413d-205">Writes a value to a field.</span></span> <span data-ttu-id="3413d-206">在需要它的系統上，以如下方式插入可防止處理器重新排序記憶體作業的記憶體屏障：如果程式碼中這個方法之前出現讀取或寫入，處理器便無法在這個方法之後移動它。</span><span class="sxs-lookup"><span data-stu-id="3413d-206">On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (ref bool location, bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(bool&amp; location, bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Volatile.Write(System.Boolean@,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (ByRef location As Boolean, value As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(bool % location, bool value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="System.Boolean&amp;" RefType="ref" />
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="location"><span data-ttu-id="3413d-207">寫入此值的欄位。</span><span class="sxs-lookup"><span data-stu-id="3413d-207">The field where the value is written.</span></span></param>
        <param name="value"><span data-ttu-id="3413d-208">要寫入的值。</span><span class="sxs-lookup"><span data-stu-id="3413d-208">The value to write.</span></span> <span data-ttu-id="3413d-209">立即寫入此值，好讓電腦中的所有處理器都可以看到此值。</span><span class="sxs-lookup"><span data-stu-id="3413d-209">The value is written immediately so that it is visible to all processors in the computer.</span></span></param>
        <summary><span data-ttu-id="3413d-210">將指定的值寫入指定的欄位。</span><span class="sxs-lookup"><span data-stu-id="3413d-210">Writes the specified value to the specified field.</span></span> <span data-ttu-id="3413d-211">在需要它的系統上，以如下方式插入可防止處理器重新排序記憶體作業的記憶體屏障：如果程式碼中這個方法之前出現讀取或寫入，處理器便無法在這個方法之後移動它。</span><span class="sxs-lookup"><span data-stu-id="3413d-211">On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3413d-212">如需詳細資訊，請參閱 <xref:System.Threading.Volatile> 類別。</span><span class="sxs-lookup"><span data-stu-id="3413d-212">For more information, see the <xref:System.Threading.Volatile> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (ref byte location, byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(unsigned int8&amp; location, unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Volatile.Write(System.Byte@,System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (ByRef location As Byte, value As Byte)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(System::Byte % location, System::Byte value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="System.Byte&amp;" RefType="ref" />
        <Parameter Name="value" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="location"><span data-ttu-id="3413d-213">寫入此值的欄位。</span><span class="sxs-lookup"><span data-stu-id="3413d-213">The field where the value is written.</span></span></param>
        <param name="value"><span data-ttu-id="3413d-214">要寫入的值。</span><span class="sxs-lookup"><span data-stu-id="3413d-214">The value to write.</span></span> <span data-ttu-id="3413d-215">立即寫入此值，好讓電腦中的所有處理器都可以看到此值。</span><span class="sxs-lookup"><span data-stu-id="3413d-215">The value is written immediately so that it is visible to all processors in the computer.</span></span></param>
        <summary><span data-ttu-id="3413d-216">將指定的值寫入指定的欄位。</span><span class="sxs-lookup"><span data-stu-id="3413d-216">Writes the specified value to the specified field.</span></span> <span data-ttu-id="3413d-217">在需要它的系統上，以如下方式插入可防止處理器重新排序記憶體作業的記憶體屏障：如果程式碼中這個方法之前出現讀取或寫入，處理器便無法在這個方法之後移動它。</span><span class="sxs-lookup"><span data-stu-id="3413d-217">On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3413d-218">如需詳細資訊，請參閱 <xref:System.Threading.Volatile> 類別。</span><span class="sxs-lookup"><span data-stu-id="3413d-218">For more information, see the <xref:System.Threading.Volatile> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (ref double location, double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(float64&amp; location, float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Volatile.Write(System.Double@,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (ByRef location As Double, value As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(double % location, double value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="System.Double&amp;" RefType="ref" />
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="location"><span data-ttu-id="3413d-219">寫入此值的欄位。</span><span class="sxs-lookup"><span data-stu-id="3413d-219">The field where the value is written.</span></span></param>
        <param name="value"><span data-ttu-id="3413d-220">要寫入的值。</span><span class="sxs-lookup"><span data-stu-id="3413d-220">The value to write.</span></span> <span data-ttu-id="3413d-221">立即寫入此值，好讓電腦中的所有處理器都可以看到此值。</span><span class="sxs-lookup"><span data-stu-id="3413d-221">The value is written immediately so that it is visible to all processors in the computer.</span></span></param>
        <summary><span data-ttu-id="3413d-222">將指定的值寫入指定的欄位。</span><span class="sxs-lookup"><span data-stu-id="3413d-222">Writes the specified value to the specified field.</span></span> <span data-ttu-id="3413d-223">在需要它的系統上，以如下方式插入可防止處理器重新排序記憶體作業的記憶體屏障：如果程式碼中這個方法之前出現讀取或寫入，處理器便無法在這個方法之後移動它。</span><span class="sxs-lookup"><span data-stu-id="3413d-223">On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3413d-224">如需詳細資訊，請參閱 <xref:System.Threading.Volatile> 類別。</span><span class="sxs-lookup"><span data-stu-id="3413d-224">For more information, see the <xref:System.Threading.Volatile> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (ref short location, short value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(int16&amp; location, int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Volatile.Write(System.Int16@,System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (ByRef location As Short, value As Short)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(short % location, short value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="System.Int16&amp;" RefType="ref" />
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="location"><span data-ttu-id="3413d-225">寫入此值的欄位。</span><span class="sxs-lookup"><span data-stu-id="3413d-225">The field where the value is written.</span></span></param>
        <param name="value"><span data-ttu-id="3413d-226">要寫入的值。</span><span class="sxs-lookup"><span data-stu-id="3413d-226">The value to write.</span></span> <span data-ttu-id="3413d-227">立即寫入此值，好讓電腦中的所有處理器都可以看到此值。</span><span class="sxs-lookup"><span data-stu-id="3413d-227">The value is written immediately so that it is visible to all processors in the computer.</span></span></param>
        <summary><span data-ttu-id="3413d-228">將指定的值寫入指定的欄位。</span><span class="sxs-lookup"><span data-stu-id="3413d-228">Writes the specified value to the specified field.</span></span> <span data-ttu-id="3413d-229">在需要它的系統上，以如下方式插入可防止處理器重新排序記憶體作業的記憶體屏障：如果程式碼中這個方法之前出現讀取或寫入，處理器便無法在這個方法之後移動它。</span><span class="sxs-lookup"><span data-stu-id="3413d-229">On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3413d-230">如需詳細資訊，請參閱 <xref:System.Threading.Volatile> 類別。</span><span class="sxs-lookup"><span data-stu-id="3413d-230">For more information, see the <xref:System.Threading.Volatile> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (ref int location, int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(int32&amp; location, int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Volatile.Write(System.Int32@,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (ByRef location As Integer, value As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(int % location, int value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="System.Int32&amp;" RefType="ref" />
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="location"><span data-ttu-id="3413d-231">寫入此值的欄位。</span><span class="sxs-lookup"><span data-stu-id="3413d-231">The field where the value is written.</span></span></param>
        <param name="value"><span data-ttu-id="3413d-232">要寫入的值。</span><span class="sxs-lookup"><span data-stu-id="3413d-232">The value to write.</span></span> <span data-ttu-id="3413d-233">立即寫入此值，好讓電腦中的所有處理器都可以看到此值。</span><span class="sxs-lookup"><span data-stu-id="3413d-233">The value is written immediately so that it is visible to all processors in the computer.</span></span></param>
        <summary><span data-ttu-id="3413d-234">將指定的值寫入指定的欄位。</span><span class="sxs-lookup"><span data-stu-id="3413d-234">Writes the specified value to the specified field.</span></span> <span data-ttu-id="3413d-235">在需要它的系統上，以如下方式插入可防止處理器重新排序記憶體作業的記憶體屏障：如果程式碼中這個方法之前出現讀取或寫入，處理器便無法在這個方法之後移動它。</span><span class="sxs-lookup"><span data-stu-id="3413d-235">On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3413d-236">如需詳細資訊，請參閱 <xref:System.Threading.Volatile> 類別。</span><span class="sxs-lookup"><span data-stu-id="3413d-236">For more information, see the <xref:System.Threading.Volatile> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (ref long location, long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(int64&amp; location, int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Volatile.Write(System.Int64@,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (ByRef location As Long, value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(long % location, long value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="System.Int64&amp;" RefType="ref" />
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="location"><span data-ttu-id="3413d-237">寫入此值的欄位。</span><span class="sxs-lookup"><span data-stu-id="3413d-237">The field where the value is written.</span></span></param>
        <param name="value"><span data-ttu-id="3413d-238">要寫入的值。</span><span class="sxs-lookup"><span data-stu-id="3413d-238">The value to write.</span></span> <span data-ttu-id="3413d-239">立即寫入此值，好讓電腦中的所有處理器都可以看到此值。</span><span class="sxs-lookup"><span data-stu-id="3413d-239">The value is written immediately so that it is visible to all processors in the computer.</span></span></param>
        <summary><span data-ttu-id="3413d-240">將指定的值寫入指定的欄位。</span><span class="sxs-lookup"><span data-stu-id="3413d-240">Writes the specified value to the specified field.</span></span> <span data-ttu-id="3413d-241">在需要它的系統上，以如下方式插入可防止處理器重新排序記憶體作業的記憶體屏障：如果程式碼中這個方法之前出現記憶體作業，處理器便無法在這個方法之後移動它。</span><span class="sxs-lookup"><span data-stu-id="3413d-241">On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a memory operation appears before this method in the code, the processor cannot move it after this method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3413d-242">如需詳細資訊，請參閱 <xref:System.Threading.Volatile> 類別。</span><span class="sxs-lookup"><span data-stu-id="3413d-242">For more information, see the <xref:System.Threading.Volatile> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (ref IntPtr location, IntPtr value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(native int&amp; location, native int value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Volatile.Write(System.IntPtr@,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (ByRef location As IntPtr, value As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(IntPtr % location, IntPtr value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="System.IntPtr&amp;" RefType="ref" />
        <Parameter Name="value" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="location"><span data-ttu-id="3413d-243">寫入此值的欄位。</span><span class="sxs-lookup"><span data-stu-id="3413d-243">The field where the value is written.</span></span></param>
        <param name="value"><span data-ttu-id="3413d-244">要寫入的值。</span><span class="sxs-lookup"><span data-stu-id="3413d-244">The value to write.</span></span> <span data-ttu-id="3413d-245">立即寫入此值，好讓電腦中的所有處理器都可以看到此值。</span><span class="sxs-lookup"><span data-stu-id="3413d-245">The value is written immediately so that it is visible to all processors in the computer.</span></span></param>
        <summary><span data-ttu-id="3413d-246">將指定的值寫入指定的欄位。</span><span class="sxs-lookup"><span data-stu-id="3413d-246">Writes the specified value to the specified field.</span></span> <span data-ttu-id="3413d-247">在需要它的系統上，以如下方式插入可防止處理器重新排序記憶體作業的記憶體屏障：如果程式碼中這個方法之前出現讀取或寫入，處理器便無法在這個方法之後移動它。</span><span class="sxs-lookup"><span data-stu-id="3413d-247">On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3413d-248">如需詳細資訊，請參閱 <xref:System.Threading.Volatile> 類別。</span><span class="sxs-lookup"><span data-stu-id="3413d-248">For more information, see the <xref:System.Threading.Volatile> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (ref sbyte location, sbyte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(int8&amp; location, int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Volatile.Write(System.SByte@,System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (ByRef location As SByte, value As SByte)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(System::SByte % location, System::SByte value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="System.SByte&amp;" RefType="ref" />
        <Parameter Name="value" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="location"><span data-ttu-id="3413d-249">寫入此值的欄位。</span><span class="sxs-lookup"><span data-stu-id="3413d-249">The field where the value is written.</span></span></param>
        <param name="value"><span data-ttu-id="3413d-250">要寫入的值。</span><span class="sxs-lookup"><span data-stu-id="3413d-250">The value to write.</span></span> <span data-ttu-id="3413d-251">立即寫入此值，好讓電腦中的所有處理器都可以看到此值。</span><span class="sxs-lookup"><span data-stu-id="3413d-251">The value is written immediately so that it is visible to all processors in the computer.</span></span></param>
        <summary><span data-ttu-id="3413d-252">將指定的值寫入指定的欄位。</span><span class="sxs-lookup"><span data-stu-id="3413d-252">Writes the specified value to the specified field.</span></span> <span data-ttu-id="3413d-253">在需要它的系統上，以如下方式插入可防止處理器重新排序記憶體作業的記憶體屏障：如果程式碼中這個方法之前出現讀取或寫入，處理器便無法在這個方法之後移動它。</span><span class="sxs-lookup"><span data-stu-id="3413d-253">On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3413d-254">如需詳細資訊，請參閱 <xref:System.Threading.Volatile> 類別。</span><span class="sxs-lookup"><span data-stu-id="3413d-254">For more information, see the <xref:System.Threading.Volatile> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (ref float location, float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(float32&amp; location, float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Volatile.Write(System.Single@,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (ByRef location As Single, value As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(float % location, float value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="System.Single&amp;" RefType="ref" />
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="location"><span data-ttu-id="3413d-255">寫入此值的欄位。</span><span class="sxs-lookup"><span data-stu-id="3413d-255">The field where the value is written.</span></span></param>
        <param name="value"><span data-ttu-id="3413d-256">要寫入的值。</span><span class="sxs-lookup"><span data-stu-id="3413d-256">The value to write.</span></span> <span data-ttu-id="3413d-257">立即寫入此值，好讓電腦中的所有處理器都可以看到此值。</span><span class="sxs-lookup"><span data-stu-id="3413d-257">The value is written immediately so that it is visible to all processors in the computer.</span></span></param>
        <summary><span data-ttu-id="3413d-258">將指定的值寫入指定的欄位。</span><span class="sxs-lookup"><span data-stu-id="3413d-258">Writes the specified value to the specified field.</span></span> <span data-ttu-id="3413d-259">在需要它的系統上，以如下方式插入可防止處理器重新排序記憶體作業的記憶體屏障：如果程式碼中這個方法之前出現讀取或寫入，處理器便無法在這個方法之後移動它。</span><span class="sxs-lookup"><span data-stu-id="3413d-259">On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3413d-260">如需詳細資訊，請參閱 <xref:System.Threading.Volatile> 類別。</span><span class="sxs-lookup"><span data-stu-id="3413d-260">For more information, see the <xref:System.Threading.Volatile> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (ref ushort location, ushort value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(unsigned int16&amp; location, unsigned int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Volatile.Write(System.UInt16@,System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (ByRef location As UShort, value As UShort)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(System::UInt16 % location, System::UInt16 value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="System.UInt16&amp;" RefType="ref" />
        <Parameter Name="value" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="location"><span data-ttu-id="3413d-261">寫入此值的欄位。</span><span class="sxs-lookup"><span data-stu-id="3413d-261">The field where the value is written.</span></span></param>
        <param name="value"><span data-ttu-id="3413d-262">要寫入的值。</span><span class="sxs-lookup"><span data-stu-id="3413d-262">The value to write.</span></span> <span data-ttu-id="3413d-263">立即寫入此值，好讓電腦中的所有處理器都可以看到此值。</span><span class="sxs-lookup"><span data-stu-id="3413d-263">The value is written immediately so that it is visible to all processors in the computer.</span></span></param>
        <summary><span data-ttu-id="3413d-264">將指定的值寫入指定的欄位。</span><span class="sxs-lookup"><span data-stu-id="3413d-264">Writes the specified value to the specified field.</span></span> <span data-ttu-id="3413d-265">在需要它的系統上，以如下方式插入可防止處理器重新排序記憶體作業的記憶體屏障：如果程式碼中這個方法之前出現讀取或寫入，處理器便無法在這個方法之後移動它。</span><span class="sxs-lookup"><span data-stu-id="3413d-265">On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3413d-266">如需詳細資訊，請參閱 <xref:System.Threading.Volatile> 類別。</span><span class="sxs-lookup"><span data-stu-id="3413d-266">For more information, see the <xref:System.Threading.Volatile> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Threading.Volatile.Write(System.Int16@,System.Int16)" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (ref uint location, uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(unsigned int32&amp; location, unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Volatile.Write(System.UInt32@,System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (ByRef location As UInteger, value As UInteger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(System::UInt32 % location, System::UInt32 value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="System.UInt32&amp;" RefType="ref" />
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="location"><span data-ttu-id="3413d-267">寫入此值的欄位。</span><span class="sxs-lookup"><span data-stu-id="3413d-267">The field where the value is written.</span></span></param>
        <param name="value"><span data-ttu-id="3413d-268">要寫入的值。</span><span class="sxs-lookup"><span data-stu-id="3413d-268">The value to write.</span></span> <span data-ttu-id="3413d-269">立即寫入此值，好讓電腦中的所有處理器都可以看到此值。</span><span class="sxs-lookup"><span data-stu-id="3413d-269">The value is written immediately so that it is visible to all processors in the computer.</span></span></param>
        <summary><span data-ttu-id="3413d-270">將指定的值寫入指定的欄位。</span><span class="sxs-lookup"><span data-stu-id="3413d-270">Writes the specified value to the specified field.</span></span> <span data-ttu-id="3413d-271">在需要它的系統上，以如下方式插入可防止處理器重新排序記憶體作業的記憶體屏障：如果程式碼中這個方法之前出現讀取或寫入，處理器便無法在這個方法之後移動它。</span><span class="sxs-lookup"><span data-stu-id="3413d-271">On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3413d-272">如需詳細資訊，請參閱 <xref:System.Threading.Volatile> 類別。</span><span class="sxs-lookup"><span data-stu-id="3413d-272">For more information, see the <xref:System.Threading.Volatile> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Threading.Volatile.Write(System.Int32@,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (ref ulong location, ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(unsigned int64&amp; location, unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Volatile.Write(System.UInt64@,System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (ByRef location As ULong, value As ULong)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(System::UInt64 % location, System::UInt64 value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="System.UInt64&amp;" RefType="ref" />
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="location"><span data-ttu-id="3413d-273">寫入此值的欄位。</span><span class="sxs-lookup"><span data-stu-id="3413d-273">The field where the value is written.</span></span></param>
        <param name="value"><span data-ttu-id="3413d-274">要寫入的值。</span><span class="sxs-lookup"><span data-stu-id="3413d-274">The value to write.</span></span> <span data-ttu-id="3413d-275">立即寫入此值，好讓電腦中的所有處理器都可以看到此值。</span><span class="sxs-lookup"><span data-stu-id="3413d-275">The value is written immediately so that it is visible to all processors in the computer.</span></span></param>
        <summary><span data-ttu-id="3413d-276">將指定的值寫入指定的欄位。</span><span class="sxs-lookup"><span data-stu-id="3413d-276">Writes the specified value to the specified field.</span></span> <span data-ttu-id="3413d-277">在需要它的系統上，以如下方式插入可防止處理器重新排序記憶體作業的記憶體屏障：如果程式碼中這個方法之前出現讀取或寫入，處理器便無法在這個方法之後移動它。</span><span class="sxs-lookup"><span data-stu-id="3413d-277">On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3413d-278">如需詳細資訊，請參閱 <xref:System.Threading.Volatile> 類別。</span><span class="sxs-lookup"><span data-stu-id="3413d-278">For more information, see the <xref:System.Threading.Volatile> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Threading.Volatile.Write(System.Int64@,System.Int64)" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (ref UIntPtr location, UIntPtr value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(native unsigned int&amp; location, native unsigned int value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Volatile.Write(System.UIntPtr@,System.UIntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (ByRef location As UIntPtr, value As UIntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(UIntPtr % location, UIntPtr value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="System.UIntPtr&amp;" RefType="ref" />
        <Parameter Name="value" Type="System.UIntPtr" />
      </Parameters>
      <Docs>
        <param name="location"><span data-ttu-id="3413d-279">寫入此值的欄位。</span><span class="sxs-lookup"><span data-stu-id="3413d-279">The field where the value is written.</span></span></param>
        <param name="value"><span data-ttu-id="3413d-280">要寫入的值。</span><span class="sxs-lookup"><span data-stu-id="3413d-280">The value to write.</span></span> <span data-ttu-id="3413d-281">立即寫入此值，好讓電腦中的所有處理器都可以看到此值。</span><span class="sxs-lookup"><span data-stu-id="3413d-281">The value is written immediately so that it is visible to all processors in the computer.</span></span></param>
        <summary><span data-ttu-id="3413d-282">將指定的值寫入指定的欄位。</span><span class="sxs-lookup"><span data-stu-id="3413d-282">Writes the specified value to the specified field.</span></span> <span data-ttu-id="3413d-283">在需要它的系統上，以如下方式插入可防止處理器重新排序記憶體作業的記憶體屏障：如果程式碼中這個方法之前出現讀取或寫入，處理器便無法在這個方法之後移動它。</span><span class="sxs-lookup"><span data-stu-id="3413d-283">On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3413d-284">如需詳細資訊，請參閱 <xref:System.Threading.Volatile> 類別。</span><span class="sxs-lookup"><span data-stu-id="3413d-284">For more information, see the <xref:System.Threading.Volatile> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Threading.Volatile.Write(System.IntPtr@,System.IntPtr)" />
      </Docs>
    </Member>
    <Member MemberName="Write&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void Write&lt;T&gt; (ref T location, T value) where T : class;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write&lt;class T&gt;(!!T&amp; location, !!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Volatile.Write``1(``0@,``0)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write(Of T As Class) (ByRef location As T, value As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : class static void Write(T % location, T value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="location" Type="T&amp;" RefType="ref" />
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="3413d-285">要寫入之欄位的型別。</span><span class="sxs-lookup"><span data-stu-id="3413d-285">The type of field to write.</span></span> <span data-ttu-id="3413d-286">此型別必須是參考型別，不得為實值型別。</span><span class="sxs-lookup"><span data-stu-id="3413d-286">This must be a reference type, not a value type.</span></span></typeparam>
        <param name="location"><span data-ttu-id="3413d-287">寫入物件參考的欄位。</span><span class="sxs-lookup"><span data-stu-id="3413d-287">The field where the object reference is written.</span></span></param>
        <param name="value"><span data-ttu-id="3413d-288">要寫入的物件參考。</span><span class="sxs-lookup"><span data-stu-id="3413d-288">The object reference to write.</span></span> <span data-ttu-id="3413d-289">立即寫入此參考，好讓電腦中的所有處理器都可以看到此參考。</span><span class="sxs-lookup"><span data-stu-id="3413d-289">The reference is written immediately so that it is visible to all processors in the computer.</span></span></param>
        <summary><span data-ttu-id="3413d-290">將指定的物件參考寫入指定的欄位。</span><span class="sxs-lookup"><span data-stu-id="3413d-290">Writes the specified object reference to the specified field.</span></span> <span data-ttu-id="3413d-291">在需要它的系統上，以如下方式插入可防止處理器重新排序記憶體作業的記憶體屏障：如果程式碼中這個方法之前出現讀取或寫入，處理器便無法在這個方法之後移動它。</span><span class="sxs-lookup"><span data-stu-id="3413d-291">On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3413d-292">如需詳細資訊，請參閱 <xref:System.Threading.Volatile> 類別。</span><span class="sxs-lookup"><span data-stu-id="3413d-292">For more information, see the <xref:System.Threading.Volatile> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>