<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="PreAllocatedOverlapped.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5b9c8213de3152acaef4de90e0a009eb799b79037.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b9c8213de3152acaef4de90e0a009eb799b79037</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.7.1,netstandard-2.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Threading.PreAllocatedOverlapped">
          <source>Represents pre-allocated state for native overlapped I/O operations.</source>
          <target state="translated">代表原生重疊 I/O 作業的預先配置狀態。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="M:System.Threading.PreAllocatedOverlapped.#ctor(System.Threading.IOCompletionCallback,System.Object,System.Object)">
          <source>A delegate that represents the callback method to invoke when each asynchronous I/O operation completes.</source>
          <target state="translated">委派，表示當每個非同步 I/O 作業完成時叫用的回呼方法。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="M:System.Threading.PreAllocatedOverlapped.#ctor(System.Threading.IOCompletionCallback,System.Object,System.Object)">
          <source>A user-supplied object that distinguishes the <ph id="ph1">&lt;see cref="T:System.Threading.NativeOverlapped" /&gt;</ph> instance produced from this object from other <ph id="ph2">&lt;see cref="T:System.Threading.NativeOverlapped" /&gt;</ph> instances.</source>
          <target state="translated">使用者提供的物件，可區別此物件與其他 <ph id="ph2">&lt;see cref="T:System.Threading.NativeOverlapped" /&gt;</ph> 執行個體產生的 <ph id="ph1">&lt;see cref="T:System.Threading.NativeOverlapped" /&gt;</ph> 執行個體。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="M:System.Threading.PreAllocatedOverlapped.#ctor(System.Threading.IOCompletionCallback,System.Object,System.Object)">
          <source>Its value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">其值可以是 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.Threading.PreAllocatedOverlapped.#ctor(System.Threading.IOCompletionCallback,System.Object,System.Object)">
          <source>An object or array of objects that represent the input or output buffer for the operations.</source>
          <target state="translated">物件或物件陣列，代表作業的輸入或輸出緩衝區。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Threading.PreAllocatedOverlapped.#ctor(System.Threading.IOCompletionCallback,System.Object,System.Object)">
          <source>Each object represents a buffer, such as an array of bytes.</source>
          <target state="translated">每個物件代表一個緩衝區，例如位元組陣列。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Threading.PreAllocatedOverlapped.#ctor(System.Threading.IOCompletionCallback,System.Object,System.Object)">
          <source>Its value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">其值可以是 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Threading.PreAllocatedOverlapped.#ctor(System.Threading.IOCompletionCallback,System.Object,System.Object)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Threading.PreAllocatedOverlapped" /&gt;</ph> class and specifies a delegate to invoke when each asynchronous I/O operation is complete, a user-provided object that provides context, and managed objects that serve as buffers.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Threading.PreAllocatedOverlapped" /&gt;</ph> 類別的新執行個體，並指定當每個非同步 I/O 作業完成時叫用的委派、提供內容的使用者提供物件，以及作為緩衝區的 Managed 物件。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.PreAllocatedOverlapped.#ctor(System.Threading.IOCompletionCallback,System.Object,System.Object)">
          <source>The new <ph id="ph1">&lt;xref:System.Threading.PreAllocatedOverlapped&gt;</ph> instance can be passed to the <ph id="ph2">&lt;xref:System.Threading.ThreadPoolBoundHandle.AllocateNativeOverlapped%2A&gt;</ph> method to produce a <ph id="ph3">&lt;xref:System.Threading.NativeOverlapped&gt;</ph> instance that can be passed to the operating system in overlapped I/O operations.</source>
          <target state="translated">新<ph id="ph1">&lt;xref:System.Threading.PreAllocatedOverlapped&gt;</ph>執行個體可以傳遞至<ph id="ph2">&lt;xref:System.Threading.ThreadPoolBoundHandle.AllocateNativeOverlapped%2A&gt;</ph>方法以產生<ph id="ph3">&lt;xref:System.Threading.NativeOverlapped&gt;</ph>可以傳遞給作業系統中的執行個體重疊的 I/O 作業。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.PreAllocatedOverlapped.#ctor(System.Threading.IOCompletionCallback,System.Object,System.Object)">
          <source>A single <ph id="ph1">&lt;xref:System.Threading.PreAllocatedOverlapped&gt;</ph> instance can only be used for a single native I/O operation at a time.</source>
          <target state="translated">單一<ph id="ph1">&lt;xref:System.Threading.PreAllocatedOverlapped&gt;</ph>執行個體只可以用於在單一原生的 I/O 作業一次。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.PreAllocatedOverlapped.#ctor(System.Threading.IOCompletionCallback,System.Object,System.Object)">
          <source>However, the state stored in the <ph id="ph1">&lt;xref:System.Threading.PreAllocatedOverlapped&gt;</ph> instance can be reused for subsequent native operations.</source>
          <target state="translated">不過，將狀態儲存在<ph id="ph1">&lt;xref:System.Threading.PreAllocatedOverlapped&gt;</ph>針對後續的原生作業可以重複使用執行個體。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.PreAllocatedOverlapped.#ctor(System.Threading.IOCompletionCallback,System.Object,System.Object)">
          <source>The buffers specified in <ph id="ph1">`pinData`</ph> are pinned until the <ph id="ph2">&lt;xref:System.Threading.PreAllocatedOverlapped.Dispose%2A&gt;</ph> method is called.</source>
          <target state="translated">指定的緩衝區<ph id="ph1">`pinData`</ph>直到 pin<ph id="ph2">&lt;xref:System.Threading.PreAllocatedOverlapped.Dispose%2A&gt;</ph>方法呼叫。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Threading.PreAllocatedOverlapped.#ctor(System.Threading.IOCompletionCallback,System.Object,System.Object)">
          <source><ph id="ph1">&lt;paramref name="callback" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="callback" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Threading.PreAllocatedOverlapped.#ctor(System.Threading.IOCompletionCallback,System.Object,System.Object)">
          <source>This method was called after the <ph id="ph1">&lt;see cref="T:System.Threading.ThreadPoolBoundHandle" /&gt;</ph> was disposed.</source>
          <target state="translated">處置 <ph id="ph1">&lt;see cref="T:System.Threading.ThreadPoolBoundHandle" /&gt;</ph> 後才呼叫這個方法。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Threading.PreAllocatedOverlapped.Dispose">
          <source>Frees the resources associated with this <ph id="ph1">&lt;see cref="T:System.Threading.PreAllocatedOverlapped" /&gt;</ph> instance.</source>
          <target state="translated">釋出與此 <ph id="ph1">&lt;see cref="T:System.Threading.PreAllocatedOverlapped" /&gt;</ph> 執行個體建立關聯的資源。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Threading.PreAllocatedOverlapped.Finalize">
          <source>Frees unmanaged resources before the current instance is reclaimed by garbage collection.</source>
          <target state="translated">在記憶體回收回收目前的執行個體前，先釋出 Unmanaged 資源。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>