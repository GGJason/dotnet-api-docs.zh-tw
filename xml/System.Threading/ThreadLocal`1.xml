<Type Name="ThreadLocal&lt;T&gt;" FullName="System.Threading.ThreadLocal&lt;T&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="229261779e88f1a3f244ed38b75d05b22d5635ba" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58737567" /></Metadata><TypeSignature Language="C#" Value="public class ThreadLocal&lt;T&gt; : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ThreadLocal`1&lt;T&gt; extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Threading.ThreadLocal`1" />
  <TypeSignature Language="VB.NET" Value="Public Class ThreadLocal(Of T)&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public ref class ThreadLocal : IDisposable" />
  <TypeSignature Language="F#" Value="type ThreadLocal&lt;'T&gt; = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Threading</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Diagnostics.DebuggerDisplay("IsValueCreated={IsValueCreated}, Value={ValueForDebugDisplay}, Count={ValuesCountForDebugDisplay}")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Diagnostics.DebuggerTypeProxy(typeof(System.Threading.SystemThreading_ThreadLocalDebugView`1))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0">
      <AttributeName>System.Diagnostics.DebuggerDisplay("IsValueCreated={IsValueCreated}, Value={ValueForDebugDisplay}")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="T"><span data-ttu-id="bb4ca-101">指定每個執行緒儲存的資料型別。</span><span class="sxs-lookup"><span data-stu-id="bb4ca-101">Specifies the type of data stored per-thread.</span></span></typeparam>
    <summary><span data-ttu-id="bb4ca-102">提供資料的執行緒區域儲存區。</span><span class="sxs-lookup"><span data-stu-id="bb4ca-102">Provides thread-local storage of data.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="bb4ca-103">下列範例顯示如何使用 <xref:System.Threading.ThreadLocal%601>：</span><span class="sxs-lookup"><span data-stu-id="bb4ca-103">The following example shows how to use <xref:System.Threading.ThreadLocal%601>:</span></span>  
  
 [!code-csharp[System.Threading.ThreadLocal#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.threading.threadlocal/cs/threadlocal.cs#01)]
 [!code-vb[System.Threading.ThreadLocal#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.threading.threadlocal/vb/threadlocal.vb#01)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="bb4ca-104">除了<see cref="M:System.Threading.ThreadLocal`1.Dispose" />的所有公用和受保護的成員<see cref="T:System.Threading.ThreadLocal`1" />是安全執行緒，且可能會從多個執行緒同時使用。</span><span class="sxs-lookup"><span data-stu-id="bb4ca-104">With the exception of <see cref="M:System.Threading.ThreadLocal`1.Dispose" />, all public and protected members of <see cref="T:System.Threading.ThreadLocal`1" /> are thread-safe and may be used concurrently from multiple threads.</span></span> <span data-ttu-id="bb4ca-105">傳回值<see cref="P:System.Threading.ThreadLocal`1.Value" />和<see cref="P:System.Threading.ThreadLocal`1.IsValueCreated" />屬性是特定執行緒存取屬性。</span><span class="sxs-lookup"><span data-stu-id="bb4ca-105">The value returned for the <see cref="P:System.Threading.ThreadLocal`1.Value" /> and <see cref="P:System.Threading.ThreadLocal`1.IsValueCreated" /> properties is specific for the thread on which the property is accessed.</span></span></threadsafe>
    <altmember cref="T:System.Lazy`1" />
    <altmember cref="T:System.Threading.AsyncLocal`1" />
    <related type="Article" href="~/docs/framework/performance/lazy-initialization.md"><span data-ttu-id="bb4ca-106">延遲初始設定</span><span class="sxs-lookup"><span data-stu-id="bb4ca-106">Lazy Initialization</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/8cd68620-dcc3-4f20-8835-c728a6820e71"><span data-ttu-id="bb4ca-107">如何：執行物件的延遲初始化</span><span class="sxs-lookup"><span data-stu-id="bb4ca-107">How to: Perform Lazy Initialization of Objects</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="bb4ca-108">初始化 <see cref="T:System.Threading.ThreadLocal`1" /> 執行個體。</span><span class="sxs-lookup"><span data-stu-id="bb4ca-108">Initializes a <see cref="T:System.Threading.ThreadLocal`1" /> instance.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ThreadLocal ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.ThreadLocal`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ThreadLocal();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bb4ca-109">初始化 <see cref="T:System.Threading.ThreadLocal`1" /> 執行個體。</span><span class="sxs-lookup"><span data-stu-id="bb4ca-109">Initializes the <see cref="T:System.Threading.ThreadLocal`1" /> instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb4ca-110">預設值`T`用來初始化執行個體時<xref:System.Threading.ThreadLocal%601.Value%2A>存取第一次。</span><span class="sxs-lookup"><span data-stu-id="bb4ca-110">The default value of `T` is used to initialize the instance when <xref:System.Threading.ThreadLocal%601.Value%2A> is accessed for the first time.</span></span>  
  
 <span data-ttu-id="bb4ca-111">這個建構函式相當於呼叫<xref:System.Threading.ThreadLocal%601.%23ctor%28System.Boolean%29>建構函式的值`false`如`trackAllValues`引數。</span><span class="sxs-lookup"><span data-stu-id="bb4ca-111">This constructor is equivalent to calling the <xref:System.Threading.ThreadLocal%601.%23ctor%28System.Boolean%29> constructor with a value of `false` for the `trackAllValues` argument.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Lazy`1" />
        <related type="Article" href="~/docs/framework/performance/lazy-initialization.md"><span data-ttu-id="bb4ca-112">延遲初始設定</span><span class="sxs-lookup"><span data-stu-id="bb4ca-112">Lazy Initialization</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/8cd68620-dcc3-4f20-8835-c728a6820e71"><span data-ttu-id="bb4ca-113">如何：執行物件的延遲初始化</span><span class="sxs-lookup"><span data-stu-id="bb4ca-113">How to: Perform Lazy Initialization of Objects</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ThreadLocal (bool trackAllValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool trackAllValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.ThreadLocal`1.#ctor(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (trackAllValues As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ThreadLocal(bool trackAllValues);" />
      <MemberSignature Language="F#" Value="new System.Threading.ThreadLocal&lt;'T&gt; : bool -&gt; System.Threading.ThreadLocal&lt;'T&gt;" Usage="new System.Threading.ThreadLocal&lt;'T&gt; trackAllValues" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="trackAllValues" Type="System.Boolean" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="trackAllValues"><span data-ttu-id="bb4ca-114"><see langword="true" /> 表示追蹤所有在執行個體上設定的值，並透過 <see cref="P:System.Threading.ThreadLocal`1.Values" /> 屬性將它們公開；否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="bb4ca-114"><see langword="true" /> to track all values set on the instance and expose them through the <see cref="P:System.Threading.ThreadLocal`1.Values" /> property; <see langword="false" /> otherwise.</span></span></param>
        <summary><span data-ttu-id="bb4ca-115">初始化 <see cref="T:System.Threading.ThreadLocal`1" /> 執行個體，並指定是否可從任何執行緒存取所有值。</span><span class="sxs-lookup"><span data-stu-id="bb4ca-115">Initializes the <see cref="T:System.Threading.ThreadLocal`1" /> instance and specifies whether all values are accessible from any thread.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb4ca-116">如果`trackAllValues`是`false`，只有在目前執行緒的這個執行個體的值是可存取。</span><span class="sxs-lookup"><span data-stu-id="bb4ca-116">If `trackAllValues` is `false`, only the value of this instance for the current thread is accessible.</span></span> <span data-ttu-id="bb4ca-117">嘗試使用<xref:System.Threading.ThreadLocal%601.Values%2A>來擷取所有的屬性值會擲回<xref:System.InvalidOperationException>例外狀況。</span><span class="sxs-lookup"><span data-stu-id="bb4ca-117">Attempting to use the <xref:System.Threading.ThreadLocal%601.Values%2A> property to retrieve all values throws an <xref:System.InvalidOperationException> exception.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ThreadLocal (Func&lt;T&gt; valueFactory);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Func`1&lt;!T&gt; valueFactory) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.ThreadLocal`1.#ctor(System.Func{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (valueFactory As Func(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ThreadLocal(Func&lt;T&gt; ^ valueFactory);" />
      <MemberSignature Language="F#" Value="new System.Threading.ThreadLocal&lt;'T&gt; : Func&lt;'T&gt; -&gt; System.Threading.ThreadLocal&lt;'T&gt;" Usage="new System.Threading.ThreadLocal&lt;'T&gt; valueFactory" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="valueFactory" Type="System.Func&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="valueFactory"><span data-ttu-id="bb4ca-118">當嘗試擷取未事先初始化的 <see cref="T:System.Func`1" /> 時，系統會叫用 <see cref="P:System.Threading.ThreadLocal`1.Value" /> 來產生延遲初始化的值。</span><span class="sxs-lookup"><span data-stu-id="bb4ca-118">The  <see cref="T:System.Func`1" /> invoked to produce a lazily-initialized value when an attempt is made to retrieve <see cref="P:System.Threading.ThreadLocal`1.Value" /> without it having been previously initialized.</span></span></param>
        <summary><span data-ttu-id="bb4ca-119">使用指定的 <paramref name="valueFactory" /> 函式來初始化 <see cref="T:System.Threading.ThreadLocal`1" /> 的執行個體。</span><span class="sxs-lookup"><span data-stu-id="bb4ca-119">Initializes the <see cref="T:System.Threading.ThreadLocal`1" /> instance with the specified <paramref name="valueFactory" /> function.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="bb4ca-120"><paramref name="valueFactory" /> 是 null 參考 (在 Visual Basic 中為 Nothing)。</span><span class="sxs-lookup"><span data-stu-id="bb4ca-120"><paramref name="valueFactory" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <altmember cref="T:System.Lazy`1" />
        <related type="Article" href="~/docs/framework/performance/lazy-initialization.md"><span data-ttu-id="bb4ca-121">延遲初始設定</span><span class="sxs-lookup"><span data-stu-id="bb4ca-121">Lazy Initialization</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/8cd68620-dcc3-4f20-8835-c728a6820e71"><span data-ttu-id="bb4ca-122">如何：執行物件的延遲初始化</span><span class="sxs-lookup"><span data-stu-id="bb4ca-122">How to: Perform Lazy Initialization of Objects</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ThreadLocal (Func&lt;T&gt; valueFactory, bool trackAllValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Func`1&lt;!T&gt; valueFactory, bool trackAllValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.ThreadLocal`1.#ctor(System.Func{`0},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (valueFactory As Func(Of T), trackAllValues As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ThreadLocal(Func&lt;T&gt; ^ valueFactory, bool trackAllValues);" />
      <MemberSignature Language="F#" Value="new System.Threading.ThreadLocal&lt;'T&gt; : Func&lt;'T&gt; * bool -&gt; System.Threading.ThreadLocal&lt;'T&gt;" Usage="new System.Threading.ThreadLocal&lt;'T&gt; (valueFactory, trackAllValues)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="valueFactory" Type="System.Func&lt;T&gt;" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="trackAllValues" Type="System.Boolean" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="valueFactory"><span data-ttu-id="bb4ca-123">當嘗試擷取未事先初始化的 <see cref="P:System.Threading.ThreadLocal`1.Value" /> 時，系統會叫用 <see cref="T:System.Func`1" /> 來產生延遲初始化的值。</span><span class="sxs-lookup"><span data-stu-id="bb4ca-123">The <see cref="T:System.Func`1" /> invoked to produce a lazily-initialized value when an attempt is made to retrieve <see cref="P:System.Threading.ThreadLocal`1.Value" /> without it having been previously initialized.</span></span></param>
        <param name="trackAllValues"><span data-ttu-id="bb4ca-124"><see langword="true" /> 表示追蹤所有在執行個體上設定的值，並透過 <see cref="P:System.Threading.ThreadLocal`1.Values" /> 屬性將它們公開；否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="bb4ca-124"><see langword="true" /> to track all values set on the instance and expose them through the <see cref="P:System.Threading.ThreadLocal`1.Values" /> property; <see langword="false" /> otherwise.</span></span></param>
        <summary><span data-ttu-id="bb4ca-125">使用指定的 <paramref name="valueFactory" /> 函式及指出是否可從任何執行緒存取所有值的旗標，初始化 <see cref="T:System.Threading.ThreadLocal`1" /> 執行個體。</span><span class="sxs-lookup"><span data-stu-id="bb4ca-125">Initializes the <see cref="T:System.Threading.ThreadLocal`1" /> instance with the specified <paramref name="valueFactory" /> function and a flag that indicates whether all values are accessible from any thread.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb4ca-126">如果`trackAllValues`是`false`，只有在目前執行緒的這個執行個體的值是可存取。</span><span class="sxs-lookup"><span data-stu-id="bb4ca-126">If `trackAllValues` is `false`, only the value of this instance for the current thread is accessible.</span></span> <span data-ttu-id="bb4ca-127">嘗試使用<xref:System.Threading.ThreadLocal%601.Values%2A>來擷取所有的屬性值會擲回<xref:System.InvalidOperationException>例外狀況。</span><span class="sxs-lookup"><span data-stu-id="bb4ca-127">Attempting to use the <xref:System.Threading.ThreadLocal%601.Values%2A> property to retrieve all values throws an <xref:System.InvalidOperationException> exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="bb4ca-128"><paramref name="valueFactory" /> 為 <see langword="null" /> 參考 (在 Visual Basic 中為 <see langword="Nothing" />)。</span><span class="sxs-lookup"><span data-stu-id="bb4ca-128"><paramref name="valueFactory" /> is a <see langword="null" /> reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="bb4ca-129">釋放這個 <see cref="T:System.Threading.ThreadLocal`1" /> 執行個體所使用的資源。</span><span class="sxs-lookup"><span data-stu-id="bb4ca-129">Releases the resources used by this <see cref="T:System.Threading.ThreadLocal`1" /> instance.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.ThreadLocal`1.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="threadLocal.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bb4ca-130">釋放 <see cref="T:System.Threading.ThreadLocal`1" /> 類別目前的執行個體所使用的全部資源。</span><span class="sxs-lookup"><span data-stu-id="bb4ca-130">Releases all resources used by the current instance of the <see cref="T:System.Threading.ThreadLocal`1" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb4ca-131">`Dispose` 使用完畢時，請呼叫 <xref:System.Threading.ThreadLocal%601>。</span><span class="sxs-lookup"><span data-stu-id="bb4ca-131">Call `Dispose` when you are finished using the <xref:System.Threading.ThreadLocal%601>.</span></span> <span data-ttu-id="bb4ca-132">`Dispose` 方法會將 <xref:System.Threading.ThreadLocal%601> 保留在無法使用的狀態。</span><span class="sxs-lookup"><span data-stu-id="bb4ca-132">The `Dispose` method leaves the <xref:System.Threading.ThreadLocal%601> in an unusable state.</span></span> <span data-ttu-id="bb4ca-133">之後呼叫`Dispose`，您必須釋放所有的參考<xref:System.Threading.ThreadLocal%601>讓記憶體回收行程可以回收記憶體，<xref:System.Threading.ThreadLocal%601>所佔用。</span><span class="sxs-lookup"><span data-stu-id="bb4ca-133">After calling `Dispose`, you must release all references to the <xref:System.Threading.ThreadLocal%601> so the garbage collector can reclaim the memory that the <xref:System.Threading.ThreadLocal%601> was occupying.</span></span>  
  
 <span data-ttu-id="bb4ca-134">如需詳細資訊，請參閱 <<c0> [ 清除 Unmanaged 資源向上](~/docs/standard/garbage-collection/unmanaged.md)並[實作 Dispose 方法](~/docs/standard/garbage-collection/implementing-dispose.md)。</span><span class="sxs-lookup"><span data-stu-id="bb4ca-134">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bb4ca-135">在您釋放最後一個 `Dispose` 參考之前，請務必呼叫 <xref:System.Threading.ThreadLocal%601>。</span><span class="sxs-lookup"><span data-stu-id="bb4ca-135">Always call `Dispose` before you release your last reference to the <xref:System.Threading.ThreadLocal%601>.</span></span> <span data-ttu-id="bb4ca-136">否則工作窗格所使用的資源不會釋放，直到記憶體回收行程呼叫 <xref:System.Threading.ThreadLocal%601> 物件的 `Finalize` 方法。</span><span class="sxs-lookup"><span data-stu-id="bb4ca-136">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Threading.ThreadLocal%601> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Lazy`1" />
        <related type="Article" href="~/docs/framework/performance/lazy-initialization.md"><span data-ttu-id="bb4ca-137">延遲初始設定</span><span class="sxs-lookup"><span data-stu-id="bb4ca-137">Lazy Initialization</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/8cd68620-dcc3-4f20-8835-c728a6820e71"><span data-ttu-id="bb4ca-138">如何：執行物件的延遲初始化</span><span class="sxs-lookup"><span data-stu-id="bb4ca-138">How to: Perform Lazy Initialization of Objects</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.ThreadLocal`1.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="threadLocal.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="bb4ca-139">布林值，表示是否會因為呼叫 <see cref="M:System.Threading.ThreadLocal`1.Dispose" /> 而呼叫這個方法。</span><span class="sxs-lookup"><span data-stu-id="bb4ca-139">A Boolean value that indicates whether this method is being called due to a call to <see cref="M:System.Threading.ThreadLocal`1.Dispose" />.</span></span></param>
        <summary><span data-ttu-id="bb4ca-140">釋放這個 <see cref="T:System.Threading.ThreadLocal`1" /> 執行個體所使用的資源。</span><span class="sxs-lookup"><span data-stu-id="bb4ca-140">Releases the resources used by this <see cref="T:System.Threading.ThreadLocal`1" /> instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb4ca-141">不同於大部分的成員清單<xref:System.Threading.ThreadLocal%601>，這個方法不是安全執行緒。</span><span class="sxs-lookup"><span data-stu-id="bb4ca-141">Unlike most of the members of <xref:System.Threading.ThreadLocal%601>, this method is not thread-safe.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Lazy`1" />
        <related type="Article" href="~/docs/framework/performance/lazy-initialization.md"><span data-ttu-id="bb4ca-142">延遲初始設定</span><span class="sxs-lookup"><span data-stu-id="bb4ca-142">Lazy Initialization</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/8cd68620-dcc3-4f20-8835-c728a6820e71"><span data-ttu-id="bb4ca-143">如何：執行物件的延遲初始化</span><span class="sxs-lookup"><span data-stu-id="bb4ca-143">How to: Perform Lazy Initialization of Objects</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~ThreadLocal ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.ThreadLocal`1.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!ThreadLocal`1 ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="threadLocal.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bb4ca-144">釋放這個 <see cref="T:System.Threading.ThreadLocal`1" /> 執行個體所使用的資源。</span><span class="sxs-lookup"><span data-stu-id="bb4ca-144">Releases the resources used by this <see cref="T:System.Threading.ThreadLocal`1" /> instance.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Lazy`1" />
        <related type="Article" href="~/docs/framework/performance/lazy-initialization.md"><span data-ttu-id="bb4ca-145">延遲初始設定</span><span class="sxs-lookup"><span data-stu-id="bb4ca-145">Lazy Initialization</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/8cd68620-dcc3-4f20-8835-c728a6820e71"><span data-ttu-id="bb4ca-146">如何：執行物件的延遲初始化</span><span class="sxs-lookup"><span data-stu-id="bb4ca-146">How to: Perform Lazy Initialization of Objects</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="IsValueCreated">
      <MemberSignature Language="C#" Value="public bool IsValueCreated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsValueCreated" />
      <MemberSignature Language="DocId" Value="P:System.Threading.ThreadLocal`1.IsValueCreated" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsValueCreated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsValueCreated { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsValueCreated : bool" Usage="System.Threading.ThreadLocal&lt;'T&gt;.IsValueCreated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb4ca-147">取得值，這個值表示 <see cref="P:System.Threading.ThreadLocal`1.Value" /> 是否已在目前執行緒中完成初始化。</span><span class="sxs-lookup"><span data-stu-id="bb4ca-147">Gets whether <see cref="P:System.Threading.ThreadLocal`1.Value" /> is initialized on the current thread.</span></span></summary>
        <value><span data-ttu-id="bb4ca-148">如果已在目前執行緒上初始化 <see cref="P:System.Threading.ThreadLocal`1.Value" /> 則為 true，否則為 false。</span><span class="sxs-lookup"><span data-stu-id="bb4ca-148">true if <see cref="P:System.Threading.ThreadLocal`1.Value" /> is initialized on the current thread; otherwise false.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="bb4ca-149"><see cref="T:System.Threading.ThreadLocal`1" /> 執行個體已經過處置。</span><span class="sxs-lookup"><span data-stu-id="bb4ca-149">The <see cref="T:System.Threading.ThreadLocal`1" /> instance has been disposed.</span></span></exception>
        <altmember cref="T:System.Lazy`1" />
        <related type="Article" href="~/docs/framework/performance/lazy-initialization.md"><span data-ttu-id="bb4ca-150">延遲初始設定</span><span class="sxs-lookup"><span data-stu-id="bb4ca-150">Lazy Initialization</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/8cd68620-dcc3-4f20-8835-c728a6820e71"><span data-ttu-id="bb4ca-151">如何：執行物件的延遲初始化</span><span class="sxs-lookup"><span data-stu-id="bb4ca-151">How to: Perform Lazy Initialization of Objects</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.ThreadLocal`1.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="threadLocal.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bb4ca-152">建立並傳回目前執行緒的這個執行個體的字串表示。</span><span class="sxs-lookup"><span data-stu-id="bb4ca-152">Creates and returns a string representation of this instance for the current thread.</span></span></summary>
        <returns><span data-ttu-id="bb4ca-153">在 <see cref="M:System.Object.ToString" /> 上呼叫 <see cref="P:System.Threading.ThreadLocal`1.Value" /> 的結果。</span><span class="sxs-lookup"><span data-stu-id="bb4ca-153">The result of calling <see cref="M:System.Object.ToString" /> on the <see cref="P:System.Threading.ThreadLocal`1.Value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb4ca-154">在此情況下，存取呼叫這個方法會強制在目前的執行緒，初始化<xref:System.Threading.ThreadLocal%601.Value%2A>直接。</span><span class="sxs-lookup"><span data-stu-id="bb4ca-154">Calling this method forces initialization for the current thread, as is the case with accessing <xref:System.Threading.ThreadLocal%601.Value%2A> directly.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="bb4ca-155"><see cref="T:System.Threading.ThreadLocal`1" /> 執行個體已經過處置。</span><span class="sxs-lookup"><span data-stu-id="bb4ca-155">The <see cref="T:System.Threading.ThreadLocal`1" /> instance has been disposed.</span></span></exception>
        <exception cref="T:System.NullReferenceException"><span data-ttu-id="bb4ca-156">目前執行緒的 <see cref="P:System.Threading.ThreadLocal`1.Value" /> 是 Null 參考 (在 Visual Basic 中為 Nothing)。</span><span class="sxs-lookup"><span data-stu-id="bb4ca-156">The <see cref="P:System.Threading.ThreadLocal`1.Value" /> for the current thread is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="bb4ca-157">初始化函式會嘗試遞迴參考 <see cref="P:System.Threading.ThreadLocal`1.Value" /> 。</span><span class="sxs-lookup"><span data-stu-id="bb4ca-157">The initialization function attempted to reference <see cref="P:System.Threading.ThreadLocal`1.Value" /> recursively.</span></span></exception>
        <exception cref="T:System.MissingMemberException"><span data-ttu-id="bb4ca-158">沒有提供任何預設的建構函式，也沒有提供任何値 Factory。</span><span class="sxs-lookup"><span data-stu-id="bb4ca-158">No default constructor is provided and no value factory is supplied.</span></span></exception>
        <altmember cref="T:System.Lazy`1" />
        <related type="Article" href="~/docs/framework/performance/lazy-initialization.md"><span data-ttu-id="bb4ca-159">延遲初始設定</span><span class="sxs-lookup"><span data-stu-id="bb4ca-159">Lazy Initialization</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/8cd68620-dcc3-4f20-8835-c728a6820e71"><span data-ttu-id="bb4ca-160">如何：執行物件的延遲初始化</span><span class="sxs-lookup"><span data-stu-id="bb4ca-160">How to: Perform Lazy Initialization of Objects</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public T Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T Value" />
      <MemberSignature Language="DocId" Value="P:System.Threading.ThreadLocal`1.Value" />
      <MemberSignature Language="VB.NET" Value="Public Property Value As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T Value { T get(); void set(T value); };" />
      <MemberSignature Language="F#" Value="member this.Value : 'T with get, set" Usage="System.Threading.ThreadLocal&lt;'T&gt;.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb4ca-161">取得或設定目前執行緒的這個執行個體的值。</span><span class="sxs-lookup"><span data-stu-id="bb4ca-161">Gets or sets the value of this instance for the current thread.</span></span></summary>
        <value><span data-ttu-id="bb4ca-162">傳回這個 ThreadLocal 負責初始化之物件的執行個體。</span><span class="sxs-lookup"><span data-stu-id="bb4ca-162">Returns an instance of the object that this ThreadLocal is responsible for initializing.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb4ca-163">如果未針對目前的執行緒之前初始化這個執行個體，存取<xref:System.Threading.ThreadLocal%601.Value%2A>會嘗試將它初始化。</span><span class="sxs-lookup"><span data-stu-id="bb4ca-163">If this instance was not previously initialized for the current thread, accessing <xref:System.Threading.ThreadLocal%601.Value%2A> will attempt to initialize it.</span></span> <span data-ttu-id="bb4ca-164">如果在建構期間提供的初始化函式，初始化會藉由叫用函數以擷取的初始值<xref:System.Threading.ThreadLocal%601.Value%2A>。</span><span class="sxs-lookup"><span data-stu-id="bb4ca-164">If an initialization function was supplied during the construction, that initialization will happen by invoking the function to retrieve the initial value for <xref:System.Threading.ThreadLocal%601.Value%2A>.</span></span> <span data-ttu-id="bb4ca-165">否則，您將使用的預設值。</span><span class="sxs-lookup"><span data-stu-id="bb4ca-165">Otherwise, the default value of will be used.</span></span> <span data-ttu-id="bb4ca-166">如果擲回例外狀況，該例外狀況快取，並擲回之屬性的每個後續的存取。</span><span class="sxs-lookup"><span data-stu-id="bb4ca-166">If an exception is thrown, that exception is cached and thrown on each subsequent access of the property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="bb4ca-167"><see cref="T:System.Threading.ThreadLocal`1" /> 執行個體已經過處置。</span><span class="sxs-lookup"><span data-stu-id="bb4ca-167">The <see cref="T:System.Threading.ThreadLocal`1" /> instance has been disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="bb4ca-168">初始化函式會嘗試遞迴參考 <see cref="P:System.Threading.ThreadLocal`1.Value" /> 。</span><span class="sxs-lookup"><span data-stu-id="bb4ca-168">The initialization function attempted to reference <see cref="P:System.Threading.ThreadLocal`1.Value" /> recursively.</span></span></exception>
        <exception cref="T:System.MissingMemberException"><span data-ttu-id="bb4ca-169">沒有提供任何預設的建構函式，也沒有提供任何値 Factory。</span><span class="sxs-lookup"><span data-stu-id="bb4ca-169">No default constructor is provided and no value factory is supplied.</span></span></exception>
        <altmember cref="T:System.Lazy`1" />
        <related type="Article" href="~/docs/framework/performance/lazy-initialization.md"><span data-ttu-id="bb4ca-170">延遲初始設定</span><span class="sxs-lookup"><span data-stu-id="bb4ca-170">Lazy Initialization</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/8cd68620-dcc3-4f20-8835-c728a6820e71"><span data-ttu-id="bb4ca-171">如何：執行物件的延遲初始化</span><span class="sxs-lookup"><span data-stu-id="bb4ca-171">How to: Perform Lazy Initialization of Objects</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Values">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;T&gt; Values { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;!T&gt; Values" />
      <MemberSignature Language="DocId" Value="P:System.Threading.ThreadLocal`1.Values" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Values As IList(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;T&gt; ^ Values { System::Collections::Generic::IList&lt;T&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Values : System.Collections.Generic.IList&lt;'T&gt;" Usage="System.Threading.ThreadLocal&lt;'T&gt;.Values" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb4ca-172">取得清單，其中包含已存取這個執行個體的所有執行緒目前所儲存的所有值。</span><span class="sxs-lookup"><span data-stu-id="bb4ca-172">Gets a list for all of the values currently stored by all of the threads that have accessed this instance.</span></span></summary>
        <value><span data-ttu-id="bb4ca-173">已存取這個執行個體的所有執行緒目前所儲存之所有值的清單。</span><span class="sxs-lookup"><span data-stu-id="bb4ca-173">A list for all of the values currently stored by all of the threads that have accessed this instance.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="bb4ca-174">由於這個執行個體是在類別建構函式呼叫中將 <paramref name="trackAllValues" /> 引數設定為 <see langword="false" /> 來初始化，因此無法使用所有執行緒所儲存的值。</span><span class="sxs-lookup"><span data-stu-id="bb4ca-174">Values stored by all threads are not available because this instance was initialized with the <paramref name="trackAllValues" /> argument set to <see langword="false" /> in the call to a class constructor.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="bb4ca-175"><see cref="T:System.Threading.ThreadLocal`1" /> 執行個體已經過處置。</span><span class="sxs-lookup"><span data-stu-id="bb4ca-175">The <see cref="T:System.Threading.ThreadLocal`1" /> instance has been disposed.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>