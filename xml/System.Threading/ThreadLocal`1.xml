<Type Name="ThreadLocal&lt;T&gt;" FullName="System.Threading.ThreadLocal&lt;T&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b0866e1f64c7260da8823cd7e69e0b2646eebf23" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ThreadLocal&lt;T&gt; : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ThreadLocal`1&lt;T&gt; extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Threading.ThreadLocal`1" />
  <TypeSignature Language="VB.NET" Value="Public Class ThreadLocal(Of T)&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public ref class ThreadLocal : IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Threading</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("IsValueCreated={IsValueCreated}, Value={ValueForDebugDisplay}, Count={ValuesCountForDebugDisplay}")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerTypeProxy(typeof(System.Threading.SystemThreading_ThreadLocalDebugView`1))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="T">
      <span data-ttu-id="8f511-101">指定每個執行緒儲存的資料型別。</span>
      <span class="sxs-lookup">
        <span data-stu-id="8f511-101">Specifies the type of data stored per-thread.</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="8f511-102">提供資料的執行緒區域儲存區。</span>
      <span class="sxs-lookup">
        <span data-stu-id="8f511-102">Provides thread-local storage of data.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8f511-103">下列範例顯示如何使用 <xref:System.Threading.ThreadLocal%601>：</span><span class="sxs-lookup"><span data-stu-id="8f511-103">The following example shows how to use <xref:System.Threading.ThreadLocal%601>:</span></span>  
  
 [!code-csharp[System.Threading.ThreadLocal#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.threading.threadlocal/cs/threadlocal.cs#01)]
 [!code-vb[System.Threading.ThreadLocal#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.threading.threadlocal/vb/threadlocal.vb#01)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="8f511-104">除了<see cref="M:System.Threading.ThreadLocal`1.Dispose" />、 所有公用和受保護的成員<see cref="T:System.Threading.ThreadLocal`1" />是安全執行緒，且可能會從多個執行緒同時使用。</span>
      <span class="sxs-lookup">
        <span data-stu-id="8f511-104">With the exception of <see cref="M:System.Threading.ThreadLocal`1.Dispose" />, all public and protected members of <see cref="T:System.Threading.ThreadLocal`1" /> are thread-safe and may be used concurrently from multiple threads.</span>
      </span>
      <span data-ttu-id="8f511-105">傳回值<see cref="P:System.Threading.ThreadLocal`1.Value" />和<see cref="P:System.Threading.ThreadLocal`1.IsValueCreated" />屬性是特定執行緒上存取的屬性。</span>
      <span class="sxs-lookup">
        <span data-stu-id="8f511-105">The value returned for the <see cref="P:System.Threading.ThreadLocal`1.Value" /> and <see cref="P:System.Threading.ThreadLocal`1.IsValueCreated" /> properties is specific for the thread on which the property is accessed.</span>
      </span>
    </threadsafe>
    <altmember cref="T:System.Lazy`1" />
    <altmember cref="T:System.Threading.AsyncLocal`1" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8f511-106">初始化 <see cref="T:System.Threading.ThreadLocal`1" /> 執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f511-106">Initializes a <see cref="T:System.Threading.ThreadLocal`1" /> instance.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ThreadLocal ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.ThreadLocal`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ThreadLocal();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8f511-107">初始化 <see cref="T:System.Threading.ThreadLocal`1" /> 執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f511-107">Initializes the <see cref="T:System.Threading.ThreadLocal`1" /> instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f511-108">預設值`T`用來初始化執行個體時<xref:System.Threading.ThreadLocal%601.Value%2A>存取第一次。</span><span class="sxs-lookup"><span data-stu-id="8f511-108">The default value of `T` is used to initialize the instance when <xref:System.Threading.ThreadLocal%601.Value%2A> is accessed for the first time.</span></span>  
  
 <span data-ttu-id="8f511-109">這個建構函式相當於呼叫<xref:System.Threading.ThreadLocal%601.%23ctor%28System.Boolean%29>建構函式，其值為`false`如`trackAllValues`引數。</span><span class="sxs-lookup"><span data-stu-id="8f511-109">This constructor is equivalent to calling the <xref:System.Threading.ThreadLocal%601.%23ctor%28System.Boolean%29> constructor with a value of `false` for the `trackAllValues` argument.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Lazy`1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ThreadLocal (bool trackAllValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool trackAllValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.ThreadLocal`1.#ctor(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (trackAllValues As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ThreadLocal(bool trackAllValues);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="trackAllValues" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="trackAllValues">
          <span data-ttu-id="8f511-110">
            <see langword="true" /> 表示追蹤所有在執行個體上設定的值，並透過 <see cref="P:System.Threading.ThreadLocal`1.Values" /> 屬性將它們公開；否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f511-110">
              <see langword="true" /> to track all values set on the instance and expose them through the <see cref="P:System.Threading.ThreadLocal`1.Values" /> property; <see langword="false" /> otherwise.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8f511-111">初始化 <see cref="T:System.Threading.ThreadLocal`1" /> 執行個體，並指定是否可從任何執行緒存取所有值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f511-111">Initializes the <see cref="T:System.Threading.ThreadLocal`1" /> instance and specifies whether all values are accessible from any thread.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f511-112">如果`trackAllValues`是`false`，只有在目前執行緒的這個執行個體的值是可存取。</span><span class="sxs-lookup"><span data-stu-id="8f511-112">If `trackAllValues` is `false`, only the value of this instance for the current thread is accessible.</span></span> <span data-ttu-id="8f511-113">嘗試使用<xref:System.Threading.ThreadLocal%601.Values%2A>來擷取所有的屬性值，則會擲回<xref:System.InvalidOperationException>例外狀況。</span><span class="sxs-lookup"><span data-stu-id="8f511-113">Attempting to use the <xref:System.Threading.ThreadLocal%601.Values%2A> property to retrieve all values throws an <xref:System.InvalidOperationException> exception.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ThreadLocal (Func&lt;T&gt; valueFactory);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Func`1&lt;!T&gt; valueFactory) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.ThreadLocal`1.#ctor(System.Func{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (valueFactory As Func(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ThreadLocal(Func&lt;T&gt; ^ valueFactory);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="valueFactory" Type="System.Func&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="valueFactory">
          <span data-ttu-id="8f511-114">當嘗試擷取未事先初始化的 <see cref="T:System.Func`1" /> 時，系統會叫用 <see cref="P:System.Threading.ThreadLocal`1.Value" /> 來產生延遲初始化的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f511-114">The  <see cref="T:System.Func`1" /> invoked to produce a lazily-initialized value when an attempt is made to retrieve <see cref="P:System.Threading.ThreadLocal`1.Value" /> without it having been previously initialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8f511-115">使用指定的 <paramref name="valueFactory" /> 函式來初始化 <see cref="T:System.Threading.ThreadLocal`1" /> 的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f511-115">Initializes the <see cref="T:System.Threading.ThreadLocal`1" /> instance with the specified <paramref name="valueFactory" /> function.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8f511-116">
            <paramref name="valueFactory" /> 是 null 參考 (在 Visual Basic 中為 Nothing)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f511-116">
              <paramref name="valueFactory" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <altmember cref="T:System.Lazy`1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ThreadLocal (Func&lt;T&gt; valueFactory, bool trackAllValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Func`1&lt;!T&gt; valueFactory, bool trackAllValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.ThreadLocal`1.#ctor(System.Func{`0},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (valueFactory As Func(Of T), trackAllValues As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ThreadLocal(Func&lt;T&gt; ^ valueFactory, bool trackAllValues);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="valueFactory" Type="System.Func&lt;T&gt;" />
        <Parameter Name="trackAllValues" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="valueFactory">
          <span data-ttu-id="8f511-117">當嘗試擷取未事先初始化的 <see cref="P:System.Threading.ThreadLocal`1.Value" /> 時，系統會叫用 <see cref="T:System.Func`1" /> 來產生延遲初始化的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f511-117">The <see cref="T:System.Func`1" /> invoked to produce a lazily-initialized value when an attempt is made to retrieve <see cref="P:System.Threading.ThreadLocal`1.Value" /> without it having been previously initialized.</span>
          </span>
        </param>
        <param name="trackAllValues">
          <span data-ttu-id="8f511-118">
            <see langword="true" /> 表示追蹤所有在執行個體上設定的值，並透過 <see cref="P:System.Threading.ThreadLocal`1.Values" /> 屬性將它們公開；否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f511-118">
              <see langword="true" /> to track all values set on the instance and expose them through the <see cref="P:System.Threading.ThreadLocal`1.Values" /> property; <see langword="false" /> otherwise.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8f511-119">使用指定的 <paramref name="valueFactory" /> 函式及指出是否可從任何執行緒存取所有值的旗標，初始化 <see cref="T:System.Threading.ThreadLocal`1" /> 執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f511-119">Initializes the <see cref="T:System.Threading.ThreadLocal`1" /> instance with the specified <paramref name="valueFactory" /> function and a flag that indicates whether all values are accessible from any thread.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f511-120">如果`trackAllValues`是`false`，只有在目前執行緒的這個執行個體的值是可存取。</span><span class="sxs-lookup"><span data-stu-id="8f511-120">If `trackAllValues` is `false`, only the value of this instance for the current thread is accessible.</span></span> <span data-ttu-id="8f511-121">嘗試使用<xref:System.Threading.ThreadLocal%601.Values%2A>來擷取所有的屬性值，則會擲回<xref:System.InvalidOperationException>例外狀況。</span><span class="sxs-lookup"><span data-stu-id="8f511-121">Attempting to use the <xref:System.Threading.ThreadLocal%601.Values%2A> property to retrieve all values throws an <xref:System.InvalidOperationException> exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8f511-122">
            <paramref name="valueFactory" /> 為 <see langword="null" /> 參考 (在 Visual Basic 中為 <see langword="Nothing" />)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f511-122">
              <paramref name="valueFactory" /> is a <see langword="null" /> reference (<see langword="Nothing" /> in Visual Basic).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8f511-123">釋放這個 <see cref="T:System.Threading.ThreadLocal`1" /> 執行個體所使用的資源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f511-123">Releases the resources used by this <see cref="T:System.Threading.ThreadLocal`1" /> instance.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.ThreadLocal`1.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8f511-124">將 <see cref="T:System.Threading.ThreadLocal`1" /> 類別目前的執行個體所使用的資源全部釋出。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f511-124">Releases all resources used by the current instance of the <see cref="T:System.Threading.ThreadLocal`1" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f511-125">`Dispose` 使用完畢時，請呼叫 <xref:System.Threading.ThreadLocal%601>。</span><span class="sxs-lookup"><span data-stu-id="8f511-125">Call `Dispose` when you are finished using the <xref:System.Threading.ThreadLocal%601>.</span></span> <span data-ttu-id="8f511-126">`Dispose` 方法會將 <xref:System.Threading.ThreadLocal%601> 保留在無法使用的狀態。</span><span class="sxs-lookup"><span data-stu-id="8f511-126">The `Dispose` method leaves the <xref:System.Threading.ThreadLocal%601> in an unusable state.</span></span> <span data-ttu-id="8f511-127">在呼叫`Dispose`，您必須釋放所有參考<xref:System.Threading.ThreadLocal%601>讓記憶體回收行程可以回收記憶體的<xref:System.Threading.ThreadLocal%601>所佔用。</span><span class="sxs-lookup"><span data-stu-id="8f511-127">After calling `Dispose`, you must release all references to the <xref:System.Threading.ThreadLocal%601> so the garbage collector can reclaim the memory that the <xref:System.Threading.ThreadLocal%601> was occupying.</span></span>  
  
 <span data-ttu-id="8f511-128">如需詳細資訊，請參閱[清除 Unmanaged 資源上](~/docs/standard/garbage-collection/unmanaged.md)和[實作 Dispose 方法](~/docs/standard/garbage-collection/implementing-dispose.md)。</span><span class="sxs-lookup"><span data-stu-id="8f511-128">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8f511-129">在您釋放最後一個 `Dispose` 參考之前，請務必呼叫 <xref:System.Threading.ThreadLocal%601>。</span><span class="sxs-lookup"><span data-stu-id="8f511-129">Always call `Dispose` before you release your last reference to the <xref:System.Threading.ThreadLocal%601>.</span></span> <span data-ttu-id="8f511-130">否則工作窗格所使用的資源不會釋放，直到記憶體回收行程呼叫 <xref:System.Threading.ThreadLocal%601> 物件的 `Finalize` 方法。</span><span class="sxs-lookup"><span data-stu-id="8f511-130">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Threading.ThreadLocal%601> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Lazy`1" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.ThreadLocal`1.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="8f511-131">布林值，表示是否會因為呼叫 <see cref="M:System.Threading.ThreadLocal`1.Dispose" /> 而呼叫這個方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f511-131">A Boolean value that indicates whether this method is being called due to a call to <see cref="M:System.Threading.ThreadLocal`1.Dispose" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8f511-132">釋放這個 <see cref="T:System.Threading.ThreadLocal`1" /> 執行個體所使用的資源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f511-132">Releases the resources used by this <see cref="T:System.Threading.ThreadLocal`1" /> instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f511-133">不同於大部分的成員<xref:System.Threading.ThreadLocal%601>，這個方法不是安全執行緒。</span><span class="sxs-lookup"><span data-stu-id="8f511-133">Unlike most of the members of <xref:System.Threading.ThreadLocal%601>, this method is not thread-safe.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Lazy`1" />
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~ThreadLocal`1 ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.ThreadLocal`1.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!ThreadLocal`1 ()" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8f511-134">釋放這個 <see cref="T:System.Threading.ThreadLocal`1" /> 執行個體所使用的資源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f511-134">Releases the resources used by this <see cref="T:System.Threading.ThreadLocal`1" /> instance.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Lazy`1" />
      </Docs>
    </Member>
    <Member MemberName="IsValueCreated">
      <MemberSignature Language="C#" Value="public bool IsValueCreated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsValueCreated" />
      <MemberSignature Language="DocId" Value="P:System.Threading.ThreadLocal`1.IsValueCreated" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsValueCreated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsValueCreated { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8f511-135">取得值，這個值表示 <see cref="P:System.Threading.ThreadLocal`1.Value" /> 是否已在目前執行緒中完成初始化。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f511-135">Gets whether <see cref="P:System.Threading.ThreadLocal`1.Value" /> is initialized on the current thread.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8f511-136">如果已在目前執行緒上初始化 <see cref="P:System.Threading.ThreadLocal`1.Value" /> 則為 true，否則為 false。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f511-136">true if <see cref="P:System.Threading.ThreadLocal`1.Value" /> is initialized on the current thread; otherwise false.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="8f511-137">
            <see cref="T:System.Threading.ThreadLocal`1" /> 執行個體已經過處置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f511-137">The <see cref="T:System.Threading.ThreadLocal`1" /> instance has been disposed.</span>
          </span>
        </exception>
        <altmember cref="T:System.Lazy`1" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.ThreadLocal`1.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8f511-138">建立並傳回目前執行緒的這個執行個體的字串表示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f511-138">Creates and returns a string representation of this instance for the current thread.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8f511-139">在 <see cref="M:System.Object.ToString" /> 上呼叫 <see cref="P:System.Threading.ThreadLocal`1.Value" /> 的結果。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f511-139">The result of calling <see cref="M:System.Object.ToString" /> on the <see cref="P:System.Threading.ThreadLocal`1.Value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f511-140">使用存取案例呼叫這個方法會強制在目前的執行緒初始化<xref:System.Threading.ThreadLocal%601.Value%2A>直接。</span><span class="sxs-lookup"><span data-stu-id="8f511-140">Calling this method forces initialization for the current thread, as is the case with accessing <xref:System.Threading.ThreadLocal%601.Value%2A> directly.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="8f511-141">
            <see cref="T:System.Threading.ThreadLocal`1" /> 執行個體已經過處置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f511-141">The <see cref="T:System.Threading.ThreadLocal`1" /> instance has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.NullReferenceException">
          <span data-ttu-id="8f511-142">目前執行緒的 <see cref="P:System.Threading.ThreadLocal`1.Value" /> 是 Null 參考 (在 Visual Basic 中為 Nothing)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f511-142">The <see cref="P:System.Threading.ThreadLocal`1.Value" /> for the current thread is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8f511-143">初始化函式會嘗試遞迴參考 <see cref="P:System.Threading.ThreadLocal`1.Value" /> 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f511-143">The initialization function attempted to reference <see cref="P:System.Threading.ThreadLocal`1.Value" /> recursively.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMemberException">
          <span data-ttu-id="8f511-144">沒有提供任何預設的建構函式，也沒有提供任何値 Factory。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f511-144">No default constructor is provided and no value factory is supplied.</span>
          </span>
        </exception>
        <altmember cref="T:System.Lazy`1" />
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public T Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T Value" />
      <MemberSignature Language="DocId" Value="P:System.Threading.ThreadLocal`1.Value" />
      <MemberSignature Language="VB.NET" Value="Public Property Value As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T Value { T get(); void set(T value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8f511-145">取得或設定目前執行緒的這個執行個體的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f511-145">Gets or sets the value of this instance for the current thread.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8f511-146">傳回這個 ThreadLocal 負責初始化之物件的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f511-146">Returns an instance of the object that this ThreadLocal is responsible for initializing.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f511-147">如果未針對目前的執行緒先前初始化這個執行個體，存取<xref:System.Threading.ThreadLocal%601.Value%2A>會嘗試將它初始化。</span><span class="sxs-lookup"><span data-stu-id="8f511-147">If this instance was not previously initialized for the current thread, accessing <xref:System.Threading.ThreadLocal%601.Value%2A> will attempt to initialize it.</span></span> <span data-ttu-id="8f511-148">如果在建構期間提供的初始化函式，該初始化將會發生叫用函式可擷取的初始值<xref:System.Threading.ThreadLocal%601.Value%2A>。</span><span class="sxs-lookup"><span data-stu-id="8f511-148">If an initialization function was supplied during the construction, that initialization will happen by invoking the function to retrieve the initial value for <xref:System.Threading.ThreadLocal%601.Value%2A>.</span></span> <span data-ttu-id="8f511-149">否則，您將使用的預設值。</span><span class="sxs-lookup"><span data-stu-id="8f511-149">Otherwise, the default value of will be used.</span></span> <span data-ttu-id="8f511-150">如果擲回例外狀況，該例外狀況會快取，並擲回之屬性的每個後續的存取。</span><span class="sxs-lookup"><span data-stu-id="8f511-150">If an exception is thrown, that exception is cached and thrown on each subsequent access of the property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="8f511-151">
            <see cref="T:System.Threading.ThreadLocal`1" /> 執行個體已經過處置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f511-151">The <see cref="T:System.Threading.ThreadLocal`1" /> instance has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8f511-152">初始化函式會嘗試遞迴參考 <see cref="P:System.Threading.ThreadLocal`1.Value" /> 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f511-152">The initialization function attempted to reference <see cref="P:System.Threading.ThreadLocal`1.Value" /> recursively.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMemberException">
          <span data-ttu-id="8f511-153">沒有提供任何預設的建構函式，也沒有提供任何値 Factory。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f511-153">No default constructor is provided and no value factory is supplied.</span>
          </span>
        </exception>
        <altmember cref="T:System.Lazy`1" />
      </Docs>
    </Member>
    <Member MemberName="Values">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;T&gt; Values { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;!T&gt; Values" />
      <MemberSignature Language="DocId" Value="P:System.Threading.ThreadLocal`1.Values" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Values As IList(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;T&gt; ^ Values { System::Collections::Generic::IList&lt;T&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8f511-154">取得清單，其中包含已存取這個執行個體的所有執行緒目前所儲存的所有值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f511-154">Gets a list for all of the values currently stored by all of the threads that have accessed this instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8f511-155">已存取這個執行個體的所有執行緒目前所儲存之所有值的清單。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f511-155">A list for all of the values currently stored by all of the threads that have accessed this instance.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8f511-156">由於這個執行個體是在類別建構函式呼叫中將 <paramref name="trackAllValues" /> 引數設定為 <see langword="false" /> 來初始化，因此無法使用所有執行緒所儲存的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f511-156">Values stored by all threads are not available because this instance was initialized with the <paramref name="trackAllValues" /> argument set to <see langword="false" /> in the call to a class constructor.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="8f511-157">
            <see cref="T:System.Threading.ThreadLocal`1" /> 執行個體已經過處置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8f511-157">The <see cref="T:System.Threading.ThreadLocal`1" /> instance has been disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>