<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ThreadLocal`1.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5b0866e1f64c7260da8823cd7e69e0b2646eebf23.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b0866e1f64c7260da8823cd7e69e0b2646eebf23</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.ThreadLocal`1">
          <source>Specifies the type of data stored per-thread.</source>
          <target state="translated">指定每個執行緒儲存的資料型別。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Threading.ThreadLocal`1">
          <source>Provides thread-local storage of data.</source>
          <target state="translated">提供資料的執行緒區域儲存區。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.ThreadLocal`1">
          <source>The following example shows how to use <ph id="ph1">&lt;xref:System.Threading.ThreadLocal%601&gt;</ph>:</source>
          <target state="translated">下列範例顯示如何使用 <ph id="ph1">&lt;xref:System.Threading.ThreadLocal%601&gt;</ph>：</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.ThreadLocal`1">
          <source>With the exception of <ph id="ph1">&lt;see cref="M:System.Threading.ThreadLocal`1.Dispose" /&gt;</ph>, all public and protected members of <ph id="ph2">&lt;see cref="T:System.Threading.ThreadLocal`1" /&gt;</ph> are thread-safe and may be used concurrently from multiple threads.</source>
          <target state="translated">除了<ph id="ph1">&lt;see cref="M:System.Threading.ThreadLocal`1.Dispose" /&gt;</ph>、 所有公用和受保護的成員<ph id="ph2">&lt;see cref="T:System.Threading.ThreadLocal`1" /&gt;</ph>是安全執行緒，且可能會從多個執行緒同時使用。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.ThreadLocal`1">
          <source>The value returned for the <ph id="ph1">&lt;see cref="P:System.Threading.ThreadLocal`1.Value" /&gt;</ph> and <ph id="ph2">&lt;see cref="P:System.Threading.ThreadLocal`1.IsValueCreated" /&gt;</ph> properties is specific for the thread on which the property is accessed.</source>
          <target state="translated">傳回值<ph id="ph1">&lt;see cref="P:System.Threading.ThreadLocal`1.Value" /&gt;</ph>和<ph id="ph2">&lt;see cref="P:System.Threading.ThreadLocal`1.IsValueCreated" /&gt;</ph>屬性是特定執行緒上存取的屬性。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="T:System.Threading.ThreadLocal`1">
          <source>Initializes a <ph id="ph1">&lt;see cref="T:System.Threading.ThreadLocal`1" /&gt;</ph> instance.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Threading.ThreadLocal`1" /&gt;</ph> 執行個體。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Threading.ThreadLocal`1.#ctor">
          <source>Initializes the <ph id="ph1">&lt;see cref="T:System.Threading.ThreadLocal`1" /&gt;</ph> instance.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Threading.ThreadLocal`1" /&gt;</ph> 執行個體。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.ThreadLocal`1.#ctor">
          <source>The default value of <ph id="ph1">`T`</ph> is used to initialize the instance when <ph id="ph2">&lt;xref:System.Threading.ThreadLocal%601.Value%2A&gt;</ph> is accessed for the first time.</source>
          <target state="translated">預設值<ph id="ph1">`T`</ph>用來初始化執行個體時<ph id="ph2">&lt;xref:System.Threading.ThreadLocal%601.Value%2A&gt;</ph>存取第一次。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.ThreadLocal`1.#ctor">
          <source>This constructor is equivalent to calling the <ph id="ph1">&lt;xref:System.Threading.ThreadLocal%601.%23ctor%28System.Boolean%29&gt;</ph> constructor with a value of <ph id="ph2">`false`</ph> for the <ph id="ph3">`trackAllValues`</ph> argument.</source>
          <target state="translated">這個建構函式相當於呼叫<ph id="ph1">&lt;xref:System.Threading.ThreadLocal%601.%23ctor%28System.Boolean%29&gt;</ph>建構函式，其值為<ph id="ph2">`false`</ph>如<ph id="ph3">`trackAllValues`</ph>引數。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Threading.ThreadLocal`1.#ctor(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to track all values set on the instance and expose them through the <ph id="ph2">&lt;see cref="P:System.Threading.ThreadLocal`1.Values" /&gt;</ph> property; <ph id="ph3">&lt;see langword="false" /&gt;</ph> otherwise.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> 表示追蹤所有在執行個體上設定的值，並透過 <ph id="ph2">&lt;see cref="P:System.Threading.ThreadLocal`1.Values" /&gt;</ph> 屬性將它們公開；否則為 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Threading.ThreadLocal`1.#ctor(System.Boolean)">
          <source>Initializes the <ph id="ph1">&lt;see cref="T:System.Threading.ThreadLocal`1" /&gt;</ph> instance and specifies whether all values are accessible from any thread.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Threading.ThreadLocal`1" /&gt;</ph> 執行個體，並指定是否可從任何執行緒存取所有值。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.ThreadLocal`1.#ctor(System.Boolean)">
          <source>If <ph id="ph1">`trackAllValues`</ph> is <ph id="ph2">`false`</ph>, only the value of this instance for the current thread is accessible.</source>
          <target state="translated">如果<ph id="ph1">`trackAllValues`</ph>是<ph id="ph2">`false`</ph>，只有在目前執行緒的這個執行個體的值是可存取。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.ThreadLocal`1.#ctor(System.Boolean)">
          <source>Attempting to use the <ph id="ph1">&lt;xref:System.Threading.ThreadLocal%601.Values%2A&gt;</ph> property to retrieve all values throws an <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph> exception.</source>
          <target state="translated">嘗試使用<ph id="ph1">&lt;xref:System.Threading.ThreadLocal%601.Values%2A&gt;</ph>來擷取所有的屬性值，則會擲回<ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph>例外狀況。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Threading.ThreadLocal`1.#ctor(System.Func{`0})">
          <source>The  <ph id="ph1">&lt;see cref="T:System.Func`1" /&gt;</ph> invoked to produce a lazily-initialized value when an attempt is made to retrieve <ph id="ph2">&lt;see cref="P:System.Threading.ThreadLocal`1.Value" /&gt;</ph> without it having been previously initialized.</source>
          <target state="translated">當嘗試擷取未事先初始化的 <ph id="ph1">&lt;see cref="T:System.Func`1" /&gt;</ph> 時，系統會叫用 <ph id="ph2">&lt;see cref="P:System.Threading.ThreadLocal`1.Value" /&gt;</ph> 來產生延遲初始化的值。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Threading.ThreadLocal`1.#ctor(System.Func{`0})">
          <source>Initializes the <ph id="ph1">&lt;see cref="T:System.Threading.ThreadLocal`1" /&gt;</ph> instance with the specified <ph id="ph2">&lt;paramref name="valueFactory" /&gt;</ph> function.</source>
          <target state="translated">使用指定的 <ph id="ph2">&lt;paramref name="valueFactory" /&gt;</ph> 函式來初始化 <ph id="ph1">&lt;see cref="T:System.Threading.ThreadLocal`1" /&gt;</ph> 的執行個體。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Threading.ThreadLocal`1.#ctor(System.Func{`0})">
          <source><ph id="ph1">&lt;paramref name="valueFactory" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="valueFactory" /&gt;</ph> 是 null 參考 (在 Visual Basic 中為 Nothing)。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Threading.ThreadLocal`1.#ctor(System.Func{`0},System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Func`1" /&gt;</ph> invoked to produce a lazily-initialized value when an attempt is made to retrieve <ph id="ph2">&lt;see cref="P:System.Threading.ThreadLocal`1.Value" /&gt;</ph> without it having been previously initialized.</source>
          <target state="translated">當嘗試擷取未事先初始化的 <ph id="ph2">&lt;see cref="P:System.Threading.ThreadLocal`1.Value" /&gt;</ph> 時，系統會叫用 <ph id="ph1">&lt;see cref="T:System.Func`1" /&gt;</ph> 來產生延遲初始化的值。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Threading.ThreadLocal`1.#ctor(System.Func{`0},System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to track all values set on the instance and expose them through the <ph id="ph2">&lt;see cref="P:System.Threading.ThreadLocal`1.Values" /&gt;</ph> property; <ph id="ph3">&lt;see langword="false" /&gt;</ph> otherwise.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> 表示追蹤所有在執行個體上設定的值，並透過 <ph id="ph2">&lt;see cref="P:System.Threading.ThreadLocal`1.Values" /&gt;</ph> 屬性將它們公開；否則為 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Threading.ThreadLocal`1.#ctor(System.Func{`0},System.Boolean)">
          <source>Initializes the <ph id="ph1">&lt;see cref="T:System.Threading.ThreadLocal`1" /&gt;</ph> instance with the specified <ph id="ph2">&lt;paramref name="valueFactory" /&gt;</ph> function and a flag that indicates whether all values are accessible from any thread.</source>
          <target state="translated">使用指定的 <ph id="ph2">&lt;paramref name="valueFactory" /&gt;</ph> 函式及指出是否可從任何執行緒存取所有值的旗標，初始化 <ph id="ph1">&lt;see cref="T:System.Threading.ThreadLocal`1" /&gt;</ph> 執行個體。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.ThreadLocal`1.#ctor(System.Func{`0},System.Boolean)">
          <source>If <ph id="ph1">`trackAllValues`</ph> is <ph id="ph2">`false`</ph>, only the value of this instance for the current thread is accessible.</source>
          <target state="translated">如果<ph id="ph1">`trackAllValues`</ph>是<ph id="ph2">`false`</ph>，只有在目前執行緒的這個執行個體的值是可存取。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.ThreadLocal`1.#ctor(System.Func{`0},System.Boolean)">
          <source>Attempting to use the <ph id="ph1">&lt;xref:System.Threading.ThreadLocal%601.Values%2A&gt;</ph> property to retrieve all values throws an <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph> exception.</source>
          <target state="translated">嘗試使用<ph id="ph1">&lt;xref:System.Threading.ThreadLocal%601.Values%2A&gt;</ph>來擷取所有的屬性值，則會擲回<ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph>例外狀況。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Threading.ThreadLocal`1.#ctor(System.Func{`0},System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="valueFactory" /&gt;</ph> is a <ph id="ph2">&lt;see langword="null" /&gt;</ph> reference (<ph id="ph3">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="valueFactory" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph> 參考 (在 Visual Basic 中為 <ph id="ph3">&lt;see langword="Nothing" /&gt;</ph>)。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="T:System.Threading.ThreadLocal`1">
          <source>Releases the resources used by this <ph id="ph1">&lt;see cref="T:System.Threading.ThreadLocal`1" /&gt;</ph> instance.</source>
          <target state="translated">釋放這個 <ph id="ph1">&lt;see cref="T:System.Threading.ThreadLocal`1" /&gt;</ph> 執行個體所使用的資源。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Threading.ThreadLocal`1.Dispose">
          <source>Releases all resources used by the current instance of the <ph id="ph1">&lt;see cref="T:System.Threading.ThreadLocal`1" /&gt;</ph> class.</source>
          <target state="translated">將 <ph id="ph1">&lt;see cref="T:System.Threading.ThreadLocal`1" /&gt;</ph> 類別目前的執行個體所使用的資源全部釋出。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.ThreadLocal`1.Dispose">
          <source>Call <ph id="ph1">`Dispose`</ph> when you are finished using the <ph id="ph2">&lt;xref:System.Threading.ThreadLocal%601&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">`Dispose`</ph> 使用完畢時，請呼叫 <ph id="ph2">&lt;xref:System.Threading.ThreadLocal%601&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.ThreadLocal`1.Dispose">
          <source>The <ph id="ph1">`Dispose`</ph> method leaves the <ph id="ph2">&lt;xref:System.Threading.ThreadLocal%601&gt;</ph> in an unusable state.</source>
          <target state="translated"><ph id="ph1">`Dispose`</ph> 方法會將 <ph id="ph2">&lt;xref:System.Threading.ThreadLocal%601&gt;</ph> 保留在無法使用的狀態。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.ThreadLocal`1.Dispose">
          <source>After calling <ph id="ph1">`Dispose`</ph>, you must release all references to the <ph id="ph2">&lt;xref:System.Threading.ThreadLocal%601&gt;</ph> so the garbage collector can reclaim the memory that the <ph id="ph3">&lt;xref:System.Threading.ThreadLocal%601&gt;</ph> was occupying.</source>
          <target state="translated">在呼叫<ph id="ph1">`Dispose`</ph>，您必須釋放所有參考<ph id="ph2">&lt;xref:System.Threading.ThreadLocal%601&gt;</ph>讓記憶體回收行程可以回收記憶體的<ph id="ph3">&lt;xref:System.Threading.ThreadLocal%601&gt;</ph>所佔用。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.ThreadLocal`1.Dispose">
          <source>For more information, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Implementing a Dispose Method<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>清除 Unmanaged 資源上<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>和<bpt id="p2">[</bpt>實作 Dispose 方法<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.ThreadLocal`1.Dispose">
          <source>Always call <ph id="ph1">`Dispose`</ph> before you release your last reference to the <ph id="ph2">&lt;xref:System.Threading.ThreadLocal%601&gt;</ph>.</source>
          <target state="translated">在您釋放最後一個 <ph id="ph1">`Dispose`</ph> 參考之前，請務必呼叫 <ph id="ph2">&lt;xref:System.Threading.ThreadLocal%601&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.ThreadLocal`1.Dispose">
          <source>Otherwise, the resources it is using will not be freed until the garbage collector calls the <ph id="ph1">&lt;xref:System.Threading.ThreadLocal%601&gt;</ph> object's <ph id="ph2">`Finalize`</ph> method.</source>
          <target state="translated">否則工作窗格所使用的資源不會釋放，直到記憶體回收行程呼叫 <ph id="ph1">&lt;xref:System.Threading.ThreadLocal%601&gt;</ph> 物件的 <ph id="ph2">`Finalize`</ph> 方法。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Threading.ThreadLocal`1.Dispose(System.Boolean)">
          <source>A Boolean value that indicates whether this method is being called due to a call to <ph id="ph1">&lt;see cref="M:System.Threading.ThreadLocal`1.Dispose" /&gt;</ph>.</source>
          <target state="translated">布林值，表示是否會因為呼叫 <ph id="ph1">&lt;see cref="M:System.Threading.ThreadLocal`1.Dispose" /&gt;</ph> 而呼叫這個方法。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Threading.ThreadLocal`1.Dispose(System.Boolean)">
          <source>Releases the resources used by this <ph id="ph1">&lt;see cref="T:System.Threading.ThreadLocal`1" /&gt;</ph> instance.</source>
          <target state="translated">釋放這個 <ph id="ph1">&lt;see cref="T:System.Threading.ThreadLocal`1" /&gt;</ph> 執行個體所使用的資源。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.ThreadLocal`1.Dispose(System.Boolean)">
          <source>Unlike most of the members of <ph id="ph1">&lt;xref:System.Threading.ThreadLocal%601&gt;</ph>, this method is not thread-safe.</source>
          <target state="translated">不同於大部分的成員<ph id="ph1">&lt;xref:System.Threading.ThreadLocal%601&gt;</ph>，這個方法不是安全執行緒。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Threading.ThreadLocal`1.Finalize">
          <source>Releases the resources used by this <ph id="ph1">&lt;see cref="T:System.Threading.ThreadLocal`1" /&gt;</ph> instance.</source>
          <target state="translated">釋放這個 <ph id="ph1">&lt;see cref="T:System.Threading.ThreadLocal`1" /&gt;</ph> 執行個體所使用的資源。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="P:System.Threading.ThreadLocal`1.IsValueCreated">
          <source>Gets whether <ph id="ph1">&lt;see cref="P:System.Threading.ThreadLocal`1.Value" /&gt;</ph> is initialized on the current thread.</source>
          <target state="translated">取得值，這個值表示 <ph id="ph1">&lt;see cref="P:System.Threading.ThreadLocal`1.Value" /&gt;</ph> 是否已在目前執行緒中完成初始化。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.ThreadLocal`1.IsValueCreated">
          <source>true if <ph id="ph1">&lt;see cref="P:System.Threading.ThreadLocal`1.Value" /&gt;</ph> is initialized on the current thread; otherwise false.</source>
          <target state="translated">如果已在目前執行緒上初始化 <ph id="ph1">&lt;see cref="P:System.Threading.ThreadLocal`1.Value" /&gt;</ph> 則為 true，否則為 false。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="P:System.Threading.ThreadLocal`1.IsValueCreated">
          <source>The <ph id="ph1">&lt;see cref="T:System.Threading.ThreadLocal`1" /&gt;</ph> instance has been disposed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Threading.ThreadLocal`1" /&gt;</ph> 執行個體已經過處置。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Threading.ThreadLocal`1.ToString">
          <source>Creates and returns a string representation of this instance for the current thread.</source>
          <target state="translated">建立並傳回目前執行緒的這個執行個體的字串表示。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Threading.ThreadLocal`1.ToString">
          <source>The result of calling <ph id="ph1">&lt;see cref="M:System.Object.ToString" /&gt;</ph> on the <ph id="ph2">&lt;see cref="P:System.Threading.ThreadLocal`1.Value" /&gt;</ph>.</source>
          <target state="translated">在 <ph id="ph1">&lt;see cref="M:System.Object.ToString" /&gt;</ph> 上呼叫 <ph id="ph2">&lt;see cref="P:System.Threading.ThreadLocal`1.Value" /&gt;</ph> 的結果。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.ThreadLocal`1.ToString">
          <source>Calling this method forces initialization for the current thread, as is the case with accessing <ph id="ph1">&lt;xref:System.Threading.ThreadLocal%601.Value%2A&gt;</ph> directly.</source>
          <target state="translated">使用存取案例呼叫這個方法會強制在目前的執行緒初始化<ph id="ph1">&lt;xref:System.Threading.ThreadLocal%601.Value%2A&gt;</ph>直接。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Threading.ThreadLocal`1.ToString">
          <source>The <ph id="ph1">&lt;see cref="T:System.Threading.ThreadLocal`1" /&gt;</ph> instance has been disposed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Threading.ThreadLocal`1" /&gt;</ph> 執行個體已經過處置。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Threading.ThreadLocal`1.ToString">
          <source>The <ph id="ph1">&lt;see cref="P:System.Threading.ThreadLocal`1.Value" /&gt;</ph> for the current thread is a null reference (Nothing in Visual Basic).</source>
          <target state="translated">目前執行緒的 <ph id="ph1">&lt;see cref="P:System.Threading.ThreadLocal`1.Value" /&gt;</ph> 是 Null 參考 (在 Visual Basic 中為 Nothing)。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Threading.ThreadLocal`1.ToString">
          <source>The initialization function attempted to reference <ph id="ph1">&lt;see cref="P:System.Threading.ThreadLocal`1.Value" /&gt;</ph> recursively.</source>
          <target state="translated">初始化函式會嘗試遞迴參考 <ph id="ph1">&lt;see cref="P:System.Threading.ThreadLocal`1.Value" /&gt;</ph> 。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Threading.ThreadLocal`1.ToString">
          <source>No default constructor is provided and no value factory is supplied.</source>
          <target state="translated">沒有提供任何預設的建構函式，也沒有提供任何値 Factory。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="P:System.Threading.ThreadLocal`1.Value">
          <source>Gets or sets the value of this instance for the current thread.</source>
          <target state="translated">取得或設定目前執行緒的這個執行個體的值。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.ThreadLocal`1.Value">
          <source>Returns an instance of the object that this ThreadLocal is responsible for initializing.</source>
          <target state="translated">傳回這個 ThreadLocal 負責初始化之物件的執行個體。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.ThreadLocal`1.Value">
          <source>If this instance was not previously initialized for the current thread, accessing <ph id="ph1">&lt;xref:System.Threading.ThreadLocal%601.Value%2A&gt;</ph> will attempt to initialize it.</source>
          <target state="translated">如果未針對目前的執行緒先前初始化這個執行個體，存取<ph id="ph1">&lt;xref:System.Threading.ThreadLocal%601.Value%2A&gt;</ph>會嘗試將它初始化。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.ThreadLocal`1.Value">
          <source>If an initialization function was supplied during the construction, that initialization will happen by invoking the function to retrieve the initial value for <ph id="ph1">&lt;xref:System.Threading.ThreadLocal%601.Value%2A&gt;</ph>.</source>
          <target state="translated">如果在建構期間提供的初始化函式，該初始化將會發生叫用函式可擷取的初始值<ph id="ph1">&lt;xref:System.Threading.ThreadLocal%601.Value%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.ThreadLocal`1.Value">
          <source>Otherwise, the default value of will be used.</source>
          <target state="translated">否則，您將使用的預設值。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.ThreadLocal`1.Value">
          <source>If an exception is thrown, that exception is cached and thrown on each subsequent access of the property.</source>
          <target state="translated">如果擲回例外狀況，該例外狀況會快取，並擲回之屬性的每個後續的存取。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="P:System.Threading.ThreadLocal`1.Value">
          <source>The <ph id="ph1">&lt;see cref="T:System.Threading.ThreadLocal`1" /&gt;</ph> instance has been disposed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Threading.ThreadLocal`1" /&gt;</ph> 執行個體已經過處置。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="P:System.Threading.ThreadLocal`1.Value">
          <source>The initialization function attempted to reference <ph id="ph1">&lt;see cref="P:System.Threading.ThreadLocal`1.Value" /&gt;</ph> recursively.</source>
          <target state="translated">初始化函式會嘗試遞迴參考 <ph id="ph1">&lt;see cref="P:System.Threading.ThreadLocal`1.Value" /&gt;</ph> 。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="P:System.Threading.ThreadLocal`1.Value">
          <source>No default constructor is provided and no value factory is supplied.</source>
          <target state="translated">沒有提供任何預設的建構函式，也沒有提供任何値 Factory。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="P:System.Threading.ThreadLocal`1.Values">
          <source>Gets a list for all of the values currently stored by all of the threads that have accessed this instance.</source>
          <target state="translated">取得清單，其中包含已存取這個執行個體的所有執行緒目前所儲存的所有值。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.ThreadLocal`1.Values">
          <source>A list for all of the values currently stored by all of the threads that have accessed this instance.</source>
          <target state="translated">已存取這個執行個體的所有執行緒目前所儲存之所有值的清單。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="P:System.Threading.ThreadLocal`1.Values">
          <source>Values stored by all threads are not available because this instance was initialized with the <ph id="ph1">&lt;paramref name="trackAllValues" /&gt;</ph> argument set to <ph id="ph2">&lt;see langword="false" /&gt;</ph> in the call to a class constructor.</source>
          <target state="translated">由於這個執行個體是在類別建構函式呼叫中將 <ph id="ph1">&lt;paramref name="trackAllValues" /&gt;</ph> 引數設定為 <ph id="ph2">&lt;see langword="false" /&gt;</ph> 來初始化，因此無法使用所有執行緒所儲存的值。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="P:System.Threading.ThreadLocal`1.Values">
          <source>The <ph id="ph1">&lt;see cref="T:System.Threading.ThreadLocal`1" /&gt;</ph> instance has been disposed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Threading.ThreadLocal`1" /&gt;</ph> 執行個體已經過處置。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>