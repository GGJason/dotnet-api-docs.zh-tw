<Type Name="RelationshipManager" FullName="System.Data.Objects.DataClasses.RelationshipManager">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="686e69541974b442008d56d88956ddda0cf6e2f0" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30389702" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class RelationshipManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit RelationshipManager extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.Objects.DataClasses.RelationshipManager" />
  <TypeSignature Language="VB.NET" Value="Public Class RelationshipManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class RelationshipManager" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>用來追蹤物件內容中物件之間的關聯性 (Relationship)。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Objects.DataClasses.RelationshipManager> 是用來追蹤物件內容中物件之間的關聯性。 在物件內容中追蹤的每個關聯性都有一個 <xref:System.Data.Objects.DataClasses.RelationshipManager> 類別 (Class) 的執行個體 (Instance)。 關聯性定義概念模型中的關聯。 如需詳細資訊，請參閱 [Association 項目 (CSDL)](http://msdn.microsoft.com/library/c305169a-8af7-432f-9ba7-800a163aed41)。  
  
   
  
## Examples  
 本主題中的範例根據[AdventureWorks Sales Model](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832)。 此範例會將新`SalesOrderHeader`實體`Contact`實體。 然後它會取得所有相關的端從`Contact`實體，並顯示每個相關端的關聯性名稱、 來源角色名稱和目標角色名稱。  
  
 [!code-csharp[DP ObjectServices Concepts#IRelatedEnd](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#irelatedend)]
 [!code-vb[DP ObjectServices Concepts#IRelatedEnd](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#irelatedend)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Data.Objects.DataClasses.RelationshipManager Create (System.Data.Objects.DataClasses.IEntityWithRelationships owner);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Objects.DataClasses.RelationshipManager Create(class System.Data.Objects.DataClasses.IEntityWithRelationships owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.RelationshipManager.Create(System.Data.Objects.DataClasses.IEntityWithRelationships)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (owner As IEntityWithRelationships) As RelationshipManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Objects::DataClasses::RelationshipManager ^ Create(System::Data::Objects::DataClasses::IEntityWithRelationships ^ owner);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.DataClasses.RelationshipManager</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="owner" Type="System.Data.Objects.DataClasses.IEntityWithRelationships" />
      </Parameters>
      <Docs>
        <param name="owner">參考正在呼叫這個方法的實體。</param>
        <summary>建立新的 <see cref="T:System.Data.Objects.DataClasses.RelationshipManager" /> 物件。</summary>
        <returns>所要求的 <see cref="T:System.Data.Objects.DataClasses.RelationshipManager" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 實作 <xref:System.Data.Objects.DataClasses.RelationshipManager.Create%2A> 的物件會使用 <xref:System.Data.Objects.DataClasses.IEntityWithRelationships> 方法。 當物件服務要求實作 <xref:System.Data.Objects.DataClasses.RelationshipManager> 之物件的 <xref:System.Data.Objects.DataClasses.IEntityWithRelationships> 屬性時，如果此物件的關聯性管理員尚未存在，就會呼叫 <xref:System.Data.Objects.DataClasses.RelationshipManager.Create%2A> 方法。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllRelatedEnds">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Data.Objects.DataClasses.IRelatedEnd&gt; GetAllRelatedEnds ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Objects.DataClasses.IRelatedEnd&gt; GetAllRelatedEnds() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.RelationshipManager.GetAllRelatedEnds" />
      <MemberSignature Language="VB.NET" Value="Public Iterator Function GetAllRelatedEnds () As IEnumerable(Of IRelatedEnd)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::Data::Objects::DataClasses::IRelatedEnd ^&gt; ^ GetAllRelatedEnds();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Data.Objects.DataClasses.RelationshipManager/&lt;GetAllRelatedEnds&gt;d__40))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Data.Objects.DataClasses.IRelatedEnd&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>傳回關聯性管理員所管理之所有相關端的列舉型別 (Enumeration)。</summary>
        <returns>實作 <see cref="T:System.Collections.Generic.IEnumerable`1" /> 之物件的 <see cref="T:System.Data.Objects.DataClasses.IRelatedEnd" />。 當這些關聯性尚未填入 (Populate) 時，就會傳回空的列舉型別。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Objects.DataClasses.RelationshipManager.GetAllRelatedEnds%2A>方法傳回的列舉<xref:System.Data.Objects.DataClasses.EntityCollection%601>和<xref:System.Data.Objects.DataClasses.EntityReference%601>物件。 <xref:System.Data.Objects.DataClasses.EntityCollection%601> 和<xref:System.Data.Objects.DataClasses.EntityReference%601>是具象型別衍生自<xref:System.Data.Objects.DataClasses.RelatedEnd>。 <xref:System.Data.Objects.DataClasses.RelatedEnd>抽象類別會實作<xref:System.Data.Objects.DataClasses.IRelatedEnd>介面。  
  
   
  
## Examples  
 本主題中的範例根據[AdventureWorks Sales Model](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832)。 此範例會將新`SalesOrderHeader`實體`Contact`實體。 然後它會取得所有相關的端從`Contact`實體和顯示關聯性名稱、 來源角色名稱，以及每個相關端，目標角色名稱  
  
 [!code-csharp[DP ObjectServices Concepts#IRelatedEnd](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#irelatedend)]
 [!code-vb[DP ObjectServices Concepts#IRelatedEnd](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#irelatedend)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRelatedCollection&lt;TTargetEntity&gt;">
      <MemberSignature Language="C#" Value="public System.Data.Objects.DataClasses.EntityCollection&lt;TTargetEntity&gt; GetRelatedCollection&lt;TTargetEntity&gt; (string relationshipName, string targetRoleName) where TTargetEntity : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.DataClasses.EntityCollection`1&lt;!!TTargetEntity&gt; GetRelatedCollection&lt;class TTargetEntity&gt;(string relationshipName, string targetRoleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.RelationshipManager.GetRelatedCollection``1(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRelatedCollection(Of TTargetEntity As Class) (relationshipName As String, targetRoleName As String) As EntityCollection(Of TTargetEntity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TTargetEntity&gt;&#xA; where TTargetEntity : class System::Data::Objects::DataClasses::EntityCollection&lt;TTargetEntity&gt; ^ GetRelatedCollection(System::String ^ relationshipName, System::String ^ targetRoleName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.DataClasses.EntityCollection&lt;TTargetEntity&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TTargetEntity">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="relationshipName" Type="System.String" />
        <Parameter Name="targetRoleName" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="TTargetEntity">傳回之 <see cref="T:System.Data.Objects.DataClasses.EntityCollection`1" /> 的型別。</typeparam>
        <param name="relationshipName">要巡覽之關聯性的名稱。 此關聯性名稱不符合命名空間。</param>
        <param name="targetRoleName">巡覽之目標角色的名稱。 表示巡覽關聯性的方向。</param>
        <summary>取得具有指定之關聯性名稱和目標角色名稱的相關物件的 <see cref="T:System.Data.Objects.DataClasses.EntityCollection`1" />。</summary>
        <returns>相關物件的 <see cref="T:System.Data.Objects.DataClasses.EntityCollection`1" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 取得具有指定之關聯性名稱和目標角色名稱的相關物件的 <xref:System.Data.Objects.DataClasses.EntityCollection%601>。  
  
 此關聯性名稱不應該符合命名空間。 當您在關聯性名稱前面加上命名空間時，就會發生錯誤。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">指定的角色傳回 <see cref="T:System.Data.Objects.DataClasses.EntityReference`1" /> 而非 <see cref="T:System.Data.Objects.DataClasses.EntityCollection`1" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetRelatedEnd">
      <MemberSignature Language="C#" Value="public System.Data.Objects.DataClasses.IRelatedEnd GetRelatedEnd (string relationshipName, string targetRoleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.DataClasses.IRelatedEnd GetRelatedEnd(string relationshipName, string targetRoleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.RelationshipManager.GetRelatedEnd(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRelatedEnd (relationshipName As String, targetRoleName As String) As IRelatedEnd" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Objects::DataClasses::IRelatedEnd ^ GetRelatedEnd(System::String ^ relationshipName, System::String ^ targetRoleName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.DataClasses.IRelatedEnd</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationshipName" Type="System.String" />
        <Parameter Name="targetRoleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="relationshipName">在其中定義 <c>targetRoleName</c> 之關聯性的名稱。 此關聯性名稱不符合命名空間。</param>
        <param name="targetRoleName">要用來擷取 <c>relationshipName</c> 另一端的目標角色。</param>
        <summary>針對關聯性中的指定目標角色，傳回正確類型的 <see cref="T:System.Data.Objects.DataClasses.EntityCollection`1" /> 或 <see cref="T:System.Data.Objects.DataClasses.EntityReference`1" />。</summary>
        <returns>
          代表已擷取之 <see cref="T:System.Data.Objects.DataClasses.IRelatedEnd" /> 或 <see cref="T:System.Data.Objects.DataClasses.EntityCollection`1" /> 的 <see cref="T:System.Data.Objects.DataClasses.EntityReference`1" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法是要在使用者沒有完整中繼資料 (包括關聯性兩端的靜態型別資訊 (Static Type Information)) 的狀況中使用。 這項中繼資料會在關聯性中每個實體類型的 <xref:System.Data.Objects.DataClasses.EdmRelationshipAttribute> 物件中指定，所以中繼資料系統可以根據提供的關聯性名稱和目標角色名稱來擷取這項資料。  
  
 此關聯性名稱不應該符合命名空間。 當您在關聯性名稱前面加上命名空間時，就會發生錯誤。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="relationshipName" /> 或 <paramref name="targetRoleName" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.InvalidOperationException">來源類型與擁有者的類型不相符。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="targetRoleName" /> 無效。  
  
 -或-  
  
 在中繼資料 (Metadata) 中找不到關聯性類型。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetRelatedReference&lt;TTargetEntity&gt;">
      <MemberSignature Language="C#" Value="public System.Data.Objects.DataClasses.EntityReference&lt;TTargetEntity&gt; GetRelatedReference&lt;TTargetEntity&gt; (string relationshipName, string targetRoleName) where TTargetEntity : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.DataClasses.EntityReference`1&lt;!!TTargetEntity&gt; GetRelatedReference&lt;class TTargetEntity&gt;(string relationshipName, string targetRoleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.RelationshipManager.GetRelatedReference``1(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRelatedReference(Of TTargetEntity As Class) (relationshipName As String, targetRoleName As String) As EntityReference(Of TTargetEntity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TTargetEntity&gt;&#xA; where TTargetEntity : class System::Data::Objects::DataClasses::EntityReference&lt;TTargetEntity&gt; ^ GetRelatedReference(System::String ^ relationshipName, System::String ^ targetRoleName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.DataClasses.EntityReference&lt;TTargetEntity&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TTargetEntity">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="relationshipName" Type="System.String" />
        <Parameter Name="targetRoleName" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="TTargetEntity">傳回之 <see cref="T:System.Data.Objects.DataClasses.EntityReference`1" /> 的型別。</typeparam>
        <param name="relationshipName">要巡覽之關聯性的名稱。 此關聯性名稱不符合命名空間。</param>
        <param name="targetRoleName">巡覽之目標角色的名稱。 表示巡覽關聯性的方向。</param>
        <summary>使用關聯性名稱和目標角色名稱的指定組合，取得相關物件的 <see cref="T:System.Data.Objects.DataClasses.EntityReference`1" />。</summary>
        <returns>相關物件的 <see cref="T:System.Data.Objects.DataClasses.EntityReference`1" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此關聯性名稱不應該符合命名空間。 當您在關聯性名稱前面加上命名空間時，就會發生錯誤。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">指定的角色傳回 <see cref="T:System.Data.Objects.DataClasses.EntityCollection`1" /> 而非 <see cref="T:System.Data.Objects.DataClasses.EntityReference`1" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="InitializeRelatedCollection&lt;TTargetEntity&gt;">
      <MemberSignature Language="C#" Value="public void InitializeRelatedCollection&lt;TTargetEntity&gt; (string relationshipName, string targetRoleName, System.Data.Objects.DataClasses.EntityCollection&lt;TTargetEntity&gt; entityCollection) where TTargetEntity : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InitializeRelatedCollection&lt;class TTargetEntity&gt;(string relationshipName, string targetRoleName, class System.Data.Objects.DataClasses.EntityCollection`1&lt;!!TTargetEntity&gt; entityCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.RelationshipManager.InitializeRelatedCollection``1(System.String,System.String,System.Data.Objects.DataClasses.EntityCollection{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub InitializeRelatedCollection(Of TTargetEntity As Class) (relationshipName As String, targetRoleName As String, entityCollection As EntityCollection(Of TTargetEntity))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TTargetEntity&gt;&#xA; where TTargetEntity : class void InitializeRelatedCollection(System::String ^ relationshipName, System::String ^ targetRoleName, System::Data::Objects::DataClasses::EntityCollection&lt;TTargetEntity&gt; ^ entityCollection);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TTargetEntity">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="relationshipName" Type="System.String" />
        <Parameter Name="targetRoleName" Type="System.String" />
        <Parameter Name="entityCollection" Type="System.Data.Objects.DataClasses.EntityCollection&lt;TTargetEntity&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TTargetEntity">要初始化之 <see cref="T:System.Data.Objects.DataClasses.EntityCollection`1" /> 的型別。</typeparam>
        <param name="relationshipName">關聯性名稱。</param>
        <param name="targetRoleName">相關端的角色名稱。</param>
        <param name="entityCollection">要初始化的 <see cref="T:System.Data.Objects.DataClasses.EntityCollection`1" />。</param>
        <summary>初始化使用預設建構函式所建立的現有 <see cref="T:System.Data.Objects.DataClasses.EntityCollection`1" />。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Objects.DataClasses.RelationshipManager.InitializeRelatedCollection%2A> 方法會初始化使用預設建構函式所建立的現有 <xref:System.Data.Objects.DataClasses.EntityCollection%601>。 <xref:System.Data.Objects.DataClasses.EntityCollection%601> 是使用提供的關聯性和目標角色名稱初始化的。  
  
 <xref:System.Data.Objects.DataClasses.RelationshipManager.InitializeRelatedCollection%2A> 方法只會在還原序列化期間使用。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">當提供的 <see cref="T:System.Data.Objects.DataClasses.EntityCollection`1" /> 已經初始化時。  
  
 -或-  
  
 當關聯性管理員已經附加至 <see cref="T:System.Data.Objects.ObjectContext" /> 時。  
  
 -或-  
  
 當關聯性管理員已經包含具有這個名稱和目標角色的關聯性時。</exception>
      </Docs>
    </Member>
    <Member MemberName="InitializeRelatedReference&lt;TTargetEntity&gt;">
      <MemberSignature Language="C#" Value="public void InitializeRelatedReference&lt;TTargetEntity&gt; (string relationshipName, string targetRoleName, System.Data.Objects.DataClasses.EntityReference&lt;TTargetEntity&gt; entityReference) where TTargetEntity : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InitializeRelatedReference&lt;class TTargetEntity&gt;(string relationshipName, string targetRoleName, class System.Data.Objects.DataClasses.EntityReference`1&lt;!!TTargetEntity&gt; entityReference) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.RelationshipManager.InitializeRelatedReference``1(System.String,System.String,System.Data.Objects.DataClasses.EntityReference{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub InitializeRelatedReference(Of TTargetEntity As Class) (relationshipName As String, targetRoleName As String, entityReference As EntityReference(Of TTargetEntity))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TTargetEntity&gt;&#xA; where TTargetEntity : class void InitializeRelatedReference(System::String ^ relationshipName, System::String ^ targetRoleName, System::Data::Objects::DataClasses::EntityReference&lt;TTargetEntity&gt; ^ entityReference);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TTargetEntity">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="relationshipName" Type="System.String" />
        <Parameter Name="targetRoleName" Type="System.String" />
        <Parameter Name="entityReference" Type="System.Data.Objects.DataClasses.EntityReference&lt;TTargetEntity&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TTargetEntity">要初始化之 <see cref="T:System.Data.Objects.DataClasses.EntityReference`1" /> 的型別。</typeparam>
        <param name="relationshipName">關聯性名稱。</param>
        <param name="targetRoleName">相關端的角色名稱。</param>
        <param name="entityReference">要初始化的 <see cref="T:System.Data.Objects.DataClasses.EntityReference`1" />。</param>
        <summary>初始化使用預設建構函式所建立的現有 <see cref="T:System.Data.Objects.DataClasses.EntityReference`1" />。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Objects.DataClasses.RelationshipManager.InitializeRelatedReference%2A> 方法會初始化使用預設建構函式所建立的現有 <xref:System.Data.Objects.DataClasses.EntityReference%601>。 <xref:System.Data.Objects.DataClasses.EntityReference%601> 是使用提供的關聯性和目標角色名稱初始化的。  
  
 <xref:System.Data.Objects.DataClasses.RelationshipManager.InitializeRelatedReference%2A> 方法只會在還原序列化期間使用。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">當提供的 <see cref="T:System.Data.Objects.DataClasses.EntityReference`1" /> 已經初始化時。  
  
 -或-  
  
 當關聯性管理員已經附加至 <see cref="T:System.Data.Objects.ObjectContext" /> 時。  
  
 -或-  
  
 當關聯性管理員已經包含具有這個名稱和目標角色的關聯性時。</exception>
      </Docs>
    </Member>
    <Member MemberName="OnDeserialized">
      <MemberSignature Language="C#" Value="public void OnDeserialized (System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void OnDeserialized(valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.RelationshipManager.OnDeserialized(System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnDeserialized (context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OnDeserialized(System::Runtime::Serialization::StreamingContext context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.Serialization.OnDeserialized</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="context">序列化的資料流。</param>
        <summary>在內部搭配 <see cref="T:System.Data.Objects.DataClasses.RelationshipManager" /> 執行個體用來還原序列化實體物件。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSerializing">
      <MemberSignature Language="C#" Value="public void OnSerializing (System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void OnSerializing(valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.RelationshipManager.OnSerializing(System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnSerializing (context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OnSerializing(System::Runtime::Serialization::StreamingContext context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.Serialization.OnSerializing</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="context">描述給定序列化資料流的來源和目的端，並且提供其他呼叫端定義的內容。</param>
        <summary>由物件服務呼叫，以便針對含有序列化關聯性的二進位序列化 (Serialization) 準備 <see cref="T:System.Data.EntityKey" />。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 關聯性的序列化僅支援二進位序列化。 完整的物件圖形 (包括關聯性) 不支援 Windows Communication Foundation 和 XML 序列化。 如需詳細資訊，請參閱[序列化物件](http://msdn.microsoft.com/library/06c77f9b-5b2e-4c78-b3e3-8c148ba0ea99)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>