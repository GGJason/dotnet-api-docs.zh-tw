<Type Name="ProjectElementContainer" FullName="Microsoft.Build.Construction.ProjectElementContainer">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a9a6b5b20bf5655f4da4ab482393dc854edc7e21" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class ProjectElementContainer : Microsoft.Build.Construction.ProjectElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ProjectElementContainer extends Microsoft.Build.Construction.ProjectElement" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Construction.ProjectElementContainer" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ProjectElementContainer&#xA;Inherits ProjectElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class ProjectElementContainer abstract : Microsoft::Build::Construction::ProjectElement" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.Build.Construction.ProjectElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="1823e-101">為專案項目提供抽象容器類別。</span>
      <span class="sxs-lookup">
        <span data-stu-id="1823e-101">Provides an abstract container class for project elements.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AllChildren">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Construction.ProjectElement&gt; AllChildren { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Construction.ProjectElement&gt; AllChildren" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Construction.ProjectElementContainer.AllChildren" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllChildren As IEnumerable(Of ProjectElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Construction::ProjectElement ^&gt; ^ AllChildren { System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Construction::ProjectElement ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Construction.ProjectElement&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1823e-102">取得所有子項目的遞迴深度優先列舉程式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1823e-102">Gets a recursive depth-first enumerator over all child elements.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1823e-103">傳回所有子項目的遞迴深度優先列舉程式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1823e-103">Returns a recursive depth-first enumerator over all child elements.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1823e-104">遞迴可能是因為專案項目容器可能會包含其本身的子系專案項目容器。</span><span class="sxs-lookup"><span data-stu-id="1823e-104">Recursion is possible because project element containers may contain children that are themselves project element containers.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendChild">
      <MemberSignature Language="C#" Value="public void AppendChild (Microsoft.Build.Construction.ProjectElement child);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendChild(class Microsoft.Build.Construction.ProjectElement child) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Construction.ProjectElementContainer.AppendChild(Microsoft.Build.Construction.ProjectElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendChild (child As ProjectElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendChild(Microsoft::Build::Construction::ProjectElement ^ child);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="Microsoft.Build.Construction.ProjectElement" />
      </Parameters>
      <Docs>
        <param name="child">
          <span data-ttu-id="1823e-105">要附加的專案項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1823e-105">The project element to be appended.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1823e-106">將 <paramref name="child" /> 項目附加為此專案容器的最後一個子項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1823e-106">Appends the <paramref name="child" /> element as the last child of this project container.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1823e-107">如果此專案的容器不父代，或是擲回例外狀況`child`項目已經成為父代，或如果`child`元素藉由建立不同<xref:Microsoft.Build.Construction.ProjectRootElement>。</span><span class="sxs-lookup"><span data-stu-id="1823e-107">Throws an exception if this project container is not parented, or if the `child` element is already parented, or if the `child` element was created by a different <xref:Microsoft.Build.Construction.ProjectRootElement>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Children">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Construction.ProjectElement&gt; Children { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Construction.ProjectElement&gt; Children" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Construction.ProjectElementContainer.Children" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Children As ICollection(Of ProjectElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;Microsoft::Build::Construction::ProjectElement ^&gt; ^ Children { System::Collections::Generic::ICollection&lt;Microsoft::Build::Construction::ProjectElement ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Construction.ProjectElement&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1823e-108">取得所有子項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1823e-108">Gets all child elements.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1823e-109">傳回所有子項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1823e-109">Returns all child elements.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChildrenReversed">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Construction.ProjectElement&gt; ChildrenReversed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Construction.ProjectElement&gt; ChildrenReversed" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Construction.ProjectElementContainer.ChildrenReversed" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChildrenReversed As ICollection(Of ProjectElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;Microsoft::Build::Construction::ProjectElement ^&gt; ^ ChildrenReversed { System::Collections::Generic::ICollection&lt;Microsoft::Build::Construction::ProjectElement ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Construction.ProjectElement&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1823e-110">取得所有子項目 (從最後一個子系開始)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1823e-110">Gets all child elements, starting from the last child.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1823e-111">傳回所有子項目 (從最後一個子系開始)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1823e-111">Returns all child elements, starting from the last child.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Construction.ProjectElementContainer.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1823e-112">取得子項目的數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1823e-112">Gets the number of child elements.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1823e-113">傳回子項目的數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1823e-113">Returns the number of child elements.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FirstChild">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Construction.ProjectElement FirstChild { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Construction.ProjectElement FirstChild" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Construction.ProjectElementContainer.FirstChild" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FirstChild As ProjectElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Construction::ProjectElement ^ FirstChild { Microsoft::Build::Construction::ProjectElement ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ProjectElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1823e-114">取得第一個子項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1823e-114">Gets the first child element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1823e-115">傳回第一個子項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1823e-115">Returns the first child element.</span>
          </span>
          <span data-ttu-id="1823e-116">如果沒有子項目存在，則傳回 Null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1823e-116">Returns null if no child element exists.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1823e-117">使用<xref:Microsoft.Build.Construction.ProjectElementContainer.PrependChild%2A>來初始化這個屬性。</span><span class="sxs-lookup"><span data-stu-id="1823e-117">Use <xref:Microsoft.Build.Construction.ProjectElementContainer.PrependChild%2A> to initialize this property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertAfterChild">
      <MemberSignature Language="C#" Value="public void InsertAfterChild (Microsoft.Build.Construction.ProjectElement child, Microsoft.Build.Construction.ProjectElement reference);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InsertAfterChild(class Microsoft.Build.Construction.ProjectElement child, class Microsoft.Build.Construction.ProjectElement reference) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Construction.ProjectElementContainer.InsertAfterChild(Microsoft.Build.Construction.ProjectElement,Microsoft.Build.Construction.ProjectElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InsertAfterChild (child As ProjectElement, reference As ProjectElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InsertAfterChild(Microsoft::Build::Construction::ProjectElement ^ child, Microsoft::Build::Construction::ProjectElement ^ reference);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="Microsoft.Build.Construction.ProjectElement" />
        <Parameter Name="reference" Type="Microsoft.Build.Construction.ProjectElement" />
      </Parameters>
      <Docs>
        <param name="child">
          <span data-ttu-id="1823e-118">要插入的專案項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1823e-118">The project element to be inserted.</span>
          </span>
        </param>
        <param name="reference">
          <span data-ttu-id="1823e-119">要插入在後面的專案項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1823e-119">The project element to be inserted after.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1823e-120">將 <paramref name="child" /> 項目插入在 <paramref name="reference" /> 項目之後。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1823e-120">Inserts the <paramref name="child" /> element after the <paramref name="reference" /> element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1823e-121">如果`reference`項目為 null，這個方法相當於<xref:Microsoft.Build.Construction.ProjectElementContainer.PrependChild%2A>。</span><span class="sxs-lookup"><span data-stu-id="1823e-121">If the `reference` element is null, this method is equivalent to <xref:Microsoft.Build.Construction.ProjectElementContainer.PrependChild%2A>.</span></span>  
  
 <span data-ttu-id="1823e-122">擲回例外狀況，如果此專案的容器不父代，或是`child`項目已經成為父代，或如果`child`項目由不同<xref:Microsoft.Build.Construction.ProjectRootElement>，或如果`reference`項目不是此專案的容器子系.</span><span class="sxs-lookup"><span data-stu-id="1823e-122">Throws an exception if this project container is not parented, or if the `child` element is already parented, or if the `child` element was created by a different <xref:Microsoft.Build.Construction.ProjectRootElement>, or if the `reference` element is not a child of this project container.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertBeforeChild">
      <MemberSignature Language="C#" Value="public void InsertBeforeChild (Microsoft.Build.Construction.ProjectElement child, Microsoft.Build.Construction.ProjectElement reference);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InsertBeforeChild(class Microsoft.Build.Construction.ProjectElement child, class Microsoft.Build.Construction.ProjectElement reference) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Construction.ProjectElementContainer.InsertBeforeChild(Microsoft.Build.Construction.ProjectElement,Microsoft.Build.Construction.ProjectElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InsertBeforeChild (child As ProjectElement, reference As ProjectElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InsertBeforeChild(Microsoft::Build::Construction::ProjectElement ^ child, Microsoft::Build::Construction::ProjectElement ^ reference);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="Microsoft.Build.Construction.ProjectElement" />
        <Parameter Name="reference" Type="Microsoft.Build.Construction.ProjectElement" />
      </Parameters>
      <Docs>
        <param name="child">
          <span data-ttu-id="1823e-123">要插入的專案項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1823e-123">The project element to be inserted.</span>
          </span>
        </param>
        <param name="reference">
          <span data-ttu-id="1823e-124">要插入在前面的專案項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1823e-124">The project element to be inserted before.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1823e-125">將 <paramref name="child" /> 項目插入在 <paramref name="reference" /> 項目之前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1823e-125">Inserts the <paramref name="child" /> element before the <paramref name="reference" /> element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1823e-126">如果`reference`項目為 null，這個方法相當於<xref:Microsoft.Build.Construction.ProjectElementContainer.AppendChild%2A>。</span><span class="sxs-lookup"><span data-stu-id="1823e-126">If the `reference` element is null, this method is equivalent to <xref:Microsoft.Build.Construction.ProjectElementContainer.AppendChild%2A>.</span></span>  
  
 <span data-ttu-id="1823e-127">擲回例外狀況，如果此專案的容器不父代，或是`child`項目已經成為父代，或如果`child`項目由不同<xref:Microsoft.Build.Construction.ProjectRootElement>，或如果`reference`項目不是此專案的容器子系.</span><span class="sxs-lookup"><span data-stu-id="1823e-127">Throws an exception if this project container is not parented, or if the `child` element is already parented, or if the `child` element was created by a different <xref:Microsoft.Build.Construction.ProjectRootElement>, or if the `reference` element is not a child of this project container.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LastChild">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Construction.ProjectElement LastChild { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Construction.ProjectElement LastChild" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Construction.ProjectElementContainer.LastChild" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LastChild As ProjectElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Construction::ProjectElement ^ LastChild { Microsoft::Build::Construction::ProjectElement ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ProjectElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1823e-128">取得最後一個子項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1823e-128">Gets the last child element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1823e-129">傳回最後一個子項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1823e-129">Returns the last child element.</span>
          </span>
          <span data-ttu-id="1823e-130">如果沒有子項目存在，則傳回 Null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1823e-130">Returns null if no child element exists.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1823e-131">使用<xref:Microsoft.Build.Construction.ProjectElementContainer.AppendChild%2A>來初始化這個屬性。</span><span class="sxs-lookup"><span data-stu-id="1823e-131">Use <xref:Microsoft.Build.Construction.ProjectElementContainer.AppendChild%2A> to initialize this property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrependChild">
      <MemberSignature Language="C#" Value="public void PrependChild (Microsoft.Build.Construction.ProjectElement child);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PrependChild(class Microsoft.Build.Construction.ProjectElement child) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Construction.ProjectElementContainer.PrependChild(Microsoft.Build.Construction.ProjectElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PrependChild (child As ProjectElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PrependChild(Microsoft::Build::Construction::ProjectElement ^ child);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="Microsoft.Build.Construction.ProjectElement" />
      </Parameters>
      <Docs>
        <param name="child">
          <span data-ttu-id="1823e-132">要加在前面的專案項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1823e-132">The project element to be prepended.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1823e-133">將 <paramref name="child" /> 項目附加為此專案容器的第一個子項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1823e-133">Prepends the <paramref name="child" /> element as the first child of this project container.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1823e-134">如果此專案的容器不父代，或是擲回例外狀況`child`項目已經成為父代，或如果`child`元素藉由建立不同<xref:Microsoft.Build.Construction.ProjectRootElement>。</span><span class="sxs-lookup"><span data-stu-id="1823e-134">Throws an exception if this project container is not parented, or if the `child` element is already parented, or if the `child` element was created by a different <xref:Microsoft.Build.Construction.ProjectRootElement>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAllChildren">
      <MemberSignature Language="C#" Value="public void RemoveAllChildren ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAllChildren() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Construction.ProjectElementContainer.RemoveAllChildren" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAllChildren ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAllChildren();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1823e-135">從這個專案容器中移除所有子項目 (如果有的話)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1823e-135">Removes all the children, if any, from this project container.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1823e-136">它可以安全地在列舉期間修改這種方式中的子系。</span><span class="sxs-lookup"><span data-stu-id="1823e-136">It is safe to modify the children in this way during enumeration.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveChild">
      <MemberSignature Language="C#" Value="public void RemoveChild (Microsoft.Build.Construction.ProjectElement child);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveChild(class Microsoft.Build.Construction.ProjectElement child) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Construction.ProjectElementContainer.RemoveChild(Microsoft.Build.Construction.ProjectElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveChild (child As ProjectElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveChild(Microsoft::Build::Construction::ProjectElement ^ child);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="Microsoft.Build.Construction.ProjectElement" />
      </Parameters>
      <Docs>
        <param name="child">
          <span data-ttu-id="1823e-137">要移除的專案項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1823e-137">The project element to be removed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1823e-138">從此專案容器中移除 <paramref name="child" /> 項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1823e-138">Removes a <paramref name="child" /> element from this project container.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1823e-139">如果子元素不目前父代此專案的容器，就會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="1823e-139">Throws an exception if the child element is not currently parented by this project container.</span></span> <span data-ttu-id="1823e-140">它可以安全地移除子列舉過程的這種方式。</span><span class="sxs-lookup"><span data-stu-id="1823e-140">It is safe to remove a child this way during enumeration.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>