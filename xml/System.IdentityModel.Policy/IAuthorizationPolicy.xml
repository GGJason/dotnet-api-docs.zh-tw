<Type Name="IAuthorizationPolicy" FullName="System.IdentityModel.Policy.IAuthorizationPolicy">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3d9c7a36861b8aa1718364410da493921d33b56a" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51930343" /></Metadata><TypeSignature Language="C#" Value="public interface IAuthorizationPolicy : System.IdentityModel.Policy.IAuthorizationComponent" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IAuthorizationPolicy implements class System.IdentityModel.Policy.IAuthorizationComponent" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Policy.IAuthorizationPolicy" />
  <TypeSignature Language="VB.NET" Value="Public Interface IAuthorizationPolicy&#xA;Implements IAuthorizationComponent" />
  <TypeSignature Language="C++ CLI" Value="public interface class IAuthorizationPolicy : System::IdentityModel::Policy::IAuthorizationComponent" />
  <TypeSignature Language="F#" Value="type IAuthorizationPolicy = interface&#xA;    interface IAuthorizationComponent" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IdentityModel.Policy.IAuthorizationComponent</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>定義一組授權使用者的規則，指定宣告集。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 實作 <xref:System.IdentityModel.Policy.IAuthorizationPolicy> 介面，將一組宣告集新增或對應至其他集合。 授權原則會檢查宣告集並根據目前的集合新增額外的宣告。 例如，授權原則可能評估含有生日的宣告，及新增判斷提示使用者超過 21 歲的宣告並新增 Over21 宣告至 <xref:System.IdentityModel.Policy.EvaluationContext>。  
  
 實作 <xref:System.IdentityModel.Policy.IAuthorizationPolicy> 介面的類別不會授權使用者，不過這些類別會讓 <xref:System.ServiceModel.ServiceAuthorizationManager> 類別來授權使用者。 <xref:System.ServiceModel.ServiceAuthorizationManager> 會對每個作用中的授權原則呼叫 <xref:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate%2A> 方法。 <xref:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate%2A> 方法會根據目前內容，決定是否要為使用者新增額外宣告。 授權原則的 <xref:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate%2A> 方法可能會呼叫多次，如同由其他授權原則新增至 <xref:System.IdentityModel.Policy.EvaluationContext> 的宣告。 當所有作用中的授權原則完成後，<xref:System.ServiceModel.ServiceAuthorizationManager> 類別會根據最後的宣告集來授權決策。 <xref:System.ServiceModel.ServiceAuthorizationManager> 類別會建立 <xref:System.IdentityModel.Policy.AuthorizationContext>，其中包含反映這些授權決策的不可變宣告集。  
  
   
  
## Examples  
 [!code-csharp[C_IAuthorizationPolicy#1](~/samples/snippets/csharp/VS_Snippets_CFX/c_iauthorizationpolicy/cs/service.cs#1)]
 [!code-vb[C_IAuthorizationPolicy#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/c_iauthorizationpolicy/vb/myauthorizationpolicy.vb#1)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/1db325ec-85be-47d0-8b6e-3ba2fdf3dda0">授權原則範例</related>
  </Docs>
  <Members>
    <Member MemberName="Evaluate">
      <MemberSignature Language="C#" Value="public bool Evaluate (System.IdentityModel.Policy.EvaluationContext evaluationContext, ref object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Evaluate(class System.IdentityModel.Policy.EvaluationContext evaluationContext, object&amp; state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate(System.IdentityModel.Policy.EvaluationContext,System.Object@)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Evaluate(System::IdentityModel::Policy::EvaluationContext ^ evaluationContext, System::Object ^ % state);" />
      <MemberSignature Language="F#" Value="abstract member Evaluate : System.IdentityModel.Policy.EvaluationContext *  -&gt; bool" Usage="iAuthorizationPolicy.Evaluate (evaluationContext, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="evaluationContext" Type="System.IdentityModel.Policy.EvaluationContext" />
        <Parameter Name="state" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="evaluationContext">包含授權原則評估之宣告集的 <see cref="T:System.IdentityModel.Policy.EvaluationContext" />。</param>
        <param name="state">由傳址 (By Reference) 方式所傳遞的 <see cref="T:System.Object" />，表示此授權原則的自訂狀態。</param>
        <summary>評估使用者是否符合此授權原則的要求。</summary>
        <returns>如果其他授權原則新增額外宣告至 <paramref name="evaluationContext" />，必須呼叫此授權原則的 <see cref="M:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate(System.IdentityModel.Policy.EvaluationContext,System.Object@)" /> 方法，則為 <see langword="false" />；否則為 <see langword="true" />，以聲明此授權原則不需要進行額外評估。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  實作 <xref:System.IdentityModel.Policy.IAuthorizationPolicy> 介面會預期由不同的執行緒呼叫 <xref:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate%2A> 方法多次。  
  
 實作 <xref:System.IdentityModel.Policy.IAuthorizationPolicy> 介面可使用 `state` 參數來追蹤呼叫和 <xref:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate%2A> 方法之間的狀態。 如果在對 <xref:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate%2A> 方法的指定呼叫中設定狀態物件，則在目前評估流程中相同的物件執行個體會傳遞至對 <xref:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate%2A> 方法的每個後續呼叫。  
  
   
  
## Examples  
 [!code-csharp[C_IAuthorizationPolicy#2](~/samples/snippets/csharp/VS_Snippets_CFX/c_iauthorizationpolicy/cs/service.cs#2)]
 [!code-vb[C_IAuthorizationPolicy#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/c_iauthorizationpolicy/vb/myauthorizationpolicy.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Issuer">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Claims.ClaimSet Issuer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Claims.ClaimSet Issuer" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Policy.IAuthorizationPolicy.Issuer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Issuer As ClaimSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Claims::ClaimSet ^ Issuer { System::IdentityModel::Claims::ClaimSet ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Issuer : System.IdentityModel.Claims.ClaimSet" Usage="System.IdentityModel.Policy.IAuthorizationPolicy.Issuer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Claims.ClaimSet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得表示授權原則之發行者的宣告集。</summary>
        <value>表示授權原則之發行者的 <see cref="T:System.IdentityModel.Claims.ClaimSet" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>