<Type Name="Series" FullName="System.Web.UI.DataVisualization.Charting.Series">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c00fbdd3fa6378bfcb95cac6c7978805d06ecfa7" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30550342" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Series : System.Web.UI.DataVisualization.Charting.DataPointCustomProperties" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Series extends System.Web.UI.DataVisualization.Charting.DataPointCustomProperties" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.DataVisualization.Charting.Series" />
  <TypeSignature Language="VB.NET" Value="Public Class Series&#xA;Inherits DataPointCustomProperties" />
  <TypeSignature Language="C++ CLI" Value="public ref class Series : System::Web::UI::DataVisualization::Charting::DataPointCustomProperties" />
  <AssemblyInfo>
    <AssemblyName>System.Web.DataVisualization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.DataVisualization.Charting.DataPointCustomProperties</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Points")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>儲存資料點與數列屬性。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A<xref:System.Web.UI.DataVisualization.Charting.Series>物件代表資料數列，而且會儲存在<xref:System.Web.UI.DataVisualization.Charting.SeriesCollection>類別。  
  
 A<xref:System.Web.UI.DataVisualization.Charting.Series>儲存<xref:System.Web.UI.DataVisualization.Charting.DataPoint>物件，使用<xref:System.Web.UI.DataVisualization.Charting.DataPointCollection>類別。 它也會儲存在資料數列的屬性。 比方說，資料數列都有色彩屬性、 背景影像屬性，背景漸層的屬性和其他等等。  
  
 <xref:System.Web.UI.DataVisualization.Charting.DataPoint>屬於一系列的物件也有自己的屬性。 一般來說，如果相同的屬性設定為資料點和其所屬的數列，資料點屬性具有優先順序。  
  
 一系列不一定會進行繪製圖表。它可以儲存用來執行的計算的另一個數列建立並再繪製資料點值。 比方說，雖然這些數列都不會繪製數列 A，繪製時，可能會加在一起，系列 B 和 C 數列資料點的結果。 若要繪製<xref:System.Web.UI.DataVisualization.Charting.Series>物件<xref:System.Web.UI.DataVisualization.Charting.Series.ChartArea%2A>屬性必須設定為名稱<xref:System.Web.UI.DataVisualization.Charting.ChartArea>物件，用來繪製數列。  
  
 建立一系列時，它會自動指派，給<xref:System.Web.UI.DataVisualization.Charting.ChartArea>名為 「 預設 」 的物件，或如果 「 預設 」 物件不存在時，圖表區域集合中的第一個可用的圖表區域。  
  
 若要停用一系列的顯示，請將其<xref:System.Web.UI.DataVisualization.Charting.Series.ChartArea%2A>屬性設為零長度字串。  
  
 <xref:System.Web.UI.DataVisualization.Charting.Series.ChartType%2A>屬性會決定將用來繪製這個數列中，如果它繪製的圖表類型。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> 類別的新執行個體。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Series ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Series.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Series();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> 類別的新執行個體。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Series (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Series.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Series(System::String ^ name);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">將建立之 <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> 物件的名稱。 必須為唯一名稱，否則會擲回例外狀況。</param>
        <summary>使用指定的數列名稱，初始化 <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個建構函式可以用來建立的新執行個體<xref:System.Web.UI.DataVisualization.Charting.Series>類別。  
  
> [!NOTE]
>  此數列，才能夠儲存<xref:System.Web.UI.DataVisualization.Charting.DataPoint>有一個 Y 值的物件。 如果有多個 Y 值的資料點加入至這一系列，就會擲回例外狀況。  
  
 若要在執行階段建立一系列，請使用<xref:System.Web.UI.DataVisualization.Charting.SeriesCollection.Add%2A>方法。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Series (string name, int yValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, int32 yValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Series.#ctor(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, yValues As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Series(System::String ^ name, int yValues);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="yValues" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="name">將建立之 <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> 物件的名稱。</param>
        <param name="yValues">屬於這個數列之 <see cref="T:System.Web.UI.DataVisualization.Charting.DataPoint" /> 物件所允許的 Y 值數量上限。</param>
        <summary>使用指定的名稱和 Y 值的數量上限，初始化 <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用這個建構函式建立並初始化的新執行個體<xref:System.Web.UI.DataVisualization.Charting.Series>類別。  
  
> [!IMPORTANT]
>  此數列僅能儲存<xref:System.Web.UI.DataVisualization.Charting.DataPoint>並沒有比設定的最大的多個 Y 值的物件`yValues`參數。 如果您新增已與最大的多個 Y 值的資料點，就會擲回例外狀況。  
  
 若要建立<xref:System.Web.UI.DataVisualization.Charting.Series>物件在執行階段，`Add`和`Insert`可以也可以使用數列集合屬性的方法。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AxisLabel">
      <MemberSignature Language="C#" Value="public override string AxisLabel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AxisLabel" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Series.AxisLabel" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property AxisLabel As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ AxisLabel { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定數列的座標軸標籤文字。</summary>
        <value>
          <see langword="string" /> 值。 預設值為零長度字串。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChartArea">
      <MemberSignature Language="C#" Value="public string ChartArea { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ChartArea" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Series.ChartArea" />
      <MemberSignature Language="VB.NET" Value="Public Property ChartArea As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ChartArea { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.DataVisualization.Charting.SeriesAreaNameConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定用於繪製資料數列 (如果有的話) 之 <see cref="T:System.Web.UI.DataVisualization.Charting.ChartArea" /> 物件的名稱。</summary>
        <value>
          <see langword="string" /> 值，表示用於繪製數列的 <see cref="T:System.Web.UI.DataVisualization.Charting.ChartArea" /> 物件。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當一系列加入在設計階段和執行的階段時，它會自動指派給 「 預設 」<xref:System.Web.UI.DataVisualization.Charting.ChartArea>物件或中的第一個可用的圖表區域<xref:System.Web.UI.DataVisualization.Charting.ChartAreaCollection>如果"Default"不存在。  
  
 設定此屬性為零長度字串，如果您不想要繪製數列。  
  
   
  
## Examples  
  
```vb  
' Create a new legend and associate three series with the legend.  
Public Sub CreateSecondLegend()  
    ' Attach the first series to a chart area.  
    Chart1.Series["Series1"].ChartArea = "Chart Area 1";  
  
    ' Attach the second series to a chart area.  
    Chart1.Series["Series2"].ChartArea = "Chart Area 2";  
  
End Sub 'CreateSecondLegend  
```  
  
```csharp  
// Create a new legend and associate three series with the legend.  
public void CreateSecondLegend()  
{  
     // Attach the first series to a chart area.  
     Chart1.Series["Series1"].ChartArea = "Chart Area 1";  
  
     // Attach the second series to a chart area.  
     Chart1.Series["Series2"].ChartArea = "Chart Area 2";  
  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChartType">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.SeriesChartType ChartType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataVisualization.Charting.SeriesChartType ChartType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Series.ChartType" />
      <MemberSignature Language="VB.NET" Value="Public Property ChartType As SeriesChartType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::SeriesChartType ChartType { System::Web::UI::DataVisualization::Charting::SeriesChartType get(); void set(System::Web::UI::DataVisualization::Charting::SeriesChartType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.ChartTypeEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.SeriesChartType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定數列的圖表類型。</summary>
        <value>
          <see cref="T:System.Web.UI.DataVisualization.Charting.SeriesChartType" /> 列舉值，指出用於表示數列的圖表類型。 預設值是 <see cref="F:System.Web.UI.DataVisualization.Charting.SeriesChartType.Column" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此屬性決定的圖表類型<xref:System.Web.UI.DataVisualization.Charting.Series>物件; 此值會區分大小寫。 請參閱<xref:System.Web.UI.DataVisualization.Charting.SeriesChartType>一系列的所有可能的圖表類型的列舉清單。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChartTypeName">
      <MemberSignature Language="C#" Value="public string ChartTypeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ChartTypeName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Series.ChartTypeName" />
      <MemberSignature Language="VB.NET" Value="Public Property ChartTypeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ChartTypeName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("Column")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.ChartTypeEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.DataVisualization.Charting.ChartTypeConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定用於繪製數列之圖表類型的名稱。</summary>
        <value>
          <see langword="string" /> 值，表示圖表類型的名稱。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Series.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <see langword="true" /> 表示釋放 Managed 和 Unmanaged 資源，<see langword="false" /> 則表示只釋放 Unmanaged 資源。</param>
        <summary>釋放 <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> 所使用的 Unmanaged 資源，並選擇性地釋放 Managed 資源。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EmptyPointStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.DataPointCustomProperties EmptyPointStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.DataVisualization.Charting.DataPointCustomProperties EmptyPointStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Series.EmptyPointStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property EmptyPointStyle As DataPointCustomProperties" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::DataPointCustomProperties ^ EmptyPointStyle { System::Web::UI::DataVisualization::Charting::DataPointCustomProperties ^ get(); void set(System::Web::UI::DataVisualization::Charting::DataPointCustomProperties ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.DataPointCustomProperties</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定標示為空資料點之資料點的繪製樣式。</summary>
        <value>
          <see cref="T:System.Web.UI.DataVisualization.Charting.DataPointCustomProperties" /> 物件。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.DataVisualization.Charting.Series.EmptyPointStyle%2A>屬性會決定標示為空白，例如，在的框線色彩，而在標記映像、 背景色彩或影像和其他等等的點的繪製樣式。  
  
 某些屬性僅適用於特定圖表類型。 例如，<xref:System.Web.UI.DataVisualization.Charting.Chart.BackImage%2A>屬性不適用於折線圖中，但未套用至區域圖。  
  
 若要顯示的影像，指出空點，請使用<xref:System.Web.UI.DataVisualization.Charting.DataPointCustomProperties.MarkerImage%2A>和<xref:System.Web.UI.DataVisualization.Charting.DataPointCustomProperties.MarkerStyle%2A>屬性，而非<xref:System.Web.UI.DataVisualization.Charting.DataPointCustomProperties.BackImage%2A>屬性。  
  
 <xref:System.Web.UI.DataVisualization.Charting.Series.AxisLabel%2A>屬性會決定空點的軸標籤。 請注意，堆疊的圖表類型的座標軸標籤由<xref:System.Web.UI.DataVisualization.Charting.Series.AxisLabel%2A>屬性已設定此屬性的第一個繪製數列。  
  
 資料點可手動標示為空白藉由設定<xref:System.Web.UI.DataVisualization.Charting.DataPoint.IsEmpty%2A>屬性`true`。 或者，其中`InsertEmptyPoints`方法<xref:System.Web.UI.DataVisualization.Charting.DataManipulator>類別可以用來檢查遺失的資料，並插入空點，如果遺漏資料點。  
  
> [!NOTE]
>  在圖表的線條類型的情況下連接到空點的線條的線條色彩由<xref:System.Web.UI.DataVisualization.Charting.DataPointCustomProperties.Color%2A>屬性設定。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Series.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Property Enabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Enabled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ParenthesizePropertyName(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定旗標，指出是否在呈現的圖表上顯示數列。</summary>
        <value>
          如果要在呈現的圖表上顯示數列，則為 <see langword="true" />，否則為 <see langword="false" />。 預設值是 <see langword="true" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 取得或設定值，決定如果數列顯示在轉譯<xref:System.Web.UI.DataVisualization.Charting.ChartArea>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsXValueIndexed">
      <MemberSignature Language="C#" Value="public bool IsXValueIndexed { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsXValueIndexed" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Series.IsXValueIndexed" />
      <MemberSignature Language="VB.NET" Value="Public Property IsXValueIndexed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsXValueIndexed { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定旗標，指出資料點索引是否用於 X 值。</summary>
        <value>
          如果屬於該數列的資料點的索引會用於 X 值，則為 <see langword="true" />，如果不會，則為 <see langword="false" />。 預設值是 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 數列中的所有資料點都使用循序索引，而且如果這個屬性是`true`則會依序繪製資料點，無論其相關聯的 X 值。 這表示會有任何 「 遺失 」 的資料點。  
  
 例如，假設有 1、 2 和 4 的 X 值序列中有三 （3） 資料點。 如果這個屬性是`false`，會在 x 軸位置標示為"3"中遺漏資料點。 不過，如果您將此屬性設定為`true`、 三個資料點會繪製在點 1、 2 和 4，以循序方式，和將會有任何遺漏的資料點。 標示為"3"的 x 軸位置不會出現在圖表上。  
  
 當您不希望有遺失的間隔，您知道您將沒有資料，例如週末資料點時，這非常有用。  
  
> [!IMPORTANT]
>  如果您要顯示多個數列，而且至少一個數列使用索引的 X 值，則所有數列必須都對齊 — 也就是有相同數目的資料點，而且對應的點必須具有相同的 X 值。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Legend">
      <MemberSignature Language="C#" Value="public string Legend { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Legend" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Series.Legend" />
      <MemberSignature Language="VB.NET" Value="Public Property Legend As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Legend { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.DataVisualization.Charting.SeriesLegendNameConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定與 <see cref="T:System.Web.UI.DataVisualization.Charting.Legend" /> 物件相關聯的數列名稱。</summary>
        <value>
          <see langword="string" /> 值，表示 <see cref="T:System.Web.UI.DataVisualization.Charting.Legend" /> 物件的名稱。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當一系列加入在設計階段和執行的階段時，會自動指派到預設<xref:System.Web.UI.DataVisualization.Charting.Legend>物件。  
  
 如果您不要在圖例中顯示的數列，將此屬性設定為零長度字串，或設定<xref:System.Web.UI.DataVisualization.Charting.DataPointCustomProperties.IsVisibleInLegend%2A>屬性`false`。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MarkerStep">
      <MemberSignature Language="C#" Value="public int MarkerStep { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MarkerStep" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Series.MarkerStep" />
      <MemberSignature Language="VB.NET" Value="Public Property MarkerStep As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MarkerStep { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，決定顯示資料點標記的頻率。</summary>
        <value>
          <see langword="integer" /> 值，決定顯示資料點標記的頻率。 預設值為一 (1)。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.DataVisualization.Charting.Series.MarkerStep%2A>屬性會指定與顯示標記的頻率。 例如，如果您將此屬性設定為二 （2)，每個資料點會使用的標記。  
  
 若啟用標記使用這個屬性只會用於<xref:System.Web.UI.DataVisualization.Charting.DataPointCustomProperties.MarkerStyle%2A>屬性。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public override string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Series.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定 <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> 物件的唯一名稱。</summary>
        <value>
          <see langword="string" /> 值，表示資料數列的唯一名稱。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 資料數列的名稱必須是唯一的。否則會擲回例外狀況。  
  
 這個屬性可以使用索引子，當您擷取時<xref:System.Web.UI.DataVisualization.Charting.Series>物件從<xref:System.Web.UI.DataVisualization.Charting.SeriesCollection>物件。  
  
 如果這個屬性設定為零長度字串，就會擲回例外狀況。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Palette">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.ChartColorPalette Palette { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataVisualization.Charting.ChartColorPalette Palette" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Series.Palette" />
      <MemberSignature Language="VB.NET" Value="Public Property Palette As ChartColorPalette" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::ChartColorPalette Palette { System::Web::UI::DataVisualization::Charting::ChartColorPalette get(); void set(System::Web::UI::DataVisualization::Charting::ChartColorPalette value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.ColorPaletteEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.ChartColorPalette</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定 <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> 物件的調色盤。</summary>
        <value>
          <see cref="T:System.Web.UI.DataVisualization.Charting.ChartColorPalette" /> 列舉值，決定資料數列的調色盤。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 調色盤用來自動將色彩指派給資料元素，如果資料點本身並沒有指派給他們的色彩，而且資料<xref:System.Web.UI.DataVisualization.Charting.Series>資料點所屬的物件也沒有指派的色彩。  
  
 如果沒有數列或資料點明確指定的色彩，所使用的色彩取決於圖表類型的圖表控制項調色盤或數列的調色盤，如果指定的其中一個。 請參閱下的表以取得詳細資料：  
  
|圖表類型|使用數列的調色盤嗎？|顯示資料點的色彩|  
|----------------|--------------------------|-------------------------------------|  
|任何形狀圖 （例如，圓形圖和環圈圖）|否|第一個可用的色彩，使<xref:System.Web.UI.DataVisualization.Charting.Chart>控制調色盤。 每個資料點的一種色彩。|  
|形狀圖以外的所有圖表|否|從第一個可用的色彩<xref:System.Web.UI.DataVisualization.Charting.Chart>控制調色盤。 每個資料數列的一種色彩。|  
|任何形狀圖 （例如，圓形圖和環圈圖）|[是]|第一個可用的色彩，使<xref:System.Web.UI.DataVisualization.Charting.Series>調色盤。 每個資料點的一種色彩。|  
|形狀圖以外的所有圖表|[是]|第一個可用的色彩，使<xref:System.Web.UI.DataVisualization.Charting.Series>調色盤。 每個資料數列的一種色彩。|  
  
 這<xref:System.Web.UI.DataVisualization.Charting.Series.Palette%2A>屬性的優先順序高於<xref:System.Web.UI.DataVisualization.Charting.Chart.Palette%2A>屬性的根<xref:System.Web.UI.DataVisualization.Charting.Chart>物件，對於資料的顯示。  
  
 注意： 如果`Palette`兩個屬性<xref:System.Web.UI.DataVisualization.Charting.Chart>和<xref:System.Web.UI.DataVisualization.Charting.Series>物件設定為 [無]，並無色彩指派給相關的資料數列/資料點，預設調色盤"BrightPastel 」 或<xref:System.Web.UI.DataVisualization.Charting.Chart.PaletteCustomColors%2A>用。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Points">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.DataPointCollection Points { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.DataVisualization.Charting.DataPointCollection Points" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Series.Points" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Points As DataPointCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::DataPointCollection ^ Points { System::Web::UI::DataVisualization::Charting::DataPointCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.DataPointCollectionEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.DataPointCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得 <see cref="T:System.Web.UI.DataVisualization.Charting.DataPointCollection" /> 物件。</summary>
        <value>
          <see cref="T:System.Web.UI.DataVisualization.Charting.DataPointCollection" /> 物件，表示 <see cref="T:System.Web.UI.DataVisualization.Charting.DataPoint" /> 物件的集合。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.DataVisualization.Charting.Series.Points%2A>集合屬性可讓您加入和移除資料序列點。 這個屬性也會提供方法和屬性，可用來管理這個集合，例如尋找資料點，執行資料繫結，等等。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShadowColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color ShadowColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color ShadowColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Series.ShadowColor" />
      <MemberSignature Language="VB.NET" Value="Public Property ShadowColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color ShadowColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "128,0,0,0")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定數列的陰影色彩。</summary>
        <value>
          <see cref="T:System.Drawing.Color" /> 值。 預設色彩為 <see cref="P:System.Drawing.Color.Black" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 取得或設定一個序列，它可以是任何有效的 ARGB （alpha、 紅、 綠、 藍色） 值的陰影色彩。  
  
 Alpha 值可用來達到真實感陰影效果。請嘗試使用陰影色彩值的"128,0,0,0"。  
  
 若要實作陰影，設定<xref:System.Web.UI.DataVisualization.Charting.Series.ShadowOffset%2A>屬性為零 (0) 以外的值。  
  
   
  
## Examples  
  
```  
' Set series shadow color and offset  
Public Sub SetSeriesShadow()  
     Chart1.Series("Default"}.ShadowColor = Color.Blue  
     Chart1.Series("Default"}.ShadowOffset = 2  
End Sub 'SetSeriesShadow  
```  
  
```csharp  
// Set series shadow color and offset   
public void SetSeriesShadow()  
{      
    Chart1.Series("Default"}.ShadowColor = Color.Blue;  
    Chart1.Series["Default"].ShadowOffset = 2;  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShadowOffset">
      <MemberSignature Language="C#" Value="public int ShadowOffset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ShadowOffset" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Series.ShadowOffset" />
      <MemberSignature Language="VB.NET" Value="Public Property ShadowOffset As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ShadowOffset { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定數列的陰影位移 (以像素為單位)。</summary>
        <value>
          <see langword="integer" /> 值，表示數列的陰影位移 (以像素為單位)。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 若要實作遮蔽，請使用零 (0) 以外的值。 正值會導致往下及往右移位的陰影。 負值會導致向上和向左移位的陰影。  
  
   
  
## Examples  
 下列程式碼範例會設定一系列的視覺屬性。  
  
```vb  
' Set series shadow offset  
Public Sub SetSeriesShadowOffset()  
    Chart1.Series("Default"}.ShadowOffset = 2  
End Sub 'SetSeriesVisualAttributes  
```  
  
```csharp  
// Set series shadow offset   
public void SetSeriesShadowOffset ()  
{      
    Chart1.Series["Default"].ShadowOffset = 2;  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SmartLabelStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.SmartLabelStyle SmartLabelStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.DataVisualization.Charting.SmartLabelStyle SmartLabelStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Series.SmartLabelStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property SmartLabelStyle As SmartLabelStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::SmartLabelStyle ^ SmartLabelStyle { System::Web::UI::DataVisualization::Charting::SmartLabelStyle ^ get(); void set(System::Web::UI::DataVisualization::Charting::SmartLabelStyle ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.SmartLabelStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定智慧標籤的樣式。</summary>
        <value>
          <see cref="T:System.Web.UI.DataVisualization.Charting.SmartLabelStyle" /> 列舉值。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Sort">
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>在 <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> 上執行排序。 請注意，<see cref="T:System.Web.UI.DataVisualization.Charting.DataManipulator" /> 類別提供排序的方法，具有比這些排序方法更大的彈性。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public void Sort (System.Collections.Generic.IComparer&lt;System.Web.UI.DataVisualization.Charting.DataPoint&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Sort(class System.Collections.Generic.IComparer`1&lt;class System.Web.UI.DataVisualization.Charting.DataPoint&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Series.Sort(System.Collections.Generic.IComparer{System.Web.UI.DataVisualization.Charting.DataPoint})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Sort (comparer As IComparer(Of DataPoint))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Sort(System::Collections::Generic::IComparer&lt;System::Web::UI::DataVisualization::Charting::DataPoint ^&gt; ^ comparer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;System.Web.UI.DataVisualization.Charting.DataPoint&gt;" />
      </Parameters>
      <Docs>
        <param name="comparer">
          <see cref="T:System.Collections.IComparer" /> 介面。</param>
        <summary>使用 <see cref="T:System.Collections.IComparer" /> 介面，排序數列中的資料點。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public void Sort (System.Web.UI.DataVisualization.Charting.PointSortOrder pointSortOrder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Sort(valuetype System.Web.UI.DataVisualization.Charting.PointSortOrder pointSortOrder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Series.Sort(System.Web.UI.DataVisualization.Charting.PointSortOrder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Sort(System::Web::UI::DataVisualization::Charting::PointSortOrder pointSortOrder);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pointSortOrder" Type="System.Web.UI.DataVisualization.Charting.PointSortOrder" />
      </Parameters>
      <Docs>
        <param name="pointSortOrder">排序次序。</param>
        <summary>以指定的排序順序，排序數列中的資料點。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public void Sort (System.Web.UI.DataVisualization.Charting.PointSortOrder pointSortOrder, string sortBy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Sort(valuetype System.Web.UI.DataVisualization.Charting.PointSortOrder pointSortOrder, string sortBy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Series.Sort(System.Web.UI.DataVisualization.Charting.PointSortOrder,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Sort(System::Web::UI::DataVisualization::Charting::PointSortOrder pointSortOrder, System::String ^ sortBy);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pointSortOrder" Type="System.Web.UI.DataVisualization.Charting.PointSortOrder" />
        <Parameter Name="sortBy" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="pointSortOrder">排序次序。</param>
        <param name="sortBy">用於排序 (X、Y、Y2 ...) 的值。</param>
        <summary>以指定的排序順序與用於排序的值，排序數列中的資料點。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="XAxisType">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.AxisType XAxisType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataVisualization.Charting.AxisType XAxisType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Series.XAxisType" />
      <MemberSignature Language="VB.NET" Value="Public Property XAxisType As AxisType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::AxisType XAxisType { System::Web::UI::DataVisualization::Charting::AxisType get(); void set(System::Web::UI::DataVisualization::Charting::AxisType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.AxisType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定數列的 X 軸類型。</summary>
        <value>
          <see cref="P:System.Web.UI.DataVisualization.Charting.Series.XAxisType" /> 列舉值，決定數列要使用主要 X 軸還是次要 X 軸。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 針對所有的這類圖表類型，除了水平方向列和堆疊橫條圖和圓形圖、 環圈圖、 漏斗圖和金字塔圖形狀圖，主要 x 軸是一律低座標軸，次要軸是上層軸。 橫條圖和堆疊橫條圖，主要 x 軸是左的座標軸，而次要 x 軸右座標軸。  
  
 當使用次要 x 軸繪製資料時，您必須使用<xref:System.Web.UI.DataVisualization.Charting.ChartArea.AxisX2%2A>屬性來設定軸屬性，而非<xref:System.Web.UI.DataVisualization.Charting.ChartArea.AxisX%2A>屬性。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XValueMember">
      <MemberSignature Language="C#" Value="public string XValueMember { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string XValueMember" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Series.XValueMember" />
      <MemberSignature Language="VB.NET" Value="Public Property XValueMember As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ XValueMember { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter("System.Web.UI.Design.DataVisualization.Charting.SeriesDataFieldXConvertor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定用於資料繫結到數列 X 值之圖表資料來源的成員資料行。</summary>
        <value>
          <see langword="string" /> 值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此屬性接受的成員資料行名稱或成員的資料行的序數值。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XValueType">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.ChartValueType XValueType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataVisualization.Charting.ChartValueType XValueType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Series.XValueType" />
      <MemberSignature Language="VB.NET" Value="Public Property XValueType As ChartValueType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::ChartValueType XValueType { System::Web::UI::DataVisualization::Charting::ChartValueType get(); void set(System::Web::UI::DataVisualization::Charting::ChartValueType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.ChartValueType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定沿著 X 軸繪製的實值型別。</summary>
        <value>
          <see cref="T:System.Web.UI.DataVisualization.Charting.ChartValueType" /> 列舉值，決定數列儲存之 X 值資料的類型。 預設值是 <see cref="F:System.Web.UI.DataVisualization.Charting.ChartValueType.Auto" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.DataVisualization.Charting.Series.XValueType%2A>屬性會決定數列所儲存的資料類型。  
  
 將此屬性設定為<xref:System.Web.UI.DataVisualization.Charting.ChartValueType.DateTime>可讓 X 值輸入為<xref:System.DateTime>值，而不是<xref:System.Double>。 日期和時間值會在內部儲存為.NET Framework<xref:System.Double>值。 同樣適用於<xref:System.Web.UI.DataVisualization.Charting.CustomLabel.ToPosition%2A>和<xref:System.Web.UI.DataVisualization.Charting.CustomLabel.FromPosition%2A>屬性<xref:System.Web.UI.DataVisualization.Charting.CustomLabel>物件。  
  
 `IntervalType`軸標籤、 刻度和格線類別中找到的屬性會決定的間隔類型。  
  
> [!NOTE]
>  若要正確地套用<xref:System.DateTime>所產生的資料點 X 值，使用軸標籤的格式<xref:System.Web.UI.DataVisualization.Charting.LabelStyle.Format%2A>屬性，這個屬性必須設定為<xref:System.Web.UI.DataVisualization.Charting.ChartValueType.DateTime>。  
  
 這個屬性也可用來判斷 X 值會繫結的資料類型。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="YAxisType">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.AxisType YAxisType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataVisualization.Charting.AxisType YAxisType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Series.YAxisType" />
      <MemberSignature Language="VB.NET" Value="Public Property YAxisType As AxisType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::AxisType YAxisType { System::Web::UI::DataVisualization::Charting::AxisType get(); void set(System::Web::UI::DataVisualization::Charting::AxisType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.AxisType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定數列的 Y 軸類型。</summary>
        <value>
          <see cref="T:System.Web.UI.DataVisualization.Charting.AxisType" /> 列舉值，決定數列要使用主要 Y 軸還是次要 Y 軸。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.DataVisualization.Charting.Series.YAxisType%2A>屬性會決定一系列使用主要或次要 y 軸繪製是否。  
  
 針對所有的圖表之外的圓形圖、 環圈圖、 範圍橫條圖、 列和堆疊橫條圖，主要 y 軸是左邊的垂直軸，而次要軸右垂直軸。 橫條圖和堆疊橫條圖，在主座標軸是較低的水平軸，而次要 y 軸上方的水平軸。  
  
 當使用次要 y 軸繪製資料時，您必須使用<xref:System.Web.UI.DataVisualization.Charting.ChartArea.AxisY2%2A>屬性來設定軸屬性，而非<xref:System.Web.UI.DataVisualization.Charting.ChartArea.AxisY%2A>屬性。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="YValueMembers">
      <MemberSignature Language="C#" Value="public string YValueMembers { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string YValueMembers" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Series.YValueMembers" />
      <MemberSignature Language="VB.NET" Value="Public Property YValueMembers As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ YValueMembers { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.SeriesDataFieldValueAxisUITypeEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter("System.Web.UI.Design.DataVisualization.Charting.SeriesDataFieldYConvertor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定用於資料繫結到數列 Y 值之圖表資料來源的成員資料行。</summary>
        <value>
          <see langword="string" /> 值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個屬性會接受以逗號分隔字串，包含名稱或序數資料行的值。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="YValuesPerPoint">
      <MemberSignature Language="C#" Value="public int YValuesPerPoint { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 YValuesPerPoint" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Series.YValuesPerPoint" />
      <MemberSignature Language="VB.NET" Value="Public Property YValuesPerPoint As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int YValuesPerPoint { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定允許 <see cref="T:System.Web.UI.DataVisualization.Charting.DataPoint" /> 中 <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> 物件可以擁有之 Y 值的數量上限。</summary>
        <value>
          <see langword="integer" /> 值，表示允許數列中資料點可以擁有之 Y 值的數量上限。 預設值為一 (1)。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果您將加入<xref:System.Web.UI.DataVisualization.Charting.DataPoint>物件有多個 Y 值，這個屬性會指定過多的 Y 值則予以忽略。  
  
 才能正確地顯示圖表的 Y 值的數目取決於選取的圖表類型。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="YValueType">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.ChartValueType YValueType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataVisualization.Charting.ChartValueType YValueType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Series.YValueType" />
      <MemberSignature Language="VB.NET" Value="Public Property YValueType As ChartValueType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::ChartValueType YValueType { System::Web::UI::DataVisualization::Charting::ChartValueType get(); void set(System::Web::UI::DataVisualization::Charting::ChartValueType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.DataVisualization.Charting.SeriesYValueTypeConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.ChartValueType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定數列所儲存之資料點的 Y 值資料型別。</summary>
        <value>
          <see cref="T:System.Web.UI.DataVisualization.Charting.ChartValueType" /> 列舉值，決定數列儲存之 Y 值資料的類型。 預設值是 <see cref="F:System.Web.UI.DataVisualization.Charting.ChartValueType.Auto" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.DataVisualization.Charting.Series.YValueType%2A>屬性會決定數列所儲存的資料類型。 這個屬性的值通常設定為<xref:System.Web.UI.DataVisualization.Charting.ChartValueType.Auto>或<xref:System.Web.UI.DataVisualization.Charting.ChartValueType.DateTime>。  
  
 `IntervalType`軸標籤、 刻度和格線類別中找到的屬性會決定的間隔類型。  
  
 這個屬性也可用來判斷要繫結 Y 值的資料類型。  
  
 雖然這很罕見，它是可能繪製日期運算式做為資料點的值。 如果您將此屬性設定為<xref:System.Web.UI.DataVisualization.Charting.ChartValueType.DateTime>，然後輸入做為 Y 值可以<xref:System.DateTime>值，而不是<xref:System.Double>。 日期和時間值會在內部儲存為.NET Framework<xref:System.Double>值。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>