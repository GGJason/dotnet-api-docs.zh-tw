<Type Name="ChartArea" FullName="System.Web.UI.DataVisualization.Charting.ChartArea">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="72cba466e5b103a06237b83d741380595c6e2da1" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36394457" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ChartArea : System.Web.UI.DataVisualization.Charting.ChartNamedElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ChartArea extends System.Web.UI.DataVisualization.Charting.ChartNamedElement" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.DataVisualization.Charting.ChartArea" />
  <TypeSignature Language="VB.NET" Value="Public Class ChartArea&#xA;Inherits ChartNamedElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class ChartArea : System::Web::UI::DataVisualization::Charting::ChartNamedElement" />
  <TypeSignature Language="F#" Value="type ChartArea = class&#xA;    inherit ChartNamedElement" />
  <AssemblyInfo>
    <AssemblyName>System.Web.DataVisualization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.DataVisualization.Charting.ChartNamedElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Axes")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>表示圖表影像中的圖表區域。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在任何給定的圖表中*內部繪圖區位置*是一個矩形區域，在 x 和 y 軸的行，其中資料點繪製。 *繪製位置*是包含內部繪圖區位置、 刻度標記和軸標籤的矩形區域。 *圖表區域*是包含繪圖區位置、 刻度標記、 軸標籤和軸標題，在圖表上的矩形區域。  
  
 圖表區域由<xref:System.Web.UI.DataVisualization.Charting.ChartArea>類別;<xref:System.Web.UI.DataVisualization.Charting.ChartArea>物件會儲存在<xref:System.Web.UI.DataVisualization.Charting.ChartAreaCollection>類別。  
  
 圖表區域中可繪製圖表數列的數目沒有限制。  
  
 A<xref:System.Web.UI.DataVisualization.Charting.ChartArea>物件：  
  
-   會使用一個不同的內部繪圖區。  
  
-   用來繪製一或多個圖表數列。  
  
-   有主要和次要 x 和 y 軸，除了圓形圖和環圈圖類型。  
  
 當您使用形狀圖圖表類型，包括圓形圖、 環圈圖、 漏斗圖、 極座標圖、 金字塔和雷達圖時，則內部繪製位置會定義圖表類型圖形的大小。 例如，當您增加值<xref:System.Web.UI.DataVisualization.Charting.ChartArea.InnerPlotPosition%2A>屬性在圓形圖上，您會增加派形的半徑。  
  
 對於所有其他圖表類型，每個圖表區域有兩組 X 軸和 y 軸，主要和次要。 若要存取與這些軸相關的屬性，請使用<xref:System.Web.UI.DataVisualization.Charting.ChartArea.AxisX%2A>， <xref:System.Web.UI.DataVisualization.Charting.ChartArea.AxisX2%2A>，<xref:System.Web.UI.DataVisualization.Charting.ChartArea.AxisY%2A>和<xref:System.Web.UI.DataVisualization.Charting.ChartArea.AxisY2%2A>屬性。 如果您要設定的屬性會影響在圖表上的所有軸，請使用<xref:System.Web.UI.DataVisualization.Charting.ChartArea.Axes%2A>屬性。  
  
 一個或多個數列是圖表區域相關聯。 數列有<xref:System.Web.UI.DataVisualization.Charting.Series.ChartArea%2A>判斷所屬的每個數列的圖表區域的屬性。 根據預設，數列會連接到預設的圖表區域。 若要停用一系列的顯示，請設定<xref:System.Web.UI.DataVisualization.Charting.Series.ChartArea%2A>為零長度字串，該數列的屬性。  
  
 如果另一個圖表區域加入到圖表時，可以將任何數列與新的圖表區域產生關聯。 在所有形狀圖圖表類型，以及橫條圖和堆疊的橫條圖類型，必須個別的圖表區域中繪製每個數列。 在所有其他圖表類型，可以結合多個數列相同圖表區域中。  
  
 3D 圖表會顯示在圖表區域的圖表區域為基礎。 您可以使用<xref:System.Web.UI.DataVisualization.Charting.ChartArea.Area3DStyle%2A>屬性設為啟用，並自訂您的圖表，以 3D。  
  
 最小和最大的圖表區域將不會自動重新計算如果您將加入新的資料，因此圖表不會自動變更軸的大小。  您可能需要重新計算這些值所使用的圖表區域<xref:System.Web.UI.DataVisualization.Charting.ChartArea.RecalculateAxesScale%2A>方法。  
  
 若要垂直對齊多個圖表區域，請設定<xref:System.Web.UI.DataVisualization.Charting.ChartArea.AlignmentOrientation%2A>屬性。 若要水平對齊多個圖表區域，您必須先將圖表區域使用<xref:System.Web.UI.DataVisualization.Charting.ChartArea.Position%2A>屬性，並將其設定<xref:System.Web.UI.DataVisualization.Charting.ChartArea.AlignmentOrientation%2A>水平的屬性。  
  
 若要抑制一系列的顯示方式，將<xref:System.Windows.Forms.DataVisualization.Charting.Series>為零長度字串，該數列的屬性。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Web.UI.DataVisualization.Charting.ChartArea" /> 類別的新執行個體。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ChartArea ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.ChartArea.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ChartArea();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.UI.DataVisualization.Charting.ChartArea" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用這個建構函式建立並初始化的新執行個體<xref:System.Web.UI.DataVisualization.Charting.ChartArea>類別。  
  
> [!NOTE]
>  強烈建議您使用其中一個`Add`或`Insert`方法<xref:System.Web.UI.DataVisualization.Charting.Chart.ChartAreas%2A>集合屬性，若要在執行階段加入圖表區域。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ChartArea (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.ChartArea.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ChartArea(System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.DataVisualization.Charting.ChartArea : string -&gt; System.Web.UI.DataVisualization.Charting.ChartArea" Usage="new System.Web.UI.DataVisualization.Charting.ChartArea name" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">新 <see cref="T:System.Web.UI.DataVisualization.Charting.ChartArea" /> 物件的名稱。</param>
        <summary>使用指定的圖表區域名稱，初始化 <see cref="T:System.Web.UI.DataVisualization.Charting.ChartArea" /> 類別的新執行個體。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AlignmentOrientation">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.AreaAlignmentOrientations AlignmentOrientation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataVisualization.Charting.AreaAlignmentOrientations AlignmentOrientation" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.ChartArea.AlignmentOrientation" />
      <MemberSignature Language="VB.NET" Value="Public Property AlignmentOrientation As AreaAlignmentOrientations" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::AreaAlignmentOrientations AlignmentOrientation { System::Web::UI::DataVisualization::Charting::AreaAlignmentOrientations get(); void set(System::Web::UI::DataVisualization::Charting::AreaAlignmentOrientations value); };" />
      <MemberSignature Language="F#" Value="member this.AlignmentOrientation : System.Web.UI.DataVisualization.Charting.AreaAlignmentOrientations with get, set" Usage="System.Web.UI.DataVisualization.Charting.ChartArea.AlignmentOrientation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.FlagsEnumUITypeEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.AreaAlignmentOrientations</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定圖表區域的對齊方向。</summary>
        <value>
          <see cref="T:System.Web.UI.DataVisualization.Charting.AreaAlignmentOrientations" /> 列舉值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 透過使用的<xref:System.Web.UI.DataVisualization.Charting.ChartArea.AlignWithChartArea%2A>，<xref:System.Web.UI.DataVisualization.Charting.ChartArea.AlignmentOrientation%2A>和<xref:System.Web.UI.DataVisualization.Charting.ChartArea.AlignmentStyle%2A>屬性，它是可以對齊或同步處理兩個或多個圖表區域水平、 垂直或兩者。  
  
 首先，設定<xref:System.Web.UI.DataVisualization.Charting.ChartArea.AlignWithChartArea%2A>屬性的名稱<xref:System.Web.UI.DataVisualization.Charting.ChartArea>物件。 此圖表區域再將對齊，根據<xref:System.Web.UI.DataVisualization.Charting.ChartArea.AlignmentStyle%2A>設定，可定義要使用的對齊方式，和<xref:System.Web.UI.DataVisualization.Charting.ChartArea.AlignmentOrientation%2A>設定，可定義應該用來設定對齊的圖表區域的項目。  
  
 如果<xref:System.Web.UI.DataVisualization.Charting.ChartArea.AlignWithChartArea%2A>屬性未設定，在圖表區域不會對齊，而不論<xref:System.Web.UI.DataVisualization.Charting.ChartArea.AlignmentStyle%2A>和<xref:System.Web.UI.DataVisualization.Charting.ChartArea.AlignmentOrientation%2A>設定。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AlignmentStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.AreaAlignmentStyles AlignmentStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataVisualization.Charting.AreaAlignmentStyles AlignmentStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.ChartArea.AlignmentStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property AlignmentStyle As AreaAlignmentStyles" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::AreaAlignmentStyles AlignmentStyle { System::Web::UI::DataVisualization::Charting::AreaAlignmentStyles get(); void set(System::Web::UI::DataVisualization::Charting::AreaAlignmentStyles value); };" />
      <MemberSignature Language="F#" Value="member this.AlignmentStyle : System.Web.UI.DataVisualization.Charting.AreaAlignmentStyles with get, set" Usage="System.Web.UI.DataVisualization.Charting.ChartArea.AlignmentStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.FlagsEnumUITypeEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.AreaAlignmentStyles</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定 <see cref="T:System.Web.UI.DataVisualization.Charting.ChartArea" /> 的對齊樣式。</summary>
        <value>
          <see cref="T:System.Web.UI.DataVisualization.Charting.AreaAlignmentStyles" /> 列舉值，可以表示單一個值，或是多個值 (定義要使用的對齊方式) 的位元 OR。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.DataVisualization.Charting.ChartArea.AlignmentStyle%2A>水平、 垂直對齊兩個或多個圖表區域屬性或兩者。 對齊類型是下列值之一或下面的值的位元 OR 組合。  
  
|成員名稱|描述|  
|-----------------|-----------------|  
|全部|圖表區域會使用所有的值來對齊。|  
|AxesView|使用指定的檢視對齊圖表區域<xref:System.Web.UI.DataVisualization.Charting.ChartArea>。|  
|無|圖表區域不會自動對齊。|  
|位置|與圖表區域對齊<xref:System.Web.UI.DataVisualization.Charting.ChartArea.Position%2A>指定圖表區域。|  
|InnerPlotPosition|與圖表區域對齊<xref:System.Web.UI.DataVisualization.Charting.ChartArea.InnerPlotPosition%2A>指定圖表區域。|  
  
 如果<xref:System.Web.UI.DataVisualization.Charting.ChartArea.AlignWithChartArea%2A>未設定值，<xref:System.Web.UI.DataVisualization.Charting.ChartArea.AlignmentStyle%2A>屬性會有任何作用。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AlignWithChartArea">
      <MemberSignature Language="C#" Value="public string AlignWithChartArea { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AlignWithChartArea" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.ChartArea.AlignWithChartArea" />
      <MemberSignature Language="VB.NET" Value="Public Property AlignWithChartArea As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AlignWithChartArea { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AlignWithChartArea : string with get, set" Usage="System.Web.UI.DataVisualization.Charting.ChartArea.AlignWithChartArea" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("NotSet")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.DataVisualization.Charting.LegendAreaNameConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定 <see cref="T:System.Web.UI.DataVisualization.Charting.ChartArea" /> 物件名稱，而此圖表區域應該對齊該物件。</summary>
        <value>表示 <see cref="T:System.Web.UI.DataVisualization.Charting.ChartArea" /> 物件名稱的 <see langword="string" /> 值，而此圖表區域應該對齊該物件。 預設為空字串。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 透過使用的<xref:System.Web.UI.DataVisualization.Charting.ChartArea.AlignWithChartArea%2A>，<xref:System.Web.UI.DataVisualization.Charting.ChartArea.AlignmentOrientation%2A>和<xref:System.Web.UI.DataVisualization.Charting.ChartArea.AlignmentStyle%2A>屬性，它是可以對齊或同步處理兩個或多個圖表區域水平、 垂直或兩者。  
  
 首先，設定<xref:System.Web.UI.DataVisualization.Charting.ChartArea.AlignWithChartArea%2A>屬性的名稱<xref:System.Web.UI.DataVisualization.Charting.ChartArea>物件。 此圖表區域再將對齊，根據<xref:System.Web.UI.DataVisualization.Charting.ChartArea.AlignmentStyle%2A>設定，可定義要使用的對齊方式，和<xref:System.Web.UI.DataVisualization.Charting.ChartArea.AlignmentOrientation%2A>設定，可定義應該用來設定對齊的圖表區域的項目。  
  
 如果<xref:System.Web.UI.DataVisualization.Charting.ChartArea.AlignWithChartArea%2A>屬性未設定，在圖表區域不會對齊，而不論<xref:System.Web.UI.DataVisualization.Charting.ChartArea.AlignmentStyle%2A>和<xref:System.Web.UI.DataVisualization.Charting.ChartArea.AlignmentOrientation%2A>設定。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Area3DStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.ChartArea3DStyle Area3DStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.DataVisualization.Charting.ChartArea3DStyle Area3DStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.ChartArea.Area3DStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property Area3DStyle As ChartArea3DStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::ChartArea3DStyle ^ Area3DStyle { System::Web::UI::DataVisualization::Charting::ChartArea3DStyle ^ get(); void set(System::Web::UI::DataVisualization::Charting::ChartArea3DStyle ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Area3DStyle : System.Web.UI.DataVisualization.Charting.ChartArea3DStyle with get, set" Usage="System.Web.UI.DataVisualization.Charting.ChartArea.Area3DStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.DataVisualization.Charting.NoNameExpandableObjectConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.ChartArea3DStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定 <see cref="T:System.Web.UI.DataVisualization.Charting.ChartArea3DStyle" /> 物件，用於實作圖表區域中所有數列的立體效果。</summary>
        <value>
          <see cref="T:System.Web.UI.DataVisualization.Charting.ChartArea3DStyle" /> 物件，實作所有繪製於圖表區域中數列的立體效果。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 若要啟用或停用 3D 圖表區域，請設定<xref:System.Web.UI.DataVisualization.Charting.ChartArea3DStyle.Enable3D%2A>屬性。  
  
 以 3D 繪製圖表時，軸上不支援刻度斷層。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Axes">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.Axis[] Axes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.DataVisualization.Charting.Axis[] Axes" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.ChartArea.Axes" />
      <MemberSignature Language="VB.NET" Value="Public Property Axes As Axis()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Web::UI::DataVisualization::Charting::Axis ^&gt; ^ Axes { cli::array &lt;System::Web::UI::DataVisualization::Charting::Axis ^&gt; ^ get(); void set(cli::array &lt;System::Web::UI::DataVisualization::Charting::Axis ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Axes : System.Web.UI.DataVisualization.Charting.Axis[] with get, set" Usage="System.Web.UI.DataVisualization.Charting.ChartArea.Axes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.AxesArrayEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.DataVisualization.Charting.AxesArrayConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.Axis[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定表示圖表區域中所有座標軸的陣列。</summary>
        <value>
          <see cref="T:System.Web.UI.DataVisualization.Charting.Axis" /> 物件的陣列，表示圖表區域使用的所有座標軸。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個屬性的主要用途是提供存取的 X，Y，X2，Y2 座標軸，在設計階段屬性。  
  
 在執行階段，圖表區域的軸應該存取使用個別的軸屬性，例如<xref:System.Web.UI.DataVisualization.Charting.ChartArea.AxisX%2A>， <xref:System.Web.UI.DataVisualization.Charting.ChartArea.AxisX2%2A>，依此類推。  
  
 如果您決定要在執行階段使用這個屬性 — 例如，在事件 — 您可以存取這個陣列中的項目，藉由指定<xref:System.Web.UI.DataVisualization.Charting.AxisName>列舉成員的識別碼。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AxisX">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.Axis AxisX { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.DataVisualization.Charting.Axis AxisX" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.ChartArea.AxisX" />
      <MemberSignature Language="VB.NET" Value="Public Property AxisX As Axis" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::Axis ^ AxisX { System::Web::UI::DataVisualization::Charting::Axis ^ get(); void set(System::Web::UI::DataVisualization::Charting::Axis ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AxisX : System.Web.UI.DataVisualization.Charting.Axis with get, set" Usage="System.Web.UI.DataVisualization.Charting.ChartArea.AxisX" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.DataVisualization.Charting.NoNameExpandableObjectConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.Axis</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定 <see cref="T:System.Web.UI.DataVisualization.Charting.Axis" /> 物件，表示主要 X 軸。</summary>
        <value>
          <see cref="T:System.Web.UI.DataVisualization.Charting.Axis" /> 物件，表示主要 X 軸。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以使用這個屬性來操作主要 x 軸，圖表區域中。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AxisX2">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.Axis AxisX2 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.DataVisualization.Charting.Axis AxisX2" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.ChartArea.AxisX2" />
      <MemberSignature Language="VB.NET" Value="Public Property AxisX2 As Axis" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::Axis ^ AxisX2 { System::Web::UI::DataVisualization::Charting::Axis ^ get(); void set(System::Web::UI::DataVisualization::Charting::Axis ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AxisX2 : System.Web.UI.DataVisualization.Charting.Axis with get, set" Usage="System.Web.UI.DataVisualization.Charting.ChartArea.AxisX2" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.DataVisualization.Charting.NoNameExpandableObjectConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.Axis</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定 <see cref="T:System.Web.UI.DataVisualization.Charting.Axis" /> 物件，表示次要 X 軸。</summary>
        <value>
          <see cref="T:System.Web.UI.DataVisualization.Charting.Axis" /> 物件，表示次要 X 軸。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以使用這個屬性來操作在圖表區域次要 x 軸。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AxisY">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.Axis AxisY { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.DataVisualization.Charting.Axis AxisY" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.ChartArea.AxisY" />
      <MemberSignature Language="VB.NET" Value="Public Property AxisY As Axis" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::Axis ^ AxisY { System::Web::UI::DataVisualization::Charting::Axis ^ get(); void set(System::Web::UI::DataVisualization::Charting::Axis ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AxisY : System.Web.UI.DataVisualization.Charting.Axis with get, set" Usage="System.Web.UI.DataVisualization.Charting.ChartArea.AxisY" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.DataVisualization.Charting.NoNameExpandableObjectConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.Axis</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定 <see cref="T:System.Web.UI.DataVisualization.Charting.Axis" /> 物件，表示主要 Y 軸。</summary>
        <value>
          <see cref="T:System.Web.UI.DataVisualization.Charting.Axis" /> 物件，表示主要 Y 軸。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以使用這個屬性來操作主要 y 軸，圖表區域中。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AxisY2">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.Axis AxisY2 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.DataVisualization.Charting.Axis AxisY2" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.ChartArea.AxisY2" />
      <MemberSignature Language="VB.NET" Value="Public Property AxisY2 As Axis" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::Axis ^ AxisY2 { System::Web::UI::DataVisualization::Charting::Axis ^ get(); void set(System::Web::UI::DataVisualization::Charting::Axis ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AxisY2 : System.Web.UI.DataVisualization.Charting.Axis with get, set" Usage="System.Web.UI.DataVisualization.Charting.ChartArea.AxisY2" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.DataVisualization.Charting.NoNameExpandableObjectConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.Axis</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定 <see cref="T:System.Web.UI.DataVisualization.Charting.Axis" /> 物件，表示次要 Y 軸。</summary>
        <value>
          <see cref="T:System.Web.UI.DataVisualization.Charting.Axis" /> 物件，表示次要 Y 軸。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以使用這個屬性來操作在圖表區域次要 y 軸。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color BackColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BackColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.ChartArea.BackColor" />
      <MemberSignature Language="VB.NET" Value="Public Property BackColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color BackColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.BackColor : System.Drawing.Color with get, set" Usage="System.Web.UI.DataVisualization.Charting.ChartArea.BackColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.ChartColorEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Drawing.ColorConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定 <see cref="T:System.Web.UI.DataVisualization.Charting.ChartArea" /> 物件的背景色彩。</summary>
        <value>
          <see cref="T:System.Drawing.Color" /> 值。 預設色彩為 <see cref="T:System.Drawing.Color.White" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以為任何有效的 ARGB （alpha、 紅、 綠、 藍色） 值設定這個屬性。  
  
 <xref:System.Web.UI.DataVisualization.Charting.ChartArea.BackColor%2A>值將會是如果您已指定背景漸層色彩使用的第一個色彩。  
  
 Alpha 值會控制色彩的不透明度。 如果您設定此色彩為"透明"— 也就是如果您使用 0 的 alpha 值-無色彩會指派給圖表區域的背景。 如此一來，背景會變成透明。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackGradientStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.GradientStyle BackGradientStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataVisualization.Charting.GradientStyle BackGradientStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.ChartArea.BackGradientStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property BackGradientStyle As GradientStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::GradientStyle BackGradientStyle { System::Web::UI::DataVisualization::Charting::GradientStyle get(); void set(System::Web::UI::DataVisualization::Charting::GradientStyle value); };" />
      <MemberSignature Language="F#" Value="member this.BackGradientStyle : System.Web.UI.DataVisualization.Charting.GradientStyle with get, set" Usage="System.Web.UI.DataVisualization.Charting.ChartArea.BackGradientStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.GradientEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.GradientStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定圖表區域背景漸層的方向，並決定是否使用漸層效果。</summary>
        <value>
          <see cref="T:System.Web.UI.DataVisualization.Charting.GradientStyle" /> 列舉型別。 預設值是 <see cref="F:System.Web.UI.DataVisualization.Charting.GradientStyle.None" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.DataVisualization.Charting.ChartArea.BackGradientStyle%2A>屬性來判斷是否在圖表區域會顯示漸層，並用來判斷所使用漸層的方向，如果有一個。  
  
 如需可用的模式的清單，請參閱<xref:System.Web.UI.DataVisualization.Charting.GradientStyle>列舉型別。  
  
 若要使用漸層色彩：  
  
-   設定主要色彩與圖表區域背景的<xref:System.Web.UI.DataVisualization.Charting.ChartArea.BackColor%2A>屬性。  
  
-   設定與圖表區域背景次要色彩<xref:System.Web.UI.DataVisualization.Charting.ChartArea.BackSecondaryColor%2A>屬性。  
  
-   設定此<xref:System.Web.UI.DataVisualization.Charting.ChartArea.BackGradientStyle%2A>屬性所需的漸層樣式。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackHatchStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.ChartHatchStyle BackHatchStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataVisualization.Charting.ChartHatchStyle BackHatchStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.ChartArea.BackHatchStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property BackHatchStyle As ChartHatchStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::ChartHatchStyle BackHatchStyle { System::Web::UI::DataVisualization::Charting::ChartHatchStyle get(); void set(System::Web::UI::DataVisualization::Charting::ChartHatchStyle value); };" />
      <MemberSignature Language="F#" Value="member this.BackHatchStyle : System.Web.UI.DataVisualization.Charting.ChartHatchStyle with get, set" Usage="System.Web.UI.DataVisualization.Charting.ChartArea.BackHatchStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.HatchStyleEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.ChartHatchStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定 <see cref="T:System.Web.UI.DataVisualization.Charting.ChartArea" /> 物件的影線樣式。</summary>
        <value>
          <see cref="T:System.Web.UI.DataVisualization.Charting.ChartHatchStyle" /> 列舉型別。 預設值是 <see cref="F:System.Web.UI.DataVisualization.Charting.ChartHatchStyle.None" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.DataVisualization.Charting.ChartHatchStyle>列舉值會指定使用類型的筆刷的影線樣式<xref:System.Drawing.Drawing2D.HatchBrush>。 規劃圖樣包含透明的背景色彩和背景上繪製的直線。  
  
 如需可用影線樣式的清單，請參閱<xref:System.Web.UI.DataVisualization.Charting.ChartHatchStyle>列舉型別。  
  
> [!NOTE]
>  影線線條的色彩由<xref:System.Web.UI.DataVisualization.Charting.ChartArea.BackSecondaryColor%2A>屬性。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackImage">
      <MemberSignature Language="C#" Value="public string BackImage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BackImage" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.ChartArea.BackImage" />
      <MemberSignature Language="VB.NET" Value="Public Property BackImage As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ BackImage { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BackImage : string with get, set" Usage="System.Web.UI.DataVisualization.Charting.ChartArea.BackImage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.ImageValueEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定 <see cref="T:System.Web.UI.DataVisualization.Charting.ChartArea" /> 物件的背景影像。</summary>
        <value>
          <see langword="string" /> 值，表示影像檔案的 URL。 預設為空字串。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此屬性定義的背景影像路徑<xref:System.Web.UI.DataVisualization.Charting.ChartArea>，而且可以是絕對或相對的 URL。  
  
 若要設定影像位置，使用<xref:System.Web.UI.DataVisualization.Charting.ChartArea.BackImageAlignment%2A>和<xref:System.Web.UI.DataVisualization.Charting.ChartArea.BackImageWrapMode%2A>屬性。  
  
 您也可以指定其中一個設定為"透明 」 映像所顯示的色彩<xref:System.Web.UI.DataVisualization.Charting.ChartArea.BackImageTransparentColor%2A>屬性。  
  
 影像是.NET Framework 中，包括圖示所支援的任何有效圖形檔。  
  
 背景影像的優先順序高於其他背景屬性，例如漸層色彩。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackImageAlignment">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.ChartImageAlignmentStyle BackImageAlignment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataVisualization.Charting.ChartImageAlignmentStyle BackImageAlignment" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.ChartArea.BackImageAlignment" />
      <MemberSignature Language="VB.NET" Value="Public Property BackImageAlignment As ChartImageAlignmentStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::ChartImageAlignmentStyle BackImageAlignment { System::Web::UI::DataVisualization::Charting::ChartImageAlignmentStyle get(); void set(System::Web::UI::DataVisualization::Charting::ChartImageAlignmentStyle value); };" />
      <MemberSignature Language="F#" Value="member this.BackImageAlignment : System.Web.UI.DataVisualization.Charting.ChartImageAlignmentStyle with get, set" Usage="System.Web.UI.DataVisualization.Charting.ChartArea.BackImageAlignment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.ChartImageAlignmentStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定 <see cref="T:System.Web.UI.DataVisualization.Charting.ChartArea" /> 背景影像的對齊方式。</summary>
        <value>
          <see cref="T:System.Web.UI.DataVisualization.Charting.ChartImageAlignmentStyle" /> 列舉值。 預設值是 <see cref="F:System.Web.UI.DataVisualization.Charting.ChartImageAlignmentStyle.TopLeft" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個屬性會決定圖表區域的背景影像的對齊方式，而且套用的時，才會<xref:System.Web.UI.DataVisualization.Charting.ChartImageWrapMode>屬性設定為<xref:System.Web.UI.DataVisualization.Charting.ChartImageWrapMode.Unscaled>。  
  
 如需可用的對齊方式的詳細資訊，請參閱<xref:System.Web.UI.DataVisualization.Charting.ChartImageAlignmentStyle>列舉主題。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackImageTransparentColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color BackImageTransparentColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BackImageTransparentColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.ChartArea.BackImageTransparentColor" />
      <MemberSignature Language="VB.NET" Value="Public Property BackImageTransparentColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color BackImageTransparentColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.BackImageTransparentColor : System.Drawing.Color with get, set" Usage="System.Web.UI.DataVisualization.Charting.ChartArea.BackImageTransparentColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.ChartColorEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Drawing.ColorConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定會以透明繪製之 <see cref="T:System.Web.UI.DataVisualization.Charting.ChartArea" /> 物件背景影像的色彩。</summary>
        <value>
          <see cref="T:System.Drawing.Color" /> 值。 預設值是 <see cref="F:System.Drawing.Color.Empty" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BackImageWrapMode">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.ChartImageWrapMode BackImageWrapMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataVisualization.Charting.ChartImageWrapMode BackImageWrapMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.ChartArea.BackImageWrapMode" />
      <MemberSignature Language="VB.NET" Value="Public Property BackImageWrapMode As ChartImageWrapMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::ChartImageWrapMode BackImageWrapMode { System::Web::UI::DataVisualization::Charting::ChartImageWrapMode get(); void set(System::Web::UI::DataVisualization::Charting::ChartImageWrapMode value); };" />
      <MemberSignature Language="F#" Value="member this.BackImageWrapMode : System.Web.UI.DataVisualization.Charting.ChartImageWrapMode with get, set" Usage="System.Web.UI.DataVisualization.Charting.ChartArea.BackImageWrapMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.ChartImageWrapMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定 <see cref="T:System.Web.UI.DataVisualization.Charting.ChartArea" /> 物件背景影像的繪製模式。</summary>
        <value>
          <see cref="T:System.Web.UI.DataVisualization.Charting.ChartImageWrapMode" /> 列舉值。 預設值是 <see cref="F:System.Web.UI.DataVisualization.Charting.ChartImageWrapMode.Tile" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.DataVisualization.Charting.ChartArea.BackImageWrapMode%2A>屬性會決定如何顯示影像; 影像可以並排顯示，縮放等等。  
  
 如果縮放的影像，將會自動縮放以符合圖表區域的範圍內。 如果影像會並排顯示，它會重複繪製，從 圖表區域的左上角開始。  
  
 如需可用文繞圖模式的詳細資訊，請參閱<xref:System.Web.UI.DataVisualization.Charting.ChartImageWrapMode>列舉主題。  
  
 如果<xref:System.Web.UI.DataVisualization.Charting.ChartArea.BackImageWrapMode%2A>屬性設定為<xref:System.Web.UI.DataVisualization.Charting.ChartImageWrapMode.Unscaled>，其中繪製影像的位置由<xref:System.Web.UI.DataVisualization.Charting.ChartArea.BackImageAlignment%2A>屬性設定。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackSecondaryColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color BackSecondaryColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BackSecondaryColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.ChartArea.BackSecondaryColor" />
      <MemberSignature Language="VB.NET" Value="Public Property BackSecondaryColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color BackSecondaryColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.BackSecondaryColor : System.Drawing.Color with get, set" Usage="System.Web.UI.DataVisualization.Charting.ChartArea.BackSecondaryColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.ChartColorEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Drawing.ColorConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定 <see cref="T:System.Web.UI.DataVisualization.Charting.ChartArea" /> 物件背景的次要色彩。</summary>
        <value>
          <see cref="T:System.Drawing.Color" /> 值。 預設值是 <see cref="F:System.Drawing.Color.Empty" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這<xref:System.Web.UI.DataVisualization.Charting.ChartArea.BackSecondaryColor%2A>屬性是其中幾個相關的屬性，判斷的次要背景色彩<xref:System.Web.UI.DataVisualization.Charting.Chart>物件，並套用漸層色彩時，才能使用。  
  
 您可以設定<xref:System.Web.UI.DataVisualization.Charting.ChartArea.BackSecondaryColor%2A>任何有效的 ARGB （alpha、 紅、 綠、 藍色） 值。  
  
 如果使用影線，<xref:System.Web.UI.DataVisualization.Charting.ChartArea.BackSecondaryColor%2A>屬性會決定圖表區域的影線線條的色彩。  
  
 若要使用的圖表區域背景的漸層色彩：  
  
-   設定主要色彩與<xref:System.Web.UI.DataVisualization.Charting.ChartArea.BackColor%2A>屬性。  
  
-   設定與次要色彩<xref:System.Web.UI.DataVisualization.Charting.ChartArea.BackSecondaryColor%2A>屬性。  
  
-   設定<xref:System.Web.UI.DataVisualization.Charting.ChartArea.BackGradientStyle%2A>屬性所需的漸層樣式。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BorderColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color BorderColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BorderColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.ChartArea.BorderColor" />
      <MemberSignature Language="VB.NET" Value="Public Property BorderColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color BorderColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.BorderColor : System.Drawing.Color with get, set" Usage="System.Web.UI.DataVisualization.Charting.ChartArea.BorderColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "Black")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.ChartColorEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Drawing.ColorConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定 <see cref="T:System.Web.UI.DataVisualization.Charting.ChartArea" /> 物件的框線色彩。</summary>
        <value>
          <see cref="T:System.Drawing.Color" /> 值。 預設色彩為 <see cref="F:System.Drawing.Color.Empty" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以設定<xref:System.Web.UI.DataVisualization.Charting.ChartArea.BorderColor%2A>任何有效的 ARGB （alpha、 紅、 綠、 藍色） 值的屬性。  
  
> [!NOTE]
>  圓形圖和環圈圖的此屬性決定星形和水平線條的色彩資料標籤繪製圓形圖或環圈圖之外，也就是如果`LabelStyle`自訂屬性設定為 「 外部 」。  
  
 這個屬性也會決定為 3D 圖表的標記線條如果`ShowMarkerLines`自訂屬性設定為`true`。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BorderDashStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.ChartDashStyle BorderDashStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataVisualization.Charting.ChartDashStyle BorderDashStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.ChartArea.BorderDashStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property BorderDashStyle As ChartDashStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::ChartDashStyle BorderDashStyle { System::Web::UI::DataVisualization::Charting::ChartDashStyle get(); void set(System::Web::UI::DataVisualization::Charting::ChartDashStyle value); };" />
      <MemberSignature Language="F#" Value="member this.BorderDashStyle : System.Web.UI.DataVisualization.Charting.ChartDashStyle with get, set" Usage="System.Web.UI.DataVisualization.Charting.ChartArea.BorderDashStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.ChartDashStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定 <see cref="T:System.Web.UI.DataVisualization.Charting.ChartArea" /> 物件的框線樣式。</summary>
        <value>
          <see cref="T:System.Web.UI.DataVisualization.Charting.ChartDashStyle" /> 列舉值，決定圖表區域的框線樣式。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.DataVisualization.Charting.ChartArea.BorderDashStyle%2A>屬性會決定要用於框線的線條樣式。 可以是實線、 虛線，等等。  
  
 其他的框線樣式，請參閱<xref:System.Web.UI.DataVisualization.Charting.ChartDashStyle>列舉主題。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BorderWidth">
      <MemberSignature Language="C#" Value="public int BorderWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BorderWidth" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.ChartArea.BorderWidth" />
      <MemberSignature Language="VB.NET" Value="Public Property BorderWidth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int BorderWidth { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.BorderWidth : int with get, set" Usage="System.Web.UI.DataVisualization.Charting.ChartArea.BorderWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定 <see cref="T:System.Web.UI.DataVisualization.Charting.ChartArea" /> 物件的框線寬度。</summary>
        <value>
          <see langword="integer" /> 值，決定圖表區域的框線寬度 (以像素為單位)。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 請注意，<xref:System.Web.UI.DataVisualization.Charting.ChartArea.BorderWidth%2A>屬性也可以設定為折線圖，顯示為線條樣式，依此類推的自訂圖例項目線條的寬度。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.ChartArea.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="chartArea.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <see langword="true" /> 表示釋放 Unmanaged 和 Managed 資源，<see langword="false" /> 表示只釋放 Unmanaged 資源。</param>
        <summary>釋放 <see cref="T:System.Web.UI.DataVisualization.Charting.ChartArea" /> 類別所使用的 Unmanaged 資源，並選擇性地釋放 Managed 資源。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSeriesDepth">
      <MemberSignature Language="C#" Value="public float GetSeriesDepth (System.Web.UI.DataVisualization.Charting.Series series);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float32 GetSeriesDepth(class System.Web.UI.DataVisualization.Charting.Series series) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.ChartArea.GetSeriesDepth(System.Web.UI.DataVisualization.Charting.Series)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; float GetSeriesDepth(System::Web::UI::DataVisualization::Charting::Series ^ series);" />
      <MemberSignature Language="F#" Value="member this.GetSeriesDepth : System.Web.UI.DataVisualization.Charting.Series -&gt; single" Usage="chartArea.GetSeriesDepth series" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="series" Type="System.Web.UI.DataVisualization.Charting.Series" />
      </Parameters>
      <Docs>
        <param name="series">要為其擷取深度的 <see cref="T:System.Web.UI.DataVisualization.Charting.Series" />。</param>
        <summary>傳回圖表區域中 <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> 的深度。</summary>
        <returns>
          <see langword="float" /> 值，表示指定之 <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> 的寬度，該值會以圖表區域深度的百分比表示。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 呼叫這個方法，取得指定之數列的深度。 傳回的值會以圖表區域的深度，也就是相同的度量單位的百分比表示用於<xref:System.Web.UI.DataVisualization.Charting.Point3D.Z%2A>屬性。  
  
 所有數列都有的深度，不論其圖表類型。 比方說，即使點和泡泡圖數列都有深度，即使整個深度不用來繪製的點或泡泡。  
  
 一系列的深度可以用來判斷用於自訂繪圖常式點的 Z 值。  
  
> [!NOTE]
>  用於自訂的 3D 繪製任何點必須從相對 3D 座標轉換為 2D 相對座標表示，使用<xref:System.Web.UI.DataVisualization.Charting.ChartArea.TransformPoints%2A>方法。  
  
 若要從軸中取得相對 X 和 Y 值，請使用<xref:System.Web.UI.DataVisualization.Charting.Axis.ValueToPosition%2A>X 和 Y 軸的方法。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSeriesZPosition">
      <MemberSignature Language="C#" Value="public float GetSeriesZPosition (System.Web.UI.DataVisualization.Charting.Series series);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float32 GetSeriesZPosition(class System.Web.UI.DataVisualization.Charting.Series series) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.ChartArea.GetSeriesZPosition(System.Web.UI.DataVisualization.Charting.Series)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; float GetSeriesZPosition(System::Web::UI::DataVisualization::Charting::Series ^ series);" />
      <MemberSignature Language="F#" Value="member this.GetSeriesZPosition : System.Web.UI.DataVisualization.Charting.Series -&gt; single" Usage="chartArea.GetSeriesZPosition series" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="series" Type="System.Web.UI.DataVisualization.Charting.Series" />
      </Parameters>
      <Docs>
        <param name="series">要為其擷取 Z 位置的 <see cref="T:System.Web.UI.DataVisualization.Charting.Series" />。</param>
        <summary>傳回數列的 Z 位置，這對自訂繪圖而言相當實用。</summary>
        <returns>
          <see langword="float" /> 值，表示特定數列的 Z 位置，該值會測量為圖表區域深度的百分比。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 呼叫這個方法來取得一系列的 Z 位置。 Z 位置起至中央資料數列時，圖表區域的背景牆，並以圖表區域深度的百分比表示。 例如，沿著 z 軸一半繪製一系列具有 Z 位置為 50。  
  
 自訂繪圖常式通常用於一系列的 Z 位置。  
  
> [!NOTE]
>  用於自訂的 3D 繪製任何點必須從相對 3D 座標轉換為 2D 相對座標表示，使用<xref:System.Web.UI.DataVisualization.Charting.ChartArea.TransformPoints%2A>方法。  
  
 若要從軸中取得相對 X 和 Y 值，請使用<xref:System.Web.UI.DataVisualization.Charting.Axis.ValueToPosition%2A>X 和 Y 軸的方法。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InnerPlotPosition">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.ElementPosition InnerPlotPosition { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.DataVisualization.Charting.ElementPosition InnerPlotPosition" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.ChartArea.InnerPlotPosition" />
      <MemberSignature Language="VB.NET" Value="Public Property InnerPlotPosition As ElementPosition" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::ElementPosition ^ InnerPlotPosition { System::Web::UI::DataVisualization::Charting::ElementPosition ^ get(); void set(System::Web::UI::DataVisualization::Charting::ElementPosition ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InnerPlotPosition : System.Web.UI.DataVisualization.Charting.ElementPosition with get, set" Usage="System.Web.UI.DataVisualization.Charting.ChartArea.InnerPlotPosition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.DataVisualization.Charting.ElementPositionConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.ElementPosition</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定 <see cref="T:System.Web.UI.DataVisualization.Charting.ElementPosition" /> 物件，定義圖表區域物件的內層繪圖位置。</summary>
        <value>
          <see cref="T:System.Web.UI.DataVisualization.Charting.ElementPosition" /> 物件，定義 <see cref="T:System.Web.UI.DataVisualization.Charting.ChartArea" /> 物件的內層繪圖位置。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.DataVisualization.Charting.ChartArea.InnerPlotPosition%2A>屬性會定義用來繪製資料的圖表區域項目中的矩形，則它會排除刻度或軸標籤等等。  
  
 用於這個屬性 (0，0 到 100100) 座標與相關<xref:System.Web.UI.DataVisualization.Charting.ChartArea>物件，而非整個<xref:System.Web.UI.DataVisualization.Charting.Chart>。  
  
 <xref:System.Web.UI.DataVisualization.Charting.ChartArea.InnerPlotPosition%2A>屬性可以用來將多個圖表區域對齊。 不過，如果一個圖表區域具有刻度和軸標籤和另一個則否，不能對齊其座標軸線。  
  
> [!IMPORTANT]
>  這個屬性也可用來變更圖表，例如圓形圖或環圈圖的大小，而不會變更產生的圖表影像的大小。  
  
 若要變更位置的整個<xref:System.Web.UI.DataVisualization.Charting.ChartArea>物件都會使用<xref:System.Web.UI.DataVisualization.Charting.ChartArea.Position%2A>屬性改為。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSameFontSizeForAllAxes">
      <MemberSignature Language="C#" Value="public bool IsSameFontSizeForAllAxes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSameFontSizeForAllAxes" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.ChartArea.IsSameFontSizeForAllAxes" />
      <MemberSignature Language="VB.NET" Value="Public Property IsSameFontSizeForAllAxes As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSameFontSizeForAllAxes { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsSameFontSizeForAllAxes : bool with get, set" Usage="System.Web.UI.DataVisualization.Charting.ChartArea.IsSameFontSizeForAllAxes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定旗標，決定相關圖表區域座標軸的標籤大小是否一致。</summary>
        <value>如果其 <see cref="P:System.Web.UI.DataVisualization.Charting.Axis.IsLabelAutoFit" /> 屬性設為 <see langword="true" /> 的所有座標軸顯示使用相同大小字型的標籤，則為 <see langword="true" />，否則為 <see langword="false." />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 由自動計算字型大小<xref:System.Web.UI.DataVisualization.Charting.Chart>控制項，以符合所使用的最大大小。  
  
 這個屬性適用於所有圖表區域軸具有其<xref:System.Web.UI.DataVisualization.Charting.Axis.IsLabelAutoFit%2A>屬性設定為`true`。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public override string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.ChartArea.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Web.UI.DataVisualization.Charting.ChartArea.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定 <see cref="T:System.Web.UI.DataVisualization.Charting.ChartArea" /> 物件的唯一名稱。</summary>
        <value>
          <see langword="string" /> 值，表示 <see langword="ChartArea" /> 物件的名稱。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 名稱<xref:System.Web.UI.DataVisualization.Charting.ChartArea>物件必須是唯一的否則會擲回例外狀況。  
  
 這個屬性可用來當做索引子時擷取<xref:System.Web.UI.DataVisualization.Charting.ChartArea>物件從<xref:System.Web.UI.DataVisualization.Charting.ChartAreaCollection>物件。  
  
 如果您將此屬性設為零長度字串。 將會擲回例外狀況。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Position">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.ElementPosition Position { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.DataVisualization.Charting.ElementPosition Position" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.ChartArea.Position" />
      <MemberSignature Language="VB.NET" Value="Public Property Position As ElementPosition" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::ElementPosition ^ Position { System::Web::UI::DataVisualization::Charting::ElementPosition ^ get(); void set(System::Web::UI::DataVisualization::Charting::ElementPosition ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Position : System.Web.UI.DataVisualization.Charting.ElementPosition with get, set" Usage="System.Web.UI.DataVisualization.Charting.ChartArea.Position" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.DataVisualization.Charting.ElementPositionConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.ElementPosition</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定 <see cref="T:System.Web.UI.DataVisualization.Charting.ElementPosition" /> 物件，定義 <see cref="T:System.Web.UI.DataVisualization.Charting.ChartArea" /> 中 <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" /> 物件的位置。</summary>
        <value>
          <see cref="T:System.Web.UI.DataVisualization.Charting.ElementPosition" /> 物件，定義圖表影像中圖表區域物件的位置。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此屬性定義的位置<xref:System.Web.UI.DataVisualization.Charting.ChartArea>物件內<xref:System.Web.UI.DataVisualization.Charting.Chart>，並包含刻度標記、 軸標籤和其他等等。  
  
 用於這個屬性 (0，0 到 100100) 座標與整個圖表影像。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RecalculateAxesScale">
      <MemberSignature Language="C#" Value="public void RecalculateAxesScale ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RecalculateAxesScale() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.ChartArea.RecalculateAxesScale" />
      <MemberSignature Language="VB.NET" Value="Public Sub RecalculateAxesScale ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RecalculateAxesScale();" />
      <MemberSignature Language="F#" Value="member this.RecalculateAxesScale : unit -&gt; unit" Usage="chartArea.RecalculateAxesScale " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>在對 <see cref="E:System.Web.UI.DataVisualization.Charting.Chart.Customize" /> 事件中的圖表進行變更後，重新計算圖表區域的屬性。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果您使用<xref:System.Web.UI.DataVisualization.Charting.Chart.Customize>事件進行變更，則有時需要重新計算圖表區域屬性，以便正確地轉譯圖表。 例如，如果軸範圍已變更，則必須重新計算該座標軸的標籤。  
  
 呼叫這個方法，在使用後<xref:System.Web.UI.DataVisualization.Charting.Chart.Customize>於圖表區域的事件，進行任何變更。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShadowColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color ShadowColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color ShadowColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.ChartArea.ShadowColor" />
      <MemberSignature Language="VB.NET" Value="Public Property ShadowColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color ShadowColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.ShadowColor : System.Drawing.Color with get, set" Usage="System.Web.UI.DataVisualization.Charting.ChartArea.ShadowColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "128,0,0,0")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.ChartColorEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Drawing.ColorConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定 <see cref="T:System.Web.UI.DataVisualization.Charting.ChartArea" /> 物件的陰影色彩。</summary>
        <value>
          <see cref="T:System.Drawing.Color" /> 值。 預設色彩為 <see cref="P:System.Drawing.Color.Black" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個屬性可以設定任何有效的 ARGB （alpha、 紅、 綠、 藍色） 值。  
  
 Alpha 值可用來達到 「 實際 」 遮蔽的效果。「 128,0,0,0"陰影的色彩值再試一次。  
  
 若要實作陰影，設定<xref:System.Web.UI.DataVisualization.Charting.ChartArea.ShadowOffset%2A>屬性為零 (0) 以外的值。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShadowOffset">
      <MemberSignature Language="C#" Value="public int ShadowOffset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ShadowOffset" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.ChartArea.ShadowOffset" />
      <MemberSignature Language="VB.NET" Value="Public Property ShadowOffset As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ShadowOffset { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ShadowOffset : int with get, set" Usage="System.Web.UI.DataVisualization.Charting.ChartArea.ShadowOffset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定 <see cref="T:System.Web.UI.DataVisualization.Charting.ChartArea" /> 物件的陰影位移 (以像素為單位)。</summary>
        <value>
          <see langword="integer" />，表示圖表區域的陰影位移 (以像素為單位)。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 若要實作遮蔽，請使用零 (0) 以外的值。 正值會導致往下及往右移位的陰影。 負值會導致向上和向左移位的陰影。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TransformPoints">
      <MemberSignature Language="C#" Value="public void TransformPoints (System.Web.UI.DataVisualization.Charting.Point3D[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TransformPoints(class System.Web.UI.DataVisualization.Charting.Point3D[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.ChartArea.TransformPoints(System.Web.UI.DataVisualization.Charting.Point3D[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub TransformPoints (points As Point3D())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TransformPoints(cli::array &lt;System::Web::UI::DataVisualization::Charting::Point3D ^&gt; ^ points);" />
      <MemberSignature Language="F#" Value="member this.TransformPoints : System.Web.UI.DataVisualization.Charting.Point3D[] -&gt; unit" Usage="chartArea.TransformPoints points" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Web.UI.DataVisualization.Charting.Point3D[]" />
      </Parameters>
      <Docs>
        <param name="points">立體資料點的陣列。</param>
        <summary>將立體轉換套用到立體資料點的陣列，必須先完成這個步驟，才能夠呼叫 GDI+ 繪製方法。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visible">
      <MemberSignature Language="C#" Value="public virtual bool Visible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Visible" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.ChartArea.Visible" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Visible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Visible { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Visible : bool with get, set" Usage="System.Web.UI.DataVisualization.Charting.ChartArea.Visible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ParenthesizePropertyName(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，指出圖表區是否可見。</summary>
        <value>如果會顯示圖表區域，則為 <see langword="true" />，否則為 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當這個旗標設為`false`，也會隱藏圖表區域相關聯的所有數列、 圖例、 標題和註解物件。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>