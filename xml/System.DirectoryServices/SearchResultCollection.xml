<Type Name="SearchResultCollection" FullName="System.DirectoryServices.SearchResultCollection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1c015ee9bb7a835aa48ec5e907bafac4c4c67588" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30409932" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SearchResultCollection : MarshalByRefObject, IDisposable, System.Collections.ICollection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SearchResultCollection extends System.MarshalByRefObject implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.DirectoryServices.SearchResultCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class SearchResultCollection&#xA;Inherits MarshalByRefObject&#xA;Implements ICollection, IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class SearchResultCollection : MarshalByRefObject, IDisposable, System::Collections::ICollection" />
  <AssemblyInfo>
    <AssemblyName>System.DirectoryServices</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="b5247-101">
        <see cref="T:System.DirectoryServices.SearchResultCollection" /> 類別包含 <see cref="T:System.DirectoryServices.DirectorySearcher" /> 查詢期間，Active Directory 階層所傳回的 <see cref="T:System.DirectoryServices.SearchResult" /> 執行個體。</span>
      <span class="sxs-lookup">
        <span data-stu-id="b5247-101">The <see cref="T:System.DirectoryServices.SearchResultCollection" /> class contains the <see cref="T:System.DirectoryServices.SearchResult" /> instances that the Active Directory hierarchy returned during a <see cref="T:System.DirectoryServices.DirectorySearcher" /> query.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5247-102">因為實作限制<xref:System.DirectoryServices.SearchResultCollection>類別無法釋放其所有 unmanaged 資源時回收。</span><span class="sxs-lookup"><span data-stu-id="b5247-102">Due to implementation restrictions, the <xref:System.DirectoryServices.SearchResultCollection> class cannot release all of its unmanaged resources when it is garbage collected.</span></span> <span data-ttu-id="b5247-103">若要避免記憶體流失，您必須呼叫<xref:System.DirectoryServices.SearchResultCollection.Dispose%2A>方法時<xref:System.DirectoryServices.SearchResultCollection>不再需要物件。</span><span class="sxs-lookup"><span data-stu-id="b5247-103">To prevent a memory leak, you must call the <xref:System.DirectoryServices.SearchResultCollection.Dispose%2A> method when the <xref:System.DirectoryServices.SearchResultCollection> object is no longer needed.</span></span>  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.DirectoryServices.DirectoryServicesPermission">
      <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />
    </permission>
  </Docs>
  <Members>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.DirectoryServices.SearchResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.DirectoryServices.SearchResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.SearchResultCollection.Contains(System.DirectoryServices.SearchResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (result As SearchResult) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::DirectoryServices::SearchResult ^ result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.DirectoryServices.SearchResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="b5247-104">所要尋找的 <see cref="T:System.DirectoryServices.SearchResult" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5247-104">The <see cref="T:System.DirectoryServices.SearchResult" /> object to find.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b5247-105">決定指定的 <see cref="T:System.DirectoryServices.SearchResult" /> 物件是否在這個集合中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5247-105">Determines if a specified <see cref="T:System.DirectoryServices.SearchResult" /> object is in this collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b5247-106">如果指定的屬性隸屬於這個集合，則為 <see langword="true" />；否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5247-106">
              <see langword="true" /> if the specified property belongs to this collection; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.DirectoryServices.SearchResult[] results, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.DirectoryServices.SearchResult[] results, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.SearchResultCollection.CopyTo(System.DirectoryServices.SearchResult[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (results As SearchResult(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;System::DirectoryServices::SearchResult ^&gt; ^ results, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="results" Type="System.DirectoryServices.SearchResult[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="results">
          <span data-ttu-id="b5247-107">接收此集合項目的 <see cref="T:System.DirectoryServices.SearchResult" /> 物件陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5247-107">The array of <see cref="T:System.DirectoryServices.SearchResult" /> objects that receives the elements of this collection.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="b5247-108">
            <c>result</c> 中以零起始的索引，這個方法會從此處開始複製這個集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5247-108">The zero-based index in <c>results</c> where this method starts copying this collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b5247-109">從目標陣列中的指定索引開始，將這個集合中的所有 <see cref="T:System.DirectoryServices.SearchResult" /> 物件複製到特定陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5247-109">Copies all <see cref="T:System.DirectoryServices.SearchResult" /> objects in this collection to the specific array, starting at the specified index in the target array.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.SearchResultCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b5247-110">取得這個集合中的 <see cref="T:System.DirectoryServices.SearchResult" /> 物件數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5247-110">Gets the number of <see cref="T:System.DirectoryServices.SearchResult" /> objects in this collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b5247-111">這個集合中的 <see cref="T:System.DirectoryServices.SearchResult" /> 物件數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5247-111">The number of <see cref="T:System.DirectoryServices.SearchResult" /> objects in this collection.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b5247-112">釋放 <see cref="T:System.DirectoryServices.SearchResultCollection" /> 物件所使用的全部資源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5247-112">Releases all resources that are used by the <see cref="T:System.DirectoryServices.SearchResultCollection" /> object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.SearchResultCollection.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b5247-113">釋放 <see cref="T:System.DirectoryServices.SearchResultCollection" /> 物件所使用的全部資源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5247-113">Releases all resources that are used by the <see cref="T:System.DirectoryServices.SearchResultCollection" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5247-114"><xref:System.DirectoryServices.SearchResultCollection.Dispose%2A>方法，它可讓所使用的資源<xref:System.DirectoryServices.SearchResultCollection>都重新配置用於其他用途。</span><span class="sxs-lookup"><span data-stu-id="b5247-114">The <xref:System.DirectoryServices.SearchResultCollection.Dispose%2A> method, it allows the resources that are used by the <xref:System.DirectoryServices.SearchResultCollection> to be reallocated for other purposes.</span></span> <span data-ttu-id="b5247-115">如需有關<xref:System.DirectoryServices.SearchResultCollection.Dispose%2A>，請參閱[清除 Unmanaged 資源上](~/docs/standard/garbage-collection/unmanaged.md)。</span><span class="sxs-lookup"><span data-stu-id="b5247-115">For more information about <xref:System.DirectoryServices.SearchResultCollection.Dispose%2A>, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</span></span>  
  
 <span data-ttu-id="b5247-116">記憶體回收行程不會釋放記憶體<xref:System.DirectoryServices.SearchResultCollection>物件。</span><span class="sxs-lookup"><span data-stu-id="b5247-116">The garbage collector does not release memory for a <xref:System.DirectoryServices.SearchResultCollection> object.</span></span> <span data-ttu-id="b5247-117">因此，應用程式必須呼叫<xref:System.DirectoryServices.SearchResultCollection.Dispose%2A>明確地防止記憶體流失的方法。</span><span class="sxs-lookup"><span data-stu-id="b5247-117">Therefore, an application must call the <xref:System.DirectoryServices.SearchResultCollection.Dispose%2A> method explicitly to prevent a memory leak.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.SearchResultCollection.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="b5247-118">
            <see langword="true" /> 表示釋放 Managed 和 Unmanaged 資源，<see langword="false" /> 則表示只釋放 Unmanaged 資源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5247-118">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b5247-119">釋放 <see cref="T:System.DirectoryServices.SearchResultCollection" /> 物件所使用的 Unmanaged 資源，並選擇性釋放 Managed 資源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5247-119">Releases the unmanaged resources that are used by the <see cref="T:System.DirectoryServices.SearchResultCollection" /> object and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5247-120">這個方法會呼叫公用<xref:System.DirectoryServices.SearchResultCollection.Dispose%2A>方法和<xref:System.Object.Finalize%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="b5247-120">This method is called by the public <xref:System.DirectoryServices.SearchResultCollection.Dispose%2A> method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="b5247-121"><xref:System.DirectoryServices.SearchResultCollection.Dispose%2A> 叫用受保護<xref:System.DirectoryServices.SearchResultCollection.Dispose%2A>方法`disposing`參數設定為`true`。</span><span class="sxs-lookup"><span data-stu-id="b5247-121"><xref:System.DirectoryServices.SearchResultCollection.Dispose%2A> invokes the protected <xref:System.DirectoryServices.SearchResultCollection.Dispose%2A> method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="b5247-122"><xref:System.Object.Finalize%2A> 叫用<xref:System.DirectoryServices.SearchResultCollection.Dispose%2A>與`disposing`參數設定為`false`。</span><span class="sxs-lookup"><span data-stu-id="b5247-122"><xref:System.Object.Finalize%2A> invokes <xref:System.DirectoryServices.SearchResultCollection.Dispose%2A> with the `disposing` parameter set to `false`.</span></span>  
  
 <span data-ttu-id="b5247-123">當`disposing`參數是`true`，這個方法的任何 managed 物件所持有的資源全部釋出這個<xref:System.DirectoryServices.SearchResultCollection>參考。</span><span class="sxs-lookup"><span data-stu-id="b5247-123">When the `disposing` parameter is `true`, this method releases all resources that are held by any managed objects that this <xref:System.DirectoryServices.SearchResultCollection> references.</span></span>  
  
 <span data-ttu-id="b5247-124">記憶體回收行程不會釋放記憶體<xref:System.DirectoryServices.SearchResultCollection>物件。</span><span class="sxs-lookup"><span data-stu-id="b5247-124">The garbage collector does not release memory for a <xref:System.DirectoryServices.SearchResultCollection> object.</span></span> <span data-ttu-id="b5247-125">因此，您必須呼叫<xref:System.DirectoryServices.SearchResultCollection.Dispose%2A>明確地防止記憶體流失的方法。</span><span class="sxs-lookup"><span data-stu-id="b5247-125">Therefore, you must call the <xref:System.DirectoryServices.SearchResultCollection.Dispose%2A> method explicitly to prevent a memory leak.</span></span>  
  
 <span data-ttu-id="b5247-126">這個方法會叫用<xref:System.DirectoryServices.SearchResultCollection.Dispose%2A>集合中每個物件的方法。</span><span class="sxs-lookup"><span data-stu-id="b5247-126">This method invokes the <xref:System.DirectoryServices.SearchResultCollection.Dispose%2A> method of each object in the collection.</span></span>  
  
 <span data-ttu-id="b5247-127">如需有關<xref:System.DirectoryServices.SearchResultCollection.Dispose>和<xref:System.Object.Finalize%2A>，請參閱[清除 Unmanaged 資源上](~/docs/standard/garbage-collection/unmanaged.md)和[覆寫 Finalize 方法](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)。</span><span class="sxs-lookup"><span data-stu-id="b5247-127">For more information about <xref:System.DirectoryServices.SearchResultCollection.Dispose> and <xref:System.Object.Finalize%2A>, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="b5247-128">
              <see cref="M:System.DirectoryServices.SearchResultCollection.Dispose" />方法可以由其他物件呼叫多次。</span>
            <span class="sxs-lookup">
              <span data-stu-id="b5247-128">The <see cref="M:System.DirectoryServices.SearchResultCollection.Dispose" /> method can be called multiple times by other objects.</span>
            </span>
            <span data-ttu-id="b5247-129">在覆寫<see cref="M:System.DirectoryServices.SearchResultCollection.Dispose(System.Boolean)" />方法小心不要參考物件已處置過的早期呼叫中<see cref="M:System.DirectoryServices.SearchResultCollection.Dispose" />方法。</span>
            <span class="sxs-lookup">
              <span data-stu-id="b5247-129">When overriding the <see cref="M:System.DirectoryServices.SearchResultCollection.Dispose(System.Boolean)" /> method be careful not to reference objects that have been previously disposed of in an earlier call to the <see cref="M:System.DirectoryServices.SearchResultCollection.Dispose" /> method.</span>
            </span>
            <span data-ttu-id="b5247-130">如需有關如何實作<see cref="M:System.DirectoryServices.SearchResultCollection.Dispose" />，請參閱[實作 Dispose 方法](~/docs/standard/garbage-collection/implementing-dispose.md)。</span>
            <span class="sxs-lookup">
              <span data-stu-id="b5247-130">For more information about how to implement <see cref="M:System.DirectoryServices.SearchResultCollection.Dispose" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~SearchResultCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.SearchResultCollection.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!SearchResultCollection ()" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b5247-131">覆寫 <see cref="M:System.Object.Finalize" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5247-131">Overrides the <see cref="M:System.Object.Finalize" /> method.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.SearchResultCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b5247-132">傳回您可以用來逐一查看這個集合的列舉值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5247-132">Returns an enumerator that you can use to iterate through this collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b5247-133">
            <see cref="T:System.Collections.IEnumerator" /> 物件，可用來逐一查看這個集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5247-133">An <see cref="T:System.Collections.IEnumerator" /> object that you can use to iterate through this collection.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="Handle">
      <MemberSignature Language="C#" Value="public IntPtr Handle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int Handle" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.SearchResultCollection.Handle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Handle As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IntPtr Handle { IntPtr get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b5247-134">取得執行實際搜尋之 [IDirectorySearch::ExecuteSearch](http://msdn.microsoft.com/library/default.asp?url=/library/adsi/adsi/idirectorysearch_executesearch.asp) 方法所傳回的控制代碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5247-134">Gets the handle that is returned by the [IDirectorySearch::ExecuteSearch](http://msdn.microsoft.com/library/default.asp?url=/library/adsi/adsi/idirectorysearch_executesearch.asp) method that performs the actual search.</span>
          </span>
          <span data-ttu-id="b5247-135">如需詳細資訊，請參閱 MSDN Library ([http://msdn.microsoft.com/library](http://msdn.microsoft.com/library)) 中的＜[IDirectorySearch::ExecuteSearch](http://msdn.microsoft.com/library/default.asp?url=/library/adsi/adsi/idirectorysearch_executesearch.asp)＞主題。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5247-135">For more information, see the [IDirectorySearch::ExecuteSearch](http://msdn.microsoft.com/library/default.asp?url=/library/adsi/adsi/idirectorysearch_executesearch.asp) topic in the MSDN Library at [http://msdn.microsoft.com/library](http://msdn.microsoft.com/library).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b5247-136">這個集合所使用的 ADS_SEARCH_HANDLE 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5247-136">The ADS_SEARCH_HANDLE value that this collection uses.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5247-137"><xref:System.DirectoryServices.DirectorySearcher>建立此集合的呼叫[IDirectorySearch::ExecuteSearch](http://msdn.microsoft.com/library/default.asp?url=/library/adsi/adsi/idirectorysearch_executesearch.asp)方法，使查詢結果可 T:System.DirectoryServices.SearchResultCollection 物件。</span><span class="sxs-lookup"><span data-stu-id="b5247-137">The  <xref:System.DirectoryServices.DirectorySearcher> that created this collection calls the [IDirectorySearch::ExecuteSearch](http://msdn.microsoft.com/library/default.asp?url=/library/adsi/adsi/idirectorysearch_executesearch.asp) method, which makes the query results available to the T:System.DirectoryServices.SearchResultCollection object.</span></span> <span data-ttu-id="b5247-138">如需詳細資訊，請參閱[IDirectorySearch::ExecuteSearch](http://msdn.microsoft.com/library/default.asp?url=/library/adsi/adsi/idirectorysearch_executesearch.asp)在 MSDN Library 中的主題[ http://msdn.microsoft.com/library ](http://msdn.microsoft.com/library)。</span><span class="sxs-lookup"><span data-stu-id="b5247-138">For more information, see the [IDirectorySearch::ExecuteSearch](http://msdn.microsoft.com/library/default.asp?url=/library/adsi/adsi/idirectorysearch_executesearch.asp) topic in the MSDN Library at [http://msdn.microsoft.com/library](http://msdn.microsoft.com/library).</span></span>  
  
 <span data-ttu-id="b5247-139">執行查詢時，每次查詢的結果的控制代碼相關聯其<xref:System.DirectoryServices.SearchResultCollection>物件。</span><span class="sxs-lookup"><span data-stu-id="b5247-139">Each time that a query is performed, a handle for the results of that query is associated with its  <xref:System.DirectoryServices.SearchResultCollection> object.</span></span> <span data-ttu-id="b5247-140">這個控制代碼對應到在 ADSI 中的搜尋控制代碼。</span><span class="sxs-lookup"><span data-stu-id="b5247-140">This handle corresponds to the search handle in ADSI.</span></span> <span data-ttu-id="b5247-141">這個控制代碼一直保存，直到您呼叫<xref:System.DirectoryServices.SearchResultCollection.Dispose>方法<xref:System.DirectoryServices.SearchResultCollection>物件，因此您必須呼叫<xref:System.DirectoryServices.SearchResultCollection.Dispose>以防止記憶體流失。</span><span class="sxs-lookup"><span data-stu-id="b5247-141">This handle persists until you call the <xref:System.DirectoryServices.SearchResultCollection.Dispose> method on the <xref:System.DirectoryServices.SearchResultCollection> object, so you must call <xref:System.DirectoryServices.SearchResultCollection.Dispose> to prevent a memory leak.</span></span> <span data-ttu-id="b5247-142">記憶體回收行程不會釋放這個特定物件的記憶體。</span><span class="sxs-lookup"><span data-stu-id="b5247-142">The garbage collector does not free memory for this particular object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.DirectoryServices.SearchResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(class System.DirectoryServices.SearchResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.SearchResultCollection.IndexOf(System.DirectoryServices.SearchResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (result As SearchResult) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::DirectoryServices::SearchResult ^ result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.DirectoryServices.SearchResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="b5247-143">要在此集合中搜尋的 <see cref="T:System.DirectoryServices.SearchResult" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5247-143">The <see cref="T:System.DirectoryServices.SearchResult" /> object to search for in this collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b5247-144">傳回這個集合中指定之 <see cref="T:System.DirectoryServices.SearchResult" /> 物件第一次出現的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5247-144">Returns the index of the first occurrence of the specified <see cref="T:System.DirectoryServices.SearchResult" /> object in this collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b5247-145">第一個相符物件的以零起始索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5247-145">The zero-based index of the first matching object.</span>
          </span>
          <span data-ttu-id="b5247-146">如果這個集合中沒有成員與 <see cref="T:System.DirectoryServices.SearchResult" /> 物件相同，則傳回 -1。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5247-146">Returns -1 if no member of this collection is identical to the <see cref="T:System.DirectoryServices.SearchResult" /> object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.SearchResult this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.DirectoryServices.SearchResult Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.SearchResultCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(index As Integer) As SearchResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::DirectoryServices::SearchResult ^ default[int] { System::DirectoryServices::SearchResult ^ get(int index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.SearchResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="b5247-147">所要擷取之 <see cref="T:System.DirectoryServices.SearchResult" /> 物件的以零起始索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5247-147">The zero-based index of the <see cref="T:System.DirectoryServices.SearchResult" /> object to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b5247-148">取得位在這個集合中之指定索引處的 <see cref="T:System.DirectoryServices.SearchResult" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5247-148">Gets the <see cref="T:System.DirectoryServices.SearchResult" /> object that is located at a specified index in this collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b5247-149">位在指定索引處的 <see cref="T:System.DirectoryServices.SearchResult" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5247-149">The <see cref="T:System.DirectoryServices.SearchResult" /> object that is located at the specified index.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5247-150">在 C# 中，這個屬性是 <xref:System.DirectoryServices.SearchResultCollection> 類別的索引子。</span><span class="sxs-lookup"><span data-stu-id="b5247-150">In C#, this property is the indexer for the <xref:System.DirectoryServices.SearchResultCollection> class.</span></span>  
  
 <span data-ttu-id="b5247-151">在 JScript，您可以使用類型，所定義的預設索引屬性，但您無法明確地定義您自己。</span><span class="sxs-lookup"><span data-stu-id="b5247-151">In JScript, you can use the default indexed properties defined by a type, but you cannot explicitly define your own.</span></span> <span data-ttu-id="b5247-152">不過，指定 expando 屬性類別上的會自動提供預設值編製索引的類型是物件的屬性和索引類型為<xref:System.String>。</span><span class="sxs-lookup"><span data-stu-id="b5247-152">However, specifying the expando attribute on a class automatically provides a default indexed property whose type is Object and with an index type of <xref:System.String>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertiesLoaded">
      <MemberSignature Language="C#" Value="public string[] PropertiesLoaded { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] PropertiesLoaded" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.SearchResultCollection.PropertiesLoaded" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PropertiesLoaded As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ PropertiesLoaded { cli::array &lt;System::String ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b5247-153">取得在執行搜尋之前所指定的 <see cref="T:System.DirectoryServices.DirectorySearcher" /> 屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5247-153">Gets the <see cref="T:System.DirectoryServices.DirectorySearcher" /> properties that were specified before the search was executed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b5247-154">
            <see cref="T:System.String" /> 類型的陣列，包含執行搜尋之前，在 <see cref="P:System.DirectoryServices.DirectorySearcher.PropertiesToLoad" /> 屬性集合中指定的屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5247-154">An array of type <see cref="T:System.String" /> that contains the properties that were specified in the <see cref="P:System.DirectoryServices.DirectorySearcher.PropertiesToLoad" /> property collection before the search was executed.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.SearchResultCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ array, int index) = System::Collections::ICollection::CopyTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="b5247-155">一維 <see cref="T:System.Array" />，是從 <see cref="T:System.Collections.ICollection" /> 複製過來之項目的目的端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5247-155">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.ICollection" />.</span>
          </span>
          <span data-ttu-id="b5247-156">
            <see cref="T:System.Array" /> 必須有以零為起始的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5247-156">The <see cref="T:System.Array" /> must have zero-based indexing.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="b5247-157">
            <c>array</c> 中以零起始的索引，複製作業從此處開始。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5247-157">The zero-based index in <c>array</c> at which copying begins.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b5247-158">從特定的 <see cref="T:System.Collections.ICollection" /> 索引開始，將 <see cref="T:System.Array" /> 的項目複製至 <see cref="T:System.Array" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5247-158">Copies the elements of the <see cref="T:System.Collections.ICollection" /> to an <see cref="T:System.Array" />, starting at a particular <see cref="T:System.Array" /> index.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b5247-159">
            <paramref name="array" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5247-159">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="b5247-160">
            <paramref name="index" /> 小於零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5247-160">
              <paramref name="index" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b5247-161">
            <paramref name="array" /> 是多維的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5247-161">
              <paramref name="array" /> is multidimensional.</span>
          </span>
          <span data-ttu-id="b5247-162">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5247-162">-or-</span>
          </span>
          <span data-ttu-id="b5247-163">來源 <see cref="T:System.Collections.ICollection" /> 中的項目數大於 <paramref name="index" /> 到目的 <paramref name="array" /> 結尾的可用空間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5247-163">The number of elements in the source <see cref="T:System.Collections.ICollection" /> is greater than the available space from <paramref name="index" /> to the end of the destination <paramref name="array" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="b5247-164">來源 <see cref="T:System.Collections.ICollection" /> 的類型無法自動轉換成目的 <paramref name="array" /> 的類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5247-164">The type of the source <see cref="T:System.Collections.ICollection" /> cannot be cast automatically to the type of the destination <paramref name="array" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.SearchResultCollection.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.ICollection.IsSynchronized { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b5247-165">取得值，這個值表示對 <see cref="T:System.Collections.ICollection" /> 的存取是否同步 (安全執行緒)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5247-165">Gets a value indicating whether access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b5247-166">如果 <see langword="true" /> 的存取為同步 (安全執行緒)，則為 <see cref="T:System.Collections.ICollection" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5247-166">
              <see langword="true" /> if access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe); otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5247-167"><xref:System.Collections.ICollection.SyncRoot%2A> 會傳回物件，該物件可用來同步處理對 <xref:System.Collections.ICollection> 的存取。</span><span class="sxs-lookup"><span data-stu-id="b5247-167"><xref:System.Collections.ICollection.SyncRoot%2A> returns an object, which can be used to synchronize access to the <xref:System.Collections.ICollection>.</span></span>  
  
 <span data-ttu-id="b5247-168">大部分的集合中的類別<xref:System.Collections?displayProperty=nameWithType>命名空間也會實作同步處理方法，這會提供基礎集合周圍同步處理的包裝函式。</span><span class="sxs-lookup"><span data-stu-id="b5247-168">Most collection classes in the <xref:System.Collections?displayProperty=nameWithType> namespace also implement a Synchronized method, which provides a synchronized wrapper around the underlying collection.</span></span>  
  
 <span data-ttu-id="b5247-169">透過集合進行列舉在本質上並不是執行緒安全的程序。</span><span class="sxs-lookup"><span data-stu-id="b5247-169">Enumerating through a collection is intrinsically not a thread safe procedure.</span></span> <span data-ttu-id="b5247-170">即使集合經過同步化，其他的執行緒仍可修改該集合，使列舉值擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="b5247-170">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="b5247-171">若要保證列舉過程的執行緒安全，您可以在整個列舉過程中鎖定集合，或攔截由其他執行緒的變更所造成的例外狀況。</span><span class="sxs-lookup"><span data-stu-id="b5247-171">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
 <span data-ttu-id="b5247-172">[Visual Basic、 C#]</span><span class="sxs-lookup"><span data-stu-id="b5247-172">[Visual Basic, C#]</span></span>  
  
 <span data-ttu-id="b5247-173">下列程式碼範例示範如何鎖定集合使用<xref:System.Collections.ICollection.SyncRoot%2A>在整個列舉過程：</span><span class="sxs-lookup"><span data-stu-id="b5247-173">The following code example shows how to lock the collection using the <xref:System.Collections.ICollection.SyncRoot%2A> during the entire enumeration:</span></span>  
  
```csharp  
ICollection myCollection = new ICollection();  
  lock(myCollection.SyncRoot) {  
  foreach (Object item in myCollection) {  
  // Insert your code here.  
  }  
 }  
```  
  
```vb  
Dim myCollection As New ICollection()  
 Dim item As Object  
 SyncLock myCollection.SyncRoot  
  For Each item In myCollection  
  ' Insert your code here.  
  Next item  
 End SyncLock  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ICollection.SyncRoot" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.SearchResultCollection.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.ICollection.SyncRoot { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b5247-174">取得可用以同步存取 <see cref="T:System.Collections.ICollection" /> 的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5247-174">Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b5247-175">可用以同步存取 <see cref="T:System.Collections.ICollection" /> 的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5247-175">An object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5247-176">對於那些無法公開使用基礎存放區的集合而言，所預期的實作會傳回目前的執行個體。</span><span class="sxs-lookup"><span data-stu-id="b5247-176">For collections whose underlying store is not publicly available, the expected implementation is to return the current instance.</span></span> <span data-ttu-id="b5247-177">請注意目前的執行個體的指標可能無法完全包裝其他集合，集合這些集合應該傳回基礎集合`SyncRoot`屬性。</span><span class="sxs-lookup"><span data-stu-id="b5247-177">Note that the pointer to the current instance might not be sufficient for collections that wrap other collections; those should return the underlying collection's `SyncRoot` property.</span></span>  
  
 <span data-ttu-id="b5247-178">在 <xref:System.Collections?displayProperty=nameWithType> 命名空間中大部分的集合類別也實作 `Synchronized` 方法，這會提供基礎集合周圍同步處理的包裝函式。</span><span class="sxs-lookup"><span data-stu-id="b5247-178">Most collection classes in the <xref:System.Collections?displayProperty=nameWithType> namespace also implement a `Synchronized` method, which provides a synchronized wrapper around the underlying collection.</span></span> <span data-ttu-id="b5247-179">然而，衍生類別 (Derived Class) 可以使用 <xref:System.Collections.ICollection.SyncRoot%2A> 屬性，提供它們自己集合的同步化版本。</span><span class="sxs-lookup"><span data-stu-id="b5247-179">However, derived classes can provide their own synchronized version of the collection using the <xref:System.Collections.ICollection.SyncRoot%2A> property.</span></span> <span data-ttu-id="b5247-180">同步處理的程式碼必須在上執行作業<xref:System.Collections.ICollection.SyncRoot%2A>的集合，而不是直接在集合。</span><span class="sxs-lookup"><span data-stu-id="b5247-180">The synchronizing code must perform operations on the <xref:System.Collections.ICollection.SyncRoot%2A> of the collection, not directly on the collection.</span></span> <span data-ttu-id="b5247-181">如此可確保衍生自其他物件的集合可以正常運作，</span><span class="sxs-lookup"><span data-stu-id="b5247-181">This ensures proper operation of collections that are derived from other objects.</span></span> <span data-ttu-id="b5247-182">特別是可以與其他可能同時修改集合執行個體的執行緒，保持正常的同步處理。</span><span class="sxs-lookup"><span data-stu-id="b5247-182">Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the collection instance.</span></span>  
  
 <span data-ttu-id="b5247-183">如果沒有`Synchronized`方法的集合，如的預期使用量<xref:System.Collections.ICollection.SyncRoot%2A>看起來像這樣：</span><span class="sxs-lookup"><span data-stu-id="b5247-183">In the absence of a `Synchronized` method on a collection, the expected usage for <xref:System.Collections.ICollection.SyncRoot%2A> looks like this:</span></span>  
  
```csharp  
ICollection MyCollection =...  
 lock(MyCollection.SyncRoot) {  
  // Some operation on the collection, which is now thread safe.  
 }  
```  
  
```vb  
Dim myCollection as New ICollection()  
 SyncLock myCollection.SyncRoot  
  ' Some operation on the collection, which is now thread safe.  
 End SyncLock  
```  
  
 <span data-ttu-id="b5247-184">透過集合進行列舉在本質上並不是執行緒安全的程序。</span><span class="sxs-lookup"><span data-stu-id="b5247-184">Enumerating through a collection is intrinsically not a thread safe procedure.</span></span> <span data-ttu-id="b5247-185">即使集合經過同步化，其他的執行緒仍可修改該集合，使列舉值擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="b5247-185">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="b5247-186">若要保證列舉過程的執行緒安全，您可以在整個列舉過程中鎖定集合，或攔截由其他執行緒的變更所造成的例外狀況。</span><span class="sxs-lookup"><span data-stu-id="b5247-186">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
 <span data-ttu-id="b5247-187">[Visual Basic、 C#]</span><span class="sxs-lookup"><span data-stu-id="b5247-187">[Visual Basic, C#]</span></span>  
  
 <span data-ttu-id="b5247-188">下列程式碼範例示範如何鎖定集合使用<xref:System.Collections.ICollection.SyncRoot%2A>在整個列舉過程：</span><span class="sxs-lookup"><span data-stu-id="b5247-188">The following code example shows how to lock the collection using the <xref:System.Collections.ICollection.SyncRoot%2A> during the entire enumeration:</span></span>  
  
```csharp  
ICollection myCollection = new ICollection();  
 lock(myCollection.SyncRoot) {  
  foreach (Object item in myCollection) {  
  // Insert your code here.  
  }  
 }  
```  
  
```vb  
Dim myCollection As New ICollection()  
 Dim item As Object  
 SyncLock myCollection.SyncRoot  
  For Each item In myCollection  
  ' Insert your code here.  
  Next item  
 End SyncLock  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ICollection.IsSynchronized" />
      </Docs>
    </Member>
  </Members>
</Type>