<Type Name="ActiveDirectorySecurity" FullName="System.DirectoryServices.ActiveDirectorySecurity">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d763e0481829c156a54648273988a56bec58aea5" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="39885198" /></Metadata><TypeSignature Language="C#" Value="public class ActiveDirectorySecurity : System.Security.AccessControl.DirectoryObjectSecurity" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ActiveDirectorySecurity extends System.Security.AccessControl.DirectoryObjectSecurity" />
  <TypeSignature Language="DocId" Value="T:System.DirectoryServices.ActiveDirectorySecurity" />
  <TypeSignature Language="VB.NET" Value="Public Class ActiveDirectorySecurity&#xA;Inherits DirectoryObjectSecurity" />
  <TypeSignature Language="C++ CLI" Value="public ref class ActiveDirectorySecurity : System::Security::AccessControl::DirectoryObjectSecurity" />
  <TypeSignature Language="F#" Value="type ActiveDirectorySecurity = class&#xA;    inherit DirectoryObjectSecurity" />
  <AssemblyInfo>
    <AssemblyName>System.DirectoryServices</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.AccessControl.DirectoryObjectSecurity</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>使用 Managed ACL 程式庫的物件安全性階層以包裝目錄物件的存取控制功能。</summary>
    <remarks>To be added.</remarks>
    <altmember cref="T:System.Security.AccessControl.DirectoryObjectSecurity" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ActiveDirectorySecurity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectorySecurity.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ActiveDirectorySecurity();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.DirectoryServices.ActiveDirectorySecurity" /> 類別的新執行個體。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AccessRightType">
      <MemberSignature Language="C#" Value="public override Type AccessRightType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type AccessRightType" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.ActiveDirectorySecurity.AccessRightType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property AccessRightType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ AccessRightType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AccessRightType : Type" Usage="System.DirectoryServices.ActiveDirectorySecurity.AccessRightType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得 <see cref="T:System.Type" /> 物件，表示這個物件的存取權限。</summary>
        <value>存取權限的 <see cref="T:System.Type" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個屬性一律傳回<xref:System.Type>的<xref:System.DirectoryServices.ActiveDirectoryRights>列舉型別。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AccessRuleFactory">
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>建立 <see cref="T:System.Security.AccessControl.AccessRule" /> 物件。</summary>
        <altmember cref="T:System.Security.AccessControl.AccessRule" />
      </Docs>
    </MemberGroup>
    <Member MemberName="AccessRuleFactory">
      <MemberSignature Language="C#" Value="public override sealed System.Security.AccessControl.AccessRule AccessRuleFactory (System.Security.Principal.IdentityReference identityReference, int accessMask, bool isInherited, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AccessControlType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.AccessControl.AccessRule AccessRuleFactory(class System.Security.Principal.IdentityReference identityReference, int32 accessMask, bool isInherited, valuetype System.Security.AccessControl.InheritanceFlags inheritanceFlags, valuetype System.Security.AccessControl.PropagationFlags propagationFlags, valuetype System.Security.AccessControl.AccessControlType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectorySecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::AccessControl::AccessRule ^ AccessRuleFactory(System::Security::Principal::IdentityReference ^ identityReference, int accessMask, bool isInherited, System::Security::AccessControl::InheritanceFlags inheritanceFlags, System::Security::AccessControl::PropagationFlags propagationFlags, System::Security::AccessControl::AccessControlType type);" />
      <MemberSignature Language="F#" Value="abstract member AccessRuleFactory : System.Security.Principal.IdentityReference * int * bool * System.Security.AccessControl.InheritanceFlags * System.Security.AccessControl.PropagationFlags * System.Security.AccessControl.AccessControlType -&gt; System.Security.AccessControl.AccessRule&#xA;override this.AccessRuleFactory : System.Security.Principal.IdentityReference * int * bool * System.Security.AccessControl.InheritanceFlags * System.Security.AccessControl.PropagationFlags * System.Security.AccessControl.AccessControlType -&gt; System.Security.AccessControl.AccessRule" Usage="activeDirectorySecurity.AccessRuleFactory (identityReference, accessMask, isInherited, inheritanceFlags, propagationFlags, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.AccessRule</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identityReference" Type="System.Security.Principal.IdentityReference" />
        <Parameter Name="accessMask" Type="System.Int32" />
        <Parameter Name="isInherited" Type="System.Boolean" />
        <Parameter Name="inheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
        <Parameter Name="propagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
        <Parameter Name="type" Type="System.Security.AccessControl.AccessControlType" />
      </Parameters>
      <Docs>
        <param name="identityReference"><see cref="T:System.Security.Principal.IdentityReference" /> 物件 (例如 NTAccount 物件)，解析為安全識別項 (SID)。</param>
        <param name="accessMask"><see cref="T:System.Int32" /> 位元遮罩，顯示要使用的存取權限。</param>
        <param name="isInherited"><see cref="T:System.Boolean" /> 物件，指出 ACE 是否是繼承的。 如果 ACE 是繼承的則為 <see langword="true" />，否則為 <see langword="false" />。</param>
        <param name="inheritanceFlags"><see cref="T:System.Security.AccessControl.InheritanceFlags" /> 物件，包含目錄物件的繼承旗標。</param>
        <param name="propagationFlags"><see cref="T:System.Security.AccessControl.PropagationFlags" /> 物件，包含目錄物件的繼承傳用旗標。</param>
        <param name="type"><see cref="T:System.Security.AccessControl.AccessControlType" /> 物件，包含 ACE 型別。</param>
        <summary>以指定的値建立 <see cref="T:System.Security.AccessControl.AccessRule" /> 物件。</summary>
        <returns>對應於 <see cref="T:System.Security.AccessControl.AccessRule" /> 物件的 <see cref="T:System.DirectoryServices.ActiveDirectorySecurity" />。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Security.AccessControl.AccessRule" />
      </Docs>
    </Member>
    <Member MemberName="AccessRuleFactory">
      <MemberSignature Language="C#" Value="public override sealed System.Security.AccessControl.AccessRule AccessRuleFactory (System.Security.Principal.IdentityReference identityReference, int accessMask, bool isInherited, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AccessControlType type, Guid objectGuid, Guid inheritedObjectGuid);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.AccessControl.AccessRule AccessRuleFactory(class System.Security.Principal.IdentityReference identityReference, int32 accessMask, bool isInherited, valuetype System.Security.AccessControl.InheritanceFlags inheritanceFlags, valuetype System.Security.AccessControl.PropagationFlags propagationFlags, valuetype System.Security.AccessControl.AccessControlType type, valuetype System.Guid objectGuid, valuetype System.Guid inheritedObjectGuid) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectorySecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType,System.Guid,System.Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::AccessControl::AccessRule ^ AccessRuleFactory(System::Security::Principal::IdentityReference ^ identityReference, int accessMask, bool isInherited, System::Security::AccessControl::InheritanceFlags inheritanceFlags, System::Security::AccessControl::PropagationFlags propagationFlags, System::Security::AccessControl::AccessControlType type, Guid objectGuid, Guid inheritedObjectGuid);" />
      <MemberSignature Language="F#" Value="abstract member AccessRuleFactory : System.Security.Principal.IdentityReference * int * bool * System.Security.AccessControl.InheritanceFlags * System.Security.AccessControl.PropagationFlags * System.Security.AccessControl.AccessControlType * Guid * Guid -&gt; System.Security.AccessControl.AccessRule&#xA;override this.AccessRuleFactory : System.Security.Principal.IdentityReference * int * bool * System.Security.AccessControl.InheritanceFlags * System.Security.AccessControl.PropagationFlags * System.Security.AccessControl.AccessControlType * Guid * Guid -&gt; System.Security.AccessControl.AccessRule" Usage="activeDirectorySecurity.AccessRuleFactory (identityReference, accessMask, isInherited, inheritanceFlags, propagationFlags, type, objectGuid, inheritedObjectGuid)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.AccessRule</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identityReference" Type="System.Security.Principal.IdentityReference" />
        <Parameter Name="accessMask" Type="System.Int32" />
        <Parameter Name="isInherited" Type="System.Boolean" />
        <Parameter Name="inheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
        <Parameter Name="propagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
        <Parameter Name="type" Type="System.Security.AccessControl.AccessControlType" />
        <Parameter Name="objectGuid" Type="System.Guid" />
        <Parameter Name="inheritedObjectGuid" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="identityReference"><see cref="T:System.Security.Principal.IdentityReference" /> 物件 (例如 NTAccount 物件)，解析為安全識別項 (SID)。</param>
        <param name="accessMask"><see cref="T:System.Int32" /> 位元遮罩，顯示要使用的存取權限。</param>
        <param name="isInherited"><see cref="T:System.Boolean" /> 物件，指出 ACE 是否是繼承的。 如果 ACE 是繼承的則為 <see langword="true" />，否則為 <see langword="false" />。</param>
        <param name="inheritanceFlags"><see cref="T:System.Security.AccessControl.InheritanceFlags" /> 物件，包含目錄物件的繼承旗標。</param>
        <param name="propagationFlags"><see cref="T:System.Security.AccessControl.PropagationFlags" /> 物件，包含目錄物件的繼承傳用旗標。</param>
        <param name="type"><see cref="T:System.Security.AccessControl.AccessControlType" /> 物件，包含 ACE 型別。</param>
        <param name="objectGuid"><see cref="T:System.Guid" /> 物件，包含目錄物件的 GUID。</param>
        <param name="inheritedObjectGuid"><see cref="T:System.Guid" /> 物件，包含繼承之目錄物件的 GUID。</param>
        <summary>以指定的値建立 <see cref="T:System.Security.AccessControl.AccessRule" /> 物件。</summary>
        <returns>對應於 <see cref="T:System.Security.AccessControl.AccessRule" /> 物件的 <see cref="T:System.DirectoryServices.ActiveDirectorySecurity" />。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Security.AccessControl.AccessRule" />
      </Docs>
    </Member>
    <Member MemberName="AccessRuleType">
      <MemberSignature Language="C#" Value="public override Type AccessRuleType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type AccessRuleType" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.ActiveDirectorySecurity.AccessRuleType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property AccessRuleType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ AccessRuleType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AccessRuleType : Type" Usage="System.DirectoryServices.ActiveDirectorySecurity.AccessRuleType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得 <see cref="T:System.Type" /> 物件，表示這個物件的存取規則。</summary>
        <value>存取規則的 <see cref="T:System.Type" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個屬性一律傳回<xref:System.Type>的<xref:System.DirectoryServices.ActiveDirectoryAccessRule>類別。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAccessRule">
      <MemberSignature Language="C#" Value="public void AddAccessRule (System.DirectoryServices.ActiveDirectoryAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddAccessRule(class System.DirectoryServices.ActiveDirectoryAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectorySecurity.AddAccessRule(System.DirectoryServices.ActiveDirectoryAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddAccessRule (rule As ActiveDirectoryAccessRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddAccessRule(System::DirectoryServices::ActiveDirectoryAccessRule ^ rule);" />
      <MemberSignature Language="F#" Value="member this.AddAccessRule : System.DirectoryServices.ActiveDirectoryAccessRule -&gt; unit" Usage="activeDirectorySecurity.AddAccessRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.DirectoryServices.ActiveDirectoryAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule">這個作業所套用到的 <see cref="M:System.Security.AccessControl.DirectoryObjectSecurity.AddAccessRule(System.Security.AccessControl.ObjectAccessRule)" />。</param>
        <summary>將存取規則加入物件的 DACL。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.DirectoryServices.ActiveDirectoryAccessRule" />
      </Docs>
    </Member>
    <Member MemberName="AddAuditRule">
      <MemberSignature Language="C#" Value="public void AddAuditRule (System.DirectoryServices.ActiveDirectoryAuditRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddAuditRule(class System.DirectoryServices.ActiveDirectoryAuditRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectorySecurity.AddAuditRule(System.DirectoryServices.ActiveDirectoryAuditRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddAuditRule (rule As ActiveDirectoryAuditRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddAuditRule(System::DirectoryServices::ActiveDirectoryAuditRule ^ rule);" />
      <MemberSignature Language="F#" Value="member this.AddAuditRule : System.DirectoryServices.ActiveDirectoryAuditRule -&gt; unit" Usage="activeDirectorySecurity.AddAuditRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.DirectoryServices.ActiveDirectoryAuditRule" />
      </Parameters>
      <Docs>
        <param name="rule">這個作業所套用到的 <see cref="T:System.DirectoryServices.ActiveDirectoryAuditRule" />。</param>
        <summary>將稽核規則加入物件的 SACL。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.DirectoryServices.ActiveDirectoryAuditRule" />
      </Docs>
    </Member>
    <MemberGroup MemberName="AuditRuleFactory">
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>建立 <see cref="T:System.Security.AccessControl.AuditRule" /> 物件。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AuditRuleFactory">
      <MemberSignature Language="C#" Value="public override sealed System.Security.AccessControl.AuditRule AuditRuleFactory (System.Security.Principal.IdentityReference identityReference, int accessMask, bool isInherited, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AuditFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.AccessControl.AuditRule AuditRuleFactory(class System.Security.Principal.IdentityReference identityReference, int32 accessMask, bool isInherited, valuetype System.Security.AccessControl.InheritanceFlags inheritanceFlags, valuetype System.Security.AccessControl.PropagationFlags propagationFlags, valuetype System.Security.AccessControl.AuditFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectorySecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::AccessControl::AuditRule ^ AuditRuleFactory(System::Security::Principal::IdentityReference ^ identityReference, int accessMask, bool isInherited, System::Security::AccessControl::InheritanceFlags inheritanceFlags, System::Security::AccessControl::PropagationFlags propagationFlags, System::Security::AccessControl::AuditFlags flags);" />
      <MemberSignature Language="F#" Value="abstract member AuditRuleFactory : System.Security.Principal.IdentityReference * int * bool * System.Security.AccessControl.InheritanceFlags * System.Security.AccessControl.PropagationFlags * System.Security.AccessControl.AuditFlags -&gt; System.Security.AccessControl.AuditRule&#xA;override this.AuditRuleFactory : System.Security.Principal.IdentityReference * int * bool * System.Security.AccessControl.InheritanceFlags * System.Security.AccessControl.PropagationFlags * System.Security.AccessControl.AuditFlags -&gt; System.Security.AccessControl.AuditRule" Usage="activeDirectorySecurity.AuditRuleFactory (identityReference, accessMask, isInherited, inheritanceFlags, propagationFlags, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.AuditRule</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identityReference" Type="System.Security.Principal.IdentityReference" />
        <Parameter Name="accessMask" Type="System.Int32" />
        <Parameter Name="isInherited" Type="System.Boolean" />
        <Parameter Name="inheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
        <Parameter Name="propagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
        <Parameter Name="flags" Type="System.Security.AccessControl.AuditFlags" />
      </Parameters>
      <Docs>
        <param name="identityReference"><see cref="T:System.Security.Principal.IdentityReference" /> 物件 (例如 NTAccount 物件)，解析為安全識別項 (SID)。</param>
        <param name="accessMask"><see cref="T:System.Int32" /> 位元遮罩，顯示要使用的存取權限。</param>
        <param name="isInherited"><see cref="T:System.Boolean" /> 物件，指出 ACE 是否是繼承的。 如果 ACE 是繼承的則為 <see langword="true" />，否則為 <see langword="false" />。</param>
        <param name="inheritanceFlags"><see cref="T:System.Security.AccessControl.InheritanceFlags" /> 物件，包含目錄物件的繼承旗標。</param>
        <param name="propagationFlags"><see cref="T:System.Security.AccessControl.PropagationFlags" /> 物件，包含目錄物件的繼承傳用旗標。</param>
        <param name="flags"><see cref="T:System.Security.AccessControl.AuditFlags" /> 物件，包含這個 <see cref="T:System.DirectoryServices.ActiveDirectorySecurity" /> 物件的稽核旗標。</param>
        <summary>以指定的値建立 <see cref="T:System.Security.AccessControl.AuditRule" /> 物件。</summary>
        <returns>對應於 <see cref="T:System.Security.AccessControl.AuditRule" /> 物件的 <see cref="T:System.DirectoryServices.ActiveDirectorySecurity" />。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Security.AccessControl.AuditRule" />
      </Docs>
    </Member>
    <Member MemberName="AuditRuleFactory">
      <MemberSignature Language="C#" Value="public override sealed System.Security.AccessControl.AuditRule AuditRuleFactory (System.Security.Principal.IdentityReference identityReference, int accessMask, bool isInherited, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AuditFlags flags, Guid objectGuid, Guid inheritedObjectGuid);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.AccessControl.AuditRule AuditRuleFactory(class System.Security.Principal.IdentityReference identityReference, int32 accessMask, bool isInherited, valuetype System.Security.AccessControl.InheritanceFlags inheritanceFlags, valuetype System.Security.AccessControl.PropagationFlags propagationFlags, valuetype System.Security.AccessControl.AuditFlags flags, valuetype System.Guid objectGuid, valuetype System.Guid inheritedObjectGuid) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectorySecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags,System.Guid,System.Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::AccessControl::AuditRule ^ AuditRuleFactory(System::Security::Principal::IdentityReference ^ identityReference, int accessMask, bool isInherited, System::Security::AccessControl::InheritanceFlags inheritanceFlags, System::Security::AccessControl::PropagationFlags propagationFlags, System::Security::AccessControl::AuditFlags flags, Guid objectGuid, Guid inheritedObjectGuid);" />
      <MemberSignature Language="F#" Value="abstract member AuditRuleFactory : System.Security.Principal.IdentityReference * int * bool * System.Security.AccessControl.InheritanceFlags * System.Security.AccessControl.PropagationFlags * System.Security.AccessControl.AuditFlags * Guid * Guid -&gt; System.Security.AccessControl.AuditRule&#xA;override this.AuditRuleFactory : System.Security.Principal.IdentityReference * int * bool * System.Security.AccessControl.InheritanceFlags * System.Security.AccessControl.PropagationFlags * System.Security.AccessControl.AuditFlags * Guid * Guid -&gt; System.Security.AccessControl.AuditRule" Usage="activeDirectorySecurity.AuditRuleFactory (identityReference, accessMask, isInherited, inheritanceFlags, propagationFlags, flags, objectGuid, inheritedObjectGuid)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.AuditRule</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identityReference" Type="System.Security.Principal.IdentityReference" />
        <Parameter Name="accessMask" Type="System.Int32" />
        <Parameter Name="isInherited" Type="System.Boolean" />
        <Parameter Name="inheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
        <Parameter Name="propagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
        <Parameter Name="flags" Type="System.Security.AccessControl.AuditFlags" />
        <Parameter Name="objectGuid" Type="System.Guid" />
        <Parameter Name="inheritedObjectGuid" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="identityReference"><see cref="T:System.Security.Principal.IdentityReference" /> 物件 (例如 NTAccount 物件)，解析為安全識別項 (SID)。</param>
        <param name="accessMask"><see cref="T:System.Int32" /> 位元遮罩，顯示要使用的存取權限。</param>
        <param name="isInherited"><see cref="T:System.Boolean" /> 物件，指出 ACE 是否是繼承的。 如果 ACE 是繼承的則為 <see langword="true" />，否則為 <see langword="false" />。</param>
        <param name="inheritanceFlags"><see cref="T:System.Security.AccessControl.InheritanceFlags" /> 物件，包含目錄物件的繼承旗標。</param>
        <param name="propagationFlags"><see cref="T:System.Security.AccessControl.PropagationFlags" /> 物件，包含目錄物件的繼承傳用旗標。</param>
        <param name="flags"><see cref="T:System.Security.AccessControl.AuditFlags" /> 物件，包含這個 <see cref="T:System.DirectoryServices.ActiveDirectorySecurity" /> 物件的稽核旗標。</param>
        <param name="objectGuid"><see cref="T:System.Guid" /> 物件，包含目錄物件的 Guido。</param>
        <param name="inheritedObjectGuid"><see cref="T:System.Guid" /> 物件，包含繼承之目錄物件的 Guido。</param>
        <summary>以指定的値建立 <see cref="T:System.Security.AccessControl.AuditRule" /> 物件。</summary>
        <returns>對應於 <see cref="T:System.Security.AccessControl.AuditRule" /> 物件的 <see cref="T:System.DirectoryServices.ActiveDirectorySecurity" />。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Security.AccessControl.AuditRule" />
      </Docs>
    </Member>
    <Member MemberName="AuditRuleType">
      <MemberSignature Language="C#" Value="public override Type AuditRuleType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type AuditRuleType" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.ActiveDirectorySecurity.AuditRuleType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property AuditRuleType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ AuditRuleType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AuditRuleType : Type" Usage="System.DirectoryServices.ActiveDirectorySecurity.AuditRuleType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得 <see cref="T:System.Type" /> 物件，表示這個物件的稽核規則。</summary>
        <value>稽核規則的 <see cref="T:System.Type" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個屬性一律傳回<xref:System.Type>的<xref:System.DirectoryServices.ActiveDirectoryAuditRule>類別。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ModifyAccessRule">
      <MemberSignature Language="C#" Value="public override bool ModifyAccessRule (System.Security.AccessControl.AccessControlModification modification, System.Security.AccessControl.AccessRule rule, out bool modified);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool ModifyAccessRule(valuetype System.Security.AccessControl.AccessControlModification modification, class System.Security.AccessControl.AccessRule rule, [out] bool&amp; modified) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectorySecurity.ModifyAccessRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ModifyAccessRule (modification As AccessControlModification, rule As AccessRule, ByRef modified As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool ModifyAccessRule(System::Security::AccessControl::AccessControlModification modification, System::Security::AccessControl::AccessRule ^ rule, [Runtime::InteropServices::Out] bool % modified);" />
      <MemberSignature Language="F#" Value="abstract member ModifyAccessRule : System.Security.AccessControl.AccessControlModification * System.Security.AccessControl.AccessRule *  -&gt; bool&#xA;override this.ModifyAccessRule : System.Security.AccessControl.AccessControlModification * System.Security.AccessControl.AccessRule *  -&gt; bool" Usage="activeDirectorySecurity.ModifyAccessRule (modification, rule, modified)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modification" Type="System.Security.AccessControl.AccessControlModification" />
        <Parameter Name="rule" Type="System.Security.AccessControl.AccessRule" />
        <Parameter Name="modified" Type="System.Boolean" RefType="out" />
      </Parameters>
      <Docs>
        <param name="modification">要執行的存取控制修改型別。</param>
        <param name="rule">要修改的存取規則。</param>
        <param name="modified">如果成功地修改，則為 <see langword="true" />，否則為 <see langword="false" />。</param>
        <summary>將指定之修改套用至指定的 <see cref="T:System.Security.AccessControl.AccessRule" />。</summary>
        <returns>如果成功地修改，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ModifyAuditRule">
      <MemberSignature Language="C#" Value="public override bool ModifyAuditRule (System.Security.AccessControl.AccessControlModification modification, System.Security.AccessControl.AuditRule rule, out bool modified);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool ModifyAuditRule(valuetype System.Security.AccessControl.AccessControlModification modification, class System.Security.AccessControl.AuditRule rule, [out] bool&amp; modified) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectorySecurity.ModifyAuditRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ModifyAuditRule (modification As AccessControlModification, rule As AuditRule, ByRef modified As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool ModifyAuditRule(System::Security::AccessControl::AccessControlModification modification, System::Security::AccessControl::AuditRule ^ rule, [Runtime::InteropServices::Out] bool % modified);" />
      <MemberSignature Language="F#" Value="abstract member ModifyAuditRule : System.Security.AccessControl.AccessControlModification * System.Security.AccessControl.AuditRule *  -&gt; bool&#xA;override this.ModifyAuditRule : System.Security.AccessControl.AccessControlModification * System.Security.AccessControl.AuditRule *  -&gt; bool" Usage="activeDirectorySecurity.ModifyAuditRule (modification, rule, modified)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modification" Type="System.Security.AccessControl.AccessControlModification" />
        <Parameter Name="rule" Type="System.Security.AccessControl.AuditRule" />
        <Parameter Name="modified" Type="System.Boolean" RefType="out" />
      </Parameters>
      <Docs>
        <param name="modification">要執行的修改。</param>
        <param name="rule">要修改的稽核規則。</param>
        <param name="modified">如果成功地修改，則為 <see langword="true" />，否則為 <see langword="false" />。</param>
        <summary>將指定之修改套用至指定的 <see cref="T:System.Security.AccessControl.AuditRule" />。</summary>
        <returns>如果成功地修改，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PurgeAccessRules">
      <MemberSignature Language="C#" Value="public override void PurgeAccessRules (System.Security.Principal.IdentityReference identity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void PurgeAccessRules(class System.Security.Principal.IdentityReference identity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectorySecurity.PurgeAccessRules(System.Security.Principal.IdentityReference)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub PurgeAccessRules (identity As IdentityReference)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void PurgeAccessRules(System::Security::Principal::IdentityReference ^ identity);" />
      <MemberSignature Language="F#" Value="abstract member PurgeAccessRules : System.Security.Principal.IdentityReference -&gt; unit&#xA;override this.PurgeAccessRules : System.Security.Principal.IdentityReference -&gt; unit" Usage="activeDirectorySecurity.PurgeAccessRules identity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identity" Type="System.Security.Principal.IdentityReference" />
      </Parameters>
      <Docs>
        <param name="identity">要為其移除所有存取規則的 <see cref="T:System.Security.Principal.IdentityReference" />。</param>
        <summary>移除與指定之 <see cref="T:System.Security.Principal.IdentityReference" /> 相關聯的所有存取規則。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">並非所有的存取規則都以標準順序排序。</exception>
      </Docs>
    </Member>
    <Member MemberName="PurgeAuditRules">
      <MemberSignature Language="C#" Value="public override void PurgeAuditRules (System.Security.Principal.IdentityReference identity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void PurgeAuditRules(class System.Security.Principal.IdentityReference identity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectorySecurity.PurgeAuditRules(System.Security.Principal.IdentityReference)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub PurgeAuditRules (identity As IdentityReference)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void PurgeAuditRules(System::Security::Principal::IdentityReference ^ identity);" />
      <MemberSignature Language="F#" Value="abstract member PurgeAuditRules : System.Security.Principal.IdentityReference -&gt; unit&#xA;override this.PurgeAuditRules : System.Security.Principal.IdentityReference -&gt; unit" Usage="activeDirectorySecurity.PurgeAuditRules identity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identity" Type="System.Security.Principal.IdentityReference" />
      </Parameters>
      <Docs>
        <param name="identity">要為其移除所有稽核規則的 <see cref="T:System.Security.Principal.IdentityReference" />。</param>
        <summary>移除與指定之 <see cref="T:System.Security.Principal.IdentityReference" /> 相關聯的所有稽核規則。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">並非所有的稽核規則都以標準順序排序。</exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAccess">
      <MemberSignature Language="C#" Value="public void RemoveAccess (System.Security.Principal.IdentityReference identity, System.Security.AccessControl.AccessControlType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAccess(class System.Security.Principal.IdentityReference identity, valuetype System.Security.AccessControl.AccessControlType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectorySecurity.RemoveAccess(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAccess (identity As IdentityReference, type As AccessControlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAccess(System::Security::Principal::IdentityReference ^ identity, System::Security::AccessControl::AccessControlType type);" />
      <MemberSignature Language="F#" Value="member this.RemoveAccess : System.Security.Principal.IdentityReference * System.Security.AccessControl.AccessControlType -&gt; unit" Usage="activeDirectorySecurity.RemoveAccess (identity, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identity" Type="System.Security.Principal.IdentityReference" />
        <Parameter Name="type" Type="System.Security.AccessControl.AccessControlType" />
      </Parameters>
      <Docs>
        <param name="identity"><see cref="T:System.Security.Principal.IdentityReference" /> 物件 (例如 NTAccount 物件)，解析為安全識別項 (SID)。</param>
        <param name="type"><see cref="T:System.Security.AccessControl.AccessControlType" /> 物件，包含 ACE 型別。</param>
        <summary>從物件的 DACL 移除具有指定之 <see cref="T:System.Security.Principal.IdentityReference" /> 物件和 <see cref="T:System.Security.AccessControl.AccessControlType" /> 物件的所有存取規則。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAccessRule">
      <MemberSignature Language="C#" Value="public bool RemoveAccessRule (System.DirectoryServices.ActiveDirectoryAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveAccessRule(class System.DirectoryServices.ActiveDirectoryAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectorySecurity.RemoveAccessRule(System.DirectoryServices.ActiveDirectoryAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveAccessRule (rule As ActiveDirectoryAccessRule) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveAccessRule(System::DirectoryServices::ActiveDirectoryAccessRule ^ rule);" />
      <MemberSignature Language="F#" Value="member this.RemoveAccessRule : System.DirectoryServices.ActiveDirectoryAccessRule -&gt; bool" Usage="activeDirectorySecurity.RemoveAccessRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.DirectoryServices.ActiveDirectoryAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule">這個作業所套用到的 <see cref="T:System.DirectoryServices.ActiveDirectoryAccessRule" />。</param>
        <summary>從物件的 DACL 移除包含與指定之存取規則相同之安全識別項和存取遮罩的所有存取規則。</summary>
        <returns>如果作業成功，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAccessRuleSpecific">
      <MemberSignature Language="C#" Value="public void RemoveAccessRuleSpecific (System.DirectoryServices.ActiveDirectoryAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAccessRuleSpecific(class System.DirectoryServices.ActiveDirectoryAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectorySecurity.RemoveAccessRuleSpecific(System.DirectoryServices.ActiveDirectoryAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAccessRuleSpecific (rule As ActiveDirectoryAccessRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAccessRuleSpecific(System::DirectoryServices::ActiveDirectoryAccessRule ^ rule);" />
      <MemberSignature Language="F#" Value="member this.RemoveAccessRuleSpecific : System.DirectoryServices.ActiveDirectoryAccessRule -&gt; unit" Usage="activeDirectorySecurity.RemoveAccessRuleSpecific rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.DirectoryServices.ActiveDirectoryAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule">這個作業所套用到的 <see cref="T:System.DirectoryServices.ActiveDirectoryAccessRule" />。</param>
        <summary>從物件的 DACL 移除完全符合指定之存取規則的所有存取規則。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAudit">
      <MemberSignature Language="C#" Value="public void RemoveAudit (System.Security.Principal.IdentityReference identity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAudit(class System.Security.Principal.IdentityReference identity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectorySecurity.RemoveAudit(System.Security.Principal.IdentityReference)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAudit (identity As IdentityReference)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAudit(System::Security::Principal::IdentityReference ^ identity);" />
      <MemberSignature Language="F#" Value="member this.RemoveAudit : System.Security.Principal.IdentityReference -&gt; unit" Usage="activeDirectorySecurity.RemoveAudit identity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identity" Type="System.Security.Principal.IdentityReference" />
      </Parameters>
      <Docs>
        <param name="identity"><see cref="T:System.Security.Principal.IdentityReference" /> 物件 (例如 NTAccount 物件)，解析為安全識別項 (SID)。</param>
        <summary>從物件的 SACL 移除具有指定之 <see cref="T:System.Security.Principal.IdentityReference" /> 物件的所有稽核規則。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAuditRule">
      <MemberSignature Language="C#" Value="public bool RemoveAuditRule (System.DirectoryServices.ActiveDirectoryAuditRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveAuditRule(class System.DirectoryServices.ActiveDirectoryAuditRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectorySecurity.RemoveAuditRule(System.DirectoryServices.ActiveDirectoryAuditRule)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveAuditRule (rule As ActiveDirectoryAuditRule) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveAuditRule(System::DirectoryServices::ActiveDirectoryAuditRule ^ rule);" />
      <MemberSignature Language="F#" Value="member this.RemoveAuditRule : System.DirectoryServices.ActiveDirectoryAuditRule -&gt; bool" Usage="activeDirectorySecurity.RemoveAuditRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.DirectoryServices.ActiveDirectoryAuditRule" />
      </Parameters>
      <Docs>
        <param name="rule">這個作業所套用到的 <see cref="T:System.DirectoryServices.ActiveDirectoryAccessRule" />。</param>
        <summary>從物件的系統存取控制清單 (System Access Control List，SACL)，移除包含與指定之稽核規則相同之安全識別項和存取遮罩的所有稽核規則。</summary>
        <returns>如果作業成功，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAuditRuleSpecific">
      <MemberSignature Language="C#" Value="public void RemoveAuditRuleSpecific (System.DirectoryServices.ActiveDirectoryAuditRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAuditRuleSpecific(class System.DirectoryServices.ActiveDirectoryAuditRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectorySecurity.RemoveAuditRuleSpecific(System.DirectoryServices.ActiveDirectoryAuditRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAuditRuleSpecific (rule As ActiveDirectoryAuditRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAuditRuleSpecific(System::DirectoryServices::ActiveDirectoryAuditRule ^ rule);" />
      <MemberSignature Language="F#" Value="member this.RemoveAuditRuleSpecific : System.DirectoryServices.ActiveDirectoryAuditRule -&gt; unit" Usage="activeDirectorySecurity.RemoveAuditRuleSpecific rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.DirectoryServices.ActiveDirectoryAuditRule" />
      </Parameters>
      <Docs>
        <param name="rule">這個作業所套用到的 <see cref="T:System.DirectoryServices.ActiveDirectoryAccessRule" />。</param>
        <summary>從物件的 SACL 移除完全符合指定之稽核規則的所有稽核規則。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetAccessRule">
      <MemberSignature Language="C#" Value="public void ResetAccessRule (System.DirectoryServices.ActiveDirectoryAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetAccessRule(class System.DirectoryServices.ActiveDirectoryAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectorySecurity.ResetAccessRule(System.DirectoryServices.ActiveDirectoryAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetAccessRule (rule As ActiveDirectoryAccessRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetAccessRule(System::DirectoryServices::ActiveDirectoryAccessRule ^ rule);" />
      <MemberSignature Language="F#" Value="member this.ResetAccessRule : System.DirectoryServices.ActiveDirectoryAccessRule -&gt; unit" Usage="activeDirectorySecurity.ResetAccessRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.DirectoryServices.ActiveDirectoryAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule">這個作業所套用到的 <see cref="T:System.DirectoryServices.ActiveDirectoryAccessRule" />。</param>
        <summary>搜尋包含安全識別項 (SID) 之所有存取規則的物件 DACL (這個安全識別項符合在 <paramref name="rule" /> 物件中所指定的 SID)，並以 <paramref name="rule" /> 物件中所包含的存取規則取代所有那些存取規則。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當<xref:System.DirectoryServices.ActiveDirectorySecurity.ResetAccessRule%2A>用來取代物件的 DACL，這兩個允許和拒絕類型的規則就會被取代的特定 SID 的所有存取規則。  若要將不會影響 「 拒絕 」 規則，只允許規則，或取代 「 拒絕 」 規則，而不會影響允許規則，請使用<xref:System.DirectoryServices.ActiveDirectorySecurity.SetAccessRule%2A>改。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetAccessRule">
      <MemberSignature Language="C#" Value="public void SetAccessRule (System.DirectoryServices.ActiveDirectoryAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAccessRule(class System.DirectoryServices.ActiveDirectoryAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectorySecurity.SetAccessRule(System.DirectoryServices.ActiveDirectoryAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetAccessRule (rule As ActiveDirectoryAccessRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAccessRule(System::DirectoryServices::ActiveDirectoryAccessRule ^ rule);" />
      <MemberSignature Language="F#" Value="member this.SetAccessRule : System.DirectoryServices.ActiveDirectoryAccessRule -&gt; unit" Usage="activeDirectorySecurity.SetAccessRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.DirectoryServices.ActiveDirectoryAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule">這個作業所套用到的 <see cref="T:System.DirectoryServices.ActiveDirectoryAccessRule" />。</param>
        <summary>搜尋所有存取規則之物件的 DACL，這些存取規則包含符合 <paramref name="rule" /> 物件中所指定之 SID 的安全識別項 (SID) 和符合 <paramref name="rule" /> 物件中所指定之型別的存取控制型別 (「允許」或「拒絕」)，並以 <paramref name="rule" /> 物件中包含的存取規則取代所有那些存取規則。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當<xref:System.DirectoryServices.ActiveDirectorySecurity.SetAccessRule%2A>用來取代所有存取規則的符合特定的 SID 和存取控制型別 （允許或拒絕） 物件的 DACL，所有規則中，DACL，與 SID 型別符合 SID 和存取控制中包含的型別`rule`物件 are 取代。  使用此方法，開發人員可以針對該物件的 SID 取代任何允許規則，而不會影響現有的拒絕規則，或取代該 SID，該物件上的所有 「 拒絕 」 規則，而不會影響現有的 「 允許 」 規則。  若要取代所有的規則，該物件屬於指定的 SID，不論類型為何，使用<xref:System.DirectoryServices.ActiveDirectorySecurity.ResetAccessRule%2A>改。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetAuditRule">
      <MemberSignature Language="C#" Value="public void SetAuditRule (System.DirectoryServices.ActiveDirectoryAuditRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAuditRule(class System.DirectoryServices.ActiveDirectoryAuditRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectorySecurity.SetAuditRule(System.DirectoryServices.ActiveDirectoryAuditRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetAuditRule (rule As ActiveDirectoryAuditRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAuditRule(System::DirectoryServices::ActiveDirectoryAuditRule ^ rule);" />
      <MemberSignature Language="F#" Value="member this.SetAuditRule : System.DirectoryServices.ActiveDirectoryAuditRule -&gt; unit" Usage="activeDirectorySecurity.SetAuditRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.DirectoryServices.ActiveDirectoryAuditRule" />
      </Parameters>
      <Docs>
        <param name="rule">這個作業所套用到的 <see cref="T:System.DirectoryServices.ActiveDirectoryAccessRule" />。</param>
        <summary>以指定的稽核規則，取代含有與物件的 SACL 中所指定之稽核規則相同安全識別項的所有稽核規則。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>