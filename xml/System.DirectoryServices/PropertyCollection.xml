<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="PropertyCollection.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5d12104b2b75a8b600909da054fd9c89e4ce528d4.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d12104b2b75a8b600909da054fd9c89e4ce528d4</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.DirectoryServices.PropertyCollection">
          <source>The <ph id="ph1">&lt;see cref="T:System.DirectoryServices.PropertyCollection" /&gt;</ph> class contains the properties of a <ph id="ph2">&lt;see cref="T:System.DirectoryServices.DirectoryEntry" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.DirectoryServices.PropertyCollection" /&gt;</ph> 類別包含 <ph id="ph2">&lt;see cref="T:System.DirectoryServices.DirectoryEntry" /&gt;</ph> 的屬性。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.PropertyCollection.Contains(System.String)">
          <source>The name of the property to find.</source>
          <target state="translated">要尋找的屬性名稱。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.PropertyCollection.Contains(System.String)">
          <source>Determines whether the specified property is in this collection.</source>
          <target state="translated">決定指定的屬性是否在這個集合中。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.PropertyCollection.Contains(System.String)">
          <source>The return value is <ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified property belongs to this collection; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果指定的屬性隸屬於這個集合，則傳回值為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.PropertyCollection.CopyTo(System.DirectoryServices.PropertyValueCollection[],System.Int32)">
          <source>The array of <ph id="ph1">&lt;see cref="T:System.DirectoryServices.PropertyValueCollection" /&gt;</ph> objects that receives the elements of this collection.</source>
          <target state="translated">接收此集合項目的 <ph id="ph1">&lt;see cref="T:System.DirectoryServices.PropertyValueCollection" /&gt;</ph> 物件陣列。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.PropertyCollection.CopyTo(System.DirectoryServices.PropertyValueCollection[],System.Int32)">
          <source>The zero-based index in <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> where this method starts copying this collection.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> 中以零起始的索引，這個方法會從此處開始複製這個集合。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.PropertyCollection.CopyTo(System.DirectoryServices.PropertyValueCollection[],System.Int32)">
          <source>Copies the all objects in this collection to an array, starting at the specified index in the target array.</source>
          <target state="translated">從目標陣列的指定索引處開始，將這個集合中的所有物件複製到陣列中。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.PropertyCollection.CopyTo(System.DirectoryServices.PropertyValueCollection[],System.Int32)">
          <source>An error occurred during the call to the underlying interface.</source>
          <target state="translated">呼叫基礎介面期間發生錯誤。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="P:System.DirectoryServices.PropertyCollection.Count">
          <source>Gets the number of properties in this collection.</source>
          <target state="translated">取得這個集合中的屬性數目。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.PropertyCollection.Count">
          <source>The number of properties in this collection.</source>
          <target state="translated">這個集合中的屬性數目。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.PropertyCollection.Count">
          <source>The Internet Information Services (IIS), and WinNT providers do not currently support <ph id="ph1">&lt;xref:System.DirectoryServices.PropertyCollection.Count%2A&gt;</ph>, so each will throw a <ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph>.</source>
          <target state="translated">網際網路資訊服務 (IIS) 和 WinNT 是否目前不支援的提供者<ph id="ph1">&lt;xref:System.DirectoryServices.PropertyCollection.Count%2A&gt;</ph>，因此每個將會擲回<ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="P:System.DirectoryServices.PropertyCollection.Count">
          <source>An error occurred during the call to the underlying interface.</source>
          <target state="translated">呼叫基礎介面期間發生錯誤。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="P:System.DirectoryServices.PropertyCollection.Count">
          <source>The directory cannot report the number of properties.</source>
          <target state="translated">目錄無法報告屬性的數目。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.PropertyCollection.GetEnumerator">
          <source>Returns an enumerator that you can use to iterate through this collection.</source>
          <target state="translated">傳回您可以用來逐一查看這個集合的列舉值。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.PropertyCollection.GetEnumerator">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.IDictionaryEnumerator" /&gt;</ph> that you can use to iterate through this collection.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.IDictionaryEnumerator" /&gt;</ph>，可以用來逐一查看這個集合。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.PropertyCollection.GetEnumerator">
          <source>An error occurred during the call to the underlying interface.</source>
          <target state="translated">呼叫基礎介面期間發生錯誤。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="P:System.DirectoryServices.PropertyCollection.Item(System.String)">
          <source>The name of the property to retrieve.</source>
          <target state="translated">要擷取的屬性名稱。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="P:System.DirectoryServices.PropertyCollection.Item(System.String)">
          <source>Gets the specified property.</source>
          <target state="translated">取得指定的屬性。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.PropertyCollection.Item(System.String)">
          <source>The value of the specified property.</source>
          <target state="translated">指定之屬性的值。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.PropertyCollection.Item(System.String)">
          <source>In C#, this property is the indexer for the <ph id="ph1">&lt;xref:System.DirectoryServices.PropertyCollection&gt;</ph> class.</source>
          <target state="translated">在 C# 中，這個屬性是 <ph id="ph1">&lt;xref:System.DirectoryServices.PropertyCollection&gt;</ph> 類別的索引子。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.PropertyCollection.Item(System.String)">
          <source>In JScript, you can use the default indexed properties defined by a type, but you cannot explicitly define your own.</source>
          <target state="translated">在 JScript，您可以使用類型，所定義的預設索引屬性，但您無法明確地定義您自己。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.PropertyCollection.Item(System.String)">
          <source>However, specifying the expando attribute on a class automatically provides a default indexed property with a type of Object and an index type of <ph id="ph1">&lt;xref:System.String&gt;</ph>.</source>
          <target state="translated">不過，指定 expando 屬性類別上的會自動提供預設值編製索引的索引類型的物件類型與屬性<ph id="ph1">&lt;xref:System.String&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="P:System.DirectoryServices.PropertyCollection.PropertyNames">
          <source>Gets the names of the properties in this collection.</source>
          <target state="translated">取得這個集合中的屬性名稱。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.PropertyCollection.PropertyNames">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> object that contains the names of the properties in this collection.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> 物件，包含這個集合中的屬性名稱。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.PropertyCollection.PropertyNames">
          <source>When accessing members of the <ph id="ph1">&lt;xref:System.DirectoryServices.PropertyCollection.PropertyNames%2A&gt;</ph> property, a <ph id="ph2">&lt;xref:System.Runtime.InteropServices.COMException&gt;</ph> might be thrown due to an error while accessing the underlying interface.</source>
          <target state="translated">存取的成員時<ph id="ph1">&lt;xref:System.DirectoryServices.PropertyCollection.PropertyNames%2A&gt;</ph>屬性，<ph id="ph2">&lt;xref:System.Runtime.InteropServices.COMException&gt;</ph>可能因錯誤而存取的基礎介面時擲回。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.PropertyCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The one-dimensional <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> that is the destination of the elements copied from <ph id="ph2">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>.</source>
          <target state="translated">一維 <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph>，是從 <ph id="ph2">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> 複製過來之項目的目的端。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.PropertyCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> must have zero-based indexing.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> 必須有以零為起始的索引。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.PropertyCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The zero-based index in <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> at which copying begins.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> 中以零起始的索引，複製作業從此處開始。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.PropertyCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>Copies the elements of the <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> to an <ph id="ph2">&lt;see cref="T:System.Array" /&gt;</ph>, starting at a particular <ph id="ph3">&lt;see cref="T:System.Array" /&gt;</ph> index.</source>
          <target state="translated">從特定的 <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> 索引開始，將 <ph id="ph2">&lt;see cref="T:System.Array" /&gt;</ph> 的項目複製至 <ph id="ph3">&lt;see cref="T:System.Array" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.PropertyCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.PropertyCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> 小於零。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.PropertyCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is multidimensional.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> 是多維的。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.PropertyCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.PropertyCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The number of elements in the source <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> is greater than the available space from <ph id="ph2">&lt;paramref name="index" /&gt;</ph> to the end of the destination <ph id="ph3">&lt;paramref name="array" /&gt;</ph>.</source>
          <target state="translated">來源 <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> 中的項目數大於 <ph id="ph2">&lt;paramref name="index" /&gt;</ph> 到目的 <ph id="ph3">&lt;paramref name="array" /&gt;</ph> 結尾的可用空間。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.PropertyCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The type of the source <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> cannot be cast automatically to the type of the destination <ph id="ph2">&lt;paramref name="array" /&gt;</ph>.</source>
          <target state="translated">來源 <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> 的類型無法自動轉換成目的 <ph id="ph2">&lt;paramref name="array" /&gt;</ph> 的類型。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="P:System.DirectoryServices.PropertyCollection.System#Collections#ICollection#IsSynchronized">
          <source>Gets a value indicating whether access to the <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> is synchronized (thread safe).</source>
          <target state="translated">取得值，這個值表示對 <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> 的存取是否同步 (安全執行緒)。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.PropertyCollection.System#Collections#ICollection#IsSynchronized">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if access to the <ph id="ph2">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> is synchronized (thread safe); otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph1">&lt;see langword="true" /&gt;</ph> 的存取為同步 (安全執行緒)，則為 <ph id="ph2">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>，否則為 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.PropertyCollection.System#Collections#ICollection#IsSynchronized">
          <source><ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> returns an object, which can be used to synchronize access to the <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> 會傳回物件，該物件可用來同步處理對 <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph> 的存取。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.PropertyCollection.System#Collections#ICollection#IsSynchronized">
          <source>Most collection classes in the <ph id="ph1">&lt;xref:System.Collections?displayProperty=nameWithType&gt;</ph> namespace also implement a Synchronized method, which provides a synchronized wrapper around the underlying collection.</source>
          <target state="translated">大部分的集合中的類別<ph id="ph1">&lt;xref:System.Collections?displayProperty=nameWithType&gt;</ph>命名空間也會實作同步處理方法，這會提供基礎集合周圍同步處理的包裝函式。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.PropertyCollection.System#Collections#ICollection#IsSynchronized">
          <source>Enumerating through a collection is intrinsically not a thread safe procedure.</source>
          <target state="translated">透過集合進行列舉在本質上並不是執行緒安全的程序。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.PropertyCollection.System#Collections#ICollection#IsSynchronized">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">即使集合經過同步化，其他的執行緒仍可修改該集合，使列舉值擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.PropertyCollection.System#Collections#ICollection#IsSynchronized">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions that result from changes made by other threads.</source>
          <target state="translated">若要保證列舉過程的執行緒安全，您可以在整個列舉過程中鎖定集合，或攔截由其他執行緒的變更所產生的例外狀況。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.PropertyCollection.System#Collections#ICollection#IsSynchronized">
          <source>[Visual Basic, C#]</source>
          <target state="translated">[Visual Basic、 C#]</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.PropertyCollection.System#Collections#ICollection#IsSynchronized">
          <source>The following example shows how to lock the collection using the <ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> during the entire enumeration:</source>
          <target state="translated">下列範例示範如何鎖定集合使用<ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph>在整個列舉過程：</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="P:System.DirectoryServices.PropertyCollection.System#Collections#ICollection#SyncRoot">
          <source>Gets an object that can be used to synchronize access to the <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>.</source>
          <target state="translated">取得可用以同步存取 <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> 的物件。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.PropertyCollection.System#Collections#ICollection#SyncRoot">
          <source>An object that can be used to synchronize access to the <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>.</source>
          <target state="translated">可用以同步存取 <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> 的物件。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.PropertyCollection.System#Collections#ICollection#SyncRoot">
          <source>For collections whose underlying store is not publicly available, the expected implementation is to return the current instance.</source>
          <target state="translated">對於那些無法公開使用基礎存放區的集合而言，所預期的實作會傳回目前的執行個體。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.PropertyCollection.System#Collections#ICollection#SyncRoot">
          <source>Note that the pointer to the current instance might not be sufficient for collections that wrap other collections; those should return the underlying collection's SyncRoot property.</source>
          <target state="translated">請注意目前的執行個體的指標可能無法完全包裝其他集合，集合這些集合應該傳回基礎集合的 SyncRoot 屬性。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.PropertyCollection.System#Collections#ICollection#SyncRoot">
          <source>Most collection classes in the <ph id="ph1">&lt;xref:System.Collections?displayProperty=nameWithType&gt;</ph> namespace also implement a Synchronized method, which provides a synchronized wrapper around the underlying collection.</source>
          <target state="translated">大部分的集合中的類別<ph id="ph1">&lt;xref:System.Collections?displayProperty=nameWithType&gt;</ph>命名空間也會實作同步處理方法，這會提供基礎集合周圍同步處理的包裝函式。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.PropertyCollection.System#Collections#ICollection#SyncRoot">
          <source>However, derived classes can provide their own synchronized version of the collection using the <ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> property.</source>
          <target state="translated">然而，衍生類別 (Derived Class) 可以使用 <ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> 屬性，提供它們自己集合的同步化版本。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.PropertyCollection.System#Collections#ICollection#SyncRoot">
          <source>The synchronizing code must perform operations on the <ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> of the collection, not directly on the collection.</source>
          <target state="translated">同步處理的程式碼必須在上執行作業<ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph>的集合，而不是直接在集合。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.PropertyCollection.System#Collections#ICollection#SyncRoot">
          <source>This ensures proper operation of collections that are derived from other objects.</source>
          <target state="translated">如此可確保衍生自其他物件的集合可以正常運作，</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.PropertyCollection.System#Collections#ICollection#SyncRoot">
          <source>Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the collection instance.</source>
          <target state="translated">特別是可以與其他可能同時修改集合執行個體的執行緒，保持正常的同步處理。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.PropertyCollection.System#Collections#ICollection#SyncRoot">
          <source>In the absence of a Synchronized method on a collection, the expected usage for <ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> looks like this:</source>
          <target state="translated">已同步處理方法的集合，如預期的用法不存在<ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph>看起來像這樣：</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.PropertyCollection.System#Collections#ICollection#SyncRoot">
          <source>Enumerating through a collection is intrinsically not a thread safe procedure.</source>
          <target state="translated">透過集合進行列舉在本質上並不是執行緒安全的程序。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.PropertyCollection.System#Collections#ICollection#SyncRoot">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">即使集合經過同步化，其他的執行緒仍可修改該集合，使列舉值擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.PropertyCollection.System#Collections#ICollection#SyncRoot">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">若要保證列舉過程的執行緒安全，您可以在整個列舉過程中鎖定集合，或攔截由其他執行緒的變更所造成的例外狀況。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.PropertyCollection.System#Collections#ICollection#SyncRoot">
          <source>[Visual Basic, C#]</source>
          <target state="translated">[Visual Basic、 C#]</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.PropertyCollection.System#Collections#ICollection#SyncRoot">
          <source>The following code example shows how to lock the collection using the <ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> during the entire enumeration:</source>
          <target state="translated">下列程式碼範例示範如何鎖定集合使用<ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph>在整個列舉過程：</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Add(System.Object,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> to use as the key of the element to add.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>，用做要加入之項目的索引鍵。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Add(System.Object,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> to use as the value of the element to add.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>，用做要加入之項目的值。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Add(System.Object,System.Object)">
          <source>Adds an element with the provided key and value to the <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> object.</source>
          <target state="translated">將隨附有索引鍵和值的項目加入至 <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> 物件。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Add(System.Object,System.Object)">
          <source>You can also use the <ph id="ph1">&lt;xref:System.Collections.IDictionary.Item%2A&gt;</ph> property to add new elements by setting the value of a key that does not exist in the dictionary (for example, <ph id="ph2">`myCollection["myNonexistentKey"] = myValue`</ph>).</source>
          <target state="translated">您也可以使用<ph id="ph1">&lt;xref:System.Collections.IDictionary.Item%2A&gt;</ph>字典中沒有屬性，以加入新項目索引鍵的值設定 (例如， <ph id="ph2">`myCollection["myNonexistentKey"] = myValue`</ph>)。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Add(System.Object,System.Object)">
          <source>However, if the specified key already exists in the dictionary, setting the <ph id="ph1">&lt;xref:System.Collections.IDictionary.Item%2A&gt;</ph> property overwrites the old value.</source>
          <target state="translated">不過，如果指定的索引鍵已經存在字典中，設定<ph id="ph1">&lt;xref:System.Collections.IDictionary.Item%2A&gt;</ph>屬性會覆寫舊的值。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Add(System.Object,System.Object)">
          <source>In contrast, the <ph id="ph1">&lt;xref:System.Collections.IDictionary.Add%2A&gt;</ph> method does not modify existing elements.</source>
          <target state="translated">相反地，<ph id="ph1">&lt;xref:System.Collections.IDictionary.Add%2A&gt;</ph>方法不會修改現有的項目。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Add(System.Object,System.Object)">
          <source>The following example shows how to implement the <ph id="ph1">&lt;xref:System.Collections.IDictionary.Add%2A&gt;</ph> method.</source>
          <target state="translated">下列範例將示範如何實作 <ph id="ph1">&lt;xref:System.Collections.IDictionary.Add%2A&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Add(System.Object,System.Object)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph> class.</source>
          <target state="translated">這個程式碼範例是針對所提供之較大範例的一部分<ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Add(System.Object,System.Object)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Add(System.Object,System.Object)">
          <source>An element with the same key already exists in the <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> object.</source>
          <target state="translated">具有相同索引鍵的項目已經存在 <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> 物件中。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Add(System.Object,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> is read-only.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> 是唯讀的。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Add(System.Object,System.Object)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Add(System.Object,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> has a fixed size.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> 具有固定的大小。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Clear">
          <source>Removes all elements from the <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> object.</source>
          <target state="translated">將所有項目從 <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> 物件移除。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Clear">
          <source>The following example demonstrates how to implement the <ph id="ph1">&lt;xref:System.Collections.IDictionary.Clear%2A&gt;</ph> method.</source>
          <target state="translated">下列範例示範如何實作<ph id="ph1">&lt;xref:System.Collections.IDictionary.Clear%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Clear">
          <source>This example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph> class.</source>
          <target state="translated">這個範例是針對所提供之較大範例的一部分<ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Clear">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> object is read-only.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> 物件是唯讀的。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Contains(System.Object)">
          <source>The key to locate in the <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> object.</source>
          <target state="translated">要在 <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> 物件中尋找的索引鍵。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Contains(System.Object)">
          <source>Determines whether the <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> object contains an element with the specified key.</source>
          <target state="translated">判斷 <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> 物件是否包含具有指定索引鍵的項目。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Contains(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> contains an element with the key; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph1">&lt;see langword="true" /&gt;</ph> 包含具有該索引鍵的項目，則為 <ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph>，否則為 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Contains(System.Object)">
          <source>The following example demonstrates how to implement the <ph id="ph1">&lt;xref:System.Collections.IDictionary.Contains%2A&gt;</ph> method.</source>
          <target state="translated">下列範例示範如何實作<ph id="ph1">&lt;xref:System.Collections.IDictionary.Contains%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Contains(System.Object)">
          <source>This example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph> class.</source>
          <target state="translated">這個範例是針對所提供之較大範例的一部分<ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Contains(System.Object)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="P:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#IsFixedSize">
          <source>Gets a value indicating whether the <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> object has a fixed size.</source>
          <target state="translated">取得值，指出 <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> 物件是否具有固定的大小。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#IsFixedSize">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> object has a fixed size; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> 物件有固定大小，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#IsFixedSize">
          <source>A collection with a fixed size does not allow the addition or removal of elements after the collection is created, but does allow the modification of existing elements.</source>
          <target state="translated">具有固定大小的集合不允許集合建立後，但允許修改現有的項目後新增或移除項目。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#IsFixedSize">
          <source>A collection with a fixed size is simply a collection with a wrapper that prevents adding and removing elements; therefore, if changes are made to the underlying collection, including the addition or removal of elements, the fixed-size collection reflects those changes.</source>
          <target state="translated">具有固定大小的集合是唯讀的集合只以防止新增或移除項目; 包裝函式因此，如果變更基礎的集合，包括新增或移除項目，固定大小的集合會反映這些變更。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#IsFixedSize">
          <source>The following example demonstrates how to implement the <ph id="ph1">&lt;xref:System.Collections.IDictionary.IsFixedSize%2A&gt;</ph> property.</source>
          <target state="translated">下列範例示範如何實作<ph id="ph1">&lt;xref:System.Collections.IDictionary.IsFixedSize%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#IsFixedSize">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph> class.</source>
          <target state="translated">這個程式碼範例是針對所提供之較大範例的一部分<ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="P:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#IsReadOnly">
          <source>Gets a value indicating whether the <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> object is read-only.</source>
          <target state="translated">取得值，這個值表示 <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> 物件是否唯讀。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#IsReadOnly">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> object is read-only; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> 物件是唯讀，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#IsReadOnly">
          <source>A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.</source>
          <target state="translated">唯讀的集合不允許在集合建立後增加、移除或修改項目。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#IsReadOnly">
          <source>The following example shows how to implement the <ph id="ph1">&lt;xref:System.Collections.IDictionary.IsReadOnly%2A&gt;</ph> property.</source>
          <target state="translated">下列範例示範如何實作<ph id="ph1">&lt;xref:System.Collections.IDictionary.IsReadOnly%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#IsReadOnly">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph> class.</source>
          <target state="translated">這個程式碼範例是針對所提供之較大範例的一部分<ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="P:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Item(System.Object)">
          <source>The key of the element to get or set.</source>
          <target state="translated">要取得或設定之項目的索引鍵。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="P:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Item(System.Object)">
          <source>Gets or sets the element with the specified key.</source>
          <target state="translated">取得或設定具有指定索引鍵的項目。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Item(System.Object)">
          <source>The element with the specified key.</source>
          <target state="translated">具有指定索引鍵的項目。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Item(System.Object)">
          <source>This property provides the ability to access a specific element in the collection by using the following syntax: <ph id="ph1">`myCollection[key]`</ph>.</source>
          <target state="translated">這個屬性可以使用下列語法提供存取集合中特定元素的能力：<ph id="ph1">`myCollection[key]`</ph>。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Item(System.Object)">
          <source>You can also use the <ph id="ph1">&lt;xref:System.Collections.IDictionary.Item%2A&gt;</ph> property to add new elements by setting the value of a key that does not exist in the dictionary (for example, <ph id="ph2">`myCollection["myNonexistentKey"] = myValue`</ph>).</source>
          <target state="translated">您也可以使用<ph id="ph1">&lt;xref:System.Collections.IDictionary.Item%2A&gt;</ph>字典中沒有屬性，以加入新項目索引鍵的值設定 (例如， <ph id="ph2">`myCollection["myNonexistentKey"] = myValue`</ph>)。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Item(System.Object)">
          <source>However, if the specified key already exists in the dictionary, setting the <ph id="ph1">&lt;xref:System.Collections.IDictionary.Item%2A&gt;</ph> property overwrites the old value.</source>
          <target state="translated">不過，如果指定的索引鍵已經存在字典中，設定<ph id="ph1">&lt;xref:System.Collections.IDictionary.Item%2A&gt;</ph>屬性會覆寫舊的值。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Item(System.Object)">
          <source>In contrast, the <ph id="ph1">&lt;xref:System.Collections.IDictionary.Add%2A&gt;</ph> method does not modify existing elements.</source>
          <target state="translated">相反地，<ph id="ph1">&lt;xref:System.Collections.IDictionary.Add%2A&gt;</ph>方法不會修改現有的項目。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Item(System.Object)">
          <source>The following example shows how to implement the <ph id="ph1">&lt;xref:System.Collections.IDictionary.Item%2A&gt;</ph> property.</source>
          <target state="translated">下列範例示範如何實作<ph id="ph1">&lt;xref:System.Collections.IDictionary.Item%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Item(System.Object)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph> class.</source>
          <target state="translated">這個程式碼範例是針對所提供之較大範例的一部分<ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="P:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Item(System.Object)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="P:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Item(System.Object)">
          <source>The property is set and the <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> object is read-only.</source>
          <target state="translated">已設定該屬性，<ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> 物件是唯讀的。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="P:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Item(System.Object)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="P:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Item(System.Object)">
          <source>The property is set, <ph id="ph1">&lt;paramref name="key" /&gt;</ph> does not exist in the collection, and the <ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> has a fixed size.</source>
          <target state="translated">屬性已設定，<ph id="ph1">&lt;paramref name="key" /&gt;</ph> 不存在於集合中，而且 <ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> 具有固定大小。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="P:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Keys">
          <source>Gets an <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> object containing the keys of the <ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> object.</source>
          <target state="translated">取得 <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> 物件，其中包含 <ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> 物件的索引鍵。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Keys">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> object containing the keys of the <ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> 物件，其中包含 <ph id="ph2">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> 物件的索引鍵。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Keys">
          <source>The order of the keys in the returned <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> object is unspecified, but is guaranteed to be the same order as the corresponding values in the <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph> returned by the <ph id="ph3">&lt;xref:System.Collections.IDictionary.Values%2A&gt;</ph> property.</source>
          <target state="translated">在傳回的索引鍵的順序<ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph>物件並未指定，但保證是中的對應值的順序相同<ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph>傳回<ph id="ph3">&lt;xref:System.Collections.IDictionary.Values%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Keys">
          <source>The following example shows how to implement the <ph id="ph1">&lt;xref:System.Collections.IDictionary.Keys%2A&gt;</ph> property.</source>
          <target state="translated">下列範例示範如何實作<ph id="ph1">&lt;xref:System.Collections.IDictionary.Keys%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Keys">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph> class.</source>
          <target state="translated">這個程式碼範例是針對所提供之較大範例的一部分<ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Remove(System.Object)">
          <source>The key of the element to remove.</source>
          <target state="translated">要移除的項目索引鍵。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Remove(System.Object)">
          <source>Removes the element with the specified key from the <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> object.</source>
          <target state="translated">將有指定索引鍵的項目從 <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> 物件移除。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Remove(System.Object)">
          <source>The following example shows how to implement the <ph id="ph1">&lt;xref:System.Collections.IDictionary.Remove%2A&gt;</ph> method.</source>
          <target state="translated">下列範例將示範如何實作 <ph id="ph1">&lt;xref:System.Collections.IDictionary.Remove%2A&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Remove(System.Object)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph> class.</source>
          <target state="translated">這個程式碼範例是針對所提供之較大範例的一部分<ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Remove(System.Object)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Remove(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> object is read-only.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> 物件是唯讀的。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Remove(System.Object)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Remove(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> has a fixed size.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.IDictionary" /&gt;</ph> 具有固定的大小。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.PropertyCollection.System#Collections#IEnumerable#GetEnumerator">
          <source>Returns an <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerable" /&gt;</ph> object.</source>
          <target state="translated">傳回 <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerable" /&gt;</ph> 物件。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.PropertyCollection.System#Collections#IEnumerable#GetEnumerator">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerable" /&gt;</ph>.object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.IEnumerable" /&gt;</ph> 物件。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.DirectoryServices.PropertyCollection.System#Collections#IEnumerable#GetEnumerator">
          <source>[Visual Basic, C#]</source>
          <target state="translated">[Visual Basic、 C#]</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.DirectoryServices.PropertyCollection.System#Collections#IEnumerable#GetEnumerator">
          <source>The <ph id="ph1">`foreach`</ph> statement of the C# language (<ph id="ph2">`for each`</ph> in Visual Basic) hides the complexity of the enumerators.</source>
          <target state="translated">C# 語言的 <ph id="ph1">`foreach`</ph> 陳述式 (在 Visual Basic 中為 <ph id="ph2">`for each`</ph>) 會隱藏列舉值的複雜度。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.DirectoryServices.PropertyCollection.System#Collections#IEnumerable#GetEnumerator">
          <source>Therefore, using <ph id="ph1">`foreach`</ph> is recommended instead of directly manipulating the enumerator.</source>
          <target state="translated">因此，使用<ph id="ph1">`foreach`</ph>建議而不是直接管理 列舉值。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.DirectoryServices.PropertyCollection.System#Collections#IEnumerable#GetEnumerator">
          <source>Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</source>
          <target state="translated">列舉程式可以用來讀取集合中的資料，但是無法用來修改基礎集合。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.DirectoryServices.PropertyCollection.System#Collections#IEnumerable#GetEnumerator">
          <source>Initially, the enumerator is positioned before the first element in the collection.</source>
          <target state="translated">一開始，列舉程式位在集合中的第一個項目之前。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.DirectoryServices.PropertyCollection.System#Collections#IEnumerable#GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> also brings the enumerator back to this position.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> 也會將列舉值帶回至這個位置。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.DirectoryServices.PropertyCollection.System#Collections#IEnumerable#GetEnumerator">
          <source>At this position, the <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> property is undefined.</source>
          <target state="translated">此位置<ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>未定義屬性。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.DirectoryServices.PropertyCollection.System#Collections#IEnumerable#GetEnumerator">
          <source>Therefore, you must call <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> to advance the enumerator to the first element of the collection before reading the value of <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>.</source>
          <target state="translated">因此，在讀取 <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> 的值之前，必須呼叫 <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> 以將列舉值前移至集合的第一個項目。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.DirectoryServices.PropertyCollection.System#Collections#IEnumerable#GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> returns the same object until either <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> 會傳回相同的物件直到呼叫 <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> 或 <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.DirectoryServices.PropertyCollection.System#Collections#IEnumerable#GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> sets <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> to the next element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> 會將 <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> 設定為下一個項目。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.DirectoryServices.PropertyCollection.System#Collections#IEnumerable#GetEnumerator">
          <source>If <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> passes the end of the collection, the enumerator is positioned after the last element in the collection and <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returns <ph id="ph3">`false`</ph>.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>超過集合的列舉值的結尾會位於集合中的最後一個元素之後和<ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>傳回<ph id="ph3">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.DirectoryServices.PropertyCollection.System#Collections#IEnumerable#GetEnumerator">
          <source>When the enumerator is at this position, subsequent calls to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> also return <ph id="ph2">`false`</ph>.</source>
          <target state="translated">列舉值位於這個位置上，後續呼叫<ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>也會傳回<ph id="ph2">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.DirectoryServices.PropertyCollection.System#Collections#IEnumerable#GetEnumerator">
          <source>If the last call to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returned <ph id="ph2">`false`</ph>, <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> is undefined.</source>
          <target state="translated">如果最後一個呼叫<ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>傳回<ph id="ph2">`false`</ph>，<ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>是未定義。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.DirectoryServices.PropertyCollection.System#Collections#IEnumerable#GetEnumerator">
          <source>To set <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> to the first element of the collection again, you can call <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> followed by <ph id="ph3">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>.</source>
          <target state="translated">若要再次將 <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> 設定為集合的第一個元素，您可以在呼叫 <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> 之後，接著呼叫 <ph id="ph3">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.DirectoryServices.PropertyCollection.System#Collections#IEnumerable#GetEnumerator">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">只要集合維持不變，列舉程式就持續有效。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.DirectoryServices.PropertyCollection.System#Collections#IEnumerable#GetEnumerator">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</source>
          <target state="translated">如果對集合進行變更，例如加入、修改或刪除項目，列舉程式會永久失效，且其行為未定義。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.DirectoryServices.PropertyCollection.System#Collections#IEnumerable#GetEnumerator">
          <source>The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">列舉程式沒有集合的獨佔存取權，因此，列舉集合內容本質上並不是安全的執行緒程序。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.DirectoryServices.PropertyCollection.System#Collections#IEnumerable#GetEnumerator">
          <source>To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</source>
          <target state="translated">若要確保列舉期間的執行緒安全性，您可以在整個列舉期間鎖定集合。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.DirectoryServices.PropertyCollection.System#Collections#IEnumerable#GetEnumerator">
          <source>To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</source>
          <target state="translated">若要讓多重執行緒能夠存取集合以便進行讀取和寫入，您必須實作自己的同步處理。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="P:System.DirectoryServices.PropertyCollection.Values">
          <source>Gets the values of the properties in this collection.</source>
          <target state="translated">取得這個集合中的屬性值。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.PropertyCollection.Values">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> that contains the values of the properties in this collection.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>，包含這個集合中的屬性值。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.PropertyCollection.Values">
          <source>When accessing members of the <ph id="ph1">&lt;xref:System.DirectoryServices.PropertyCollection.Values%2A&gt;</ph> property, a <ph id="ph2">&lt;xref:System.Runtime.InteropServices.COMException&gt;</ph> exception might be thrown due to an error while accessing the underlying interface.</source>
          <target state="translated">存取的成員時<ph id="ph1">&lt;xref:System.DirectoryServices.PropertyCollection.Values%2A&gt;</ph>屬性，<ph id="ph2">&lt;xref:System.Runtime.InteropServices.COMException&gt;</ph>例外狀況可能會擲回因為發生錯誤時存取基礎介面。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>