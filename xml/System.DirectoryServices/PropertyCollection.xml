<Type Name="PropertyCollection" FullName="System.DirectoryServices.PropertyCollection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d12104b2b75a8b600909da054fd9c89e4ce528d4" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class PropertyCollection : System.Collections.IDictionary" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PropertyCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IDictionary, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.DirectoryServices.PropertyCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class PropertyCollection&#xA;Implements IDictionary" />
  <TypeSignature Language="C++ CLI" Value="public ref class PropertyCollection : System::Collections::IDictionary" />
  <AssemblyInfo>
    <AssemblyName>System.DirectoryServices</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IDictionary</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="a3bd2-101">
        <see cref="T:System.DirectoryServices.PropertyCollection" /> 類別包含 <see cref="T:System.DirectoryServices.DirectoryEntry" /> 的屬性。</span>
      <span class="sxs-lookup">
        <span data-stu-id="a3bd2-101">The <see cref="T:System.DirectoryServices.PropertyCollection" /> class contains the properties of a <see cref="T:System.DirectoryServices.DirectoryEntry" />.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
    <permission cref="T:System.DirectoryServices.DirectoryServicesPermission">
      <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />
    </permission>
  </Docs>
  <Members>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.PropertyCollection.Contains(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (propertyName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::String ^ propertyName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName">
          <span data-ttu-id="a3bd2-102">要尋找的屬性名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3bd2-102">The name of the property to find.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a3bd2-103">決定指定的屬性是否在這個集合中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3bd2-103">Determines whether the specified property is in this collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a3bd2-104">如果指定的屬性隸屬於這個集合，則傳回值為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3bd2-104">The return value is <see langword="true" /> if the specified property belongs to this collection; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.DirectoryServices.PropertyValueCollection[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.DirectoryServices.PropertyValueCollection[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.PropertyCollection.CopyTo(System.DirectoryServices.PropertyValueCollection[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As PropertyValueCollection(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;System::DirectoryServices::PropertyValueCollection ^&gt; ^ array, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.DirectoryServices.PropertyValueCollection[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="a3bd2-105">接收此集合項目的 <see cref="T:System.DirectoryServices.PropertyValueCollection" /> 物件陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3bd2-105">The array of <see cref="T:System.DirectoryServices.PropertyValueCollection" /> objects that receives the elements of this collection.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="a3bd2-106">
            <c>array</c> 中以零起始的索引，這個方法會從此處開始複製這個集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3bd2-106">The zero-based index in <c>array</c> where this method starts copying this collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a3bd2-107">從目標陣列的指定索引處開始，將這個集合中的所有物件複製到陣列中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3bd2-107">Copies the all objects in this collection to an array, starting at the specified index in the target array.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">
          <span data-ttu-id="a3bd2-108">呼叫基礎介面期間發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3bd2-108">An error occurred during the call to the underlying interface.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.PropertyCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a3bd2-109">取得這個集合中的屬性數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3bd2-109">Gets the number of properties in this collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a3bd2-110">這個集合中的屬性數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3bd2-110">The number of properties in this collection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3bd2-111">網際網路資訊服務 (IIS) 和 WinNT 是否目前不支援的提供者<xref:System.DirectoryServices.PropertyCollection.Count%2A>，因此每個將會擲回<xref:System.NotSupportedException>。</span><span class="sxs-lookup"><span data-stu-id="a3bd2-111">The Internet Information Services (IIS), and WinNT providers do not currently support <xref:System.DirectoryServices.PropertyCollection.Count%2A>, so each will throw a <xref:System.NotSupportedException>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">
          <span data-ttu-id="a3bd2-112">呼叫基礎介面期間發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3bd2-112">An error occurred during the call to the underlying interface.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="a3bd2-113">目錄無法報告屬性的數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3bd2-113">The directory cannot report the number of properties.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IDictionaryEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IDictionaryEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.PropertyCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IDictionaryEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IDictionaryEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionaryEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a3bd2-114">傳回您可以用來逐一查看這個集合的列舉值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3bd2-114">Returns an enumerator that you can use to iterate through this collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a3bd2-115">
            <see cref="T:System.Collections.IDictionaryEnumerator" />，可以用來逐一查看這個集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3bd2-115">An <see cref="T:System.Collections.IDictionaryEnumerator" /> that you can use to iterate through this collection.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">
          <span data-ttu-id="a3bd2-116">呼叫基礎介面期間發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3bd2-116">An error occurred during the call to the underlying interface.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.PropertyValueCollection this[string propertyName] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.DirectoryServices.PropertyValueCollection Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.PropertyCollection.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(propertyName As String) As PropertyValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::DirectoryServices::PropertyValueCollection ^ default[System::String ^] { System::DirectoryServices::PropertyValueCollection ^ get(System::String ^ propertyName); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.PropertyValueCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName">
          <span data-ttu-id="a3bd2-117">要擷取的屬性名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3bd2-117">The name of the property to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a3bd2-118">取得指定的屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3bd2-118">Gets the specified property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a3bd2-119">指定之屬性的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3bd2-119">The value of the specified property.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3bd2-120">在 C# 中，這個屬性是 <xref:System.DirectoryServices.PropertyCollection> 類別的索引子。</span><span class="sxs-lookup"><span data-stu-id="a3bd2-120">In C#, this property is the indexer for the <xref:System.DirectoryServices.PropertyCollection> class.</span></span>  
  
 <span data-ttu-id="a3bd2-121">在 JScript，您可以使用類型，所定義的預設索引屬性，但您無法明確地定義您自己。</span><span class="sxs-lookup"><span data-stu-id="a3bd2-121">In JScript, you can use the default indexed properties defined by a type, but you cannot explicitly define your own.</span></span> <span data-ttu-id="a3bd2-122">不過，指定 expando 屬性類別上的會自動提供預設值編製索引的索引類型的物件類型與屬性<xref:System.String>。</span><span class="sxs-lookup"><span data-stu-id="a3bd2-122">However, specifying the expando attribute on a class automatically provides a default indexed property with a type of Object and an index type of <xref:System.String>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyNames">
      <MemberSignature Language="C#" Value="public System.Collections.ICollection PropertyNames { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection PropertyNames" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.PropertyCollection.PropertyNames" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PropertyNames As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ICollection ^ PropertyNames { System::Collections::ICollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a3bd2-123">取得這個集合中的屬性名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3bd2-123">Gets the names of the properties in this collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a3bd2-124">
            <see cref="T:System.Collections.ICollection" /> 物件，包含這個集合中的屬性名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3bd2-124">An <see cref="T:System.Collections.ICollection" /> object that contains the names of the properties in this collection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3bd2-125">存取的成員時<xref:System.DirectoryServices.PropertyCollection.PropertyNames%2A>屬性，<xref:System.Runtime.InteropServices.COMException>可能因錯誤而存取的基礎介面時擲回。</span><span class="sxs-lookup"><span data-stu-id="a3bd2-125">When accessing members of the <xref:System.DirectoryServices.PropertyCollection.PropertyNames%2A> property, a <xref:System.Runtime.InteropServices.COMException> might be thrown due to an error while accessing the underlying interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.PropertyCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ array, int index) = System::Collections::ICollection::CopyTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="a3bd2-126">一維 <see cref="T:System.Array" />，是從 <see cref="T:System.Collections.ICollection" /> 複製過來之項目的目的端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3bd2-126">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.ICollection" />.</span>
          </span>
          <span data-ttu-id="a3bd2-127">
            <see cref="T:System.Array" /> 必須有以零為起始的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3bd2-127">The <see cref="T:System.Array" /> must have zero-based indexing.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="a3bd2-128">
            <c>array</c> 中以零起始的索引，複製作業從此處開始。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3bd2-128">The zero-based index in <c>array</c> at which copying begins.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a3bd2-129">從特定的 <see cref="T:System.Collections.ICollection" /> 索引開始，將 <see cref="T:System.Array" /> 的項目複製至 <see cref="T:System.Array" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3bd2-129">Copies the elements of the <see cref="T:System.Collections.ICollection" /> to an <see cref="T:System.Array" />, starting at a particular <see cref="T:System.Array" /> index.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a3bd2-130">
            <paramref name="array" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3bd2-130">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="a3bd2-131">
            <paramref name="index" /> 小於零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3bd2-131">
              <paramref name="index" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a3bd2-132">
            <paramref name="array" /> 是多維的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3bd2-132">
              <paramref name="array" /> is multidimensional.</span>
          </span>
          <span data-ttu-id="a3bd2-133">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3bd2-133">-or-</span>
          </span>
          <span data-ttu-id="a3bd2-134">來源 <see cref="T:System.Collections.ICollection" /> 中的項目數大於 <paramref name="index" /> 到目的 <paramref name="array" /> 結尾的可用空間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3bd2-134">The number of elements in the source <see cref="T:System.Collections.ICollection" /> is greater than the available space from <paramref name="index" /> to the end of the destination <paramref name="array" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="a3bd2-135">來源 <see cref="T:System.Collections.ICollection" /> 的類型無法自動轉換成目的 <paramref name="array" /> 的類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3bd2-135">The type of the source <see cref="T:System.Collections.ICollection" /> cannot be cast automatically to the type of the destination <paramref name="array" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.PropertyCollection.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.ICollection.IsSynchronized { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a3bd2-136">取得值，這個值表示對 <see cref="T:System.Collections.ICollection" /> 的存取是否同步 (安全執行緒)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3bd2-136">Gets a value indicating whether access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a3bd2-137">如果 <see langword="true" /> 的存取為同步 (安全執行緒)，則為 <see cref="T:System.Collections.ICollection" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3bd2-137">
              <see langword="true" /> if access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe); otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3bd2-138"><xref:System.Collections.ICollection.SyncRoot%2A> 會傳回物件，該物件可用來同步處理對 <xref:System.Collections.ICollection> 的存取。</span><span class="sxs-lookup"><span data-stu-id="a3bd2-138"><xref:System.Collections.ICollection.SyncRoot%2A> returns an object, which can be used to synchronize access to the <xref:System.Collections.ICollection>.</span></span>  
  
 <span data-ttu-id="a3bd2-139">大部分的集合中的類別<xref:System.Collections?displayProperty=nameWithType>命名空間也會實作同步處理方法，這會提供基礎集合周圍同步處理的包裝函式。</span><span class="sxs-lookup"><span data-stu-id="a3bd2-139">Most collection classes in the <xref:System.Collections?displayProperty=nameWithType> namespace also implement a Synchronized method, which provides a synchronized wrapper around the underlying collection.</span></span>  
  
 <span data-ttu-id="a3bd2-140">透過集合進行列舉在本質上並不是執行緒安全的程序。</span><span class="sxs-lookup"><span data-stu-id="a3bd2-140">Enumerating through a collection is intrinsically not a thread safe procedure.</span></span> <span data-ttu-id="a3bd2-141">即使集合經過同步化，其他的執行緒仍可修改該集合，使列舉值擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="a3bd2-141">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="a3bd2-142">若要保證列舉過程的執行緒安全，您可以在整個列舉過程中鎖定集合，或攔截由其他執行緒的變更所產生的例外狀況。</span><span class="sxs-lookup"><span data-stu-id="a3bd2-142">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions that result from changes made by other threads.</span></span>  
  
 <span data-ttu-id="a3bd2-143">[Visual Basic、 C#]</span><span class="sxs-lookup"><span data-stu-id="a3bd2-143">[Visual Basic, C#]</span></span>  
  
 <span data-ttu-id="a3bd2-144">下列範例示範如何鎖定集合使用<xref:System.Collections.ICollection.SyncRoot%2A>在整個列舉過程：</span><span class="sxs-lookup"><span data-stu-id="a3bd2-144">The following example shows how to lock the collection using the <xref:System.Collections.ICollection.SyncRoot%2A> during the entire enumeration:</span></span>  
  
```csharp  
ICollection myCollection = new ICollection();  
  lock(myCollection.SyncRoot) {  
  foreach (Object item in myCollection) {  
  // Insert your code here.  
  }  
 }  
```  
  
```vb  
Dim myCollection As New ICollection()  
 Dim item As Object  
 SyncLock myCollection.SyncRoot  
  For Each item In myCollection  
  ' Insert your code here.  
  Next item  
 End SyncLock  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ICollection.SyncRoot" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.PropertyCollection.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.ICollection.SyncRoot { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a3bd2-145">取得可用以同步存取 <see cref="T:System.Collections.ICollection" /> 的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3bd2-145">Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a3bd2-146">可用以同步存取 <see cref="T:System.Collections.ICollection" /> 的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3bd2-146">An object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3bd2-147">對於那些無法公開使用基礎存放區的集合而言，所預期的實作會傳回目前的執行個體。</span><span class="sxs-lookup"><span data-stu-id="a3bd2-147">For collections whose underlying store is not publicly available, the expected implementation is to return the current instance.</span></span> <span data-ttu-id="a3bd2-148">請注意目前的執行個體的指標可能無法完全包裝其他集合，集合這些集合應該傳回基礎集合的 SyncRoot 屬性。</span><span class="sxs-lookup"><span data-stu-id="a3bd2-148">Note that the pointer to the current instance might not be sufficient for collections that wrap other collections; those should return the underlying collection's SyncRoot property.</span></span>  
  
 <span data-ttu-id="a3bd2-149">大部分的集合中的類別<xref:System.Collections?displayProperty=nameWithType>命名空間也會實作同步處理方法，這會提供基礎集合周圍同步處理的包裝函式。</span><span class="sxs-lookup"><span data-stu-id="a3bd2-149">Most collection classes in the <xref:System.Collections?displayProperty=nameWithType> namespace also implement a Synchronized method, which provides a synchronized wrapper around the underlying collection.</span></span> <span data-ttu-id="a3bd2-150">然而，衍生類別 (Derived Class) 可以使用 <xref:System.Collections.ICollection.SyncRoot%2A> 屬性，提供它們自己集合的同步化版本。</span><span class="sxs-lookup"><span data-stu-id="a3bd2-150">However, derived classes can provide their own synchronized version of the collection using the <xref:System.Collections.ICollection.SyncRoot%2A> property.</span></span> <span data-ttu-id="a3bd2-151">同步處理的程式碼必須在上執行作業<xref:System.Collections.ICollection.SyncRoot%2A>的集合，而不是直接在集合。</span><span class="sxs-lookup"><span data-stu-id="a3bd2-151">The synchronizing code must perform operations on the <xref:System.Collections.ICollection.SyncRoot%2A> of the collection, not directly on the collection.</span></span> <span data-ttu-id="a3bd2-152">如此可確保衍生自其他物件的集合可以正常運作，</span><span class="sxs-lookup"><span data-stu-id="a3bd2-152">This ensures proper operation of collections that are derived from other objects.</span></span> <span data-ttu-id="a3bd2-153">特別是可以與其他可能同時修改集合執行個體的執行緒，保持正常的同步處理。</span><span class="sxs-lookup"><span data-stu-id="a3bd2-153">Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the collection instance.</span></span>  
  
 <span data-ttu-id="a3bd2-154">已同步處理方法的集合，如預期的用法不存在<xref:System.Collections.ICollection.SyncRoot%2A>看起來像這樣：</span><span class="sxs-lookup"><span data-stu-id="a3bd2-154">In the absence of a Synchronized method on a collection, the expected usage for <xref:System.Collections.ICollection.SyncRoot%2A> looks like this:</span></span>  
  
```csharp  
ICollection MyCollection =...  
 lock(MyCollection.SyncRoot) {  
  // Some operation on the collection, which is now thread safe.  
 }  
```  
  
```vb  
Dim myCollection as New ICollection()  
 SyncLock myCollection.SyncRoot  
  ' Some operation on the collection, which is now thread safe.  
 End SyncLock  
```  
  
 <span data-ttu-id="a3bd2-155">透過集合進行列舉在本質上並不是執行緒安全的程序。</span><span class="sxs-lookup"><span data-stu-id="a3bd2-155">Enumerating through a collection is intrinsically not a thread safe procedure.</span></span> <span data-ttu-id="a3bd2-156">即使集合經過同步化，其他的執行緒仍可修改該集合，使列舉值擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="a3bd2-156">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="a3bd2-157">若要保證列舉過程的執行緒安全，您可以在整個列舉過程中鎖定集合，或攔截由其他執行緒的變更所造成的例外狀況。</span><span class="sxs-lookup"><span data-stu-id="a3bd2-157">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
 <span data-ttu-id="a3bd2-158">[Visual Basic、 C#]</span><span class="sxs-lookup"><span data-stu-id="a3bd2-158">[Visual Basic, C#]</span></span>  
  
 <span data-ttu-id="a3bd2-159">下列程式碼範例示範如何鎖定集合使用<xref:System.Collections.ICollection.SyncRoot%2A>在整個列舉過程：</span><span class="sxs-lookup"><span data-stu-id="a3bd2-159">The following code example shows how to lock the collection using the <xref:System.Collections.ICollection.SyncRoot%2A> during the entire enumeration:</span></span>  
  
```csharp  
ICollection myCollection = new ICollection();  
 lock(myCollection.SyncRoot) {  
  foreach (Object item in myCollection) {  
  // Insert your code here.  
  }  
 }  
```  
  
```vb  
Dim myCollection As New ICollection()  
 Dim item As Object  
 SyncLock myCollection.SyncRoot  
  For Each item In myCollection  
  ' Insert your code here.  
  Next item  
 End SyncLock  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ICollection.IsSynchronized" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.Add">
      <MemberSignature Language="C#" Value="void IDictionary.Add (object key, object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IDictionary.Add(object key, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Add(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Add (key As Object, value As Object) Implements IDictionary.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IDictionary.Add(System::Object ^ key, System::Object ^ value) = System::Collections::IDictionary::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.Add(System.Object,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="a3bd2-160">
            <see cref="T:System.Object" />，用做要加入之項目的索引鍵。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3bd2-160">The <see cref="T:System.Object" /> to use as the key of the element to add.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="a3bd2-161">
            <see cref="T:System.Object" />，用做要加入之項目的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3bd2-161">The <see cref="T:System.Object" /> to use as the value of the element to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a3bd2-162">將隨附有索引鍵和值的項目加入至 <see cref="T:System.Collections.IDictionary" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3bd2-162">Adds an element with the provided key and value to the <see cref="T:System.Collections.IDictionary" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3bd2-163">您也可以使用<xref:System.Collections.IDictionary.Item%2A>字典中沒有屬性，以加入新項目索引鍵的值設定 (例如， `myCollection["myNonexistentKey"] = myValue`)。</span><span class="sxs-lookup"><span data-stu-id="a3bd2-163">You can also use the <xref:System.Collections.IDictionary.Item%2A> property to add new elements by setting the value of a key that does not exist in the dictionary (for example, `myCollection["myNonexistentKey"] = myValue`).</span></span> <span data-ttu-id="a3bd2-164">不過，如果指定的索引鍵已經存在字典中，設定<xref:System.Collections.IDictionary.Item%2A>屬性會覆寫舊的值。</span><span class="sxs-lookup"><span data-stu-id="a3bd2-164">However, if the specified key already exists in the dictionary, setting the <xref:System.Collections.IDictionary.Item%2A> property overwrites the old value.</span></span> <span data-ttu-id="a3bd2-165">相反地，<xref:System.Collections.IDictionary.Add%2A>方法不會修改現有的項目。</span><span class="sxs-lookup"><span data-stu-id="a3bd2-165">In contrast, the <xref:System.Collections.IDictionary.Add%2A> method does not modify existing elements.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a3bd2-166">下列範例將示範如何實作 <xref:System.Collections.IDictionary.Add%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="a3bd2-166">The following example shows how to implement the <xref:System.Collections.IDictionary.Add%2A> method.</span></span> <span data-ttu-id="a3bd2-167">這個程式碼範例是針對所提供之較大範例的一部分<xref:System.Collections.IDictionary>類別。</span><span class="sxs-lookup"><span data-stu-id="a3bd2-167">This code example is part of a larger example provided for the <xref:System.Collections.IDictionary> class.</span></span>  
  
 [!code-cpp[Dictionary#9](~/samples/snippets/cpp/VS_Snippets_CLR/Dictionary/cpp/Dictionary.cpp#9)]
 [!code-csharp[Dictionary#9](~/samples/snippets/csharp/VS_Snippets_CLR/Dictionary/CS/Dictionary.cs#9)]
 [!code-vb[Dictionary#9](~/samples/snippets/visualbasic/VS_Snippets_CLR/Dictionary/VB/Dictionary.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a3bd2-168">
            <paramref name="key" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3bd2-168">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a3bd2-169">具有相同索引鍵的項目已經存在 <see cref="T:System.Collections.IDictionary" /> 物件中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3bd2-169">An element with the same key already exists in the <see cref="T:System.Collections.IDictionary" /> object.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="a3bd2-170">
            <see cref="T:System.Collections.IDictionary" /> 是唯讀的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3bd2-170">The <see cref="T:System.Collections.IDictionary" /> is read-only.</span>
          </span>
          <span data-ttu-id="a3bd2-171">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3bd2-171">-or-</span>
          </span>
          <span data-ttu-id="a3bd2-172">
            <see cref="T:System.Collections.IDictionary" /> 具有固定的大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3bd2-172">The <see cref="T:System.Collections.IDictionary" /> has a fixed size.</span>
          </span>
        </exception>
        <altmember cref="P:System.Collections.IDictionary.Item(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.Clear">
      <MemberSignature Language="C#" Value="void IDictionary.Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IDictionary.Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Clear" />
      <MemberSignature Language="VB.NET" Value="Sub Clear () Implements IDictionary.Clear" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IDictionary.Clear() = System::Collections::IDictionary::Clear;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a3bd2-173">將所有項目從 <see cref="T:System.Collections.IDictionary" /> 物件移除。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3bd2-173">Removes all elements from the <see cref="T:System.Collections.IDictionary" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a3bd2-174">下列範例示範如何實作<xref:System.Collections.IDictionary.Clear%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="a3bd2-174">The following example demonstrates how to implement the <xref:System.Collections.IDictionary.Clear%2A> method.</span></span> <span data-ttu-id="a3bd2-175">這個範例是針對所提供之較大範例的一部分<xref:System.Collections.IDictionary>類別。</span><span class="sxs-lookup"><span data-stu-id="a3bd2-175">This example is part of a larger example provided for the <xref:System.Collections.IDictionary> class.</span></span>  
  
 [!code-cpp[Dictionary#8](~/samples/snippets/cpp/VS_Snippets_CLR/Dictionary/cpp/Dictionary.cpp#8)]
 [!code-csharp[Dictionary#8](~/samples/snippets/csharp/VS_Snippets_CLR/Dictionary/CS/Dictionary.cs#8)]
 [!code-vb[Dictionary#8](~/samples/snippets/visualbasic/VS_Snippets_CLR/Dictionary/VB/Dictionary.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="a3bd2-176">
            <see cref="T:System.Collections.IDictionary" /> 物件是唯讀的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3bd2-176">The <see cref="T:System.Collections.IDictionary" /> object is read-only.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.Contains">
      <MemberSignature Language="C#" Value="bool IDictionary.Contains (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IDictionary.Contains(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (value As Object) As Boolean Implements IDictionary.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IDictionary.Contains(System::Object ^ value) = System::Collections::IDictionary::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="a3bd2-177">要在 <see cref="T:System.Collections.IDictionary" /> 物件中尋找的索引鍵。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3bd2-177">The key to locate in the <see cref="T:System.Collections.IDictionary" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a3bd2-178">判斷 <see cref="T:System.Collections.IDictionary" /> 物件是否包含具有指定索引鍵的項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3bd2-178">Determines whether the <see cref="T:System.Collections.IDictionary" /> object contains an element with the specified key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a3bd2-179">如果 <see langword="true" /> 包含具有該索引鍵的項目，則為 <see cref="T:System.Collections.IDictionary" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3bd2-179">
              <see langword="true" /> if the <see cref="T:System.Collections.IDictionary" /> contains an element with the key; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a3bd2-180">下列範例示範如何實作<xref:System.Collections.IDictionary.Contains%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="a3bd2-180">The following example demonstrates how to implement the <xref:System.Collections.IDictionary.Contains%2A> method.</span></span> <span data-ttu-id="a3bd2-181">這個範例是針對所提供之較大範例的一部分<xref:System.Collections.IDictionary>類別。</span><span class="sxs-lookup"><span data-stu-id="a3bd2-181">This example is part of a larger example provided for the <xref:System.Collections.IDictionary> class.</span></span>  
  
 [!code-cpp[Dictionary#5](~/samples/snippets/cpp/VS_Snippets_CLR/Dictionary/cpp/Dictionary.cpp#5)]
 [!code-csharp[Dictionary#5](~/samples/snippets/csharp/VS_Snippets_CLR/Dictionary/CS/Dictionary.cs#5)]
 [!code-vb[Dictionary#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/Dictionary/VB/Dictionary.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a3bd2-182">
            <paramref name="key" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3bd2-182">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IDictionary.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IDictionary.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IDictionary.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.IDictionary.IsFixedSize { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a3bd2-183">取得值，指出 <see cref="T:System.Collections.IDictionary" /> 物件是否具有固定的大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3bd2-183">Gets a value indicating whether the <see cref="T:System.Collections.IDictionary" /> object has a fixed size.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a3bd2-184">如果 <see cref="T:System.Collections.IDictionary" /> 物件有固定大小，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3bd2-184">
              <see langword="true" /> if the <see cref="T:System.Collections.IDictionary" /> object has a fixed size; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3bd2-185">具有固定大小的集合不允許集合建立後，但允許修改現有的項目後新增或移除項目。</span><span class="sxs-lookup"><span data-stu-id="a3bd2-185">A collection with a fixed size does not allow the addition or removal of elements after the collection is created, but does allow the modification of existing elements.</span></span>  
  
 <span data-ttu-id="a3bd2-186">具有固定大小的集合是唯讀的集合只以防止新增或移除項目; 包裝函式因此，如果變更基礎的集合，包括新增或移除項目，固定大小的集合會反映這些變更。</span><span class="sxs-lookup"><span data-stu-id="a3bd2-186">A collection with a fixed size is simply a collection with a wrapper that prevents adding and removing elements; therefore, if changes are made to the underlying collection, including the addition or removal of elements, the fixed-size collection reflects those changes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a3bd2-187">下列範例示範如何實作<xref:System.Collections.IDictionary.IsFixedSize%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="a3bd2-187">The following example demonstrates how to implement the <xref:System.Collections.IDictionary.IsFixedSize%2A> property.</span></span> <span data-ttu-id="a3bd2-188">這個程式碼範例是針對所提供之較大範例的一部分<xref:System.Collections.IDictionary>類別。</span><span class="sxs-lookup"><span data-stu-id="a3bd2-188">This code example is part of a larger example provided for the <xref:System.Collections.IDictionary> class.</span></span>  
  
 [!code-cpp[Dictionary#6](~/samples/snippets/cpp/VS_Snippets_CLR/Dictionary/cpp/Dictionary.cpp#6)]
 [!code-csharp[Dictionary#6](~/samples/snippets/csharp/VS_Snippets_CLR/Dictionary/CS/Dictionary.cs#6)]
 [!code-vb[Dictionary#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/Dictionary/VB/Dictionary.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.IDictionary.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IDictionary.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements IDictionary.IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.IDictionary.IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a3bd2-189">取得值，這個值表示 <see cref="T:System.Collections.IDictionary" /> 物件是否唯讀。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3bd2-189">Gets a value indicating whether the <see cref="T:System.Collections.IDictionary" /> object is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a3bd2-190">如果 <see cref="T:System.Collections.IDictionary" /> 物件是唯讀，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3bd2-190">
              <see langword="true" /> if the <see cref="T:System.Collections.IDictionary" /> object is read-only; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3bd2-191">唯讀的集合不允許在集合建立後增加、移除或修改項目。</span><span class="sxs-lookup"><span data-stu-id="a3bd2-191">A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a3bd2-192">下列範例示範如何實作<xref:System.Collections.IDictionary.IsReadOnly%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="a3bd2-192">The following example shows how to implement the <xref:System.Collections.IDictionary.IsReadOnly%2A> property.</span></span> <span data-ttu-id="a3bd2-193">這個程式碼範例是針對所提供之較大範例的一部分<xref:System.Collections.IDictionary>類別。</span><span class="sxs-lookup"><span data-stu-id="a3bd2-193">This code example is part of a larger example provided for the <xref:System.Collections.IDictionary> class.</span></span>  
  
 [!code-cpp[Dictionary#4](~/samples/snippets/cpp/VS_Snippets_CLR/Dictionary/cpp/Dictionary.cpp#4)]
 [!code-csharp[Dictionary#4](~/samples/snippets/csharp/VS_Snippets_CLR/Dictionary/CS/Dictionary.cs#4)]
 [!code-vb[Dictionary#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/Dictionary/VB/Dictionary.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IDictionary.Item[object key] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IDictionary.Item(object)" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Item(System.Object)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(key As Object) As Object Implements IDictionary.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.IDictionary.Item[System::Object ^] { System::Object ^ get(System::Object ^ key); void set(System::Object ^ key, System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.Item(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="a3bd2-194">要取得或設定之項目的索引鍵。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3bd2-194">The key of the element to get or set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a3bd2-195">取得或設定具有指定索引鍵的項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3bd2-195">Gets or sets the element with the specified key.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a3bd2-196">具有指定索引鍵的項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3bd2-196">The element with the specified key.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3bd2-197">這個屬性可以使用下列語法提供存取集合中特定元素的能力：`myCollection[key]`。</span><span class="sxs-lookup"><span data-stu-id="a3bd2-197">This property provides the ability to access a specific element in the collection by using the following syntax: `myCollection[key]`.</span></span>  
  
 <span data-ttu-id="a3bd2-198">您也可以使用<xref:System.Collections.IDictionary.Item%2A>字典中沒有屬性，以加入新項目索引鍵的值設定 (例如， `myCollection["myNonexistentKey"] = myValue`)。</span><span class="sxs-lookup"><span data-stu-id="a3bd2-198">You can also use the <xref:System.Collections.IDictionary.Item%2A> property to add new elements by setting the value of a key that does not exist in the dictionary (for example, `myCollection["myNonexistentKey"] = myValue`).</span></span> <span data-ttu-id="a3bd2-199">不過，如果指定的索引鍵已經存在字典中，設定<xref:System.Collections.IDictionary.Item%2A>屬性會覆寫舊的值。</span><span class="sxs-lookup"><span data-stu-id="a3bd2-199">However, if the specified key already exists in the dictionary, setting the <xref:System.Collections.IDictionary.Item%2A> property overwrites the old value.</span></span> <span data-ttu-id="a3bd2-200">相反地，<xref:System.Collections.IDictionary.Add%2A>方法不會修改現有的項目。</span><span class="sxs-lookup"><span data-stu-id="a3bd2-200">In contrast, the <xref:System.Collections.IDictionary.Add%2A> method does not modify existing elements.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a3bd2-201">下列範例示範如何實作<xref:System.Collections.IDictionary.Item%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="a3bd2-201">The following example shows how to implement the <xref:System.Collections.IDictionary.Item%2A> property.</span></span> <span data-ttu-id="a3bd2-202">這個程式碼範例是針對所提供之較大範例的一部分<xref:System.Collections.IDictionary>類別。</span><span class="sxs-lookup"><span data-stu-id="a3bd2-202">This code example is part of a larger example provided for the <xref:System.Collections.IDictionary> class.</span></span>  
  
 [!code-cpp[Dictionary#13](~/samples/snippets/cpp/VS_Snippets_CLR/Dictionary/cpp/Dictionary.cpp#13)]
 [!code-csharp[Dictionary#13](~/samples/snippets/csharp/VS_Snippets_CLR/Dictionary/CS/Dictionary.cs#13)]
 [!code-vb[Dictionary#13](~/samples/snippets/visualbasic/VS_Snippets_CLR/Dictionary/VB/Dictionary.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a3bd2-203">
            <paramref name="key" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3bd2-203">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="a3bd2-204">已設定該屬性，<see cref="T:System.Collections.IDictionary" /> 物件是唯讀的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3bd2-204">The property is set and the <see cref="T:System.Collections.IDictionary" /> object is read-only.</span>
          </span>
          <span data-ttu-id="a3bd2-205">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3bd2-205">-or-</span>
          </span>
          <span data-ttu-id="a3bd2-206">屬性已設定，<paramref name="key" /> 不存在於集合中，而且 <see cref="T:System.Collections.IDictionary" /> 具有固定大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3bd2-206">The property is set, <paramref name="key" /> does not exist in the collection, and the <see cref="T:System.Collections.IDictionary" /> has a fixed size.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.IDictionary.Add(System.Object,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.Keys">
      <MemberSignature Language="C#" Value="System.Collections.ICollection System.Collections.IDictionary.Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection System.Collections.IDictionary.Keys" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Keys" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Keys As ICollection Implements IDictionary.Keys" />
      <MemberSignature Language="C++ CLI" Value="property System::Collections::ICollection ^ System.Collections.IDictionary.Keys { System::Collections::ICollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.Keys</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a3bd2-207">取得 <see cref="T:System.Collections.ICollection" /> 物件，其中包含 <see cref="T:System.Collections.IDictionary" /> 物件的索引鍵。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3bd2-207">Gets an <see cref="T:System.Collections.ICollection" /> object containing the keys of the <see cref="T:System.Collections.IDictionary" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a3bd2-208">
            <see cref="T:System.Collections.ICollection" /> 物件，其中包含 <see cref="T:System.Collections.IDictionary" /> 物件的索引鍵。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3bd2-208">An <see cref="T:System.Collections.ICollection" /> object containing the keys of the <see cref="T:System.Collections.IDictionary" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3bd2-209">在傳回的索引鍵的順序<xref:System.Collections.ICollection>物件並未指定，但保證是中的對應值的順序相同<xref:System.Collections.ICollection>傳回<xref:System.Collections.IDictionary.Values%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="a3bd2-209">The order of the keys in the returned <xref:System.Collections.ICollection> object is unspecified, but is guaranteed to be the same order as the corresponding values in the <xref:System.Collections.ICollection> returned by the <xref:System.Collections.IDictionary.Values%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a3bd2-210">下列範例示範如何實作<xref:System.Collections.IDictionary.Keys%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="a3bd2-210">The following example shows how to implement the <xref:System.Collections.IDictionary.Keys%2A> property.</span></span> <span data-ttu-id="a3bd2-211">這個程式碼範例是針對所提供之較大範例的一部分<xref:System.Collections.IDictionary>類別。</span><span class="sxs-lookup"><span data-stu-id="a3bd2-211">This code example is part of a larger example provided for the <xref:System.Collections.IDictionary> class.</span></span>  
  
 [!code-cpp[Dictionary#10](~/samples/snippets/cpp/VS_Snippets_CLR/Dictionary/cpp/Dictionary.cpp#10)]
 [!code-csharp[Dictionary#10](~/samples/snippets/csharp/VS_Snippets_CLR/Dictionary/CS/Dictionary.cs#10)]
 [!code-vb[Dictionary#10](~/samples/snippets/visualbasic/VS_Snippets_CLR/Dictionary/VB/Dictionary.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.ICollection" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.Remove">
      <MemberSignature Language="C#" Value="void IDictionary.Remove (object key);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IDictionary.Remove(object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (key As Object) Implements IDictionary.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IDictionary.Remove(System::Object ^ key) = System::Collections::IDictionary::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="a3bd2-212">要移除的項目索引鍵。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3bd2-212">The key of the element to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a3bd2-213">將有指定索引鍵的項目從 <see cref="T:System.Collections.IDictionary" /> 物件移除。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3bd2-213">Removes the element with the specified key from the <see cref="T:System.Collections.IDictionary" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a3bd2-214">下列範例將示範如何實作 <xref:System.Collections.IDictionary.Remove%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="a3bd2-214">The following example shows how to implement the <xref:System.Collections.IDictionary.Remove%2A> method.</span></span> <span data-ttu-id="a3bd2-215">這個程式碼範例是針對所提供之較大範例的一部分<xref:System.Collections.IDictionary>類別。</span><span class="sxs-lookup"><span data-stu-id="a3bd2-215">This code example is part of a larger example provided for the <xref:System.Collections.IDictionary> class.</span></span>  
  
 [!code-cpp[Dictionary#7](~/samples/snippets/cpp/VS_Snippets_CLR/Dictionary/cpp/Dictionary.cpp#7)]
 [!code-csharp[Dictionary#7](~/samples/snippets/csharp/VS_Snippets_CLR/Dictionary/CS/Dictionary.cs#7)]
 [!code-vb[Dictionary#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/Dictionary/VB/Dictionary.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a3bd2-216">
            <paramref name="key" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3bd2-216">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="a3bd2-217">
            <see cref="T:System.Collections.IDictionary" /> 物件是唯讀的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3bd2-217">The <see cref="T:System.Collections.IDictionary" /> object is read-only.</span>
          </span>
          <span data-ttu-id="a3bd2-218">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3bd2-218">-or-</span>
          </span>
          <span data-ttu-id="a3bd2-219">
            <see cref="T:System.Collections.IDictionary" /> 具有固定的大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3bd2-219">The <see cref="T:System.Collections.IDictionary" /> has a fixed size.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.PropertyCollection.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a3bd2-220">傳回 <see cref="T:System.Collections.IEnumerable" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3bd2-220">Returns an <see cref="T:System.Collections.IEnumerable" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a3bd2-221">
            <see cref="T:System.Collections.IEnumerable" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3bd2-221">An <see cref="T:System.Collections.IEnumerable" />.object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3bd2-222">[Visual Basic、 C#]</span><span class="sxs-lookup"><span data-stu-id="a3bd2-222">[Visual Basic, C#]</span></span>  
  
 <span data-ttu-id="a3bd2-223">C# 語言的 `foreach` 陳述式 (在 Visual Basic 中為 `for each`) 會隱藏列舉值的複雜度。</span><span class="sxs-lookup"><span data-stu-id="a3bd2-223">The `foreach` statement of the C# language (`for each` in Visual Basic) hides the complexity of the enumerators.</span></span>  <span data-ttu-id="a3bd2-224">因此，使用`foreach`建議而不是直接管理 列舉值。</span><span class="sxs-lookup"><span data-stu-id="a3bd2-224">Therefore, using `foreach` is recommended instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="a3bd2-225">列舉程式可以用來讀取集合中的資料，但是無法用來修改基礎集合。</span><span class="sxs-lookup"><span data-stu-id="a3bd2-225">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="a3bd2-226">一開始，列舉程式位在集合中的第一個項目之前。</span><span class="sxs-lookup"><span data-stu-id="a3bd2-226">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="a3bd2-227"><xref:System.Collections.IEnumerator.Reset%2A> 也會將列舉值帶回至這個位置。</span><span class="sxs-lookup"><span data-stu-id="a3bd2-227"><xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span>  <span data-ttu-id="a3bd2-228">此位置<xref:System.Collections.IEnumerator.Current%2A>未定義屬性。</span><span class="sxs-lookup"><span data-stu-id="a3bd2-228">At this position, the <xref:System.Collections.IEnumerator.Current%2A> property is undefined.</span></span> <span data-ttu-id="a3bd2-229">因此，在讀取 <xref:System.Collections.IEnumerator.MoveNext%2A> 的值之前，必須呼叫 <xref:System.Collections.IEnumerator.Current%2A> 以將列舉值前移至集合的第一個項目。</span><span class="sxs-lookup"><span data-stu-id="a3bd2-229">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="a3bd2-230"><xref:System.Collections.IEnumerator.Current%2A> 會傳回相同的物件直到呼叫 <xref:System.Collections.IEnumerator.MoveNext%2A> 或 <xref:System.Collections.IEnumerator.Reset%2A>。</span><span class="sxs-lookup"><span data-stu-id="a3bd2-230"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="a3bd2-231"><xref:System.Collections.IEnumerator.MoveNext%2A> 會將 <xref:System.Collections.IEnumerator.Current%2A> 設定為下一個項目。</span><span class="sxs-lookup"><span data-stu-id="a3bd2-231"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="a3bd2-232">如果<xref:System.Collections.IEnumerator.MoveNext%2A>超過集合的列舉值的結尾會位於集合中的最後一個元素之後和<xref:System.Collections.IEnumerator.MoveNext%2A>傳回`false`。</span><span class="sxs-lookup"><span data-stu-id="a3bd2-232">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="a3bd2-233">列舉值位於這個位置上，後續呼叫<xref:System.Collections.IEnumerator.MoveNext%2A>也會傳回`false`。</span><span class="sxs-lookup"><span data-stu-id="a3bd2-233">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="a3bd2-234">如果最後一個呼叫<xref:System.Collections.IEnumerator.MoveNext%2A>傳回`false`，<xref:System.Collections.IEnumerator.Current%2A>是未定義。</span><span class="sxs-lookup"><span data-stu-id="a3bd2-234">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="a3bd2-235">若要再次將 <xref:System.Collections.IEnumerator.Current%2A> 設定為集合的第一個元素，您可以在呼叫 <xref:System.Collections.IEnumerator.Reset%2A> 之後，接著呼叫 <xref:System.Collections.IEnumerator.MoveNext%2A>。</span><span class="sxs-lookup"><span data-stu-id="a3bd2-235">To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="a3bd2-236">只要集合維持不變，列舉程式就持續有效。</span><span class="sxs-lookup"><span data-stu-id="a3bd2-236">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="a3bd2-237">如果對集合進行變更，例如加入、修改或刪除項目，列舉程式會永久失效，且其行為未定義。</span><span class="sxs-lookup"><span data-stu-id="a3bd2-237">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</span></span>  
  
 <span data-ttu-id="a3bd2-238">列舉程式沒有集合的獨佔存取權，因此，列舉集合內容本質上並不是安全的執行緒程序。</span><span class="sxs-lookup"><span data-stu-id="a3bd2-238">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  <span data-ttu-id="a3bd2-239">若要確保列舉期間的執行緒安全性，您可以在整個列舉期間鎖定集合。</span><span class="sxs-lookup"><span data-stu-id="a3bd2-239">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="a3bd2-240">若要讓多重執行緒能夠存取集合以便進行讀取和寫入，您必須實作自己的同步處理。</span><span class="sxs-lookup"><span data-stu-id="a3bd2-240">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="Values">
      <MemberSignature Language="C#" Value="public System.Collections.ICollection Values { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection Values" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.PropertyCollection.Values" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Values As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ICollection ^ Values { System::Collections::ICollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.Values</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a3bd2-241">取得這個集合中的屬性值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3bd2-241">Gets the values of the properties in this collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a3bd2-242">
            <see cref="T:System.Collections.ICollection" />，包含這個集合中的屬性值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a3bd2-242">An <see cref="T:System.Collections.ICollection" /> that contains the values of the properties in this collection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3bd2-243">存取的成員時<xref:System.DirectoryServices.PropertyCollection.Values%2A>屬性，<xref:System.Runtime.InteropServices.COMException>例外狀況可能會擲回因為發生錯誤時存取基礎介面。</span><span class="sxs-lookup"><span data-stu-id="a3bd2-243">When accessing members of the <xref:System.DirectoryServices.PropertyCollection.Values%2A> property, a <xref:System.Runtime.InteropServices.COMException> exception might be thrown due to an error while accessing the underlying interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>