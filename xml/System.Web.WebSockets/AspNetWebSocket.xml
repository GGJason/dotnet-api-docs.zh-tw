<Type Name="AspNetWebSocket" FullName="System.Web.WebSockets.AspNetWebSocket">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ce786eeab65f79e5a02d0423e3a411f553228941" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36375473" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class AspNetWebSocket : System.Net.WebSockets.WebSocket" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit AspNetWebSocket extends System.Net.WebSockets.WebSocket" />
  <TypeSignature Language="DocId" Value="T:System.Web.WebSockets.AspNetWebSocket" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AspNetWebSocket&#xA;Inherits WebSocket" />
  <TypeSignature Language="C++ CLI" Value="public ref class AspNetWebSocket sealed : System::Net::WebSockets::WebSocket" />
  <TypeSignature Language="F#" Value="type AspNetWebSocket = class&#xA;    inherit WebSocket" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Net.WebSockets.WebSocket</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="3ef7f-101">Represents a real-time full-duplex connection between a web server and a client in an ASP.NET application.</span>
      <span class="sxs-lookup">
        <span data-stu-id="3ef7f-101">Represents a real-time full-duplex connection between a web server and a client in an ASP.NET application.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Abort">
      <MemberSignature Language="C#" Value="public override void Abort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Abort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebSockets.AspNetWebSocket.Abort" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Abort ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Abort();" />
      <MemberSignature Language="F#" Value="abstract member Abort : unit -&gt; unit&#xA;override this.Abort : unit -&gt; unit" Usage="aspNetWebSocket.Abort " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3ef7f-102">Cancels any pending I/O operations on the <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> object and sets the state of the object so that it cannot be used to start additional I/O operations.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3ef7f-102">Cancels any pending I/O operations on the <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> object and sets the state of the object so that it cannot be used to start additional I/O operations.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3ef7f-103">之後<xref:System.Web.WebSockets.AspNetWebSocket.Abort%2A>呼叫方法，您仍然可以存取並不包括 I/O 作業的屬性和方法。</span><span class="sxs-lookup"><span data-stu-id="3ef7f-103">After the <xref:System.Web.WebSockets.AspNetWebSocket.Abort%2A> method has been called, you can still access properties and methods that do not involve I/O operations.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="3ef7f-104">The object was previously disposed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3ef7f-104">The object was previously disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CloseAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task CloseAsync (System.Net.WebSockets.WebSocketCloseStatus closeStatus, string statusDescription, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task CloseAsync(valuetype System.Net.WebSockets.WebSocketCloseStatus closeStatus, string statusDescription, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebSockets.AspNetWebSocket.CloseAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ CloseAsync(System::Net::WebSockets::WebSocketCloseStatus closeStatus, System::String ^ statusDescription, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="abstract member CloseAsync : System.Net.WebSockets.WebSocketCloseStatus * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.CloseAsync : System.Net.WebSockets.WebSocketCloseStatus * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="aspNetWebSocket.CloseAsync (closeStatus, statusDescription, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="closeStatus" Type="System.Net.WebSockets.WebSocketCloseStatus" />
        <Parameter Name="statusDescription" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="closeStatus">
          <span data-ttu-id="3ef7f-105">The status code of the close operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3ef7f-105">The status code of the close operation.</span>
          </span>
        </param>
        <param name="statusDescription">
          <span data-ttu-id="3ef7f-106">The status message of the close operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3ef7f-106">The status message of the close operation.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="3ef7f-107">The object that cancels a pending operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3ef7f-107">The object that cancels a pending operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3ef7f-108">Sends an asynchronous message to a client to close the connection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3ef7f-108">Sends an asynchronous message to a client to close the connection.</span>
          </span>
          <span data-ttu-id="3ef7f-109">If the server initiates the request to close the connection, the method waits for the client to acknowledge the request before it returns.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3ef7f-109">If the server initiates the request to close the connection, the method waits for the client to acknowledge the request before it returns.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3ef7f-110">A reference to the operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3ef7f-110">A reference to the operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3ef7f-111">您可以使用<xref:System.Web.WebSockets.AspNetWebSocket.CloseAsync%2A>和<xref:System.Web.WebSockets.AspNetWebSocket.CloseOutputAsync%2A>方法和用戶端起始伺服器起始的要求，以關閉<xref:System.Web.WebSockets.AspNetWebSocket>連線。</span><span class="sxs-lookup"><span data-stu-id="3ef7f-111">You can use the <xref:System.Web.WebSockets.AspNetWebSocket.CloseAsync%2A> and <xref:System.Web.WebSockets.AspNetWebSocket.CloseOutputAsync%2A> methods for both client-initiated and server-initiated requests to close an <xref:System.Web.WebSockets.AspNetWebSocket> connection.</span></span> <span data-ttu-id="3ef7f-112">兩個方法會處理用戶端起始的要求相同的方式： 用戶端傳送訊息至伺服器，以關閉連線後，在伺服器呼叫這些方法的其中一個，並將通知傳送至用戶端，該方法會傳回。</span><span class="sxs-lookup"><span data-stu-id="3ef7f-112">The two methods handle client-initiated requests in the same way: After the client sends a message to the server to close the connection, the server calls one of these methods and sends an acknowledgment to the client, and then the method returns.</span></span>  
  
 <span data-ttu-id="3ef7f-113">對於伺服器起始的要求，這兩個方法的運作方式不同。</span><span class="sxs-lookup"><span data-stu-id="3ef7f-113">For server-initiated requests, the two methods work differently.</span></span> <span data-ttu-id="3ef7f-114"><xref:System.Web.WebSockets.AspNetWebSocket.CloseAsync%2A>方法將訊息傳送給用戶端，關閉連線、 等候回應，，然後傳回。</span><span class="sxs-lookup"><span data-stu-id="3ef7f-114">The <xref:System.Web.WebSockets.AspNetWebSocket.CloseAsync%2A> method sends a message to the client to close the connection, waits for a response, and then returns.</span></span> <span data-ttu-id="3ef7f-115">伺服器不會等候用戶端傳送的任何其他資料。</span><span class="sxs-lookup"><span data-stu-id="3ef7f-115">The server does not wait for any additional data sent by the client.</span></span> <span data-ttu-id="3ef7f-116">相反地，<xref:System.Web.WebSockets.AspNetWebSocket.CloseOutputAsync%2A>方法將訊息傳送給用戶端，關閉連接，並傳回而不等待回應。</span><span class="sxs-lookup"><span data-stu-id="3ef7f-116">In contrast, the <xref:System.Web.WebSockets.AspNetWebSocket.CloseOutputAsync%2A> method sends a message to the client to close the connection and returns without waiting for a response.</span></span> <span data-ttu-id="3ef7f-117">方法會傳回之後，您可以呼叫<xref:System.Web.WebSockets.AspNetWebSocket.ReceiveAsync%2A>方法並處理額外的資料或用戶端傳送的通知。</span><span class="sxs-lookup"><span data-stu-id="3ef7f-117">After the method returns, you can call the <xref:System.Web.WebSockets.AspNetWebSocket.ReceiveAsync%2A> method and handle either additional data or the acknowledgment that the client sends.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="3ef7f-118">The <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> object was previously disposed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3ef7f-118">The <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> object was previously disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3ef7f-119">The <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> object is in an aborted state.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3ef7f-119">The <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> object is in an aborted state.</span>
          </span>
          <span data-ttu-id="3ef7f-120">-or-  Sending operations are unavailable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3ef7f-120">-or-  Sending operations are unavailable.</span>
          </span>
          <span data-ttu-id="3ef7f-121">-or-  Receiving operations are unavailable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3ef7f-121">-or-  Receiving operations are unavailable.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CloseOutputAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task CloseOutputAsync (System.Net.WebSockets.WebSocketCloseStatus closeStatus, string statusDescription, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task CloseOutputAsync(valuetype System.Net.WebSockets.WebSocketCloseStatus closeStatus, string statusDescription, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebSockets.AspNetWebSocket.CloseOutputAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ CloseOutputAsync(System::Net::WebSockets::WebSocketCloseStatus closeStatus, System::String ^ statusDescription, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="abstract member CloseOutputAsync : System.Net.WebSockets.WebSocketCloseStatus * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.CloseOutputAsync : System.Net.WebSockets.WebSocketCloseStatus * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="aspNetWebSocket.CloseOutputAsync (closeStatus, statusDescription, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="closeStatus" Type="System.Net.WebSockets.WebSocketCloseStatus" />
        <Parameter Name="statusDescription" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="closeStatus">
          <span data-ttu-id="3ef7f-122">The status code of the close operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3ef7f-122">The status code of the close operation.</span>
          </span>
        </param>
        <param name="statusDescription">
          <span data-ttu-id="3ef7f-123">The status message of the close operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3ef7f-123">The status message of the close operation.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="3ef7f-124">The object that cancels a pending operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3ef7f-124">The object that cancels a pending operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3ef7f-125">Sends an asynchronous message to a client to close the connection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3ef7f-125">Sends an asynchronous message to a client to close the connection.</span>
          </span>
          <span data-ttu-id="3ef7f-126">If the server initiates the request to close the connection, the method returns without waiting for a response.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3ef7f-126">If the server initiates the request to close the connection, the method returns without waiting for a response.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3ef7f-127">A reference to the operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3ef7f-127">A reference to the operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3ef7f-128">您可以使用<xref:System.Web.WebSockets.AspNetWebSocket.CloseAsync%2A>和<xref:System.Web.WebSockets.AspNetWebSocket.CloseOutputAsync%2A>方法和用戶端起始伺服器起始的要求，以關閉<xref:System.Web.WebSockets.AspNetWebSocket>連線。</span><span class="sxs-lookup"><span data-stu-id="3ef7f-128">You can use the <xref:System.Web.WebSockets.AspNetWebSocket.CloseAsync%2A> and <xref:System.Web.WebSockets.AspNetWebSocket.CloseOutputAsync%2A> methods for both client-initiated and server-initiated requests to close an <xref:System.Web.WebSockets.AspNetWebSocket> connection.</span></span> <span data-ttu-id="3ef7f-129">兩個方法會處理用戶端起始的要求相同的方式： 用戶端傳送訊息至伺服器，以關閉連線後，在伺服器呼叫這些方法的其中一個，並將通知傳送至用戶端，該方法會傳回。</span><span class="sxs-lookup"><span data-stu-id="3ef7f-129">The two methods handle client-initiated requests in the same way: After the client sends a message to the server to close the connection, the server calls one of these methods and sends an acknowledgment to the client, and then the method returns.</span></span>  
  
 <span data-ttu-id="3ef7f-130">對於伺服器起始的要求，這兩個方法的運作方式不同。</span><span class="sxs-lookup"><span data-stu-id="3ef7f-130">For server-initiated requests, the two methods work differently.</span></span> <span data-ttu-id="3ef7f-131"><xref:System.Web.WebSockets.AspNetWebSocket.CloseAsync%2A>方法將訊息傳送給用戶端，關閉連線、 等候回應，，然後傳回。</span><span class="sxs-lookup"><span data-stu-id="3ef7f-131">The <xref:System.Web.WebSockets.AspNetWebSocket.CloseAsync%2A> method sends a message to the client to close the connection, waits for a response, and then returns.</span></span> <span data-ttu-id="3ef7f-132">伺服器不會等候用戶端傳送的任何其他資料。</span><span class="sxs-lookup"><span data-stu-id="3ef7f-132">The server does not wait for any additional data sent by the client.</span></span> <span data-ttu-id="3ef7f-133">相反地，<xref:System.Web.WebSockets.AspNetWebSocket.CloseOutputAsync%2A>方法將訊息傳送給用戶端，關閉連接，並傳回而不等待回應。</span><span class="sxs-lookup"><span data-stu-id="3ef7f-133">In contrast, the <xref:System.Web.WebSockets.AspNetWebSocket.CloseOutputAsync%2A> method sends a message to the client to close the connection and returns without waiting for a response.</span></span> <span data-ttu-id="3ef7f-134">方法會傳回之後，您可以呼叫<xref:System.Web.WebSockets.AspNetWebSocket.ReceiveAsync%2A>方法並處理額外的資料或用戶端傳送的通知。</span><span class="sxs-lookup"><span data-stu-id="3ef7f-134">After the method returns, you can call the <xref:System.Web.WebSockets.AspNetWebSocket.ReceiveAsync%2A> method and handle either additional data or the acknowledgment that the client sends.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="3ef7f-135">The object was previously disposed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3ef7f-135">The object was previously disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3ef7f-136">The <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> object is in an aborted state.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3ef7f-136">The <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> object is in an aborted state.</span>
          </span>
          <span data-ttu-id="3ef7f-137">-or-  Sending operations are unavailable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3ef7f-137">-or-  Sending operations are unavailable.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CloseStatus">
      <MemberSignature Language="C#" Value="public override Nullable&lt;System.Net.WebSockets.WebSocketCloseStatus&gt; CloseStatus { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.Net.WebSockets.WebSocketCloseStatus&gt; CloseStatus" />
      <MemberSignature Language="DocId" Value="P:System.Web.WebSockets.AspNetWebSocket.CloseStatus" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CloseStatus As Nullable(Of WebSocketCloseStatus)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Nullable&lt;System::Net::WebSockets::WebSocketCloseStatus&gt; CloseStatus { Nullable&lt;System::Net::WebSockets::WebSocketCloseStatus&gt; get(); };" />
      <MemberSignature Language="F#" Value="member this.CloseStatus : Nullable&lt;System.Net.WebSockets.WebSocketCloseStatus&gt;" Usage="System.Web.WebSockets.AspNetWebSocket.CloseStatus" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Net.WebSockets.WebSocketCloseStatus&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3ef7f-138">Gets a status code that indicates why an <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> object was closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3ef7f-138">Gets a status code that indicates why an <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> object was closed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3ef7f-139">狀態碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3ef7f-139">The status code.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="3ef7f-140">The object was previously disposed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3ef7f-140">The object was previously disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CloseStatusDescription">
      <MemberSignature Language="C#" Value="public override string CloseStatusDescription { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CloseStatusDescription" />
      <MemberSignature Language="DocId" Value="P:System.Web.WebSockets.AspNetWebSocket.CloseStatusDescription" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CloseStatusDescription As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CloseStatusDescription { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CloseStatusDescription : string" Usage="System.Web.WebSockets.AspNetWebSocket.CloseStatusDescription" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3ef7f-141">Gets a status message that explains why an <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> object was closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3ef7f-141">Gets a status message that explains why an <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> object was closed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3ef7f-142">狀態訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3ef7f-142">The status message.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="3ef7f-143">The object was previously disposed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3ef7f-143">The object was previously disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public override void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebSockets.AspNetWebSocket.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="aspNetWebSocket.Dispose " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3ef7f-144">Releases all resources used by an <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3ef7f-144">Releases all resources used by an <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3ef7f-145">ASP.NET 會自動呼叫<xref:System.Web.WebSockets.AspNetWebSocket.Dispose%2A>方法<xref:System.Web.WebSockets.AspNetWebSocket>物件釋放您的程式碼完成之後維持執行的任何資源。</span><span class="sxs-lookup"><span data-stu-id="3ef7f-145">ASP.NET automatically calls the <xref:System.Web.WebSockets.AspNetWebSocket.Dispose%2A> method on a <xref:System.Web.WebSockets.AspNetWebSocket> object to release any resources that remain after your code has finished executing.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReceiveAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;System.Net.WebSockets.WebSocketReceiveResult&gt; ReceiveAsync (ArraySegment&lt;byte&gt; buffer, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;class System.Net.WebSockets.WebSocketReceiveResult&gt; ReceiveAsync(valuetype System.ArraySegment`1&lt;unsigned int8&gt; buffer, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebSockets.AspNetWebSocket.ReceiveAsync(System.ArraySegment{System.Byte},System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task&lt;System::Net::WebSockets::WebSocketReceiveResult ^&gt; ^ ReceiveAsync(ArraySegment&lt;System::Byte&gt; buffer, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="abstract member ReceiveAsync : ArraySegment&lt;byte&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Net.WebSockets.WebSocketReceiveResult&gt;&#xA;override this.ReceiveAsync : ArraySegment&lt;byte&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Net.WebSockets.WebSocketReceiveResult&gt;" Usage="aspNetWebSocket.ReceiveAsync (buffer, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.WebSockets.WebSocketReceiveResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ArraySegment&lt;System.Byte&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="3ef7f-146">The array that contains the message data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3ef7f-146">The array that contains the message data.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="3ef7f-147">The object that cancels a pending operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3ef7f-147">The object that cancels a pending operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3ef7f-148">Receives a single message fragment from a remote client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3ef7f-148">Receives a single message fragment from a remote client.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3ef7f-149">A reference to the task of receiving a message.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3ef7f-149">A reference to the task of receiving a message.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="3ef7f-150">The <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> object was previously disposed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3ef7f-150">The <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> object was previously disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3ef7f-151">The <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> object is in an aborted state.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3ef7f-151">The <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> object is in an aborted state.</span>
          </span>
          <span data-ttu-id="3ef7f-152">-or-  Receiving operations are unavailable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3ef7f-152">-or-  Receiving operations are unavailable.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task SendAsync (ArraySegment&lt;byte&gt; buffer, System.Net.WebSockets.WebSocketMessageType messageType, bool endOfMessage, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task SendAsync(valuetype System.ArraySegment`1&lt;unsigned int8&gt; buffer, valuetype System.Net.WebSockets.WebSocketMessageType messageType, bool endOfMessage, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebSockets.AspNetWebSocket.SendAsync(System.ArraySegment{System.Byte},System.Net.WebSockets.WebSocketMessageType,System.Boolean,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ SendAsync(ArraySegment&lt;System::Byte&gt; buffer, System::Net::WebSockets::WebSocketMessageType messageType, bool endOfMessage, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="abstract member SendAsync : ArraySegment&lt;byte&gt; * System.Net.WebSockets.WebSocketMessageType * bool * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.SendAsync : ArraySegment&lt;byte&gt; * System.Net.WebSockets.WebSocketMessageType * bool * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="aspNetWebSocket.SendAsync (buffer, messageType, endOfMessage, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ArraySegment&lt;System.Byte&gt;" />
        <Parameter Name="messageType" Type="System.Net.WebSockets.WebSocketMessageType" />
        <Parameter Name="endOfMessage" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="3ef7f-153">The array that contains the message data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3ef7f-153">The array that contains the message data.</span>
          </span>
        </param>
        <param name="messageType">
          <span data-ttu-id="3ef7f-154">The message type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3ef7f-154">The message type.</span>
          </span>
        </param>
        <param name="endOfMessage">
          <span data-ttu-id="3ef7f-155">
            <see langword="true" /> to indicate that a fragment is the end of a complete message; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3ef7f-155">
              <see langword="true" /> to indicate that a fragment is the end of a complete message; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="3ef7f-156">The object that cancels a pending operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3ef7f-156">The object that cancels a pending operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3ef7f-157">Sends a single message fragment to a remote client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3ef7f-157">Sends a single message fragment to a remote client.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3ef7f-158">A reference to the task of sending a message.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3ef7f-158">A reference to the task of sending a message.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="3ef7f-159">The <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> object is disposed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3ef7f-159">The <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> object is disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3ef7f-160">The <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> object is in an aborted state.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3ef7f-160">The <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> object is in an aborted state.</span>
          </span>
          <span data-ttu-id="3ef7f-161">-or-  Sending operations are unavailable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3ef7f-161">-or-  Sending operations are unavailable.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public override System.Net.WebSockets.WebSocketState State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.WebSockets.WebSocketState State" />
      <MemberSignature Language="DocId" Value="P:System.Web.WebSockets.AspNetWebSocket.State" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property State As WebSocketState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Net::WebSockets::WebSocketState State { System::Net::WebSockets::WebSocketState get(); };" />
      <MemberSignature Language="F#" Value="member this.State : System.Net.WebSockets.WebSocketState" Usage="System.Web.WebSockets.AspNetWebSocket.State" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebSockets.WebSocketState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3ef7f-162">Gets a value that indicates the open or closed state of an <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3ef7f-162">Gets a value that indicates the open or closed state of an <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3ef7f-163">目前的狀態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3ef7f-163">The current state.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="3ef7f-164">The object was previously disposed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3ef7f-164">The object was previously disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SubProtocol">
      <MemberSignature Language="C#" Value="public override string SubProtocol { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SubProtocol" />
      <MemberSignature Language="DocId" Value="P:System.Web.WebSockets.AspNetWebSocket.SubProtocol" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property SubProtocol As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SubProtocol { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SubProtocol : string" Usage="System.Web.WebSockets.AspNetWebSocket.SubProtocol" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3ef7f-165">Gets the name of an application-specific protocol that a remote client and a server can use to exchange data over an <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> connection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3ef7f-165">Gets the name of an application-specific protocol that a remote client and a server can use to exchange data over an <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> connection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3ef7f-166">通訊協定的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3ef7f-166">The name of the protocol.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="3ef7f-167">The object was previously disposed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3ef7f-167">The object was previously disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>