<Type Name="EntityContainer" FullName="System.Data.Metadata.Edm.EntityContainer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="434418950ed0e73b3d9e7d8b52b5910b642100ae" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51887950" /></Metadata><TypeSignature Language="C#" Value="public sealed class EntityContainer : System.Data.Metadata.Edm.GlobalItem" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit EntityContainer extends System.Data.Metadata.Edm.GlobalItem" />
  <TypeSignature Language="DocId" Value="T:System.Data.Metadata.Edm.EntityContainer" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class EntityContainer&#xA;Inherits GlobalItem" />
  <TypeSignature Language="C++ CLI" Value="public ref class EntityContainer sealed : System::Data::Metadata::Edm::GlobalItem" />
  <TypeSignature Language="F#" Value="type EntityContainer = class&#xA;    inherit GlobalItem" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Metadata.Edm.GlobalItem</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="de60c-101">表示概念模型中的實體容器。</span><span class="sxs-lookup"><span data-stu-id="de60c-101">Represents an entity container in a conceptual model.</span></span> <span data-ttu-id="de60c-102"><see cref="T:System.Data.Metadata.Edm.EntityContainer" /> 是實體集合和關聯集合的邏輯群組。</span><span class="sxs-lookup"><span data-stu-id="de60c-102">An <see cref="T:System.Data.Metadata.Edm.EntityContainer" /> is a logical grouping of entity sets and association sets.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de60c-103">在概念層級上，<xref:System.Data.Metadata.Edm.EntityContainer> 類別 (Class) 表示容器，這個容器會對應到儲存區中繼資料結構描述中的資料庫物件。</span><span class="sxs-lookup"><span data-stu-id="de60c-103">On the conceptual level, the <xref:System.Data.Metadata.Edm.EntityContainer> class represents a container that will be mapped to a database object in the storage metadata schema.</span></span> <span data-ttu-id="de60c-104">在儲存區層次上，<xref:System.Data.Metadata.Edm.EntityContainer> 類別則表示資料表和/或索引鍵關聯性 (Relationship) 的描述，會針對根據該模型而建置的應用程式保存資料。</span><span class="sxs-lookup"><span data-stu-id="de60c-104">In the storage level, the <xref:System.Data.Metadata.Edm.EntityContainer> class represents a description of the table and/or key relationships that persist data for applications built on the model.</span></span> <span data-ttu-id="de60c-105">如需概念模型中的實體容器的詳細資訊，請參閱[實體容器 (EDM)](https://msdn.microsoft.com/library/9afa762f-59b8-4a70-b76d-89d90760144c)。</span><span class="sxs-lookup"><span data-stu-id="de60c-105">For more information about the entity containers in a conceptual model, see [Entity Containers (EDM)](https://msdn.microsoft.com/library/9afa762f-59b8-4a70-b76d-89d90760144c).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="de60c-106">下列程式碼範例會示範如何從連接中取得中繼資料工作空間，然後使用該中繼資料工作空間來擷取指定之模型內有關實體容器的資訊。</span><span class="sxs-lookup"><span data-stu-id="de60c-106">The following code sample demonstrates how to get a metadata workspace from the connection and then use that metadata workspace to retrieve information about the entity containers in the specified data model.</span></span> <span data-ttu-id="de60c-107">請注意，中繼資料工作空間是一個執行階段服務元件，它會提供用來擷取中繼資料的支援。</span><span class="sxs-lookup"><span data-stu-id="de60c-107">Note that the metadata workspace is a runtime service component that provides support for retrieving metadata.</span></span>  
  
 <span data-ttu-id="de60c-108">此程式碼範例會使用 <xref:System.Data.Metadata.Edm.DataSpace.CSpace> 和 <xref:System.Data.Metadata.Edm.DataSpace.SSpace> 來指定此模型。</span><span class="sxs-lookup"><span data-stu-id="de60c-108">The code sample uses a <xref:System.Data.Metadata.Edm.DataSpace.CSpace> and a <xref:System.Data.Metadata.Edm.DataSpace.SSpace> to specify the model.</span></span> <span data-ttu-id="de60c-109"><xref:System.Data.Metadata.Edm.DataSpace.CSpace> 代表概念模型的預設名稱。</span><span class="sxs-lookup"><span data-stu-id="de60c-109">The <xref:System.Data.Metadata.Edm.DataSpace.CSpace> represents the default name for the conceptual model.</span></span> <span data-ttu-id="de60c-110"><xref:System.Data.Metadata.Edm.DataSpace.SSpace> 代表儲存體模型的預設名稱。</span><span class="sxs-lookup"><span data-stu-id="de60c-110">The <xref:System.Data.Metadata.Edm.DataSpace.SSpace> represents the default name for the storage model.</span></span>  
  
 <span data-ttu-id="de60c-111">`GetEntityContainers`方法會取得實體容器的集合，並接著逐一查看集合，以取得每個實體集和關聯集指定的容器中。</span><span class="sxs-lookup"><span data-stu-id="de60c-111">The `GetEntityContainers` method gets a collection of entity containers and then iterates through the collection to get each entity set and association set in the specified container.</span></span> <span data-ttu-id="de60c-112">程式碼範例會使用所提供的 AdventureWorks 模型[Adventure Works Model (EDM)](https://msdn.microsoft.com/library/da87d29e-8c89-4310-bbac-5cbd062930a7)主題。</span><span class="sxs-lookup"><span data-stu-id="de60c-112">The code sample uses the AdventureWorks Model that is provided in the [Adventure Works Model (EDM)](https://msdn.microsoft.com/library/da87d29e-8c89-4310-bbac-5cbd062930a7) topic.</span></span> <span data-ttu-id="de60c-113">如需應用程式組態檔的範例，請參閱 < [Adventure Works 物件模型中的應用程式 (EDM) 所](https://msdn.microsoft.com/library/84c01270-90ba-467b-ad24-df10c1ca8f45)。</span><span class="sxs-lookup"><span data-stu-id="de60c-113">For an example of the application config file, see [Adventure Works Object Model in Applications (EDM)](https://msdn.microsoft.com/library/84c01270-90ba-467b-ad24-df10c1ca8f45).</span></span>  
  
```csharp  
using System;  
using System.Data;  
using System.Data.EntityClient;  
using System.Data.Metadata.Edm;  
using System.Collections.ObjectModel;  
  
class GetEntityContainerExample  
{  
  static void Main()  
  {  
    try  
    {  
       // Establish a connection to the underlying data provider by   
       // using the connection string specified in the config file.  
       using (EntityConnection connection =  
          new EntityConnection("Name=AdventureWorksEntities"))  
       {  
         // Open the connection.  
         connection.Open();  
  
         // Access the metadata workspace.  
         MetadataWorkspace workspace =   
            connection.GetMetadataWorkspace();  
  
         // Get the entity containers in the conceptual model.  
         GetEntityContainers(workspace, DataSpace.CSpace);  
  
         // Get the entity containers in the storage model.  
             GetEntityContainers(workspace, DataSpace.SSpace);  
       }  
    }  
    catch (MetadataException exceptionMetadata)  
    {  
      Console.WriteLine("MetadataException: {0}",   
                       exceptionMetadata.Message);  
    }  
    catch (System.Data.MappingException exceptionMapping)  
    {  
      Console.WriteLine("MappingException: {0}",  
                       exceptionMapping.Message);  
    }  
  }  
  
  public static void GetEntityContainers(  
      MetadataWorkspace workspace, DataSpace model)  
  {  
    // Get a collection of the entity containers.  
    ReadOnlyCollection<EntityContainer> containers =   
         workspace.GetItems<EntityContainer>(model);  
  
    // Iterate through the collection to get each entity container.  
    foreach (EntityContainer container in containers)  
    {  
       Console.WriteLine("EntityContainer Name: {0} ",   
                        container.Name);  
  
       // EntitySetBase is a super type for   
       // EntitySets and RelationshipSets.   
       // Iterate through the collection to get each EntitySetBase.  
       foreach (EntitySetBase baseSet in container.BaseEntitySets)  
       {  
          // Check if this instance is an EntitySet.  
          if (baseSet is EntitySet)  
          {  
             Console.WriteLine(  
                "  EntitySet Name: {0} , EntityType Name: {1} ",  
                baseSet.Name, baseSet.ElementType.FullName);  
          }  
  
         // RelationshipSet is a super type for AssociationSet.  
         // Check if this instance is an AssociationSet.  
         if (baseSet is AssociationSet)  
         {  
            Console.WriteLine(  
               "  AssociationSet Name: {0} , " +  
               "AssociationType Name: {1} ",  
                baseSet.Name, baseSet.ElementType.FullName);  
  
            // Get the AssociationSet.  
            AssociationSet associationSet =   
                  baseSet as AssociationSet;  
  
            // Iterate through the collection to get   
            // each AssociatedSetEnd.  
            foreach (AssociationSetEnd end in   
               associationSet.AssociationSetEnds)  
            {  
               Console.WriteLine(  
                  "   EntitySet Name: {0} , Name: {1} ",  
                  end.EntitySet, end.Name);  
            }  
         }  
      }  
    }  
  }  
}  
```  
  
```vb  
Imports System  
Imports System.Collections.ObjectModel  
Imports System.Data  
Imports System.Data.EntityClient  
Imports System.Data.Metadata.Edm  
  
Class GetEntityContainerExample  
  Public Shared Sub Main()  
    Try  
      ' Establish a connection to the underlying data provider by   
      ' using the connection string specified in the config file.  
      Using connection As EntityConnection = _  
        New EntityConnection("Name=AdventureWorksEntities")  
  
        ' Open the conection.  
        connection.Open()  
  
        ' Access the metadata workspace.  
        Dim workspace As MetadataWorkspace = _  
           connection.GetMetadataWorkspace  
  
        ' Get the entity containers in the conceptual model.  
        GetEntityContainers(workspace, DataSpace.CSpace)  
  
        ' Get the entity containers in the storage model.  
        GetEntityContainers(workspace, DataSpace.SSpace)  
      End Using  
    Catch exceptionMetadata As MetadataException  
       Console.WriteLine("MetadataException: {0}", _  
          exceptionMetadata.Message)  
    Catch exceptionMapping As MappingException  
       Console.WriteLine("MappingException: {0}", _  
          exceptionMapping.Message)  
     End Try  
  End Sub  
  
  Public Shared Sub GetEntityContainers( _  
    ByVal workspace As MetadataWorkspace, ByVal model As DataSpace)  
  
    ' Get a collection of the entity containers.  
    Dim containers As ReadOnlyCollection(Of EntityContainer) = _  
       workspace.GetItems(Of EntityContainer)(model)  
  
    ' Iterate through the collection to get each entity container.  
    Dim container As EntityContainer  
    For Each container In containers  
      Console.WriteLine("EntityContainer Name: {0} ", container.Name)  
  
      ' EntitySetBase is a super type for   
      ' EntitySets and RelationshipSets.   
      ' Iterate through the collection to get each EntitySetBase.  
      Dim baseSet As EntitySetBase  
      For Each baseSet In container.BaseEntitySets  
         ' Check if this instance is an EntitySet.  
         If TypeOf baseSet Is EntitySet Then  
           Console.WriteLine( _  
              "  EntitySet Name: {0} , EntityType Name: {1} ", _  
              baseSet.Name, baseSet.ElementType.FullName)  
          End If  
  
          ' RelationshipSet is a super type for AssociationSet.  
          ' Check if this instance is an AssociationSet.  
          If TypeOf baseSet Is AssociationSet Then  
            Console.WriteLine( _  
              "  AssociationSet Name: {0} , " + _  
              "AssociationType Name: {1} ", _  
              baseSet.Name, baseSet.ElementType.FullName)  
  
            ' Get the AssociationSet.  
            Dim associationSet As AssociationSet = _  
               TryCast(baseSet, AssociationSet)  
  
            ' Iterate through the collection to get   
            '  each AssociatedSetEnd.  
            Dim endMember As AssociationSetEnd  
            For Each endMember In associationSet.AssociationSetEnds  
              Console.WriteLine( _  
                 "   EntitySet Name: {0} , Name: {1} ", _  
                 endMember.EntitySet, endMember.Name)  
            Next  
          End If  
      Next  
    Next  
  End Sub  
End Class  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="BaseEntitySets">
      <MemberSignature Language="C#" Value="public System.Data.Metadata.Edm.ReadOnlyMetadataCollection&lt;System.Data.Metadata.Edm.EntitySetBase&gt; BaseEntitySets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1&lt;class System.Data.Metadata.Edm.EntitySetBase&gt; BaseEntitySets" />
      <MemberSignature Language="DocId" Value="P:System.Data.Metadata.Edm.EntityContainer.BaseEntitySets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BaseEntitySets As ReadOnlyMetadataCollection(Of EntitySetBase)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Metadata::Edm::ReadOnlyMetadataCollection&lt;System::Data::Metadata::Edm::EntitySetBase ^&gt; ^ BaseEntitySets { System::Data::Metadata::Edm::ReadOnlyMetadataCollection&lt;System::Data::Metadata::Edm::EntitySetBase ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BaseEntitySets : System.Data.Metadata.Edm.ReadOnlyMetadataCollection&lt;System.Data.Metadata.Edm.EntitySetBase&gt;" Usage="System.Data.Metadata.Edm.EntityContainer.BaseEntitySets" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.ReadOnlyMetadataCollection&lt;System.Data.Metadata.Edm.EntitySetBase&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="de60c-114">取得這個 <see cref="T:System.Data.Metadata.Edm.EntityContainer" /> 包含的實體集合和關聯集合的清單。</span><span class="sxs-lookup"><span data-stu-id="de60c-114">Gets a list of entity sets and association sets that this <see cref="T:System.Data.Metadata.Edm.EntityContainer" /> includes.</span></span></summary>
        <value><span data-ttu-id="de60c-115"><see cref="T:System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1" /> 物件，包含這個 <see cref="T:System.Data.Metadata.Edm.EntityContainer" /> 包含的實體集合和關聯集合的清單。</span><span class="sxs-lookup"><span data-stu-id="de60c-115">A <see cref="T:System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1" /> object that contains a list of entity sets and association sets that this <see cref="T:System.Data.Metadata.Edm.EntityContainer" /> includes.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BuiltInTypeKind">
      <MemberSignature Language="C#" Value="public override System.Data.Metadata.Edm.BuiltInTypeKind BuiltInTypeKind { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.Metadata.Edm.BuiltInTypeKind BuiltInTypeKind" />
      <MemberSignature Language="DocId" Value="P:System.Data.Metadata.Edm.EntityContainer.BuiltInTypeKind" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property BuiltInTypeKind As BuiltInTypeKind" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::Metadata::Edm::BuiltInTypeKind BuiltInTypeKind { System::Data::Metadata::Edm::BuiltInTypeKind get(); };" />
      <MemberSignature Language="F#" Value="member this.BuiltInTypeKind : System.Data.Metadata.Edm.BuiltInTypeKind" Usage="System.Data.Metadata.Edm.EntityContainer.BuiltInTypeKind" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.BuiltInTypeKind</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="de60c-116">取得這個 <see cref="T:System.Data.Metadata.Edm.EntityContainer" /> 的內建型別類型。</span><span class="sxs-lookup"><span data-stu-id="de60c-116">Gets the built-in type kind for this <see cref="T:System.Data.Metadata.Edm.EntityContainer" />.</span></span></summary>
        <value><span data-ttu-id="de60c-117"><see cref="T:System.Data.Metadata.Edm.BuiltInTypeKind" /> 物件，表示這個 <see cref="T:System.Data.Metadata.Edm.EntityContainer" /> 的內建型別類型。</span><span class="sxs-lookup"><span data-stu-id="de60c-117">A <see cref="T:System.Data.Metadata.Edm.BuiltInTypeKind" /> object that represents the built-in type kind for this <see cref="T:System.Data.Metadata.Edm.EntityContainer" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FunctionImports">
      <MemberSignature Language="C#" Value="public System.Data.Metadata.Edm.ReadOnlyMetadataCollection&lt;System.Data.Metadata.Edm.EdmFunction&gt; FunctionImports { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1&lt;class System.Data.Metadata.Edm.EdmFunction&gt; FunctionImports" />
      <MemberSignature Language="DocId" Value="P:System.Data.Metadata.Edm.EntityContainer.FunctionImports" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FunctionImports As ReadOnlyMetadataCollection(Of EdmFunction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Metadata::Edm::ReadOnlyMetadataCollection&lt;System::Data::Metadata::Edm::EdmFunction ^&gt; ^ FunctionImports { System::Data::Metadata::Edm::ReadOnlyMetadataCollection&lt;System::Data::Metadata::Edm::EdmFunction ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FunctionImports : System.Data.Metadata.Edm.ReadOnlyMetadataCollection&lt;System.Data.Metadata.Edm.EdmFunction&gt;" Usage="System.Data.Metadata.Edm.EntityContainer.FunctionImports" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.ReadOnlyMetadataCollection&lt;System.Data.Metadata.Edm.EdmFunction&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="de60c-118">指定 <see cref="T:System.Data.Metadata.Edm.EdmFunction" /> 項目的集合。</span><span class="sxs-lookup"><span data-stu-id="de60c-118">Specifies a collection of <see cref="T:System.Data.Metadata.Edm.EdmFunction" /> elements.</span></span> <span data-ttu-id="de60c-119">每個函式都包含存在於資料庫中的預存程序詳細資料，或者包含對應至實體及其屬性的對等 <c>CommandText</c>。</span><span class="sxs-lookup"><span data-stu-id="de60c-119">Each function contains the details of a stored procedure that exists in the database or equivalent <c>CommandText</c> that is mapped to an entity and its properties.</span></span></summary>
        <value><span data-ttu-id="de60c-120">包含 <see cref="T:System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1" /> 項目的 <see cref="T:System.Data.Metadata.Edm.EdmFunction" />。</span><span class="sxs-lookup"><span data-stu-id="de60c-120">A <see cref="T:System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1" /> that contains <see cref="T:System.Data.Metadata.Edm.EdmFunction" /> elements.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEntitySetByName">
      <MemberSignature Language="C#" Value="public System.Data.Metadata.Edm.EntitySet GetEntitySetByName (string name, bool ignoreCase);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Metadata.Edm.EntitySet GetEntitySetByName(string name, bool ignoreCase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.EntityContainer.GetEntitySetByName(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEntitySetByName (name As String, ignoreCase As Boolean) As EntitySet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Metadata::Edm::EntitySet ^ GetEntitySetByName(System::String ^ name, bool ignoreCase);" />
      <MemberSignature Language="F#" Value="member this.GetEntitySetByName : string * bool -&gt; System.Data.Metadata.Edm.EntitySet" Usage="entityContainer.GetEntitySetByName (name, ignoreCase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.EntitySet</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="de60c-121">所搜尋之實體集合的名稱。</span><span class="sxs-lookup"><span data-stu-id="de60c-121">The name of the entity set that is searched for.</span></span></param>
        <param name="ignoreCase"><span data-ttu-id="de60c-122"><see langword="true" /> 表示要執行不區分大小寫的搜尋，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="de60c-122"><see langword="true" /> to perform the case-insensitive search; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="de60c-123">使用實體集合的指定名稱傳回 <see cref="T:System.Data.Metadata.Edm.EntitySet" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="de60c-123">Returns an <see cref="T:System.Data.Metadata.Edm.EntitySet" /> object by using the specified name for the entity set.</span></span></summary>
        <returns><span data-ttu-id="de60c-124"><see cref="T:System.Data.Metadata.Edm.EntitySet" /> 物件，表示具有指定名稱的實體集合。</span><span class="sxs-lookup"><span data-stu-id="de60c-124">An <see cref="T:System.Data.Metadata.Edm.EntitySet" /> object that represents the entity set that has the specified name.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRelationshipSetByName">
      <MemberSignature Language="C#" Value="public System.Data.Metadata.Edm.RelationshipSet GetRelationshipSetByName (string name, bool ignoreCase);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Metadata.Edm.RelationshipSet GetRelationshipSetByName(string name, bool ignoreCase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.EntityContainer.GetRelationshipSetByName(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRelationshipSetByName (name As String, ignoreCase As Boolean) As RelationshipSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Metadata::Edm::RelationshipSet ^ GetRelationshipSetByName(System::String ^ name, bool ignoreCase);" />
      <MemberSignature Language="F#" Value="member this.GetRelationshipSetByName : string * bool -&gt; System.Data.Metadata.Edm.RelationshipSet" Usage="entityContainer.GetRelationshipSetByName (name, ignoreCase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.RelationshipSet</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="de60c-125">所搜尋之關聯性集合的名稱。</span><span class="sxs-lookup"><span data-stu-id="de60c-125">The name of the relationship set that is searched for.</span></span></param>
        <param name="ignoreCase"><span data-ttu-id="de60c-126"><see langword="true" /> 表示要執行不區分大小寫的搜尋，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="de60c-126"><see langword="true" /> to perform the case-insensitive search; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="de60c-127">使用關聯性 (Relationship) 集合的指定名稱傳回 <see cref="T:System.Data.Metadata.Edm.RelationshipSet" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="de60c-127">Returns a <see cref="T:System.Data.Metadata.Edm.RelationshipSet" /> object by using the specified name for the relationship set.</span></span></summary>
        <returns><span data-ttu-id="de60c-128"><see cref="T:System.Data.Metadata.Edm.RelationshipSet" /> 物件，表示具有指定名稱的關聯性集合。</span><span class="sxs-lookup"><span data-stu-id="de60c-128">An <see cref="T:System.Data.Metadata.Edm.RelationshipSet" /> object that represents the relationship set that has the specified name.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Data.Metadata.Edm.EntityContainer.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Data.Metadata.Edm.EntityContainer.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="de60c-129">取得這個 <see cref="T:System.Data.Metadata.Edm.EntityContainer" /> 的名稱。</span><span class="sxs-lookup"><span data-stu-id="de60c-129">Gets the name of this <see cref="T:System.Data.Metadata.Edm.EntityContainer" />.</span></span></summary>
        <value><span data-ttu-id="de60c-130">這個 <see cref="T:System.Data.Metadata.Edm.EntityContainer" /> 的名稱。</span><span class="sxs-lookup"><span data-stu-id="de60c-130">The name of this <see cref="T:System.Data.Metadata.Edm.EntityContainer" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.EntityContainer.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="entityContainer.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="de60c-131">傳回這個 <see cref="T:System.Data.Metadata.Edm.EntityContainer" /> 的名稱。</span><span class="sxs-lookup"><span data-stu-id="de60c-131">Returns the name of this <see cref="T:System.Data.Metadata.Edm.EntityContainer" />.</span></span></summary>
        <returns><span data-ttu-id="de60c-132">這個 <see cref="T:System.Data.Metadata.Edm.EntityContainer" /> 的名稱。</span><span class="sxs-lookup"><span data-stu-id="de60c-132">The name of this <see cref="T:System.Data.Metadata.Edm.EntityContainer" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetEntitySetByName">
      <MemberSignature Language="C#" Value="public bool TryGetEntitySetByName (string name, bool ignoreCase, out System.Data.Metadata.Edm.EntitySet entitySet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetEntitySetByName(string name, bool ignoreCase, [out] class System.Data.Metadata.Edm.EntitySet&amp; entitySet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.EntityContainer.TryGetEntitySetByName(System.String,System.Boolean,System.Data.Metadata.Edm.EntitySet@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetEntitySetByName (name As String, ignoreCase As Boolean, ByRef entitySet As EntitySet) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetEntitySetByName(System::String ^ name, bool ignoreCase, [Runtime::InteropServices::Out] System::Data::Metadata::Edm::EntitySet ^ % entitySet);" />
      <MemberSignature Language="F#" Value="member this.TryGetEntitySetByName : string * bool *  -&gt; bool" Usage="entityContainer.TryGetEntitySetByName (name, ignoreCase, entitySet)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="entitySet" Type="System.Data.Metadata.Edm.EntitySet" RefType="out" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="de60c-133">所搜尋之實體集合的名稱。</span><span class="sxs-lookup"><span data-stu-id="de60c-133">The name of the entity set that is searched for.</span></span></param>
        <param name="ignoreCase"><span data-ttu-id="de60c-134"><see langword="true" /> 表示要執行不區分大小寫的搜尋，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="de60c-134"><see langword="true" /> to perform the case-insensitive search; otherwise, <see langword="false" />.</span></span></param>
        <param name="entitySet"><span data-ttu-id="de60c-135">在這個方法傳回時會包含 <see cref="T:System.Data.Metadata.Edm.EntitySet" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="de60c-135">When this method returns, contains an <see cref="T:System.Data.Metadata.Edm.EntitySet" /> object.</span></span> <span data-ttu-id="de60c-136">如果沒有實體集，這個輸出參數會包含 null。</span><span class="sxs-lookup"><span data-stu-id="de60c-136">If there is no entity set, this output parameter contains null.</span></span></param>
        <summary><span data-ttu-id="de60c-137">使用實體集合的指定名稱傳回 <see cref="T:System.Data.Metadata.Edm.EntitySet" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="de60c-137">Returns an <see cref="T:System.Data.Metadata.Edm.EntitySet" /> object by using the specified name for the entity set.</span></span></summary>
        <returns><span data-ttu-id="de60c-138">如果有符合搜尋準則的實體集，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="de60c-138"><see langword="true" /> if there is an entity set that matches the search criteria; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetRelationshipSetByName">
      <MemberSignature Language="C#" Value="public bool TryGetRelationshipSetByName (string name, bool ignoreCase, out System.Data.Metadata.Edm.RelationshipSet relationshipSet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetRelationshipSetByName(string name, bool ignoreCase, [out] class System.Data.Metadata.Edm.RelationshipSet&amp; relationshipSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.EntityContainer.TryGetRelationshipSetByName(System.String,System.Boolean,System.Data.Metadata.Edm.RelationshipSet@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetRelationshipSetByName (name As String, ignoreCase As Boolean, ByRef relationshipSet As RelationshipSet) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetRelationshipSetByName(System::String ^ name, bool ignoreCase, [Runtime::InteropServices::Out] System::Data::Metadata::Edm::RelationshipSet ^ % relationshipSet);" />
      <MemberSignature Language="F#" Value="member this.TryGetRelationshipSetByName : string * bool *  -&gt; bool" Usage="entityContainer.TryGetRelationshipSetByName (name, ignoreCase, relationshipSet)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="relationshipSet" Type="System.Data.Metadata.Edm.RelationshipSet" RefType="out" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="de60c-139">所搜尋之關聯性集合的名稱。</span><span class="sxs-lookup"><span data-stu-id="de60c-139">The name of the relationship set that is searched for.</span></span></param>
        <param name="ignoreCase"><span data-ttu-id="de60c-140"><see langword="true" /> 表示要執行不區分大小寫的搜尋，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="de60c-140"><see langword="true" /> to perform the case-insensitive search; otherwise, <see langword="false" />.</span></span></param>
        <param name="relationshipSet"><span data-ttu-id="de60c-141">在這個方法傳回時會包含 <see cref="T:System.Data.Metadata.Edm.RelationshipSet" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="de60c-141">When this method returns, contains a <see cref="T:System.Data.Metadata.Edm.RelationshipSet" /> object.</span></span></param>
        <summary><span data-ttu-id="de60c-142">使用關聯性 (Relationship) 集合的指定名稱傳回 <see cref="T:System.Data.Metadata.Edm.RelationshipSet" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="de60c-142">Returns a <see cref="T:System.Data.Metadata.Edm.RelationshipSet" /> object by using the specified name for the relationship set.</span></span></summary>
        <returns><span data-ttu-id="de60c-143">如果有符合搜尋準則的關聯性集合，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="de60c-143"><see langword="true" /> if there is a relationship set that matches the search criteria; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>