<Type Name="ParameterTypeSemantics" FullName="System.Data.Metadata.Edm.ParameterTypeSemantics">
  <TypeSignature Language="C#" Value="public enum ParameterTypeSemantics" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ParameterTypeSemantics extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Data.Metadata.Edm.ParameterTypeSemantics" />
  <TypeSignature Language="VB.NET" Value="Public Enum ParameterTypeSemantics" />
  <TypeSignature Language="C++ CLI" Value="public enum class ParameterTypeSemantics" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary><span data-ttu-id="f826a-101">指定用來解決函式多載的型別語意 (Semantics)。</span><span class="sxs-lookup"><span data-stu-id="f826a-101">Specifies the type semantics that are used to resolve the function overloads.</span></span> <span data-ttu-id="f826a-102">每個存放區提供者都必須在提供者資訊清單中針對每個函式定義來使用這些列舉旗標。</span><span class="sxs-lookup"><span data-stu-id="f826a-102">Each store provider must use these enumeration flags in the provider manifest file for every function definition.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f826a-103"><xref:System.Data.Metadata.Edm.ParameterTypeSemantics>類別指定的類型語意，提升、 隱含轉換，和提供者的基本類型的明確轉換。</span><span class="sxs-lookup"><span data-stu-id="f826a-103">The <xref:System.Data.Metadata.Edm.ParameterTypeSemantics> class specifies type semantics for promotability, implicit conversion, and explicit conversion for the provider primitive types.</span></span> [!INCLUDE[vstecado](~/includes/vstecado-md.md)]<span data-ttu-id="f826a-104"> 從存放裝置提供者資訊清單檔，將會讀取此資訊<xref:System.Data.Metadata.Edm.ParameterTypeSemantics>類別。</span><span class="sxs-lookup"><span data-stu-id="f826a-104"> reads this information from the storage provider manifest file into the <xref:System.Data.Metadata.Edm.ParameterTypeSemantics> class.</span></span> <span data-ttu-id="f826a-105">然後 [!INCLUDE[vstecado](~/includes/vstecado-md.md)] 再使用 <xref:System.Data.Metadata.Edm.ParameterTypeSemantics> 類別，根據參數型別來判斷適當的函式定義。</span><span class="sxs-lookup"><span data-stu-id="f826a-105">Then, [!INCLUDE[vstecado](~/includes/vstecado-md.md)] uses the <xref:System.Data.Metadata.Edm.ParameterTypeSemantics> class to determine the appropriate function definitions based on the parameter types.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AllowImplicitConversion">
      <MemberSignature Language="C#" Value="AllowImplicitConversion" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.Metadata.Edm.ParameterTypeSemantics AllowImplicitConversion = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Data.Metadata.Edm.ParameterTypeSemantics.AllowImplicitConversion" />
      <MemberSignature Language="VB.NET" Value="AllowImplicitConversion" />
      <MemberSignature Language="C++ CLI" Value="AllowImplicitConversion" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.ParameterTypeSemantics</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="f826a-106">表示在指定及型式引數型別之間隱含轉換的旗標。</span><span class="sxs-lookup"><span data-stu-id="f826a-106">A flag indicating the implicit conversion between the given and the formal argument types.</span></span> <span data-ttu-id="f826a-107">此為預設轉換型別。</span><span class="sxs-lookup"><span data-stu-id="f826a-107">This is the default conversion type.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="AllowImplicitPromotion">
      <MemberSignature Language="C#" Value="AllowImplicitPromotion" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.Metadata.Edm.ParameterTypeSemantics AllowImplicitPromotion = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Data.Metadata.Edm.ParameterTypeSemantics.AllowImplicitPromotion" />
      <MemberSignature Language="VB.NET" Value="AllowImplicitPromotion" />
      <MemberSignature Language="C++ CLI" Value="AllowImplicitPromotion" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.ParameterTypeSemantics</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="f826a-108">表示在指定及型式引數型別之間型別提升的旗標。</span><span class="sxs-lookup"><span data-stu-id="f826a-108">A flag indicating the type promotion between the given and the formal argument types.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="ExactMatchOnly">
      <MemberSignature Language="C#" Value="ExactMatchOnly" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.Metadata.Edm.ParameterTypeSemantics ExactMatchOnly = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Data.Metadata.Edm.ParameterTypeSemantics.ExactMatchOnly" />
      <MemberSignature Language="VB.NET" Value="ExactMatchOnly" />
      <MemberSignature Language="C++ CLI" Value="ExactMatchOnly" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.ParameterTypeSemantics</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary><span data-ttu-id="f826a-109">表示僅使用嚴格對等的旗標。</span><span class="sxs-lookup"><span data-stu-id="f826a-109">A flag indicating the usage of strict equivalence only.</span></span></summary>
      </Docs>
    </Member>
  </Members>
</Type>