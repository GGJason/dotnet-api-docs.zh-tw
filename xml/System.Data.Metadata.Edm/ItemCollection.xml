<Type Name="ItemCollection" FullName="System.Data.Metadata.Edm.ItemCollection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b9904832e8b49bfa8b33af5b274c67beceb14495" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36688097" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class ItemCollection : System.Data.Metadata.Edm.ReadOnlyMetadataCollection&lt;System.Data.Metadata.Edm.GlobalItem&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ItemCollection extends System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1&lt;class System.Data.Metadata.Edm.GlobalItem&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Data.Metadata.Edm.ItemCollection" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ItemCollection&#xA;Inherits ReadOnlyMetadataCollection(Of GlobalItem)" />
  <TypeSignature Language="C++ CLI" Value="public ref class ItemCollection abstract : System::Data::Metadata::Edm::ReadOnlyMetadataCollection&lt;System::Data::Metadata::Edm::GlobalItem ^&gt;" />
  <TypeSignature Language="F#" Value="type ItemCollection = class&#xA;    inherit ReadOnlyMetadataCollection&lt;GlobalItem&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Metadata.Edm.ReadOnlyMetadataCollection&lt;System.Data.Metadata.Edm.GlobalItem&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="T">System.Data.Metadata.Edm.GlobalItem</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.CLSCompliant(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <see cref="T:System.Data.Metadata.Edm.ObjectItemCollection" />、<see cref="T:System.Data.Metadata.Edm.EdmItemCollection" /> 和 <see cref="T:System.Data.Mapping.StorageMappingItemCollection" /> 類別的基底類別 (Base Class)。 <see cref="T:System.Data.Metadata.Edm.ItemCollection" /> 類別，這個類別是抽象類別 (Abstract Class)，並可提供核心 API 來載入和保存記憶體中的中繼資料。 這個類別衍生自 <see cref="T:System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1" /> 類別。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如需詳細資訊，請參閱[項目集合 （中繼資料）](http://msdn.microsoft.com/library/3051a40a-ff45-42f8-8f93-7545e427a404)。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="DataSpace">
      <MemberSignature Language="C#" Value="public System.Data.Metadata.Edm.DataSpace DataSpace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.Metadata.Edm.DataSpace DataSpace" />
      <MemberSignature Language="DocId" Value="P:System.Data.Metadata.Edm.ItemCollection.DataSpace" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataSpace As DataSpace" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Metadata::Edm::DataSpace DataSpace { System::Data::Metadata::Edm::DataSpace get(); };" />
      <MemberSignature Language="F#" Value="member this.DataSpace : System.Data.Metadata.Edm.DataSpace" Usage="System.Data.Metadata.Edm.ItemCollection.DataSpace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.DataSpace</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得與這個項目集合相關聯的資料模型。</summary>
        <value>與這個項目集合相關聯的資料模型。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個屬性會傳回 <xref:System.Data.Metadata.Edm.DataSpace.OSpace> 的 <xref:System.Data.Metadata.Edm.ObjectItemCollection>、<xref:System.Data.Metadata.Edm.DataSpace.CSpace> 的<xref:System.Data.Metadata.Edm.EdmItemCollection>，以及 <xref:System.Data.Metadata.Edm.DataSpace.CSSpace> 的 <xref:System.Data.Mapping.StorageMappingItemCollection>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetEntityContainer">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>使用指定的實體容器名稱傳回 <see cref="T:System.Data.Metadata.Edm.EntityContainer" />。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetEntityContainer">
      <MemberSignature Language="C#" Value="public System.Data.Metadata.Edm.EntityContainer GetEntityContainer (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Metadata.Edm.EntityContainer GetEntityContainer(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.ItemCollection.GetEntityContainer(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEntityContainer (name As String) As EntityContainer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Metadata::Edm::EntityContainer ^ GetEntityContainer(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.GetEntityContainer : string -&gt; System.Data.Metadata.Edm.EntityContainer" Usage="itemCollection.GetEntityContainer name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.EntityContainer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">實體容器的名稱。</param>
        <summary>使用指定的實體容器名稱傳回 <see cref="T:System.Data.Metadata.Edm.EntityContainer" />。</summary>
        <returns>如果沒有實體容器，這個方法會傳回 null，否則會傳回第一個值。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEntityContainer">
      <MemberSignature Language="C#" Value="public System.Data.Metadata.Edm.EntityContainer GetEntityContainer (string name, bool ignoreCase);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Metadata.Edm.EntityContainer GetEntityContainer(string name, bool ignoreCase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.ItemCollection.GetEntityContainer(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEntityContainer (name As String, ignoreCase As Boolean) As EntityContainer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Metadata::Edm::EntityContainer ^ GetEntityContainer(System::String ^ name, bool ignoreCase);" />
      <MemberSignature Language="F#" Value="member this.GetEntityContainer : string * bool -&gt; System.Data.Metadata.Edm.EntityContainer" Usage="itemCollection.GetEntityContainer (name, ignoreCase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.EntityContainer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name">實體容器的名稱。</param>
        <param name="ignoreCase">
          <see langword="true" /> 表示要執行不區分大小寫的搜尋，否則為 <see langword="false" />。</param>
        <summary>使用指定的實體容器名稱傳回 <see cref="T:System.Data.Metadata.Edm.EntityContainer" />。</summary>
        <returns>如果沒有實體容器，這個方法會傳回 null，否則會傳回第一個實體容器。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetFunctions">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>使用這個項目集合的指定名稱傳回函式的所有多載。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetFunctions">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Metadata.Edm.EdmFunction&gt; GetFunctions (string functionName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Data.Metadata.Edm.EdmFunction&gt; GetFunctions(string functionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.ItemCollection.GetFunctions(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFunctions (functionName As String) As ReadOnlyCollection(Of EdmFunction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Data::Metadata::Edm::EdmFunction ^&gt; ^ GetFunctions(System::String ^ functionName);" />
      <MemberSignature Language="F#" Value="member this.GetFunctions : string -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Metadata.Edm.EdmFunction&gt;" Usage="itemCollection.GetFunctions functionName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Metadata.Edm.EdmFunction&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="functionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="functionName">函式的全名。</param>
        <summary>使用這個項目集合的指定名稱傳回函式的所有多載。</summary>
        <returns>型別 <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> 的集合，其中包含所有具有指定名稱的函式。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFunctions">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Metadata.Edm.EdmFunction&gt; GetFunctions (string functionName, bool ignoreCase);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Data.Metadata.Edm.EdmFunction&gt; GetFunctions(string functionName, bool ignoreCase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.ItemCollection.GetFunctions(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFunctions (functionName As String, ignoreCase As Boolean) As ReadOnlyCollection(Of EdmFunction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Data::Metadata::Edm::EdmFunction ^&gt; ^ GetFunctions(System::String ^ functionName, bool ignoreCase);" />
      <MemberSignature Language="F#" Value="member this.GetFunctions : string * bool -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Metadata.Edm.EdmFunction&gt;" Usage="itemCollection.GetFunctions (functionName, ignoreCase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Metadata.Edm.EdmFunction&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="functionName" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="functionName">函式的全名。</param>
        <param name="ignoreCase">
          <see langword="true" /> 表示要執行不區分大小寫的搜尋，否則為 <see langword="false" />。</param>
        <summary>使用這個項目集合的指定名稱傳回函式的所有多載。</summary>
        <returns>型別 <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> 的集合，其中包含所有具有指定名稱的函式。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFunctions">
      <MemberSignature Language="C#" Value="protected static System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Metadata.Edm.EdmFunction&gt; GetFunctions (System.Collections.Generic.Dictionary&lt;string,System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Metadata.Edm.EdmFunction&gt;&gt; functionCollection, string functionName, bool ignoreCase);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Data.Metadata.Edm.EdmFunction&gt; GetFunctions(class System.Collections.Generic.Dictionary`2&lt;string, class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Data.Metadata.Edm.EdmFunction&gt;&gt; functionCollection, string functionName, bool ignoreCase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.ItemCollection.GetFunctions(System.Collections.Generic.Dictionary{System.String,System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Metadata.Edm.EdmFunction}},System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function GetFunctions (functionCollection As Dictionary(Of String, ReadOnlyCollection(Of EdmFunction)), functionName As String, ignoreCase As Boolean) As ReadOnlyCollection(Of EdmFunction)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Data::Metadata::Edm::EdmFunction ^&gt; ^ GetFunctions(System::Collections::Generic::Dictionary&lt;System::String ^, System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Data::Metadata::Edm::EdmFunction ^&gt; ^&gt; ^ functionCollection, System::String ^ functionName, bool ignoreCase);" />
      <MemberSignature Language="F#" Value="static member GetFunctions : System.Collections.Generic.Dictionary&lt;string, System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Metadata.Edm.EdmFunction&gt;&gt; * string * bool -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Metadata.Edm.EdmFunction&gt;" Usage="System.Data.Metadata.Edm.ItemCollection.GetFunctions (functionCollection, functionName, ignoreCase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Metadata.Edm.EdmFunction&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="functionCollection" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Metadata.Edm.EdmFunction&gt;&gt;" />
        <Parameter Name="functionName" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="functionCollection">函式的字典。</param>
        <param name="functionName">函式的全名。</param>
        <param name="ignoreCase">
          <see langword="true" /> 表示要執行不區分大小寫的搜尋，否則為 <see langword="false" />。</param>
        <summary>使用這個項目集合的指定名稱傳回函式的所有多載。</summary>
        <returns>型別 ReadOnlyCollection 的集合，其中包含所有具有指定名稱的函式。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetItem&lt;T&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>傳回由識別 (Identity) 所指定的項目。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetItem&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T GetItem&lt;T&gt; (string identity) where T : System.Data.Metadata.Edm.GlobalItem;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!T GetItem&lt;(class System.Data.Metadata.Edm.GlobalItem) T&gt;(string identity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.ItemCollection.GetItem``1(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItem(Of T As GlobalItem) (identity As String) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : System::Data::Metadata::Edm::GlobalItem T GetItem(System::String ^ identity);" />
      <MemberSignature Language="F#" Value="member this.GetItem : string -&gt; 'T (requires 'T :&gt; System.Data.Metadata.Edm.GlobalItem)" Usage="itemCollection.GetItem identity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.Data.Metadata.Edm.GlobalItem</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="identity" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">此方法傳回的型別。</typeparam>
        <param name="identity">項目的識別。</param>
        <summary>使用指定的識別傳回強型別 (Strongly Typed) <see cref="T:System.Data.Metadata.Edm.GlobalItem" /> 物件。</summary>
        <returns>由識別所指定的項目。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItem&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T GetItem&lt;T&gt; (string identity, bool ignoreCase) where T : System.Data.Metadata.Edm.GlobalItem;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!T GetItem&lt;(class System.Data.Metadata.Edm.GlobalItem) T&gt;(string identity, bool ignoreCase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.ItemCollection.GetItem``1(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItem(Of T As GlobalItem) (identity As String, ignoreCase As Boolean) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : System::Data::Metadata::Edm::GlobalItem T GetItem(System::String ^ identity, bool ignoreCase);" />
      <MemberSignature Language="F#" Value="member this.GetItem : string * bool -&gt; 'T (requires 'T :&gt; System.Data.Metadata.Edm.GlobalItem)" Usage="itemCollection.GetItem (identity, ignoreCase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.Data.Metadata.Edm.GlobalItem</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="identity" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <typeparam name="T">此方法傳回的型別。</typeparam>
        <param name="identity">項目的識別。</param>
        <param name="ignoreCase">
          <see langword="true" /> 表示要執行不區分大小寫的搜尋，否則為 <see langword="false" />。</param>
        <summary>藉由以區分大小寫或不區分大小寫的搜尋，使用指定的識別傳回強型別 <see cref="T:System.Data.Metadata.Edm.GlobalItem" /> 物件。</summary>
        <returns>由識別所指定的項目。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItems&lt;T&gt;">
      <MemberSignature Language="C#" Value="public virtual System.Collections.ObjectModel.ReadOnlyCollection&lt;T&gt; GetItems&lt;T&gt; () where T : System.Data.Metadata.Edm.GlobalItem;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;!!T&gt; GetItems&lt;(class System.Data.Metadata.Edm.GlobalItem) T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.ItemCollection.GetItems``1" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetItems(Of T As GlobalItem) () As ReadOnlyCollection(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : System::Data::Metadata::Edm::GlobalItem virtual System::Collections::ObjectModel::ReadOnlyCollection&lt;T&gt; ^ GetItems();" />
      <MemberSignature Language="F#" Value="abstract member GetItems : unit -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;'T (requires 'T :&gt; System.Data.Metadata.Edm.GlobalItem)&gt; (requires 'T :&gt; System.Data.Metadata.Edm.GlobalItem)&#xA;override this.GetItems : unit -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;'T (requires 'T :&gt; System.Data.Metadata.Edm.GlobalItem)&gt; (requires 'T :&gt; System.Data.Metadata.Edm.GlobalItem)" Usage="itemCollection.GetItems " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.Data.Metadata.Edm.GlobalItem</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">此方法傳回的型別。</typeparam>
        <summary>從這個項目集合傳回指定型別的所有項目。</summary>
        <returns>型別 <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> 的集合，其中包含指定型別的所有項目。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetType">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>使用指定的型別名稱和這個項目集合中的命名空間名稱，傳回 <see cref="T:System.Data.Metadata.Edm.EdmType" /> 物件。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public System.Data.Metadata.Edm.EdmType GetType (string name, string namespaceName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Metadata.Edm.EdmType GetType(string name, string namespaceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.ItemCollection.GetType(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetType (name As String, namespaceName As String) As EdmType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Metadata::Edm::EdmType ^ GetType(System::String ^ name, System::String ^ namespaceName);" />
      <MemberSignature Language="F#" Value="override this.GetType : string * string -&gt; System.Data.Metadata.Edm.EdmType" Usage="itemCollection.GetType (name, namespaceName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.EdmType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="namespaceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">型別的名稱。</param>
        <param name="namespaceName">型別的命名空間。</param>
        <summary>使用指定的型別名稱和這個項目集合中的命名空間名稱，傳回 <see cref="T:System.Data.Metadata.Edm.EdmType" /> 物件。</summary>
        <returns>
          <see cref="T:System.Data.Metadata.Edm.EdmType" /> 物件，表示符合這個項目集合中的指定型別名稱和命名空間名稱的型別。 如果沒有符合的型別，這個方法會傳回 null。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public System.Data.Metadata.Edm.EdmType GetType (string name, string namespaceName, bool ignoreCase);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Metadata.Edm.EdmType GetType(string name, string namespaceName, bool ignoreCase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.ItemCollection.GetType(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetType (name As String, namespaceName As String, ignoreCase As Boolean) As EdmType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Metadata::Edm::EdmType ^ GetType(System::String ^ name, System::String ^ namespaceName, bool ignoreCase);" />
      <MemberSignature Language="F#" Value="override this.GetType : string * string * bool -&gt; System.Data.Metadata.Edm.EdmType" Usage="itemCollection.GetType (name, namespaceName, ignoreCase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.EdmType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="namespaceName" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name">型別的名稱。</param>
        <param name="namespaceName">型別的命名空間。</param>
        <param name="ignoreCase">
          <see langword="true" /> 表示要執行不區分大小寫的搜尋，否則為 <see langword="false" />。</param>
        <summary>使用指定的型別名稱和這個項目集合中的命名空間名稱，傳回 <see cref="T:System.Data.Metadata.Edm.EdmType" /> 物件。</summary>
        <returns>
          <see cref="T:System.Data.Metadata.Edm.EdmType" /> 物件，表示符合這個項目集合中的指定型別名稱和命名空間名稱的型別。 如果沒有符合的型別，這個方法會傳回 null。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryGetEntityContainer">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>使用指定的實體容器名稱傳回 <see cref="T:System.Data.Metadata.Edm.EntityContainer" />。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TryGetEntityContainer">
      <MemberSignature Language="C#" Value="public bool TryGetEntityContainer (string name, out System.Data.Metadata.Edm.EntityContainer entityContainer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetEntityContainer(string name, [out] class System.Data.Metadata.Edm.EntityContainer&amp; entityContainer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.ItemCollection.TryGetEntityContainer(System.String,System.Data.Metadata.Edm.EntityContainer@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetEntityContainer (name As String, ByRef entityContainer As EntityContainer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetEntityContainer(System::String ^ name, [Runtime::InteropServices::Out] System::Data::Metadata::Edm::EntityContainer ^ % entityContainer);" />
      <MemberSignature Language="F#" Value="member this.TryGetEntityContainer : string *  -&gt; bool" Usage="itemCollection.TryGetEntityContainer (name, entityContainer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="entityContainer" Type="System.Data.Metadata.Edm.EntityContainer&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="name">實體容器的名稱。</param>
        <param name="entityContainer">在這個方法傳回時會包含 <see cref="T:System.Data.Metadata.Edm.EntityContainer" /> 物件。 如果沒有實體容器，這個輸出參數會包含 null，否則會包含第一個實體容器。</param>
        <summary>使用指定的實體容器名稱傳回 <see cref="T:System.Data.Metadata.Edm.EntityContainer" />。 如果沒有實體容器，輸出參數會包含 null，否則會包含第一個實體容器。</summary>
        <returns>如果有符合搜尋準則的實體容器，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetEntityContainer">
      <MemberSignature Language="C#" Value="public bool TryGetEntityContainer (string name, bool ignoreCase, out System.Data.Metadata.Edm.EntityContainer entityContainer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetEntityContainer(string name, bool ignoreCase, [out] class System.Data.Metadata.Edm.EntityContainer&amp; entityContainer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.ItemCollection.TryGetEntityContainer(System.String,System.Boolean,System.Data.Metadata.Edm.EntityContainer@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetEntityContainer (name As String, ignoreCase As Boolean, ByRef entityContainer As EntityContainer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetEntityContainer(System::String ^ name, bool ignoreCase, [Runtime::InteropServices::Out] System::Data::Metadata::Edm::EntityContainer ^ % entityContainer);" />
      <MemberSignature Language="F#" Value="member this.TryGetEntityContainer : string * bool *  -&gt; bool" Usage="itemCollection.TryGetEntityContainer (name, ignoreCase, entityContainer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="entityContainer" Type="System.Data.Metadata.Edm.EntityContainer&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="name">實體容器的名稱。</param>
        <param name="ignoreCase">
          <see langword="true" /> 表示要執行不區分大小寫的搜尋，否則為 <see langword="false" />。</param>
        <param name="entityContainer">在這個方法傳回時會包含 <see cref="T:System.Data.Metadata.Edm.EntityContainer" /> 物件。 如果沒有實體容器，這個輸出參數會包含 null，否則會包含第一個實體容器。</param>
        <summary>使用指定的實體容器名稱傳回 <see cref="T:System.Data.Metadata.Edm.EntityContainer" />。 如果沒有實體容器，這個輸出參數會包含 null，否則會包含第一個實體容器。</summary>
        <returns>如果有符合搜尋準則的實體容器，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryGetItem&lt;T&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>使用這個項目集合的指定識別傳回強型別項目。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TryGetItem&lt;T&gt;">
      <MemberSignature Language="C#" Value="public bool TryGetItem&lt;T&gt; (string identity, out T item) where T : System.Data.Metadata.Edm.GlobalItem;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetItem&lt;(class System.Data.Metadata.Edm.GlobalItem) T&gt;(string identity, [out] !!T&amp; item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.ItemCollection.TryGetItem``1(System.String,``0@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetItem(Of T As GlobalItem) (identity As String, ByRef item As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : System::Data::Metadata::Edm::GlobalItem bool TryGetItem(System::String ^ identity, [Runtime::InteropServices::Out] T % item);" />
      <MemberSignature Language="F#" Value="member this.TryGetItem : string *  -&gt; bool (requires 'T :&gt; System.Data.Metadata.Edm.GlobalItem)" Usage="itemCollection.TryGetItem (identity, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.Data.Metadata.Edm.GlobalItem</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="identity" Type="System.String" />
        <Parameter Name="item" Type="T&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="T">此方法傳回的型別。</typeparam>
        <param name="identity">項目的識別。</param>
        <param name="item">在這個方法傳回時，輸出參數會包含 <see cref="T:System.Data.Metadata.Edm.GlobalItem" /> 物件。 如果在項目集合中沒有指定識別的全域項目，這個輸出參數會包含 null。</param>
        <summary>使用這個項目集合的指定識別傳回強型別 <see cref="T:System.Data.Metadata.Edm.GlobalItem" /> 物件。</summary>
        <returns>如果有符合搜尋準則的項目，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetItem&lt;T&gt;">
      <MemberSignature Language="C#" Value="public bool TryGetItem&lt;T&gt; (string identity, bool ignoreCase, out T item) where T : System.Data.Metadata.Edm.GlobalItem;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetItem&lt;(class System.Data.Metadata.Edm.GlobalItem) T&gt;(string identity, bool ignoreCase, [out] !!T&amp; item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.ItemCollection.TryGetItem``1(System.String,System.Boolean,``0@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetItem(Of T As GlobalItem) (identity As String, ignoreCase As Boolean, ByRef item As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : System::Data::Metadata::Edm::GlobalItem bool TryGetItem(System::String ^ identity, bool ignoreCase, [Runtime::InteropServices::Out] T % item);" />
      <MemberSignature Language="F#" Value="member this.TryGetItem : string * bool *  -&gt; bool (requires 'T :&gt; System.Data.Metadata.Edm.GlobalItem)" Usage="itemCollection.TryGetItem (identity, ignoreCase, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.Data.Metadata.Edm.GlobalItem</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="identity" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="item" Type="T&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="T">此方法傳回的型別。</typeparam>
        <param name="identity">項目的識別。</param>
        <param name="ignoreCase">
          <see langword="true" /> 表示要執行不區分大小寫的搜尋，否則為 <see langword="false" />。</param>
        <param name="item">在這個方法傳回時，輸出參數會包含 <see cref="T:System.Data.Metadata.Edm.GlobalItem" /> 物件。 如果在項目集合中沒有指定識別的全域項目，這個輸出參數會包含 null。</param>
        <summary>使用這個項目集合的指定識別傳回強型別 <see cref="T:System.Data.Metadata.Edm.GlobalItem" /> 物件。</summary>
        <returns>如果有符合搜尋準則的項目，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryGetType">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>使用指定的型別名稱和這個項目集合中的命名空間名稱，傳回 <see cref="T:System.Data.Metadata.Edm.EdmType" /> 物件。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TryGetType">
      <MemberSignature Language="C#" Value="public bool TryGetType (string name, string namespaceName, out System.Data.Metadata.Edm.EdmType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetType(string name, string namespaceName, [out] class System.Data.Metadata.Edm.EdmType&amp; type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.ItemCollection.TryGetType(System.String,System.String,System.Data.Metadata.Edm.EdmType@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetType (name As String, namespaceName As String, ByRef type As EdmType) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetType(System::String ^ name, System::String ^ namespaceName, [Runtime::InteropServices::Out] System::Data::Metadata::Edm::EdmType ^ % type);" />
      <MemberSignature Language="F#" Value="member this.TryGetType : string * string *  -&gt; bool" Usage="itemCollection.TryGetType (name, namespaceName, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="namespaceName" Type="System.String" />
        <Parameter Name="type" Type="System.Data.Metadata.Edm.EdmType&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="name">型別的名稱。</param>
        <param name="namespaceName">型別的命名空間。</param>
        <param name="type">在這個方法傳回時，這個輸出參數會包含 <see cref="T:System.Data.Metadata.Edm.EdmType" /> 物件。 如果在這個項目集合中沒有指定之名稱和命名空間名稱的型別，這個輸出參數會包含 null。</param>
        <summary>使用指定的型別名稱和這個項目集合中的命名空間名稱，傳回 <see cref="T:System.Data.Metadata.Edm.EdmType" /> 物件。</summary>
        <returns>如果有符合搜尋準則的型別，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetType">
      <MemberSignature Language="C#" Value="public bool TryGetType (string name, string namespaceName, bool ignoreCase, out System.Data.Metadata.Edm.EdmType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetType(string name, string namespaceName, bool ignoreCase, [out] class System.Data.Metadata.Edm.EdmType&amp; type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.ItemCollection.TryGetType(System.String,System.String,System.Boolean,System.Data.Metadata.Edm.EdmType@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetType (name As String, namespaceName As String, ignoreCase As Boolean, ByRef type As EdmType) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetType(System::String ^ name, System::String ^ namespaceName, bool ignoreCase, [Runtime::InteropServices::Out] System::Data::Metadata::Edm::EdmType ^ % type);" />
      <MemberSignature Language="F#" Value="member this.TryGetType : string * string * bool *  -&gt; bool" Usage="itemCollection.TryGetType (name, namespaceName, ignoreCase, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="namespaceName" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="type" Type="System.Data.Metadata.Edm.EdmType&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="name">型別的名稱。</param>
        <param name="namespaceName">型別的命名空間。</param>
        <param name="ignoreCase">
          <see langword="true" /> 表示要執行不區分大小寫的搜尋，否則為 <see langword="false" />。</param>
        <param name="type">在這個方法傳回時，這個輸出參數會包含 <see cref="T:System.Data.Metadata.Edm.EdmType" /> 物件。 如果在這個項目集合中沒有指定之名稱和命名空間名稱的型別，這個輸出參數會包含 null。</param>
        <summary>使用指定的型別名稱和這個項目集合中的命名空間名稱，傳回 <see cref="T:System.Data.Metadata.Edm.EdmType" /> 物件。</summary>
        <returns>如果有符合搜尋準則的型別，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>