<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ContractHandle.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac55565bfb6f9f3ce8255c0ca1ca8bf3a4c0c2e3bdc.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5565bfb6f9f3ce8255c0ca1ca8bf3a4c0c2e3bdc</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.AddIn.Pipeline.ContractHandle">
          <source>Provides methods that control the lifetime of an add-in.</source>
          <target state="translated">提供會控制增益集存留期的方法。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AddIn.Pipeline.ContractHandle">
          <source>Because the add-in model provides the ability for add-ins to communicate between application domains and between processes, it cannot rely on the garbage collector to reclaim them.</source>
          <target state="translated">增益集模型可讓您的應用程式定義域之間和處理序之間通訊的增益集，因為它不能依賴記憶體回收行程回收它們。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AddIn.Pipeline.ContractHandle">
          <source>This class provides a reference counting mechanism for the add-in by obtaining a lifetime token to its contract.</source>
          <target state="translated">這個類別會提供參考計數機制增益集，取得其合約存留期語彙基元。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AddIn.Pipeline.ContractHandle">
          <source>When a <ph id="ph1">&lt;xref:System.AddIn.Pipeline.ContractHandle&gt;</ph> object is constructed, it calls the <ph id="ph2">&lt;xref:System.AddIn.Pipeline.ContractBase.AcquireLifetimeToken%2A&gt;</ph> method on the contract that is passed to the constructor.</source>
          <target state="translated">當<ph id="ph1">&lt;xref:System.AddIn.Pipeline.ContractHandle&gt;</ph>建構物件，它會呼叫<ph id="ph2">&lt;xref:System.AddIn.Pipeline.ContractBase.AcquireLifetimeToken%2A&gt;</ph>傳遞至建構函式在合約上的方法。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AddIn.Pipeline.ContractHandle">
          <source>When the <ph id="ph1">&lt;xref:System.AddIn.Pipeline.ContractHandle&gt;</ph> object is disposed or finalized, it calls the <ph id="ph2">&lt;xref:System.AddIn.Pipeline.ContractBase.RevokeLifetimeToken%2A&gt;</ph> method on the contract, which removes its hold on the contract.</source>
          <target state="translated">當<ph id="ph1">&lt;xref:System.AddIn.Pipeline.ContractHandle&gt;</ph>物件已處置或最終處理，它會呼叫<ph id="ph2">&lt;xref:System.AddIn.Pipeline.ContractBase.RevokeLifetimeToken%2A&gt;</ph>合約，代表要移除其保留在合約上的方法。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AddIn.Pipeline.ContractHandle">
          <source>Adapters implement the contract.</source>
          <target state="translated">配接器實作的合約。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AddIn.Pipeline.ContractHandle">
          <source>The <ph id="ph1">&lt;xref:System.AddIn.Pipeline.ContractHandle&gt;</ph> class is designed to be used in a contract-to-view adapter to help pipeline developers manage the lifetime of the contract that is being adapted.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.AddIn.Pipeline.ContractHandle&gt;</ph>類別設計來協助管理所調整合約的存留期的管線開發人員使用合約來檢視配接器中。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AddIn.Pipeline.ContractHandle">
          <source>Typically, an instance of this class is instantiated during the construction of the adapter class and is stored in an instance field of the adapter.</source>
          <target state="translated">一般而言，此類別的執行個體具現化配接器類別的建構期間，儲存在配接器的執行個體欄位。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AddIn.Pipeline.ContractHandle">
          <source>When the adapter class is garbage-collected, the <ph id="ph1">&lt;xref:System.AddIn.Pipeline.ContractHandle&gt;</ph> object will also be collected and the <ph id="ph2">&lt;xref:System.AddIn.Pipeline.ContractHandle&gt;</ph> object will revoke the lifetime token on the contract.</source>
          <target state="translated">當配接器類別被記憶體回收，<ph id="ph1">&lt;xref:System.AddIn.Pipeline.ContractHandle&gt;</ph>物件也會收集和<ph id="ph2">&lt;xref:System.AddIn.Pipeline.ContractHandle&gt;</ph>物件會撤銷合約上的存留期語彙基元。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AddIn.Pipeline.ContractHandle">
          <source>It is recommended that your view-to-contract adapters inherit from the <ph id="ph1">&lt;xref:System.AddIn.Pipeline.ContractBase&gt;</ph> class.</source>
          <target state="translated">建議您檢視合約的介面卡繼承自<ph id="ph1">&lt;xref:System.AddIn.Pipeline.ContractBase&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AddIn.Pipeline.ContractHandle">
          <source>You can then use a default implementation for the members of <ph id="ph1">&lt;xref:System.AddIn.Contract.IContract&gt;</ph>, which means you need to implement only the members of your specific contract.</source>
          <target state="translated">您接著可以使用的預設實作的成員<ph id="ph1">&lt;xref:System.AddIn.Contract.IContract&gt;</ph>，這表示您需要實作您的特定合約的成員。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AddIn.Pipeline.ContractHandle">
          <source>The following example shows how to set the lifetime token handle in a contract-to-view adapter on the add-in side of a pipeline.</source>
          <target state="translated">下列範例會示範如何設定合約來檢視配接器中的存留期語彙基元的控制代碼，一邊增益集的管線。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.AddIn.Pipeline.ContractHandle.#ctor(System.AddIn.Contract.IContract)">
          <source>The contract to use in the pipeline.</source>
          <target state="translated">要用於管線的合約。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.AddIn.Pipeline.ContractHandle.#ctor(System.AddIn.Contract.IContract)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.AddIn.Pipeline.ContractHandle" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.AddIn.Pipeline.ContractHandle" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.AddIn.Pipeline.ContractHandle.#ctor(System.AddIn.Contract.IContract)">
          <source><ph id="ph1">&lt;paramref name="contract" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="contract" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.AddIn.Pipeline.ContractHandle.AppDomainOwner(System.AppDomain)">
          <source>The application domain to check.</source>
          <target state="translated">要檢查的應用程式定義域。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.AddIn.Pipeline.ContractHandle.AppDomainOwner(System.AppDomain)">
          <source>Gets the instance of the add-in-side adapter when the application domain was created.</source>
          <target state="translated">取得建立應用程式定義域時增益集端配接器的執行個體。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.AddIn.Pipeline.ContractHandle.AppDomainOwner(System.AppDomain)">
          <source>An <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.IContract" /&gt;</ph> object that represents the owner of the application domain.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.AddIn.Contract.IContract" /&gt;</ph> 物件，表示應用程式定義域擁有者。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Pipeline.ContractHandle.AppDomainOwner(System.AppDomain)">
          <source>The add-in-side adapters are typed as <ph id="ph1">&lt;xref:System.AddIn.Contract.IContract&gt;</ph>.</source>
          <target state="translated">增益集端配接器的型別為<ph id="ph1">&lt;xref:System.AddIn.Contract.IContract&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Pipeline.ContractHandle.AppDomainOwner(System.AppDomain)">
          <source>If the application domain was previously created by a user, there is no owner.</source>
          <target state="translated">如果使用者先前已建立的應用程式定義域，但是沒有擁有者。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.AddIn.Pipeline.ContractHandle.AppDomainOwner(System.AppDomain)">
          <source><ph id="ph1">&lt;paramref name="domain" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="domain" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="P:System.AddIn.Pipeline.ContractHandle.Contract">
          <source>Gets the contract used by a pipeline.</source>
          <target state="translated">取得管線所使用的合約。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.AddIn.Pipeline.ContractHandle.Contract">
          <source>The contract, which is derived from <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.IContract" /&gt;</ph>.</source>
          <target state="translated">合約，衍生自 <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.IContract" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.AddIn.Pipeline.ContractHandle.ContractOwnsAppDomain(System.AddIn.Contract.IContract,System.AppDomain)">
          <source>The contract to check.</source>
          <target state="translated">要檢查的合約。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.AddIn.Pipeline.ContractHandle.ContractOwnsAppDomain(System.AddIn.Contract.IContract,System.AppDomain)">
          <source>The application domain to check.</source>
          <target state="translated">要檢查的應用程式定義域。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.AddIn.Pipeline.ContractHandle.ContractOwnsAppDomain(System.AddIn.Contract.IContract,System.AppDomain)">
          <source>Determines whether an application domain is owned by the specified contract.</source>
          <target state="translated">判斷應用程式定義域是否由指定的合約所擁有。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.AddIn.Pipeline.ContractHandle.ContractOwnsAppDomain(System.AddIn.Contract.IContract,System.AppDomain)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the contract owns the application domain; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果合約擁有應用程式定義域，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.AddIn.Pipeline.ContractHandle.ContractOwnsAppDomain(System.AddIn.Contract.IContract,System.AppDomain)">
          <source><ph id="ph1">&lt;paramref name="contract" /&gt;</ph> or <ph id="ph2">&lt;paramref name="domain" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="contract" /&gt;</ph> 或 <ph id="ph2">&lt;paramref name="domain" /&gt;</ph> 為 <ph id="ph3">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="T:System.AddIn.Pipeline.ContractHandle">
          <source>Revokes the lifetime token on a contract.</source>
          <target state="translated">撤銷合約上的存留期語彙基元。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.AddIn.Pipeline.ContractHandle.Dispose">
          <source>Revokes the lifetime token on a contract, regardless of input.</source>
          <target state="translated">不論輸入為何，撤銷合約上的存留期語彙基元。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.AddIn.Pipeline.ContractHandle.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> 表示釋放 Managed 和 Unmanaged 資源，<ph id="ph2">&lt;see langword="false" /&gt;</ph> 則表示只釋放 Unmanaged 資源。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.AddIn.Pipeline.ContractHandle.Dispose(System.Boolean)">
          <source>Revokes the lifetime token on the contract regardless of input and optionally releases the managed resources.</source>
          <target state="translated">不論輸入為何，撤銷合約上的存留期語彙基元，並選擇性釋放 Managed 資源。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.AddIn.Pipeline.ContractHandle.Finalize">
          <source>Releases the resources associated with the <ph id="ph1">&lt;see cref="T:System.AddIn.Pipeline.ContractHandle" /&gt;</ph> instance.</source>
          <target state="translated">釋出與這個 <ph id="ph1">&lt;see cref="T:System.AddIn.Pipeline.ContractHandle" /&gt;</ph>執行個體相關聯的資源。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Pipeline.ContractHandle.Finalize">
          <source>This method overrides <ph id="ph1">&lt;xref:System.Object.Finalize%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">這個方法覆寫 <ph id="ph1">&lt;xref:System.Object.Finalize%2A?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Pipeline.ContractHandle.Finalize">
          <source>Application code should not call this method; an object's <ph id="ph1">&lt;xref:System.AddIn.Pipeline.ContractHandle.Finalize%2A&gt;</ph> method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the <ph id="ph2">&lt;xref:System.GC.SuppressFinalize%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">應用程式程式碼不應該呼叫這個方法。物件的<ph id="ph1">&lt;xref:System.AddIn.Pipeline.ContractHandle.Finalize%2A&gt;</ph>方法會自動叫用記憶體回收期間，除非已停用記憶體回收行程的最終處理的呼叫所<ph id="ph2">&lt;xref:System.GC.SuppressFinalize%2A?displayProperty=nameWithType&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Pipeline.ContractHandle.Finalize">
          <source>When called by the garbage collector, this method calls the <ph id="ph1">&lt;xref:System.AddIn.Pipeline.ContractHandle.Dispose%28System.Boolean%29&gt;</ph> method.</source>
          <target state="translated">當記憶體回收行程所呼叫，這個方法會呼叫<ph id="ph1">&lt;xref:System.AddIn.Pipeline.ContractHandle.Dispose%28System.Boolean%29&gt;</ph>方法。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>