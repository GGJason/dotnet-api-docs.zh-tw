<Type Name="FrameworkElementAdapters" FullName="System.AddIn.Pipeline.FrameworkElementAdapters">
  <TypeSignature Language="C#" Value="public static class FrameworkElementAdapters" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit FrameworkElementAdapters extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.AddIn.Pipeline.FrameworkElementAdapters" />
  <TypeSignature Language="VB.NET" Value="Public Class FrameworkElementAdapters" />
  <TypeSignature Language="C++ CLI" Value="public ref class FrameworkElementAdapters abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Presentation</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="c66db-101">Windows Presentation Foundation (WPF) 增益集使用 <see cref="T:System.AddIn.Pipeline.FrameworkElementAdapters" /> 在 <see cref="T:System.Windows.FrameworkElement" /> 與 <see cref="T:System.AddIn.Contract.INativeHandleContract" /> 之間進行轉換。</span><span class="sxs-lookup"><span data-stu-id="c66db-101"><see cref="T:System.AddIn.Pipeline.FrameworkElementAdapters" /> is used by Windows Presentation Foundation (WPF) add-ins to convert between a <see cref="T:System.Windows.FrameworkElement" /> and an <see cref="T:System.AddIn.Contract.INativeHandleContract" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
<span data-ttu-id="c66db-102">Windows Presentation Foundation (WPF) 會擴充.NET Framework 增益集模型以允許 WPF Ui，若要在裝載應用程式和增益集之間傳遞。WPF 需要 WPF Ui，傳遞可能直接或間接衍生自<xref:System.Windows.FrameworkElement>。</span><span class="sxs-lookup"><span data-stu-id="c66db-102">Windows Presentation Foundation (WPF) extends the .NET Framework add-in model to allow WPF UIs to be passed between host applications and add-ins. WPF requires that the WPF UIs that are passed either directly or indirectly derive from <xref:System.Windows.FrameworkElement>.</span></span> <span data-ttu-id="c66db-103">不過，增益集和主控件應用程式通常執行在個別的應用程式定義域和是，因此，分隔隔離界限。</span><span class="sxs-lookup"><span data-stu-id="c66db-103">However, add-ins and host applications are typically run in separate application domains and are, consequently, separated by an isolation boundary.</span></span> <span data-ttu-id="c66db-104">基於這個理由，.NET Framework 的增益集模型需要隔離界限，才能遠端執行之間傳遞的型別。</span><span class="sxs-lookup"><span data-stu-id="c66db-104">For this reason, the .NET Framework add-in model requires the types that are passed across the isolation boundary to be remotable.</span></span> <span data-ttu-id="c66db-105">遠端使用型別符合下列其中一項：</span><span class="sxs-lookup"><span data-stu-id="c66db-105">A remotable type conforms to one of the following:</span></span>  
  
-   <span data-ttu-id="c66db-106">實作 <xref:System.Runtime.Serialization.ISerializable> 介面。</span><span class="sxs-lookup"><span data-stu-id="c66db-106">Implements the <xref:System.Runtime.Serialization.ISerializable> interface.</span></span>  
  
-   <span data-ttu-id="c66db-107">具有<xref:System.SerializableAttribute>套用的屬性。</span><span class="sxs-lookup"><span data-stu-id="c66db-107">Has the <xref:System.SerializableAttribute> attribute applied.</span></span>  
  
-   <span data-ttu-id="c66db-108">衍生自<xref:System.MarshalByRefObject>類別。</span><span class="sxs-lookup"><span data-stu-id="c66db-108">Derives from the <xref:System.MarshalByRefObject> class.</span></span>  
  
 <span data-ttu-id="c66db-109"><xref:System.Windows.FrameworkElement> 遠端執行並不跨隔離界限的增益集與主應用程式之間傳遞之前必須轉換成可遠端處理類型。</span><span class="sxs-lookup"><span data-stu-id="c66db-109"><xref:System.Windows.FrameworkElement> is not remotable and must be converted to a remotable type before it is passed across the isolation boundary between an add-in and a host application.</span></span> <span data-ttu-id="c66db-110">基於此目的，您要呼叫靜態<xref:System.AddIn.Pipeline.FrameworkElementAdapters.ViewToContractAdapter%2A>方法，將轉換<xref:System.Windows.FrameworkElement>執行個體的遠端執行<xref:System.AddIn.Contract.INativeHandleContract>。</span><span class="sxs-lookup"><span data-stu-id="c66db-110">For this purpose, you need to call the static <xref:System.AddIn.Pipeline.FrameworkElementAdapters.ViewToContractAdapter%2A> method to convert the <xref:System.Windows.FrameworkElement> to an instance of the remotable <xref:System.AddIn.Contract.INativeHandleContract>.</span></span>  
  
 <span data-ttu-id="c66db-111">一次<xref:System.AddIn.Contract.INativeHandleContract>傳遞跨隔離界限，它必須轉換成可以顯示由主應用程式或增益集的類型。</span><span class="sxs-lookup"><span data-stu-id="c66db-111">Once the <xref:System.AddIn.Contract.INativeHandleContract> is passed across the isolation boundary, it must be converted to a type that can be displayed by the host application or the add-in.</span></span> <span data-ttu-id="c66db-112">在此情況下，靜態<xref:System.AddIn.Pipeline.FrameworkElementAdapters.ContractToViewAdapter%2A>方法呼叫以將轉換<xref:System.AddIn.Contract.INativeHandleContract>至<xref:System.Windows.FrameworkElement>。</span><span class="sxs-lookup"><span data-stu-id="c66db-112">In this case, the static <xref:System.AddIn.Pipeline.FrameworkElementAdapters.ContractToViewAdapter%2A> method is called to convert an <xref:System.AddIn.Contract.INativeHandleContract> to a <xref:System.Windows.FrameworkElement>.</span></span>  
  
 <span data-ttu-id="c66db-113">如需詳細的 WPF 增益集的目的，請參閱[WPF 增益集概觀](~/docs/framework/wpf/app-development/wpf-add-ins-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="c66db-113">For more detailed exposition of WPF add-ins, see [WPF Add-Ins Overview](~/docs/framework/wpf/app-development/wpf-add-ins-overview.md).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ContractToViewAdapter">
      <MemberSignature Language="C#" Value="public static System.Windows.FrameworkElement ContractToViewAdapter (System.AddIn.Contract.INativeHandleContract nativeHandleContract);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.FrameworkElement ContractToViewAdapter(class System.AddIn.Contract.INativeHandleContract nativeHandleContract) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Pipeline.FrameworkElementAdapters.ContractToViewAdapter(System.AddIn.Contract.INativeHandleContract)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContractToViewAdapter (nativeHandleContract As INativeHandleContract) As FrameworkElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::FrameworkElement ^ ContractToViewAdapter(System::AddIn::Contract::INativeHandleContract ^ nativeHandleContract);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.FrameworkElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nativeHandleContract" Type="System.AddIn.Contract.INativeHandleContract" />
      </Parameters>
      <Docs>
        <param name="nativeHandleContract"><span data-ttu-id="c66db-114">跨主應用程式和增益集之間的隔離界限所傳遞的 <see cref="T:System.AddIn.Contract.INativeHandleContract" />。</span><span class="sxs-lookup"><span data-stu-id="c66db-114">The <see cref="T:System.AddIn.Contract.INativeHandleContract" /> that was passed across the isolation boundary between the host application and the add-in.</span></span></param>
        <summary><span data-ttu-id="c66db-115">傳回已從 <see cref="T:System.Windows.FrameworkElement" /> 轉換的 <see cref="T:System.AddIn.Contract.INativeHandleContract" />。</span><span class="sxs-lookup"><span data-stu-id="c66db-115">Returns a <see cref="T:System.Windows.FrameworkElement" /> that has been converted from an <see cref="T:System.AddIn.Contract.INativeHandleContract" />.</span></span></summary>
        <returns><span data-ttu-id="c66db-116"><see cref="T:System.Windows.FrameworkElement" />，視 [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] 在主應用程式和增益集之間傳遞的方向而定，會從兩者之一顯示。</span><span class="sxs-lookup"><span data-stu-id="c66db-116">A <see cref="T:System.Windows.FrameworkElement" /> that will be displayed from either the host application or add-in, depending on the direction in which the [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] is passed between the two.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.AddIn.Pipeline.FrameworkElementAdapters.ViewToContractAdapter(System.Windows.FrameworkElement)" />
      </Docs>
    </Member>
    <Member MemberName="ViewToContractAdapter">
      <MemberSignature Language="C#" Value="public static System.AddIn.Contract.INativeHandleContract ViewToContractAdapter (System.Windows.FrameworkElement root);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.AddIn.Contract.INativeHandleContract ViewToContractAdapter(class System.Windows.FrameworkElement root) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Pipeline.FrameworkElementAdapters.ViewToContractAdapter(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ViewToContractAdapter (root As FrameworkElement) As INativeHandleContract" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::AddIn::Contract::INativeHandleContract ^ ViewToContractAdapter(System::Windows::FrameworkElement ^ root);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.INativeHandleContract</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="root" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="root"><span data-ttu-id="c66db-117">要跨主應用程式和增益集之間的隔離界限傳遞的 <see cref="T:System.Windows.FrameworkElement" />。</span><span class="sxs-lookup"><span data-stu-id="c66db-117">The <see cref="T:System.Windows.FrameworkElement" /> to be passed across the isolation boundary between the host application and the add-in.</span></span></param>
        <summary><span data-ttu-id="c66db-118">傳回已從 <see cref="T:System.AddIn.Contract.INativeHandleContract" /> 轉換的 <see cref="T:System.Windows.FrameworkElement" />。</span><span class="sxs-lookup"><span data-stu-id="c66db-118">Returns an <see cref="T:System.AddIn.Contract.INativeHandleContract" /> that has been converted from a <see cref="T:System.Windows.FrameworkElement" />.</span></span></summary>
        <returns><span data-ttu-id="c66db-119"><see cref="T:System.AddIn.Contract.INativeHandleContract" />，視 [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] 在主應用程式和增益集之間傳遞的方向而定，會從兩者之一進行傳遞。</span><span class="sxs-lookup"><span data-stu-id="c66db-119">An <see cref="T:System.AddIn.Contract.INativeHandleContract" /> that is passed from either the host application or the add-in, depending on the direction in which the [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] is passed between the two.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c66db-120"><paramref name="root" /> 不是項目之樹狀結構的根項目。</span><span class="sxs-lookup"><span data-stu-id="c66db-120"><paramref name="root" /> is not the root element of a tree of elements.</span></span></exception>
        <altmember cref="M:System.AddIn.Pipeline.FrameworkElementAdapters.ContractToViewAdapter(System.AddIn.Contract.INativeHandleContract)" />
      </Docs>
    </Member>
  </Members>
</Type>