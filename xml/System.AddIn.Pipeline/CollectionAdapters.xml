<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="CollectionAdapters.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5cda5b936b22052f7b99b2c7e5bd552235a459181.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cda5b936b22052f7b99b2c7e5bd552235a459181</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.AddIn.Pipeline.CollectionAdapters">
          <source>Enables collections to be passed between an add-in and its host application.</source>
          <target state="translated">讓集合能夠在增益集及其主應用程式之間傳遞。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AddIn.Pipeline.CollectionAdapters">
          <source>This class provides methods that enable an <ph id="ph1">&lt;xref:System.Collections.Generic.IList%601&gt;</ph> collection to be converted to a <ph id="ph2">&lt;xref:System.AddIn.Contract.IListContract%601&gt;</ph> collection.</source>
          <target state="translated">這個類別會提供方法讓<ph id="ph1">&lt;xref:System.Collections.Generic.IList%601&gt;</ph>集合轉換成<ph id="ph2">&lt;xref:System.AddIn.Contract.IListContract%601&gt;</ph>集合。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AddIn.Pipeline.CollectionAdapters">
          <source>The <ph id="ph1">&lt;xref:System.AddIn.Contract.IListContract%601&gt;</ph> collection is passed across the isolation boundary and converted back to an <ph id="ph2">&lt;xref:System.Collections.Generic.IList%601&gt;</ph> collection that the add-in or the host application can use.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.AddIn.Contract.IListContract%601&gt;</ph>集合是跨隔離界限傳遞，並轉換回<ph id="ph2">&lt;xref:System.Collections.Generic.IList%601&gt;</ph>增益集或主應用程式可以使用的集合。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AddIn.Pipeline.CollectionAdapters">
          <source>Objects in collections must be remotable.</source>
          <target state="translated">集合中的物件必須是遠端執行。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AddIn.Pipeline.CollectionAdapters">
          <source>For more information about the object types that you can pass, see <bpt id="p1">[</bpt>Contracts, Views, and Adapters<ept id="p1">](http://msdn.microsoft.com/library/a6460173-9507-4b87-8c07-d4ee245d715c)</ept>.</source>
          <target state="translated">如需您可以將傳遞的物件類型的詳細資訊，請參閱<bpt id="p1">[</bpt>合約、 檢視和配接器<ept id="p1">](http://msdn.microsoft.com/library/a6460173-9507-4b87-8c07-d4ee245d715c)</ept>。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Pipeline.CollectionAdapters.ToIList``1(System.AddIn.Contract.IListContract{``0})">
          <source>The type of objects that are contained in the list.</source>
          <target state="translated">清單中所含物件的型別。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Pipeline.CollectionAdapters.ToIList``1(System.AddIn.Contract.IListContract{``0})">
          <source><bpt id="p1">&lt;c&gt;</bpt>T<ept id="p1">&lt;/c&gt;</ept> must be serializable.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>T<ept id="p1">&lt;/c&gt;</ept>必須是可序列化。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.AddIn.Pipeline.CollectionAdapters.ToIList``1(System.AddIn.Contract.IListContract{``0})">
          <source>The collection from the other side of the pipeline.</source>
          <target state="translated">來自管線另一端的集合。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.AddIn.Pipeline.CollectionAdapters.ToIList``1(System.AddIn.Contract.IListContract{``0})">
          <source>Converts the specified <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.IListContract`1" /&gt;</ph> collection to an <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IList`1" /&gt;</ph> collection.</source>
          <target state="translated">將指定的 <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.IListContract`1" /&gt;</ph> 集合轉換為 <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IList`1" /&gt;</ph> 集合。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.AddIn.Pipeline.CollectionAdapters.ToIList``1(System.AddIn.Contract.IListContract{``0})">
          <source>The converted collection.</source>
          <target state="translated">已轉換的集合。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Pipeline.CollectionAdapters.ToIList``1(System.AddIn.Contract.IListContract{``0})">
          <source>The host application or add-in can use the returned <ph id="ph1">&lt;xref:System.Collections.Generic.IList%601&gt;</ph> collection.</source>
          <target state="translated">主應用程式或增益集可以使用傳回<ph id="ph1">&lt;xref:System.Collections.Generic.IList%601&gt;</ph>集合。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Pipeline.CollectionAdapters.ToIList``1(System.AddIn.Contract.IListContract{``0})">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.IList%601&gt;</ph> collection will have a lifetime token for the remote <ph id="ph2">&lt;xref:System.AddIn.Contract.IListContract%601&gt;</ph> collection.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.IList%601&gt;</ph>集合中會有遠端的存留期語彙基元<ph id="ph2">&lt;xref:System.AddIn.Contract.IListContract%601&gt;</ph>集合。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Pipeline.CollectionAdapters.ToIList``1(System.AddIn.Contract.IListContract{``0})">
          <source>You should use this method overload only when the contents of the <ph id="ph1">&lt;xref:System.AddIn.Contract.IListContract%601&gt;</ph> are serializable types that can be passed directly to the add-in and host (rather than types that must be adapted into views).</source>
          <target state="translated">您應該使用這個方法多載時，才內容<ph id="ph1">&lt;xref:System.AddIn.Contract.IListContract%601&gt;</ph>是可序列化的型別，可以直接傳遞至增益集與主應用程式 （而非必須調整成檢視的類型）。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Pipeline.CollectionAdapters.ToIList``1(System.AddIn.Contract.IListContract{``0})">
          <source>The following example implements a host-side adapter pipeline segment as described <bpt id="p1">[</bpt>Walkthrough: Passing Collections Between Hosts and Add-Ins<ept id="p1">](http://msdn.microsoft.com/library/b532c604-548e-4fab-b11c-377257dd0ee5)</ept>. The example adapts the custom <ph id="ph1">`ProcessBooks`</ph> method by taking the <ph id="ph2">&lt;xref:System.AddIn.Contract.IListContract%601&gt;</ph> collection passed from the add-in and converting it to an <ph id="ph3">&lt;xref:System.Collections.Generic.IList%601&gt;</ph> collection, which the host application can then use.</source>
          <target state="translated">下列範例會實作主應用程式端配接器管線區段所述<bpt id="p1">[</bpt>逐步解說： 將傳遞主機集合與增益集<ept id="p1">](http://msdn.microsoft.com/library/b532c604-548e-4fab-b11c-377257dd0ee5)</ept>。此範例會調整自訂<ph id="ph1">`ProcessBooks`</ph>採取方法<ph id="ph2">&lt;xref:System.AddIn.Contract.IListContract%601&gt;</ph>集合傳遞從增益集，並將其轉換成<ph id="ph3">&lt;xref:System.Collections.Generic.IList%601&gt;</ph>集合，接著可以使用主應用程式。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Pipeline.CollectionAdapters.ToIList``2(System.AddIn.Contract.IListContract{``0},System.Converter{``0,``1},System.Converter{``1,``0})">
          <source>The type that defines the contract for passing objects of type <bpt id="p1">&lt;c&gt;</bpt>TView<ept id="p1">&lt;/c&gt;</ept> across the isolation boundary.</source>
          <target state="translated">定義傳遞物件的型別之合約的型別<bpt id="p1">&lt;c&gt;</bpt>TView<ept id="p1">&lt;/c&gt;</ept>跨隔離界限。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Pipeline.CollectionAdapters.ToIList``2(System.AddIn.Contract.IListContract{``0},System.Converter{``0,``1},System.Converter{``1,``0})">
          <source>The type that defines the view of the objects in the list.</source>
          <target state="translated">定義清單中物件檢視的型別。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.AddIn.Pipeline.CollectionAdapters.ToIList``2(System.AddIn.Contract.IListContract{``0},System.Converter{``0,``1},System.Converter{``1,``0})">
          <source>The collection to pass to the other side of the pipeline.</source>
          <target state="translated">要傳遞至管線另一端的集合。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.AddIn.Pipeline.CollectionAdapters.ToIList``2(System.AddIn.Contract.IListContract{``0},System.Converter{``0,``1},System.Converter{``1,``0})">
          <source>A converter that adapts the data from the type defined in the contract to the type expected in the view.</source>
          <target state="translated">轉換子，會將資料的型別從合約中所定義的型別改寫為檢視中所需的型別。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.AddIn.Pipeline.CollectionAdapters.ToIList``2(System.AddIn.Contract.IListContract{``0},System.Converter{``0,``1},System.Converter{``1,``0})">
          <source>A converter that adapts the data from the type defined in the view to the type expected by the contract.</source>
          <target state="translated">轉換子，會將資料的型別從檢視中所定義的型別改寫為合約所需的型別。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.AddIn.Pipeline.CollectionAdapters.ToIList``2(System.AddIn.Contract.IListContract{``0},System.Converter{``0,``1},System.Converter{``1,``0})">
          <source>Converts a specified <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.IListContract`1" /&gt;</ph> collection to an <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IList`1" /&gt;</ph> collection by using converter adapters.</source>
          <target state="translated">使用轉換子配接器，將指定的 <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.IListContract`1" /&gt;</ph> 集合轉換為 <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IList`1" /&gt;</ph> 集合。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.AddIn.Pipeline.CollectionAdapters.ToIList``2(System.AddIn.Contract.IListContract{``0},System.Converter{``0,``1},System.Converter{``1,``0})">
          <source>The converted collection.</source>
          <target state="translated">已轉換的集合。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Pipeline.CollectionAdapters.ToIList``2(System.AddIn.Contract.IListContract{``0},System.Converter{``0,``1},System.Converter{``1,``0})">
          <source>Use this method overload for <ph id="ph1">&lt;xref:System.AddIn.Contract.IListContract%601&gt;</ph> collections that contain types that must be adapted before they can be passed to the add-in or host (rather than simple serializable types that can be passed directly).</source>
          <target state="translated">使用這個方法多載，如<ph id="ph1">&lt;xref:System.AddIn.Contract.IListContract%601&gt;</ph>包含的類型，必須先改寫它們可以傳遞給增益集或主機 （而非簡單可直接傳遞的可序列化型別） 的集合。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Pipeline.CollectionAdapters.ToIList``2(System.AddIn.Contract.IListContract{``0},System.Converter{``0,``1},System.Converter{``1,``0})">
          <source>The host application or add-in can use the returned <ph id="ph1">&lt;xref:System.Collections.Generic.IList%601&gt;</ph> collection.</source>
          <target state="translated">主應用程式或增益集可以使用傳回<ph id="ph1">&lt;xref:System.Collections.Generic.IList%601&gt;</ph>集合。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Pipeline.CollectionAdapters.ToIList``2(System.AddIn.Contract.IListContract{``0},System.Converter{``0,``1},System.Converter{``1,``0})">
          <source>It will have a lifetime token for the remote <ph id="ph1">&lt;xref:System.AddIn.Contract.IListContract%601&gt;</ph>.</source>
          <target state="translated">它會有遠端的存留期語彙基元<ph id="ph1">&lt;xref:System.AddIn.Contract.IListContract%601&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Pipeline.CollectionAdapters.ToIListContract``1(System.Collections.Generic.IList{``0})">
          <source>The type of objects that are contained in the list.</source>
          <target state="translated">清單中所含物件的型別。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Pipeline.CollectionAdapters.ToIListContract``1(System.Collections.Generic.IList{``0})">
          <source><bpt id="p1">&lt;c&gt;</bpt>T<ept id="p1">&lt;/c&gt;</ept> must be serializable.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>T<ept id="p1">&lt;/c&gt;</ept>必須是可序列化。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.AddIn.Pipeline.CollectionAdapters.ToIListContract``1(System.Collections.Generic.IList{``0})">
          <source>The collection to convert.</source>
          <target state="translated">要轉換的集合。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.AddIn.Pipeline.CollectionAdapters.ToIListContract``1(System.Collections.Generic.IList{``0})">
          <source>Converts a specified <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IList`1" /&gt;</ph> collection to an <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.IListContract`1" /&gt;</ph> collection.</source>
          <target state="translated">將指定的 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IList`1" /&gt;</ph> 集合轉換為 <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.IListContract`1" /&gt;</ph> 集合。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.AddIn.Pipeline.CollectionAdapters.ToIListContract``1(System.Collections.Generic.IList{``0})">
          <source>The converted collection.</source>
          <target state="translated">已轉換的集合。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Pipeline.CollectionAdapters.ToIListContract``1(System.Collections.Generic.IList{``0})">
          <source>The <ph id="ph1">&lt;xref:System.AddIn.Contract.IListContract%601&gt;</ph> collection can be marshaled across the isolation boundary between the add-in and its host application.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.AddIn.Contract.IListContract%601&gt;</ph>集合可以增益集和其主應用程式之間隔離界限之間封送處理。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Pipeline.CollectionAdapters.ToIListContract``1(System.Collections.Generic.IList{``0})">
          <source>You should use this method overload only when the contents of the <ph id="ph1">&lt;xref:System.Collections.Generic.IList%601&gt;</ph> collection are serializable types that can be passed directly to the contract (rather than types that must be adapted into contracts).</source>
          <target state="translated">您應該使用這個方法多載時，才內容<ph id="ph1">&lt;xref:System.Collections.Generic.IList%601&gt;</ph>集合是可序列化的型別，可以直接傳遞至合約 （而非必須調整為合約的型別）。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Pipeline.CollectionAdapters.ToIListContract``1(System.Collections.Generic.IList{``0})">
          <source>The following example implements the class that defines an add-in side adapter pipeline segment.</source>
          <target state="translated">下列範例會實作定義增益集端配接器管線區段的類別。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Pipeline.CollectionAdapters.ToIListContract``1(System.Collections.Generic.IList{``0})">
          <source>It adapts the custom <ph id="ph1">`ProcessBooks`</ph> method by taking the <ph id="ph2">&lt;xref:System.Collections.Generic.IList%601&gt;</ph> collection passed from the add-in view segment and converting it to an <ph id="ph3">&lt;xref:System.AddIn.Contract.IListContract%601&gt;</ph> collection that can be marshaled across the isolation boundary to the host.</source>
          <target state="translated">它會調整自訂<ph id="ph1">`ProcessBooks`</ph>採取方法<ph id="ph2">&lt;xref:System.Collections.Generic.IList%601&gt;</ph>集合傳遞從增益集的檢視區段，並將其轉換成<ph id="ph3">&lt;xref:System.AddIn.Contract.IListContract%601&gt;</ph>可以跨主機隔離界限封送處理的集合。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Pipeline.CollectionAdapters.ToIListContract``2(System.Collections.Generic.IList{``0},System.Converter{``0,``1},System.Converter{``1,``0})">
          <source>The type that defines the view of the objects in the list.</source>
          <target state="translated">定義清單中物件檢視的型別。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Pipeline.CollectionAdapters.ToIListContract``2(System.Collections.Generic.IList{``0},System.Converter{``0,``1},System.Converter{``1,``0})">
          <source>The type that defines the contract for passing objects of type <bpt id="p1">&lt;c&gt;</bpt>TView<ept id="p1">&lt;/c&gt;</ept> across the isolation boundary.</source>
          <target state="translated">定義傳遞物件的型別之合約的型別<bpt id="p1">&lt;c&gt;</bpt>TView<ept id="p1">&lt;/c&gt;</ept>跨隔離界限。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.AddIn.Pipeline.CollectionAdapters.ToIListContract``2(System.Collections.Generic.IList{``0},System.Converter{``0,``1},System.Converter{``1,``0})">
          <source>The collection to convert.</source>
          <target state="translated">要轉換的集合。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.AddIn.Pipeline.CollectionAdapters.ToIListContract``2(System.Collections.Generic.IList{``0},System.Converter{``0,``1},System.Converter{``1,``0})">
          <source>A converter that adapts the data from the type defined in the view to the type expected by the contract.</source>
          <target state="translated">轉換子，會將資料的型別從檢視中所定義的型別改寫為合約所需的型別。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.AddIn.Pipeline.CollectionAdapters.ToIListContract``2(System.Collections.Generic.IList{``0},System.Converter{``0,``1},System.Converter{``1,``0})">
          <source>A converter that adapts the data from the type defined in the contract to the type expected in the view.</source>
          <target state="translated">轉換子，會將資料的型別從合約中所定義的型別改寫為檢視中所需的型別。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.AddIn.Pipeline.CollectionAdapters.ToIListContract``2(System.Collections.Generic.IList{``0},System.Converter{``0,``1},System.Converter{``1,``0})">
          <source>Converts a specified <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IList`1" /&gt;</ph> collection to an <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.IListContract`1" /&gt;</ph> collection by using converter adapters.</source>
          <target state="translated">使用轉換子配接器，將指定的 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IList`1" /&gt;</ph> 集合轉換為 <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.IListContract`1" /&gt;</ph> 集合。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.AddIn.Pipeline.CollectionAdapters.ToIListContract``2(System.Collections.Generic.IList{``0},System.Converter{``0,``1},System.Converter{``1,``0})">
          <source>The converted collection.</source>
          <target state="translated">已轉換的集合。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Pipeline.CollectionAdapters.ToIListContract``2(System.Collections.Generic.IList{``0},System.Converter{``0,``1},System.Converter{``1,``0})">
          <source>Use this method overload for <ph id="ph1">&lt;xref:System.Collections.Generic.IList%601&gt;</ph> collections that contain types that must be adapted into contracts before they can be passed to the contract (rather than simple serializable types that can be passed directly).</source>
          <target state="translated">使用這個方法多載，如<ph id="ph1">&lt;xref:System.Collections.Generic.IList%601&gt;</ph>包含的類型，它們可以傳送至合約 （而非簡單可序列化的型別，可直接傳遞） 之前必須調整為合約的集合。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Pipeline.CollectionAdapters.ToIListContract``2(System.Collections.Generic.IList{``0},System.Converter{``0,``1},System.Converter{``1,``0})">
          <source>The <ph id="ph1">&lt;xref:System.AddIn.Contract.IListContract%601&gt;</ph> collection can be marshaled across the isolation boundary between an add-in and its host application.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.AddIn.Contract.IListContract%601&gt;</ph>集合可以增益集和其主應用程式之間隔離界限之間封送處理。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>