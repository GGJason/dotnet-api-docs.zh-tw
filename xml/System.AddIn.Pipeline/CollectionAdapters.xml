<Type Name="CollectionAdapters" FullName="System.AddIn.Pipeline.CollectionAdapters">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="cda5b936b22052f7b99b2c7e5bd552235a459181" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class CollectionAdapters" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit CollectionAdapters extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.AddIn.Pipeline.CollectionAdapters" />
  <TypeSignature Language="VB.NET" Value="Public Class CollectionAdapters" />
  <TypeSignature Language="C++ CLI" Value="public ref class CollectionAdapters abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>System.AddIn</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="497ff-101">讓集合能夠在增益集及其主應用程式之間傳遞。</span>
      <span class="sxs-lookup">
        <span data-stu-id="497ff-101">Enables collections to be passed between an add-in and its host application.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="497ff-102">這個類別會提供方法讓<xref:System.Collections.Generic.IList%601>集合轉換成<xref:System.AddIn.Contract.IListContract%601>集合。</span><span class="sxs-lookup"><span data-stu-id="497ff-102">This class provides methods that enable an <xref:System.Collections.Generic.IList%601> collection to be converted to a <xref:System.AddIn.Contract.IListContract%601> collection.</span></span> <span data-ttu-id="497ff-103"><xref:System.AddIn.Contract.IListContract%601>集合是跨隔離界限傳遞，並轉換回<xref:System.Collections.Generic.IList%601>增益集或主應用程式可以使用的集合。</span><span class="sxs-lookup"><span data-stu-id="497ff-103">The <xref:System.AddIn.Contract.IListContract%601> collection is passed across the isolation boundary and converted back to an <xref:System.Collections.Generic.IList%601> collection that the add-in or the host application can use.</span></span>  
  
 <span data-ttu-id="497ff-104">集合中的物件必須是遠端執行。</span><span class="sxs-lookup"><span data-stu-id="497ff-104">Objects in collections must be remotable.</span></span> <span data-ttu-id="497ff-105">如需您可以將傳遞的物件類型的詳細資訊，請參閱[合約、 檢視和配接器](http://msdn.microsoft.com/library/a6460173-9507-4b87-8c07-d4ee245d715c)。</span><span class="sxs-lookup"><span data-stu-id="497ff-105">For more information about the object types that you can pass, see [Contracts, Views, and Adapters](http://msdn.microsoft.com/library/a6460173-9507-4b87-8c07-d4ee245d715c).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ToIList&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IList&lt;T&gt; ToIList&lt;T&gt; (System.AddIn.Contract.IListContract&lt;T&gt; collection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IList`1&lt;!!T&gt; ToIList&lt;T&gt;(class System.AddIn.Contract.IListContract`1&lt;!!T&gt; collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Pipeline.CollectionAdapters.ToIList``1(System.AddIn.Contract.IListContract{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToIList(Of T) (collection As IListContract(Of T)) As IList(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Collections::Generic::IList&lt;T&gt; ^ ToIList(System::AddIn::Contract::IListContract&lt;T&gt; ^ collection);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="collection" Type="System.AddIn.Contract.IListContract&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="497ff-106">清單中所含物件的型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="497ff-106">The type of objects that are contained in the list.</span>
          </span>
          <span data-ttu-id="497ff-107">
            <c>T</c>必須是可序列化。</span>
          <span class="sxs-lookup">
            <span data-stu-id="497ff-107">
              <c>T</c> must be serializable.</span>
          </span>
        </typeparam>
        <param name="collection">
          <span data-ttu-id="497ff-108">來自管線另一端的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="497ff-108">The collection from the other side of the pipeline.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="497ff-109">將指定的 <see cref="T:System.AddIn.Contract.IListContract`1" /> 集合轉換為 <see cref="T:System.Collections.Generic.IList`1" /> 集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="497ff-109">Converts the specified <see cref="T:System.AddIn.Contract.IListContract`1" /> collection to an <see cref="T:System.Collections.Generic.IList`1" /> collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="497ff-110">已轉換的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="497ff-110">The converted collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="497ff-111">主應用程式或增益集可以使用傳回<xref:System.Collections.Generic.IList%601>集合。</span><span class="sxs-lookup"><span data-stu-id="497ff-111">The host application or add-in can use the returned <xref:System.Collections.Generic.IList%601> collection.</span></span> <span data-ttu-id="497ff-112"><xref:System.Collections.Generic.IList%601>集合中會有遠端的存留期語彙基元<xref:System.AddIn.Contract.IListContract%601>集合。</span><span class="sxs-lookup"><span data-stu-id="497ff-112">The <xref:System.Collections.Generic.IList%601> collection will have a lifetime token for the remote <xref:System.AddIn.Contract.IListContract%601> collection.</span></span>  
  
 <span data-ttu-id="497ff-113">您應該使用這個方法多載時，才內容<xref:System.AddIn.Contract.IListContract%601>是可序列化的型別，可以直接傳遞至增益集與主應用程式 （而非必須調整成檢視的類型）。</span><span class="sxs-lookup"><span data-stu-id="497ff-113">You should use this method overload only when the contents of the <xref:System.AddIn.Contract.IListContract%601> are serializable types that can be passed directly to the add-in and host (rather than types that must be adapted into views).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="497ff-114">下列範例會實作主應用程式端配接器管線區段所述[逐步解說： 將傳遞主機集合與增益集](http://msdn.microsoft.com/library/b532c604-548e-4fab-b11c-377257dd0ee5)。此範例會調整自訂`ProcessBooks`採取方法<xref:System.AddIn.Contract.IListContract%601>集合傳遞從增益集，並將其轉換成<xref:System.Collections.Generic.IList%601>集合，接著可以使用主應用程式。</span><span class="sxs-lookup"><span data-stu-id="497ff-114">The following example implements a host-side adapter pipeline segment as described [Walkthrough: Passing Collections Between Hosts and Add-Ins](http://msdn.microsoft.com/library/b532c604-548e-4fab-b11c-377257dd0ee5). The example adapts the custom `ProcessBooks` method by taking the <xref:System.AddIn.Contract.IListContract%601> collection passed from the add-in and converting it to an <xref:System.Collections.Generic.IList%601> collection, which the host application can then use.</span></span>  
  
 [!code-csharp[AddInCollectionPipelineAddInSideAdapter#3](~/samples/snippets/csharp/VS_Snippets_CLR/AddInCollectionPipelineAddInSideAdapter/cs/LibraryManagerViewToContractAddInAdapter.cs#3)]
 [!code-vb[AddInCollectionPipelineAddInSideAdapter#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/AddInCollectionPipelineAddInSideAdapter/vb/LibraryManagerViewToContractAddInAdapter.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToIList&lt;TContract,TView&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IList&lt;TView&gt; ToIList&lt;TContract,TView&gt; (System.AddIn.Contract.IListContract&lt;TContract&gt; collection, Converter&lt;TContract,TView&gt; contractViewAdapter, Converter&lt;TView,TContract&gt; viewContractAdapter);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IList`1&lt;!!TView&gt; ToIList&lt;TContract, TView&gt;(class System.AddIn.Contract.IListContract`1&lt;!!TContract&gt; collection, class System.Converter`2&lt;!!TContract, !!TView&gt; contractViewAdapter, class System.Converter`2&lt;!!TView, !!TContract&gt; viewContractAdapter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Pipeline.CollectionAdapters.ToIList``2(System.AddIn.Contract.IListContract{``0},System.Converter{``0,``1},System.Converter{``1,``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToIList(Of TContract, TView) (collection As IListContract(Of TContract), contractViewAdapter As Converter(Of TContract, TView), viewContractAdapter As Converter(Of TView, TContract)) As IList(Of TView)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TContract, typename TView&gt;&#xA; static System::Collections::Generic::IList&lt;TView&gt; ^ ToIList(System::AddIn::Contract::IListContract&lt;TContract&gt; ^ collection, Converter&lt;TContract, TView&gt; ^ contractViewAdapter, Converter&lt;TView, TContract&gt; ^ viewContractAdapter);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;TView&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TContract" />
        <TypeParameter Name="TView" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="collection" Type="System.AddIn.Contract.IListContract&lt;TContract&gt;" />
        <Parameter Name="contractViewAdapter" Type="System.Converter&lt;TContract,TView&gt;" />
        <Parameter Name="viewContractAdapter" Type="System.Converter&lt;TView,TContract&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TContract">
          <span data-ttu-id="497ff-115">定義傳遞物件的型別之合約的型別<c>TView</c>跨隔離界限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="497ff-115">The type that defines the contract for passing objects of type <c>TView</c> across the isolation boundary.</span>
          </span>
        </typeparam>
        <typeparam name="TView">
          <span data-ttu-id="497ff-116">定義清單中物件檢視的型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="497ff-116">The type that defines the view of the objects in the list.</span>
          </span>
        </typeparam>
        <param name="collection">
          <span data-ttu-id="497ff-117">要傳遞至管線另一端的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="497ff-117">The collection to pass to the other side of the pipeline.</span>
          </span>
        </param>
        <param name="contractViewAdapter">
          <span data-ttu-id="497ff-118">轉換子，會將資料的型別從合約中所定義的型別改寫為檢視中所需的型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="497ff-118">A converter that adapts the data from the type defined in the contract to the type expected in the view.</span>
          </span>
        </param>
        <param name="viewContractAdapter">
          <span data-ttu-id="497ff-119">轉換子，會將資料的型別從檢視中所定義的型別改寫為合約所需的型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="497ff-119">A converter that adapts the data from the type defined in the view to the type expected by the contract.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="497ff-120">使用轉換子配接器，將指定的 <see cref="T:System.AddIn.Contract.IListContract`1" /> 集合轉換為 <see cref="T:System.Collections.Generic.IList`1" /> 集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="497ff-120">Converts a specified <see cref="T:System.AddIn.Contract.IListContract`1" /> collection to an <see cref="T:System.Collections.Generic.IList`1" /> collection by using converter adapters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="497ff-121">已轉換的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="497ff-121">The converted collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="497ff-122">使用這個方法多載，如<xref:System.AddIn.Contract.IListContract%601>包含的類型，必須先改寫它們可以傳遞給增益集或主機 （而非簡單可直接傳遞的可序列化型別） 的集合。</span><span class="sxs-lookup"><span data-stu-id="497ff-122">Use this method overload for <xref:System.AddIn.Contract.IListContract%601> collections that contain types that must be adapted before they can be passed to the add-in or host (rather than simple serializable types that can be passed directly).</span></span> <span data-ttu-id="497ff-123">主應用程式或增益集可以使用傳回<xref:System.Collections.Generic.IList%601>集合。</span><span class="sxs-lookup"><span data-stu-id="497ff-123">The host application or add-in can use the returned <xref:System.Collections.Generic.IList%601> collection.</span></span> <span data-ttu-id="497ff-124">它會有遠端的存留期語彙基元<xref:System.AddIn.Contract.IListContract%601>。</span><span class="sxs-lookup"><span data-stu-id="497ff-124">It will have a lifetime token for the remote <xref:System.AddIn.Contract.IListContract%601>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToIListContract&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.AddIn.Contract.IListContract&lt;T&gt; ToIListContract&lt;T&gt; (System.Collections.Generic.IList&lt;T&gt; collection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.AddIn.Contract.IListContract`1&lt;!!T&gt; ToIListContract&lt;T&gt;(class System.Collections.Generic.IList`1&lt;!!T&gt; collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Pipeline.CollectionAdapters.ToIListContract``1(System.Collections.Generic.IList{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToIListContract(Of T) (collection As IList(Of T)) As IListContract(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::AddIn::Contract::IListContract&lt;T&gt; ^ ToIListContract(System::Collections::Generic::IList&lt;T&gt; ^ collection);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.IListContract&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="collection" Type="System.Collections.Generic.IList&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="497ff-125">清單中所含物件的型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="497ff-125">The type of objects that are contained in the list.</span>
          </span>
          <span data-ttu-id="497ff-126">
            <c>T</c>必須是可序列化。</span>
          <span class="sxs-lookup">
            <span data-stu-id="497ff-126">
              <c>T</c> must be serializable.</span>
          </span>
        </typeparam>
        <param name="collection">
          <span data-ttu-id="497ff-127">要轉換的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="497ff-127">The collection to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="497ff-128">將指定的 <see cref="T:System.Collections.Generic.IList`1" /> 集合轉換為 <see cref="T:System.AddIn.Contract.IListContract`1" /> 集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="497ff-128">Converts a specified <see cref="T:System.Collections.Generic.IList`1" /> collection to an <see cref="T:System.AddIn.Contract.IListContract`1" /> collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="497ff-129">已轉換的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="497ff-129">The converted collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="497ff-130"><xref:System.AddIn.Contract.IListContract%601>集合可以增益集和其主應用程式之間隔離界限之間封送處理。</span><span class="sxs-lookup"><span data-stu-id="497ff-130">The <xref:System.AddIn.Contract.IListContract%601> collection can be marshaled across the isolation boundary between the add-in and its host application.</span></span>  
  
 <span data-ttu-id="497ff-131">您應該使用這個方法多載時，才內容<xref:System.Collections.Generic.IList%601>集合是可序列化的型別，可以直接傳遞至合約 （而非必須調整為合約的型別）。</span><span class="sxs-lookup"><span data-stu-id="497ff-131">You should use this method overload only when the contents of the <xref:System.Collections.Generic.IList%601> collection are serializable types that can be passed directly to the contract (rather than types that must be adapted into contracts).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="497ff-132">下列範例會實作定義增益集端配接器管線區段的類別。</span><span class="sxs-lookup"><span data-stu-id="497ff-132">The following example implements the class that defines an add-in side adapter pipeline segment.</span></span> <span data-ttu-id="497ff-133">它會調整自訂`ProcessBooks`採取方法<xref:System.Collections.Generic.IList%601>集合傳遞從增益集的檢視區段，並將其轉換成<xref:System.AddIn.Contract.IListContract%601>可以跨主機隔離界限封送處理的集合。</span><span class="sxs-lookup"><span data-stu-id="497ff-133">It adapts the custom `ProcessBooks` method by taking the <xref:System.Collections.Generic.IList%601> collection passed from the add-in view segment and converting it to an <xref:System.AddIn.Contract.IListContract%601> collection that can be marshaled across the isolation boundary to the host.</span></span>  
  
 [!code-csharp[AddInCollectionPipelineHostSideAdapter#4](~/samples/snippets/csharp/VS_Snippets_CLR/AddInCollectionPipelineHostSideAdapter/cs/LibraryManagerContractToViewHostAdapter.cs#4)]
 [!code-vb[AddInCollectionPipelineHostSideAdapter#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/AddInCollectionPipelineHostSideAdapter/vb/LibraryManagerContractToViewHostAdapter.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToIListContract&lt;TView,TContract&gt;">
      <MemberSignature Language="C#" Value="public static System.AddIn.Contract.IListContract&lt;TContract&gt; ToIListContract&lt;TView,TContract&gt; (System.Collections.Generic.IList&lt;TView&gt; collection, Converter&lt;TView,TContract&gt; viewContractAdapter, Converter&lt;TContract,TView&gt; contractViewAdapter);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.AddIn.Contract.IListContract`1&lt;!!TContract&gt; ToIListContract&lt;TView, TContract&gt;(class System.Collections.Generic.IList`1&lt;!!TView&gt; collection, class System.Converter`2&lt;!!TView, !!TContract&gt; viewContractAdapter, class System.Converter`2&lt;!!TContract, !!TView&gt; contractViewAdapter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Pipeline.CollectionAdapters.ToIListContract``2(System.Collections.Generic.IList{``0},System.Converter{``0,``1},System.Converter{``1,``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToIListContract(Of TView, TContract) (collection As IList(Of TView), viewContractAdapter As Converter(Of TView, TContract), contractViewAdapter As Converter(Of TContract, TView)) As IListContract(Of TContract)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TView, typename TContract&gt;&#xA; static System::AddIn::Contract::IListContract&lt;TContract&gt; ^ ToIListContract(System::Collections::Generic::IList&lt;TView&gt; ^ collection, Converter&lt;TView, TContract&gt; ^ viewContractAdapter, Converter&lt;TContract, TView&gt; ^ contractViewAdapter);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.IListContract&lt;TContract&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TView" />
        <TypeParameter Name="TContract" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="collection" Type="System.Collections.Generic.IList&lt;TView&gt;" />
        <Parameter Name="viewContractAdapter" Type="System.Converter&lt;TView,TContract&gt;" />
        <Parameter Name="contractViewAdapter" Type="System.Converter&lt;TContract,TView&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TView">
          <span data-ttu-id="497ff-134">定義清單中物件檢視的型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="497ff-134">The type that defines the view of the objects in the list.</span>
          </span>
        </typeparam>
        <typeparam name="TContract">
          <span data-ttu-id="497ff-135">定義傳遞物件的型別之合約的型別<c>TView</c>跨隔離界限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="497ff-135">The type that defines the contract for passing objects of type <c>TView</c> across the isolation boundary.</span>
          </span>
        </typeparam>
        <param name="collection">
          <span data-ttu-id="497ff-136">要轉換的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="497ff-136">The collection to convert.</span>
          </span>
        </param>
        <param name="viewContractAdapter">
          <span data-ttu-id="497ff-137">轉換子，會將資料的型別從檢視中所定義的型別改寫為合約所需的型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="497ff-137">A converter that adapts the data from the type defined in the view to the type expected by the contract.</span>
          </span>
        </param>
        <param name="contractViewAdapter">
          <span data-ttu-id="497ff-138">轉換子，會將資料的型別從合約中所定義的型別改寫為檢視中所需的型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="497ff-138">A converter that adapts the data from the type defined in the contract to the type expected in the view.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="497ff-139">使用轉換子配接器，將指定的 <see cref="T:System.Collections.Generic.IList`1" /> 集合轉換為 <see cref="T:System.AddIn.Contract.IListContract`1" /> 集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="497ff-139">Converts a specified <see cref="T:System.Collections.Generic.IList`1" /> collection to an <see cref="T:System.AddIn.Contract.IListContract`1" /> collection by using converter adapters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="497ff-140">已轉換的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="497ff-140">The converted collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="497ff-141">使用這個方法多載，如<xref:System.Collections.Generic.IList%601>包含的類型，它們可以傳送至合約 （而非簡單可序列化的型別，可直接傳遞） 之前必須調整為合約的集合。</span><span class="sxs-lookup"><span data-stu-id="497ff-141">Use this method overload for <xref:System.Collections.Generic.IList%601> collections that contain types that must be adapted into contracts before they can be passed to the contract (rather than simple serializable types that can be passed directly).</span></span> <span data-ttu-id="497ff-142"><xref:System.AddIn.Contract.IListContract%601>集合可以增益集和其主應用程式之間隔離界限之間封送處理。</span><span class="sxs-lookup"><span data-stu-id="497ff-142">The <xref:System.AddIn.Contract.IListContract%601> collection can be marshaled across the isolation boundary between an add-in and its host application.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>