<Type Name="DbCommandBuilder" FullName="System.Data.Common.DbCommandBuilder">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9e97ad01d80f31f30d18baec5746496dd12f5932" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37683579" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class DbCommandBuilder : System.ComponentModel.Component" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit DbCommandBuilder extends System.ComponentModel.Component" />
  <TypeSignature Language="DocId" Value="T:System.Data.Common.DbCommandBuilder" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class DbCommandBuilder&#xA;Inherits Component" />
  <TypeSignature Language="C++ CLI" Value="public ref class DbCommandBuilder abstract : System::ComponentModel::Component" />
  <TypeSignature Language="F#" Value="type DbCommandBuilder = class&#xA;    inherit Component" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Automatically generates single-table commands used to reconcile changes made to a <see cref="T:System.Data.DataSet" /> with the associated database. This is an abstract class that can only be inherited.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Common.DbCommandBuilder>類別提供方便的提供者撰寫人員建立自己的命令產生器。 藉由繼承自這個類別，開發人員可以在自己的程式碼中實作提供者特定的行為。  
  
 <xref:System.Data.Common.DbDataAdapter>調解所做的變更所需的 SQL 陳述式不會自動產生<xref:System.Data.DataSet>與相關聯的資料來源。 不過，您可以建立<xref:System.Data.Common.DbCommandBuilder>物件來自動產生單一資料表更新的 SQL 陳述式，如果您設定<xref:System.Data.Common.DbDataAdapter.SelectCommand%2A>屬性<xref:System.Data.Common.DbDataAdapter>。 然後，您未設定任何其他 SQL 陳述式由產生<xref:System.Data.Common.DbCommandBuilder>。  
  
 <xref:System.Data.Common.DbCommandBuilder>自己註冊為接聽程式<xref:System.Data.OleDb.OleDbDataAdapter.RowUpdating>事件，每當您設定<xref:System.Data.Common.DbCommandBuilder.DataAdapter%2A>屬性。 您只能將一個<xref:System.Data.Common.DbDataAdapter>或<xref:System.Data.Common.DbCommandBuilder>彼此物件一次。  
  
 若要產生 INSERT、 UPDATE 或 DELETE 陳述式<xref:System.Data.Common.DbCommandBuilder>使用<xref:System.Data.Common.DbDataAdapter.SelectCommand%2A>屬性，以自動擷取一組必要中繼資料。 如果您變更<xref:System.Data.Common.DbDataAdapter.SelectCommand%2A>中繼資料擷取 （例如，在第一次的更新） 之後，您應該呼叫<xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>更新的中繼資料的方法。  
  
 `SelectCommand` 還必須傳回至少一個主索引鍵或唯一的資料行。 如果沒有，<xref:System.InvalidOperationException>會產生例外狀況，並不會產生命令。  
  
 <xref:System.Data.Common.DbCommandBuilder>也會使用<xref:System.Data.Common.DbCommand.Connection%2A>， <xref:System.Data.Common.DbCommand.CommandTimeout%2A>，以及<xref:System.Data.Common.DbCommand.Transaction%2A>屬性所參考<xref:System.Data.Common.DbDataAdapter.SelectCommand%2A>。 使用者應該呼叫<xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>修改這些屬性，則<xref:System.Data.Common.DbDataAdapter.SelectCommand%2A>本身會被取代。 否則<xref:System.Data.Common.DbDataAdapter.InsertCommand%2A>， <xref:System.Data.Common.DbDataAdapter.UpdateCommand%2A>，和<xref:System.Data.Common.DbDataAdapter.DeleteCommand%2A>屬性會保留其先前的值。  
  
 如果您呼叫<xref:System.ComponentModel.Component.Dispose%2A>，則<xref:System.Data.Common.DbCommandBuilder>解除關聯<xref:System.Data.Common.DbDataAdapter>，以及無法再使用產生的命令。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DbCommandBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbCommandBuilder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DbCommandBuilder();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of a class that inherits from the <see cref="T:System.Data.Common.DbCommandBuilder" /> class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyParameterInfo">
      <MemberSignature Language="C#" Value="protected abstract void ApplyParameterInfo (System.Data.Common.DbParameter parameter, System.Data.DataRow row, System.Data.StatementType statementType, bool whereClause);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ApplyParameterInfo(class System.Data.Common.DbParameter parameter, class System.Data.DataRow row, valuetype System.Data.StatementType statementType, bool whereClause) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbCommandBuilder.ApplyParameterInfo(System.Data.Common.DbParameter,System.Data.DataRow,System.Data.StatementType,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void ApplyParameterInfo(System::Data::Common::DbParameter ^ parameter, System::Data::DataRow ^ row, System::Data::StatementType statementType, bool whereClause);" />
      <MemberSignature Language="F#" Value="abstract member ApplyParameterInfo : System.Data.Common.DbParameter * System.Data.DataRow * System.Data.StatementType * bool -&gt; unit" Usage="dbCommandBuilder.ApplyParameterInfo (parameter, row, statementType, whereClause)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.Data.Common.DbParameter" />
        <Parameter Name="row" Type="System.Data.DataRow" />
        <Parameter Name="statementType" Type="System.Data.StatementType" />
        <Parameter Name="whereClause" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="parameter">A <see cref="T:System.Data.Common.DbParameter" /> to which the additional modifications are applied.</param>
        <param name="row">The <see cref="T:System.Data.DataRow" /> from the schema table provided by <see cref="M:System.Data.Common.DbDataReader.GetSchemaTable" />.</param>
        <param name="statementType">The type of command being generated; INSERT, UPDATE or DELETE.</param>
        <param name="whereClause">
          <see langword="true" /> if the parameter is part of the update or delete WHERE clause, <see langword="false" /> if it is part of the insert or update values.</param>
        <summary>Allows the provider implementation of the <see cref="T:System.Data.Common.DbCommandBuilder" /> class to handle additional parameter properties.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法可讓實作<xref:System.Data.Common.DbCommandBuilder>類別來處理提供者特定的參數屬性。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CatalogLocation">
      <MemberSignature Language="C#" Value="public virtual System.Data.Common.CatalogLocation CatalogLocation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.Common.CatalogLocation CatalogLocation" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbCommandBuilder.CatalogLocation" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CatalogLocation As CatalogLocation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::Common::CatalogLocation CatalogLocation { System::Data::Common::CatalogLocation get(); void set(System::Data::Common::CatalogLocation value); };" />
      <MemberSignature Language="F#" Value="member this.CatalogLocation : System.Data.Common.CatalogLocation with get, set" Usage="System.Data.Common.DbCommandBuilder.CatalogLocation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Common.CatalogLocation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Sets or gets the <see cref="T:System.Data.Common.CatalogLocation" /> for an instance of the <see cref="T:System.Data.Common.DbCommandBuilder" /> class.</summary>
        <value>
          <see cref="T:System.Data.Common.CatalogLocation" /> 物件。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CatalogSeparator">
      <MemberSignature Language="C#" Value="public virtual string CatalogSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CatalogSeparator" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbCommandBuilder.CatalogSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CatalogSeparator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CatalogSeparator { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CatalogSeparator : string with get, set" Usage="System.Data.Common.DbCommandBuilder.CatalogSeparator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(".")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Sets or gets a string used as the catalog separator for an instance of the <see cref="T:System.Data.Common.DbCommandBuilder" /> class.</summary>
        <value>字串，表示的執行個體使用的目錄分隔符號<see cref="T:System.Data.Common.DbCommandBuilder" />類別。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConflictOption">
      <MemberSignature Language="C#" Value="public virtual System.Data.ConflictOption ConflictOption { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.ConflictOption ConflictOption" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbCommandBuilder.ConflictOption" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ConflictOption As ConflictOption" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::ConflictOption ConflictOption { System::Data::ConflictOption get(); void set(System::Data::ConflictOption value); };" />
      <MemberSignature Language="F#" Value="member this.ConflictOption : System.Data.ConflictOption with get, set" Usage="System.Data.Common.DbCommandBuilder.ConflictOption" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.ConflictOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Specifies which <see cref="T:System.Data.ConflictOption" /> is to be used by the <see cref="T:System.Data.Common.DbCommandBuilder" />.</summary>
        <value>傳回的其中一個<see cref="T:System.Data.ConflictOption" />值，描述這個行為<see cref="T:System.Data.Common.DbCommandBuilder" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataAdapter">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbDataAdapter DataAdapter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbDataAdapter DataAdapter" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbCommandBuilder.DataAdapter" />
      <MemberSignature Language="VB.NET" Value="Public Property DataAdapter As DbDataAdapter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Common::DbDataAdapter ^ DataAdapter { System::Data::Common::DbDataAdapter ^ get(); void set(System::Data::Common::DbDataAdapter ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataAdapter : System.Data.Common.DbDataAdapter with get, set" Usage="System.Data.Common.DbCommandBuilder.DataAdapter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbDataAdapter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a <see cref="T:System.Data.Common.DbDataAdapter" /> object for which Transact-SQL statements are automatically generated.</summary>
        <value>
          <see cref="T:System.Data.Common.DbDataAdapter" /> 物件。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Common.DbCommandBuilder>自己註冊為接聽程式<xref:System.Data.OleDb.OleDbDataAdapter.RowUpdating>產生的事件<xref:System.Data.Common.DbDataAdapter>這個屬性中指定。  
  
 當您建立的新執行個體<xref:System.Data.Common.DbCommandBuilder>，任何現有<xref:System.Data.Common.DbCommandBuilder>與此相關聯<xref:System.Data.Common.DbDataAdapter>發行。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbCommandBuilder.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="dbCommandBuilder.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</param>
        <summary>Releases the unmanaged resources used by the <see cref="T:System.Data.Common.DbCommandBuilder" /> and optionally releases the managed resources.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法會呼叫公用<xref:System.Data.Common.DbCommandBuilder.Dispose%2A>方法和`Finalize`方法。 <xref:System.Data.Common.DbCommandBuilder.Dispose%2A> 叫用受保護<xref:System.Data.Common.DbCommandBuilder.Dispose%2A>disposing 參數設定為方法`true`。 `Finalize` 叫用`Dispose`具有`disposing`設定為`false`。  
  
 `disposing` 參數為 `true` 時，這個方法會釋放 <xref:System.Data.Common.DbCommandBuilder> 參考的任何 Managed 物件所掌握的資源。 這個方法會叫用每個參考物件的 <xref:System.Data.Common.DbCommandBuilder.Dispose%2A> 方法。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <see cref="Overload:System.Data.Common.DbCommandBuilder.Dispose" /> 可以多次呼叫的其他物件。覆寫 <see cref="M:System.Data.Common.DbCommandBuilder.Dispose(System.Boolean)" /> 時，請小心不要參考到先前已在對 <see cref="Overload:System.Data.Common.DbCommandBuilder.Dispose" /> 的早期呼叫中被處置 (Dispose) 的物件。如需有關如何實作<see cref="M:System.Data.Common.DbCommandBuilder.Dispose(System.Boolean)" />，請參閱 [實作 Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md)。如需詳細資訊<see langword="Dispose" />並<see langword="Finalize" />，請參閱 [清除設定未受管理的 Resources](~/docs/standard/garbage-collection/unmanaged.md) 和 [覆寫 Finalize 方法] (http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)。</para>
        </block>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetDeleteCommand">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Gets the automatically generated <see cref="T:System.Data.Common.DbCommand" /> object required to perform deletions at the data source.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 應用程式可以使用<xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A>告知性或疑難排解的方法之用，因為它會傳回<xref:System.Data.Common.DbCommand>来執行的物件。  
  
 您也可以使用<xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A>做為基礎的修改過的命令。 例如，您可能會呼叫<xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A>修改相關聯的命令文字，並接著上明確設定， <xref:System.Data.Common.DbDataAdapter>。  
  
 第一次產生的 SQL 陳述式之後，應用程式必須明確呼叫<xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>如果它會變更以任何方式陳述式。 否則，<xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A>仍會使用從先前的陳述式，因此可能不正確的資訊。 SQL 陳述式是第一個應用程式呼叫時產生<xref:System.Data.Common.DbDataAdapter.Update%2A>或<xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A>。  
  
 產生的參數名稱時的預設行為是使用@p1， @p2，依此類推的各種不同的參數。 如果多載的版本<xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A>可讓您藉由提供布林值，指定此行為可能會造成<xref:System.Data.Common.DbCommandBuilder>產生根據資料行名稱改為傳遞的參數`True`。  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetDeleteCommand">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbCommand GetDeleteCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Common.DbCommand GetDeleteCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbCommandBuilder.GetDeleteCommand" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDeleteCommand () As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Common::DbCommand ^ GetDeleteCommand();" />
      <MemberSignature Language="F#" Value="member this.GetDeleteCommand : unit -&gt; System.Data.Common.DbCommand" Usage="dbCommandBuilder.GetDeleteCommand " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets the automatically generated <see cref="T:System.Data.Common.DbCommand" /> object required to perform deletions at the data source.</summary>
        <returns>The automatically generated <see cref="T:System.Data.Common.DbCommand" /> object required to perform deletions.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 應用程式可以使用<xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A>告知性或疑難排解的方法之用，因為它會傳回<xref:System.Data.Common.DbCommand>来執行的物件。  
  
 您也可以使用<xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A>做為基礎的修改過的命令。 例如，您可能會呼叫<xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A>修改命令文字，並接著上明確設定， <xref:System.Data.Common.DbDataAdapter>。  
  
 第一次產生的 SQL 陳述式之後，應用程式必須明確呼叫<xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>如果它會變更以任何方式陳述式。 否則，<xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A>仍會使用從先前的陳述式，因此可能不正確的資訊。 SQL 陳述式是第一個應用程式呼叫時產生<xref:System.Data.Common.DbDataAdapter.Update%2A>或<xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDeleteCommand">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbCommand GetDeleteCommand (bool useColumnsForParameterNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Common.DbCommand GetDeleteCommand(bool useColumnsForParameterNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbCommandBuilder.GetDeleteCommand(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDeleteCommand (useColumnsForParameterNames As Boolean) As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Common::DbCommand ^ GetDeleteCommand(bool useColumnsForParameterNames);" />
      <MemberSignature Language="F#" Value="member this.GetDeleteCommand : bool -&gt; System.Data.Common.DbCommand" Usage="dbCommandBuilder.GetDeleteCommand useColumnsForParameterNames" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="useColumnsForParameterNames" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="useColumnsForParameterNames">If <see langword="true" />, generate parameter names matching column names, if possible. If <see langword="false" />, generate @p1, @p2, and so on.</param>
        <summary>Gets the automatically generated <see cref="T:System.Data.Common.DbCommand" /> object required to perform deletions at the data source, optionally using columns for parameter names.</summary>
        <returns>The automatically generated <see cref="T:System.Data.Common.DbCommand" /> object required to perform deletions.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 應用程式可以使用<xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A>告知性或疑難排解的方法之用，因為它會傳回<xref:System.Data.Common.DbCommand>来執行的物件。  
  
 您也可以使用<xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A>做為基礎的修改過的命令。 例如，您可能會呼叫<xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A>修改命令文字，並接著上明確設定， <xref:System.Data.Common.DbDataAdapter>。  
  
 第一次產生的 SQL 陳述式之後，應用程式必須明確呼叫<xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>如果它會變更以任何方式陳述式。 否則，<xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A>仍會使用從先前的陳述式，因此可能不正確的資訊。 SQL 陳述式是第一個應用程式呼叫時產生<xref:System.Data.Common.DbDataAdapter.Update%2A>或<xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A>。  
  
 產生的參數名稱時的預設行為是使用@p1， @p2，依此類推的各種不同的參數。 傳遞`true`for`useColumnsForParameterNames`參數可讓您強制<xref:System.Data.Common.DbCommandBuilder>產生改為根據的資料行名稱的參數。 符合下列條件時，才會如此成功：  
  
-   <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength>已指定，且其長度等於或大於產生的參數名稱。  
  
-   產生的參數名稱符合指定準則<xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern>規則運算式。  
  
-   A<xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat>指定。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetInsertCommand">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Gets the automatically generated <see cref="T:System.Data.Common.DbCommand" /> object required to perform insertions at the data source.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 應用程式可以使用<xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A>告知性或疑難排解的方法之用，因為它會傳回的文字<xref:System.Data.Common.DbCommand>来執行的物件。  
  
 您也可以使用<xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A>做為基礎的修改過的命令。 例如，您可能會呼叫<xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A>修改命令的文字，並接著上明確設定， <xref:System.Data.Common.DbDataAdapter>。  
  
 第一次產生的 SQL 陳述式之後，應用程式必須明確呼叫<xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>如果它會變更以任何方式陳述式。 否則，<xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A>仍會使用從先前的陳述式，因此可能不正確的資訊。 SQL 陳述式是第一個應用程式呼叫時產生<xref:System.Data.Common.DbDataAdapter.Update%2A>或<xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A>。  
  
 產生的參數名稱時的預設行為是使用@p1， @p2，依此類推的各種不同的參數。 如果多載的版本<xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A>可讓您指定此行為，您可能會造成<xref:System.Data.Common.DbCommandBuilder>產生改為根據的資料行名稱的參數。  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetInsertCommand">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbCommand GetInsertCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Common.DbCommand GetInsertCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbCommandBuilder.GetInsertCommand" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInsertCommand () As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Common::DbCommand ^ GetInsertCommand();" />
      <MemberSignature Language="F#" Value="member this.GetInsertCommand : unit -&gt; System.Data.Common.DbCommand" Usage="dbCommandBuilder.GetInsertCommand " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets the automatically generated <see cref="T:System.Data.Common.DbCommand" /> object required to perform insertions at the data source.</summary>
        <returns>The automatically generated <see cref="T:System.Data.Common.DbCommand" /> object required to perform insertions.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 應用程式可以使用<xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A>告知性或疑難排解的方法之用，因為它會傳回的文字<xref:System.Data.Common.DbCommand>来執行的物件。  
  
 您也可以使用<xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A>做為基礎的修改過的命令。 例如，您可能會呼叫<xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A>修改命令文字，並接著上明確設定， <xref:System.Data.Common.DbDataAdapter>。  
  
 第一次產生的 SQL 陳述式之後，應用程式必須明確呼叫<xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>如果它會變更以任何方式陳述式。 否則，<xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A>仍會使用從先前的陳述式，因此可能不正確的資訊。 SQL 陳述式是第一個應用程式呼叫時產生<xref:System.Data.Common.DbDataAdapter.Update%2A>或<xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInsertCommand">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbCommand GetInsertCommand (bool useColumnsForParameterNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Common.DbCommand GetInsertCommand(bool useColumnsForParameterNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbCommandBuilder.GetInsertCommand(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInsertCommand (useColumnsForParameterNames As Boolean) As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Common::DbCommand ^ GetInsertCommand(bool useColumnsForParameterNames);" />
      <MemberSignature Language="F#" Value="member this.GetInsertCommand : bool -&gt; System.Data.Common.DbCommand" Usage="dbCommandBuilder.GetInsertCommand useColumnsForParameterNames" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="useColumnsForParameterNames" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="useColumnsForParameterNames">If <see langword="true" />, generate parameter names matching column names, if possible. If <see langword="false" />, generate @p1, @p2, and so on.</param>
        <summary>Gets the automatically generated <see cref="T:System.Data.Common.DbCommand" /> object required to perform insertions at the data source, optionally using columns for parameter names.</summary>
        <returns>The automatically generated <see cref="T:System.Data.Common.DbCommand" /> object required to perform insertions.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 應用程式可以使用<xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A>告知性或疑難排解的方法之用，因為它會傳回的文字<xref:System.Data.Common.DbCommand>来執行的物件。  
  
 您也可以使用<xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A>做為基礎的修改過的命令。 例如，您可能會呼叫<xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A>修改命令文字，並接著上明確設定， <xref:System.Data.Common.DbDataAdapter>。  
  
 第一次產生的 SQL 陳述式之後，應用程式必須明確呼叫<xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>如果它會變更以任何方式陳述式。 否則，<xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A>仍會使用從先前的陳述式，因此可能不正確的資訊。 SQL 陳述式是第一個應用程式呼叫時產生<xref:System.Data.Common.DbDataAdapter.Update%2A>或<xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A>。  
  
 產生的參數名稱時的預設行為是使用@p1， @p2，依此類推的各種不同的參數。 傳遞`true`for`useColumnsForParameterNames`參數可讓您強制<xref:System.Data.Common.DbCommandBuilder>產生改為根據的資料行名稱的參數。 根據資料行名稱的參數產生成功，必須符合下列條件：  
  
-   <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength>已指定，且其長度等於或大於產生的參數名稱。  
  
-   產生的參數名稱符合指定準則<xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern>規則運算式。  
  
-   A<xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat>指定。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetParameterName">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Returns the name of the specified parameter.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetParameterName">
      <MemberSignature Language="C#" Value="protected abstract string GetParameterName (int parameterOrdinal);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetParameterName(int32 parameterOrdinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbCommandBuilder.GetParameterName(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function GetParameterName (parameterOrdinal As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::String ^ GetParameterName(int parameterOrdinal);" />
      <MemberSignature Language="F#" Value="abstract member GetParameterName : int -&gt; string" Usage="dbCommandBuilder.GetParameterName parameterOrdinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameterOrdinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="parameterOrdinal">The number to be included as part of the parameter's name..</param>
        <summary>Returns the name of the specified parameter in the format of @p*#*. Use when building a custom command builder.</summary>
        <returns>The name of the parameter with the specified number appended as part of the parameter name.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetParameterName">
      <MemberSignature Language="C#" Value="protected abstract string GetParameterName (string parameterName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetParameterName(string parameterName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbCommandBuilder.GetParameterName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function GetParameterName (parameterName As String) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::String ^ GetParameterName(System::String ^ parameterName);" />
      <MemberSignature Language="F#" Value="abstract member GetParameterName : string -&gt; string" Usage="dbCommandBuilder.GetParameterName parameterName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameterName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="parameterName">The partial name of the parameter.</param>
        <summary>Returns the full parameter name, given the partial parameter name.</summary>
        <returns>The full parameter name corresponding to the partial parameter name requested.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetParameterPlaceholder">
      <MemberSignature Language="C#" Value="protected abstract string GetParameterPlaceholder (int parameterOrdinal);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetParameterPlaceholder(int32 parameterOrdinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbCommandBuilder.GetParameterPlaceholder(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function GetParameterPlaceholder (parameterOrdinal As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::String ^ GetParameterPlaceholder(int parameterOrdinal);" />
      <MemberSignature Language="F#" Value="abstract member GetParameterPlaceholder : int -&gt; string" Usage="dbCommandBuilder.GetParameterPlaceholder parameterOrdinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameterOrdinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="parameterOrdinal">The number to be included as part of the parameter's name.</param>
        <summary>Returns the placeholder for the parameter in the associated SQL statement.</summary>
        <returns>The name of the parameter with the specified number appended.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法是用於所建置的自訂命令產生器的提供者撰寫人員。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSchemaTable">
      <MemberSignature Language="C#" Value="protected virtual System.Data.DataTable GetSchemaTable (System.Data.Common.DbCommand sourceCommand);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.DataTable GetSchemaTable(class System.Data.Common.DbCommand sourceCommand) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbCommandBuilder.GetSchemaTable(System.Data.Common.DbCommand)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetSchemaTable (sourceCommand As DbCommand) As DataTable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Data::DataTable ^ GetSchemaTable(System::Data::Common::DbCommand ^ sourceCommand);" />
      <MemberSignature Language="F#" Value="abstract member GetSchemaTable : System.Data.Common.DbCommand -&gt; System.Data.DataTable&#xA;override this.GetSchemaTable : System.Data.Common.DbCommand -&gt; System.Data.DataTable" Usage="dbCommandBuilder.GetSchemaTable sourceCommand" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceCommand" Type="System.Data.Common.DbCommand" />
      </Parameters>
      <Docs>
        <param name="sourceCommand">The <see cref="T:System.Data.Common.DbCommand" /> for which to retrieve the corresponding schema table.</param>
        <summary>Returns the schema table for the <see cref="T:System.Data.Common.DbCommandBuilder" />.</summary>
        <returns>A <see cref="T:System.Data.DataTable" /> that represents the schema for the specific <see cref="T:System.Data.Common.DbCommand" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法是用於所建置的自訂命令產生器的提供者撰寫人員。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetUpdateCommand">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Gets the automatically generated <see cref="T:System.Data.Common.DbCommand" /> object required to perform updates at the data source.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 應用程式可以使用<xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A>告知性或疑難排解的方法之用，因為它會傳回<xref:System.Data.Common.DbCommand>来執行的物件。  
  
 您也可以使用<xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A>做為基礎的修改過的命令。 例如，您可能會呼叫<xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A>修改命令文字，並接著上明確設定， <xref:System.Data.Common.DbDataAdapter>。  
  
 第一次產生的 SQL 陳述式之後，應用程式必須明確呼叫<xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>如果它會變更以任何方式陳述式。 否則，<xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A>仍會使用從先前的陳述式，因此可能不正確的資訊。 SQL 陳述式是第一個應用程式呼叫時產生<xref:System.Data.Common.DbDataAdapter.Update%2A>或<xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A>。  
  
 產生的參數名稱時的預設行為是使用@p1， @p2，依此類推的各種不同的參數。 如果多載的版本<xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A>可讓您指定此行為，您可能會造成<xref:System.Data.Common.DbCommandBuilder>產生改為根據的資料行名稱的參數。  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetUpdateCommand">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbCommand GetUpdateCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Common.DbCommand GetUpdateCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbCommandBuilder.GetUpdateCommand" />
      <MemberSignature Language="VB.NET" Value="Public Function GetUpdateCommand () As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Common::DbCommand ^ GetUpdateCommand();" />
      <MemberSignature Language="F#" Value="member this.GetUpdateCommand : unit -&gt; System.Data.Common.DbCommand" Usage="dbCommandBuilder.GetUpdateCommand " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets the automatically generated <see cref="T:System.Data.Common.DbCommand" /> object required to perform updates at the data source.</summary>
        <returns>The automatically generated <see cref="T:System.Data.Common.DbCommand" /> object required to perform updates.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 應用程式可以使用<xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A>告知性或疑難排解的方法之用，因為它會傳回<xref:System.Data.Common.DbCommand>来執行的物件。  
  
 您也可以使用<xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A>做為基礎的修改過的命令。 例如，您可能會呼叫<xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A>修改命令文字，並接著上明確設定， <xref:System.Data.Common.DbDataAdapter>。  
  
 第一次產生的 SQL 陳述式之後，應用程式必須明確呼叫<xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>如果它會變更以任何方式陳述式。 否則，<xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A>仍會使用從先前的陳述式，因此可能不正確的資訊。 SQL 陳述式是第一個應用程式呼叫時產生<xref:System.Data.Common.DbDataAdapter.Update%2A>或<xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUpdateCommand">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbCommand GetUpdateCommand (bool useColumnsForParameterNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Common.DbCommand GetUpdateCommand(bool useColumnsForParameterNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbCommandBuilder.GetUpdateCommand(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetUpdateCommand (useColumnsForParameterNames As Boolean) As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Common::DbCommand ^ GetUpdateCommand(bool useColumnsForParameterNames);" />
      <MemberSignature Language="F#" Value="member this.GetUpdateCommand : bool -&gt; System.Data.Common.DbCommand" Usage="dbCommandBuilder.GetUpdateCommand useColumnsForParameterNames" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="useColumnsForParameterNames" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="useColumnsForParameterNames">If <see langword="true" />, generate parameter names matching column names, if possible. If <see langword="false" />, generate @p1, @p2, and so on.</param>
        <summary>Gets the automatically generated <see cref="T:System.Data.Common.DbCommand" /> object required to perform updates at the data source, optionally using columns for parameter names.</summary>
        <returns>The automatically generated <see cref="T:System.Data.Common.DbCommand" /> object required to perform updates.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 應用程式可以使用<xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A>告知性或疑難排解的方法之用，因為它會傳回<xref:System.Data.Common.DbCommand>来執行的物件。  
  
 您也可以使用<xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A>做為基礎的修改過的命令。 例如，您可能會呼叫<xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A>修改命令的文字，並接著上明確設定， <xref:System.Data.Common.DbDataAdapter>。  
  
 第一次產生的 SQL 陳述式之後，應用程式必須明確呼叫<xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>如果它會變更以任何方式陳述式。 否則，<xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A>仍會使用從先前的陳述式，因此可能不正確的資訊。 SQL 陳述式是第一個應用程式呼叫時產生<xref:System.Data.Common.DbDataAdapter.Update%2A>或<xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A>。  
  
 產生的參數名稱時的預設行為是使用@p1， @p2，依此類推的各種不同的參數。 傳遞`true`for`useColumnsForParameterNames`參數可讓您強制<xref:System.Data.Common.DbCommandBuilder>產生改為根據的資料行名稱的參數。 根據資料行名稱的參數產生成功，必須符合下列條件：  
  
-   <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength>已指定，且其長度等於或大於產生的參數名稱。  
  
-   產生的參數名稱符合指定準則<xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern>規則運算式。  
  
-   A<xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat>指定。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeCommand">
      <MemberSignature Language="C#" Value="protected virtual System.Data.Common.DbCommand InitializeCommand (System.Data.Common.DbCommand command);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.Common.DbCommand InitializeCommand(class System.Data.Common.DbCommand command) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbCommandBuilder.InitializeCommand(System.Data.Common.DbCommand)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function InitializeCommand (command As DbCommand) As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Data::Common::DbCommand ^ InitializeCommand(System::Data::Common::DbCommand ^ command);" />
      <MemberSignature Language="F#" Value="abstract member InitializeCommand : System.Data.Common.DbCommand -&gt; System.Data.Common.DbCommand&#xA;override this.InitializeCommand : System.Data.Common.DbCommand -&gt; System.Data.Common.DbCommand" Usage="dbCommandBuilder.InitializeCommand command" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="System.Data.Common.DbCommand" />
      </Parameters>
      <Docs>
        <param name="command">The <see cref="T:System.Data.Common.DbCommand" /> to be used by the command builder for the corresponding insert, update, or delete command.</param>
        <summary>Resets the <see cref="P:System.Data.Common.DbCommand.CommandTimeout" />, <see cref="P:System.Data.Common.DbCommand.Transaction" />, <see cref="P:System.Data.Common.DbCommand.CommandType" />, and <see cref="T:System.Data.UpdateRowSource" /> properties on the <see cref="T:System.Data.Common.DbCommand" />.</summary>
        <returns>A <see cref="T:System.Data.Common.DbCommand" /> instance to use for each insert, update, or delete operation. Passing a null value allows the <see cref="M:System.Data.Common.DbCommandBuilder.InitializeCommand(System.Data.Common.DbCommand)" /> method to create a <see cref="T:System.Data.Common.DbCommand" /> object based on the Select command associated with the <see cref="T:System.Data.Common.DbCommandBuilder" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法是用於所建置的自訂命令產生器的提供者撰寫人員。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QuoteIdentifier">
      <MemberSignature Language="C#" Value="public virtual string QuoteIdentifier (string unquotedIdentifier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string QuoteIdentifier(string unquotedIdentifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbCommandBuilder.QuoteIdentifier(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function QuoteIdentifier (unquotedIdentifier As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ QuoteIdentifier(System::String ^ unquotedIdentifier);" />
      <MemberSignature Language="F#" Value="abstract member QuoteIdentifier : string -&gt; string&#xA;override this.QuoteIdentifier : string -&gt; string" Usage="dbCommandBuilder.QuoteIdentifier unquotedIdentifier" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unquotedIdentifier" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="unquotedIdentifier">The original unquoted identifier.</param>
        <summary>Given an unquoted identifier in the correct catalog case, returns the correct quoted form of that identifier, including properly escaping any embedded quotes in the identifier.</summary>
        <returns>The quoted version of the identifier. Embedded quotes within the identifier are properly escaped.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QuotePrefix">
      <MemberSignature Language="C#" Value="public virtual string QuotePrefix { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string QuotePrefix" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbCommandBuilder.QuotePrefix" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property QuotePrefix As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ QuotePrefix { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.QuotePrefix : string with get, set" Usage="System.Data.Common.DbCommandBuilder.QuotePrefix" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the beginning character or characters to use when specifying database objects (for example, tables or columns) whose names contain characters such as spaces or reserved tokens.</summary>
        <value>若要使用的開頭字元。 預設為空字串。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 某些資料來源可能可以包含字元，例如空格、 逗號和分號的物件。 若要因應這項功能，使用<xref:System.Data.Common.DbCommandBuilder.QuotePrefix%2A>和<xref:System.Data.Common.DbCommandBuilder.QuoteSuffix%2A>屬性，以指定分隔符號，例如左括號和右方括號，將封裝的物件名稱。  
  
> [!NOTE]
>  雖然您無法變更<xref:System.Data.Common.DbCommandBuilder.QuotePrefix%2A>或是<xref:System.Data.Common.DbCommandBuilder.QuoteSuffix%2A>屬性之後插入、 更新或刪除已經產生命令，您可以變更其設定之後呼叫`Update`方法<xref:System.Data.Common.DbDataAdapter>。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">This property cannot be changed after an insert, update, or delete command has been generated.</exception>
      </Docs>
    </Member>
    <Member MemberName="QuoteSuffix">
      <MemberSignature Language="C#" Value="public virtual string QuoteSuffix { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string QuoteSuffix" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbCommandBuilder.QuoteSuffix" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property QuoteSuffix As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ QuoteSuffix { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.QuoteSuffix : string with get, set" Usage="System.Data.Common.DbCommandBuilder.QuoteSuffix" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the ending character or characters to use when specifying database objects (for example, tables or columns) whose names contain characters such as spaces or reserved tokens.</summary>
        <value>結束的字元或使用的字元。 預設為空字串。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 某些資料來源可能可以包含字元，例如空格、 逗號和分號的物件。 若要因應這項功能，使用<xref:System.Data.Common.DbCommandBuilder.QuotePrefix%2A>和<xref:System.Data.Common.DbCommandBuilder.QuoteSuffix%2A>屬性，以指定分隔符號，例如左括號和右方括號，將封裝的物件名稱。  
  
> [!NOTE]
>  雖然您無法變更<xref:System.Data.Common.DbCommandBuilder.QuotePrefix%2A>或是<xref:System.Data.Common.DbCommandBuilder.QuoteSuffix%2A>屬性之後插入、 更新或刪除已經產生命令，您可以變更其設定之後呼叫`Update`方法<xref:System.Data.Common.DbDataAdapter>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RefreshSchema">
      <MemberSignature Language="C#" Value="public virtual void RefreshSchema ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RefreshSchema() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbCommandBuilder.RefreshSchema" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RefreshSchema ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RefreshSchema();" />
      <MemberSignature Language="F#" Value="abstract member RefreshSchema : unit -&gt; unit&#xA;override this.RefreshSchema : unit -&gt; unit" Usage="dbCommandBuilder.RefreshSchema " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Clears the commands associated with this <see cref="T:System.Data.Common.DbCommandBuilder" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 呼叫<xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>方法可以有效移除所有<xref:System.Data.Common.DbCommand>所參考物件<xref:System.Data.Common.DbDataAdapter.SelectCommand%2A>，  
  
 <xref:System.Data.Common.DbDataAdapter.UpdateCommand%2A>,  
  
 <xref:System.Data.Common.DbDataAdapter.DeleteCommand%2A>，及  
  
 <xref:System.Data.Common.DbDataAdapter.InsertCommand%2A> 屬性。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RowUpdatingHandler">
      <MemberSignature Language="C#" Value="protected void RowUpdatingHandler (System.Data.Common.RowUpdatingEventArgs rowUpdatingEvent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RowUpdatingHandler(class System.Data.Common.RowUpdatingEventArgs rowUpdatingEvent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbCommandBuilder.RowUpdatingHandler(System.Data.Common.RowUpdatingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub RowUpdatingHandler (rowUpdatingEvent As RowUpdatingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void RowUpdatingHandler(System::Data::Common::RowUpdatingEventArgs ^ rowUpdatingEvent);" />
      <MemberSignature Language="F#" Value="member this.RowUpdatingHandler : System.Data.Common.RowUpdatingEventArgs -&gt; unit" Usage="dbCommandBuilder.RowUpdatingHandler rowUpdatingEvent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowUpdatingEvent" Type="System.Data.Common.RowUpdatingEventArgs" />
      </Parameters>
      <Docs>
        <param name="rowUpdatingEvent">A <see cref="T:System.Data.Common.RowUpdatingEventArgs" /> instance containing information about the event.</param>
        <summary>Adds an event handler for the <see cref="E:System.Data.OleDb.OleDbDataAdapter.RowUpdating" /> event.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SchemaSeparator">
      <MemberSignature Language="C#" Value="public virtual string SchemaSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SchemaSeparator" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbCommandBuilder.SchemaSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SchemaSeparator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SchemaSeparator { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SchemaSeparator : string with get, set" Usage="System.Data.Common.DbCommandBuilder.SchemaSeparator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(".")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the character to be used for the separator between the schema identifier and any other identifiers.</summary>
        <value>要用做為結構描述分隔符號的字元。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 一般而言，資料庫伺服器，表示識別項的結構描述分隔從具有某些字元之識別項的結構描述名稱。 例如，SQL Server 會使用冒號，例如建立完整的識別項**人員： CustomerName**，其中 「 Person 」 是結構描述名稱，而"CustomerName"為識別項。 設定這個屬性可讓開發人員可以修改此行為。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetAllValues">
      <MemberSignature Language="C#" Value="public bool SetAllValues { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SetAllValues" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbCommandBuilder.SetAllValues" />
      <MemberSignature Language="VB.NET" Value="Public Property SetAllValues As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SetAllValues { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SetAllValues : bool with get, set" Usage="System.Data.Common.DbCommandBuilder.SetAllValues" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Specifies whether all column values in an update statement are included or only changed ones.</summary>
        <value>
          <see langword="true" /> 如果 UPDATE 陳述式所產生<see cref="T:System.Data.Common.DbCommandBuilder" />包含所有的資料行;<see langword="false" />如果它包含只是變更資料行。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 UPDATE 陳述式所產生<xref:System.Data.Common.DbCommandBuilder>可以包含更新的相關資訊的資料行，或它可以包含其值已變更的資料行的相關資訊。 設定<xref:System.Data.Common.DbCommandBuilder.SetAllValues%2A>屬性設`true`導致產生的 UPDATE 陳述式，以包含所有資料行，不論是否有變更過其值。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetRowUpdatingHandler">
      <MemberSignature Language="C#" Value="protected abstract void SetRowUpdatingHandler (System.Data.Common.DbDataAdapter adapter);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void SetRowUpdatingHandler(class System.Data.Common.DbDataAdapter adapter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbCommandBuilder.SetRowUpdatingHandler(System.Data.Common.DbDataAdapter)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub SetRowUpdatingHandler (adapter As DbDataAdapter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void SetRowUpdatingHandler(System::Data::Common::DbDataAdapter ^ adapter);" />
      <MemberSignature Language="F#" Value="abstract member SetRowUpdatingHandler : System.Data.Common.DbDataAdapter -&gt; unit" Usage="dbCommandBuilder.SetRowUpdatingHandler adapter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="adapter" Type="System.Data.Common.DbDataAdapter" />
      </Parameters>
      <Docs>
        <param name="adapter">The <see cref="T:System.Data.Common.DbDataAdapter" /> to be used for the update.</param>
        <summary>Registers the <see cref="T:System.Data.Common.DbCommandBuilder" /> to handle the <see cref="E:System.Data.OleDb.OleDbDataAdapter.RowUpdating" /> event for a <see cref="T:System.Data.Common.DbDataAdapter" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法是用於所建置的自訂命令產生器的提供者撰寫人員。 當新<xref:System.Data.Common.DbDataAdapter>新增至<xref:System.Data.Common.DbCommandBuilder>，它會註冊為 DbDataAdapter **RowUpdating**事件。 如果這個方法會再次呼叫具有相同<xref:System.Data.Common.DbDataAdapter>，則<xref:System.Data.Common.DbCommandBuilder>會取消登錄該 DbDataAdapter **RowUpdating**事件。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnquoteIdentifier">
      <MemberSignature Language="C#" Value="public virtual string UnquoteIdentifier (string quotedIdentifier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string UnquoteIdentifier(string quotedIdentifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbCommandBuilder.UnquoteIdentifier(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UnquoteIdentifier (quotedIdentifier As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ UnquoteIdentifier(System::String ^ quotedIdentifier);" />
      <MemberSignature Language="F#" Value="abstract member UnquoteIdentifier : string -&gt; string&#xA;override this.UnquoteIdentifier : string -&gt; string" Usage="dbCommandBuilder.UnquoteIdentifier quotedIdentifier" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="quotedIdentifier" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="quotedIdentifier">The identifier that will have its embedded quotes removed.</param>
        <summary>Given a quoted identifier, returns the correct unquoted form of that identifier, including properly un-escaping any embedded quotes in the identifier.</summary>
        <returns>The unquoted identifier, with embedded quotes properly un-escaped.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>