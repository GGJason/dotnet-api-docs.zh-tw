<Type Name="DbDataAdapter" FullName="System.Data.Common.DbDataAdapter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3e60f15ac57ac63e48cd3f7a5c0cbaec54c2540c" /><Meta Name="ms.sourcegitcommit" Value="22744e2f9d07a51900a968efffd9e390117d64a1" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="02/03/2019" /><Meta Name="ms.locfileid" Value="55672938" /></Metadata><TypeSignature Language="C#" Value="public abstract class DbDataAdapter : System.Data.Common.DataAdapter, ICloneable, System.Data.IDbDataAdapter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit DbDataAdapter extends System.Data.Common.DataAdapter implements class System.Data.IDataAdapter, class System.Data.IDbDataAdapter, class System.ICloneable" />
  <TypeSignature Language="DocId" Value="T:System.Data.Common.DbDataAdapter" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class DbDataAdapter&#xA;Inherits DataAdapter&#xA;Implements ICloneable, IDbDataAdapter" />
  <TypeSignature Language="C++ CLI" Value="public ref class DbDataAdapter abstract : System::Data::Common::DataAdapter, ICloneable, System::Data::IDbDataAdapter" />
  <TypeSignature Language="F#" Value="type DbDataAdapter = class&#xA;    inherit DataAdapter&#xA;    interface IDbDataAdapter&#xA;    interface ICloneable&#xA;    interface IDataAdapter" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DataAdapter</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Data.IDataAdapter</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Data.IDbDataAdapter</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="37a91-101">可協助實作 <see cref="T:System.Data.IDbDataAdapter" /> 介面。</span><span class="sxs-lookup"><span data-stu-id="37a91-101">Aids implementation of the <see cref="T:System.Data.IDbDataAdapter" /> interface.</span></span> <span data-ttu-id="37a91-102"><see cref="T:System.Data.Common.DbDataAdapter" /> 繼承者實作一組函式以提供強型別，但繼承大多數完整實作 **DataAdapter** 所需的功能。</span><span class="sxs-lookup"><span data-stu-id="37a91-102">Inheritors of <see cref="T:System.Data.Common.DbDataAdapter" /> implement a set of functions to provide strong typing, but inherit most of the functionality needed to fully implement a **DataAdapter**.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37a91-103"><xref:System.Data.Common.DbDataAdapter>類別繼承自<xref:System.Data.Common.DataAdapter>類別，並且實作<xref:System.Data.IDbDataAdapter>介面。</span><span class="sxs-lookup"><span data-stu-id="37a91-103">The <xref:System.Data.Common.DbDataAdapter> class inherits from the <xref:System.Data.Common.DataAdapter> class and implements the <xref:System.Data.IDbDataAdapter> interface.</span></span> <span data-ttu-id="37a91-104">它可協助實作的類別**DataAdapter**設計使用於關聯式資料庫。</span><span class="sxs-lookup"><span data-stu-id="37a91-104">It helps a class implement a **DataAdapter** designed for use with a relational database.</span></span>  
  
 <span data-ttu-id="37a91-105">應用程式不會建立的執行個體<xref:System.Data.Common.DbDataAdapter>類別直接，但是會建立繼承自該類別的執行個體。</span><span class="sxs-lookup"><span data-stu-id="37a91-105">An application does not create an instance of the <xref:System.Data.Common.DbDataAdapter> class directly, but creates an instance of a class that inherits from it.</span></span>  
  
 <span data-ttu-id="37a91-106">繼承的類別<xref:System.Data.Common.DbDataAdapter>必須實作繼承的成員，並通常會定義要新增提供者特有的功能的其他成員。</span><span class="sxs-lookup"><span data-stu-id="37a91-106">Classes that inherit <xref:System.Data.Common.DbDataAdapter> must implement the inherited members, and typically define additional members to add provider-specific functionality.</span></span> <span data-ttu-id="37a91-107">例如，<xref:System.Data.Common.DbDataAdapter>類別會定義<xref:System.Data.IDbDataAdapter.SelectCommand%2A>屬性，而<xref:System.Data.Common.DbDataAdapter>類別定義了八個多載<xref:System.Data.IDataAdapter.Fill%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="37a91-107">For example, the <xref:System.Data.Common.DbDataAdapter> class defines the <xref:System.Data.IDbDataAdapter.SelectCommand%2A> property, and the <xref:System.Data.Common.DbDataAdapter> class defines eight overloads of the <xref:System.Data.IDataAdapter.Fill%2A> method.</span></span> <span data-ttu-id="37a91-108">依次<xref:System.Data.OleDb.OleDbDataAdapter>類別會繼承<xref:System.Data.Common.DbDataAdapter.Fill%2A>方法，而且也會定義兩個額外的多載<xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A>可接受的 ADO 資料錄集物件，做為參數。</span><span class="sxs-lookup"><span data-stu-id="37a91-108">In turn, the <xref:System.Data.OleDb.OleDbDataAdapter> class inherits the <xref:System.Data.Common.DbDataAdapter.Fill%2A> method, and also defines two additional overloads of <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> that take an ADO Recordset object as a parameter.</span></span>  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para><span data-ttu-id="37a91-109">當您繼承自<see cref="T:System.Data.Common.DbDataAdapter" />類別，建議您實作下列建構函式：</span><span class="sxs-lookup"><span data-stu-id="37a91-109">When you inherit from the <see cref="T:System.Data.Common.DbDataAdapter" /> class, we recommend that you implement the following constructors:</span></span> 
 <list type="table"><listheader><term> <span data-ttu-id="37a91-110">項目</span><span class="sxs-lookup"><span data-stu-id="37a91-110">Item</span></span> 
 </term><description> <span data-ttu-id="37a91-111">描述</span><span class="sxs-lookup"><span data-stu-id="37a91-111">Description</span></span> 
 </description></listheader><item><term> <span data-ttu-id="37a91-112">*Prv*DataAdapter()</span><span class="sxs-lookup"><span data-stu-id="37a91-112">*Prv*DataAdapter()</span></span> 
 </term><description> <span data-ttu-id="37a91-113">初始化的新執行個體*Prv*DataAdapter 類別。</span><span class="sxs-lookup"><span data-stu-id="37a91-113">Initializes a new instance of the *Prv*DataAdapter class.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="37a91-114">*Prv*DataAdapter(*Prv*Command *selectCommand*)</span><span class="sxs-lookup"><span data-stu-id="37a91-114">*Prv*DataAdapter(*Prv*Command *selectCommand*)</span></span> 
 </term><description> <span data-ttu-id="37a91-115">初始化的新執行個體*Prv*DataAdapter 類別使用指定的 SQL SELECT 陳述式。</span><span class="sxs-lookup"><span data-stu-id="37a91-115">Initializes a new instance of the *Prv*DataAdapter class with the specified SQL SELECT statement.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="37a91-116">*Prv*DataAdapter(string *selectCommandText*, string *selectConnectionString*)</span><span class="sxs-lookup"><span data-stu-id="37a91-116">*Prv*DataAdapter(string *selectCommandText*, string *selectConnectionString*)</span></span> 
 </term><description> <span data-ttu-id="37a91-117">初始化的新執行個體*Prv*DataAdapter 類別使用的 SQL SELECT 陳述式和連接字串。</span><span class="sxs-lookup"><span data-stu-id="37a91-117">Initializes a new instance of the *Prv*DataAdapter class with an SQL SELECT statement and a connection string.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="37a91-118">*Prv*DataAdapter(string *selectCommandText*, *Prv*Connection *selectConnection*)</span><span class="sxs-lookup"><span data-stu-id="37a91-118">*Prv*DataAdapter(string *selectCommandText*, *Prv*Connection *selectConnection*)</span></span> 
 </term><description> <span data-ttu-id="37a91-119">初始化的新執行個體*Prv*DataAdapter 類別，使用 SQL SELECT 陳述式並*Prv*連接物件。</span><span class="sxs-lookup"><span data-stu-id="37a91-119">Initializes a new instance of the *Prv*DataAdapter class with an SQL SELECT statement and a *Prv*Connection object.</span></span>  
  
 </description></item></list>  

 <span data-ttu-id="37a91-120">若要提升在.NET Framework 資料提供者之間的一致性，表單中的繼承類別應該命名*Prv*DataAdapter，其中*Prv*是統一的前置詞提供給特定的.NET 中的所有類別Framework 資料提供者命名空間。</span><span class="sxs-lookup"><span data-stu-id="37a91-120">To promote consistency among .NET Framework data providers, you should name the inheriting class in the form *Prv*DataAdapter, where *Prv* is the uniform prefix given to all classes in a specific .NET Framework data provider namespace.</span></span> <span data-ttu-id="37a91-121">例如，"Sql"為的前置詞<see cref="T:System.Data.SqlClient.SqlDataAdapter" />類別內**System.Data.SqlClient**命名空間。</span><span class="sxs-lookup"><span data-stu-id="37a91-121">For example, "Sql" is the prefix of the <see cref="T:System.Data.SqlClient.SqlDataAdapter" /> class in the **System.Data.SqlClient** namespace.</span></span></para></block>
    <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="37a91-122">DbProviderFactory (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="37a91-122">DbProviderFactories (ADO.NET)</span></span></related>
    <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="37a91-123">ADO.NET 概觀</span><span class="sxs-lookup"><span data-stu-id="37a91-123">ADO.NET Overview</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="37a91-124">初始化 <see langword="DataAdapter" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="37a91-124">Initializes a new instance of a <see langword="DataAdapter" /> class.</span></span></summary>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="37a91-125">ADO.NET 概觀</span><span class="sxs-lookup"><span data-stu-id="37a91-125">ADO.NET Overview</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DbDataAdapter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DbDataAdapter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="37a91-126">初始化 **DataAdapter** 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="37a91-126">Initializes a new instance of a **DataAdapter** class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37a91-127">當您建立的執行個體<xref:System.Data.Common.DbDataAdapter>，下列的讀取/寫入屬性設定為下列的初始值。</span><span class="sxs-lookup"><span data-stu-id="37a91-127">When you create an instance of <xref:System.Data.Common.DbDataAdapter>, the following read/write properties are set to the following initial values.</span></span>  
  
|<span data-ttu-id="37a91-128">屬性</span><span class="sxs-lookup"><span data-stu-id="37a91-128">Properties</span></span>|<span data-ttu-id="37a91-129">Initial value</span><span class="sxs-lookup"><span data-stu-id="37a91-129">Initial value</span></span>|  
|----------------|-------------------|  
|<xref:System.Data.IDbDataAdapter.SelectCommand%2A>|<span data-ttu-id="37a91-130">新的 <xref:System.Data.IDbCommand>。</span><span class="sxs-lookup"><span data-stu-id="37a91-130">A new <xref:System.Data.IDbCommand>.</span></span>|  
|<xref:System.Data.IDbDataAdapter.InsertCommand%2A>|<span data-ttu-id="37a91-131">新的 <xref:System.Data.IDbCommand>。</span><span class="sxs-lookup"><span data-stu-id="37a91-131">A new <xref:System.Data.IDbCommand>.</span></span>|  
|<xref:System.Data.IDbDataAdapter.DeleteCommand%2A>|<span data-ttu-id="37a91-132">新的 <xref:System.Data.IDbCommand>。</span><span class="sxs-lookup"><span data-stu-id="37a91-132">A new <xref:System.Data.IDbCommand>.</span></span>|  
|<xref:System.Data.IDbDataAdapter.UpdateCommand%2A>|<span data-ttu-id="37a91-133">新的 <xref:System.Data.IDbCommand>。</span><span class="sxs-lookup"><span data-stu-id="37a91-133">A new <xref:System.Data.IDbCommand>.</span></span>|  
|<xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>|`MissingMappingAction.Passthrough`|  
|<xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>|`MissingSchemaAction.Add`|  
  
 <span data-ttu-id="37a91-134">您可以變更任何屬性個別呼叫透過這些屬性的值。</span><span class="sxs-lookup"><span data-stu-id="37a91-134">You can change the value of any of these properties through a separate call to the property.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="37a91-135">DbProviderFactory (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="37a91-135">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="37a91-136">ADO.NET 概觀</span><span class="sxs-lookup"><span data-stu-id="37a91-136">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DbDataAdapter (System.Data.Common.DbDataAdapter adapter);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Data.Common.DbDataAdapter adapter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.#ctor(System.Data.Common.DbDataAdapter)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (adapter As DbDataAdapter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DbDataAdapter(System::Data::Common::DbDataAdapter ^ adapter);" />
      <MemberSignature Language="F#" Value="new System.Data.Common.DbDataAdapter : System.Data.Common.DbDataAdapter -&gt; System.Data.Common.DbDataAdapter" Usage="new System.Data.Common.DbDataAdapter adapter" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="adapter" Type="System.Data.Common.DbDataAdapter" />
      </Parameters>
      <Docs>
        <param name="adapter"><span data-ttu-id="37a91-137"><see langword="DataAdapter" /> 物件，用來建立新的 <see langword="DataAdapter" />。</span><span class="sxs-lookup"><span data-stu-id="37a91-137">A <see langword="DataAdapter" /> object used to create the new <see langword="DataAdapter" />.</span></span></param>
        <summary><span data-ttu-id="37a91-138">從相同類型的現有物件，初始化 <see langword="DataAdapter" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="37a91-138">Initializes a new instance of a <see langword="DataAdapter" /> class from an existing object of the same type.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37a91-139">這個多載<xref:System.Data.Common.DbDataAdapter>建構函式設計用於由.NET Framework 資料提供者在複製的實作中實作類似的建構函式使用時。</span><span class="sxs-lookup"><span data-stu-id="37a91-139">This overload of the <xref:System.Data.Common.DbDataAdapter> constructor is designed for use by a .NET Framework data provider when implementing a similar constructor for use in a clone implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="37a91-140">DbProviderFactory (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="37a91-140">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="37a91-141">ADO.NET 概觀</span><span class="sxs-lookup"><span data-stu-id="37a91-141">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AddToBatch">
      <MemberSignature Language="C#" Value="protected virtual int AddToBatch (System.Data.IDbCommand command);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 AddToBatch(class System.Data.IDbCommand command) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.AddToBatch(System.Data.IDbCommand)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function AddToBatch (command As IDbCommand) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int AddToBatch(System::Data::IDbCommand ^ command);" />
      <MemberSignature Language="F#" Value="abstract member AddToBatch : System.Data.IDbCommand -&gt; int&#xA;override this.AddToBatch : System.Data.IDbCommand -&gt; int" Usage="dbDataAdapter.AddToBatch command" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="System.Data.IDbCommand" />
      </Parameters>
      <Docs>
        <param name="command"><span data-ttu-id="37a91-142">要加入至批次的 <see cref="T:System.Data.IDbCommand" />。</span><span class="sxs-lookup"><span data-stu-id="37a91-142">The <see cref="T:System.Data.IDbCommand" /> to add to the batch.</span></span></param>
        <summary><span data-ttu-id="37a91-143">加入 <see cref="T:System.Data.IDbCommand" /> 至目前批次。</span><span class="sxs-lookup"><span data-stu-id="37a91-143">Adds a <see cref="T:System.Data.IDbCommand" /> to the current batch.</span></span></summary>
        <returns><span data-ttu-id="37a91-144">加入 <see cref="T:System.Data.IDbCommand" /> 之前，批次中的命令數目。</span><span class="sxs-lookup"><span data-stu-id="37a91-144">The number of commands in the batch before adding the <see cref="T:System.Data.IDbCommand" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37a91-145">在  <xref:System.Data.Common.DbDataAdapter>，此方法會擲回<xref:System.NotSupportedException>。</span><span class="sxs-lookup"><span data-stu-id="37a91-145">In <xref:System.Data.Common.DbDataAdapter>, this method throws <xref:System.NotSupportedException>.</span></span> <span data-ttu-id="37a91-146">類別繼承自<xref:System.Data.Common.DbDataAdapter>覆寫這個方法，以提供的批次支援。</span><span class="sxs-lookup"><span data-stu-id="37a91-146">Classes that inherit from <xref:System.Data.Common.DbDataAdapter> override this method to provide support for batches.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="37a91-147">配置器不支援批次。</span><span class="sxs-lookup"><span data-stu-id="37a91-147">The adapter does not support batches.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="37a91-148">這個方法會保護，而且設計用於使用.NET Framework 資料提供者。</span><span class="sxs-lookup"><span data-stu-id="37a91-148">This method is protected and is designed for use by a .NET Framework data provider.</span></span>  
  
<span data-ttu-id="37a91-149">如果類別繼承自<see cref="T:System.Data.Common.DbDataAdapter" />支援批次，該類別會覆寫此方法以允許使用者將命令加入至批次。</span><span class="sxs-lookup"><span data-stu-id="37a91-149">If a class that inherits from <see cref="T:System.Data.Common.DbDataAdapter" /> supports batches, that class overrides this method to allow users to add a command to a batch.</span></span></para></block>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="37a91-150">DbProviderFactory (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="37a91-150">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="37a91-151">ADO.NET 概觀</span><span class="sxs-lookup"><span data-stu-id="37a91-151">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ClearBatch">
      <MemberSignature Language="C#" Value="protected virtual void ClearBatch ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ClearBatch() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.ClearBatch" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ClearBatch ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ClearBatch();" />
      <MemberSignature Language="F#" Value="abstract member ClearBatch : unit -&gt; unit&#xA;override this.ClearBatch : unit -&gt; unit" Usage="dbDataAdapter.ClearBatch " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="37a91-152">將所有的 <see cref="T:System.Data.IDbCommand" /> 物件從批次中移除。</span><span class="sxs-lookup"><span data-stu-id="37a91-152">Removes all <see cref="T:System.Data.IDbCommand" /> objects from the batch.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37a91-153">在  <xref:System.Data.Common.DbDataAdapter>，此方法會擲回<xref:System.NotSupportedException>。</span><span class="sxs-lookup"><span data-stu-id="37a91-153">In <xref:System.Data.Common.DbDataAdapter>, this method throws <xref:System.NotSupportedException>.</span></span> <span data-ttu-id="37a91-154">類別繼承自<xref:System.Data.Common.DbDataAdapter>覆寫這個方法，以提供的批次支援。</span><span class="sxs-lookup"><span data-stu-id="37a91-154">Classes that inherit from <xref:System.Data.Common.DbDataAdapter> override this method to provide support for batches.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="37a91-155">配置器不支援批次。</span><span class="sxs-lookup"><span data-stu-id="37a91-155">The adapter does not support batches.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="37a91-156">這個方法會保護，而且設計用於使用.NET Framework 資料提供者。</span><span class="sxs-lookup"><span data-stu-id="37a91-156">This method is protected and is designed for use by a .NET Framework data provider.</span></span>  
  
<span data-ttu-id="37a91-157">如果類別繼承自<see cref="T:System.Data.Common.DbDataAdapter" />支援批次，該類別會覆寫此方法以允許使用者從批次移除所有的命令。</span><span class="sxs-lookup"><span data-stu-id="37a91-157">If a class that inherits from <see cref="T:System.Data.Common.DbDataAdapter" /> supports batches, that class overrides this method to allow users to remove all commands from a batch.</span></span></para></block>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="37a91-158">DbProviderFactory (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="37a91-158">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="37a91-159">ADO.NET 概觀</span><span class="sxs-lookup"><span data-stu-id="37a91-159">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CreateRowUpdatedEvent">
      <MemberSignature Language="C#" Value="protected virtual System.Data.Common.RowUpdatedEventArgs CreateRowUpdatedEvent (System.Data.DataRow dataRow, System.Data.IDbCommand command, System.Data.StatementType statementType, System.Data.Common.DataTableMapping tableMapping);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.Common.RowUpdatedEventArgs CreateRowUpdatedEvent(class System.Data.DataRow dataRow, class System.Data.IDbCommand command, valuetype System.Data.StatementType statementType, class System.Data.Common.DataTableMapping tableMapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Data::Common::RowUpdatedEventArgs ^ CreateRowUpdatedEvent(System::Data::DataRow ^ dataRow, System::Data::IDbCommand ^ command, System::Data::StatementType statementType, System::Data::Common::DataTableMapping ^ tableMapping);" />
      <MemberSignature Language="F#" Value="abstract member CreateRowUpdatedEvent : System.Data.DataRow * System.Data.IDbCommand * System.Data.StatementType * System.Data.Common.DataTableMapping -&gt; System.Data.Common.RowUpdatedEventArgs&#xA;override this.CreateRowUpdatedEvent : System.Data.DataRow * System.Data.IDbCommand * System.Data.StatementType * System.Data.Common.DataTableMapping -&gt; System.Data.Common.RowUpdatedEventArgs" Usage="dbDataAdapter.CreateRowUpdatedEvent (dataRow, command, statementType, tableMapping)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.RowUpdatedEventArgs</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataRow" Type="System.Data.DataRow" />
        <Parameter Name="command" Type="System.Data.IDbCommand" />
        <Parameter Name="statementType" Type="System.Data.StatementType" />
        <Parameter Name="tableMapping" Type="System.Data.Common.DataTableMapping" />
      </Parameters>
      <Docs>
        <param name="dataRow"><span data-ttu-id="37a91-160">用來更新資料來源的 <see cref="T:System.Data.DataRow" />。</span><span class="sxs-lookup"><span data-stu-id="37a91-160">The <see cref="T:System.Data.DataRow" /> used to update the data source.</span></span></param>
        <param name="command"><span data-ttu-id="37a91-161">在 <see cref="T:System.Data.IDbCommand" /> 期間執行的 <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />。</span><span class="sxs-lookup"><span data-stu-id="37a91-161">The <see cref="T:System.Data.IDbCommand" /> executed during the <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />.</span></span></param>
        <param name="statementType"><span data-ttu-id="37a91-162">命令為 UPDATE、INSERT、DELETE 或 SELECT 陳述式。</span><span class="sxs-lookup"><span data-stu-id="37a91-162">Whether the command is an UPDATE, INSERT, DELETE, or SELECT statement.</span></span></param>
        <param name="tableMapping"><span data-ttu-id="37a91-163"><see cref="T:System.Data.Common.DataTableMapping" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="37a91-163">A <see cref="T:System.Data.Common.DataTableMapping" /> object.</span></span></param>
        <summary><span data-ttu-id="37a91-164">初始化 <see cref="T:System.Data.Common.RowUpdatedEventArgs" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="37a91-164">Initializes a new instance of the <see cref="T:System.Data.Common.RowUpdatedEventArgs" /> class.</span></span></summary>
        <returns><span data-ttu-id="37a91-165"><see cref="T:System.Data.Common.RowUpdatedEventArgs" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="37a91-165">A new instance of the <see cref="T:System.Data.Common.RowUpdatedEventArgs" /> class.</span></span></returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="37a91-166">當覆寫<see cref="M:System.Data.Common.DbDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" />衍生類別時，請務必呼叫基底類別的<see cref="M:System.Data.Common.DbDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" />方法。</span><span class="sxs-lookup"><span data-stu-id="37a91-166">When overriding <see cref="M:System.Data.Common.DbDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" /> in a derived class, be sure to call the base class's <see cref="M:System.Data.Common.DbDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" /> method.</span></span></para></block>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="37a91-167">ADO.NET 概觀</span><span class="sxs-lookup"><span data-stu-id="37a91-167">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CreateRowUpdatingEvent">
      <MemberSignature Language="C#" Value="protected virtual System.Data.Common.RowUpdatingEventArgs CreateRowUpdatingEvent (System.Data.DataRow dataRow, System.Data.IDbCommand command, System.Data.StatementType statementType, System.Data.Common.DataTableMapping tableMapping);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.Common.RowUpdatingEventArgs CreateRowUpdatingEvent(class System.Data.DataRow dataRow, class System.Data.IDbCommand command, valuetype System.Data.StatementType statementType, class System.Data.Common.DataTableMapping tableMapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Data::Common::RowUpdatingEventArgs ^ CreateRowUpdatingEvent(System::Data::DataRow ^ dataRow, System::Data::IDbCommand ^ command, System::Data::StatementType statementType, System::Data::Common::DataTableMapping ^ tableMapping);" />
      <MemberSignature Language="F#" Value="abstract member CreateRowUpdatingEvent : System.Data.DataRow * System.Data.IDbCommand * System.Data.StatementType * System.Data.Common.DataTableMapping -&gt; System.Data.Common.RowUpdatingEventArgs&#xA;override this.CreateRowUpdatingEvent : System.Data.DataRow * System.Data.IDbCommand * System.Data.StatementType * System.Data.Common.DataTableMapping -&gt; System.Data.Common.RowUpdatingEventArgs" Usage="dbDataAdapter.CreateRowUpdatingEvent (dataRow, command, statementType, tableMapping)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.RowUpdatingEventArgs</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataRow" Type="System.Data.DataRow" />
        <Parameter Name="command" Type="System.Data.IDbCommand" />
        <Parameter Name="statementType" Type="System.Data.StatementType" />
        <Parameter Name="tableMapping" Type="System.Data.Common.DataTableMapping" />
      </Parameters>
      <Docs>
        <param name="dataRow"><span data-ttu-id="37a91-168">更新資料來源的 <see cref="T:System.Data.DataRow" />。</span><span class="sxs-lookup"><span data-stu-id="37a91-168">The <see cref="T:System.Data.DataRow" /> that updates the data source.</span></span></param>
        <param name="command"><span data-ttu-id="37a91-169">要在 <see cref="T:System.Data.IDbCommand" /> 期間執行的 <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />。</span><span class="sxs-lookup"><span data-stu-id="37a91-169">The <see cref="T:System.Data.IDbCommand" /> to execute during the <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />.</span></span></param>
        <param name="statementType"><span data-ttu-id="37a91-170">命令為 UPDATE、INSERT、DELETE 或 SELECT 陳述式。</span><span class="sxs-lookup"><span data-stu-id="37a91-170">Whether the command is an UPDATE, INSERT, DELETE, or SELECT statement.</span></span></param>
        <param name="tableMapping"><span data-ttu-id="37a91-171"><see cref="T:System.Data.Common.DataTableMapping" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="37a91-171">A <see cref="T:System.Data.Common.DataTableMapping" /> object.</span></span></param>
        <summary><span data-ttu-id="37a91-172">初始化 <see cref="T:System.Data.Common.RowUpdatingEventArgs" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="37a91-172">Initializes a new instance of the <see cref="T:System.Data.Common.RowUpdatingEventArgs" /> class.</span></span></summary>
        <returns><span data-ttu-id="37a91-173"><see cref="T:System.Data.Common.RowUpdatingEventArgs" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="37a91-173">A new instance of the <see cref="T:System.Data.Common.RowUpdatingEventArgs" /> class.</span></span></returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="37a91-174">當覆寫<see cref="M:System.Data.Common.DbDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" />衍生類別時，請務必呼叫基底類別的<see cref="M:System.Data.Common.DbDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" />方法。</span><span class="sxs-lookup"><span data-stu-id="37a91-174">When overriding <see cref="M:System.Data.Common.DbDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" /> in a derived class, be sure to call the base class's <see cref="M:System.Data.Common.DbDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" /> method.</span></span></para></block>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="37a91-175">DbProviderFactory (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="37a91-175">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="37a91-176">ADO.NET 概觀</span><span class="sxs-lookup"><span data-stu-id="37a91-176">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DefaultSourceTableName">
      <MemberSignature Language="C#" Value="public const string DefaultSourceTableName;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string DefaultSourceTableName" />
      <MemberSignature Language="DocId" Value="F:System.Data.Common.DbDataAdapter.DefaultSourceTableName" />
      <MemberSignature Language="VB.NET" Value="Public Const DefaultSourceTableName As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ DefaultSourceTableName;" />
      <MemberSignature Language="F#" Value="val mutable DefaultSourceTableName : string" Usage="System.Data.Common.DbDataAdapter.DefaultSourceTableName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="37a91-177">資料表對應之 <see cref="T:System.Data.Common.DataAdapter" /> 物件所使用的預設名稱。</span><span class="sxs-lookup"><span data-stu-id="37a91-177">The default name used by the <see cref="T:System.Data.Common.DataAdapter" /> object for table mappings.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37a91-178">「 資料表 」 時所使用的預設名稱<xref:System.Data.Common.DataAdapter>資料表對應的物件。</span><span class="sxs-lookup"><span data-stu-id="37a91-178">"Table" is the default name used by the <xref:System.Data.Common.DataAdapter> object for table mappings.</span></span>  
  
 <span data-ttu-id="37a91-179"><xref:System.Data.Common.DbDataAdapter.DefaultSourceTableName> 時，應用程式新增至適用於資料表對應<xref:System.Data.Common.DbDataAdapter.Fill%2A>，但未指定<xref:System.Data.DataTable>名稱。</span><span class="sxs-lookup"><span data-stu-id="37a91-179"><xref:System.Data.Common.DbDataAdapter.DefaultSourceTableName> is when an application adds a table mapping to be used with <xref:System.Data.Common.DbDataAdapter.Fill%2A>, but does not specify a <xref:System.Data.DataTable> name.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="37a91-180">DbProviderFactory (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="37a91-180">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="37a91-181">ADO.NET 概觀</span><span class="sxs-lookup"><span data-stu-id="37a91-181">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DeleteCommand">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbCommand DeleteCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbCommand DeleteCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataAdapter.DeleteCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property DeleteCommand As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Common::DbCommand ^ DeleteCommand { System::Data::Common::DbCommand ^ get(); void set(System::Data::Common::DbCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DeleteCommand : System.Data.Common.DbCommand with get, set" Usage="System.Data.Common.DbDataAdapter.DeleteCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;netcore-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="37a91-182">取得或設定命令，以從資料集刪除資料錄。</span><span class="sxs-lookup"><span data-stu-id="37a91-182">Gets or sets a command for deleting records from the data set.</span></span></summary>
        <value><span data-ttu-id="37a91-183"><see cref="T:System.Data.IDbCommand" />，在 <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> 期間用來為資料集中所刪除的資料列刪除在資料來源中的資料錄。</span><span class="sxs-lookup"><span data-stu-id="37a91-183">An <see cref="T:System.Data.IDbCommand" /> used during <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> to delete records in the data source for deleted rows in the data set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37a91-184">期間<xref:System.Data.Common.DbDataAdapter.Update%2A>，如果沒有設定這個屬性，而主索引鍵資訊是存在於<xref:System.Data.DataSet>，則<xref:System.Data.IDbDataAdapter.DeleteCommand%2A>自動產生。</span><span class="sxs-lookup"><span data-stu-id="37a91-184">During <xref:System.Data.Common.DbDataAdapter.Update%2A>, if this property is not set and primary key information is present in the <xref:System.Data.DataSet>, the <xref:System.Data.IDbDataAdapter.DeleteCommand%2A> is automatically generated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="37a91-185">下列範例會建立衍生的類別<xref:System.Data.OleDb.OleDbDataAdapter>並設定其部分屬性。</span><span class="sxs-lookup"><span data-stu-id="37a91-185">The following example creates the derived class <xref:System.Data.OleDb.OleDbDataAdapter> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.DeleteCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.DeleteCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.DeleteCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.DeleteCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md"><span data-ttu-id="37a91-186">操作資料 (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="37a91-186">Manipulating Data (ADO.NET)</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="37a91-187">DbProviderFactory (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="37a91-187">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="37a91-188">ADO.NET 概觀</span><span class="sxs-lookup"><span data-stu-id="37a91-188">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="dbDataAdapter.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="37a91-189"><see langword="true" /> 表示會同時釋放 Managed 和 Unmanaged 資源，<see langword="false" /> 則表示只釋放 Unmanaged 資源。</span><span class="sxs-lookup"><span data-stu-id="37a91-189"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="37a91-190">釋放 <see cref="T:System.Data.Common.DbDataAdapter" /> 所使用的 Unmanaged 資源，並選擇性地釋放 Managed 資源。</span><span class="sxs-lookup"><span data-stu-id="37a91-190">Releases the unmanaged resources used by the <see cref="T:System.Data.Common.DbDataAdapter" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="37a91-191">DbProviderFactory (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="37a91-191">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="37a91-192">ADO.NET 概觀</span><span class="sxs-lookup"><span data-stu-id="37a91-192">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ExecuteBatch">
      <MemberSignature Language="C#" Value="protected virtual int ExecuteBatch ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 ExecuteBatch() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.ExecuteBatch" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ExecuteBatch () As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int ExecuteBatch();" />
      <MemberSignature Language="F#" Value="abstract member ExecuteBatch : unit -&gt; int&#xA;override this.ExecuteBatch : unit -&gt; int" Usage="dbDataAdapter.ExecuteBatch " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="37a91-193">執行目前批次。</span><span class="sxs-lookup"><span data-stu-id="37a91-193">Executes the current batch.</span></span></summary>
        <returns><span data-ttu-id="37a91-194">批次中上一個命令的傳回值。</span><span class="sxs-lookup"><span data-stu-id="37a91-194">The return value from the last command in the batch.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37a91-195">在  <xref:System.Data.Common.DbDataAdapter>，此方法會擲回<xref:System.NotSupportedException>。</span><span class="sxs-lookup"><span data-stu-id="37a91-195">In <xref:System.Data.Common.DbDataAdapter>, this method throws <xref:System.NotSupportedException>.</span></span> <span data-ttu-id="37a91-196">類別繼承自<xref:System.Data.Common.DbDataAdapter>覆寫這個方法，以提供的批次支援。</span><span class="sxs-lookup"><span data-stu-id="37a91-196">Classes that inherit from <xref:System.Data.Common.DbDataAdapter> override this method to provide support for batches.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="37a91-197">這個方法會保護，而且設計用於使用.NET Framework 資料提供者。</span><span class="sxs-lookup"><span data-stu-id="37a91-197">This method is protected and is designed for use by a .NET Framework data provider.</span></span>  
  
<span data-ttu-id="37a91-198">如果類別繼承自<see cref="T:System.Data.Common.DbDataAdapter" />支援批次，該類別會覆寫這個方法，以允許使用者執行的批次。</span><span class="sxs-lookup"><span data-stu-id="37a91-198">If a class that inherits from <see cref="T:System.Data.Common.DbDataAdapter" /> supports batches, that class overrides this method to allow users to execute a batch.</span></span> <span data-ttu-id="37a91-199">此方法的實作中配接器的命令結合為批次，然後執行批次，並傳回批次的傳回值。</span><span class="sxs-lookup"><span data-stu-id="37a91-199">An implementation of this method combines the commands in the adapter into a batch, then executes the batch and returns the return value of the batch.</span></span></para></block>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md"><span data-ttu-id="37a91-200">操作資料 (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="37a91-200">Manipulating Data (ADO.NET)</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="37a91-201">DbProviderFactory (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="37a91-201">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="37a91-202">ADO.NET 概觀</span><span class="sxs-lookup"><span data-stu-id="37a91-202">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Fill">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="37a91-203">填入 <see cref="T:System.Data.DataSet" /> 或 <see cref="T:System.Data.DataTable" />。</span><span class="sxs-lookup"><span data-stu-id="37a91-203">Fills a <see cref="T:System.Data.DataSet" /> or a <see cref="T:System.Data.DataTable" />.</span></span></summary>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="37a91-204">ADO.NET 概觀</span><span class="sxs-lookup"><span data-stu-id="37a91-204">ADO.NET Overview</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="public override int Fill (System.Data.DataSet dataSet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Fill(class System.Data.DataSet dataSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int Fill(System::Data::DataSet ^ dataSet);" />
      <MemberSignature Language="F#" Value="override this.Fill : System.Data.DataSet -&gt; int" Usage="dbDataAdapter.Fill dataSet" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataAdapter.Fill(System.Data.DataSet)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
      </Parameters>
      <Docs>
        <param name="dataSet"><span data-ttu-id="37a91-205">要填入資料錄和結構描述 (如果必要的話) 的 <see cref="T:System.Data.DataSet" />。</span><span class="sxs-lookup"><span data-stu-id="37a91-205">A <see cref="T:System.Data.DataSet" /> to fill with records and, if necessary, schema.</span></span></param>
        <summary><span data-ttu-id="37a91-206">在 <see cref="T:System.Data.DataSet" /> 中加入或重新整理資料列。</span><span class="sxs-lookup"><span data-stu-id="37a91-206">Adds or refreshes rows in the <see cref="T:System.Data.DataSet" />.</span></span></summary>
        <returns><span data-ttu-id="37a91-207">成功加入至 <see cref="T:System.Data.DataSet" /> 或在其中重新整理的資料列數目。</span><span class="sxs-lookup"><span data-stu-id="37a91-207">The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataSet" />.</span></span> <span data-ttu-id="37a91-208">這不包含被不傳回資料列之陳述式所影響的資料列。</span><span class="sxs-lookup"><span data-stu-id="37a91-208">This does not include rows affected by statements that do not return rows.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37a91-209"><xref:System.Data.Common.DbDataAdapter.Fill%2A>方法會從使用 SELECT 陳述式的資料來源擷取資料。</span><span class="sxs-lookup"><span data-stu-id="37a91-209">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method retrieves the data from the data source using a SELECT statement.</span></span> <span data-ttu-id="37a91-210"><xref:System.Data.IDbConnection> Select 命令相關聯的物件必須有效，但它不需要開啟。</span><span class="sxs-lookup"><span data-stu-id="37a91-210">The <xref:System.Data.IDbConnection> object associated with the select command must be valid, but it does not need to be open.</span></span> <span data-ttu-id="37a91-211">如果<xref:System.Data.IDbConnection>關閉之前<xref:System.Data.Common.DbDataAdapter.Fill%2A>是呼叫，它是開啟擷取資料並關閉。</span><span class="sxs-lookup"><span data-stu-id="37a91-211">If the <xref:System.Data.IDbConnection> is closed before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it is opened to retrieve data and then closed.</span></span> <span data-ttu-id="37a91-212">如果連接已開啟之前<xref:System.Data.Common.DbDataAdapter.Fill%2A>是呼叫，它會保持開啟狀態。</span><span class="sxs-lookup"><span data-stu-id="37a91-212">If the connection is open before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="37a91-213">如果發生錯誤或例外狀況發生時填入資料的資料表，在發生錯誤之前所加入的資料列將保留在資料表中。</span><span class="sxs-lookup"><span data-stu-id="37a91-213">If an error or an exception is encountered while populating the data tables, rows added prior to the occurrence of the error remain in the data tables.</span></span> <span data-ttu-id="37a91-214">作業的其餘部分就會中止。</span><span class="sxs-lookup"><span data-stu-id="37a91-214">The remainder of the operation is aborted.</span></span>  
  
 <span data-ttu-id="37a91-215">如果命令未傳回任何資料列，將資料表加入至<xref:System.Data.DataSet>，並會引發任何例外狀況。</span><span class="sxs-lookup"><span data-stu-id="37a91-215">If a command does not return any rows, no tables are added to the <xref:System.Data.DataSet>, and no exception is raised.</span></span>  
  
 <span data-ttu-id="37a91-216">如果<xref:System.Data.Common.DbDataAdapter>物件在填入遇到重複的資料行<xref:System.Data.DataTable>，它會產生後續使用模式的資料行名稱 」*columnname*1"，"*columnname*2 」、 「*columnname*3"，依此類推。</span><span class="sxs-lookup"><span data-stu-id="37a91-216">If the <xref:System.Data.Common.DbDataAdapter> object encounters duplicate columns while populating a <xref:System.Data.DataTable>, it generates names for the subsequent columns using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="37a91-217">如果內送資料包含未命名的資料行，它們會放在<xref:System.Data.DataSet>根據模式"Column1"、"Column2"，依此類推。</span><span class="sxs-lookup"><span data-stu-id="37a91-217">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span>  
  
 <span data-ttu-id="37a91-218">當指定的查詢傳回多個結果時，結果集傳回查詢的每個資料列位於個別的資料表。</span><span class="sxs-lookup"><span data-stu-id="37a91-218">When the query specified returns multiple results, the result set for each row returning query is placed in a separate table.</span></span> <span data-ttu-id="37a91-219">其他結果集的命名方式將整數值附加至指定的資料表名稱 （例如，"Table"、"Table1"、"Table2"，等等）。</span><span class="sxs-lookup"><span data-stu-id="37a91-219">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on).</span></span> <span data-ttu-id="37a91-220">因為不會建立資料表的查詢不會傳回資料列，如果您在處理 insert 查詢，其後的 select 查詢，建立 select 查詢的資料表是名為"Table"因為它是建立的第一個資料表。</span><span class="sxs-lookup"><span data-stu-id="37a91-220">Because no table is created for a query that does not return rows, if you process an insert query followed by a select query, the table created for the select query is named "Table" because it is the first table created.</span></span> <span data-ttu-id="37a91-221">使用資料行和資料表名稱的應用程式應該確定 je v konfliktu 這些命名模式不會發生。</span><span class="sxs-lookup"><span data-stu-id="37a91-221">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="37a91-222">當 SELECT 陳述式用來填入<xref:System.Data.DataSet>傳回多個結果，例如批次 SQL 陳述式，如果其中一個結果包含錯誤，會略過所有後續的結果並不會新增至<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="37a91-222">When the SELECT statement used to populate the <xref:System.Data.DataSet> returns multiple results, such as batch SQL statements, if one of the results contains an error, all subsequent results are skipped and are not added to the <xref:System.Data.DataSet>.</span></span>  
  
 <span data-ttu-id="37a91-223">當使用後續<xref:System.Data.Common.DbDataAdapter.Fill%2A>重新整理的內容呼叫<xref:System.Data.DataSet>，必須符合兩個條件：</span><span class="sxs-lookup"><span data-stu-id="37a91-223">When using subsequent <xref:System.Data.Common.DbDataAdapter.Fill%2A> calls to refresh the contents of the <xref:System.Data.DataSet>, two conditions must be met:</span></span>  
  
1.  <span data-ttu-id="37a91-224">SQL 陳述式應該符合一開始用來填入<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="37a91-224">The SQL statement should match the one initially used to populate the <xref:System.Data.DataSet>.</span></span>  
  
2.  <span data-ttu-id="37a91-225">**金鑰**必須存在的資料行資訊。</span><span class="sxs-lookup"><span data-stu-id="37a91-225">The **Key** column information must be present.</span></span>  
  
 <span data-ttu-id="37a91-226">如果有主索引鍵資訊，任何重複的資料列會協調，而且只能出現一次在<xref:System.Data.DataTable>，其對應於<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="37a91-226">If primary key information is present, any duplicate rows are reconciled and only appear once in the <xref:System.Data.DataTable> that corresponds to the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="37a91-227">主索引鍵資訊可能會設定透過<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>，藉由指定<xref:System.Data.DataTable.PrimaryKey%2A>屬性<xref:System.Data.DataTable>，或藉由設定<xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>屬性設`AddWithKey`。</span><span class="sxs-lookup"><span data-stu-id="37a91-227">Primary key information may be set either through <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, by specifying the <xref:System.Data.DataTable.PrimaryKey%2A> property of the <xref:System.Data.DataTable>, or by setting the <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> property to `AddWithKey`.</span></span>  
  
 <span data-ttu-id="37a91-228">如果 `SelectCommand` 傳回 OUTER JOIN 的結果，則 `DataAdapter` 便不會為產生的 <xref:System.Data.DataTable.PrimaryKey%2A> 設定 <xref:System.Data.DataTable>值。</span><span class="sxs-lookup"><span data-stu-id="37a91-228">If the `SelectCommand` returns the results of an OUTER JOIN, the `DataAdapter` does not set a <xref:System.Data.DataTable.PrimaryKey%2A> value for the resulting <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="37a91-229">您必須明確定義以確保正確解析重複的資料列的主索引鍵。</span><span class="sxs-lookup"><span data-stu-id="37a91-229">You must explicitly define the primary key to ensure that duplicate rows are resolved correctly.</span></span> <span data-ttu-id="37a91-230">如需詳細資訊，請參閱 <<c0> [ 定義主索引鍵](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md)。</span><span class="sxs-lookup"><span data-stu-id="37a91-230">For more information, see [Defining Primary Keys](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="37a91-231">當處理批次 SQL 陳述式會傳回多個結果，實作<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>的.NET Framework Data Provider for OLE DB 擷取第一個結果的結構描述資訊。</span><span class="sxs-lookup"><span data-stu-id="37a91-231">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</span></span> <span data-ttu-id="37a91-232">若要擷取多個結果的結構描述資訊，請使用<xref:System.Data.Common.DbDataAdapter.Fill%2A>具有<xref:System.Data.MissingSchemaAction>設定為`AddWithKey`。</span><span class="sxs-lookup"><span data-stu-id="37a91-232">To retrieve schema information for multiple results, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> with the <xref:System.Data.MissingSchemaAction> set to `AddWithKey`.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="37a91-233">DbProviderFactory (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="37a91-233">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="37a91-234">ADO.NET 概觀</span><span class="sxs-lookup"><span data-stu-id="37a91-234">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="public int Fill (System.Data.DataTable dataTable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Fill(class System.Data.DataTable dataTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Fill(System::Data::DataTable ^ dataTable);" />
      <MemberSignature Language="F#" Value="override this.Fill : System.Data.DataTable -&gt; int" Usage="dbDataAdapter.Fill dataTable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataTable" Type="System.Data.DataTable" />
      </Parameters>
      <Docs>
        <param name="dataTable"><span data-ttu-id="37a91-235">用於資料表對應的 <see cref="T:System.Data.DataTable" /> 名稱。</span><span class="sxs-lookup"><span data-stu-id="37a91-235">The name of the <see cref="T:System.Data.DataTable" /> to use for table mapping.</span></span></param>
        <summary><span data-ttu-id="37a91-236">使用 <see cref="T:System.Data.DataSet" /> 名稱，加入或重新整理 <see cref="T:System.Data.DataTable" /> 中指定範圍內的資料列，以符合那些在資料來源中的資料列。</span><span class="sxs-lookup"><span data-stu-id="37a91-236">Adds or refreshes rows in a specified range in the <see cref="T:System.Data.DataSet" /> to match those in the data source using the <see cref="T:System.Data.DataTable" /> name.</span></span></summary>
        <returns><span data-ttu-id="37a91-237">成功加入至 <see cref="T:System.Data.DataSet" /> 或在其中重新整理的資料列數目。</span><span class="sxs-lookup"><span data-stu-id="37a91-237">The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataSet" />.</span></span> <span data-ttu-id="37a91-238">這不包含被不傳回資料列之陳述式所影響的資料列。</span><span class="sxs-lookup"><span data-stu-id="37a91-238">This does not include rows affected by statements that do not return rows.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37a91-239"><xref:System.Data.Common.DbDataAdapter.Fill%2A>方法會從使用 SELECT 陳述式指定由相關聯的資料來源擷取資料列<xref:System.Data.IDbDataAdapter.SelectCommand%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="37a91-239">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method retrieves rows from the data source using the SELECT statement specified by an associated <xref:System.Data.IDbDataAdapter.SelectCommand%2A> property.</span></span> <span data-ttu-id="37a91-240">SELECT 陳述式相關聯的連接物件必須是有效的但它不需要開啟。</span><span class="sxs-lookup"><span data-stu-id="37a91-240">The connection object associated with the SELECT statement must be valid, but it does not need to be open.</span></span> <span data-ttu-id="37a91-241">如果連線已關閉之前<xref:System.Data.Common.DbDataAdapter.Fill%2A>會呼叫它，它會開啟來擷取資料，然後關閉。</span><span class="sxs-lookup"><span data-stu-id="37a91-241">If the connection is closed before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it is opened to retrieve data, then closed.</span></span> <span data-ttu-id="37a91-242">如果連接已開啟之前<xref:System.Data.Common.DbDataAdapter.Fill%2A>是呼叫，它會保持開啟狀態。</span><span class="sxs-lookup"><span data-stu-id="37a91-242">If the connection is open before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="37a91-243"><xref:System.Data.Common.DbDataAdapter.Fill%2A>作業，然後將資料列加入到目的地<xref:System.Data.DataTable>中的物件<xref:System.Data.DataSet>建立<xref:System.Data.DataTable>物件如果它們尚不存在。</span><span class="sxs-lookup"><span data-stu-id="37a91-243">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> operation then adds the rows to destination <xref:System.Data.DataTable> objects in the <xref:System.Data.DataSet>, creating the <xref:System.Data.DataTable> objects if they do not already exist.</span></span> <span data-ttu-id="37a91-244">建立時<xref:System.Data.DataTable>物件，<xref:System.Data.Common.DbDataAdapter.Fill%2A>作業通常會建立只有資料行名稱中繼資料。</span><span class="sxs-lookup"><span data-stu-id="37a91-244">When creating <xref:System.Data.DataTable> objects, the <xref:System.Data.Common.DbDataAdapter.Fill%2A> operation normally creates only column name metadata.</span></span> <span data-ttu-id="37a91-245">不過，如果<xref:System.Data.IDataAdapter.MissingSchemaAction%2A>屬性設定為`AddWithKey`，也會建立適當的主索引鍵和條件約束。</span><span class="sxs-lookup"><span data-stu-id="37a91-245">However, if the <xref:System.Data.IDataAdapter.MissingSchemaAction%2A> property is set to `AddWithKey`, appropriate primary keys and constraints are also created.</span></span>  
  
 <span data-ttu-id="37a91-246">如果<xref:System.Data.Common.DbDataAdapter>遇到重複的資料行在填入<xref:System.Data.DataTable>，它會產生後續的資料行，並使用模式的名稱 」*columnname*1""*columnname*2"，"*columnname*3"，依此類推。</span><span class="sxs-lookup"><span data-stu-id="37a91-246">If the <xref:System.Data.Common.DbDataAdapter> encounters duplicate columns while populating a <xref:System.Data.DataTable>, it generates names for the subsequent columns, using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="37a91-247">如果內送資料包含未命名的資料行，它們會放在<xref:System.Data.DataSet>根據模式"Column1"、"Column2"，依此類推。</span><span class="sxs-lookup"><span data-stu-id="37a91-247">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span> <span data-ttu-id="37a91-248">當多個結果集加入至<xref:System.Data.DataSet>放置於個別的資料表中每個結果集。</span><span class="sxs-lookup"><span data-stu-id="37a91-248">When multiple result sets are added to the <xref:System.Data.DataSet> each result set is placed in a separate table.</span></span>  
  
 <span data-ttu-id="37a91-249">多載<xref:System.Data.Common.DbDataAdapter.Fill%2A>採用`DataTable`因為參數只會取得第一個結果。</span><span class="sxs-lookup"><span data-stu-id="37a91-249">The overload of <xref:System.Data.Common.DbDataAdapter.Fill%2A> that takes `DataTable` as a parameter only obtains the first result.</span></span> <span data-ttu-id="37a91-250">使用的多載<xref:System.Data.Common.DbDataAdapter.Fill%2A>採用`DataSet`做為參數來取得多個結果。</span><span class="sxs-lookup"><span data-stu-id="37a91-250">Use an overload of <xref:System.Data.Common.DbDataAdapter.Fill%2A> that takes `DataSet` as a parameter to obtain multiple results.</span></span>  
  
 <span data-ttu-id="37a91-251"><xref:System.Data.Common.DbDataAdapter.Fill%2A>方法支援案例所在<xref:System.Data.DataSet>包含多個<xref:System.Data.DataTable>名稱只有大小寫不同的物件。</span><span class="sxs-lookup"><span data-stu-id="37a91-251">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method supports scenarios where the <xref:System.Data.DataSet> contains multiple <xref:System.Data.DataTable> objects whose names differ only by case.</span></span> <span data-ttu-id="37a91-252">在這種情況下，<xref:System.Data.Common.DbDataAdapter.Fill%2A>執行區分大小寫的比較，來尋找對應的資料表，並建立新的資料表，如果沒有完全相符項目存在。</span><span class="sxs-lookup"><span data-stu-id="37a91-252">In such situations, <xref:System.Data.Common.DbDataAdapter.Fill%2A> performs a case-sensitive comparison to find the corresponding table, and creates a new table if no exact match exists.</span></span> <span data-ttu-id="37a91-253">下列 C# 程式碼說明此行為。</span><span class="sxs-lookup"><span data-stu-id="37a91-253">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
 dataset.Tables.Add("aaa");  
 dataset.Tables.Add("AAA");  
 adapter.Fill(dataset, "aaa"); // Fills "aaa", which already exists in the DataSet.  
    adapter.Fill(dataset, "Aaa"); // Adds a new table called "Aaa".  
```  
  
 <span data-ttu-id="37a91-254">如果<xref:System.Data.Common.DbDataAdapter.Fill%2A>呼叫時，<xref:System.Data.DataSet>只會包含一個<xref:System.Data.DataTable>名稱只有大小寫不同，，<xref:System.Data.DataTable>會更新。</span><span class="sxs-lookup"><span data-stu-id="37a91-254">If <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called and the <xref:System.Data.DataSet> contains only one <xref:System.Data.DataTable> whose name differs only by case, that <xref:System.Data.DataTable> is updated.</span></span> <span data-ttu-id="37a91-255">在此案例中，比較不區分大小寫。</span><span class="sxs-lookup"><span data-stu-id="37a91-255">In this scenario, the comparison is case insensitive.</span></span> <span data-ttu-id="37a91-256">下列 C# 程式碼說明此行為。</span><span class="sxs-lookup"><span data-stu-id="37a91-256">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
 dataset.Tables.Add("aaa");  
    adapter.Fill(dataset, "AAA"); // Fills table "aaa" because only one similarly named table is in the DataSet.  
```  
  
 <span data-ttu-id="37a91-257">您可以使用<xref:System.Data.Common.DbDataAdapter.Fill%2A>上多次相同的方法<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="37a91-257">You can use the <xref:System.Data.Common.DbDataAdapter.Fill%2A> method multiple times on the same <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="37a91-258">如果主索引鍵存在，內送資料列會合併與相符的資料列已經存在。</span><span class="sxs-lookup"><span data-stu-id="37a91-258">If a primary key exists, incoming rows are merged with matching rows that already exist.</span></span> <span data-ttu-id="37a91-259">如果沒有主索引鍵存在，將內送資料列附加至<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="37a91-259">If no primary key exists, incoming rows are appended to the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="37a91-260">如果 `SelectCommand` 傳回 OUTER JOIN 的結果，則 `DataAdapter` 便不會為產生的 <xref:System.Data.DataTable.PrimaryKey%2A> 設定 <xref:System.Data.DataTable>值。</span><span class="sxs-lookup"><span data-stu-id="37a91-260">If the `SelectCommand` returns the results of an OUTER JOIN, the `DataAdapter` does not set a <xref:System.Data.DataTable.PrimaryKey%2A> value for the resulting <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="37a91-261">您必須明確定義以確保正確解析重複的資料列的主索引鍵。</span><span class="sxs-lookup"><span data-stu-id="37a91-261">You must explicitly define the primary key to ensure that duplicate rows are resolved correctly.</span></span> <span data-ttu-id="37a91-262">如需詳細資訊，請參閱 <<c0> [ 定義主索引鍵](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md)。</span><span class="sxs-lookup"><span data-stu-id="37a91-262">For more information, see [Defining Primary Keys](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="37a91-263">當處理批次 SQL 陳述式會傳回多個結果，實作<xref:System.Data.Common.DbDataAdapter.Fill%2A>和<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>.NET Framework 資料提供者會擷取第一個結果的結構描述資訊。</span><span class="sxs-lookup"><span data-stu-id="37a91-263">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.Fill%2A> and <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for a .NET Framework data provider retrieves schema information for only the first result.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="37a91-264">來源資料表無效。</span><span class="sxs-lookup"><span data-stu-id="37a91-264">The source table is invalid.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="37a91-265">這個多載<see cref="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)" />方法受到保護，設計用於使用.NET Framework 資料提供者。</span><span class="sxs-lookup"><span data-stu-id="37a91-265">This overload of the <see cref="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)" /> method is protected and is designed for use by a .NET Framework data provider.</span></span></para></block>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="37a91-266">DbProviderFactory (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="37a91-266">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="37a91-267">ADO.NET 概觀</span><span class="sxs-lookup"><span data-stu-id="37a91-267">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="public int Fill (System.Data.DataSet dataSet, string srcTable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Fill(class System.Data.DataSet dataSet, string srcTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Fill(System::Data::DataSet ^ dataSet, System::String ^ srcTable);" />
      <MemberSignature Language="F#" Value="override this.Fill : System.Data.DataSet * string -&gt; int" Usage="dbDataAdapter.Fill (dataSet, srcTable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
        <Parameter Name="srcTable" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dataSet"><span data-ttu-id="37a91-268">要填入資料錄和結構描述 (如果必要的話) 的 <see cref="T:System.Data.DataSet" />。</span><span class="sxs-lookup"><span data-stu-id="37a91-268">A <see cref="T:System.Data.DataSet" /> to fill with records and, if necessary, schema.</span></span></param>
        <param name="srcTable"><span data-ttu-id="37a91-269">用於資料表對應的來源資料表名稱。</span><span class="sxs-lookup"><span data-stu-id="37a91-269">The name of the source table to use for table mapping.</span></span></param>
        <summary><span data-ttu-id="37a91-270">使用 <see cref="T:System.Data.DataSet" /> 和 <see cref="T:System.Data.DataSet" /> 名稱，加入或重新整理 <see cref="T:System.Data.DataTable" /> 中的資料列，以符合那些在資料來源中的資料列。</span><span class="sxs-lookup"><span data-stu-id="37a91-270">Adds or refreshes rows in the <see cref="T:System.Data.DataSet" /> to match those in the data source using the <see cref="T:System.Data.DataSet" /> and <see cref="T:System.Data.DataTable" /> names.</span></span></summary>
        <returns><span data-ttu-id="37a91-271">成功加入至 <see cref="T:System.Data.DataSet" /> 或在其中重新整理的資料列數目。</span><span class="sxs-lookup"><span data-stu-id="37a91-271">The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataSet" />.</span></span> <span data-ttu-id="37a91-272">這不包含被不傳回資料列之陳述式所影響的資料列。</span><span class="sxs-lookup"><span data-stu-id="37a91-272">This does not include rows affected by statements that do not return rows.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37a91-273"><xref:System.Data.Common.DbDataAdapter.Fill%2A>方法會從使用 SELECT 陳述式的資料來源擷取資料。</span><span class="sxs-lookup"><span data-stu-id="37a91-273">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method retrieves the data from the data source using a SELECT statement.</span></span> <span data-ttu-id="37a91-274"><xref:System.Data.IDbConnection> Select 命令相關聯的物件必須有效，但它不需要開啟。</span><span class="sxs-lookup"><span data-stu-id="37a91-274">The <xref:System.Data.IDbConnection> object associated with the select command must be valid, but it does not need to be open.</span></span> <span data-ttu-id="37a91-275">如果<xref:System.Data.IDbConnection>關閉之前<xref:System.Data.Common.DbDataAdapter.Fill%2A>會呼叫它，它會開啟來擷取資料，然後關閉。</span><span class="sxs-lookup"><span data-stu-id="37a91-275">If the <xref:System.Data.IDbConnection> is closed before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it is opened to retrieve data, then closed.</span></span> <span data-ttu-id="37a91-276">如果連接已開啟之前<xref:System.Data.Common.DbDataAdapter.Fill%2A>是呼叫，它會保持開啟狀態。</span><span class="sxs-lookup"><span data-stu-id="37a91-276">If the connection is open before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="37a91-277">如果命令未傳回任何資料列，將資料表加入至<xref:System.Data.DataSet>，並會引發任何例外狀況。</span><span class="sxs-lookup"><span data-stu-id="37a91-277">If a command does not return any rows, no tables are added to the <xref:System.Data.DataSet>, and no exception is raised.</span></span>  
  
 <span data-ttu-id="37a91-278">如果<xref:System.Data.Common.DbDataAdapter>物件在填入遇到重複的資料行<xref:System.Data.DataTable>，它會產生後續的資料行，並使用模式 」 columnname1"、"columnname2 」、 「 columnname3"，等等的名稱。</span><span class="sxs-lookup"><span data-stu-id="37a91-278">If the <xref:System.Data.Common.DbDataAdapter> object encounters duplicate columns while populating a <xref:System.Data.DataTable>, it will generate names for the subsequent columns, using the pattern "columnname1", "columnname2", "columnname3", and so on.</span></span> <span data-ttu-id="37a91-279">如果內送資料包含未命名的資料行，它們會放在<xref:System.Data.DataSet>根據模式"Column1"、"Column2"，依此類推。</span><span class="sxs-lookup"><span data-stu-id="37a91-279">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span>  
  
 <span data-ttu-id="37a91-280">當指定的查詢傳回多個結果時，每個結果集被放在個別的資料表。</span><span class="sxs-lookup"><span data-stu-id="37a91-280">When the query specified returns multiple results, each result set is placed in a separate table.</span></span> <span data-ttu-id="37a91-281">其他結果集的命名方式將整數值附加至指定的資料表名稱 （例如，"Table"、"Table1"、"Table2"，等等）。</span><span class="sxs-lookup"><span data-stu-id="37a91-281">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on).</span></span> <span data-ttu-id="37a91-282">因為不會建立資料表的查詢不會傳回資料列，如果您要處理 insert 查詢，其後的 select 查詢，建立 select 查詢的資料表就會命名為"Table"，因為它是建立的第一個資料表。</span><span class="sxs-lookup"><span data-stu-id="37a91-282">Since no table is created for a query that does not return rows, if you were to process an insert query followed by a select query, the table created for the select query would be named "Table", because it is the first table created.</span></span> <span data-ttu-id="37a91-283">使用資料行和資料表名稱的應用程式應該確定 je v konfliktu 這些命名模式不會發生。</span><span class="sxs-lookup"><span data-stu-id="37a91-283">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="37a91-284"><xref:System.Data.Common.DbDataAdapter.Fill%2A>方法支援案例所在<xref:System.Data.DataSet>包含多個<xref:System.Data.DataTable>名稱只有大小寫不同的物件。</span><span class="sxs-lookup"><span data-stu-id="37a91-284">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method supports scenarios where the <xref:System.Data.DataSet> contains multiple <xref:System.Data.DataTable> objects whose names differ only by case.</span></span> <span data-ttu-id="37a91-285">在這種情況下，<xref:System.Data.Common.DbDataAdapter.Fill%2A>執行區分大小寫的比較，來尋找對應的資料表，並建立新的資料表，如果沒有完全相符項目存在。</span><span class="sxs-lookup"><span data-stu-id="37a91-285">In such situations, <xref:System.Data.Common.DbDataAdapter.Fill%2A> performs a case-sensitive comparison to find the corresponding table, and creates a new table if no exact match exists.</span></span> <span data-ttu-id="37a91-286">下列 C# 程式碼說明此行為。</span><span class="sxs-lookup"><span data-stu-id="37a91-286">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
dataset.Tables.Add("AAA");  
adapter.Fill(dataset, "aaa"); // Fills "aaa", which already exists in the DataSet.  
adapter.Fill(dataset, "Aaa"); // Adds a new table called "Aaa".  
```  
  
 <span data-ttu-id="37a91-287">如果<xref:System.Data.Common.DbDataAdapter.Fill%2A>呼叫時，<xref:System.Data.DataSet>只會包含一個<xref:System.Data.DataTable>名稱只有大小寫不同，，<xref:System.Data.DataTable>會更新。</span><span class="sxs-lookup"><span data-stu-id="37a91-287">If <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called and the <xref:System.Data.DataSet> contains only one <xref:System.Data.DataTable> whose name differs only by case, that <xref:System.Data.DataTable> is updated.</span></span> <span data-ttu-id="37a91-288">在此案例中，比較不區分大小寫。</span><span class="sxs-lookup"><span data-stu-id="37a91-288">In this scenario, the comparison is case insensitive.</span></span> <span data-ttu-id="37a91-289">下列 C# 程式碼說明此行為。</span><span class="sxs-lookup"><span data-stu-id="37a91-289">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
adapter.Fill(dataset, "AAA"); // Fills table "aaa" because only one similarly named table is in the DataSet.  
```  
  
 <span data-ttu-id="37a91-290">如果發生錯誤或例外狀況發生時填入資料的資料表，在發生錯誤之前所加入的資料列將保留在資料表中。</span><span class="sxs-lookup"><span data-stu-id="37a91-290">If an error or an exception is encountered while populating the data tables, rows added prior to the occurrence of the error remain in the data tables.</span></span> <span data-ttu-id="37a91-291">作業的其餘部分就會中止。</span><span class="sxs-lookup"><span data-stu-id="37a91-291">The remainder of the operation is aborted.</span></span>  
  
 <span data-ttu-id="37a91-292">當 SELECT 陳述式用來填入<xref:System.Data.DataSet>傳回多個結果，例如批次 SQL 陳述式中，注意下列事項：</span><span class="sxs-lookup"><span data-stu-id="37a91-292">When the SELECT statement used to populate the <xref:System.Data.DataSet> returns multiple results, such as a batch SQL statement, be aware of the following:</span></span>  
  
-   <span data-ttu-id="37a91-293">如果其中一個結果包含錯誤時，會略過所有後續的結果，且未新增到<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="37a91-293">If one of the results contains an error, all subsequent results are skipped and not added to the <xref:System.Data.DataSet>.</span></span>  
  
 <span data-ttu-id="37a91-294">當使用後續<xref:System.Data.Common.DbDataAdapter.Fill%2A>重新整理的內容呼叫<xref:System.Data.DataSet>，必須符合兩個條件：</span><span class="sxs-lookup"><span data-stu-id="37a91-294">When using subsequent <xref:System.Data.Common.DbDataAdapter.Fill%2A> calls to refresh the contents of the <xref:System.Data.DataSet>, two conditions must be met:</span></span>  
  
1.  <span data-ttu-id="37a91-295">SQL 陳述式應該符合一開始用來填入<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="37a91-295">The SQL statement should match the one initially used to populate the <xref:System.Data.DataSet>.</span></span>  
  
2.  <span data-ttu-id="37a91-296">**金鑰**必須存在的資料行資訊。</span><span class="sxs-lookup"><span data-stu-id="37a91-296">The **Key** column information must be present.</span></span> <span data-ttu-id="37a91-297">如果有主索引鍵資訊，任何重複的資料列會協調，而且只能出現一次在<xref:System.Data.DataTable>，其對應於<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="37a91-297">If primary key information is present, any duplicate rows are reconciled and only appear once in the <xref:System.Data.DataTable> that corresponds to the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="37a91-298">主索引鍵資訊可能會設定透過<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>，藉由指定<xref:System.Data.DataTable.PrimaryKey%2A>屬性<xref:System.Data.DataTable>，或藉由設定<xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>屬性設`AddWithKey`。</span><span class="sxs-lookup"><span data-stu-id="37a91-298">Primary key information may be set either through <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, by specifying the <xref:System.Data.DataTable.PrimaryKey%2A> property of the <xref:System.Data.DataTable>, or by setting the <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> property to `AddWithKey`.</span></span>  
  
 <span data-ttu-id="37a91-299">如果 `SelectCommand` 傳回 OUTER JOIN 的結果，則 `DataAdapter` 便不會為產生的 <xref:System.Data.DataTable.PrimaryKey%2A> 設定 <xref:System.Data.DataTable>值。</span><span class="sxs-lookup"><span data-stu-id="37a91-299">If the `SelectCommand` returns the results of an OUTER JOIN, the `DataAdapter` does not set a <xref:System.Data.DataTable.PrimaryKey%2A> value for the resulting <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="37a91-300">您必須明確定義以確保正確解析重複的資料列的主索引鍵。</span><span class="sxs-lookup"><span data-stu-id="37a91-300">You must explicitly define the primary key to ensure that duplicate rows are resolved correctly.</span></span> <span data-ttu-id="37a91-301">如需詳細資訊，請參閱 <<c0> [ 定義主索引鍵](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md)。</span><span class="sxs-lookup"><span data-stu-id="37a91-301">For more information, see [Defining Primary Keys](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="37a91-302">當處理批次 SQL 陳述式會傳回多個結果，實作<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>的.NET Framework Data Provider for OLE DB 擷取第一個結果的結構描述資訊。</span><span class="sxs-lookup"><span data-stu-id="37a91-302">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</span></span> <span data-ttu-id="37a91-303">若要擷取多個結果的結構描述資訊，請使用<xref:System.Data.Common.DbDataAdapter.Fill%2A>具有<xref:System.Data.MissingSchemaAction>設定為`AddWithKey`。</span><span class="sxs-lookup"><span data-stu-id="37a91-303">To retrieve schema information for multiple results, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> with the <xref:System.Data.MissingSchemaAction> set to `AddWithKey`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="37a91-304">下列範例會使用衍生的類別中， <xref:System.Data.OleDb.OleDbDataAdapter>，以填滿<xref:System.Data.DataSet>從 categories 資料表的資料列。</span><span class="sxs-lookup"><span data-stu-id="37a91-304">The following example uses the derived class, <xref:System.Data.OleDb.OleDbDataAdapter>, to fill a <xref:System.Data.DataSet> with rows from the categories table.</span></span> <span data-ttu-id="37a91-305">這個範例假設您已建立<xref:System.Data.OleDb.OleDbDataAdapter>和<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="37a91-305">This example assumes that you have created an <xref:System.Data.OleDb.OleDbDataAdapter> and a <xref:System.Data.DataSet>.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.Fill2 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Fill2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.Fill2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Fill2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.SystemException"><span data-ttu-id="37a91-306">來源資料表無效。</span><span class="sxs-lookup"><span data-stu-id="37a91-306">The source table is invalid.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="37a91-307">當覆寫<see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" />衍生類別時，請務必呼叫基底類別的<see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" />方法。</span><span class="sxs-lookup"><span data-stu-id="37a91-307">When overriding <see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /> in a derived class, be sure to call the base class's <see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /> method.</span></span></para></block>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="37a91-308">DbProviderFactory (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="37a91-308">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="37a91-309">ADO.NET 概觀</span><span class="sxs-lookup"><span data-stu-id="37a91-309">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="protected virtual int Fill (System.Data.DataTable dataTable, System.Data.IDataReader dataReader);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 Fill(class System.Data.DataTable dataTable, class System.Data.IDataReader dataReader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable,System.Data.IDataReader)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int Fill(System::Data::DataTable ^ dataTable, System::Data::IDataReader ^ dataReader);" />
      <MemberSignature Language="F#" Value="override this.Fill : System.Data.DataTable * System.Data.IDataReader -&gt; int" Usage="dbDataAdapter.Fill (dataTable, dataReader)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataTable" Type="System.Data.DataTable" Index="0" FrameworkAlternate="netframework-1.1" />
        <Parameter Name="dataReader" Type="System.Data.IDataReader" Index="1" FrameworkAlternate="netframework-1.1" />
      </Parameters>
      <Docs>
        <param name="dataTable">To be added.</param>
        <param name="dataReader">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="protected virtual int Fill (System.Data.DataTable dataTable, System.Data.IDbCommand command, System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 Fill(class System.Data.DataTable dataTable, class System.Data.IDbCommand command, valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable,System.Data.IDbCommand,System.Data.CommandBehavior)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int Fill(System::Data::DataTable ^ dataTable, System::Data::IDbCommand ^ command, System::Data::CommandBehavior behavior);" />
      <MemberSignature Language="F#" Value="override this.Fill : System.Data.DataTable * System.Data.IDbCommand * System.Data.CommandBehavior -&gt; int" Usage="dbDataAdapter.Fill (dataTable, command, behavior)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataTable" Type="System.Data.DataTable" />
        <Parameter Name="command" Type="System.Data.IDbCommand" />
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" />
      </Parameters>
      <Docs>
        <param name="dataTable"><span data-ttu-id="37a91-310">要填入資料錄和結構描述 (如果必要的話) 的 <see cref="T:System.Data.DataTable" />。</span><span class="sxs-lookup"><span data-stu-id="37a91-310">A <see cref="T:System.Data.DataTable" /> to fill with records and, if necessary, schema.</span></span></param>
        <param name="command"><span data-ttu-id="37a91-311">用來從資料來源擷取資料列的 SQL SELECT 陳述式。</span><span class="sxs-lookup"><span data-stu-id="37a91-311">The SQL SELECT statement used to retrieve rows from the data source.</span></span></param>
        <param name="behavior"><span data-ttu-id="37a91-312">其中一個 <see cref="T:System.Data.CommandBehavior" /> 值。</span><span class="sxs-lookup"><span data-stu-id="37a91-312">One of the <see cref="T:System.Data.CommandBehavior" /> values.</span></span></param>
        <summary><span data-ttu-id="37a91-313">使用指定的 <see cref="T:System.Data.DataTable" />、<see cref="T:System.Data.DataTable" /> 和 <see cref="T:System.Data.IDbCommand" />，加入或重新整理 <see cref="T:System.Data.CommandBehavior" /> 中的資料列，以符合那些在資料來源中的資料列。</span><span class="sxs-lookup"><span data-stu-id="37a91-313">Adds or refreshes rows in a <see cref="T:System.Data.DataTable" /> to match those in the data source using the specified <see cref="T:System.Data.DataTable" />, <see cref="T:System.Data.IDbCommand" /> and <see cref="T:System.Data.CommandBehavior" />.</span></span></summary>
        <returns><span data-ttu-id="37a91-314">成功加入至 <see cref="T:System.Data.DataTable" /> 或在其中重新整理的資料列數目。</span><span class="sxs-lookup"><span data-stu-id="37a91-314">The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataTable" />.</span></span> <span data-ttu-id="37a91-315">這不包含被不傳回資料列之陳述式所影響的資料列。</span><span class="sxs-lookup"><span data-stu-id="37a91-315">This does not include rows affected by statements that do not return rows.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37a91-316"><xref:System.Data.Common.DbDataAdapter.Fill%2A>方法會從使用 SELECT 陳述式指定由相關聯的資料來源擷取資料列<xref:System.Data.IDbDataAdapter.SelectCommand%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="37a91-316">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method retrieves rows from the data source using the SELECT statement specified by an associated <xref:System.Data.IDbDataAdapter.SelectCommand%2A> property.</span></span> <span data-ttu-id="37a91-317">SELECT 陳述式相關聯的連接物件必須是有效的但它不需要開啟。</span><span class="sxs-lookup"><span data-stu-id="37a91-317">The connection object associated with the SELECT statement must be valid, but it does not need to be open.</span></span> <span data-ttu-id="37a91-318">如果連線已關閉之前<xref:System.Data.Common.DbDataAdapter.Fill%2A>是呼叫，它是開啟擷取資料並關閉。</span><span class="sxs-lookup"><span data-stu-id="37a91-318">If the connection is closed before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it is opened to retrieve data and then closed.</span></span> <span data-ttu-id="37a91-319">如果連接已開啟之前<xref:System.Data.Common.DbDataAdapter.Fill%2A>是呼叫，它會保持開啟狀態。</span><span class="sxs-lookup"><span data-stu-id="37a91-319">If the connection is open before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="37a91-320"><xref:System.Data.Common.DbDataAdapter.Fill%2A>作業，然後將資料列加入到指定的目的地<xref:System.Data.DataTable>物件中<xref:System.Data.DataSet>建立<xref:System.Data.DataTable>物件如果它不存在。</span><span class="sxs-lookup"><span data-stu-id="37a91-320">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> operation then adds the rows to the specified destination <xref:System.Data.DataTable> object in the <xref:System.Data.DataSet>, creating the <xref:System.Data.DataTable> object if it does not already exist.</span></span> <span data-ttu-id="37a91-321">建立時<xref:System.Data.DataTable>物件，<xref:System.Data.Common.DbDataAdapter.Fill%2A>作業通常會建立只有資料行名稱中繼資料。</span><span class="sxs-lookup"><span data-stu-id="37a91-321">When creating a <xref:System.Data.DataTable> object, the <xref:System.Data.Common.DbDataAdapter.Fill%2A> operation normally creates only column name metadata.</span></span> <span data-ttu-id="37a91-322">不過，如果<xref:System.Data.IDataAdapter.MissingSchemaAction%2A>屬性設定為`AddWithKey`，也會建立適當的主索引鍵和條件約束。</span><span class="sxs-lookup"><span data-stu-id="37a91-322">However, if the <xref:System.Data.IDataAdapter.MissingSchemaAction%2A> property is set to `AddWithKey`, appropriate primary keys and constraints are also created.</span></span>  
  
 <span data-ttu-id="37a91-323">如果<xref:System.Data.Common.DbDataAdapter>物件在填入遇到重複的資料行<xref:System.Data.DataTable>，它會產生後續的資料行，並使用模式的名稱 」*columnname*1"，"*columnname*2"，"*columnname*3 」，依此類推。</span><span class="sxs-lookup"><span data-stu-id="37a91-323">If the <xref:System.Data.Common.DbDataAdapter> object encounters duplicate columns while populating a <xref:System.Data.DataTable>, it will generate names for the subsequent columns, using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="37a91-324">如果內送資料包含未命名的資料行，它們會放在<xref:System.Data.DataSet>根據模式"Column1"、"Column2"，依此類推。</span><span class="sxs-lookup"><span data-stu-id="37a91-324">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span>  
  
 <span data-ttu-id="37a91-325">多載<xref:System.Data.Common.DbDataAdapter.Fill%2A>採用`DataTable`因為參數只會取得第一個結果。</span><span class="sxs-lookup"><span data-stu-id="37a91-325">The overload of <xref:System.Data.Common.DbDataAdapter.Fill%2A> that takes `DataTable` as a parameter only obtains the first result.</span></span> <span data-ttu-id="37a91-326">使用的多載<xref:System.Data.Common.DbDataAdapter.Fill%2A>採用`DataSet`做為參數來取得多個結果。</span><span class="sxs-lookup"><span data-stu-id="37a91-326">Use an overload of <xref:System.Data.Common.DbDataAdapter.Fill%2A> that takes `DataSet` as a parameter to obtain multiple results.</span></span>  
  
 <span data-ttu-id="37a91-327">您可以使用<xref:System.Data.Common.DbDataAdapter.Fill%2A>上多次相同的方法<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="37a91-327">You can use the <xref:System.Data.Common.DbDataAdapter.Fill%2A> method multiple times on the same <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="37a91-328">如果主索引鍵存在，內送資料列會合併與相符的資料列已經存在。</span><span class="sxs-lookup"><span data-stu-id="37a91-328">If a primary key exists, incoming rows are merged with matching rows that already exist.</span></span> <span data-ttu-id="37a91-329">如果沒有主索引鍵存在，將內送資料列附加至<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="37a91-329">If no primary key exists, incoming rows are appended to the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="37a91-330">如果 `SelectCommand` 傳回 OUTER JOIN 的結果，則 `DataAdapter` 便不會為產生的 <xref:System.Data.DataTable.PrimaryKey%2A> 設定 <xref:System.Data.DataTable>值。</span><span class="sxs-lookup"><span data-stu-id="37a91-330">If the `SelectCommand` returns the results of an OUTER JOIN, the `DataAdapter` does not set a <xref:System.Data.DataTable.PrimaryKey%2A> value for the resulting <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="37a91-331">您必須明確定義以確保正確解析重複的資料列的主索引鍵。</span><span class="sxs-lookup"><span data-stu-id="37a91-331">You must explicitly define the primary key to ensure that duplicate rows are resolved correctly.</span></span> <span data-ttu-id="37a91-332">如需詳細資訊，請參閱 <<c0> [ 定義主索引鍵](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md)。</span><span class="sxs-lookup"><span data-stu-id="37a91-332">For more information, see [Defining Primary Keys](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="37a91-333">當處理批次 SQL 陳述式會傳回多個結果，實作<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>的.NET Framework Data Provider for OLE DB 擷取第一個結果的結構描述資訊。</span><span class="sxs-lookup"><span data-stu-id="37a91-333">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</span></span> <span data-ttu-id="37a91-334">若要擷取多個結果的結構描述資訊，請使用<xref:System.Data.Common.DbDataAdapter.Fill%2A>具有<xref:System.Data.MissingSchemaAction>設定為`AddWithKey`。</span><span class="sxs-lookup"><span data-stu-id="37a91-334">To retrieve schema information for multiple results, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> with the <xref:System.Data.MissingSchemaAction> set to `AddWithKey`.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="37a91-335">這個多載<see cref="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)" />方法受到保護，設計用於使用.NET Framework 資料提供者。</span><span class="sxs-lookup"><span data-stu-id="37a91-335">This overload of the <see cref="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)" /> method is protected and is designed for use by a .NET Framework data provider.</span></span></para></block>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="37a91-336">DbProviderFactory (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="37a91-336">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="37a91-337">ADO.NET 概觀</span><span class="sxs-lookup"><span data-stu-id="37a91-337">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="public int Fill (int startRecord, int maxRecords, params System.Data.DataTable[] dataTables);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Fill(int32 startRecord, int32 maxRecords, class System.Data.DataTable[] dataTables) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Fill(System.Int32,System.Int32,System.Data.DataTable[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Fill (startRecord As Integer, maxRecords As Integer, ParamArray dataTables As DataTable()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Fill(int startRecord, int maxRecords, ... cli::array &lt;System::Data::DataTable ^&gt; ^ dataTables);" />
      <MemberSignature Language="F#" Value="override this.Fill : int * int * System.Data.DataTable[] -&gt; int" Usage="dbDataAdapter.Fill (startRecord, maxRecords, dataTables)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startRecord" Type="System.Int32" />
        <Parameter Name="maxRecords" Type="System.Int32" />
        <Parameter Name="dataTables" Type="System.Data.DataTable[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="startRecord"><span data-ttu-id="37a91-338">要起始之以零為起始的資料錄編號。</span><span class="sxs-lookup"><span data-stu-id="37a91-338">The zero-based record number to start with.</span></span></param>
        <param name="maxRecords"><span data-ttu-id="37a91-339">要擷取之資料錄的最大數目。</span><span class="sxs-lookup"><span data-stu-id="37a91-339">The maximum number of records to retrieve.</span></span></param>
        <param name="dataTables"><span data-ttu-id="37a91-340">要從資料來源填入的 <see cref="T:System.Data.DataTable" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="37a91-340">The <see cref="T:System.Data.DataTable" /> objects to fill from the data source.</span></span></param>
        <summary><span data-ttu-id="37a91-341">從指定的記錄開始擷取直到指定的記錄最大數目為止，加入或重新整理 <see cref="T:System.Data.DataTable" /> 中的資料列，以符合那些在資料來源中的資料列。</span><span class="sxs-lookup"><span data-stu-id="37a91-341">Adds or refreshes rows in a <see cref="T:System.Data.DataTable" /> to match those in the data source starting at the specified record and retrieving up to the specified maximum number of records.</span></span></summary>
        <returns><span data-ttu-id="37a91-342">成功加入至 <see cref="T:System.Data.DataTable" /> 或在其中重新整理的資料列數目。</span><span class="sxs-lookup"><span data-stu-id="37a91-342">The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataTable" />.</span></span> <span data-ttu-id="37a91-343">這個值不包含受未傳回資料列之陳述式所影響的資料列。</span><span class="sxs-lookup"><span data-stu-id="37a91-343">This value does not include rows affected by statements that do not return rows.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37a91-344"><xref:System.Data.Common.DataAdapter.Fill%2A>方法會從使用 SELECT 陳述式指定由相關聯的資料來源擷取資料列<xref:System.Data.IDbDataAdapter.SelectCommand%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="37a91-344">The <xref:System.Data.Common.DataAdapter.Fill%2A> method retrieves rows from the data source using the SELECT statement specified by an associated <xref:System.Data.IDbDataAdapter.SelectCommand%2A> property.</span></span> <span data-ttu-id="37a91-345">SELECT 陳述式相關聯的連接物件必須是有效的但它不需要開啟。</span><span class="sxs-lookup"><span data-stu-id="37a91-345">The connection object associated with the SELECT statement must be valid, but it does not need to be open.</span></span> <span data-ttu-id="37a91-346">如果連線已關閉之前<xref:System.Data.Common.DataAdapter.Fill%2A>是呼叫，來擷取資料，開啟，然後關閉。</span><span class="sxs-lookup"><span data-stu-id="37a91-346">If the connection is closed before <xref:System.Data.Common.DataAdapter.Fill%2A> is called, it is opened to retrieve data, and then it is closed.</span></span> <span data-ttu-id="37a91-347">如果連接已開啟之前<xref:System.Data.Common.DataAdapter.Fill%2A>是呼叫，它會保持開啟狀態。</span><span class="sxs-lookup"><span data-stu-id="37a91-347">If the connection is open before <xref:System.Data.Common.DataAdapter.Fill%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="37a91-348"><xref:System.Data.Common.DataAdapter.Fill%2A>作業，然後將資料列加入到目的地<xref:System.Data.DataTable>中的物件<xref:System.Data.DataSet>建立<xref:System.Data.DataTable>物件如果它們尚不存在。</span><span class="sxs-lookup"><span data-stu-id="37a91-348">The <xref:System.Data.Common.DataAdapter.Fill%2A> operation then adds the rows to destination <xref:System.Data.DataTable> objects in the <xref:System.Data.DataSet>, creating the <xref:System.Data.DataTable> objects if they do not already exist.</span></span> <span data-ttu-id="37a91-349">建立時<xref:System.Data.DataTable>物件，<xref:System.Data.Common.DataAdapter.Fill%2A>作業通常會建立只有資料行名稱中繼資料。</span><span class="sxs-lookup"><span data-stu-id="37a91-349">When creating <xref:System.Data.DataTable> objects, the <xref:System.Data.Common.DataAdapter.Fill%2A> operation normally creates only column name metadata.</span></span> <span data-ttu-id="37a91-350">不過，如果<xref:System.Data.IDataAdapter.MissingSchemaAction%2A>屬性設定為`AddWithKey`，也會建立適當的主索引鍵和條件約束。</span><span class="sxs-lookup"><span data-stu-id="37a91-350">However, if the <xref:System.Data.IDataAdapter.MissingSchemaAction%2A> property is set to `AddWithKey`, appropriate primary keys and constraints are also created.</span></span>  
  
 <span data-ttu-id="37a91-351">如果 `SelectCommand` 傳回 OUTER JOIN 的結果，則 `DataAdapter` 便不會為產生的 <xref:System.Data.DataTable.PrimaryKey%2A> 設定 <xref:System.Data.DataTable>值。</span><span class="sxs-lookup"><span data-stu-id="37a91-351">If the `SelectCommand` returns the results of an OUTER JOIN, the `DataAdapter` does not set a <xref:System.Data.DataTable.PrimaryKey%2A> value for the resulting <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="37a91-352">您必須明確定義以確保正確解析重複的資料列的主索引鍵。</span><span class="sxs-lookup"><span data-stu-id="37a91-352">You must explicitly define the primary key to ensure that duplicate rows are resolved correctly.</span></span> <span data-ttu-id="37a91-353">如需詳細資訊，請參閱 <<c0> [ 定義主索引鍵](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md)。</span><span class="sxs-lookup"><span data-stu-id="37a91-353">For more information, see [Defining Primary Keys](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md).</span></span>  
  
 <span data-ttu-id="37a91-354">如果資料配接器遇到重複的資料行，在填入<xref:System.Data.DataTable>，它會產生後續的資料行，並使用模式 」 columnname1"、"columnname2 」、 「 columnname3"，等等的名稱。</span><span class="sxs-lookup"><span data-stu-id="37a91-354">If the data adapter encounters duplicate columns while populating a <xref:System.Data.DataTable>, it generates names for the subsequent columns, using the pattern "columnname1", "columnname2", "columnname3", and so on.</span></span> <span data-ttu-id="37a91-355">如果內送資料包含未命名的資料行，它們會放在<xref:System.Data.DataSet>根據模式"Column1"、"Column2"，依此類推。</span><span class="sxs-lookup"><span data-stu-id="37a91-355">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span> <span data-ttu-id="37a91-356">當多個結果集加入至<xref:System.Data.DataSet>，每個結果集放在個別的資料表。</span><span class="sxs-lookup"><span data-stu-id="37a91-356">When multiple result sets are added to the <xref:System.Data.DataSet>, each result set is placed in a separate table.</span></span> <span data-ttu-id="37a91-357">其他結果集的命名方式將整數值附加至指定的資料表名稱 （例如，"Table"、"Table1"、"Table2"，等等）。</span><span class="sxs-lookup"><span data-stu-id="37a91-357">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on).</span></span> <span data-ttu-id="37a91-358">使用資料行和資料表名稱的應用程式應該確定 je v konfliktu 這些命名模式不會發生。</span><span class="sxs-lookup"><span data-stu-id="37a91-358">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="37a91-359">當 SELECT 陳述式用來填入<xref:System.Data.DataSet>傳回多個結果，例如批次 SQL 陳述式中，如果其中一個結果包含錯誤，所有後續的結果會跳過，且不會加入至<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="37a91-359">When the SELECT statement used to populate the <xref:System.Data.DataSet> returns multiple results, such as a batch SQL statements, if one of the results contains an error, all subsequent results are skipped and not added to the <xref:System.Data.DataSet>.</span></span>  
  
 <span data-ttu-id="37a91-360">您可以使用<xref:System.Data.Common.DataAdapter.Fill%2A>上多次相同的方法<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="37a91-360">You can use the <xref:System.Data.Common.DataAdapter.Fill%2A> method multiple times on the same <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="37a91-361">如果主索引鍵存在，內送資料列會合併與相符的資料列已經存在。</span><span class="sxs-lookup"><span data-stu-id="37a91-361">If a primary key exists, incoming rows are merged with matching rows that already exist.</span></span> <span data-ttu-id="37a91-362">如果沒有主索引鍵存在，將內送資料列附加至<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="37a91-362">If no primary key exists, incoming rows are appended to the <xref:System.Data.DataTable>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="37a91-363">當處理批次 SQL 陳述式會傳回多個結果，實作<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>的.NET Framework Data Provider for OLE DB 擷取第一個結果的結構描述資訊。</span><span class="sxs-lookup"><span data-stu-id="37a91-363">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</span></span> <span data-ttu-id="37a91-364">若要擷取多個結果的結構描述資訊，請使用<xref:System.Data.Common.DbDataAdapter.Fill%2A>具有<xref:System.Data.MissingSchemaAction>設定為`AddWithKey`。</span><span class="sxs-lookup"><span data-stu-id="37a91-364">To retrieve schema information for multiple results, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> with the <xref:System.Data.MissingSchemaAction> set to `AddWithKey`.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="37a91-365">DbProviderFactory (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="37a91-365">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="37a91-366">ADO.NET 概觀</span><span class="sxs-lookup"><span data-stu-id="37a91-366">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="public int Fill (System.Data.DataSet dataSet, int startRecord, int maxRecords, string srcTable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Fill(class System.Data.DataSet dataSet, int32 startRecord, int32 maxRecords, string srcTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Fill(System::Data::DataSet ^ dataSet, int startRecord, int maxRecords, System::String ^ srcTable);" />
      <MemberSignature Language="F#" Value="override this.Fill : System.Data.DataSet * int * int * string -&gt; int" Usage="dbDataAdapter.Fill (dataSet, startRecord, maxRecords, srcTable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
        <Parameter Name="startRecord" Type="System.Int32" />
        <Parameter Name="maxRecords" Type="System.Int32" />
        <Parameter Name="srcTable" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dataSet"><span data-ttu-id="37a91-367">要填入資料錄和結構描述 (如果必要的話) 的 <see cref="T:System.Data.DataSet" />。</span><span class="sxs-lookup"><span data-stu-id="37a91-367">A <see cref="T:System.Data.DataSet" /> to fill with records and, if necessary, schema.</span></span></param>
        <param name="startRecord"><span data-ttu-id="37a91-368">要起始之以零為起始的資料錄編號。</span><span class="sxs-lookup"><span data-stu-id="37a91-368">The zero-based record number to start with.</span></span></param>
        <param name="maxRecords"><span data-ttu-id="37a91-369">要擷取之資料錄的最大數目。</span><span class="sxs-lookup"><span data-stu-id="37a91-369">The maximum number of records to retrieve.</span></span></param>
        <param name="srcTable"><span data-ttu-id="37a91-370">用於資料表對應的來源資料表名稱。</span><span class="sxs-lookup"><span data-stu-id="37a91-370">The name of the source table to use for table mapping.</span></span></param>
        <summary><span data-ttu-id="37a91-371">使用 <see cref="T:System.Data.DataSet" /> 和 <see cref="T:System.Data.DataSet" /> 名稱，加入或重新整理 <see cref="T:System.Data.DataTable" /> 中指定範圍內的資料列，以符合那些在資料來源中的資料列。</span><span class="sxs-lookup"><span data-stu-id="37a91-371">Adds or refreshes rows in a specified range in the <see cref="T:System.Data.DataSet" /> to match those in the data source using the <see cref="T:System.Data.DataSet" /> and <see cref="T:System.Data.DataTable" /> names.</span></span></summary>
        <returns><span data-ttu-id="37a91-372">成功加入至 <see cref="T:System.Data.DataSet" /> 或在其中重新整理的資料列數目。</span><span class="sxs-lookup"><span data-stu-id="37a91-372">The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataSet" />.</span></span> <span data-ttu-id="37a91-373">這不包含被不傳回資料列之陳述式所影響的資料列。</span><span class="sxs-lookup"><span data-stu-id="37a91-373">This does not include rows affected by statements that do not return rows.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37a91-374">A `maxRecords` 0 的值取得開始記錄之後所發現的所有記錄。</span><span class="sxs-lookup"><span data-stu-id="37a91-374">A `maxRecords` value of 0 gets all records found after the start record.</span></span> <span data-ttu-id="37a91-375">如果`maxRecords`大於剩餘的資料列數目僅會傳回其餘的資料列，且不會發出錯誤。</span><span class="sxs-lookup"><span data-stu-id="37a91-375">If `maxRecords` is greater than the number of remaining rows, only the remaining rows are returned, and no error is issued.</span></span>  
  
 <span data-ttu-id="37a91-376">如果對應的 select 命令傳回多個結果，陳述式<xref:System.Data.Common.DbDataAdapter.Fill%2A>僅適用於`maxRecords`至第一個結果。</span><span class="sxs-lookup"><span data-stu-id="37a91-376">If the corresponding select command is a statement returning multiple results, <xref:System.Data.Common.DbDataAdapter.Fill%2A> only applies `maxRecords` to the first result.</span></span>  
  
 <span data-ttu-id="37a91-377"><xref:System.Data.Common.DbDataAdapter.Fill%2A>方法會從使用 SELECT 陳述式的資料來源擷取資料。</span><span class="sxs-lookup"><span data-stu-id="37a91-377">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method retrieves the data from the data source using a SELECT statement.</span></span> <span data-ttu-id="37a91-378"><xref:System.Data.IDbConnection> SELECT 陳述式相關聯的物件必須有效，但它不需要開啟。</span><span class="sxs-lookup"><span data-stu-id="37a91-378">The <xref:System.Data.IDbConnection> object associated with the SELECT statement must be valid, but it does not need to be open.</span></span> <span data-ttu-id="37a91-379">如果<xref:System.Data.IDbConnection>關閉之前<xref:System.Data.Common.DbDataAdapter.Fill%2A>是呼叫，它是開啟擷取資料並關閉。</span><span class="sxs-lookup"><span data-stu-id="37a91-379">If the <xref:System.Data.IDbConnection> is closed before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it is opened to retrieve data and then closed.</span></span> <span data-ttu-id="37a91-380">如果連接已開啟之前<xref:System.Data.Common.DbDataAdapter.Fill%2A>是呼叫，它會保持開啟狀態。</span><span class="sxs-lookup"><span data-stu-id="37a91-380">If the connection is open before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="37a91-381">如果命令未傳回任何資料列，將資料表加入至<xref:System.Data.DataSet>，但會引發任何例外狀況。</span><span class="sxs-lookup"><span data-stu-id="37a91-381">If a command does not return any rows, no tables are added to the <xref:System.Data.DataSet>, but no exception is raised.</span></span>  
  
 <span data-ttu-id="37a91-382">如果<xref:System.Data.Common.DbDataAdapter>物件在填入遇到重複的資料行<xref:System.Data.DataTable>，它會產生後續的資料行，並使用模式的名稱 」*columnname*1"，"*columnname*2"，"*columnname*3 」，依此類推。</span><span class="sxs-lookup"><span data-stu-id="37a91-382">If the <xref:System.Data.Common.DbDataAdapter> object encounters duplicate columns while populating a <xref:System.Data.DataTable>, it will generate names for the subsequent columns, using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="37a91-383">如果內送資料包含未命名的資料行，它們會放在<xref:System.Data.DataSet>根據模式"Column1"、"Column2"，依此類推。</span><span class="sxs-lookup"><span data-stu-id="37a91-383">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span>  
  
 <span data-ttu-id="37a91-384">當指定的查詢傳回多個結果時，每個結果集被放在個別的資料表。</span><span class="sxs-lookup"><span data-stu-id="37a91-384">When the query specified returns multiple results, each result set is placed in a separate table.</span></span> <span data-ttu-id="37a91-385">其他結果集的命名方式將整數值附加至指定的資料表名稱 （例如，"Table"、"Table1"、"Table2"，等等）。</span><span class="sxs-lookup"><span data-stu-id="37a91-385">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on).</span></span> <span data-ttu-id="37a91-386">因為不會建立資料表的查詢不會傳回資料列，如果您在處理 insert 查詢，其後的 select 查詢，建立 select 查詢的資料表是名為"Table"，因為它是建立的第一個資料表。</span><span class="sxs-lookup"><span data-stu-id="37a91-386">Because no table is created for a query that does not return rows, if you process an insert query followed by a select query, the table created for the select query is named "Table", because it is the first table created.</span></span> <span data-ttu-id="37a91-387">使用資料行和資料表名稱的應用程式應該確定 je v konfliktu 這些命名模式不會發生。</span><span class="sxs-lookup"><span data-stu-id="37a91-387">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="37a91-388"><xref:System.Data.Common.DbDataAdapter.Fill%2A>方法支援案例所在<xref:System.Data.DataSet>包含多個<xref:System.Data.DataTable>名稱只有大小寫不同的物件。</span><span class="sxs-lookup"><span data-stu-id="37a91-388">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method supports scenarios where the <xref:System.Data.DataSet> contains multiple <xref:System.Data.DataTable> objects whose names differ only by case.</span></span> <span data-ttu-id="37a91-389">在這種情況下，<xref:System.Data.Common.DbDataAdapter.Fill%2A>執行區分大小寫的比較，來尋找對應的資料表，並建立新的資料表，如果沒有完全相符項目存在。</span><span class="sxs-lookup"><span data-stu-id="37a91-389">In such situations, <xref:System.Data.Common.DbDataAdapter.Fill%2A> performs a case-sensitive comparison to find the corresponding table, and creates a new table if no exact match exists.</span></span> <span data-ttu-id="37a91-390">下列 C# 程式碼說明此行為。</span><span class="sxs-lookup"><span data-stu-id="37a91-390">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
dataset.Tables.Add("AAA");  
adapter.Fill(dataset, "aaa"); // Fills "aaa", which already exists in the DataSet.  
adapter.Fill(dataset, "Aaa"); // Adds a new table called "Aaa".  
```  
  
 <span data-ttu-id="37a91-391">如果<xref:System.Data.Common.DbDataAdapter.Fill%2A>呼叫時，<xref:System.Data.DataSet>只會包含一個<xref:System.Data.DataTable>名稱只有大小寫不同，，<xref:System.Data.DataTable>會更新。</span><span class="sxs-lookup"><span data-stu-id="37a91-391">If <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called and the <xref:System.Data.DataSet> contains only one <xref:System.Data.DataTable> whose name differs only by case, that <xref:System.Data.DataTable> is updated.</span></span> <span data-ttu-id="37a91-392">在此案例中，比較不區分大小寫。</span><span class="sxs-lookup"><span data-stu-id="37a91-392">In this scenario, the comparison is case insensitive.</span></span> <span data-ttu-id="37a91-393">下列 C# 程式碼說明此行為。</span><span class="sxs-lookup"><span data-stu-id="37a91-393">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
adapter.Fill(dataset, "AAA"); // Fills table "aaa" because only one similarly named table is in the DataSet.  
```  
  
 <span data-ttu-id="37a91-394">如果發生錯誤或例外狀況發生時填入資料的資料表，在發生錯誤之前所加入的資料列將保留在資料表中。</span><span class="sxs-lookup"><span data-stu-id="37a91-394">If an error or an exception is encountered while populating the data tables, rows added prior to the occurrence of the error remain in the data tables.</span></span> <span data-ttu-id="37a91-395">作業的其餘部分就會中止。</span><span class="sxs-lookup"><span data-stu-id="37a91-395">The remainder of the operation is aborted.</span></span>  
  
 <span data-ttu-id="37a91-396">當 SELECT 陳述式用來填入<xref:System.Data.DataSet>傳回多個結果，例如批次 SQL 陳述式，要注意下列事項：</span><span class="sxs-lookup"><span data-stu-id="37a91-396">When the SELECT statement used to populate the <xref:System.Data.DataSet> returns multiple results, such as batch SQL statements, be aware of the following:</span></span>  
  
-   <span data-ttu-id="37a91-397">處理批次 SQL 陳述式，從多個結果時`maxRecords`僅適用於第一個結果。</span><span class="sxs-lookup"><span data-stu-id="37a91-397">When processing multiple results from a batch SQL statement, `maxRecords` only applies to the first result.</span></span> <span data-ttu-id="37a91-398">這也適用於包含章節化的結果 (.NET Framework Data Provider for OLE DB 只) 的資料列。</span><span class="sxs-lookup"><span data-stu-id="37a91-398">The same is true for rows containing chaptered results (.NET Framework Data Provider for OLE DB only).</span></span> <span data-ttu-id="37a91-399">最上層結果會受到`maxRecords`，但是所有的子資料列會加入。</span><span class="sxs-lookup"><span data-stu-id="37a91-399">The top level result is limited by `maxRecords`, but all child rows are added.</span></span>  
  
-   <span data-ttu-id="37a91-400">如果其中一個結果包含錯誤時，會略過所有後續的結果，且未新增到<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="37a91-400">If one of the results contains an error, all subsequent results are skipped and not added to the <xref:System.Data.DataSet>.</span></span>  
  
 <span data-ttu-id="37a91-401">當使用後續<xref:System.Data.Common.DbDataAdapter.Fill%2A>重新整理的內容呼叫<xref:System.Data.DataSet>，必須符合兩個條件：</span><span class="sxs-lookup"><span data-stu-id="37a91-401">When using subsequent <xref:System.Data.Common.DbDataAdapter.Fill%2A> calls to refresh the contents of the <xref:System.Data.DataSet>, two conditions must be met:</span></span>  
  
1.  <span data-ttu-id="37a91-402">SQL 陳述式應該符合一開始用來填入<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="37a91-402">The SQL statement should match the one initially used to populate the <xref:System.Data.DataSet>.</span></span>  
  
2.  <span data-ttu-id="37a91-403">**金鑰**必須存在的資料行資訊。</span><span class="sxs-lookup"><span data-stu-id="37a91-403">The **Key** column information must be present.</span></span>  
  
 <span data-ttu-id="37a91-404">如果主索引鍵資訊存在時，任何重複的資料列會協調並只出現一次在<xref:System.Data.DataTable>，其對應於<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="37a91-404">If primary key information is present, any duplicate rows will be reconciled and only appear once in the <xref:System.Data.DataTable> that corresponds to the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="37a91-405">主索引鍵資訊可能會設定透過<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>，藉由指定<xref:System.Data.DataTable.PrimaryKey%2A>屬性<xref:System.Data.DataTable>，或藉由設定<xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>屬性設`AddWithKey`。</span><span class="sxs-lookup"><span data-stu-id="37a91-405">Primary key information may be set either through <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, by specifying the <xref:System.Data.DataTable.PrimaryKey%2A> property of the <xref:System.Data.DataTable>, or by setting the <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> property to `AddWithKey`.</span></span>  
  
 <span data-ttu-id="37a91-406">如果 `SelectCommand` 傳回 OUTER JOIN 的結果，則 `DataAdapter` 便不會為產生的 <xref:System.Data.DataTable.PrimaryKey%2A> 設定 <xref:System.Data.DataTable>值。</span><span class="sxs-lookup"><span data-stu-id="37a91-406">If the `SelectCommand` returns the results of an OUTER JOIN, the `DataAdapter` does not set a <xref:System.Data.DataTable.PrimaryKey%2A> value for the resulting <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="37a91-407">您必須明確定義以確保正確解析重複的資料列的主索引鍵。</span><span class="sxs-lookup"><span data-stu-id="37a91-407">You must explicitly define the primary key to ensure that duplicate rows are resolved correctly.</span></span> <span data-ttu-id="37a91-408">如需詳細資訊，請參閱 <<c0> [ 定義主索引鍵](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md)。</span><span class="sxs-lookup"><span data-stu-id="37a91-408">For more information, see [Defining Primary Keys](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="37a91-409">當處理批次 SQL 陳述式會傳回多個結果，實作<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>的.NET Framework Data Provider for OLE DB 擷取第一個結果的結構描述資訊。</span><span class="sxs-lookup"><span data-stu-id="37a91-409">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</span></span> <span data-ttu-id="37a91-410">若要擷取多個結果的結構描述資訊，請使用<xref:System.Data.Common.DbDataAdapter.Fill%2A>具有<xref:System.Data.MissingSchemaAction>設定為`AddWithKey`。</span><span class="sxs-lookup"><span data-stu-id="37a91-410">To retrieve schema information for multiple results, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> with the <xref:System.Data.MissingSchemaAction> set to `AddWithKey`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="37a91-411">`DataSet`不會包含在所指定的記錄數目超過`maxRecords`。</span><span class="sxs-lookup"><span data-stu-id="37a91-411">The `DataSet` will not contain more than the number of records indicated by `maxRecords`.</span></span> <span data-ttu-id="37a91-412">不過，從伺服器仍然傳回查詢所產生的整個結果集。</span><span class="sxs-lookup"><span data-stu-id="37a91-412">However, the entire result set generated by the query is still returned from the server.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="37a91-413">下列範例會使用衍生的類別中， <xref:System.Data.OleDb.OleDbDataAdapter>，以填滿<xref:System.Data.DataSet>具有 15 個資料列，從資料列 10，開始**類別**資料表。</span><span class="sxs-lookup"><span data-stu-id="37a91-413">The following example uses the derived class, <xref:System.Data.OleDb.OleDbDataAdapter>, to fill a <xref:System.Data.DataSet> with 15 rows, beginning at row 10, from the **Categories** table.</span></span> <span data-ttu-id="37a91-414">這個範例假設您已建立<xref:System.Data.OleDb.OleDbDataAdapter>和<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="37a91-414">This example assumes that you have created an <xref:System.Data.OleDb.OleDbDataAdapter> and a <xref:System.Data.DataSet>.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.Fill3 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Fill3 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.Fill3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Fill3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.SystemException"><span data-ttu-id="37a91-415"><see cref="T:System.Data.DataSet" /> 無效。</span><span class="sxs-lookup"><span data-stu-id="37a91-415">The <see cref="T:System.Data.DataSet" /> is invalid.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="37a91-416">來源資料表無效。</span><span class="sxs-lookup"><span data-stu-id="37a91-416">The source table is invalid.</span></span>  
  
<span data-ttu-id="37a91-417">-或-</span><span class="sxs-lookup"><span data-stu-id="37a91-417">-or-</span></span> 
<span data-ttu-id="37a91-418">連接無效。</span><span class="sxs-lookup"><span data-stu-id="37a91-418">The connection is invalid.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="37a91-419">找不到連線。</span><span class="sxs-lookup"><span data-stu-id="37a91-419">The connection could not be found.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="37a91-420"><paramref name="startRecord" /> 參數小於 0。</span><span class="sxs-lookup"><span data-stu-id="37a91-420">The <paramref name="startRecord" /> parameter is less than 0.</span></span>  
  
<span data-ttu-id="37a91-421">-或-</span><span class="sxs-lookup"><span data-stu-id="37a91-421">-or-</span></span> 
<span data-ttu-id="37a91-422"><paramref name="maxRecords" /> 參數小於 0。</span><span class="sxs-lookup"><span data-stu-id="37a91-422">The <paramref name="maxRecords" /> parameter is less than 0.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="37a91-423">當覆寫<see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" />衍生類別時，請務必呼叫基底類別的<see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" />方法。</span><span class="sxs-lookup"><span data-stu-id="37a91-423">When overriding <see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /> in a derived class, be sure to call the base class's <see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /> method.</span></span></para></block>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="37a91-424">DbProviderFactory (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="37a91-424">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="37a91-425">ADO.NET 概觀</span><span class="sxs-lookup"><span data-stu-id="37a91-425">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="protected virtual int Fill (System.Data.DataSet dataSet, string srcTable, System.Data.IDataReader dataReader, int startRecord, int maxRecords);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 Fill(class System.Data.DataSet dataSet, string srcTable, class System.Data.IDataReader dataReader, int32 startRecord, int32 maxRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.String,System.Data.IDataReader,System.Int32,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int Fill(System::Data::DataSet ^ dataSet, System::String ^ srcTable, System::Data::IDataReader ^ dataReader, int startRecord, int maxRecords);" />
      <MemberSignature Language="F#" Value="override this.Fill : System.Data.DataSet * string * System.Data.IDataReader * int * int -&gt; int" Usage="dbDataAdapter.Fill (dataSet, srcTable, dataReader, startRecord, maxRecords)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" Index="0" FrameworkAlternate="netframework-1.1" />
        <Parameter Name="srcTable" Type="System.String" Index="1" FrameworkAlternate="netframework-1.1" />
        <Parameter Name="dataReader" Type="System.Data.IDataReader" Index="2" FrameworkAlternate="netframework-1.1" />
        <Parameter Name="startRecord" Type="System.Int32" Index="3" FrameworkAlternate="netframework-1.1" />
        <Parameter Name="maxRecords" Type="System.Int32" Index="4" FrameworkAlternate="netframework-1.1" />
      </Parameters>
      <Docs>
        <param name="dataSet">To be added.</param>
        <param name="srcTable">To be added.</param>
        <param name="dataReader">To be added.</param>
        <param name="startRecord">To be added.</param>
        <param name="maxRecords">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="protected virtual int Fill (System.Data.DataTable[] dataTables, int startRecord, int maxRecords, System.Data.IDbCommand command, System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 Fill(class System.Data.DataTable[] dataTables, int32 startRecord, int32 maxRecords, class System.Data.IDbCommand command, valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable[],System.Int32,System.Int32,System.Data.IDbCommand,System.Data.CommandBehavior)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function Fill (dataTables As DataTable(), startRecord As Integer, maxRecords As Integer, command As IDbCommand, behavior As CommandBehavior) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int Fill(cli::array &lt;System::Data::DataTable ^&gt; ^ dataTables, int startRecord, int maxRecords, System::Data::IDbCommand ^ command, System::Data::CommandBehavior behavior);" />
      <MemberSignature Language="F#" Value="override this.Fill : System.Data.DataTable[] * int * int * System.Data.IDbCommand * System.Data.CommandBehavior -&gt; int" Usage="dbDataAdapter.Fill (dataTables, startRecord, maxRecords, command, behavior)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataTables" Type="System.Data.DataTable[]" />
        <Parameter Name="startRecord" Type="System.Int32" />
        <Parameter Name="maxRecords" Type="System.Int32" />
        <Parameter Name="command" Type="System.Data.IDbCommand" />
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" />
      </Parameters>
      <Docs>
        <param name="dataTables"><span data-ttu-id="37a91-426">要從資料來源填入的 <see cref="T:System.Data.DataTable" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="37a91-426">The <see cref="T:System.Data.DataTable" /> objects to fill from the data source.</span></span></param>
        <param name="startRecord"><span data-ttu-id="37a91-427">要起始之以零為起始的資料錄編號。</span><span class="sxs-lookup"><span data-stu-id="37a91-427">The zero-based record number to start with.</span></span></param>
        <param name="maxRecords"><span data-ttu-id="37a91-428">要擷取之資料錄的最大數目。</span><span class="sxs-lookup"><span data-stu-id="37a91-428">The maximum number of records to retrieve.</span></span></param>
        <param name="command"><span data-ttu-id="37a91-429"><see cref="T:System.Data.IDbCommand" />，執行其以填入 <see cref="T:System.Data.DataTable" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="37a91-429">The <see cref="T:System.Data.IDbCommand" /> executed to fill the <see cref="T:System.Data.DataTable" /> objects.</span></span></param>
        <param name="behavior"><span data-ttu-id="37a91-430">其中一個 <see cref="T:System.Data.CommandBehavior" /> 值。</span><span class="sxs-lookup"><span data-stu-id="37a91-430">One of the <see cref="T:System.Data.CommandBehavior" /> values.</span></span></param>
        <summary><span data-ttu-id="37a91-431">使用 <see cref="T:System.Data.DataSet" /> 和 <see cref="T:System.Data.DataSet" /> 名稱，加入或重新整理 <see cref="T:System.Data.DataTable" /> 中指定範圍內的資料列，以符合那些在資料來源中的資料列。</span><span class="sxs-lookup"><span data-stu-id="37a91-431">Adds or refreshes rows in a specified range in the <see cref="T:System.Data.DataSet" /> to match those in the data source using the <see cref="T:System.Data.DataSet" /> and <see cref="T:System.Data.DataTable" /> names.</span></span></summary>
        <returns><span data-ttu-id="37a91-432">加入至資料的資料表 (Data Table) 或在其中重新整理的資料列數目。</span><span class="sxs-lookup"><span data-stu-id="37a91-432">The number of rows added to or refreshed in the data tables.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37a91-433">A `maxRecords` 0 的值取得開始記錄之後所發現的所有記錄。</span><span class="sxs-lookup"><span data-stu-id="37a91-433">A `maxRecords` value of 0 gets all records found after the start record.</span></span> <span data-ttu-id="37a91-434">如果`maxRecords`大於剩餘的資料列數目只會傳回其餘的資料列，不會發出錯誤。</span><span class="sxs-lookup"><span data-stu-id="37a91-434">If `maxRecords` is greater than the number of remaining rows, only the remaining rows are returned and no error is issued.</span></span>  
  
 <span data-ttu-id="37a91-435"><xref:System.Data.Common.DbDataAdapter.Fill%2A>方法會從使用 SELECT 陳述式的資料來源擷取資料。</span><span class="sxs-lookup"><span data-stu-id="37a91-435">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method retrieves the data from the data source using a SELECT statement.</span></span> <span data-ttu-id="37a91-436"><xref:System.Data.IDbConnection> SELECT 陳述式相關聯的物件必須有效，但它不需要開啟。</span><span class="sxs-lookup"><span data-stu-id="37a91-436">The <xref:System.Data.IDbConnection> object associated with the SELECT statement must be valid, but it does not need to be open.</span></span> <span data-ttu-id="37a91-437">如果<xref:System.Data.IDbConnection>關閉之前<xref:System.Data.Common.DbDataAdapter.Fill%2A>會呼叫它，它會開啟來擷取資料，然後關閉。</span><span class="sxs-lookup"><span data-stu-id="37a91-437">If the <xref:System.Data.IDbConnection> is closed before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it is opened to retrieve data, then closed.</span></span> <span data-ttu-id="37a91-438">如果連接已開啟之前<xref:System.Data.Common.DbDataAdapter.Fill%2A>是呼叫，它會保持開啟狀態。</span><span class="sxs-lookup"><span data-stu-id="37a91-438">If the connection is open before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="37a91-439">如果命令未傳回任何資料列，將資料表加入至<xref:System.Data.DataSet>，但會引發任何例外狀況。</span><span class="sxs-lookup"><span data-stu-id="37a91-439">If a command does not return any rows, no tables are added to the <xref:System.Data.DataSet>, but no exception is raised.</span></span>  
  
 <span data-ttu-id="37a91-440">如果<xref:System.Data.Common.DbDataAdapter>物件在填入遇到重複的資料行<xref:System.Data.DataTable>，它會產生後續的資料行，並使用模式的名稱 」*columnname*1"，"*columnname*2"，"*columnname*3 」，依此類推。</span><span class="sxs-lookup"><span data-stu-id="37a91-440">If the <xref:System.Data.Common.DbDataAdapter> object encounters duplicate columns while populating a <xref:System.Data.DataTable>, it will generate names for the subsequent columns, using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="37a91-441">如果內送資料包含未命名的資料行，它們會放在<xref:System.Data.DataSet>根據模式"Column1"、"Column2"，依此類推。</span><span class="sxs-lookup"><span data-stu-id="37a91-441">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span>  
  
 <span data-ttu-id="37a91-442">當指定的查詢傳回多個結果時，每個結果集被放在個別的資料表。</span><span class="sxs-lookup"><span data-stu-id="37a91-442">When the query specified returns multiple results, each result set is placed in a separate table.</span></span> <span data-ttu-id="37a91-443">其他結果集的命名方式將整數值附加至指定的資料表名稱 （例如，"Table"、"Table1"、"Table2"，等等）。</span><span class="sxs-lookup"><span data-stu-id="37a91-443">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on).</span></span> <span data-ttu-id="37a91-444">因為不會建立資料表的查詢不會傳回資料列，如果您要處理 insert 查詢，其後的 select 查詢，建立 select 查詢的資料表就會命名為"Table"，因為它是建立的第一個資料表。</span><span class="sxs-lookup"><span data-stu-id="37a91-444">Since no table is created for a query that does not return rows, if you were to process an insert query followed by a select query, the table created for the select query would be named "Table", because it is the first table created.</span></span> <span data-ttu-id="37a91-445">使用資料行和資料表名稱的應用程式應該確定 je v konfliktu 這些命名模式不會發生。</span><span class="sxs-lookup"><span data-stu-id="37a91-445">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="37a91-446"><xref:System.Data.Common.DbDataAdapter.Fill%2A>方法支援案例所在<xref:System.Data.DataSet>包含多個<xref:System.Data.DataTable>名稱只有大小寫不同的物件。</span><span class="sxs-lookup"><span data-stu-id="37a91-446">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method supports scenarios where the <xref:System.Data.DataSet> contains multiple <xref:System.Data.DataTable> objects whose names differ only by case.</span></span> <span data-ttu-id="37a91-447">在這種情況下，<xref:System.Data.Common.DbDataAdapter.Fill%2A>執行區分大小寫的比較，來尋找對應的資料表，並建立新的資料表，如果沒有完全相符項目存在。</span><span class="sxs-lookup"><span data-stu-id="37a91-447">In such situations, <xref:System.Data.Common.DbDataAdapter.Fill%2A> performs a case-sensitive comparison to find the corresponding table, and creates a new table if no exact match exists.</span></span> <span data-ttu-id="37a91-448">下列 C# 程式碼說明此行為。</span><span class="sxs-lookup"><span data-stu-id="37a91-448">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
dataset.Tables.Add("AAA");  
adapter.Fill(dataset, "aaa"); // Fills "aaa", which already exists in the DataSet.  
adapter.Fill(dataset, "Aaa"); // Adds a new table called "Aaa".  
```  
  
 <span data-ttu-id="37a91-449">如果<xref:System.Data.Common.DbDataAdapter.Fill%2A>呼叫時，<xref:System.Data.DataSet>只會包含一個<xref:System.Data.DataTable>名稱只有大小寫不同，，<xref:System.Data.DataTable>會更新。</span><span class="sxs-lookup"><span data-stu-id="37a91-449">If <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called and the <xref:System.Data.DataSet> contains only one <xref:System.Data.DataTable> whose name differs only by case, that <xref:System.Data.DataTable> is updated.</span></span> <span data-ttu-id="37a91-450">在此案例中，比較不區分大小寫。</span><span class="sxs-lookup"><span data-stu-id="37a91-450">In this scenario, the comparison is case insensitive.</span></span> <span data-ttu-id="37a91-451">下列 C# 程式碼說明此行為。</span><span class="sxs-lookup"><span data-stu-id="37a91-451">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
adapter.Fill(dataset, "AAA"); // Fills table "aaa" because only one similarly named table is in the DataSet.  
```  
  
 <span data-ttu-id="37a91-452">如果發生錯誤或例外狀況發生時填入資料的資料表，在發生錯誤之前所加入的資料列將保留在資料表中。</span><span class="sxs-lookup"><span data-stu-id="37a91-452">If an error or an exception is encountered while populating the data tables, rows added prior to the occurrence of the error remain in the data tables.</span></span> <span data-ttu-id="37a91-453">作業的其餘部分就會中止。</span><span class="sxs-lookup"><span data-stu-id="37a91-453">The remainder of the operation is aborted.</span></span>  
  
 <span data-ttu-id="37a91-454">當 SELECT 陳述式用來填入<xref:System.Data.DataTable>物件會傳回多個結果，例如批次 SQL 陳述式中，注意下列事項：</span><span class="sxs-lookup"><span data-stu-id="37a91-454">When the SELECT statement used to populate the <xref:System.Data.DataTable> objects returns multiple results, such as a batch SQL statement, be aware of the following:</span></span>  
  
-   <span data-ttu-id="37a91-455">處理批次 SQL 陳述式，從多個結果時`maxRecords`僅適用於第一個結果。</span><span class="sxs-lookup"><span data-stu-id="37a91-455">When processing multiple results from a batch SQL statement, `maxRecords` only applies to the first result.</span></span> <span data-ttu-id="37a91-456">這也適用於包含章節化的結果 (.NET Framework Data Provider for OLE DB 只) 的資料列。</span><span class="sxs-lookup"><span data-stu-id="37a91-456">The same is true for rows containing chaptered results (.NET Framework Data Provider for OLE DB only).</span></span> <span data-ttu-id="37a91-457">最上層結果會受到`maxRecords`，但是所有的子資料列會加入。</span><span class="sxs-lookup"><span data-stu-id="37a91-457">The top level result is limited by `maxRecords`, but all child rows are added.</span></span>  
  
-   <span data-ttu-id="37a91-458">如果其中一個結果包含錯誤時，會略過所有後續的結果。</span><span class="sxs-lookup"><span data-stu-id="37a91-458">If one of the results contains an error, all subsequent results are skipped.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="37a91-459">`DataSet`不會包含在所指定的記錄數目超過`maxRecords`。</span><span class="sxs-lookup"><span data-stu-id="37a91-459">The `DataSet` will not contain more than the number of records indicated by `maxRecords`.</span></span> <span data-ttu-id="37a91-460">不過，從伺服器仍然傳回整個查詢所產生的結果集。</span><span class="sxs-lookup"><span data-stu-id="37a91-460">However, the entire resultset generated by the query is still returned from the server.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.SystemException"><span data-ttu-id="37a91-461"><see cref="T:System.Data.DataSet" /> 無效。</span><span class="sxs-lookup"><span data-stu-id="37a91-461">The <see cref="T:System.Data.DataSet" /> is invalid.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="37a91-462">來源資料表無效。</span><span class="sxs-lookup"><span data-stu-id="37a91-462">The source table is invalid.</span></span>  
  
<span data-ttu-id="37a91-463">-或-</span><span class="sxs-lookup"><span data-stu-id="37a91-463">-or-</span></span> 
<span data-ttu-id="37a91-464">連接無效。</span><span class="sxs-lookup"><span data-stu-id="37a91-464">The connection is invalid.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="37a91-465">找不到連線。</span><span class="sxs-lookup"><span data-stu-id="37a91-465">The connection could not be found.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="37a91-466"><paramref name="startRecord" /> 參數小於 0。</span><span class="sxs-lookup"><span data-stu-id="37a91-466">The <paramref name="startRecord" /> parameter is less than 0.</span></span>  
  
<span data-ttu-id="37a91-467">-或-</span><span class="sxs-lookup"><span data-stu-id="37a91-467">-or-</span></span> 
<span data-ttu-id="37a91-468"><paramref name="maxRecords" /> 參數小於 0。</span><span class="sxs-lookup"><span data-stu-id="37a91-468">The <paramref name="maxRecords" /> parameter is less than 0.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="37a91-469">當覆寫<see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" />衍生類別時，請務必呼叫基底類別的<see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" />方法。</span><span class="sxs-lookup"><span data-stu-id="37a91-469">When overriding <see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /> in a derived class, be sure to call the base class's <see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /> method.</span></span></para></block>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="37a91-470">DbProviderFactory (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="37a91-470">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="37a91-471">ADO.NET 概觀</span><span class="sxs-lookup"><span data-stu-id="37a91-471">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="protected virtual int Fill (System.Data.DataSet dataSet, int startRecord, int maxRecords, string srcTable, System.Data.IDbCommand command, System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 Fill(class System.Data.DataSet dataSet, int32 startRecord, int32 maxRecords, string srcTable, class System.Data.IDbCommand command, valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String,System.Data.IDbCommand,System.Data.CommandBehavior)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int Fill(System::Data::DataSet ^ dataSet, int startRecord, int maxRecords, System::String ^ srcTable, System::Data::IDbCommand ^ command, System::Data::CommandBehavior behavior);" />
      <MemberSignature Language="F#" Value="override this.Fill : System.Data.DataSet * int * int * string * System.Data.IDbCommand * System.Data.CommandBehavior -&gt; int" Usage="dbDataAdapter.Fill (dataSet, startRecord, maxRecords, srcTable, command, behavior)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
        <Parameter Name="startRecord" Type="System.Int32" />
        <Parameter Name="maxRecords" Type="System.Int32" />
        <Parameter Name="srcTable" Type="System.String" />
        <Parameter Name="command" Type="System.Data.IDbCommand" />
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" />
      </Parameters>
      <Docs>
        <param name="dataSet"><span data-ttu-id="37a91-472">要填入資料錄和結構描述 (如果必要的話) 的 <see cref="T:System.Data.DataSet" />。</span><span class="sxs-lookup"><span data-stu-id="37a91-472">A <see cref="T:System.Data.DataSet" /> to fill with records and, if necessary, schema.</span></span></param>
        <param name="startRecord"><span data-ttu-id="37a91-473">要起始之以零為起始的資料錄編號。</span><span class="sxs-lookup"><span data-stu-id="37a91-473">The zero-based record number to start with.</span></span></param>
        <param name="maxRecords"><span data-ttu-id="37a91-474">要擷取之資料錄的最大數目。</span><span class="sxs-lookup"><span data-stu-id="37a91-474">The maximum number of records to retrieve.</span></span></param>
        <param name="srcTable"><span data-ttu-id="37a91-475">用於資料表對應的來源資料表名稱。</span><span class="sxs-lookup"><span data-stu-id="37a91-475">The name of the source table to use for table mapping.</span></span></param>
        <param name="command"><span data-ttu-id="37a91-476">用來從資料來源擷取資料列的 SQL SELECT 陳述式。</span><span class="sxs-lookup"><span data-stu-id="37a91-476">The SQL SELECT statement used to retrieve rows from the data source.</span></span></param>
        <param name="behavior"><span data-ttu-id="37a91-477">其中一個 <see cref="T:System.Data.CommandBehavior" /> 值。</span><span class="sxs-lookup"><span data-stu-id="37a91-477">One of the <see cref="T:System.Data.CommandBehavior" /> values.</span></span></param>
        <summary><span data-ttu-id="37a91-478">使用 <see cref="T:System.Data.DataSet" />、來源資料表名稱、命令字串和命令行為，加入或重新整理 <see cref="T:System.Data.DataSet" /> 中指定範圍內的資料列，以符合那些在資料來源中的資料列。</span><span class="sxs-lookup"><span data-stu-id="37a91-478">Adds or refreshes rows in a specified range in the <see cref="T:System.Data.DataSet" /> to match those in the data source using the <see cref="T:System.Data.DataSet" /> and source table names, command string, and command behavior.</span></span></summary>
        <returns><span data-ttu-id="37a91-479">成功加入至 <see cref="T:System.Data.DataSet" /> 或在其中重新整理的資料列數目。</span><span class="sxs-lookup"><span data-stu-id="37a91-479">The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataSet" />.</span></span> <span data-ttu-id="37a91-480">這不包含被不傳回資料列之陳述式所影響的資料列。</span><span class="sxs-lookup"><span data-stu-id="37a91-480">This does not include rows affected by statements that do not return rows.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37a91-481"><xref:System.Data.Common.DbDataAdapter.Fill%2A>方法會從使用 SELECT 陳述式指定由相關聯的資料來源擷取資料列<xref:System.Data.IDbDataAdapter.SelectCommand%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="37a91-481">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method retrieves rows from the data source using the SELECT statement specified by an associated <xref:System.Data.IDbDataAdapter.SelectCommand%2A> property.</span></span> <span data-ttu-id="37a91-482">SELECT 陳述式相關聯的連接物件必須是有效的但它不需要開啟。</span><span class="sxs-lookup"><span data-stu-id="37a91-482">The connection object associated with the SELECT statement must be valid, but it does not need to be open.</span></span> <span data-ttu-id="37a91-483">如果連線已關閉之前<xref:System.Data.Common.DbDataAdapter.Fill%2A>會呼叫它，它會開啟來擷取資料，然後關閉。</span><span class="sxs-lookup"><span data-stu-id="37a91-483">If the connection is closed before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it is opened to retrieve data, then closed.</span></span> <span data-ttu-id="37a91-484">如果連接已開啟之前<xref:System.Data.Common.DbDataAdapter.Fill%2A>是呼叫，它會保持開啟狀態。</span><span class="sxs-lookup"><span data-stu-id="37a91-484">If the connection is open before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="37a91-485"><xref:System.Data.Common.DbDataAdapter.Fill%2A>作業，然後將資料列加入到目的地<xref:System.Data.DataTable>中的物件<xref:System.Data.DataSet>建立<xref:System.Data.DataTable>物件如果它們尚不存在。</span><span class="sxs-lookup"><span data-stu-id="37a91-485">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> operation then adds the rows to destination <xref:System.Data.DataTable> objects in the <xref:System.Data.DataSet>, creating the <xref:System.Data.DataTable> objects if they do not already exist.</span></span> <span data-ttu-id="37a91-486">建立時<xref:System.Data.DataTable>物件，<xref:System.Data.Common.DbDataAdapter.Fill%2A>作業通常會建立只有資料行名稱中繼資料。</span><span class="sxs-lookup"><span data-stu-id="37a91-486">When creating <xref:System.Data.DataTable> objects, the <xref:System.Data.Common.DbDataAdapter.Fill%2A> operation normally creates only column name metadata.</span></span> <span data-ttu-id="37a91-487">不過，如果<xref:System.Data.IDataAdapter.MissingSchemaAction%2A>屬性設定為`AddWithKey`，也會建立適當的主索引鍵和條件約束。</span><span class="sxs-lookup"><span data-stu-id="37a91-487">However, if the <xref:System.Data.IDataAdapter.MissingSchemaAction%2A> property is set to `AddWithKey`, appropriate primary keys and constraints are also created.</span></span>  
  
 <span data-ttu-id="37a91-488">如果<xref:System.Data.Common.DbDataAdapter>遇到重複的資料行在填入<xref:System.Data.DataTable>，它會產生後續的資料行，並使用模式的名稱 」*columnname*1""*columnname*2"，"*columnname*3"，依此類推。</span><span class="sxs-lookup"><span data-stu-id="37a91-488">If the <xref:System.Data.Common.DbDataAdapter> encounters duplicate columns while populating a <xref:System.Data.DataTable>, it generates names for the subsequent columns, using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="37a91-489">如果內送資料包含未命名的資料行，它們會放在<xref:System.Data.DataSet>根據模式"Column1"、"Column2"，依此類推。</span><span class="sxs-lookup"><span data-stu-id="37a91-489">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span> <span data-ttu-id="37a91-490">當多個結果集加入至<xref:System.Data.DataSet>放置於個別的資料表中每個結果集。</span><span class="sxs-lookup"><span data-stu-id="37a91-490">When multiple result sets are added to the <xref:System.Data.DataSet> each result set is placed in a separate table.</span></span> <span data-ttu-id="37a91-491">其他結果集的命名方式將整數值附加至指定的資料表名稱 （例如，"Table"、"Table1"、"Table2"，等等）。</span><span class="sxs-lookup"><span data-stu-id="37a91-491">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on).</span></span> <span data-ttu-id="37a91-492">使用資料行和資料表名稱的應用程式應該確定 je v konfliktu 這些命名模式不會發生。</span><span class="sxs-lookup"><span data-stu-id="37a91-492">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="37a91-493"><xref:System.Data.Common.DbDataAdapter.Fill%2A>方法支援案例所在<xref:System.Data.DataSet>包含多個<xref:System.Data.DataTable>名稱只有大小寫不同的物件。</span><span class="sxs-lookup"><span data-stu-id="37a91-493">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method supports scenarios where the <xref:System.Data.DataSet> contains multiple <xref:System.Data.DataTable> objects whose names differ only by case.</span></span> <span data-ttu-id="37a91-494">在這種情況下，<xref:System.Data.Common.DbDataAdapter.Fill%2A>執行區分大小寫的比較，來尋找對應的資料表，並建立新的資料表，如果沒有完全相符項目存在。</span><span class="sxs-lookup"><span data-stu-id="37a91-494">In such situations, <xref:System.Data.Common.DbDataAdapter.Fill%2A> performs a case-sensitive comparison to find the corresponding table, and creates a new table if no exact match exists.</span></span> <span data-ttu-id="37a91-495">下列 C# 程式碼說明此行為。</span><span class="sxs-lookup"><span data-stu-id="37a91-495">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
dataset.Tables.Add("AAA");  
adapter.Fill(dataset, "aaa"); // Fills "aaa", which already exists in the DataSet.  
adapter.Fill(dataset, "Aaa"); // Adds a new table called "Aaa".  
```  
  
 <span data-ttu-id="37a91-496">如果<xref:System.Data.Common.DbDataAdapter.Fill%2A>呼叫時，<xref:System.Data.DataSet>只會包含一個<xref:System.Data.DataTable>名稱只有大小寫不同，，<xref:System.Data.DataTable>會更新。</span><span class="sxs-lookup"><span data-stu-id="37a91-496">If <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called and the <xref:System.Data.DataSet> contains only one <xref:System.Data.DataTable> whose name differs only by case, that <xref:System.Data.DataTable> is updated.</span></span> <span data-ttu-id="37a91-497">在此案例中，比較不區分大小寫。</span><span class="sxs-lookup"><span data-stu-id="37a91-497">In this scenario, the comparison is case insensitive.</span></span> <span data-ttu-id="37a91-498">下列 C# 程式碼說明此行為。</span><span class="sxs-lookup"><span data-stu-id="37a91-498">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
adapter.Fill(dataset, "AAA"); // Fills table "aaa" because only one similarly named table is in the DataSet.  
```  
  
 <span data-ttu-id="37a91-499">您可以使用<xref:System.Data.Common.DbDataAdapter.Fill%2A>上多次相同的方法<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="37a91-499">You can use the <xref:System.Data.Common.DbDataAdapter.Fill%2A> method multiple times on the same <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="37a91-500">如果主索引鍵存在，內送資料列會合併與相符的資料列已經存在。</span><span class="sxs-lookup"><span data-stu-id="37a91-500">If a primary key exists, incoming rows are merged with matching rows that already exist.</span></span> <span data-ttu-id="37a91-501">如果沒有主索引鍵存在，將內送資料列附加至<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="37a91-501">If no primary key exists, incoming rows are appended to the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="37a91-502">如果 `SelectCommand` 傳回 OUTER JOIN 的結果，則 `DataAdapter` 便不會為產生的 <xref:System.Data.DataTable.PrimaryKey%2A> 設定 <xref:System.Data.DataTable>值。</span><span class="sxs-lookup"><span data-stu-id="37a91-502">If the `SelectCommand` returns the results of an OUTER JOIN, the `DataAdapter` does not set a <xref:System.Data.DataTable.PrimaryKey%2A> value for the resulting <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="37a91-503">您必須明確定義以確保正確解析重複的資料列的主索引鍵。</span><span class="sxs-lookup"><span data-stu-id="37a91-503">You must explicitly define the primary key to ensure that duplicate rows are resolved correctly.</span></span> <span data-ttu-id="37a91-504">如需詳細資訊，請參閱 <<c0> [ 定義主索引鍵](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md)。</span><span class="sxs-lookup"><span data-stu-id="37a91-504">For more information, see [Defining Primary Keys](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="37a91-505">當處理批次 SQL 陳述式會傳回多個結果，實作<xref:System.Data.Common.DbDataAdapter.Fill%2A>和<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>.NET Framework 資料提供者會擷取第一個結果的結構描述資訊。</span><span class="sxs-lookup"><span data-stu-id="37a91-505">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.Fill%2A> and <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for a .NET Framework data provider retrieves schema information for only the first result.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="37a91-506">來源資料表無效。</span><span class="sxs-lookup"><span data-stu-id="37a91-506">The source table is invalid.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="37a91-507"><paramref name="startRecord" /> 參數小於 0。</span><span class="sxs-lookup"><span data-stu-id="37a91-507">The <paramref name="startRecord" /> parameter is less than 0.</span></span>  
  
<span data-ttu-id="37a91-508">-或-</span><span class="sxs-lookup"><span data-stu-id="37a91-508">-or-</span></span> 
<span data-ttu-id="37a91-509"><paramref name="maxRecords" /> 參數小於 0。</span><span class="sxs-lookup"><span data-stu-id="37a91-509">The <paramref name="maxRecords" /> parameter is less than 0.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="37a91-510">這個多載<see cref="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)" />方法受到保護，設計用於使用.NET Framework 資料提供者。</span><span class="sxs-lookup"><span data-stu-id="37a91-510">This overload of the <see cref="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)" /> method is protected and is designed for use by a .NET Framework data provider.</span></span></para></block>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="37a91-511">DbProviderFactory (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="37a91-511">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="37a91-512">ADO.NET 概觀</span><span class="sxs-lookup"><span data-stu-id="37a91-512">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FillCommandBehavior">
      <MemberSignature Language="C#" Value="protected internal System.Data.CommandBehavior FillCommandBehavior { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.CommandBehavior FillCommandBehavior" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataAdapter.FillCommandBehavior" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Property FillCommandBehavior As CommandBehavior" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property System::Data::CommandBehavior FillCommandBehavior { System::Data::CommandBehavior get(); void set(System::Data::CommandBehavior value); };" />
      <MemberSignature Language="F#" Value="member this.FillCommandBehavior : System.Data.CommandBehavior with get, set" Usage="System.Data.Common.DbDataAdapter.FillCommandBehavior" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.CommandBehavior</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="37a91-513">取得或設定用來填入資料配接器 (Adapter) 之命令的行為。</span><span class="sxs-lookup"><span data-stu-id="37a91-513">Gets or sets the behavior of the command used to fill the data adapter.</span></span></summary>
        <value><span data-ttu-id="37a91-514">命令的 <see cref="T:System.Data.CommandBehavior" />，用於填入資料配接器。</span><span class="sxs-lookup"><span data-stu-id="37a91-514">The <see cref="T:System.Data.CommandBehavior" /> of the command used to fill the data adapter.</span></span></value>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="37a91-515">DbProviderFactory (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="37a91-515">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="37a91-516">ADO.NET 概觀</span><span class="sxs-lookup"><span data-stu-id="37a91-516">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FillError">
      <MemberSignature Language="C#" Value="public event System.Data.FillErrorEventHandler FillError;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.FillErrorEventHandler FillError" />
      <MemberSignature Language="DocId" Value="E:System.Data.Common.DbDataAdapter.FillError" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event FillError As FillErrorEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::FillErrorEventHandler ^ FillError;" />
      <MemberSignature Language="F#" Value="member this.FillError : System.Data.FillErrorEventHandler " Usage="member this.FillError : System.Data.FillErrorEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DbDataAdapter_FillError")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.FillErrorEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="FillSchema">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="37a91-517">加入 <see cref="T:System.Data.DataTable" /> 至 <see cref="T:System.Data.DataSet" />，並且設定結構描述，以符合資料來源中的資料表。</span><span class="sxs-lookup"><span data-stu-id="37a91-517">Adds a <see cref="T:System.Data.DataTable" /> to a <see cref="T:System.Data.DataSet" /> and configures the schema to match that in the data source.</span></span></summary>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="37a91-518">ADO.NET 概觀</span><span class="sxs-lookup"><span data-stu-id="37a91-518">ADO.NET Overview</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="FillSchema">
      <MemberSignature Language="C#" Value="public override System.Data.DataTable[] FillSchema (System.Data.DataSet dataSet, System.Data.SchemaType schemaType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.DataTable[] FillSchema(class System.Data.DataSet dataSet, valuetype System.Data.SchemaType schemaType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Data::DataTable ^&gt; ^ FillSchema(System::Data::DataSet ^ dataSet, System::Data::SchemaType schemaType);" />
      <MemberSignature Language="F#" Value="override this.FillSchema : System.Data.DataSet * System.Data.SchemaType -&gt; System.Data.DataTable[]" Usage="dbDataAdapter.FillSchema (dataSet, schemaType)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
        <Parameter Name="schemaType" Type="System.Data.SchemaType" />
      </Parameters>
      <Docs>
        <param name="dataSet"><span data-ttu-id="37a91-519">用以插入結構描述的 <see cref="T:System.Data.DataSet" />。</span><span class="sxs-lookup"><span data-stu-id="37a91-519">A <see cref="T:System.Data.DataSet" /> to insert the schema in.</span></span></param>
        <param name="schemaType"><span data-ttu-id="37a91-520">其中一個 <see cref="T:System.Data.SchemaType" /> 值，指定如何插入結構描述。</span><span class="sxs-lookup"><span data-stu-id="37a91-520">One of the <see cref="T:System.Data.SchemaType" /> values that specify how to insert the schema.</span></span></param>
        <summary><span data-ttu-id="37a91-521">新增一個名為 "Table" 的 <see cref="T:System.Data.DataTable" /> 至指定的 <see cref="T:System.Data.DataSet" />，並且設定符合指定的 <see cref="T:System.Data.SchemaType" /> 上之資料來源的結構描述。</span><span class="sxs-lookup"><span data-stu-id="37a91-521">Adds a <see cref="T:System.Data.DataTable" /> named "Table" to the specified <see cref="T:System.Data.DataSet" /> and configures the schema to match that in the data source based on the specified <see cref="T:System.Data.SchemaType" />.</span></span></summary>
        <returns><span data-ttu-id="37a91-522">加入 <see cref="T:System.Data.DataSet" /> 之 <see cref="T:System.Data.DataTable" /> 物件集合的參考。</span><span class="sxs-lookup"><span data-stu-id="37a91-522">A reference to a collection of <see cref="T:System.Data.DataTable" /> objects that were added to the <see cref="T:System.Data.DataSet" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37a91-523">這個方法會擷取從資料來源使用的結構描述資訊<xref:System.Data.IDbDataAdapter.SelectCommand%2A>。</span><span class="sxs-lookup"><span data-stu-id="37a91-523">This method retrieves the schema information from the data source using the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>.</span></span>  
  
 <span data-ttu-id="37a91-524">A<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>作業會將加入<xref:System.Data.DataTable>到目的地<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="37a91-524">A <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> operation adds a <xref:System.Data.DataTable> to the destination <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="37a91-525">接著它會加入至資料行<xref:System.Data.DataColumnCollection>的<xref:System.Data.DataTable>，並設定下列<xref:System.Data.DataColumn>如果它們存在於資料來源的屬性：</span><span class="sxs-lookup"><span data-stu-id="37a91-525">It then adds columns to the <xref:System.Data.DataColumnCollection> of the <xref:System.Data.DataTable>, and configures the following <xref:System.Data.DataColumn> properties if they exist at the data source:</span></span>  
  
-   <xref:System.Data.DataColumn.AllowDBNull%2A>  
  
-   <span data-ttu-id="37a91-526"><xref:System.Data.DataColumn.AutoIncrement%2A>.</span><span class="sxs-lookup"><span data-stu-id="37a91-526"><xref:System.Data.DataColumn.AutoIncrement%2A>.</span></span> <span data-ttu-id="37a91-527">您必須設定<xref:System.Data.DataColumn.AutoIncrementStep%2A>和<xref:System.Data.DataColumn.AutoIncrementSeed%2A>分開。</span><span class="sxs-lookup"><span data-stu-id="37a91-527">You must set <xref:System.Data.DataColumn.AutoIncrementStep%2A> and <xref:System.Data.DataColumn.AutoIncrementSeed%2A> separately.</span></span>  
  
-   <xref:System.Data.DataColumn.MaxLength%2A>  
  
-   <xref:System.Data.DataColumn.ReadOnly%2A>  
  
-   <xref:System.Data.DataColumn.Unique%2A>  
  
 <span data-ttu-id="37a91-528"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 也會設定<xref:System.Data.DataTable.PrimaryKey%2A>和<xref:System.Data.DataTable.Constraints%2A>屬性根據下列規則：</span><span class="sxs-lookup"><span data-stu-id="37a91-528"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> also configures the <xref:System.Data.DataTable.PrimaryKey%2A> and <xref:System.Data.DataTable.Constraints%2A> properties according to the following rules:</span></span>  
  
-   <span data-ttu-id="37a91-529">如果所傳回的一或多個主要的索引鍵資料行<xref:System.Data.IDbDataAdapter.SelectCommand%2A>，做為主要索引鍵資料行<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="37a91-529">If one or more primary key columns are returned by the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>, they are used as the primary key columns for the <xref:System.Data.DataTable>.</span></span>  
  
-   <span data-ttu-id="37a91-530">如果傳回沒有主索引鍵資料行，但唯一資料行，會使用唯一的資料行作為主索引鍵，並僅有，唯一的資料行都不可為 null。</span><span class="sxs-lookup"><span data-stu-id="37a91-530">If no primary key columns are returned but unique columns are, the unique columns are used as the primary key if, and only if, all the unique columns are nonnullable.</span></span> <span data-ttu-id="37a91-531">如果任何資料行可為 null，<xref:System.Data.UniqueConstraint>新增至<xref:System.Data.ConstraintCollection>，但<xref:System.Data.DataTable.PrimaryKey%2A>屬性未設定。</span><span class="sxs-lookup"><span data-stu-id="37a91-531">If any of the columns are nullable, a <xref:System.Data.UniqueConstraint> is added to the <xref:System.Data.ConstraintCollection>, but the <xref:System.Data.DataTable.PrimaryKey%2A> property is not set.</span></span>  
  
-   <span data-ttu-id="37a91-532">如果傳回主要索引鍵資料行及唯一的資料行，將主索引鍵資料行做為主要索引鍵資料行<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="37a91-532">If both primary key columns and unique columns are returned, the primary key columns are used as the primary key columns for the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="37a91-533">請注意，會將主索引鍵和唯一條件約束加入至<xref:System.Data.ConstraintCollection>根據前述規則，但其他條件約束類型不會新增。</span><span class="sxs-lookup"><span data-stu-id="37a91-533">Note that primary keys and unique constraints are added to the <xref:System.Data.ConstraintCollection> according to the preceding rules, but other constraint types are not added.</span></span>  
  
 <span data-ttu-id="37a91-534">如果唯一的叢集資料行或將 SQL Server 資料表中的資料行上定義索引和叢集索引中的資料行的名稱將會傳回一組個別的資料行上定義主索引鍵條件約束。</span><span class="sxs-lookup"><span data-stu-id="37a91-534">If a unique clustered index is defined on a column or columns in a SQL Server table and the primary key constraint is defined on a separate set of columns, then the names of the columns in the clustered index will be returned.</span></span> <span data-ttu-id="37a91-535">若要傳回的名稱或主索引鍵資料行的名稱，使用指定的主索引鍵名稱的 SELECT 陳述式中的查詢提示。</span><span class="sxs-lookup"><span data-stu-id="37a91-535">To return the name or names of the primary key columns, use a query hint with the SELECT statement that specifies the name of the primary key index.</span></span> <span data-ttu-id="37a91-536">如需指定查詢提示的詳細資訊，請參閱[查詢提示 & Amp;#40;transact-SQL&AMP;#41;](https://msdn.microsoft.com/library/ms181714.aspx)。</span><span class="sxs-lookup"><span data-stu-id="37a91-536">For more information about specifying query hints, see [Query Hint (Transact-SQL)](https://msdn.microsoft.com/library/ms181714.aspx).</span></span>  
  
 <span data-ttu-id="37a91-537">主索引鍵資訊會使用於<xref:System.Data.Common.DbDataAdapter.Fill%2A>來尋找和取代任何符合其索引鍵資料行的資料列。</span><span class="sxs-lookup"><span data-stu-id="37a91-537">Primary key information is used during <xref:System.Data.Common.DbDataAdapter.Fill%2A> to find and replace any rows whose key columns match.</span></span> <span data-ttu-id="37a91-538">如果這不是所要的行為，使用<xref:System.Data.Common.DbDataAdapter.Fill%2A>但未要求結構描述資訊。</span><span class="sxs-lookup"><span data-stu-id="37a91-538">If this is not the desired behavior, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> without requesting schema information.</span></span>  
  
 <span data-ttu-id="37a91-539">如果<xref:System.Data.IDataAdapter>遇到重複的資料行在填入<xref:System.Data.DataTable>，它會產生後續的資料行，並使用模式的名稱 」*columnname*1""*columnname*2"，"*columnname*3"，依此類推。</span><span class="sxs-lookup"><span data-stu-id="37a91-539">If the <xref:System.Data.IDataAdapter> encounters duplicate columns while populating a <xref:System.Data.DataTable>, it generates names for the subsequent columns, using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="37a91-540">如果內送資料包含未命名的資料行，它們會放在<xref:System.Data.DataSet>根據模式"Column1"、"Column2"，依此類推。</span><span class="sxs-lookup"><span data-stu-id="37a91-540">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span> <span data-ttu-id="37a91-541">當多個結果集加入至<xref:System.Data.DataSet>放置於個別的資料表中每個結果集。</span><span class="sxs-lookup"><span data-stu-id="37a91-541">When multiple result sets are added to the <xref:System.Data.DataSet> each result set is placed in a separate table.</span></span> <span data-ttu-id="37a91-542">其他結果集的命名方式將整數值附加至指定的資料表名稱 （例如，「 資料表 」、"Table1"、"Table2"，等等。）。</span><span class="sxs-lookup"><span data-stu-id="37a91-542">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on.).</span></span> <span data-ttu-id="37a91-543">使用資料行和資料表名稱的應用程式應該確定 je v konfliktu 這些命名模式不會發生。</span><span class="sxs-lookup"><span data-stu-id="37a91-543">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="37a91-544"><xref:System.Data.IDbConnection> Select 命令相關聯的物件必須有效，但它不需要開啟。</span><span class="sxs-lookup"><span data-stu-id="37a91-544">The <xref:System.Data.IDbConnection> object associated with the select command must be valid, but it does not need to open.</span></span> <span data-ttu-id="37a91-545">如果<xref:System.Data.IDbConnection>關閉之前<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>會呼叫它，它會開啟來擷取資料，然後關閉。</span><span class="sxs-lookup"><span data-stu-id="37a91-545">If the <xref:System.Data.IDbConnection> is closed before <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called, it is opened to retrieve data, then closed.</span></span> <span data-ttu-id="37a91-546">如果連接已開啟之前<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>是呼叫，它會處於開啟狀態。</span><span class="sxs-lookup"><span data-stu-id="37a91-546">If the connection is open before <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called, it is left open.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="37a91-547">當處理批次 SQL 陳述式會傳回多個結果，實作<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>的.NET Framework Data Provider for OLE DB 擷取第一個結果的結構描述資訊。</span><span class="sxs-lookup"><span data-stu-id="37a91-547">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</span></span> <span data-ttu-id="37a91-548">若要擷取多個結果的結構描述資訊，請使用<xref:System.Data.Common.DbDataAdapter.Fill%2A>具有<xref:System.Data.MissingSchemaAction>設定為`AddWithKey`。</span><span class="sxs-lookup"><span data-stu-id="37a91-548">To retrieve schema information for multiple results, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> with the <xref:System.Data.MissingSchemaAction> set to `AddWithKey`.</span></span>  
  
 <span data-ttu-id="37a91-549">使用 <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 時，.NET Framework Data Provider for SQL Server 會將 FOR BROWSE 子句附加到正要執行的陳述式。</span><span class="sxs-lookup"><span data-stu-id="37a91-549">When using <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, the .NET Framework Data Provider for SQL Server appends a FOR BROWSE clause to the statement being executed.</span></span> <span data-ttu-id="37a91-550">使用者應注意潛在的副作用，例如使用 SET FMTONLY ON 陳述式的干擾。</span><span class="sxs-lookup"><span data-stu-id="37a91-550">The user should be aware of potential side effects, such as interference with the use of SET FMTONLY ON statements.</span></span> <span data-ttu-id="37a91-551">如需詳細資訊，請參閱 [SET FMTONLY (Transact-SQL)](/sql/t-sql/statements/set-fmtonly-transact-sql)。</span><span class="sxs-lookup"><span data-stu-id="37a91-551">For more information, see [SET FMTONLY (Transact-SQL)](/sql/t-sql/statements/set-fmtonly-transact-sql).</span></span>
  
   
  
## Examples  
 <span data-ttu-id="37a91-552">下列範例會使用衍生的類別中， <xref:System.Data.SqlClient.SqlDataAdapter>，以填滿<xref:System.Data.DataSet>結構描述，且會傳回<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="37a91-552">The following example uses the derived class, <xref:System.Data.SqlClient.SqlDataAdapter>, to fill a <xref:System.Data.DataSet> with the schema, and returns a <xref:System.Data.DataSet>.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.FillSchema1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.FillSchema1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.FillSchema1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.FillSchema1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="37a91-553">DbProviderFactory</span><span class="sxs-lookup"><span data-stu-id="37a91-553">DbProviderFactories</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="37a91-554">ADO.NET 概觀</span><span class="sxs-lookup"><span data-stu-id="37a91-554">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FillSchema">
      <MemberSignature Language="C#" Value="public System.Data.DataTable FillSchema (System.Data.DataTable dataTable, System.Data.SchemaType schemaType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataTable FillSchema(class System.Data.DataTable dataTable, valuetype System.Data.SchemaType schemaType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataTable ^ FillSchema(System::Data::DataTable ^ dataTable, System::Data::SchemaType schemaType);" />
      <MemberSignature Language="F#" Value="override this.FillSchema : System.Data.DataTable * System.Data.SchemaType -&gt; System.Data.DataTable" Usage="dbDataAdapter.FillSchema (dataTable, schemaType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataTable" Type="System.Data.DataTable" />
        <Parameter Name="schemaType" Type="System.Data.SchemaType" />
      </Parameters>
      <Docs>
        <param name="dataTable"><span data-ttu-id="37a91-555">要從資料來源以結構描述填入的 <see cref="T:System.Data.DataTable" />。</span><span class="sxs-lookup"><span data-stu-id="37a91-555">The <see cref="T:System.Data.DataTable" /> to be filled with the schema from the data source.</span></span></param>
        <param name="schemaType"><span data-ttu-id="37a91-556">其中一個 <see cref="T:System.Data.SchemaType" /> 值。</span><span class="sxs-lookup"><span data-stu-id="37a91-556">One of the <see cref="T:System.Data.SchemaType" /> values.</span></span></param>
        <summary><span data-ttu-id="37a91-557">根據指定的 <see cref="T:System.Data.SchemaType" />，設定指定的 <see cref="T:System.Data.DataTable" /> 結構描述。</span><span class="sxs-lookup"><span data-stu-id="37a91-557">Configures the schema of the specified <see cref="T:System.Data.DataTable" /> based on the specified <see cref="T:System.Data.SchemaType" />.</span></span></summary>
        <returns><span data-ttu-id="37a91-558">包含資料來源所傳回結構描述資訊的 <see cref="T:System.Data.DataTable" />。</span><span class="sxs-lookup"><span data-stu-id="37a91-558">A <see cref="T:System.Data.DataTable" /> that contains schema information returned from the data source.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37a91-559"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A>方法會擷取結構描述從資料來源使用<xref:System.Data.IDbDataAdapter.SelectCommand%2A>。</span><span class="sxs-lookup"><span data-stu-id="37a91-559">The <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> method retrieves the schema from the data source using the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>.</span></span> <span data-ttu-id="37a91-560">連接物件相關聯<xref:System.Data.IDbDataAdapter.SelectCommand%2A>必須是有效的但它不需要開啟。</span><span class="sxs-lookup"><span data-stu-id="37a91-560">The connection object associated with the <xref:System.Data.IDbDataAdapter.SelectCommand%2A> must be valid, but it does not need to be open.</span></span> <span data-ttu-id="37a91-561">如果連線已關閉之前<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>會呼叫它，它會開啟來擷取資料，然後關閉。</span><span class="sxs-lookup"><span data-stu-id="37a91-561">If the connection is closed before <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called, it is opened to retrieve data, then closed.</span></span> <span data-ttu-id="37a91-562">如果連接已開啟之前<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>是呼叫，它會保持開啟狀態。</span><span class="sxs-lookup"><span data-stu-id="37a91-562">If the connection is open before <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="37a91-563">A<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>作業會傳回<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="37a91-563">A <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> operation returns a <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="37a91-564">接著它會加入至資料行<xref:System.Data.DataColumnCollection>的<xref:System.Data.DataTable>，並設定下列<xref:System.Data.DataColumn>如果它們存在於資料來源的屬性：</span><span class="sxs-lookup"><span data-stu-id="37a91-564">It then adds columns to the <xref:System.Data.DataColumnCollection> of the <xref:System.Data.DataTable>, and configures the following <xref:System.Data.DataColumn> properties if they exist at the data source:</span></span>  
  
-   <xref:System.Data.DataColumn.AllowDBNull%2A>  
  
-   <span data-ttu-id="37a91-565"><xref:System.Data.DataColumn.AutoIncrement%2A>.</span><span class="sxs-lookup"><span data-stu-id="37a91-565"><xref:System.Data.DataColumn.AutoIncrement%2A>.</span></span> <span data-ttu-id="37a91-566">您必須設定<xref:System.Data.DataColumn.AutoIncrementStep%2A>和<xref:System.Data.DataColumn.AutoIncrementSeed%2A>分開。</span><span class="sxs-lookup"><span data-stu-id="37a91-566">You must set <xref:System.Data.DataColumn.AutoIncrementStep%2A> and <xref:System.Data.DataColumn.AutoIncrementSeed%2A> separately.</span></span>  
  
-   <xref:System.Data.DataColumn.MaxLength%2A>  
  
-   <xref:System.Data.DataColumn.ReadOnly%2A>  
  
-   <xref:System.Data.DataColumn.Unique%2A>  
  
 <span data-ttu-id="37a91-567"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 也會設定<xref:System.Data.DataTable.PrimaryKey%2A>和<xref:System.Data.DataTable.Constraints%2A>屬性根據下列規則：</span><span class="sxs-lookup"><span data-stu-id="37a91-567"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> also configures the <xref:System.Data.DataTable.PrimaryKey%2A> and <xref:System.Data.DataTable.Constraints%2A> properties according to the following rules:</span></span>  
  
-   <span data-ttu-id="37a91-568">如果<xref:System.Data.DataTable.PrimaryKey%2A>具有已定義`DataTable`，或`DataTable`包含的資料，`PrimaryKey`將不會設定屬性。</span><span class="sxs-lookup"><span data-stu-id="37a91-568">If a <xref:System.Data.DataTable.PrimaryKey%2A> has already been defined for the `DataTable`, or the `DataTable` contains data, the `PrimaryKey` property will not be set.</span></span>  
  
-   <span data-ttu-id="37a91-569">如果所傳回的一或多個主要的索引鍵資料行<xref:System.Data.IDbDataAdapter.SelectCommand%2A>，做為主要索引鍵資料行`DataTable`。</span><span class="sxs-lookup"><span data-stu-id="37a91-569">If one or more primary key columns are returned by the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>, they are used as the primary key columns for the `DataTable`.</span></span>  
  
-   <span data-ttu-id="37a91-570">如果傳回沒有主索引鍵資料行，但唯一資料行，會使用唯一的資料行作為主索引鍵，並僅有，唯一的資料行都不可為 null。</span><span class="sxs-lookup"><span data-stu-id="37a91-570">If no primary key columns are returned but unique columns are, the unique columns are used as the primary key if, and only if, all the unique columns are nonnullable.</span></span> <span data-ttu-id="37a91-571">如果任何資料行可為 null，<xref:System.Data.UniqueConstraint>新增至<xref:System.Data.ConstraintCollection>，但`PrimaryKey`屬性未設定。</span><span class="sxs-lookup"><span data-stu-id="37a91-571">If any of the columns are nullable, a <xref:System.Data.UniqueConstraint> is added to the <xref:System.Data.ConstraintCollection>, but the `PrimaryKey` property is not set.</span></span>  
  
-   <span data-ttu-id="37a91-572">如果傳回主要索引鍵資料行及唯一的資料行，將主索引鍵資料行做為主要索引鍵資料行`DataTable`。</span><span class="sxs-lookup"><span data-stu-id="37a91-572">If both primary key columns and unique columns are returned, the primary key columns are used as the primary key columns for the `DataTable`.</span></span>  
  
 <span data-ttu-id="37a91-573">請注意，會將主索引鍵和唯一條件約束加入至<xref:System.Data.ConstraintCollection>根據前述規則，但其他條件約束類型不會新增。</span><span class="sxs-lookup"><span data-stu-id="37a91-573">Note that primary keys and unique constraints are added to the <xref:System.Data.ConstraintCollection> according to the preceding rules, but other constraint types are not added.</span></span> <span data-ttu-id="37a91-574">此程序可能需要數個來回伺服器。</span><span class="sxs-lookup"><span data-stu-id="37a91-574">This process may require several round-trips to the server.</span></span>  
  
 <span data-ttu-id="37a91-575">如果唯一的叢集資料行或將 SQL Server 資料表中的資料行上定義索引和叢集索引中的資料行的名稱將會傳回一組個別的資料行上定義主索引鍵條件約束。</span><span class="sxs-lookup"><span data-stu-id="37a91-575">If a unique clustered index is defined on a column or columns in a SQL Server table and the primary key constraint is defined on a separate set of columns, then the names of the columns in the clustered index will be returned.</span></span> <span data-ttu-id="37a91-576">若要傳回的名稱或主索引鍵資料行的名稱，使用指定的主索引鍵名稱的 SELECT 陳述式中的查詢提示。</span><span class="sxs-lookup"><span data-stu-id="37a91-576">To return the name or names of the primary key columns, use a query hint with the SELECT statement that specifies the name of the primary key index.</span></span> <span data-ttu-id="37a91-577">如需指定查詢提示的詳細資訊，請參閱[查詢提示 & Amp;#40;transact-SQL&AMP;#41;](https://msdn.microsoft.com/library/ms181714.aspx)。</span><span class="sxs-lookup"><span data-stu-id="37a91-577">For more information about specifying query hints, see [Query Hint (Transact-SQL)](https://msdn.microsoft.com/library/ms181714.aspx).</span></span>  
  
 <span data-ttu-id="37a91-578">如果<xref:System.Data.Common.DbDataAdapter>遇到重複的資料行在填入<xref:System.Data.DataTable>，它會產生後續的資料行，並使用模式的名稱 」*columnname*1""*columnname*2"，"*columnname*3"，依此類推。</span><span class="sxs-lookup"><span data-stu-id="37a91-578">If the <xref:System.Data.Common.DbDataAdapter> encounters duplicate columns while populating a <xref:System.Data.DataTable>, it generates names for the subsequent columns, using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="37a91-579">如果內送資料包含未命名的資料行，它們會放在<xref:System.Data.DataSet>根據模式"Column1"、"Column2"，依此類推。</span><span class="sxs-lookup"><span data-stu-id="37a91-579">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span> <span data-ttu-id="37a91-580">當多個結果集加入至<xref:System.Data.DataSet>放置於個別的資料表中每個結果集。</span><span class="sxs-lookup"><span data-stu-id="37a91-580">When multiple result sets are added to the <xref:System.Data.DataSet> each result set is placed in a separate table.</span></span> <span data-ttu-id="37a91-581">其他結果集的命名方式將整數值附加至指定的資料表名稱 （例如，「 資料表 」、"Table1"、"Table2"，等等。）。</span><span class="sxs-lookup"><span data-stu-id="37a91-581">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on.).</span></span> <span data-ttu-id="37a91-582">使用資料行和資料表名稱的應用程式應該確定 je v konfliktu 這些命名模式不會發生。</span><span class="sxs-lookup"><span data-stu-id="37a91-582">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="37a91-583"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 不會傳回任何資料列。</span><span class="sxs-lookup"><span data-stu-id="37a91-583"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> does not return any rows.</span></span> <span data-ttu-id="37a91-584">使用<xref:System.Data.Common.DbDataAdapter.Fill%2A>方法，以將資料列加入<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="37a91-584">Use the <xref:System.Data.Common.DbDataAdapter.Fill%2A> method to add rows to a <xref:System.Data.DataTable>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="37a91-585">當處理批次 SQL 陳述式會傳回多個結果，實作<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>的.NET Framework Data Provider for OLE DB 擷取第一個結果的結構描述資訊。</span><span class="sxs-lookup"><span data-stu-id="37a91-585">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</span></span> <span data-ttu-id="37a91-586">若要擷取多個結果的結構描述資訊，請使用<xref:System.Data.Common.DbDataAdapter.Fill%2A>具有<xref:System.Data.MissingSchemaAction>設定為`AddWithKey`。</span><span class="sxs-lookup"><span data-stu-id="37a91-586">To retrieve schema information for multiple results, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> with the <xref:System.Data.MissingSchemaAction> set to `AddWithKey`.</span></span>  
  
 <span data-ttu-id="37a91-587">使用 <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 時，.NET Framework Data Provider for SQL Server 會將 FOR BROWSE 子句附加到正要執行的陳述式。</span><span class="sxs-lookup"><span data-stu-id="37a91-587">When using <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, the .NET Framework Data Provider for SQL Server appends a FOR BROWSE clause to the statement being executed.</span></span> <span data-ttu-id="37a91-588">使用者應注意潛在的副作用，例如使用 SET FMTONLY ON 陳述式的干擾。</span><span class="sxs-lookup"><span data-stu-id="37a91-588">The user should be aware of potential side effects, such as interference with the use of SET FMTONLY ON statements.</span></span> <span data-ttu-id="37a91-589">如需詳細資訊，請參閱 [SET FMTONLY (Transact-SQL)](/sql/t-sql/statements/set-fmtonly-transact-sql)。</span><span class="sxs-lookup"><span data-stu-id="37a91-589">For more information, see [SET FMTONLY (Transact-SQL)](/sql/t-sql/statements/set-fmtonly-transact-sql).</span></span>
  
   
  
## Examples  
 <span data-ttu-id="37a91-590">下列範例會使用衍生的類別中， <xref:System.Data.SqlClient.SqlDataAdapter>，以填滿<xref:System.Data.DataSet>結構描述，且會傳回<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="37a91-590">The following example uses the derived class, <xref:System.Data.SqlClient.SqlDataAdapter>, to fill a <xref:System.Data.DataSet> with the schema, and returns a <xref:System.Data.DataTable>.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.FillSchema3#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.FillSchema3/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.FillSchema3#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.FillSchema3/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="37a91-591">DbProviderFactory</span><span class="sxs-lookup"><span data-stu-id="37a91-591">DbProviderFactories</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="37a91-592">ADO.NET 概觀</span><span class="sxs-lookup"><span data-stu-id="37a91-592">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FillSchema">
      <MemberSignature Language="C#" Value="public System.Data.DataTable[] FillSchema (System.Data.DataSet dataSet, System.Data.SchemaType schemaType, string srcTable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataTable[] FillSchema(class System.Data.DataSet dataSet, valuetype System.Data.SchemaType schemaType, string srcTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataTable ^&gt; ^ FillSchema(System::Data::DataSet ^ dataSet, System::Data::SchemaType schemaType, System::String ^ srcTable);" />
      <MemberSignature Language="F#" Value="override this.FillSchema : System.Data.DataSet * System.Data.SchemaType * string -&gt; System.Data.DataTable[]" Usage="dbDataAdapter.FillSchema (dataSet, schemaType, srcTable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
        <Parameter Name="schemaType" Type="System.Data.SchemaType" />
        <Parameter Name="srcTable" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dataSet"><span data-ttu-id="37a91-593">用以插入結構描述的 <see cref="T:System.Data.DataSet" />。</span><span class="sxs-lookup"><span data-stu-id="37a91-593">A <see cref="T:System.Data.DataSet" /> to insert the schema in.</span></span></param>
        <param name="schemaType"><span data-ttu-id="37a91-594">其中一個 <see cref="T:System.Data.SchemaType" /> 值，指定如何插入結構描述。</span><span class="sxs-lookup"><span data-stu-id="37a91-594">One of the <see cref="T:System.Data.SchemaType" /> values that specify how to insert the schema.</span></span></param>
        <param name="srcTable"><span data-ttu-id="37a91-595">用於資料表對應的來源資料表名稱。</span><span class="sxs-lookup"><span data-stu-id="37a91-595">The name of the source table to use for table mapping.</span></span></param>
        <summary><span data-ttu-id="37a91-596">將 <see cref="T:System.Data.DataTable" /> 加入指定的 <see cref="T:System.Data.DataSet" />，並設定結構描述，使其符合以指定 <see cref="T:System.Data.SchemaType" /> 和 <see cref="T:System.Data.DataTable" /> 為基礎的資料來源中結構描述。</span><span class="sxs-lookup"><span data-stu-id="37a91-596">Adds a <see cref="T:System.Data.DataTable" /> to the specified <see cref="T:System.Data.DataSet" /> and configures the schema to match that in the data source based upon the specified <see cref="T:System.Data.SchemaType" /> and <see cref="T:System.Data.DataTable" />.</span></span></summary>
        <returns><span data-ttu-id="37a91-597">加入 <see cref="T:System.Data.DataSet" /> 之 <see cref="T:System.Data.DataTable" /> 物件集合的參考。</span><span class="sxs-lookup"><span data-stu-id="37a91-597">A reference to a collection of <see cref="T:System.Data.DataTable" /> objects that were added to the <see cref="T:System.Data.DataSet" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37a91-598">這個方法會擷取從資料來源使用的結構描述資訊<xref:System.Data.IDbDataAdapter.SelectCommand%2A>。</span><span class="sxs-lookup"><span data-stu-id="37a91-598">This method retrieves the schema information from the data source using the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>.</span></span>  
  
 <span data-ttu-id="37a91-599">A<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>作業會將加入<xref:System.Data.DataTable>到目的地<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="37a91-599">A <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> operation adds a <xref:System.Data.DataTable> to the destination <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="37a91-600">接著它會加入至資料行<xref:System.Data.DataColumnCollection>的<xref:System.Data.DataTable>，並設定下列<xref:System.Data.DataColumn>如果它們存在於資料來源的屬性：</span><span class="sxs-lookup"><span data-stu-id="37a91-600">It then adds columns to the <xref:System.Data.DataColumnCollection> of the <xref:System.Data.DataTable>, and configures the following <xref:System.Data.DataColumn> properties if they exist at the data source:</span></span>  
  
-   <xref:System.Data.DataColumn.AllowDBNull%2A>  
  
-   <span data-ttu-id="37a91-601"><xref:System.Data.DataColumn.AutoIncrement%2A>.</span><span class="sxs-lookup"><span data-stu-id="37a91-601"><xref:System.Data.DataColumn.AutoIncrement%2A>.</span></span> <span data-ttu-id="37a91-602">您必須設定<xref:System.Data.DataColumn.AutoIncrementStep%2A>和<xref:System.Data.DataColumn.AutoIncrementSeed%2A>分開。</span><span class="sxs-lookup"><span data-stu-id="37a91-602">You must set <xref:System.Data.DataColumn.AutoIncrementStep%2A> and <xref:System.Data.DataColumn.AutoIncrementSeed%2A> separately.</span></span>  
  
-   <xref:System.Data.DataColumn.MaxLength%2A>  
  
-   <xref:System.Data.DataColumn.ReadOnly%2A>  
  
-   <xref:System.Data.DataColumn.Unique%2A>  
  
 <span data-ttu-id="37a91-603"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 也會設定<xref:System.Data.DataTable.PrimaryKey%2A>和<xref:System.Data.DataTable.Constraints%2A>屬性根據下列規則：</span><span class="sxs-lookup"><span data-stu-id="37a91-603"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> also configures the <xref:System.Data.DataTable.PrimaryKey%2A> and <xref:System.Data.DataTable.Constraints%2A> properties according to the following rules:</span></span>  
  
-   <span data-ttu-id="37a91-604">如果所傳回的一或多個主要的索引鍵資料行<xref:System.Data.IDbDataAdapter.SelectCommand%2A>，做為主要索引鍵資料行<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="37a91-604">If one or more primary key columns are returned by the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>, they are used as the primary key columns for the <xref:System.Data.DataTable>.</span></span>  
  
-   <span data-ttu-id="37a91-605">如果傳回沒有主索引鍵資料行，但唯一資料行，會使用唯一的資料行作為主索引鍵，並僅有，唯一的資料行都不可為 null。</span><span class="sxs-lookup"><span data-stu-id="37a91-605">If no primary key columns are returned but unique columns are, the unique columns are used as the primary key if, and only if, all the unique columns are nonnullable.</span></span> <span data-ttu-id="37a91-606">如果任何資料行可為 null，<xref:System.Data.UniqueConstraint>新增至<xref:System.Data.ConstraintCollection>，但<xref:System.Data.DataTable.PrimaryKey%2A>屬性未設定。</span><span class="sxs-lookup"><span data-stu-id="37a91-606">If any of the columns are nullable, a <xref:System.Data.UniqueConstraint> is added to the <xref:System.Data.ConstraintCollection>, but the <xref:System.Data.DataTable.PrimaryKey%2A> property is not set.</span></span>  
  
-   <span data-ttu-id="37a91-607">如果傳回主要索引鍵資料行及唯一的資料行，將主索引鍵資料行做為主要索引鍵資料行<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="37a91-607">If both primary key columns and unique columns are returned, the primary key columns are used as the primary key columns for the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="37a91-608">請注意，會將主索引鍵和唯一條件約束加入至<xref:System.Data.ConstraintCollection>根據前述規則，但其他條件約束類型不會新增。</span><span class="sxs-lookup"><span data-stu-id="37a91-608">Note that primary keys and unique constraints are added to the <xref:System.Data.ConstraintCollection> according to the preceding rules, but other constraint types are not added.</span></span>  
  
 <span data-ttu-id="37a91-609">如果唯一的叢集資料行或將 SQL Server 資料表中的資料行上定義索引和叢集索引中的資料行的名稱將會傳回一組個別的資料行上定義主索引鍵條件約束。</span><span class="sxs-lookup"><span data-stu-id="37a91-609">If a unique clustered index is defined on a column or columns in a SQL Server table and the primary key constraint is defined on a separate set of columns, then the names of the columns in the clustered index will be returned.</span></span> <span data-ttu-id="37a91-610">若要傳回的名稱或主索引鍵資料行的名稱，使用指定的主索引鍵名稱的 SELECT 陳述式中的查詢提示。</span><span class="sxs-lookup"><span data-stu-id="37a91-610">To return the name or names of the primary key columns, use a query hint with the SELECT statement that specifies the name of the primary key index.</span></span> <span data-ttu-id="37a91-611">如需指定查詢提示的詳細資訊，請參閱[查詢提示 & Amp;#40;transact-SQL&AMP;#41;](https://msdn.microsoft.com/library/ms181714.aspx)。</span><span class="sxs-lookup"><span data-stu-id="37a91-611">For more information about specifying query hints, see [Query Hint (Transact-SQL)](https://msdn.microsoft.com/library/ms181714.aspx).</span></span>  
  
 <span data-ttu-id="37a91-612">主索引鍵資訊會使用於<xref:System.Data.Common.DbDataAdapter.Fill%2A>來尋找和取代任何符合其索引鍵資料行的資料列。</span><span class="sxs-lookup"><span data-stu-id="37a91-612">Primary key information is used during <xref:System.Data.Common.DbDataAdapter.Fill%2A> to find and replace any rows whose key columns match.</span></span> <span data-ttu-id="37a91-613">如果這不是所要的行為，使用<xref:System.Data.Common.DbDataAdapter.Fill%2A>但未要求結構描述資訊。</span><span class="sxs-lookup"><span data-stu-id="37a91-613">If this is not the desired behavior, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> without requesting schema information.</span></span>  
  
 <span data-ttu-id="37a91-614">如果<xref:System.Data.Common.DbDataAdapter>遇到重複的資料行在填入<xref:System.Data.DataTable>，它會產生後續的資料行，並使用模式的名稱 」*columnname*1""*columnname*2"，"*columnname*3"，依此類推。</span><span class="sxs-lookup"><span data-stu-id="37a91-614">If the <xref:System.Data.Common.DbDataAdapter> encounters duplicate columns while populating a <xref:System.Data.DataTable>, it generates names for the subsequent columns, using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="37a91-615">如果內送資料包含未命名的資料行，它們會放在<xref:System.Data.DataSet>根據模式"Column1"、"Column2"，依此類推。</span><span class="sxs-lookup"><span data-stu-id="37a91-615">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span> <span data-ttu-id="37a91-616">當多個結果集加入至<xref:System.Data.DataSet>放置於個別的資料表中每個結果集。</span><span class="sxs-lookup"><span data-stu-id="37a91-616">When multiple result sets are added to the <xref:System.Data.DataSet> each result set is placed in a separate table.</span></span> <span data-ttu-id="37a91-617">其他結果集的命名方式將整數值附加至指定的資料表名稱 （例如，「 資料表 」、"Table1"、"Table2"，等等。）。</span><span class="sxs-lookup"><span data-stu-id="37a91-617">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on.).</span></span> <span data-ttu-id="37a91-618">使用資料行和資料表名稱的應用程式應該確定 je v konfliktu 這些命名模式不會發生。</span><span class="sxs-lookup"><span data-stu-id="37a91-618">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="37a91-619"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A>方法支援案例所在<xref:System.Data.DataSet>包含多個<xref:System.Data.DataTable>名稱只有大小寫不同的物件。</span><span class="sxs-lookup"><span data-stu-id="37a91-619">The <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> method supports scenarios where the <xref:System.Data.DataSet> contains multiple <xref:System.Data.DataTable> objects whose names differ only by case.</span></span> <span data-ttu-id="37a91-620">在這種情況下，<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>執行區分大小寫的比較，來尋找對應的資料表，並建立新的資料表，如果沒有完全相符項目存在。</span><span class="sxs-lookup"><span data-stu-id="37a91-620">In such situations, <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> performs a case-sensitive comparison to find the corresponding table, and creates a new table if no exact match exists.</span></span> <span data-ttu-id="37a91-621">下列 C# 程式碼說明此行為。</span><span class="sxs-lookup"><span data-stu-id="37a91-621">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
dataset.Tables.Add("AAA");  
adapter.FillSchema(dataset, "aaa"); // Fills the schema of "aaa", which already exists in the DataSet.  
adapter.FillSchema(dataset, "Aaa"); // Adds a new table called "Aaa".  
```  
  
 <span data-ttu-id="37a91-622">如果<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>呼叫時，<xref:System.Data.DataSet>只會包含一個<xref:System.Data.DataTable>名稱只有大小寫不同，，<xref:System.Data.DataTable>會更新。</span><span class="sxs-lookup"><span data-stu-id="37a91-622">If <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called and the <xref:System.Data.DataSet> contains only one <xref:System.Data.DataTable> whose name differs only by case, that <xref:System.Data.DataTable> is updated.</span></span> <span data-ttu-id="37a91-623">在此案例中，比較不區分大小寫。</span><span class="sxs-lookup"><span data-stu-id="37a91-623">In this scenario, the comparison is case insensitive.</span></span> <span data-ttu-id="37a91-624">下列 C# 程式碼說明此行為。</span><span class="sxs-lookup"><span data-stu-id="37a91-624">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
adapter.FillSchema(dataset, "AAA"); // Fills the schema of table "aaa" because only one similarly named table is in the DataSet.  
```  
  
 <span data-ttu-id="37a91-625"><xref:System.Data.IDbConnection> Select 命令相關聯的物件必須有效，但它不需要開啟。</span><span class="sxs-lookup"><span data-stu-id="37a91-625">The <xref:System.Data.IDbConnection> object associated with the select command must be valid, but it does not need to open.</span></span> <span data-ttu-id="37a91-626">如果<xref:System.Data.IDbConnection>關閉之前<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>會呼叫它，它會開啟來擷取資料，然後關閉。</span><span class="sxs-lookup"><span data-stu-id="37a91-626">If the <xref:System.Data.IDbConnection> is closed before <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called, it is opened to retrieve data, then closed.</span></span> <span data-ttu-id="37a91-627">如果連接已開啟之前<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>是呼叫，它會處於開啟狀態。</span><span class="sxs-lookup"><span data-stu-id="37a91-627">If the connection is open before <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called, it is left open.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="37a91-628">當處理批次 SQL 陳述式會傳回多個結果，實作<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>的.NET Framework Data Provider for OLE DB 擷取第一個結果的結構描述資訊。</span><span class="sxs-lookup"><span data-stu-id="37a91-628">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</span></span> <span data-ttu-id="37a91-629">若要擷取多個結果的結構描述資訊，請使用<xref:System.Data.Common.DbDataAdapter.Fill%2A>具有<xref:System.Data.MissingSchemaAction>設定為`AddWithKey`。</span><span class="sxs-lookup"><span data-stu-id="37a91-629">To retrieve schema information for multiple results, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> with the <xref:System.Data.MissingSchemaAction> set to `AddWithKey`.</span></span>  
  
 <span data-ttu-id="37a91-630">使用 <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 時，.NET Framework Data Provider for SQL Server 會將 FOR BROWSE 子句附加到正要執行的陳述式。</span><span class="sxs-lookup"><span data-stu-id="37a91-630">When using <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, the .NET Framework Data Provider for SQL Server appends a FOR BROWSE clause to the statement being executed.</span></span> <span data-ttu-id="37a91-631">使用者應注意潛在的副作用，例如使用 SET FMTONLY ON 陳述式的干擾。</span><span class="sxs-lookup"><span data-stu-id="37a91-631">The user should be aware of potential side effects, such as interference with the use of SET FMTONLY ON statements.</span></span> <span data-ttu-id="37a91-632">如需詳細資訊，請參閱 [SET FMTONLY (Transact-SQL)](/sql/t-sql/statements/set-fmtonly-transact-sql)。</span><span class="sxs-lookup"><span data-stu-id="37a91-632">For more information, see [SET FMTONLY (Transact-SQL)](/sql/t-sql/statements/set-fmtonly-transact-sql).</span></span>
  
   
  
## Examples  
 <span data-ttu-id="37a91-633">下列範例會使用衍生的類別中， <xref:System.Data.SqlClient.SqlDataAdapter>，以填滿<xref:System.Data.DataSet>結構描述，且會傳回<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="37a91-633">The following example uses the derived class, <xref:System.Data.SqlClient.SqlDataAdapter>, to fill a <xref:System.Data.DataSet> with the schema, and returns a <xref:System.Data.DataSet>.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.FillSchema2 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.FillSchema2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.FillSchema2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.FillSchema2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="37a91-634">找不到要從中取得結構描述的來源資料表。</span><span class="sxs-lookup"><span data-stu-id="37a91-634">A source table from which to get the schema could not be found.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="37a91-635">DbProviderFactory</span><span class="sxs-lookup"><span data-stu-id="37a91-635">DbProviderFactories</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="37a91-636">ADO.NET 概觀</span><span class="sxs-lookup"><span data-stu-id="37a91-636">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FillSchema">
      <MemberSignature Language="C#" Value="protected virtual System.Data.DataTable FillSchema (System.Data.DataTable dataTable, System.Data.SchemaType schemaType, System.Data.IDbCommand command, System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.DataTable FillSchema(class System.Data.DataTable dataTable, valuetype System.Data.SchemaType schemaType, class System.Data.IDbCommand command, valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDbCommand,System.Data.CommandBehavior)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Data::DataTable ^ FillSchema(System::Data::DataTable ^ dataTable, System::Data::SchemaType schemaType, System::Data::IDbCommand ^ command, System::Data::CommandBehavior behavior);" />
      <MemberSignature Language="F#" Value="override this.FillSchema : System.Data.DataTable * System.Data.SchemaType * System.Data.IDbCommand * System.Data.CommandBehavior -&gt; System.Data.DataTable" Usage="dbDataAdapter.FillSchema (dataTable, schemaType, command, behavior)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataTable" Type="System.Data.DataTable" />
        <Parameter Name="schemaType" Type="System.Data.SchemaType" />
        <Parameter Name="command" Type="System.Data.IDbCommand" />
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" />
      </Parameters>
      <Docs>
        <param name="dataTable"><span data-ttu-id="37a91-637">要從資料來源以結構描述填入的 <see cref="T:System.Data.DataTable" />。</span><span class="sxs-lookup"><span data-stu-id="37a91-637">The <see cref="T:System.Data.DataTable" /> to be filled with the schema from the data source.</span></span></param>
        <param name="schemaType"><span data-ttu-id="37a91-638">其中一個 <see cref="T:System.Data.SchemaType" /> 值。</span><span class="sxs-lookup"><span data-stu-id="37a91-638">One of the <see cref="T:System.Data.SchemaType" /> values.</span></span></param>
        <param name="command"><span data-ttu-id="37a91-639">用來從資料來源擷取資料列的 SQL SELECT 陳述式。</span><span class="sxs-lookup"><span data-stu-id="37a91-639">The SQL SELECT statement used to retrieve rows from the data source.</span></span></param>
        <param name="behavior"><span data-ttu-id="37a91-640">其中一個 <see cref="T:System.Data.CommandBehavior" /> 值。</span><span class="sxs-lookup"><span data-stu-id="37a91-640">One of the <see cref="T:System.Data.CommandBehavior" /> values.</span></span></param>
        <summary><span data-ttu-id="37a91-641">根據指定的 <see cref="T:System.Data.DataTable" />、命令字串和 <see cref="T:System.Data.SchemaType" /> 值，設定指定 <see cref="T:System.Data.CommandBehavior" /> 的結構描述。</span><span class="sxs-lookup"><span data-stu-id="37a91-641">Configures the schema of the specified <see cref="T:System.Data.DataTable" /> based on the specified <see cref="T:System.Data.SchemaType" />, command string, and <see cref="T:System.Data.CommandBehavior" /> values.</span></span></summary>
        <returns><span data-ttu-id="37a91-642"><see cref="T:System.Data.DataTable" /> 物件，包含從資料來源傳回的結構描述資訊。</span><span class="sxs-lookup"><span data-stu-id="37a91-642">A of <see cref="T:System.Data.DataTable" /> object that contains schema information returned from the data source.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37a91-643"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A>方法會擷取結構描述從資料來源使用<xref:System.Data.IDbDataAdapter.SelectCommand%2A>。</span><span class="sxs-lookup"><span data-stu-id="37a91-643">The <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> method retrieves the schema from the data source using the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>.</span></span> <span data-ttu-id="37a91-644">連接物件相關聯<xref:System.Data.IDbDataAdapter.SelectCommand%2A>必須是有效的但它不需要開啟。</span><span class="sxs-lookup"><span data-stu-id="37a91-644">The connection object associated with the <xref:System.Data.IDbDataAdapter.SelectCommand%2A> must be valid, but it does not need to be open.</span></span> <span data-ttu-id="37a91-645">如果連線已關閉之前<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>會呼叫它，它會開啟來擷取資料，然後關閉。</span><span class="sxs-lookup"><span data-stu-id="37a91-645">If the connection is closed before <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called, it is opened to retrieve data, then closed.</span></span> <span data-ttu-id="37a91-646">如果連接已開啟之前<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>是呼叫，它會保持開啟狀態。</span><span class="sxs-lookup"><span data-stu-id="37a91-646">If the connection is open before <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="37a91-647">A<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>作業會將加入<xref:System.Data.DataTable>到目的地<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="37a91-647">A <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> operation adds a <xref:System.Data.DataTable> to the destination <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="37a91-648">接著它會加入至資料行<xref:System.Data.DataColumnCollection>的<xref:System.Data.DataTable>，並設定下列<xref:System.Data.DataColumn>如果它們存在於資料來源的屬性：</span><span class="sxs-lookup"><span data-stu-id="37a91-648">It then adds columns to the <xref:System.Data.DataColumnCollection> of the <xref:System.Data.DataTable>, and configures the following <xref:System.Data.DataColumn> properties if they exist at the data source:</span></span>  
  
-   <xref:System.Data.DataColumn.AllowDBNull%2A>  
  
-   <span data-ttu-id="37a91-649"><xref:System.Data.DataColumn.AutoIncrement%2A>.</span><span class="sxs-lookup"><span data-stu-id="37a91-649"><xref:System.Data.DataColumn.AutoIncrement%2A>.</span></span> <span data-ttu-id="37a91-650">您必須設定<xref:System.Data.DataColumn.AutoIncrementStep%2A>和<xref:System.Data.DataColumn.AutoIncrementSeed%2A>分開。</span><span class="sxs-lookup"><span data-stu-id="37a91-650">You must set <xref:System.Data.DataColumn.AutoIncrementStep%2A> and <xref:System.Data.DataColumn.AutoIncrementSeed%2A> separately.</span></span>  
  
-   <xref:System.Data.DataColumn.MaxLength%2A>  
  
-   <xref:System.Data.DataColumn.ReadOnly%2A>  
  
-   <xref:System.Data.DataColumn.Unique%2A>  
  
 <span data-ttu-id="37a91-651"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 也會設定<xref:System.Data.DataTable.PrimaryKey%2A>和<xref:System.Data.DataTable.Constraints%2A>屬性根據下列規則：</span><span class="sxs-lookup"><span data-stu-id="37a91-651"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> also configures the <xref:System.Data.DataTable.PrimaryKey%2A> and <xref:System.Data.DataTable.Constraints%2A> properties according to the following rules:</span></span>  
  
-   <span data-ttu-id="37a91-652">如果所傳回的一或多個主要的索引鍵資料行<xref:System.Data.IDbDataAdapter.SelectCommand%2A>，做為主要索引鍵資料行<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="37a91-652">If one or more primary key columns are returned by the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>, they are used as the primary key columns for the <xref:System.Data.DataTable>.</span></span>  
  
-   <span data-ttu-id="37a91-653">如果傳回沒有主索引鍵資料行，但唯一資料行，會使用唯一的資料行作為主索引鍵，並僅有，唯一的資料行都不可為 null。</span><span class="sxs-lookup"><span data-stu-id="37a91-653">If no primary key columns are returned but unique columns are, the unique columns are used as the primary key if, and only if, all the unique columns are nonnullable.</span></span> <span data-ttu-id="37a91-654">如果任何資料行可為 null，<xref:System.Data.UniqueConstraint>新增至<xref:System.Data.ConstraintCollection>，但<xref:System.Data.DataTable.PrimaryKey%2A>屬性未設定。</span><span class="sxs-lookup"><span data-stu-id="37a91-654">If any of the columns are nullable, a <xref:System.Data.UniqueConstraint> is added to the <xref:System.Data.ConstraintCollection>, but the <xref:System.Data.DataTable.PrimaryKey%2A> property is not set.</span></span>  
  
-   <span data-ttu-id="37a91-655">如果傳回主要索引鍵資料行及唯一的資料行，將主索引鍵資料行做為主要索引鍵資料行<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="37a91-655">If both primary key columns and unique columns are returned, the primary key columns are used as the primary key columns for the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="37a91-656">請注意，會將主索引鍵和唯一條件約束加入至<xref:System.Data.ConstraintCollection>根據前述規則，但其他條件約束類型不會新增。</span><span class="sxs-lookup"><span data-stu-id="37a91-656">Note that primary keys and unique constraints are added to the <xref:System.Data.ConstraintCollection> according to the preceding rules, but other constraint types are not added.</span></span>  
  
 <span data-ttu-id="37a91-657">如果唯一的叢集資料行或將 SQL Server 資料表中的資料行上定義索引和叢集索引中的資料行的名稱將會傳回一組個別的資料行上定義主索引鍵條件約束。</span><span class="sxs-lookup"><span data-stu-id="37a91-657">If a unique clustered index is defined on a column or columns in a SQL Server table and the primary key constraint is defined on a separate set of columns, then the names of the columns in the clustered index will be returned.</span></span> <span data-ttu-id="37a91-658">若要傳回的名稱或主索引鍵資料行的名稱，使用指定的主索引鍵名稱的 SELECT 陳述式中的查詢提示。</span><span class="sxs-lookup"><span data-stu-id="37a91-658">To return the name or names of the primary key columns, use a query hint with the SELECT statement that specifies the name of the primary key index.</span></span> <span data-ttu-id="37a91-659">如需指定查詢提示的詳細資訊，請參閱[查詢提示 & Amp;#40;transact-SQL&AMP;#41;](https://msdn.microsoft.com/library/ms181714.aspx)。</span><span class="sxs-lookup"><span data-stu-id="37a91-659">For more information about specifying query hints, see [Query Hint (Transact-SQL)](https://msdn.microsoft.com/library/ms181714.aspx).</span></span>  
  
 <span data-ttu-id="37a91-660">如果<xref:System.Data.IDataAdapter>遇到重複的資料行在填入<xref:System.Data.DataTable>，它會產生後續的資料行，並使用模式的名稱 」*columnname*1""*columnname*2"，"*columnname*3"，依此類推。</span><span class="sxs-lookup"><span data-stu-id="37a91-660">If the <xref:System.Data.IDataAdapter> encounters duplicate columns while populating a <xref:System.Data.DataTable>, it generates names for the subsequent columns, using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="37a91-661">如果內送資料包含未命名的資料行，它們會放在<xref:System.Data.DataSet>根據模式"Column1"、"Column2"，依此類推。</span><span class="sxs-lookup"><span data-stu-id="37a91-661">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span> <span data-ttu-id="37a91-662">當多個結果集加入至<xref:System.Data.DataSet>放置於個別的資料表中每個結果集。</span><span class="sxs-lookup"><span data-stu-id="37a91-662">When multiple result sets are added to the <xref:System.Data.DataSet> each result set is placed in a separate table.</span></span> <span data-ttu-id="37a91-663">其他結果集的命名方式將整數值附加至指定的資料表名稱 （例如，「 資料表 」、"Table1"、"Table2"，等等。）。</span><span class="sxs-lookup"><span data-stu-id="37a91-663">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on.).</span></span> <span data-ttu-id="37a91-664">使用資料行和資料表名稱的應用程式應該確定 je v konfliktu 這些命名模式不會發生。</span><span class="sxs-lookup"><span data-stu-id="37a91-664">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="37a91-665"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 不會傳回任何資料列。</span><span class="sxs-lookup"><span data-stu-id="37a91-665"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> does not return any rows.</span></span> <span data-ttu-id="37a91-666">使用<xref:System.Data.Common.DbDataAdapter.Fill%2A>方法，以將資料列加入<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="37a91-666">Use the <xref:System.Data.Common.DbDataAdapter.Fill%2A> method to add rows to a <xref:System.Data.DataTable>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="37a91-667">當處理批次 SQL 陳述式會傳回多個結果，實作<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>的.NET Framework Data Provider for OLE DB 擷取第一個結果的結構描述資訊。</span><span class="sxs-lookup"><span data-stu-id="37a91-667">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</span></span> <span data-ttu-id="37a91-668">若要擷取多個結果的結構描述資訊，請使用<xref:System.Data.Common.DbDataAdapter.Fill%2A>具有<xref:System.Data.MissingSchemaAction>設定為`AddWithKey`。</span><span class="sxs-lookup"><span data-stu-id="37a91-668">To retrieve schema information for multiple results, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> with the <xref:System.Data.MissingSchemaAction> set to `AddWithKey`.</span></span>  
  
 <span data-ttu-id="37a91-669">使用 <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 時，.NET Framework Data Provider for SQL Server 會將 FOR BROWSE 子句附加到正要執行的陳述式。</span><span class="sxs-lookup"><span data-stu-id="37a91-669">When using <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, the .NET Framework Data Provider for SQL Server appends a FOR BROWSE clause to the statement being executed.</span></span> <span data-ttu-id="37a91-670">使用者應注意潛在的副作用，例如使用 SET FMTONLY ON 陳述式的干擾。</span><span class="sxs-lookup"><span data-stu-id="37a91-670">The user should be aware of potential side effects, such as interference with the use of SET FMTONLY ON statements.</span></span> <span data-ttu-id="37a91-671">如需詳細資訊，請參閱 [SET FMTONLY (Transact-SQL)](/sql/t-sql/statements/set-fmtonly-transact-sql)。</span><span class="sxs-lookup"><span data-stu-id="37a91-671">For more information, see [SET FMTONLY (Transact-SQL)](/sql/t-sql/statements/set-fmtonly-transact-sql).</span></span>
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="37a91-672">這個實作<see cref="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)" />方法受到保護，設計用於使用.NET Framework 資料提供者。</span><span class="sxs-lookup"><span data-stu-id="37a91-672">This implementation of the <see cref="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)" /> method is protected and is designed for use by a .NET Framework data provider.</span></span></para></block>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="37a91-673">DbProviderFactory (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="37a91-673">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="37a91-674">ADO.NET 概觀</span><span class="sxs-lookup"><span data-stu-id="37a91-674">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FillSchema">
      <MemberSignature Language="C#" Value="protected virtual System.Data.DataTable[] FillSchema (System.Data.DataSet dataSet, System.Data.SchemaType schemaType, System.Data.IDbCommand command, string srcTable, System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.DataTable[] FillSchema(class System.Data.DataSet dataSet, valuetype System.Data.SchemaType schemaType, class System.Data.IDbCommand command, string srcTable, valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.Data.IDbCommand,System.String,System.Data.CommandBehavior)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual cli::array &lt;System::Data::DataTable ^&gt; ^ FillSchema(System::Data::DataSet ^ dataSet, System::Data::SchemaType schemaType, System::Data::IDbCommand ^ command, System::String ^ srcTable, System::Data::CommandBehavior behavior);" />
      <MemberSignature Language="F#" Value="override this.FillSchema : System.Data.DataSet * System.Data.SchemaType * System.Data.IDbCommand * string * System.Data.CommandBehavior -&gt; System.Data.DataTable[]" Usage="dbDataAdapter.FillSchema (dataSet, schemaType, command, srcTable, behavior)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
        <Parameter Name="schemaType" Type="System.Data.SchemaType" />
        <Parameter Name="command" Type="System.Data.IDbCommand" />
        <Parameter Name="srcTable" Type="System.String" />
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" />
      </Parameters>
      <Docs>
        <param name="dataSet"><span data-ttu-id="37a91-675">要從資料來源以結構描述填入的 <see cref="T:System.Data.DataSet" />。</span><span class="sxs-lookup"><span data-stu-id="37a91-675">The <see cref="T:System.Data.DataSet" /> to be filled with the schema from the data source.</span></span></param>
        <param name="schemaType"><span data-ttu-id="37a91-676">其中一個 <see cref="T:System.Data.SchemaType" /> 值。</span><span class="sxs-lookup"><span data-stu-id="37a91-676">One of the <see cref="T:System.Data.SchemaType" /> values.</span></span></param>
        <param name="command"><span data-ttu-id="37a91-677">用來從資料來源擷取資料列的 SQL SELECT 陳述式。</span><span class="sxs-lookup"><span data-stu-id="37a91-677">The SQL SELECT statement used to retrieve rows from the data source.</span></span></param>
        <param name="srcTable"><span data-ttu-id="37a91-678">用於資料表對應的來源資料表名稱。</span><span class="sxs-lookup"><span data-stu-id="37a91-678">The name of the source table to use for table mapping.</span></span></param>
        <param name="behavior"><span data-ttu-id="37a91-679">其中一個 <see cref="T:System.Data.CommandBehavior" /> 值。</span><span class="sxs-lookup"><span data-stu-id="37a91-679">One of the <see cref="T:System.Data.CommandBehavior" /> values.</span></span></param>
        <summary><span data-ttu-id="37a91-680">將 <see cref="T:System.Data.DataTable" /> 加入至指定的 <see cref="T:System.Data.DataSet" />，並且根據指定的 <see cref="T:System.Data.SchemaType" /> 設定結構描述，以符合資料來源中的資料表。</span><span class="sxs-lookup"><span data-stu-id="37a91-680">Adds a <see cref="T:System.Data.DataTable" /> to the specified <see cref="T:System.Data.DataSet" /> and configures the schema to match that in the data source based on the specified <see cref="T:System.Data.SchemaType" />.</span></span></summary>
        <returns><span data-ttu-id="37a91-681"><see cref="T:System.Data.DataTable" /> 物件的陣列，包含從資料來源傳回的結構描述資訊。</span><span class="sxs-lookup"><span data-stu-id="37a91-681">An array of <see cref="T:System.Data.DataTable" /> objects that contain schema information returned from the data source.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37a91-682"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A>方法會擷取結構描述從資料來源使用<xref:System.Data.IDbDataAdapter.SelectCommand%2A>。</span><span class="sxs-lookup"><span data-stu-id="37a91-682">The <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> method retrieves the schema from the data source using the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>.</span></span> <span data-ttu-id="37a91-683">連接物件相關聯<xref:System.Data.IDbDataAdapter.SelectCommand%2A>必須是有效的但它不需要開啟。</span><span class="sxs-lookup"><span data-stu-id="37a91-683">The connection object associated with the <xref:System.Data.IDbDataAdapter.SelectCommand%2A> must be valid, but it does not need to be open.</span></span> <span data-ttu-id="37a91-684">如果連線已關閉之前<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>會呼叫它，它會開啟來擷取資料，然後關閉。</span><span class="sxs-lookup"><span data-stu-id="37a91-684">If the connection is closed before <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called, it is opened to retrieve data, then closed.</span></span> <span data-ttu-id="37a91-685">如果連接已開啟之前<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>是呼叫，它會保持開啟狀態。</span><span class="sxs-lookup"><span data-stu-id="37a91-685">If the connection is open before <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="37a91-686">A<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>作業會將加入<xref:System.Data.DataTable>到目的地<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="37a91-686">A <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> operation adds a <xref:System.Data.DataTable> to the destination <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="37a91-687">接著它會加入至資料行<xref:System.Data.DataColumnCollection>的<xref:System.Data.DataTable>，並設定下列<xref:System.Data.DataColumn>如果它們存在於資料來源的屬性：</span><span class="sxs-lookup"><span data-stu-id="37a91-687">It then adds columns to the <xref:System.Data.DataColumnCollection> of the <xref:System.Data.DataTable>, and configures the following <xref:System.Data.DataColumn> properties if they exist at the data source:</span></span>  
  
-   <xref:System.Data.DataColumn.AllowDBNull%2A>  
  
-   <span data-ttu-id="37a91-688"><xref:System.Data.DataColumn.AutoIncrement%2A>.</span><span class="sxs-lookup"><span data-stu-id="37a91-688"><xref:System.Data.DataColumn.AutoIncrement%2A>.</span></span> <span data-ttu-id="37a91-689">您必須設定<xref:System.Data.DataColumn.AutoIncrementStep%2A>和<xref:System.Data.DataColumn.AutoIncrementSeed%2A>分開。</span><span class="sxs-lookup"><span data-stu-id="37a91-689">You must set <xref:System.Data.DataColumn.AutoIncrementStep%2A> and <xref:System.Data.DataColumn.AutoIncrementSeed%2A> separately.</span></span>  
  
-   <xref:System.Data.DataColumn.MaxLength%2A>  
  
-   <xref:System.Data.DataColumn.ReadOnly%2A>  
  
-   <xref:System.Data.DataColumn.Unique%2A>  
  
 <span data-ttu-id="37a91-690"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 也會設定<xref:System.Data.DataTable.PrimaryKey%2A>和<xref:System.Data.DataTable.Constraints%2A>屬性根據下列規則：</span><span class="sxs-lookup"><span data-stu-id="37a91-690"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> also configures the <xref:System.Data.DataTable.PrimaryKey%2A> and <xref:System.Data.DataTable.Constraints%2A> properties according to the following rules:</span></span>  
  
-   <span data-ttu-id="37a91-691">如果所傳回的一或多個主要的索引鍵資料行<xref:System.Data.IDbDataAdapter.SelectCommand%2A>，做為主要索引鍵資料行<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="37a91-691">If one or more primary key columns are returned by the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>, they are used as the primary key columns for the <xref:System.Data.DataTable>.</span></span>  
  
-   <span data-ttu-id="37a91-692">如果傳回沒有主索引鍵資料行，但唯一資料行，會使用唯一的資料行作為主索引鍵，並僅有，唯一的資料行都不可為 null。</span><span class="sxs-lookup"><span data-stu-id="37a91-692">If no primary key columns are returned but unique columns are, the unique columns are used as the primary key if, and only if, all the unique columns are nonnullable.</span></span> <span data-ttu-id="37a91-693">如果任何資料行可為 null，<xref:System.Data.UniqueConstraint>新增至<xref:System.Data.ConstraintCollection>，但<xref:System.Data.DataTable.PrimaryKey%2A>屬性未設定。</span><span class="sxs-lookup"><span data-stu-id="37a91-693">If any of the columns are nullable, a <xref:System.Data.UniqueConstraint> is added to the <xref:System.Data.ConstraintCollection>, but the <xref:System.Data.DataTable.PrimaryKey%2A> property is not set.</span></span>  
  
-   <span data-ttu-id="37a91-694">如果傳回主要索引鍵資料行及唯一的資料行，將主索引鍵資料行做為主要索引鍵資料行<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="37a91-694">If both primary key columns and unique columns are returned, the primary key columns are used as the primary key columns for the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="37a91-695">請注意，會將主索引鍵和唯一條件約束加入至<xref:System.Data.ConstraintCollection>根據前述規則，但其他條件約束類型不會新增。</span><span class="sxs-lookup"><span data-stu-id="37a91-695">Note that primary keys and unique constraints are added to the <xref:System.Data.ConstraintCollection> according to the preceding rules, but other constraint types are not added.</span></span>  
  
 <span data-ttu-id="37a91-696">如果唯一的叢集資料行或將 SQL Server 資料表中的資料行上定義索引和叢集索引中的資料行的名稱將會傳回一組個別的資料行上定義主索引鍵條件約束。</span><span class="sxs-lookup"><span data-stu-id="37a91-696">If a unique clustered index is defined on a column or columns in a SQL Server table and the primary key constraint is defined on a separate set of columns, then the names of the columns in the clustered index will be returned.</span></span> <span data-ttu-id="37a91-697">若要傳回的名稱或主索引鍵資料行的名稱，使用指定的主索引鍵名稱的 SELECT 陳述式中的查詢提示。</span><span class="sxs-lookup"><span data-stu-id="37a91-697">To return the name or names of the primary key columns, use a query hint with the SELECT statement that specifies the name of the primary key index.</span></span> <span data-ttu-id="37a91-698">如需指定查詢提示的詳細資訊，請參閱[查詢提示 & Amp;#40;transact-SQL&AMP;#41;](https://msdn.microsoft.com/library/ms181714.aspx)。</span><span class="sxs-lookup"><span data-stu-id="37a91-698">For more information about specifying query hints, see [Query Hint (Transact-SQL)](https://msdn.microsoft.com/library/ms181714.aspx).</span></span>  
  
 <span data-ttu-id="37a91-699">如果<xref:System.Data.IDataAdapter>遇到重複的資料行在填入<xref:System.Data.DataTable>，它會產生後續的資料行，並使用模式的名稱 」*columnname*1""*columnname*2"，"*columnname*3"，依此類推。</span><span class="sxs-lookup"><span data-stu-id="37a91-699">If the <xref:System.Data.IDataAdapter> encounters duplicate columns while populating a <xref:System.Data.DataTable>, it generates names for the subsequent columns, using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="37a91-700">如果內送資料包含未命名的資料行，它們會放在<xref:System.Data.DataSet>根據模式"Column1"、"Column2"，依此類推。</span><span class="sxs-lookup"><span data-stu-id="37a91-700">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span> <span data-ttu-id="37a91-701">當多個結果集加入至<xref:System.Data.DataSet>放置於個別的資料表中每個結果集。</span><span class="sxs-lookup"><span data-stu-id="37a91-701">When multiple result sets are added to the <xref:System.Data.DataSet> each result set is placed in a separate table.</span></span> <span data-ttu-id="37a91-702">其他結果集的命名方式將整數值附加至指定的資料表名稱 （例如，「 資料表 」、"Table1"、"Table2"，等等。）。</span><span class="sxs-lookup"><span data-stu-id="37a91-702">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on.).</span></span> <span data-ttu-id="37a91-703">使用資料行和資料表名稱的應用程式應該確定 je v konfliktu 這些命名模式不會發生。</span><span class="sxs-lookup"><span data-stu-id="37a91-703">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="37a91-704"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A>方法支援案例所在<xref:System.Data.DataSet>包含多個<xref:System.Data.DataTable>名稱只有大小寫不同的物件。</span><span class="sxs-lookup"><span data-stu-id="37a91-704">The <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> method supports scenarios where the <xref:System.Data.DataSet> contains multiple <xref:System.Data.DataTable> objects whose names differ only by case.</span></span> <span data-ttu-id="37a91-705">在這種情況下，<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>執行區分大小寫的比較，來尋找對應的資料表，並建立新的資料表，如果沒有完全相符項目存在。</span><span class="sxs-lookup"><span data-stu-id="37a91-705">In such situations, <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> performs a case-sensitive comparison to find the corresponding table, and creates a new table if no exact match exists.</span></span> <span data-ttu-id="37a91-706">下列 C# 程式碼說明此行為。</span><span class="sxs-lookup"><span data-stu-id="37a91-706">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
dataset.Tables.Add("AAA");  
adapter.FillSchema(dataset, "aaa"); // Fills the schema of "aaa", which already exists in the DataSet.  
adapter.FillSchema(dataset, "Aaa"); // Adds a new table called "Aaa".  
```  
  
 <span data-ttu-id="37a91-707">如果<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>呼叫時，<xref:System.Data.DataSet>只會包含一個<xref:System.Data.DataTable>名稱只有大小寫不同，，<xref:System.Data.DataTable>會更新。</span><span class="sxs-lookup"><span data-stu-id="37a91-707">If <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called and the <xref:System.Data.DataSet> contains only one <xref:System.Data.DataTable> whose name differs only by case, that <xref:System.Data.DataTable> is updated.</span></span> <span data-ttu-id="37a91-708">在此案例中，比較不區分大小寫。</span><span class="sxs-lookup"><span data-stu-id="37a91-708">In this scenario, the comparison is case insensitive.</span></span> <span data-ttu-id="37a91-709">下列 C# 程式碼說明此行為。</span><span class="sxs-lookup"><span data-stu-id="37a91-709">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
adapter.FillSchema(dataset, "AAA"); // Fills the schema of table "aaa" because only one similarly named table is in the DataSet.  
```  
  
 <span data-ttu-id="37a91-710"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 不會傳回任何資料列。</span><span class="sxs-lookup"><span data-stu-id="37a91-710"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> does not return any rows.</span></span> <span data-ttu-id="37a91-711">使用<xref:System.Data.Common.DbDataAdapter.Fill%2A>方法，以將資料列加入<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="37a91-711">Use the <xref:System.Data.Common.DbDataAdapter.Fill%2A> method to add rows to a <xref:System.Data.DataTable>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="37a91-712">當處理批次 SQL 陳述式會傳回多個結果，實作<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>的.NET Framework Data Provider for OLE DB 擷取第一個結果的結構描述資訊。</span><span class="sxs-lookup"><span data-stu-id="37a91-712">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</span></span> <span data-ttu-id="37a91-713">若要擷取多個結果的結構描述資訊，請使用<xref:System.Data.Common.DbDataAdapter.Fill%2A>具有<xref:System.Data.MissingSchemaAction>設定為`AddWithKey`。</span><span class="sxs-lookup"><span data-stu-id="37a91-713">To retrieve schema information for multiple results, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> with the <xref:System.Data.MissingSchemaAction> set to `AddWithKey`.</span></span>  
  
 <span data-ttu-id="37a91-714">使用 <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 時，.NET Framework Data Provider for SQL Server 會將 FOR BROWSE 子句附加到正要執行的陳述式。</span><span class="sxs-lookup"><span data-stu-id="37a91-714">When using <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, the .NET Framework Data Provider for SQL Server appends a FOR BROWSE clause to the statement being executed.</span></span> <span data-ttu-id="37a91-715">使用者應注意潛在的副作用，例如使用 SET FMTONLY ON 陳述式的干擾。</span><span class="sxs-lookup"><span data-stu-id="37a91-715">The user should be aware of potential side effects, such as interference with the use of SET FMTONLY ON statements.</span></span> <span data-ttu-id="37a91-716">如需詳細資訊，請參閱 [SET FMTONLY (Transact-SQL)](/sql/t-sql/statements/set-fmtonly-transact-sql)。</span><span class="sxs-lookup"><span data-stu-id="37a91-716">For more information, see [SET FMTONLY (Transact-SQL)](/sql/t-sql/statements/set-fmtonly-transact-sql).</span></span>
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="37a91-717">這個實作<see cref="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)" />方法受到保護，設計用於使用.NET Framework 資料提供者。</span><span class="sxs-lookup"><span data-stu-id="37a91-717">This implementation of the <see cref="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)" /> method is protected and is designed for use by a .NET Framework data provider.</span></span></para></block>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="37a91-718">DbProviderFactory (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="37a91-718">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="37a91-719">ADO.NET 概觀</span><span class="sxs-lookup"><span data-stu-id="37a91-719">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetBatchedParameter">
      <MemberSignature Language="C#" Value="protected virtual System.Data.IDataParameter GetBatchedParameter (int commandIdentifier, int parameterIndex);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.IDataParameter GetBatchedParameter(int32 commandIdentifier, int32 parameterIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.GetBatchedParameter(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetBatchedParameter (commandIdentifier As Integer, parameterIndex As Integer) As IDataParameter" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Data::IDataParameter ^ GetBatchedParameter(int commandIdentifier, int parameterIndex);" />
      <MemberSignature Language="F#" Value="abstract member GetBatchedParameter : int * int -&gt; System.Data.IDataParameter&#xA;override this.GetBatchedParameter : int * int -&gt; System.Data.IDataParameter" Usage="dbDataAdapter.GetBatchedParameter (commandIdentifier, parameterIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDataParameter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandIdentifier" Type="System.Int32" />
        <Parameter Name="parameterIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="commandIdentifier"><span data-ttu-id="37a91-720">要從其中擷取參數的命令索引。</span><span class="sxs-lookup"><span data-stu-id="37a91-720">The index of the command to retrieve the parameter from.</span></span></param>
        <param name="parameterIndex"><span data-ttu-id="37a91-721">命令內參數的索引。</span><span class="sxs-lookup"><span data-stu-id="37a91-721">The index of the parameter within the command.</span></span></param>
        <summary><span data-ttu-id="37a91-722">從目前批次中的其中一個命令傳回 <see cref="T:System.Data.IDataParameter" />。</span><span class="sxs-lookup"><span data-stu-id="37a91-722">Returns a <see cref="T:System.Data.IDataParameter" /> from one of the commands in the current batch.</span></span></summary>
        <returns><span data-ttu-id="37a91-723">指定的 <see cref="T:System.Data.IDataParameter" />。</span><span class="sxs-lookup"><span data-stu-id="37a91-723">The <see cref="T:System.Data.IDataParameter" /> specified.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37a91-724">在  <xref:System.Data.Common.DbDataAdapter>，此方法會擲回<xref:System.NotSupportedException>。</span><span class="sxs-lookup"><span data-stu-id="37a91-724">In <xref:System.Data.Common.DbDataAdapter>, this method throws <xref:System.NotSupportedException>.</span></span> <span data-ttu-id="37a91-725">類別繼承自<xref:System.Data.Common.DbDataAdapter>覆寫這個方法，以提供的批次支援。</span><span class="sxs-lookup"><span data-stu-id="37a91-725">Classes that inherit from <xref:System.Data.Common.DbDataAdapter> override this method to provide support for batches.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="37a91-726">配置器不支援批次。</span><span class="sxs-lookup"><span data-stu-id="37a91-726">The adapter does not support batches.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="37a91-727">這個方法會保護，而且設計用於使用.NET Framework 資料提供者。</span><span class="sxs-lookup"><span data-stu-id="37a91-727">This method is protected and is designed for use by a .NET Framework data provider.</span></span>  
  
<span data-ttu-id="37a91-728">如果類別繼承自<see cref="T:System.Data.Common.DbDataAdapter" />支援批次，該類別會覆寫這個方法，以允許使用者執行的批次。</span><span class="sxs-lookup"><span data-stu-id="37a91-728">If a class that inherits from <see cref="T:System.Data.Common.DbDataAdapter" /> supports batches, that class overrides this method to allow users to execute a batch.</span></span> <span data-ttu-id="37a91-729">實作會使用<paramref name="commandIdentifier" />可找出要求的命令，則會使用<paramref name="parameterIndex" />可找出要求的參數。</span><span class="sxs-lookup"><span data-stu-id="37a91-729">An implementation uses the <paramref name="commandIdentifier" /> provided to locate the requested command, then uses the <paramref name="parameterIndex" /> provided to locate the requested parameter.</span></span> <span data-ttu-id="37a91-730">例如，<paramref name="commandIdentifier" />為 0 和<paramref name="parameterIndex" />0 會傳回從第一個命令批次中的第一個參數。</span><span class="sxs-lookup"><span data-stu-id="37a91-730">For example, a <paramref name="commandIdentifier" /> of 0 and a <paramref name="parameterIndex" /> of 0 returns the first parameter from the first command in the batch.</span></span></para></block>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="37a91-731">DbProviderFactory (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="37a91-731">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="37a91-732">ADO.NET 概觀</span><span class="sxs-lookup"><span data-stu-id="37a91-732">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetBatchedRecordsAffected">
      <MemberSignature Language="C#" Value="protected virtual bool GetBatchedRecordsAffected (int commandIdentifier, out int recordsAffected, out Exception error);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool GetBatchedRecordsAffected(int32 commandIdentifier, [out] int32&amp; recordsAffected, [out] class System.Exception&amp; error) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.GetBatchedRecordsAffected(System.Int32,System.Int32@,System.Exception@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetBatchedRecordsAffected (commandIdentifier As Integer, ByRef recordsAffected As Integer, ByRef error As Exception) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool GetBatchedRecordsAffected(int commandIdentifier, [Runtime::InteropServices::Out] int % recordsAffected, [Runtime::InteropServices::Out] Exception ^ % error);" />
      <MemberSignature Language="F#" Value="abstract member GetBatchedRecordsAffected : int *  *  -&gt; bool&#xA;override this.GetBatchedRecordsAffected : int *  *  -&gt; bool" Usage="dbDataAdapter.GetBatchedRecordsAffected (commandIdentifier, recordsAffected, error)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandIdentifier" Type="System.Int32" />
        <Parameter Name="recordsAffected" Type="System.Int32" RefType="out" />
        <Parameter Name="error" Type="System.Exception" RefType="out" />
      </Parameters>
      <Docs>
        <param name="commandIdentifier"><span data-ttu-id="37a91-733">批次中個別命令之以零為基礎的資料行序數。</span><span class="sxs-lookup"><span data-stu-id="37a91-733">The zero-based column ordinal of the individual command within the batch.</span></span></param>
        <param name="recordsAffected"><span data-ttu-id="37a91-734">資料存放區中受批次內指定命令影響的資料行數目。</span><span class="sxs-lookup"><span data-stu-id="37a91-734">The number of rows affected in the data store by the specified command within the batch.</span></span></param>
        <param name="error"><span data-ttu-id="37a91-735">在指定命令的執行期間所擲回的 <see cref="T:System.Exception" />。</span><span class="sxs-lookup"><span data-stu-id="37a91-735">An <see cref="T:System.Exception" /> thrown during execution of the specified command.</span></span> <span data-ttu-id="37a91-736">如果未擲回例外狀況，則傳回 <see langword="null" /> (在 Visual Basic 中為 <see langword="Nothing" />)。</span><span class="sxs-lookup"><span data-stu-id="37a91-736">Returns <see langword="null" /> (<see langword="Nothing" /> in Visual Basic) if no exception is thrown.</span></span></param>
        <summary><span data-ttu-id="37a91-737">傳回在較大之批次更新中嘗試個別更新的相關資訊。</span><span class="sxs-lookup"><span data-stu-id="37a91-737">Returns information about an individual update attempt within a larger batched update.</span></span></summary>
        <returns><span data-ttu-id="37a91-738">在較大批次更新內個別更新嘗試的相關資訊。</span><span class="sxs-lookup"><span data-stu-id="37a91-738">Information about an individual update attempt within a larger batched update.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37a91-739">支援批次的更新邏輯的資料提供者必須在項目覆寫虛擬方法的一系列<xref:System.Data.Common.DbDataAdapter>類別。</span><span class="sxs-lookup"><span data-stu-id="37a91-739">Data providers that support batched updating logic must override a series of virtual methods on the <xref:System.Data.Common.DbDataAdapter> class.</span></span> <span data-ttu-id="37a91-740">`GetBatchedRecordsAffected` 代表其中一個這些虛擬方法。</span><span class="sxs-lookup"><span data-stu-id="37a91-740">`GetBatchedRecordsAffected` represents one of those virtual methods.</span></span> <span data-ttu-id="37a91-741">`DbDataAdapter`類別會倚賴`GetBatchedRecordsAffected`若要判斷成功或失敗的批次內的個別更新嘗試，因此它可以將標記每個對應<xref:System.Data.DataRow>據此。</span><span class="sxs-lookup"><span data-stu-id="37a91-741">The `DbDataAdapter` class relies on `GetBatchedRecordsAffected` to determine the success or failure of individual update attempts within a batch so it can mark each corresponding <xref:System.Data.DataRow> accordingly.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="37a91-742">ADO.NET 概觀</span><span class="sxs-lookup"><span data-stu-id="37a91-742">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetFillParameters">
      <MemberSignature Language="C#" Value="public override System.Data.IDataParameter[] GetFillParameters ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.IDataParameter[] GetFillParameters() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.GetFillParameters" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetFillParameters () As IDataParameter()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Data::IDataParameter ^&gt; ^ GetFillParameters();" />
      <MemberSignature Language="F#" Value="override this.GetFillParameters : unit -&gt; System.Data.IDataParameter[]" Usage="dbDataAdapter.GetFillParameters " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataAdapter.GetFillParameters</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;netcore-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.IDataParameter[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="37a91-743">取得在執行 SQL SELECT 陳述式時由使用者設定的參數。</span><span class="sxs-lookup"><span data-stu-id="37a91-743">Gets the parameters set by the user when executing an SQL SELECT statement.</span></span></summary>
        <returns><span data-ttu-id="37a91-744"><see cref="T:System.Data.IDataParameter" /> 物件的陣列，含有由使用者設定的參數。</span><span class="sxs-lookup"><span data-stu-id="37a91-744">An array of <see cref="T:System.Data.IDataParameter" /> objects that contains the parameters set by the user.</span></span></returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="37a91-745">ADO.NET 概觀</span><span class="sxs-lookup"><span data-stu-id="37a91-745">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="InitializeBatching">
      <MemberSignature Language="C#" Value="protected virtual void InitializeBatching ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InitializeBatching() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.InitializeBatching" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub InitializeBatching ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void InitializeBatching();" />
      <MemberSignature Language="F#" Value="abstract member InitializeBatching : unit -&gt; unit&#xA;override this.InitializeBatching : unit -&gt; unit" Usage="dbDataAdapter.InitializeBatching " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="37a91-746">初始化 <see cref="T:System.Data.Common.DbDataAdapter" /> 的批次處理。</span><span class="sxs-lookup"><span data-stu-id="37a91-746">Initializes batching for the <see cref="T:System.Data.Common.DbDataAdapter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37a91-747">在  <xref:System.Data.Common.DbDataAdapter>，此方法會擲回<xref:System.NotSupportedException>。</span><span class="sxs-lookup"><span data-stu-id="37a91-747">In <xref:System.Data.Common.DbDataAdapter>, this method throws <xref:System.NotSupportedException>.</span></span> <span data-ttu-id="37a91-748">類別繼承自<xref:System.Data.Common.DbDataAdapter>覆寫這個方法，以提供的批次支援。</span><span class="sxs-lookup"><span data-stu-id="37a91-748">Classes that inherit from <xref:System.Data.Common.DbDataAdapter> override this method to provide support for batches.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="37a91-749">配置器不支援批次。</span><span class="sxs-lookup"><span data-stu-id="37a91-749">The adapter does not support batches.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="37a91-750">這個方法會保護，而且設計用於使用.NET Framework 資料提供者。</span><span class="sxs-lookup"><span data-stu-id="37a91-750">This method is protected and is designed for use by a .NET Framework data provider.</span></span>  
  
<span data-ttu-id="37a91-751">如果類別繼承自<see cref="T:System.Data.Common.DbDataAdapter" />支援批次，該類別會覆寫這個方法。</span><span class="sxs-lookup"><span data-stu-id="37a91-751">If a class that inherits from <see cref="T:System.Data.Common.DbDataAdapter" /> supports batches, that class overrides this method.</span></span> <span data-ttu-id="37a91-752">這個方法可讓類別來初始化支援批次所需的任何資源的機會。</span><span class="sxs-lookup"><span data-stu-id="37a91-752">This method gives the class the opportunity to initialize any resources necessary to support batching.</span></span> <span data-ttu-id="37a91-753">例如，類別可能配置來保存命令集的批次中的資料結構。</span><span class="sxs-lookup"><span data-stu-id="37a91-753">For example, a class may allocate a data structure to hold the set of commands in the batch.</span></span></para></block>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="37a91-754">DbProviderFactory (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="37a91-754">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="37a91-755">ADO.NET 概觀</span><span class="sxs-lookup"><span data-stu-id="37a91-755">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="InsertCommand">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbCommand InsertCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbCommand InsertCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataAdapter.InsertCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property InsertCommand As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Common::DbCommand ^ InsertCommand { System::Data::Common::DbCommand ^ get(); void set(System::Data::Common::DbCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InsertCommand : System.Data.Common.DbCommand with get, set" Usage="System.Data.Common.DbDataAdapter.InsertCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;netcore-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="37a91-756">取得或設定用來將新的資料錄插入至資料來源的命令。</span><span class="sxs-lookup"><span data-stu-id="37a91-756">Gets or sets a command used to insert new records into the data source.</span></span></summary>
        <value><span data-ttu-id="37a91-757"><see cref="T:System.Data.IDbCommand" />，在 <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> 期間用來為資料集中新的資料列插入在資料來源中的資料錄。</span><span class="sxs-lookup"><span data-stu-id="37a91-757">A <see cref="T:System.Data.IDbCommand" /> used during <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> to insert records in the data source for new rows in the data set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37a91-758">期間<xref:System.Data.Common.DbDataAdapter.Update%2A>，如果沒有設定這個屬性，而主索引鍵資訊是存在於<xref:System.Data.DataSet>，則<xref:System.Data.IDbDataAdapter.InsertCommand%2A>將會自動產生。</span><span class="sxs-lookup"><span data-stu-id="37a91-758">During <xref:System.Data.Common.DbDataAdapter.Update%2A>, if this property is not set and primary key information is present in the <xref:System.Data.DataSet>, the <xref:System.Data.IDbDataAdapter.InsertCommand%2A> will be automatically generated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="37a91-759">下列範例會建立衍生的類別<xref:System.Data.OleDb.OleDbDataAdapter>並設定其部分屬性。</span><span class="sxs-lookup"><span data-stu-id="37a91-759">The following example creates the derived class <xref:System.Data.OleDb.OleDbDataAdapter> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.InsertCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.InsertCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.InsertCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.InsertCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md"><span data-ttu-id="37a91-760">操作資料 (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="37a91-760">Manipulating Data (ADO.NET)</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="37a91-761">DbProviderFactory (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="37a91-761">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="37a91-762">ADO.NET 概觀</span><span class="sxs-lookup"><span data-stu-id="37a91-762">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OnFillError">
      <MemberSignature Language="C#" Value="protected virtual void OnFillError (System.Data.FillErrorEventArgs value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnFillError(class System.Data.FillErrorEventArgs value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.OnFillError(System.Data.FillErrorEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnFillError (value As FillErrorEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnFillError(System::Data::FillErrorEventArgs ^ value);" />
      <MemberSignature Language="F#" Value="abstract member OnFillError : System.Data.FillErrorEventArgs -&gt; unit&#xA;override this.OnFillError : System.Data.FillErrorEventArgs -&gt; unit" Usage="dbDataAdapter.OnFillError value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.FillErrorEventArgs" Index="0" FrameworkAlternate="netframework-1.1" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnRowUpdated">
      <MemberSignature Language="C#" Value="protected virtual void OnRowUpdated (System.Data.Common.RowUpdatedEventArgs value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowUpdated(class System.Data.Common.RowUpdatedEventArgs value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowUpdated (value As RowUpdatedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowUpdated(System::Data::Common::RowUpdatedEventArgs ^ value);" />
      <MemberSignature Language="F#" Value="abstract member OnRowUpdated : System.Data.Common.RowUpdatedEventArgs -&gt; unit&#xA;override this.OnRowUpdated : System.Data.Common.RowUpdatedEventArgs -&gt; unit" Usage="dbDataAdapter.OnRowUpdated value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.Common.RowUpdatedEventArgs" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="37a91-763"><see cref="T:System.Data.Common.RowUpdatedEventArgs" />，其中包含事件資料。</span><span class="sxs-lookup"><span data-stu-id="37a91-763">A <see cref="T:System.Data.Common.RowUpdatedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="37a91-764">引發 .NET Framework 資料提供者的 <see langword="RowUpdated" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="37a91-764">Raises the <see langword="RowUpdated" /> event of a .NET Framework data provider.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37a91-765">引發事件會透過委派叫用此事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="37a91-765">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="37a91-766">如需概觀，請參閱[處理和引發事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="37a91-766">For an overview, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="37a91-767">當覆寫<see cref="M:System.Data.Common.DbDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)" />衍生類別時，請務必呼叫基底類別的<see cref="M:System.Data.Common.DbDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)" />方法。</span><span class="sxs-lookup"><span data-stu-id="37a91-767">When overriding <see cref="M:System.Data.Common.DbDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Data.Common.DbDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)" /> method.</span></span></para></block>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="37a91-768">DbProviderFactory (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="37a91-768">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="37a91-769">ADO.NET 概觀</span><span class="sxs-lookup"><span data-stu-id="37a91-769">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OnRowUpdating">
      <MemberSignature Language="C#" Value="protected virtual void OnRowUpdating (System.Data.Common.RowUpdatingEventArgs value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowUpdating(class System.Data.Common.RowUpdatingEventArgs value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowUpdating (value As RowUpdatingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowUpdating(System::Data::Common::RowUpdatingEventArgs ^ value);" />
      <MemberSignature Language="F#" Value="abstract member OnRowUpdating : System.Data.Common.RowUpdatingEventArgs -&gt; unit&#xA;override this.OnRowUpdating : System.Data.Common.RowUpdatingEventArgs -&gt; unit" Usage="dbDataAdapter.OnRowUpdating value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.Common.RowUpdatingEventArgs" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="37a91-770">包含事件資料的 <see cref="T:System.Data.Common.RowUpdatingEventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="37a91-770">An <see cref="T:System.Data.Common.RowUpdatingEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="37a91-771">引發 .NET Framework 資料提供者的 <see langword="RowUpdating" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="37a91-771">Raises the <see langword="RowUpdating" /> event of a .NET Framework data provider.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37a91-772">引發事件會透過委派叫用此事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="37a91-772">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="37a91-773">如需概觀，請參閱[處理和引發事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="37a91-773">For an overview, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="37a91-774">當覆寫<see cref="M:System.Data.Common.DbDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)" />衍生類別時，請務必呼叫基底類別的<see cref="M:System.Data.Common.DbDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)" />方法。</span><span class="sxs-lookup"><span data-stu-id="37a91-774">When overriding <see cref="M:System.Data.Common.DbDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)" /> in a derived class, be sure to call the bases class's <see cref="M:System.Data.Common.DbDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)" /> method.</span></span></para></block>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="37a91-775">DbProviderFactory (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="37a91-775">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="37a91-776">ADO.NET 概觀</span><span class="sxs-lookup"><span data-stu-id="37a91-776">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SelectCommand">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbCommand SelectCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbCommand SelectCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataAdapter.SelectCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectCommand As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Common::DbCommand ^ SelectCommand { System::Data::Common::DbCommand ^ get(); void set(System::Data::Common::DbCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SelectCommand : System.Data.Common.DbCommand with get, set" Usage="System.Data.Common.DbDataAdapter.SelectCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;netcore-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="37a91-777">取得或設定用來在資料來源中選取資料錄的命令。</span><span class="sxs-lookup"><span data-stu-id="37a91-777">Gets or sets a command used to select records in the data source.</span></span></summary>
        <value><span data-ttu-id="37a91-778"><see cref="T:System.Data.IDbCommand" />，在 <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> 期間用來為資料集中的位置從資料來源選取資料錄。</span><span class="sxs-lookup"><span data-stu-id="37a91-778">A <see cref="T:System.Data.IDbCommand" /> that is used during <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> to select records from data source for placement in the data set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="37a91-779">下列範例會建立衍生的類別<xref:System.Data.OleDb.OleDbDataAdapter>並設定其部分屬性。</span><span class="sxs-lookup"><span data-stu-id="37a91-779">The following example creates the derived class <xref:System.Data.OleDb.OleDbDataAdapter> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.SelectCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.SelectCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.SelectCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.SelectCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md"><span data-ttu-id="37a91-780">操作資料 (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="37a91-780">Manipulating Data (ADO.NET)</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="37a91-781">DbProviderFactory (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="37a91-781">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="37a91-782">ADO.NET 概觀</span><span class="sxs-lookup"><span data-stu-id="37a91-782">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbDataAdapter.DeleteCommand">
      <MemberSignature Language="C#" Value="System.Data.IDbCommand System.Data.IDbDataAdapter.DeleteCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand System.Data.IDbDataAdapter.DeleteCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#DeleteCommand" />
      <MemberSignature Language="VB.NET" Value=" Property DeleteCommand As IDbCommand Implements IDbDataAdapter.DeleteCommand" />
      <MemberSignature Language="C++ CLI" Value="property System::Data::IDbCommand ^ System::Data::IDbDataAdapter::DeleteCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Data.IDbDataAdapter.DeleteCommand" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataAdapter.DeleteCommand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="37a91-783">取得或設定 SQL 陳述式從資料集刪除資料錄。</span><span class="sxs-lookup"><span data-stu-id="37a91-783">Gets or sets an SQL statement for deleting records from the data set.</span></span></summary>
        <value><span data-ttu-id="37a91-784"><see cref="T:System.Data.IDbCommand" />，在 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> 期間用來為資料集中所刪除的資料列刪除在資料來源中的資料錄。</span><span class="sxs-lookup"><span data-stu-id="37a91-784">An <see cref="T:System.Data.IDbCommand" /> used during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> to delete records in the data source for deleted rows in the data set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37a91-785">這個成員是明確介面成員實作，</span><span class="sxs-lookup"><span data-stu-id="37a91-785">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="37a91-786">只有在 <xref:System.Data.Common.DbDataAdapter> 執行個體轉換成 <xref:System.Data.IDbDataAdapter> 介面時，才能使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="37a91-786">It can be used only when the <xref:System.Data.Common.DbDataAdapter> instance is cast to an <xref:System.Data.IDbDataAdapter> interface.</span></span>  
  
 <span data-ttu-id="37a91-787">如需詳細資訊，請參閱<xref:System.Data.IDbDataAdapter.DeleteCommand%2A>。</span><span class="sxs-lookup"><span data-stu-id="37a91-787">For more information, see <xref:System.Data.IDbDataAdapter.DeleteCommand%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="37a91-788">ADO.NET 概觀</span><span class="sxs-lookup"><span data-stu-id="37a91-788">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbDataAdapter.InsertCommand">
      <MemberSignature Language="C#" Value="System.Data.IDbCommand System.Data.IDbDataAdapter.InsertCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand System.Data.IDbDataAdapter.InsertCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#InsertCommand" />
      <MemberSignature Language="VB.NET" Value=" Property InsertCommand As IDbCommand Implements IDbDataAdapter.InsertCommand" />
      <MemberSignature Language="C++ CLI" Value="property System::Data::IDbCommand ^ System::Data::IDbDataAdapter::InsertCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Data.IDbDataAdapter.InsertCommand" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataAdapter.InsertCommand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="37a91-789">取得或設定用來將新的資料錄插入至資料來源的 SQL 陳述式。</span><span class="sxs-lookup"><span data-stu-id="37a91-789">Gets or sets an SQL statement used to insert new records into the data source.</span></span></summary>
        <value><span data-ttu-id="37a91-790"><see cref="T:System.Data.IDbCommand" />，在 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> 期間用來為資料集中新的資料列插入在資料來源中的資料錄。</span><span class="sxs-lookup"><span data-stu-id="37a91-790">An <see cref="T:System.Data.IDbCommand" /> used during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> to insert records in the data source for new rows in the data set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37a91-791">這個成員是明確介面成員實作，</span><span class="sxs-lookup"><span data-stu-id="37a91-791">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="37a91-792">只有在 <xref:System.Data.Common.DbDataAdapter> 執行個體轉換成 <xref:System.Data.IDbDataAdapter> 介面時，才能使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="37a91-792">It can be used only when the <xref:System.Data.Common.DbDataAdapter> instance is cast to an <xref:System.Data.IDbDataAdapter> interface.</span></span>  
  
 <span data-ttu-id="37a91-793">如需詳細資訊，請參閱<xref:System.Data.IDbDataAdapter.InsertCommand%2A>。</span><span class="sxs-lookup"><span data-stu-id="37a91-793">For more information, see <xref:System.Data.IDbDataAdapter.InsertCommand%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="37a91-794">ADO.NET 概觀</span><span class="sxs-lookup"><span data-stu-id="37a91-794">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbDataAdapter.SelectCommand">
      <MemberSignature Language="C#" Value="System.Data.IDbCommand System.Data.IDbDataAdapter.SelectCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand System.Data.IDbDataAdapter.SelectCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#SelectCommand" />
      <MemberSignature Language="VB.NET" Value=" Property SelectCommand As IDbCommand Implements IDbDataAdapter.SelectCommand" />
      <MemberSignature Language="C++ CLI" Value="property System::Data::IDbCommand ^ System::Data::IDbDataAdapter::SelectCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Data.IDbDataAdapter.SelectCommand" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataAdapter.SelectCommand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="37a91-795">取得或設定用來在資料來源中選取資料錄的 SQL 陳述式。</span><span class="sxs-lookup"><span data-stu-id="37a91-795">Gets or sets an SQL statement used to select records in the data source.</span></span></summary>
        <value><span data-ttu-id="37a91-796"><see cref="T:System.Data.IDbCommand" />，在 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> 期間用來為資料集中的位置從資料來源選取資料錄。</span><span class="sxs-lookup"><span data-stu-id="37a91-796">An <see cref="T:System.Data.IDbCommand" /> that is used during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> to select records from data source for placement in the data set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37a91-797">這個成員是明確介面成員實作，</span><span class="sxs-lookup"><span data-stu-id="37a91-797">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="37a91-798">只有在 <xref:System.Data.Common.DbDataAdapter> 執行個體轉換成 <xref:System.Data.IDbDataAdapter> 介面時，才能使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="37a91-798">It can be used only when the <xref:System.Data.Common.DbDataAdapter> instance is cast to an <xref:System.Data.IDbDataAdapter> interface.</span></span>  
  
 <span data-ttu-id="37a91-799">如需詳細資訊，請參閱<xref:System.Data.IDbDataAdapter.SelectCommand%2A>。</span><span class="sxs-lookup"><span data-stu-id="37a91-799">For more information, see <xref:System.Data.IDbDataAdapter.SelectCommand%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="37a91-800">ADO.NET 概觀</span><span class="sxs-lookup"><span data-stu-id="37a91-800">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbDataAdapter.UpdateCommand">
      <MemberSignature Language="C#" Value="System.Data.IDbCommand System.Data.IDbDataAdapter.UpdateCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand System.Data.IDbDataAdapter.UpdateCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#UpdateCommand" />
      <MemberSignature Language="VB.NET" Value=" Property UpdateCommand As IDbCommand Implements IDbDataAdapter.UpdateCommand" />
      <MemberSignature Language="C++ CLI" Value="property System::Data::IDbCommand ^ System::Data::IDbDataAdapter::UpdateCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Data.IDbDataAdapter.UpdateCommand" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataAdapter.UpdateCommand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="37a91-801">取得或設定用來在資料來源中更新資料錄的 SQL 陳述式。</span><span class="sxs-lookup"><span data-stu-id="37a91-801">Gets or sets an SQL statement used to update records in the data source.</span></span></summary>
        <value><span data-ttu-id="37a91-802"><see cref="T:System.Data.IDbCommand" />，在 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> 期間用來為資料集中所修改的資料列更新在資料來源中的資料錄。</span><span class="sxs-lookup"><span data-stu-id="37a91-802">An <see cref="T:System.Data.IDbCommand" /> used during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> to update records in the data source for modified rows in the data set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37a91-803">這個成員是明確介面成員實作，</span><span class="sxs-lookup"><span data-stu-id="37a91-803">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="37a91-804">只有在 <xref:System.Data.Common.DbDataAdapter> 執行個體轉換成 <xref:System.Data.IDbDataAdapter> 介面時，才能使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="37a91-804">It can be used only when the <xref:System.Data.Common.DbDataAdapter> instance is cast to an <xref:System.Data.IDbDataAdapter> interface.</span></span>  
  
 <span data-ttu-id="37a91-805">如需詳細資訊，請參閱<xref:System.Data.IDbDataAdapter.UpdateCommand%2A>。</span><span class="sxs-lookup"><span data-stu-id="37a91-805">For more information, see <xref:System.Data.IDbDataAdapter.UpdateCommand%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="37a91-806">ADO.NET 概觀</span><span class="sxs-lookup"><span data-stu-id="37a91-806">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.ICloneable.Clone">
      <MemberSignature Language="C#" Value="object ICloneable.Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ICloneable.Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.System#ICloneable#Clone" />
      <MemberSignature Language="VB.NET" Value="Function Clone () As Object Implements ICloneable.Clone" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ICloneable.Clone() = ICloneable::Clone;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("use 'protected DbDataAdapter(DbDataAdapter)' ctor")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="37a91-807">建立目前執行個體複本的新物件。</span><span class="sxs-lookup"><span data-stu-id="37a91-807">Creates a new object that is a copy of the current instance.</span></span></summary>
        <returns><span data-ttu-id="37a91-808">這個執行個體複本的新物件。</span><span class="sxs-lookup"><span data-stu-id="37a91-808">A new object that is a copy of this instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37a91-809">這個成員是明確介面成員實作，</span><span class="sxs-lookup"><span data-stu-id="37a91-809">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="37a91-810">只有在 <xref:System.Data.Common.DbDataAdapter> 執行個體轉換成 <xref:System.ICloneable> 介面時，才能使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="37a91-810">It can be used only when the <xref:System.Data.Common.DbDataAdapter> instance is cast to an <xref:System.ICloneable> interface.</span></span>  
  
 <span data-ttu-id="37a91-811">如需詳細資訊，請參閱<xref:System.ICloneable.Clone%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="37a91-811">For more information, see <xref:System.ICloneable.Clone%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="37a91-812">ADO.NET 概觀</span><span class="sxs-lookup"><span data-stu-id="37a91-812">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TerminateBatching">
      <MemberSignature Language="C#" Value="protected virtual void TerminateBatching ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void TerminateBatching() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.TerminateBatching" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub TerminateBatching ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void TerminateBatching();" />
      <MemberSignature Language="F#" Value="abstract member TerminateBatching : unit -&gt; unit&#xA;override this.TerminateBatching : unit -&gt; unit" Usage="dbDataAdapter.TerminateBatching " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="37a91-813">結束 <see cref="T:System.Data.Common.DbDataAdapter" /> 的批次處理。</span><span class="sxs-lookup"><span data-stu-id="37a91-813">Ends batching for the <see cref="T:System.Data.Common.DbDataAdapter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37a91-814">在  <xref:System.Data.Common.DbDataAdapter>，此方法會擲回<xref:System.NotSupportedException>。</span><span class="sxs-lookup"><span data-stu-id="37a91-814">In <xref:System.Data.Common.DbDataAdapter>, this method throws <xref:System.NotSupportedException>.</span></span> <span data-ttu-id="37a91-815">類別繼承自<xref:System.Data.Common.DbDataAdapter>覆寫這個方法，以提供的批次支援。</span><span class="sxs-lookup"><span data-stu-id="37a91-815">Classes that inherit from <xref:System.Data.Common.DbDataAdapter> override this method to provide support for batches.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="37a91-816">配置器不支援批次。</span><span class="sxs-lookup"><span data-stu-id="37a91-816">The adapter does not support batches.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="37a91-817">這個方法會保護，而且設計用於使用.NET Framework 資料提供者。</span><span class="sxs-lookup"><span data-stu-id="37a91-817">This method is protected and is designed for use by a .NET Framework data provider.</span></span>  
  
<span data-ttu-id="37a91-818">如果類別繼承自<see cref="T:System.Data.Common.DbDataAdapter" />支援批次，該類別會覆寫這個方法。</span><span class="sxs-lookup"><span data-stu-id="37a91-818">If a class that inherits from <see cref="T:System.Data.Common.DbDataAdapter" /> supports batches, that class overrides this method.</span></span> <span data-ttu-id="37a91-819">這個方法可讓類別處置任何資源配置給支援批次的機會。</span><span class="sxs-lookup"><span data-stu-id="37a91-819">This method gives the class the opportunity to dispose of any resources allocated to support batching.</span></span> <span data-ttu-id="37a91-820">例如，類別可能會取消配置保存命令批次中的資料結構。</span><span class="sxs-lookup"><span data-stu-id="37a91-820">For example, the class may deallocate the data structure that holds the commands in the batch.</span></span></para></block>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="37a91-821">DbProviderFactory (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="37a91-821">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="37a91-822">ADO.NET 概觀</span><span class="sxs-lookup"><span data-stu-id="37a91-822">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Update">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="37a91-823">針對 <see cref="T:System.Data.DataSet" /> 中的每個插入、更新或刪除的資料列，執行個別的 INSERT、UPDATE 或 DELETE 陳述式，以更新資料庫中的值。</span><span class="sxs-lookup"><span data-stu-id="37a91-823">Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the <see cref="T:System.Data.DataSet" />.</span></span></summary>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="37a91-824">ADO.NET 概觀</span><span class="sxs-lookup"><span data-stu-id="37a91-824">ADO.NET Overview</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public int Update (System.Data.DataRow[] dataRows);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Update(class System.Data.DataRow[] dataRows) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Update (dataRows As DataRow()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Update(cli::array &lt;System::Data::DataRow ^&gt; ^ dataRows);" />
      <MemberSignature Language="F#" Value="override this.Update : System.Data.DataRow[] -&gt; int" Usage="dbDataAdapter.Update dataRows" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataRows" Type="System.Data.DataRow[]" />
      </Parameters>
      <Docs>
        <param name="dataRows"><span data-ttu-id="37a91-825">用來更新資料來源的 <see cref="T:System.Data.DataRow" /> 物件陣列。</span><span class="sxs-lookup"><span data-stu-id="37a91-825">An array of <see cref="T:System.Data.DataRow" /> objects used to update the data source.</span></span></param>
        <summary><span data-ttu-id="37a91-826">針對 <see cref="T:System.Data.DataSet" /> 的指定陣列中每個插入、更新或刪除的資料列，執行個別的 INSERT、UPDATE 或 DELETE 陳述式，以更新資料庫中的值。</span><span class="sxs-lookup"><span data-stu-id="37a91-826">Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified array in the <see cref="T:System.Data.DataSet" />.</span></span></summary>
        <returns><span data-ttu-id="37a91-827">自 <see cref="T:System.Data.DataSet" /> 中成功更新的資料列數目。</span><span class="sxs-lookup"><span data-stu-id="37a91-827">The number of rows successfully updated from the <see cref="T:System.Data.DataSet" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37a91-828">當應用程式呼叫<xref:System.Data.Common.DbDataAdapter.Update%2A>方法中，<xref:System.Data.Common.DbDataAdapter>會檢查<xref:System.Data.DataRow.RowState%2A>屬性，並執行必要的 INSERT、 UPDATE 或 DELETE 陳述式，反覆地針對每個的資料列中，然後再根據順序中設定的索引<xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="37a91-828">When an application calls the <xref:System.Data.Common.DbDataAdapter.Update%2A> method, the <xref:System.Data.Common.DbDataAdapter> examines the <xref:System.Data.DataRow.RowState%2A> property, and executes the required INSERT, UPDATE, or DELETE statements iteratively for each row, based on the order of the indexes configured in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="37a91-829">例如，<xref:System.Data.Common.DbDataAdapter.Update%2A>可能會執行 DELETE 陳述式，後面接著 INSERT 陳述式和另一個的 DELETE 陳述式，由於資料列的排序<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="37a91-829">For example, <xref:System.Data.Common.DbDataAdapter.Update%2A> might execute a DELETE statement, followed by an INSERT statement, and then another DELETE statement, due to the ordering of the rows in the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="37a91-830">請注意，這些陳述式都不會執行以批次程序;個別更新每個資料列。</span><span class="sxs-lookup"><span data-stu-id="37a91-830">It should be noted that these statements are not performed as a batch process; each row is updated individually.</span></span> <span data-ttu-id="37a91-831">應用程式可以呼叫<xref:System.Data.DataSet.GetChanges%2A>情況下，您必須在其中控制序列的陳述式型別 （例如，在更新之前插入） 的方法。</span><span class="sxs-lookup"><span data-stu-id="37a91-831">An application can call the <xref:System.Data.DataSet.GetChanges%2A> method in situations where you must control the sequence of statement types (for example, INSERTs before UPDATEs).</span></span> <span data-ttu-id="37a91-832">如需詳細資訊，請參閱 <<c0> [ 使用 Dataadapter 更新資料來源](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md)。</span><span class="sxs-lookup"><span data-stu-id="37a91-832">For more information, see [Updating Data Sources with DataAdapters](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md).</span></span>  
  
 <span data-ttu-id="37a91-833">如果尚未指定 INSERT、 UPDATE 或 DELETE 陳述式，<xref:System.Data.Common.DbDataAdapter.Update%2A>方法會產生例外狀況。</span><span class="sxs-lookup"><span data-stu-id="37a91-833">If INSERT, UPDATE, or DELETE statements have not been specified, the <xref:System.Data.Common.DbDataAdapter.Update%2A> method generates an exception.</span></span> <span data-ttu-id="37a91-834">不過，您可以建立<xref:System.Data.SqlClient.SqlCommandBuilder>或是<xref:System.Data.OleDb.OleDbCommandBuilder>物件來自動產生單一資料表更新的 SQL 陳述式，如果您將設定`SelectCommand`.NET Framework 資料提供者的屬性。</span><span class="sxs-lookup"><span data-stu-id="37a91-834">However, you can create a <xref:System.Data.SqlClient.SqlCommandBuilder> or <xref:System.Data.OleDb.OleDbCommandBuilder> object to automatically generate SQL statements for single-table updates if you set the `SelectCommand` property of a .NET Framework data provider.</span></span> <span data-ttu-id="37a91-835">然後，您未設定任何其他 SQL 陳述式由產生**CommandBuilder**。</span><span class="sxs-lookup"><span data-stu-id="37a91-835">Then, any additional SQL statements that you do not set are generated by the **CommandBuilder**.</span></span> <span data-ttu-id="37a91-836">此層代 」 邏輯需要索引鍵資料行資訊會出現在<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="37a91-836">This generation logic requires key column information to be present in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="37a91-837">如需詳細資訊，請參閱[Commandbuilder 產生命令](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)。</span><span class="sxs-lookup"><span data-stu-id="37a91-837">For more information see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
 <span data-ttu-id="37a91-838"><xref:System.Data.Common.DbDataAdapter.Update%2A>方法會從第一個對應，然後再執行更新中所列的資料表擷取資料列。</span><span class="sxs-lookup"><span data-stu-id="37a91-838">The <xref:System.Data.Common.DbDataAdapter.Update%2A> method retrieves rows from the table listed in the first mapping before performing an update.</span></span> <span data-ttu-id="37a91-839"><xref:System.Data.Common.DbDataAdapter.Update%2A>然後重新整理使用值的資料列<xref:System.Data.IDbCommand.UpdatedRowSource%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="37a91-839">The <xref:System.Data.Common.DbDataAdapter.Update%2A> then refreshes the row using the value of the <xref:System.Data.IDbCommand.UpdatedRowSource%2A> property.</span></span> <span data-ttu-id="37a91-840">傳回任何其他資料列都會被忽略。</span><span class="sxs-lookup"><span data-stu-id="37a91-840">Any additional rows returned are ignored.</span></span>  
  
 <span data-ttu-id="37a91-841">任何資料載入回後<xref:System.Data.DataSet>，則<xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A>引發事件時，讓使用者能夠檢查協調<xref:System.Data.DataSet>資料列和任何輸出命令所傳回的參數。</span><span class="sxs-lookup"><span data-stu-id="37a91-841">After any data is loaded back into the <xref:System.Data.DataSet>, the <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised, allowing the user to inspect the reconciled <xref:System.Data.DataSet> row and any output parameters returned by the command.</span></span> <span data-ttu-id="37a91-842">已成功更新資料列之後，會接受該資料列所做的變更。</span><span class="sxs-lookup"><span data-stu-id="37a91-842">After a row updates successfully, the changes to that row are accepted.</span></span>  
  
 <span data-ttu-id="37a91-843">當使用<xref:System.Data.Common.DbDataAdapter.Update%2A>，執行的順序如下所示：</span><span class="sxs-lookup"><span data-stu-id="37a91-843">When using <xref:System.Data.Common.DbDataAdapter.Update%2A>, the order of execution is as follows:</span></span>  
  
1.  <span data-ttu-id="37a91-844">中的值<xref:System.Data.DataRow>會移至 參數值。</span><span class="sxs-lookup"><span data-stu-id="37a91-844">The values in the <xref:System.Data.DataRow> are moved to the parameter values.</span></span>  
  
2.  <span data-ttu-id="37a91-845">便會引發 <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> 事件。</span><span class="sxs-lookup"><span data-stu-id="37a91-845">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> event is raised.</span></span>  
  
3.  <span data-ttu-id="37a91-846">執行命令。</span><span class="sxs-lookup"><span data-stu-id="37a91-846">The command executes.</span></span>  
  
4.  <span data-ttu-id="37a91-847">如果命令設定為`FirstReturnedRecord`，將第一個傳回的結果會放在<xref:System.Data.DataRow>。</span><span class="sxs-lookup"><span data-stu-id="37a91-847">If the command is set to `FirstReturnedRecord`, the first returned result is placed in the <xref:System.Data.DataRow>.</span></span>  
  
5.  <span data-ttu-id="37a91-848">如果沒有輸出參數，它們會放在<xref:System.Data.DataRow>。</span><span class="sxs-lookup"><span data-stu-id="37a91-848">If there are output parameters, they are placed in the <xref:System.Data.DataRow>.</span></span>  
  
6.  <span data-ttu-id="37a91-849">便會引發 <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> 事件。</span><span class="sxs-lookup"><span data-stu-id="37a91-849">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised.</span></span>  
  
7.  <span data-ttu-id="37a91-850">呼叫 <xref:System.Data.DataRow.AcceptChanges%2A>。</span><span class="sxs-lookup"><span data-stu-id="37a91-850"><xref:System.Data.DataRow.AcceptChanges%2A> is called.</span></span>  
  
 <span data-ttu-id="37a91-851">每個相關聯的命令<xref:System.Data.Common.DbDataAdapter>通常都有一個與其相關聯的參數集合。</span><span class="sxs-lookup"><span data-stu-id="37a91-851">Each command associated with the <xref:System.Data.Common.DbDataAdapter> usually has a parameters collection associated with it.</span></span> <span data-ttu-id="37a91-852">參數會對應至目前的資料列，透過`SourceColumn`並`SourceVersion`屬性的.NET Framework 資料提供者的`Parameter`類別。</span><span class="sxs-lookup"><span data-stu-id="37a91-852">Parameters are mapped to the current row through the `SourceColumn` and `SourceVersion` properties of a .NET Framework data provider's `Parameter` class.</span></span> <span data-ttu-id="37a91-853">`SourceColumn` 是指<xref:System.Data.DataTable>資料行，<xref:System.Data.Common.DbDataAdapter>以取得目前資料列的參數值的參考。</span><span class="sxs-lookup"><span data-stu-id="37a91-853">`SourceColumn` refers to a <xref:System.Data.DataTable> column that the <xref:System.Data.Common.DbDataAdapter> references to obtain parameter values for the current row.</span></span>  
  
 <span data-ttu-id="37a91-854">`SourceColumn` 在套用任何資料表對應之前，是指未對應的資料行名稱。</span><span class="sxs-lookup"><span data-stu-id="37a91-854">`SourceColumn` refers to the unmapped column name before any table mappings have been applied.</span></span> <span data-ttu-id="37a91-855">如果`SourceColumn`指的是不存在的資料行中，所採取的動作取決於下列其中一種<xref:System.Data.MissingMappingAction>值。</span><span class="sxs-lookup"><span data-stu-id="37a91-855">If `SourceColumn` refers to a nonexistent column, the action taken depends on one of the following <xref:System.Data.MissingMappingAction> values.</span></span>  
  
|<span data-ttu-id="37a91-856">列舉值</span><span class="sxs-lookup"><span data-stu-id="37a91-856">Enumeration value</span></span>|<span data-ttu-id="37a91-857">採取的動作</span><span class="sxs-lookup"><span data-stu-id="37a91-857">Action taken</span></span>|  
|-----------------------|------------------|  
|`MissingMappingAction.Passthrough`|<span data-ttu-id="37a91-858">使用中的資料表名稱與來源資料行名稱<xref:System.Data.DataSet>如果不不存在任何對應。</span><span class="sxs-lookup"><span data-stu-id="37a91-858">Use the source column names and table names in the <xref:System.Data.DataSet> if no mapping is present.</span></span>|  
|`MissingMappingAction.Ignore`|<span data-ttu-id="37a91-859">A<xref:System.SystemException>產生。</span><span class="sxs-lookup"><span data-stu-id="37a91-859">A <xref:System.SystemException> is generated.</span></span> <span data-ttu-id="37a91-860">對應已明確設定，當遺漏對應的輸入參數通常是錯誤的結果。</span><span class="sxs-lookup"><span data-stu-id="37a91-860">When the mappings are explicitly set, a missing mapping for an input parameter is usually the result of an error.</span></span>|  
|`MissingMappingAction.Error`|<span data-ttu-id="37a91-861">A<xref:System.SystemException>產生。</span><span class="sxs-lookup"><span data-stu-id="37a91-861">A <xref:System.SystemException> is generated.</span></span>|  
  
 <span data-ttu-id="37a91-862">`SourceColumn`屬性也會用來對應輸出的值，或輸入/輸出參數傳回`DataSet`。</span><span class="sxs-lookup"><span data-stu-id="37a91-862">The `SourceColumn` property is also used to map the value for output or input/output parameters back to the `DataSet`.</span></span> <span data-ttu-id="37a91-863">如果它是指不存在的資料行，則會產生例外狀況。</span><span class="sxs-lookup"><span data-stu-id="37a91-863">An exception is generated if it refers to a nonexistent column.</span></span>  
  
 <span data-ttu-id="37a91-864">`SourceVersion`屬性的.NET Framework 資料提供者的`Parameter`類別會決定是否要使用的原始、 目前、 或已提議版本資料行的值。</span><span class="sxs-lookup"><span data-stu-id="37a91-864">The `SourceVersion` property of a .NET Framework data provider's `Parameter` class determines whether to use the Original, Current, or Proposed version of the column value.</span></span> <span data-ttu-id="37a91-865">這項功能通常用於在 UPDATE 陳述式來檢查有開放式同步存取違規的 WHERE 子句中包含原始值。</span><span class="sxs-lookup"><span data-stu-id="37a91-865">This capability is often used to include original values in the WHERE clause of an UPDATE statement to check for optimistic concurrency violations.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="37a91-866">如果在更新資料列時發生錯誤，會擲回例外狀況，並執行更新已停止。</span><span class="sxs-lookup"><span data-stu-id="37a91-866">If an error occurs while updating a row, an exception is thrown and execution of the update is discontinued.</span></span> <span data-ttu-id="37a91-867">若要繼續更新作業，而不會產生例外狀況，當發生錯誤時，設定<xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A>屬性，以`true`再呼叫<xref:System.Data.Common.DbDataAdapter.Update%2A>。</span><span class="sxs-lookup"><span data-stu-id="37a91-867">To continue the update operation without generating exceptions when an error is encountered, set the <xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A> property to `true` before calling <xref:System.Data.Common.DbDataAdapter.Update%2A>.</span></span> <span data-ttu-id="37a91-868">您也可以回應內每個資料列依錯誤`RowUpdated`DataAdapter 的事件。</span><span class="sxs-lookup"><span data-stu-id="37a91-868">You may also respond to errors on a per-row basis within the `RowUpdated` event of a DataAdapter.</span></span> <span data-ttu-id="37a91-869">若要繼續更新作業，而不會產生例外狀況內`RowUpdated`事件，設定<xref:System.Data.Common.RowUpdatedEventArgs.Status%2A>屬性<xref:System.Data.Common.RowUpdatedEventArgs>至<xref:System.Data.UpdateStatus.Continue>。</span><span class="sxs-lookup"><span data-stu-id="37a91-869">To continue the update operation without generating an exception within the `RowUpdated` event, set the <xref:System.Data.Common.RowUpdatedEventArgs.Status%2A> property of the <xref:System.Data.Common.RowUpdatedEventArgs> to <xref:System.Data.UpdateStatus.Continue>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="37a91-870">下列範例會使用衍生的類別中， <xref:System.Data.OleDb.OleDbDataAdapter>、 更新資料來源。</span><span class="sxs-lookup"><span data-stu-id="37a91-870">The following example uses the derived class, <xref:System.Data.OleDb.OleDbDataAdapter>, to update the data source.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.Update1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Update1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.Update1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Update1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="37a91-871"><see cref="T:System.Data.DataSet" /> 無效。</span><span class="sxs-lookup"><span data-stu-id="37a91-871">The <see cref="T:System.Data.DataSet" /> is invalid.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="37a91-872">來源資料表無效。</span><span class="sxs-lookup"><span data-stu-id="37a91-872">The source table is invalid.</span></span></exception>
        <exception cref="T:System.SystemException"><span data-ttu-id="37a91-873">要更新的 <see cref="T:System.Data.DataRow" /> 不存在。</span><span class="sxs-lookup"><span data-stu-id="37a91-873">No <see cref="T:System.Data.DataRow" /> exists to update.</span></span>  
  
<span data-ttu-id="37a91-874">-或-</span><span class="sxs-lookup"><span data-stu-id="37a91-874">-or-</span></span> 
<span data-ttu-id="37a91-875">要更新的 <see cref="T:System.Data.DataTable" /> 不存在。</span><span class="sxs-lookup"><span data-stu-id="37a91-875">No <see cref="T:System.Data.DataTable" /> exists to update.</span></span>  
  
<span data-ttu-id="37a91-876">-或-</span><span class="sxs-lookup"><span data-stu-id="37a91-876">-or-</span></span> 
<span data-ttu-id="37a91-877">要用來做為來源的 <see cref="T:System.Data.DataSet" /> 不存在。</span><span class="sxs-lookup"><span data-stu-id="37a91-877">No <see cref="T:System.Data.DataSet" /> exists to use as a source.</span></span></exception>
        <exception cref="T:System.Data.DBConcurrencyException"><span data-ttu-id="37a91-878">嘗試執行 INSERT、UPDATE 或 DELETE 陳述式會造成沒有資料錄受影響。</span><span class="sxs-lookup"><span data-stu-id="37a91-878">An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md"><span data-ttu-id="37a91-879">操作資料 (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="37a91-879">Manipulating Data (ADO.NET)</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="37a91-880">DbProviderFactory (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="37a91-880">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="37a91-881">ADO.NET 概觀</span><span class="sxs-lookup"><span data-stu-id="37a91-881">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public override int Update (System.Data.DataSet dataSet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Update(class System.Data.DataSet dataSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int Update(System::Data::DataSet ^ dataSet);" />
      <MemberSignature Language="F#" Value="override this.Update : System.Data.DataSet -&gt; int" Usage="dbDataAdapter.Update dataSet" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataAdapter.Update(System.Data.DataSet)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
      </Parameters>
      <Docs>
        <param name="dataSet"><span data-ttu-id="37a91-882">用來更新資料來源的 <see cref="T:System.Data.DataSet" />。</span><span class="sxs-lookup"><span data-stu-id="37a91-882">The <see cref="T:System.Data.DataSet" /> used to update the data source.</span></span></param>
        <summary><span data-ttu-id="37a91-883">針對指定之 <see cref="T:System.Data.DataSet" /> 中的每個插入、更新或刪除的資料列，執行個別的 INSERT、UPDATE 或 DELETE 陳述式，以更新資料庫中的值。</span><span class="sxs-lookup"><span data-stu-id="37a91-883">Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified <see cref="T:System.Data.DataSet" />.</span></span></summary>
        <returns><span data-ttu-id="37a91-884">自 <see cref="T:System.Data.DataSet" /> 中成功更新的資料列數目。</span><span class="sxs-lookup"><span data-stu-id="37a91-884">The number of rows successfully updated from the <see cref="T:System.Data.DataSet" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37a91-885">當應用程式呼叫<xref:System.Data.Common.DbDataAdapter.Update%2A>方法中，<xref:System.Data.Common.DbDataAdapter>會檢查<xref:System.Data.DataRow.RowState%2A>屬性，並執行必要的 INSERT、 UPDATE 或 DELETE 陳述式，反覆地針對每個的資料列中，然後再根據順序中設定的索引<xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="37a91-885">When an application calls the <xref:System.Data.Common.DbDataAdapter.Update%2A> method, the <xref:System.Data.Common.DbDataAdapter> examines the <xref:System.Data.DataRow.RowState%2A> property, and executes the required INSERT, UPDATE, or DELETE statements iteratively for each row, based on the order of the indexes configured in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="37a91-886">例如，<xref:System.Data.Common.DbDataAdapter.Update%2A>可能會執行 DELETE 陳述式，後面接著 INSERT 陳述式和另一個的 DELETE 陳述式，由於資料列的排序<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="37a91-886">For example, <xref:System.Data.Common.DbDataAdapter.Update%2A> might execute a DELETE statement, followed by an INSERT statement, and then another DELETE statement, due to the ordering of the rows in the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="37a91-887">請注意，這些陳述式都不會執行以批次程序;個別更新每個資料列。</span><span class="sxs-lookup"><span data-stu-id="37a91-887">It should be noted that these statements are not performed as a batch process; each row is updated individually.</span></span> <span data-ttu-id="37a91-888">應用程式可以呼叫<xref:System.Data.DataSet.GetChanges%2A>情況下，您必須在其中控制序列的陳述式型別 （例如，在更新之前插入） 的方法。</span><span class="sxs-lookup"><span data-stu-id="37a91-888">An application can call the <xref:System.Data.DataSet.GetChanges%2A> method in situations where you must control the sequence of statement types (for example, INSERTs before UPDATEs).</span></span> <span data-ttu-id="37a91-889">如需詳細資訊，請參閱 <<c0> [ 使用 Dataadapter 更新資料來源](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md)。</span><span class="sxs-lookup"><span data-stu-id="37a91-889">For more information, see [Updating Data Sources with DataAdapters](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md).</span></span>  
  
 <span data-ttu-id="37a91-890">如果尚未指定 INSERT、 UPDATE 或 DELETE 陳述式，<xref:System.Data.Common.DbDataAdapter.Update%2A>方法會產生例外狀況。</span><span class="sxs-lookup"><span data-stu-id="37a91-890">If INSERT, UPDATE, or DELETE statements have not been specified, the <xref:System.Data.Common.DbDataAdapter.Update%2A> method generates an exception.</span></span> <span data-ttu-id="37a91-891">不過，您可以建立<xref:System.Data.SqlClient.SqlCommandBuilder>或是<xref:System.Data.OleDb.OleDbCommandBuilder>物件來自動產生單一資料表更新的 SQL 陳述式，如果您將設定`SelectCommand`.NET Framework 資料提供者的屬性。</span><span class="sxs-lookup"><span data-stu-id="37a91-891">However, you can create a <xref:System.Data.SqlClient.SqlCommandBuilder> or <xref:System.Data.OleDb.OleDbCommandBuilder> object to automatically generate SQL statements for single-table updates if you set the `SelectCommand` property of a .NET Framework data provider.</span></span> <span data-ttu-id="37a91-892">然後，您未設定任何其他 SQL 陳述式由產生**CommandBuilder**。</span><span class="sxs-lookup"><span data-stu-id="37a91-892">Then, any additional SQL statements that you do not set are generated by the **CommandBuilder**.</span></span> <span data-ttu-id="37a91-893">此層代 」 邏輯需要索引鍵資料行資訊會出現在<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="37a91-893">This generation logic requires key column information to be present in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="37a91-894">如需詳細資訊，請參閱[Commandbuilder 產生命令](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)。</span><span class="sxs-lookup"><span data-stu-id="37a91-894">For more information see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
 <span data-ttu-id="37a91-895"><xref:System.Data.Common.DbDataAdapter.Update%2A>方法會從第一個對應，然後再執行更新中所列的資料表擷取資料列。</span><span class="sxs-lookup"><span data-stu-id="37a91-895">The <xref:System.Data.Common.DbDataAdapter.Update%2A> method retrieves rows from the table listed in the first mapping before performing an update.</span></span> <span data-ttu-id="37a91-896"><xref:System.Data.Common.DbDataAdapter.Update%2A>然後重新整理使用值的資料列<xref:System.Data.IDbCommand.UpdatedRowSource%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="37a91-896">The <xref:System.Data.Common.DbDataAdapter.Update%2A> then refreshes the row using the value of the <xref:System.Data.IDbCommand.UpdatedRowSource%2A> property.</span></span> <span data-ttu-id="37a91-897">傳回任何其他資料列都會被忽略。</span><span class="sxs-lookup"><span data-stu-id="37a91-897">Any additional rows returned are ignored.</span></span>  
  
 <span data-ttu-id="37a91-898">任何資料載入回後<xref:System.Data.DataSet>，則<xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A>引發事件時，讓使用者能夠檢查協調<xref:System.Data.DataSet>資料列和任何輸出命令所傳回的參數。</span><span class="sxs-lookup"><span data-stu-id="37a91-898">After any data is loaded back into the <xref:System.Data.DataSet>, the <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised, allowing the user to inspect the reconciled <xref:System.Data.DataSet> row and any output parameters returned by the command.</span></span> <span data-ttu-id="37a91-899">已成功更新資料列之後，會接受該資料列所做的變更。</span><span class="sxs-lookup"><span data-stu-id="37a91-899">After a row updates successfully, the changes to that row are accepted.</span></span>  
  
 <span data-ttu-id="37a91-900">當使用<xref:System.Data.Common.DbDataAdapter.Update%2A>，執行的順序如下所示：</span><span class="sxs-lookup"><span data-stu-id="37a91-900">When using <xref:System.Data.Common.DbDataAdapter.Update%2A>, the order of execution is as follows:</span></span>  
  
1.  <span data-ttu-id="37a91-901">中的值<xref:System.Data.DataRow>會移至 參數值。</span><span class="sxs-lookup"><span data-stu-id="37a91-901">The values in the <xref:System.Data.DataRow> are moved to the parameter values.</span></span>  
  
2.  <span data-ttu-id="37a91-902">便會引發 <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> 事件。</span><span class="sxs-lookup"><span data-stu-id="37a91-902">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> event is raised.</span></span>  
  
3.  <span data-ttu-id="37a91-903">執行命令。</span><span class="sxs-lookup"><span data-stu-id="37a91-903">The command executes.</span></span>  
  
4.  <span data-ttu-id="37a91-904">如果命令設定為`FirstReturnedRecord`，則第一個傳回的結果會放在<xref:System.Data.DataRow>。</span><span class="sxs-lookup"><span data-stu-id="37a91-904">If the command is set to `FirstReturnedRecord`, then the first returned result is placed in the <xref:System.Data.DataRow>.</span></span>  
  
5.  <span data-ttu-id="37a91-905">如果沒有輸出參數，它們會放在<xref:System.Data.DataRow>。</span><span class="sxs-lookup"><span data-stu-id="37a91-905">If there are output parameters, they are placed in the <xref:System.Data.DataRow>.</span></span>  
  
6.  <span data-ttu-id="37a91-906">便會引發 <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> 事件。</span><span class="sxs-lookup"><span data-stu-id="37a91-906">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised.</span></span>  
  
7.  <span data-ttu-id="37a91-907">呼叫 <xref:System.Data.DataRow.AcceptChanges%2A>。</span><span class="sxs-lookup"><span data-stu-id="37a91-907"><xref:System.Data.DataRow.AcceptChanges%2A> is called.</span></span>  
  
 <span data-ttu-id="37a91-908">每個相關聯的命令<xref:System.Data.Common.DbDataAdapter>通常都有一個與其相關聯的參數集合。</span><span class="sxs-lookup"><span data-stu-id="37a91-908">Each command associated with the <xref:System.Data.Common.DbDataAdapter> usually has a parameters collection associated with it.</span></span> <span data-ttu-id="37a91-909">參數會對應至目前的資料列，透過`SourceColumn`並`SourceVersion`屬性的.NET Framework 資料提供者的`Parameter`類別。</span><span class="sxs-lookup"><span data-stu-id="37a91-909">Parameters are mapped to the current row through the `SourceColumn` and `SourceVersion` properties of a .NET Framework data provider's `Parameter` class.</span></span> <span data-ttu-id="37a91-910">`SourceColumn` 是指<xref:System.Data.DataTable>資料行，<xref:System.Data.Common.DbDataAdapter>以取得目前資料列的參數值的參考。</span><span class="sxs-lookup"><span data-stu-id="37a91-910">`SourceColumn` refers to a <xref:System.Data.DataTable> column that the <xref:System.Data.Common.DbDataAdapter> references to obtain parameter values for the current row.</span></span>  
  
 <span data-ttu-id="37a91-911">`SourceColumn` 在套用任何資料表對應之前，是指未對應的資料行名稱。</span><span class="sxs-lookup"><span data-stu-id="37a91-911">`SourceColumn` refers to the unmapped column name before any table mappings have been applied.</span></span> <span data-ttu-id="37a91-912">如果`SourceColumn`指的是不存在的資料行中，所採取的動作取決於下列其中一種<xref:System.Data.MissingMappingAction>值。</span><span class="sxs-lookup"><span data-stu-id="37a91-912">If `SourceColumn` refers to a nonexistent column, the action taken depends on one of the following <xref:System.Data.MissingMappingAction> values.</span></span>  
  
|<span data-ttu-id="37a91-913">列舉值</span><span class="sxs-lookup"><span data-stu-id="37a91-913">Enumeration value</span></span>|<span data-ttu-id="37a91-914">採取的動作</span><span class="sxs-lookup"><span data-stu-id="37a91-914">Action taken</span></span>|  
|-----------------------|------------------|  
|`MissingMappingAction.Passthrough`|<span data-ttu-id="37a91-915">使用中的資料表名稱與來源資料行名稱<xref:System.Data.DataSet>如果不不存在任何對應。</span><span class="sxs-lookup"><span data-stu-id="37a91-915">Use the source column names and table names in the <xref:System.Data.DataSet> if no mapping is present.</span></span>|  
|`MissingMappingAction.Ignore`|<span data-ttu-id="37a91-916">A<xref:System.SystemException>產生。</span><span class="sxs-lookup"><span data-stu-id="37a91-916">A <xref:System.SystemException> is generated.</span></span> <span data-ttu-id="37a91-917">對應已明確設定，當遺漏對應的輸入參數通常是錯誤的結果。</span><span class="sxs-lookup"><span data-stu-id="37a91-917">When the mappings are explicitly set, a missing mapping for an input parameter is usually the result of an error.</span></span>|  
|`MissingMappingAction.Error`|<span data-ttu-id="37a91-918">A<xref:System.SystemException>產生。</span><span class="sxs-lookup"><span data-stu-id="37a91-918">A <xref:System.SystemException> is generated.</span></span>|  
  
 <span data-ttu-id="37a91-919">`SourceColumn`屬性也會用來對應輸出的值，或輸入/輸出參數傳回`DataSet`。</span><span class="sxs-lookup"><span data-stu-id="37a91-919">The `SourceColumn` property is also used to map the value for output or input/output parameters back to the `DataSet`.</span></span> <span data-ttu-id="37a91-920">如果它是指不存在的資料行，則會產生例外狀況。</span><span class="sxs-lookup"><span data-stu-id="37a91-920">An exception is generated if it refers to a nonexistent column.</span></span>  
  
 <span data-ttu-id="37a91-921">`SourceVersion`屬性的.NET Framework 資料提供者的`Parameter`類別會決定是否要使用的原始、 目前、 或已提議版本資料行的值。</span><span class="sxs-lookup"><span data-stu-id="37a91-921">The `SourceVersion` property of a .NET Framework data provider's `Parameter` class determines whether to use the Original, Current, or Proposed version of the column value.</span></span> <span data-ttu-id="37a91-922">這項功能通常用於在 UPDATE 陳述式來檢查有開放式同步存取違規的 WHERE 子句中包含原始值。</span><span class="sxs-lookup"><span data-stu-id="37a91-922">This capability is often used to include original values in the WHERE clause of an UPDATE statement to check for optimistic concurrency violations.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="37a91-923">如果在更新資料列時發生錯誤，會擲回例外狀況，並執行更新已停止。</span><span class="sxs-lookup"><span data-stu-id="37a91-923">If an error occurs while updating a row, an exception is thrown and execution of the update is discontinued.</span></span> <span data-ttu-id="37a91-924">若要繼續更新作業，而不會產生例外狀況，當發生錯誤時，設定<xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A>屬性，以`true`再呼叫<xref:System.Data.Common.DbDataAdapter.Update%2A>。</span><span class="sxs-lookup"><span data-stu-id="37a91-924">To continue the update operation without generating exceptions when an error is encountered, set the <xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A> property to `true` before calling <xref:System.Data.Common.DbDataAdapter.Update%2A>.</span></span> <span data-ttu-id="37a91-925">您也可以回應內每個資料列依錯誤`RowUpdated`DataAdapter 的事件。</span><span class="sxs-lookup"><span data-stu-id="37a91-925">You may also respond to errors on a per-row basis within the `RowUpdated` event of a DataAdapter.</span></span> <span data-ttu-id="37a91-926">若要繼續更新作業，而不會產生例外狀況內`RowUpdated`事件，設定<xref:System.Data.Common.RowUpdatedEventArgs.Status%2A>屬性<xref:System.Data.Common.RowUpdatedEventArgs>至<xref:System.Data.UpdateStatus.Continue>。</span><span class="sxs-lookup"><span data-stu-id="37a91-926">To continue the update operation without generating an exception within the `RowUpdated` event, set the <xref:System.Data.Common.RowUpdatedEventArgs.Status%2A> property of the <xref:System.Data.Common.RowUpdatedEventArgs> to <xref:System.Data.UpdateStatus.Continue>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="37a91-927">下列範例會使用衍生的類別中， <xref:System.Data.OleDb.OleDbDataAdapter>、 更新資料來源。</span><span class="sxs-lookup"><span data-stu-id="37a91-927">The following example uses the derived class, <xref:System.Data.OleDb.OleDbDataAdapter>, to update the data source.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.Update Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Update Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.Update Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Update Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="37a91-928">來源資料表無效。</span><span class="sxs-lookup"><span data-stu-id="37a91-928">The source table is invalid.</span></span></exception>
        <exception cref="T:System.Data.DBConcurrencyException"><span data-ttu-id="37a91-929">嘗試執行 INSERT、UPDATE 或 DELETE 陳述式會造成沒有資料錄受影響。</span><span class="sxs-lookup"><span data-stu-id="37a91-929">An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md"><span data-ttu-id="37a91-930">操作資料 (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="37a91-930">Manipulating Data (ADO.NET)</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="37a91-931">DbProviderFactory (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="37a91-931">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="37a91-932">ADO.NET 概觀</span><span class="sxs-lookup"><span data-stu-id="37a91-932">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public int Update (System.Data.DataTable dataTable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Update(class System.Data.DataTable dataTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataTable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Update(System::Data::DataTable ^ dataTable);" />
      <MemberSignature Language="F#" Value="override this.Update : System.Data.DataTable -&gt; int" Usage="dbDataAdapter.Update dataTable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataTable" Type="System.Data.DataTable" />
      </Parameters>
      <Docs>
        <param name="dataTable"><span data-ttu-id="37a91-933">用來更新資料來源的 <see cref="T:System.Data.DataTable" />。</span><span class="sxs-lookup"><span data-stu-id="37a91-933">The <see cref="T:System.Data.DataTable" /> used to update the data source.</span></span></param>
        <summary><span data-ttu-id="37a91-934">針對指定之 <see cref="T:System.Data.DataTable" /> 中的每個插入、更新或刪除的資料列，執行個別的 INSERT、UPDATE 或 DELETE 陳述式，以更新資料庫中的值。</span><span class="sxs-lookup"><span data-stu-id="37a91-934">Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified <see cref="T:System.Data.DataTable" />.</span></span></summary>
        <returns><span data-ttu-id="37a91-935">自 <see cref="T:System.Data.DataTable" /> 中成功更新的資料列數目。</span><span class="sxs-lookup"><span data-stu-id="37a91-935">The number of rows successfully updated from the <see cref="T:System.Data.DataTable" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37a91-936">當應用程式呼叫<xref:System.Data.Common.DbDataAdapter.Update%2A>方法中，<xref:System.Data.Common.DbDataAdapter>會檢查<xref:System.Data.DataRow.RowState%2A>屬性，並執行必要的 INSERT、 UPDATE 或 DELETE 陳述式，反覆地針對每個的資料列中，然後再根據順序中設定的索引<xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="37a91-936">When an application calls the <xref:System.Data.Common.DbDataAdapter.Update%2A> method, the <xref:System.Data.Common.DbDataAdapter> examines the <xref:System.Data.DataRow.RowState%2A> property, and executes the required INSERT, UPDATE, or DELETE statements iteratively for each row, based on the order of the indexes configured in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="37a91-937">例如，<xref:System.Data.Common.DbDataAdapter.Update%2A>可能會執行 DELETE 陳述式，後面接著 INSERT 陳述式和另一個的 DELETE 陳述式，由於資料列的排序<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="37a91-937">For example, <xref:System.Data.Common.DbDataAdapter.Update%2A> might execute a DELETE statement, followed by an INSERT statement, and then another DELETE statement, due to the ordering of the rows in the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="37a91-938">請注意，這些陳述式都不會執行以批次程序;個別更新每個資料列。</span><span class="sxs-lookup"><span data-stu-id="37a91-938">It should be noted that these statements are not performed as a batch process; each row is updated individually.</span></span> <span data-ttu-id="37a91-939">應用程式可以呼叫<xref:System.Data.DataSet.GetChanges%2A>情況下，您必須在其中控制序列的陳述式型別 （例如，在更新之前插入） 的方法。</span><span class="sxs-lookup"><span data-stu-id="37a91-939">An application can call the <xref:System.Data.DataSet.GetChanges%2A> method in situations where you must control the sequence of statement types (for example, INSERTs before UPDATEs).</span></span> <span data-ttu-id="37a91-940">如需詳細資訊，請參閱 <<c0> [ 使用 Dataadapter 更新資料來源](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md)。</span><span class="sxs-lookup"><span data-stu-id="37a91-940">For more information, see [Updating Data Sources with DataAdapters](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md).</span></span>  
  
 <span data-ttu-id="37a91-941">如果尚未指定 INSERT、 UPDATE 或 DELETE 陳述式，<xref:System.Data.Common.DbDataAdapter.Update%2A>方法會產生例外狀況。</span><span class="sxs-lookup"><span data-stu-id="37a91-941">If INSERT, UPDATE, or DELETE statements have not been specified, the <xref:System.Data.Common.DbDataAdapter.Update%2A> method generates an exception.</span></span> <span data-ttu-id="37a91-942">不過，您可以建立<xref:System.Data.SqlClient.SqlCommandBuilder>或是<xref:System.Data.OleDb.OleDbCommandBuilder>物件來自動產生單一資料表更新的 SQL 陳述式，如果您將設定`SelectCommand`.NET Framework 資料提供者的屬性。</span><span class="sxs-lookup"><span data-stu-id="37a91-942">However, you can create a <xref:System.Data.SqlClient.SqlCommandBuilder> or <xref:System.Data.OleDb.OleDbCommandBuilder> object to automatically generate SQL statements for single-table updates if you set the `SelectCommand` property of a .NET Framework data provider.</span></span> <span data-ttu-id="37a91-943">然後，您未設定任何其他 SQL 陳述式由產生**CommandBuilder**。</span><span class="sxs-lookup"><span data-stu-id="37a91-943">Then, any additional SQL statements that you do not set are generated by the **CommandBuilder**.</span></span> <span data-ttu-id="37a91-944">此層代 」 邏輯需要索引鍵資料行資訊會出現在<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="37a91-944">This generation logic requires key column information to be present in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="37a91-945">如需詳細資訊，請參閱[Commandbuilder 產生命令](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)。</span><span class="sxs-lookup"><span data-stu-id="37a91-945">For more information see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
 <span data-ttu-id="37a91-946"><xref:System.Data.Common.DbDataAdapter.Update%2A>方法會從第一個對應，然後再執行更新中所列的資料表擷取資料列。</span><span class="sxs-lookup"><span data-stu-id="37a91-946">The <xref:System.Data.Common.DbDataAdapter.Update%2A> method retrieves rows from the table listed in the first mapping before performing an update.</span></span> <span data-ttu-id="37a91-947"><xref:System.Data.Common.DbDataAdapter.Update%2A>然後重新整理使用值的資料列<xref:System.Data.IDbCommand.UpdatedRowSource%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="37a91-947">The <xref:System.Data.Common.DbDataAdapter.Update%2A> then refreshes the row using the value of the <xref:System.Data.IDbCommand.UpdatedRowSource%2A> property.</span></span> <span data-ttu-id="37a91-948">傳回任何其他資料列都會被忽略。</span><span class="sxs-lookup"><span data-stu-id="37a91-948">Any additional rows returned are ignored.</span></span>  
  
 <span data-ttu-id="37a91-949">任何資料載入回後<xref:System.Data.DataSet>，則<xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A>引發事件時，讓使用者能夠檢查協調<xref:System.Data.DataSet>資料列和任何輸出命令所傳回的參數。</span><span class="sxs-lookup"><span data-stu-id="37a91-949">After any data is loaded back into the <xref:System.Data.DataSet>, the <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised, allowing the user to inspect the reconciled <xref:System.Data.DataSet> row and any output parameters returned by the command.</span></span> <span data-ttu-id="37a91-950">已成功更新資料列之後，會接受該資料列所做的變更。</span><span class="sxs-lookup"><span data-stu-id="37a91-950">After a row updates successfully, the changes to that row are accepted.</span></span>  
  
 <span data-ttu-id="37a91-951">當使用<xref:System.Data.Common.DbDataAdapter.Update%2A>，執行的順序如下所示：</span><span class="sxs-lookup"><span data-stu-id="37a91-951">When using <xref:System.Data.Common.DbDataAdapter.Update%2A>, the order of execution is as follows:</span></span>  
  
1.  <span data-ttu-id="37a91-952">中的值<xref:System.Data.DataRow>會移至 參數值。</span><span class="sxs-lookup"><span data-stu-id="37a91-952">The values in the <xref:System.Data.DataRow> are moved to the parameter values.</span></span>  
  
2.  <span data-ttu-id="37a91-953">便會引發 <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> 事件。</span><span class="sxs-lookup"><span data-stu-id="37a91-953">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> event is raised.</span></span>  
  
3.  <span data-ttu-id="37a91-954">執行命令。</span><span class="sxs-lookup"><span data-stu-id="37a91-954">The command executes.</span></span>  
  
4.  <span data-ttu-id="37a91-955">如果命令設定為`FirstReturnedRecord`，則第一個傳回的結果會放在<xref:System.Data.DataRow>。</span><span class="sxs-lookup"><span data-stu-id="37a91-955">If the command is set to `FirstReturnedRecord`, then the first returned result is placed in the <xref:System.Data.DataRow>.</span></span>  
  
5.  <span data-ttu-id="37a91-956">如果沒有輸出參數，它們會放在<xref:System.Data.DataRow>。</span><span class="sxs-lookup"><span data-stu-id="37a91-956">If there are output parameters, they are placed in the <xref:System.Data.DataRow>.</span></span>  
  
6.  <span data-ttu-id="37a91-957">便會引發 <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> 事件。</span><span class="sxs-lookup"><span data-stu-id="37a91-957">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised.</span></span>  
  
7.  <span data-ttu-id="37a91-958">呼叫 <xref:System.Data.DataRow.AcceptChanges%2A>。</span><span class="sxs-lookup"><span data-stu-id="37a91-958"><xref:System.Data.DataRow.AcceptChanges%2A> is called.</span></span>  
  
 <span data-ttu-id="37a91-959">每個相關聯的命令<xref:System.Data.Common.DbDataAdapter>通常都有一個與其相關聯的參數集合。</span><span class="sxs-lookup"><span data-stu-id="37a91-959">Each command associated with the <xref:System.Data.Common.DbDataAdapter> usually has a parameters collection associated with it.</span></span> <span data-ttu-id="37a91-960">參數會對應至目前的資料列，透過`SourceColumn`並`SourceVersion`屬性的.NET Framework 資料提供者的`Parameter`類別。</span><span class="sxs-lookup"><span data-stu-id="37a91-960">Parameters are mapped to the current row through the `SourceColumn` and `SourceVersion` properties of a .NET Framework data provider's `Parameter` class.</span></span> <span data-ttu-id="37a91-961">`SourceColumn` 是指<xref:System.Data.DataTable>資料行，<xref:System.Data.Common.DbDataAdapter>以取得目前資料列的參數值的參考。</span><span class="sxs-lookup"><span data-stu-id="37a91-961">`SourceColumn` refers to a <xref:System.Data.DataTable> column that the <xref:System.Data.Common.DbDataAdapter> references to obtain parameter values for the current row.</span></span>  
  
 <span data-ttu-id="37a91-962">`SourceColumn` 在套用任何資料表對應之前，是指未對應的資料行名稱。</span><span class="sxs-lookup"><span data-stu-id="37a91-962">`SourceColumn` refers to the unmapped column name before any table mappings have been applied.</span></span> <span data-ttu-id="37a91-963">如果`SourceColumn`指的是不存在的資料行中，所採取的動作取決於下列其中一種<xref:System.Data.MissingMappingAction>值。</span><span class="sxs-lookup"><span data-stu-id="37a91-963">If `SourceColumn` refers to a nonexistent column, the action taken depends on one of the following <xref:System.Data.MissingMappingAction> values.</span></span>  
  
|<span data-ttu-id="37a91-964">列舉值</span><span class="sxs-lookup"><span data-stu-id="37a91-964">Enumeration value</span></span>|<span data-ttu-id="37a91-965">採取的動作</span><span class="sxs-lookup"><span data-stu-id="37a91-965">Action taken</span></span>|  
|-----------------------|------------------|  
|`MissingMappingAction.Passthrough`|<span data-ttu-id="37a91-966">使用中的資料表名稱與來源資料行名稱<xref:System.Data.DataSet>如果不不存在任何對應。</span><span class="sxs-lookup"><span data-stu-id="37a91-966">Use the source column names and table names in the <xref:System.Data.DataSet> if no mapping is present.</span></span>|  
|`MissingMappingAction.Ignore`|<span data-ttu-id="37a91-967">A<xref:System.SystemException>產生。</span><span class="sxs-lookup"><span data-stu-id="37a91-967">A <xref:System.SystemException> is generated.</span></span> <span data-ttu-id="37a91-968">對應已明確設定，當遺漏對應的輸入參數通常是錯誤的結果。</span><span class="sxs-lookup"><span data-stu-id="37a91-968">When the mappings are explicitly set, a missing mapping for an input parameter is usually the result of an error.</span></span>|  
|`MissingMappingAction.Error`|<span data-ttu-id="37a91-969">A<xref:System.SystemException>產生。</span><span class="sxs-lookup"><span data-stu-id="37a91-969">A <xref:System.SystemException> is generated.</span></span>|  
  
 <span data-ttu-id="37a91-970">`SourceColumn`屬性也會用來對應輸出的值，或輸入/輸出參數傳回`DataSet`。</span><span class="sxs-lookup"><span data-stu-id="37a91-970">The `SourceColumn` property is also used to map the value for output or input/output parameters back to the `DataSet`.</span></span> <span data-ttu-id="37a91-971">如果它是指不存在的資料行，則會產生例外狀況。</span><span class="sxs-lookup"><span data-stu-id="37a91-971">An exception is generated if it refers to a nonexistent column.</span></span>  
  
 <span data-ttu-id="37a91-972">`SourceVersion`屬性的.NET Framework 資料提供者的`Parameter`類別會決定是否要使用的原始、 目前、 或已提議版本資料行的值。</span><span class="sxs-lookup"><span data-stu-id="37a91-972">The `SourceVersion` property of a .NET Framework data provider's `Parameter` class determines whether to use the Original, Current, or Proposed version of the column value.</span></span> <span data-ttu-id="37a91-973">這項功能通常用於在 UPDATE 陳述式來檢查有開放式同步存取違規的 WHERE 子句中包含原始值。</span><span class="sxs-lookup"><span data-stu-id="37a91-973">This capability is often used to include original values in the WHERE clause of an UPDATE statement to check for optimistic concurrency violations.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="37a91-974">如果在更新資料列時發生錯誤，會擲回例外狀況，並執行更新已停止。</span><span class="sxs-lookup"><span data-stu-id="37a91-974">If an error occurs while updating a row, an exception is thrown and execution of the update is discontinued.</span></span> <span data-ttu-id="37a91-975">若要繼續更新作業，而不會產生例外狀況，當發生錯誤時，設定<xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A>屬性，以`true`再呼叫<xref:System.Data.Common.DbDataAdapter.Update%2A>。</span><span class="sxs-lookup"><span data-stu-id="37a91-975">To continue the update operation without generating exceptions when an error is encountered, set the <xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A> property to `true` before calling <xref:System.Data.Common.DbDataAdapter.Update%2A>.</span></span> <span data-ttu-id="37a91-976">您也可以回應內每個資料列依錯誤`RowUpdated`DataAdapter 的事件。</span><span class="sxs-lookup"><span data-stu-id="37a91-976">You may also respond to errors on a per-row basis within the `RowUpdated` event of a DataAdapter.</span></span> <span data-ttu-id="37a91-977">若要繼續更新作業，而不會產生例外狀況內`RowUpdated`事件，設定<xref:System.Data.Common.RowUpdatedEventArgs.Status%2A>屬性<xref:System.Data.Common.RowUpdatedEventArgs>至<xref:System.Data.UpdateStatus.Continue>。</span><span class="sxs-lookup"><span data-stu-id="37a91-977">To continue the update operation without generating an exception within the `RowUpdated` event, set the <xref:System.Data.Common.RowUpdatedEventArgs.Status%2A> property of the <xref:System.Data.Common.RowUpdatedEventArgs> to <xref:System.Data.UpdateStatus.Continue>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="37a91-978">下列範例會使用衍生的類別中， <xref:System.Data.OleDb.OleDbDataAdapter>、 更新資料來源。</span><span class="sxs-lookup"><span data-stu-id="37a91-978">The following example uses the derived class, <xref:System.Data.OleDb.OleDbDataAdapter>, to update the data source.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.Update2 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Update2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.Update2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Update2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="37a91-979"><see cref="T:System.Data.DataSet" /> 無效。</span><span class="sxs-lookup"><span data-stu-id="37a91-979">The <see cref="T:System.Data.DataSet" /> is invalid.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="37a91-980">來源資料表無效。</span><span class="sxs-lookup"><span data-stu-id="37a91-980">The source table is invalid.</span></span></exception>
        <exception cref="T:System.SystemException"><span data-ttu-id="37a91-981">要更新的 <see cref="T:System.Data.DataRow" /> 不存在。</span><span class="sxs-lookup"><span data-stu-id="37a91-981">No <see cref="T:System.Data.DataRow" /> exists to update.</span></span>  
  
<span data-ttu-id="37a91-982">-或-</span><span class="sxs-lookup"><span data-stu-id="37a91-982">-or-</span></span> 
<span data-ttu-id="37a91-983">要更新的 <see cref="T:System.Data.DataTable" /> 不存在。</span><span class="sxs-lookup"><span data-stu-id="37a91-983">No <see cref="T:System.Data.DataTable" /> exists to update.</span></span>  
  
<span data-ttu-id="37a91-984">-或-</span><span class="sxs-lookup"><span data-stu-id="37a91-984">-or-</span></span> 
<span data-ttu-id="37a91-985">要用來做為來源的 <see cref="T:System.Data.DataSet" /> 不存在。</span><span class="sxs-lookup"><span data-stu-id="37a91-985">No <see cref="T:System.Data.DataSet" /> exists to use as a source.</span></span></exception>
        <exception cref="T:System.Data.DBConcurrencyException"><span data-ttu-id="37a91-986">嘗試執行 INSERT、UPDATE 或 DELETE 陳述式會造成沒有資料錄受影響。</span><span class="sxs-lookup"><span data-stu-id="37a91-986">An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md"><span data-ttu-id="37a91-987">操作資料 (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="37a91-987">Manipulating Data (ADO.NET)</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="37a91-988">DbProviderFactory (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="37a91-988">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="37a91-989">ADO.NET 概觀</span><span class="sxs-lookup"><span data-stu-id="37a91-989">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="protected virtual int Update (System.Data.DataRow[] dataRows, System.Data.Common.DataTableMapping tableMapping);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 Update(class System.Data.DataRow[] dataRows, class System.Data.Common.DataTableMapping tableMapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[],System.Data.Common.DataTableMapping)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function Update (dataRows As DataRow(), tableMapping As DataTableMapping) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int Update(cli::array &lt;System::Data::DataRow ^&gt; ^ dataRows, System::Data::Common::DataTableMapping ^ tableMapping);" />
      <MemberSignature Language="F#" Value="override this.Update : System.Data.DataRow[] * System.Data.Common.DataTableMapping -&gt; int" Usage="dbDataAdapter.Update (dataRows, tableMapping)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataRows" Type="System.Data.DataRow[]" />
        <Parameter Name="tableMapping" Type="System.Data.Common.DataTableMapping" />
      </Parameters>
      <Docs>
        <param name="dataRows"><span data-ttu-id="37a91-990">用來更新資料來源的 <see cref="T:System.Data.DataRow" /> 物件陣列。</span><span class="sxs-lookup"><span data-stu-id="37a91-990">An array of <see cref="T:System.Data.DataRow" /> objects used to update the data source.</span></span></param>
        <param name="tableMapping"><span data-ttu-id="37a91-991">要使用的 <see cref="P:System.Data.IDataAdapter.TableMappings" /> 集合。</span><span class="sxs-lookup"><span data-stu-id="37a91-991">The <see cref="P:System.Data.IDataAdapter.TableMappings" /> collection to use.</span></span></param>
        <summary><span data-ttu-id="37a91-992">針對 <see cref="T:System.Data.DataSet" /> 物件的指定陣列中每個插入、更新或刪除的資料列，執行個別的 INSERT、UPDATE 或 DELETE 陳述式，以更新資料庫中的值。</span><span class="sxs-lookup"><span data-stu-id="37a91-992">Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified array of <see cref="T:System.Data.DataSet" /> objects.</span></span></summary>
        <returns><span data-ttu-id="37a91-993">自 <see cref="T:System.Data.DataSet" /> 中成功更新的資料列數目。</span><span class="sxs-lookup"><span data-stu-id="37a91-993">The number of rows successfully updated from the <see cref="T:System.Data.DataSet" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37a91-994">當應用程式呼叫<xref:System.Data.Common.DbDataAdapter.Update%2A>方法中，<xref:System.Data.Common.DbDataAdapter>會檢查<xref:System.Data.DataRow.RowState%2A>屬性，並執行必要的 INSERT、 UPDATE 或 DELETE 陳述式，反覆地針對每個的資料列中，然後再根據順序中設定的索引<xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="37a91-994">When an application calls the <xref:System.Data.Common.DbDataAdapter.Update%2A> method, the <xref:System.Data.Common.DbDataAdapter> examines the <xref:System.Data.DataRow.RowState%2A> property, and executes the required INSERT, UPDATE, or DELETE statements iteratively for each row, based on the order of the indexes configured in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="37a91-995">例如，<xref:System.Data.Common.DbDataAdapter.Update%2A>可能會執行 DELETE 陳述式，後面接著 INSERT 陳述式和另一個的 DELETE 陳述式，由於資料列的排序<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="37a91-995">For example, <xref:System.Data.Common.DbDataAdapter.Update%2A> might execute a DELETE statement, followed by an INSERT statement, and then another DELETE statement, due to the ordering of the rows in the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="37a91-996">請注意，這些陳述式都不會執行以批次程序;個別更新每個資料列。</span><span class="sxs-lookup"><span data-stu-id="37a91-996">It should be noted that these statements are not performed as a batch process; each row is updated individually.</span></span> <span data-ttu-id="37a91-997">應用程式可以呼叫<xref:System.Data.DataSet.GetChanges%2A>情況下，您必須在其中控制序列的陳述式型別 （例如，在更新之前插入） 的方法。</span><span class="sxs-lookup"><span data-stu-id="37a91-997">An application can call the <xref:System.Data.DataSet.GetChanges%2A> method in situations where you must control the sequence of statement types (for example, INSERTs before UPDATEs).</span></span> <span data-ttu-id="37a91-998">如需詳細資訊，請參閱 <<c0> [ 使用 Dataadapter 更新資料來源](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md)。</span><span class="sxs-lookup"><span data-stu-id="37a91-998">For more information, see [Updating Data Sources with DataAdapters](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md).</span></span>  
  
 <span data-ttu-id="37a91-999">如果尚未指定 INSERT、 UPDATE 或 DELETE 陳述式，<xref:System.Data.Common.DbDataAdapter.Update%2A>方法會產生例外狀況。</span><span class="sxs-lookup"><span data-stu-id="37a91-999">If INSERT, UPDATE, or DELETE statements have not been specified, the <xref:System.Data.Common.DbDataAdapter.Update%2A> method generates an exception.</span></span> <span data-ttu-id="37a91-1000">不過，您可以建立<xref:System.Data.SqlClient.SqlCommandBuilder>或是<xref:System.Data.OleDb.OleDbCommandBuilder>物件來自動產生單一資料表更新的 SQL 陳述式，如果您將設定`SelectCommand`.NET Framework 資料提供者的屬性。</span><span class="sxs-lookup"><span data-stu-id="37a91-1000">However, you can create a <xref:System.Data.SqlClient.SqlCommandBuilder> or <xref:System.Data.OleDb.OleDbCommandBuilder> object to automatically generate SQL statements for single-table updates if you set the `SelectCommand` property of a .NET Framework data provider.</span></span> <span data-ttu-id="37a91-1001">然後，您未設定任何其他 SQL 陳述式由產生**CommandBuilder**。</span><span class="sxs-lookup"><span data-stu-id="37a91-1001">Then, any additional SQL statements that you do not set are generated by the **CommandBuilder**.</span></span> <span data-ttu-id="37a91-1002">此層代 」 邏輯需要索引鍵資料行資訊會出現在<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="37a91-1002">This generation logic requires key column information to be present in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="37a91-1003">如需詳細資訊，請參閱[Commandbuilder 產生命令](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)。</span><span class="sxs-lookup"><span data-stu-id="37a91-1003">For more information see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
 <span data-ttu-id="37a91-1004"><xref:System.Data.Common.DbDataAdapter.Update%2A>方法會從第一個對應，然後再執行更新中所列的資料表擷取資料列。</span><span class="sxs-lookup"><span data-stu-id="37a91-1004">The <xref:System.Data.Common.DbDataAdapter.Update%2A> method retrieves rows from the table listed in the first mapping before performing an update.</span></span> <span data-ttu-id="37a91-1005"><xref:System.Data.Common.DbDataAdapter.Update%2A>然後重新整理使用值的資料列<xref:System.Data.IDbCommand.UpdatedRowSource%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="37a91-1005">The <xref:System.Data.Common.DbDataAdapter.Update%2A> then refreshes the row using the value of the <xref:System.Data.IDbCommand.UpdatedRowSource%2A> property.</span></span> <span data-ttu-id="37a91-1006">傳回任何其他資料列都會被忽略。</span><span class="sxs-lookup"><span data-stu-id="37a91-1006">Any additional rows returned are ignored.</span></span>  
  
 <span data-ttu-id="37a91-1007">任何資料載入回後<xref:System.Data.DataSet>，則<xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A>引發事件時，讓使用者能夠檢查協調<xref:System.Data.DataSet>資料列和任何輸出命令所傳回的參數。</span><span class="sxs-lookup"><span data-stu-id="37a91-1007">After any data is loaded back into the <xref:System.Data.DataSet>, the <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised, allowing the user to inspect the reconciled <xref:System.Data.DataSet> row and any output parameters returned by the command.</span></span> <span data-ttu-id="37a91-1008">已成功更新資料列之後，會接受該資料列所做的變更。</span><span class="sxs-lookup"><span data-stu-id="37a91-1008">After a row updates successfully, the changes to that row are accepted.</span></span>  
  
 <span data-ttu-id="37a91-1009">當使用<xref:System.Data.Common.DbDataAdapter.Update%2A>，執行的順序如下所示：</span><span class="sxs-lookup"><span data-stu-id="37a91-1009">When using <xref:System.Data.Common.DbDataAdapter.Update%2A>, the order of execution is as follows:</span></span>  
  
1.  <span data-ttu-id="37a91-1010">中的值<xref:System.Data.DataRow>會移至 參數值。</span><span class="sxs-lookup"><span data-stu-id="37a91-1010">The values in the <xref:System.Data.DataRow> are moved to the parameter values.</span></span>  
  
2.  <span data-ttu-id="37a91-1011">便會引發 <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> 事件。</span><span class="sxs-lookup"><span data-stu-id="37a91-1011">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> event is raised.</span></span>  
  
3.  <span data-ttu-id="37a91-1012">執行命令。</span><span class="sxs-lookup"><span data-stu-id="37a91-1012">The command executes.</span></span>  
  
4.  <span data-ttu-id="37a91-1013">如果命令設定為`FirstReturnedRecord`，則第一個傳回的結果會放在<xref:System.Data.DataRow>。</span><span class="sxs-lookup"><span data-stu-id="37a91-1013">If the command is set to `FirstReturnedRecord`, then the first returned result is placed in the <xref:System.Data.DataRow>.</span></span>  
  
5.  <span data-ttu-id="37a91-1014">如果沒有輸出參數，它們會放在<xref:System.Data.DataRow>。</span><span class="sxs-lookup"><span data-stu-id="37a91-1014">If there are output parameters, they are placed in the <xref:System.Data.DataRow>.</span></span>  
  
6.  <span data-ttu-id="37a91-1015">便會引發 <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> 事件。</span><span class="sxs-lookup"><span data-stu-id="37a91-1015">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised.</span></span>  
  
7.  <span data-ttu-id="37a91-1016">呼叫 <xref:System.Data.DataRow.AcceptChanges%2A>。</span><span class="sxs-lookup"><span data-stu-id="37a91-1016"><xref:System.Data.DataRow.AcceptChanges%2A> is called.</span></span>  
  
 <span data-ttu-id="37a91-1017">每個相關聯的命令<xref:System.Data.Common.DbDataAdapter>通常都有一個與其相關聯的參數集合。</span><span class="sxs-lookup"><span data-stu-id="37a91-1017">Each command associated with the <xref:System.Data.Common.DbDataAdapter> usually has a parameters collection associated with it.</span></span> <span data-ttu-id="37a91-1018">參數會對應至目前的資料列，透過`SourceColumn`並`SourceVersion`屬性的.NET Framework 資料提供者的`Parameter`類別。</span><span class="sxs-lookup"><span data-stu-id="37a91-1018">Parameters are mapped to the current row through the `SourceColumn` and `SourceVersion` properties of a .NET Framework data provider's `Parameter` class.</span></span> <span data-ttu-id="37a91-1019">`SourceColumn` 是指<xref:System.Data.DataTable>資料行，<xref:System.Data.Common.DbDataAdapter>以取得目前資料列的參數值的參考。</span><span class="sxs-lookup"><span data-stu-id="37a91-1019">`SourceColumn` refers to a <xref:System.Data.DataTable> column that the <xref:System.Data.Common.DbDataAdapter> references to obtain parameter values for the current row.</span></span>  
  
 <span data-ttu-id="37a91-1020">`SourceColumn` 在套用任何資料表對應之前，是指未對應的資料行名稱。</span><span class="sxs-lookup"><span data-stu-id="37a91-1020">`SourceColumn` refers to the unmapped column name before any table mappings have been applied.</span></span> <span data-ttu-id="37a91-1021">如果`SourceColumn`指的是不存在的資料行中，所採取的動作取決於下列其中一種<xref:System.Data.MissingMappingAction>值。</span><span class="sxs-lookup"><span data-stu-id="37a91-1021">If `SourceColumn` refers to a nonexistent column, the action taken depends on one of the following <xref:System.Data.MissingMappingAction> values.</span></span>  
  
|<span data-ttu-id="37a91-1022">列舉值</span><span class="sxs-lookup"><span data-stu-id="37a91-1022">Enumeration value</span></span>|<span data-ttu-id="37a91-1023">採取的動作</span><span class="sxs-lookup"><span data-stu-id="37a91-1023">Action taken</span></span>|  
|-----------------------|------------------|  
|`MissingMappingAction.Passthrough`|<span data-ttu-id="37a91-1024">使用中的資料表名稱與來源資料行名稱<xref:System.Data.DataSet>如果不不存在任何對應。</span><span class="sxs-lookup"><span data-stu-id="37a91-1024">Use the source column names and table names in the <xref:System.Data.DataSet> if no mapping is present.</span></span>|  
|`MissingMappingAction.Ignore`|<span data-ttu-id="37a91-1025">A<xref:System.SystemException>產生。</span><span class="sxs-lookup"><span data-stu-id="37a91-1025">A <xref:System.SystemException> is generated.</span></span> <span data-ttu-id="37a91-1026">對應已明確設定，當遺漏對應的輸入參數通常是錯誤的結果。</span><span class="sxs-lookup"><span data-stu-id="37a91-1026">When the mappings are explicitly set, a missing mapping for an input parameter is usually the result of an error.</span></span>|  
|`MissingMappingAction.Error`|<span data-ttu-id="37a91-1027">A<xref:System.SystemException>產生。</span><span class="sxs-lookup"><span data-stu-id="37a91-1027">A <xref:System.SystemException> is generated.</span></span>|  
  
 <span data-ttu-id="37a91-1028">`SourceColumn`屬性也會用來對應輸出的值，或輸入/輸出參數傳回`DataSet`。</span><span class="sxs-lookup"><span data-stu-id="37a91-1028">The `SourceColumn` property is also used to map the value for output or input/output parameters back to the `DataSet`.</span></span> <span data-ttu-id="37a91-1029">如果它是指不存在的資料行，則會產生例外狀況。</span><span class="sxs-lookup"><span data-stu-id="37a91-1029">An exception is generated if it refers to a nonexistent column.</span></span>  
  
 <span data-ttu-id="37a91-1030">`SourceVersion`屬性的.NET Framework 資料提供者的`Parameter`類別會決定是否要使用的原始、 目前、 或已提議版本資料行的值。</span><span class="sxs-lookup"><span data-stu-id="37a91-1030">The `SourceVersion` property of a .NET Framework data provider's `Parameter` class determines whether to use the Original, Current, or Proposed version of the column value.</span></span> <span data-ttu-id="37a91-1031">這項功能通常用於在 UPDATE 陳述式來檢查有開放式同步存取違規的 WHERE 子句中包含原始值。</span><span class="sxs-lookup"><span data-stu-id="37a91-1031">This capability is often used to include original values in the WHERE clause of an UPDATE statement to check for optimistic concurrency violations.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="37a91-1032">如果在更新資料列時發生錯誤，會擲回例外狀況，並執行更新已停止。</span><span class="sxs-lookup"><span data-stu-id="37a91-1032">If an error occurs while updating a row, an exception is thrown and execution of the update is discontinued.</span></span> <span data-ttu-id="37a91-1033">若要繼續更新作業，而不會產生例外狀況，當發生錯誤時，設定<xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A>屬性，以`true`再呼叫<xref:System.Data.Common.DbDataAdapter.Update%2A>。</span><span class="sxs-lookup"><span data-stu-id="37a91-1033">To continue the update operation without generating exceptions when an error is encountered, set the <xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A> property to `true` before calling <xref:System.Data.Common.DbDataAdapter.Update%2A>.</span></span> <span data-ttu-id="37a91-1034">您也可以回應內每個資料列依錯誤`RowUpdated`DataAdapter 的事件。</span><span class="sxs-lookup"><span data-stu-id="37a91-1034">You may also respond to errors on a per-row basis within the `RowUpdated` event of a DataAdapter.</span></span> <span data-ttu-id="37a91-1035">若要繼續更新作業，而不會產生例外狀況內`RowUpdated`事件，設定<xref:System.Data.Common.RowUpdatedEventArgs.Status%2A>屬性<xref:System.Data.Common.RowUpdatedEventArgs>至<xref:System.Data.UpdateStatus.Continue>。</span><span class="sxs-lookup"><span data-stu-id="37a91-1035">To continue the update operation without generating an exception within the `RowUpdated` event, set the <xref:System.Data.Common.RowUpdatedEventArgs.Status%2A> property of the <xref:System.Data.Common.RowUpdatedEventArgs> to <xref:System.Data.UpdateStatus.Continue>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="37a91-1036"><see cref="T:System.Data.DataSet" /> 無效。</span><span class="sxs-lookup"><span data-stu-id="37a91-1036">The <see cref="T:System.Data.DataSet" /> is invalid.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="37a91-1037">來源資料表無效。</span><span class="sxs-lookup"><span data-stu-id="37a91-1037">The source table is invalid.</span></span></exception>
        <exception cref="T:System.SystemException"><span data-ttu-id="37a91-1038">要更新的 <see cref="T:System.Data.DataRow" /> 不存在。</span><span class="sxs-lookup"><span data-stu-id="37a91-1038">No <see cref="T:System.Data.DataRow" /> exists to update.</span></span>  
  
<span data-ttu-id="37a91-1039">-或-</span><span class="sxs-lookup"><span data-stu-id="37a91-1039">-or-</span></span> 
<span data-ttu-id="37a91-1040">要更新的 <see cref="T:System.Data.DataTable" /> 不存在。</span><span class="sxs-lookup"><span data-stu-id="37a91-1040">No <see cref="T:System.Data.DataTable" /> exists to update.</span></span>  
  
<span data-ttu-id="37a91-1041">-或-</span><span class="sxs-lookup"><span data-stu-id="37a91-1041">-or-</span></span> 
<span data-ttu-id="37a91-1042">要用來做為來源的 <see cref="T:System.Data.DataSet" /> 不存在。</span><span class="sxs-lookup"><span data-stu-id="37a91-1042">No <see cref="T:System.Data.DataSet" /> exists to use as a source.</span></span></exception>
        <exception cref="T:System.Data.DBConcurrencyException"><span data-ttu-id="37a91-1043">嘗試執行 INSERT、UPDATE 或 DELETE 陳述式會造成沒有資料錄受影響。</span><span class="sxs-lookup"><span data-stu-id="37a91-1043">An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md"><span data-ttu-id="37a91-1044">操作資料 (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="37a91-1044">Manipulating Data (ADO.NET)</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="37a91-1045">DbProviderFactory (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="37a91-1045">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="37a91-1046">ADO.NET 概觀</span><span class="sxs-lookup"><span data-stu-id="37a91-1046">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public int Update (System.Data.DataSet dataSet, string srcTable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Update(class System.Data.DataSet dataSet, string srcTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Update(System::Data::DataSet ^ dataSet, System::String ^ srcTable);" />
      <MemberSignature Language="F#" Value="override this.Update : System.Data.DataSet * string -&gt; int" Usage="dbDataAdapter.Update (dataSet, srcTable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
        <Parameter Name="srcTable" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dataSet"><span data-ttu-id="37a91-1047">用來更新資料來源的 <see cref="T:System.Data.DataSet" />。</span><span class="sxs-lookup"><span data-stu-id="37a91-1047">The <see cref="T:System.Data.DataSet" /> to use to update the data source.</span></span></param>
        <param name="srcTable"><span data-ttu-id="37a91-1048">用於資料表對應的來源資料表名稱。</span><span class="sxs-lookup"><span data-stu-id="37a91-1048">The name of the source table to use for table mapping.</span></span></param>
        <summary><span data-ttu-id="37a91-1049">針對具有指定 <see cref="T:System.Data.DataTable" /> 名稱之 <see cref="T:System.Data.DataSet" /> 中的每個插入、更新或刪除的資料列，執行個別的 INSERT、UPDATE 或 DELETE 陳述式，以更新資料庫中的值。</span><span class="sxs-lookup"><span data-stu-id="37a91-1049">Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the <see cref="T:System.Data.DataSet" /> with the specified <see cref="T:System.Data.DataTable" /> name.</span></span></summary>
        <returns><span data-ttu-id="37a91-1050">自 <see cref="T:System.Data.DataSet" /> 中成功更新的資料列數目。</span><span class="sxs-lookup"><span data-stu-id="37a91-1050">The number of rows successfully updated from the <see cref="T:System.Data.DataSet" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37a91-1051">當應用程式呼叫<xref:System.Data.Common.DbDataAdapter.Update%2A>方法中，<xref:System.Data.Common.DbDataAdapter>會檢查<xref:System.Data.DataRow.RowState%2A>屬性，並執行必要的 INSERT、 UPDATE 或 DELETE 陳述式，反覆地針對每個的資料列中，然後再根據順序中設定的索引<xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="37a91-1051">When an application calls the <xref:System.Data.Common.DbDataAdapter.Update%2A> method, the <xref:System.Data.Common.DbDataAdapter> examines the <xref:System.Data.DataRow.RowState%2A> property, and executes the required INSERT, UPDATE, or DELETE statements iteratively for each row, based on the order of the indexes configured in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="37a91-1052">例如，<xref:System.Data.Common.DbDataAdapter.Update%2A>可能會執行 DELETE 陳述式，後面接著 INSERT 陳述式和另一個的 DELETE 陳述式，由於資料列的排序<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="37a91-1052">For example, <xref:System.Data.Common.DbDataAdapter.Update%2A> might execute a DELETE statement, followed by an INSERT statement, and then another DELETE statement, due to the ordering of the rows in the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="37a91-1053">請注意，這些陳述式都不會執行以批次程序;個別更新每個資料列。</span><span class="sxs-lookup"><span data-stu-id="37a91-1053">It should be noted that these statements are not performed as a batch process; each row is updated individually.</span></span> <span data-ttu-id="37a91-1054">應用程式可以呼叫<xref:System.Data.DataSet.GetChanges%2A>情況下，您必須在其中控制陳述式型別的序列中的方法 （例如，更新之前插入）。</span><span class="sxs-lookup"><span data-stu-id="37a91-1054">An application can call the <xref:System.Data.DataSet.GetChanges%2A> method in situations where you must control the sequence of statement types (for example, INSERT before UPDATE).</span></span> <span data-ttu-id="37a91-1055">如需詳細資訊，請參閱 <<c0> [ 使用 Dataadapter 更新資料來源](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md)。</span><span class="sxs-lookup"><span data-stu-id="37a91-1055">For more information, see [Updating Data Sources with DataAdapters](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md).</span></span>  
  
 <span data-ttu-id="37a91-1056">如果尚未指定 INSERT、 UPDATE 或 DELETE 陳述式，<xref:System.Data.Common.DbDataAdapter.Update%2A>方法會產生例外狀況。</span><span class="sxs-lookup"><span data-stu-id="37a91-1056">If INSERT, UPDATE, or DELETE statements have not been specified, the <xref:System.Data.Common.DbDataAdapter.Update%2A> method generates an exception.</span></span> <span data-ttu-id="37a91-1057">不過，您可以建立<xref:System.Data.SqlClient.SqlCommandBuilder>或是<xref:System.Data.OleDb.OleDbCommandBuilder>物件來自動產生單一資料表更新的 SQL 陳述式，如果您將設定`SelectCommand`.NET Framework 資料提供者的屬性。</span><span class="sxs-lookup"><span data-stu-id="37a91-1057">However, you can create a <xref:System.Data.SqlClient.SqlCommandBuilder> or <xref:System.Data.OleDb.OleDbCommandBuilder> object to automatically generate SQL statements for single-table updates if you set the `SelectCommand` property of a .NET Framework data provider.</span></span> <span data-ttu-id="37a91-1058">然後，您未設定任何其他 SQL 陳述式由產生**CommandBuilder**。</span><span class="sxs-lookup"><span data-stu-id="37a91-1058">Then, any additional SQL statements that you do not set are generated by the **CommandBuilder**.</span></span> <span data-ttu-id="37a91-1059">此層代 」 邏輯需要索引鍵資料行資訊會出現在<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="37a91-1059">This generation logic requires key column information to be present in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="37a91-1060">如需詳細資訊，請參閱[Commandbuilder 產生命令](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)。</span><span class="sxs-lookup"><span data-stu-id="37a91-1060">For more information see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
 <span data-ttu-id="37a91-1061"><xref:System.Data.Common.DbDataAdapter.Update%2A>方法支援案例所在<xref:System.Data.DataSet>包含多個<xref:System.Data.DataTable>名稱只有大小寫不同的物件。</span><span class="sxs-lookup"><span data-stu-id="37a91-1061">The <xref:System.Data.Common.DbDataAdapter.Update%2A> method supports scenarios where the <xref:System.Data.DataSet> contains multiple <xref:System.Data.DataTable> objects whose names differ only by case.</span></span> <span data-ttu-id="37a91-1062">當多個資料表具有相同名稱但不同的情況下，存在於`DataSet`，<xref:System.Data.Common.DbDataAdapter.Update%2A>執行區分大小寫的比較，來尋找對應的資料表，並產生例外狀況，如果沒有完全相符項目存在。</span><span class="sxs-lookup"><span data-stu-id="37a91-1062">When multiple tables with the same name, but different case, exist in a `DataSet`, <xref:System.Data.Common.DbDataAdapter.Update%2A> performs a case-sensitive comparison to find the corresponding table, and generates an exception if no exact match exists.</span></span> <span data-ttu-id="37a91-1063">下列 C# 程式碼說明此行為。</span><span class="sxs-lookup"><span data-stu-id="37a91-1063">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet ds = new DataSet();  
 ds.Tables.Add("aaa");  
 ds.Tables.Add("AAA");  
 adapter.Update(ds, "aaa"); // Updates "aaa", which already exists in the DataSet.  
 adapter.Update(ds, "AAA"); // Updates "AAA", which already exists in the DataSet.  
    adapter.Update(ds, "Aaa"); // Results in an exception.  
```  
  
 <span data-ttu-id="37a91-1064">如果<xref:System.Data.Common.DbDataAdapter.Update%2A>呼叫時，<xref:System.Data.DataSet>只會包含一個<xref:System.Data.DataTable>名稱只有大小寫不同，，<xref:System.Data.DataTable>會更新。</span><span class="sxs-lookup"><span data-stu-id="37a91-1064">If <xref:System.Data.Common.DbDataAdapter.Update%2A> is called and the <xref:System.Data.DataSet> contains only one <xref:System.Data.DataTable> whose name differs only by case, that <xref:System.Data.DataTable> is updated.</span></span> <span data-ttu-id="37a91-1065">在此案例中，比較不區分大小寫。</span><span class="sxs-lookup"><span data-stu-id="37a91-1065">In this scenario, the comparison is case insensitive.</span></span> <span data-ttu-id="37a91-1066">下列 C# 程式碼說明此行為。</span><span class="sxs-lookup"><span data-stu-id="37a91-1066">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
 dataset.Tables.Add("aaa");  
    adapter.Update(dataset, "AAA"); // Updates table "aaa" because only one similarly named table is in the DataSet.  
```  
  
 <span data-ttu-id="37a91-1067"><xref:System.Data.Common.DbDataAdapter.Update%2A>方法會從第一個對應，然後再執行更新中所列的資料表擷取資料列。</span><span class="sxs-lookup"><span data-stu-id="37a91-1067">The <xref:System.Data.Common.DbDataAdapter.Update%2A> method retrieves rows from the table listed in the first mapping before performing an update.</span></span> <span data-ttu-id="37a91-1068"><xref:System.Data.Common.DbDataAdapter.Update%2A>然後重新整理使用值的資料列<xref:System.Data.IDbCommand.UpdatedRowSource%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="37a91-1068">The <xref:System.Data.Common.DbDataAdapter.Update%2A> then refreshes the row using the value of the <xref:System.Data.IDbCommand.UpdatedRowSource%2A> property.</span></span> <span data-ttu-id="37a91-1069">傳回任何其他資料列都會被忽略。</span><span class="sxs-lookup"><span data-stu-id="37a91-1069">Any additional rows returned are ignored.</span></span>  
  
 <span data-ttu-id="37a91-1070">任何資料載入回後<xref:System.Data.DataSet>，則<xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A>引發事件時，讓使用者能夠檢查協調<xref:System.Data.DataSet>資料列和任何輸出命令所傳回的參數。</span><span class="sxs-lookup"><span data-stu-id="37a91-1070">After any data is loaded back into the <xref:System.Data.DataSet>, the <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised, allowing the user to inspect the reconciled <xref:System.Data.DataSet> row and any output parameters returned by the command.</span></span> <span data-ttu-id="37a91-1071">已成功更新資料列之後，會接受該資料列所做的變更。</span><span class="sxs-lookup"><span data-stu-id="37a91-1071">After a row updates successfully, the changes to that row are accepted.</span></span>  
  
 <span data-ttu-id="37a91-1072">當使用<xref:System.Data.Common.DbDataAdapter.Update%2A>，執行的順序如下所示：</span><span class="sxs-lookup"><span data-stu-id="37a91-1072">When using <xref:System.Data.Common.DbDataAdapter.Update%2A>, the order of execution is as follows:</span></span>  
  
1.  <span data-ttu-id="37a91-1073">中的值<xref:System.Data.DataRow>會移至 參數值。</span><span class="sxs-lookup"><span data-stu-id="37a91-1073">The values in the <xref:System.Data.DataRow> are moved to the parameter values.</span></span>  
  
2.  <span data-ttu-id="37a91-1074">便會引發 <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> 事件。</span><span class="sxs-lookup"><span data-stu-id="37a91-1074">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> event is raised.</span></span>  
  
3.  <span data-ttu-id="37a91-1075">執行命令。</span><span class="sxs-lookup"><span data-stu-id="37a91-1075">The command executes.</span></span>  
  
4.  <span data-ttu-id="37a91-1076">如果命令設定為`FirstReturnedRecord`，則第一個傳回的結果會放在<xref:System.Data.DataRow>。</span><span class="sxs-lookup"><span data-stu-id="37a91-1076">If the command is set to `FirstReturnedRecord`, then the first returned result is placed in the <xref:System.Data.DataRow>.</span></span>  
  
5.  <span data-ttu-id="37a91-1077">如果沒有輸出參數，它們會放在<xref:System.Data.DataRow>。</span><span class="sxs-lookup"><span data-stu-id="37a91-1077">If there are output parameters, they are placed in the <xref:System.Data.DataRow>.</span></span>  
  
6.  <span data-ttu-id="37a91-1078">便會引發 <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> 事件。</span><span class="sxs-lookup"><span data-stu-id="37a91-1078">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised.</span></span>  
  
7.  <span data-ttu-id="37a91-1079">呼叫 <xref:System.Data.DataRow.AcceptChanges%2A>。</span><span class="sxs-lookup"><span data-stu-id="37a91-1079"><xref:System.Data.DataRow.AcceptChanges%2A> is called.</span></span>  
  
 <span data-ttu-id="37a91-1080">每個相關聯的命令<xref:System.Data.Common.DbDataAdapter>通常都有一個與其相關聯的參數集合。</span><span class="sxs-lookup"><span data-stu-id="37a91-1080">Each command associated with the <xref:System.Data.Common.DbDataAdapter> usually has a parameters collection associated with it.</span></span> <span data-ttu-id="37a91-1081">參數會對應至目前的資料列，透過`SourceColumn`並`SourceVersion`屬性的.NET Framework 資料提供者的`Parameter`類別。</span><span class="sxs-lookup"><span data-stu-id="37a91-1081">Parameters are mapped to the current row through the `SourceColumn` and `SourceVersion` properties of a .NET Framework data provider's `Parameter` class.</span></span> <span data-ttu-id="37a91-1082">`SourceColumn` 是指<xref:System.Data.DataTable>資料行，<xref:System.Data.Common.DbDataAdapter>以取得目前資料列的參數值的參考。</span><span class="sxs-lookup"><span data-stu-id="37a91-1082">`SourceColumn` refers to a <xref:System.Data.DataTable> column that the <xref:System.Data.Common.DbDataAdapter> references to obtain parameter values for the current row.</span></span>  
  
 <span data-ttu-id="37a91-1083">`SourceColumn` 在套用任何資料表對應之前，是指未對應的資料行名稱。</span><span class="sxs-lookup"><span data-stu-id="37a91-1083">`SourceColumn` refers to the unmapped column name before any table mappings have been applied.</span></span> <span data-ttu-id="37a91-1084">如果`SourceColumn`指的是不存在的資料行中，所採取的動作取決於下列其中一種<xref:System.Data.MissingMappingAction>值。</span><span class="sxs-lookup"><span data-stu-id="37a91-1084">If `SourceColumn` refers to a nonexistent column, the action taken depends on one of the following <xref:System.Data.MissingMappingAction> values.</span></span>  
  
|<span data-ttu-id="37a91-1085">列舉值</span><span class="sxs-lookup"><span data-stu-id="37a91-1085">Enumeration value</span></span>|<span data-ttu-id="37a91-1086">採取的動作</span><span class="sxs-lookup"><span data-stu-id="37a91-1086">Action taken</span></span>|  
|-----------------------|------------------|  
|`MissingMappingAction.Passthrough`|<span data-ttu-id="37a91-1087">使用中的資料表名稱與來源資料行名稱<xref:System.Data.DataSet>如果不不存在任何對應。</span><span class="sxs-lookup"><span data-stu-id="37a91-1087">Use the source column names and table names in the <xref:System.Data.DataSet> if no mapping is present.</span></span>|  
|`MissingMappingAction.Ignore`|<span data-ttu-id="37a91-1088">A<xref:System.SystemException>產生。</span><span class="sxs-lookup"><span data-stu-id="37a91-1088">A <xref:System.SystemException> is generated.</span></span> <span data-ttu-id="37a91-1089">對應已明確設定，當遺漏對應的輸入參數通常是錯誤的結果。</span><span class="sxs-lookup"><span data-stu-id="37a91-1089">When the mappings are explicitly set, a missing mapping for an input parameter is usually the result of an error.</span></span>|  
|`MissingMappingAction.Error`|<span data-ttu-id="37a91-1090">A<xref:System.SystemException>產生。</span><span class="sxs-lookup"><span data-stu-id="37a91-1090">A <xref:System.SystemException> is generated.</span></span>|  
  
 <span data-ttu-id="37a91-1091">`SourceColumn`屬性也會用來對應輸出的值，或輸入/輸出參數傳回`DataSet`。</span><span class="sxs-lookup"><span data-stu-id="37a91-1091">The `SourceColumn` property is also used to map the value for output or input/output parameters back to the `DataSet`.</span></span> <span data-ttu-id="37a91-1092">如果它是指不存在的資料行，則會產生例外狀況。</span><span class="sxs-lookup"><span data-stu-id="37a91-1092">An exception is generated if it refers to a nonexistent column.</span></span>  
  
 <span data-ttu-id="37a91-1093">`SourceVersion`屬性的.NET Framework 資料提供者的`Parameter`類別會決定是否要使用的原始、 目前、 或已提議版本資料行的值。</span><span class="sxs-lookup"><span data-stu-id="37a91-1093">The `SourceVersion` property of a .NET Framework data provider's `Parameter` class determines whether to use the Original, Current, or Proposed version of the column value.</span></span> <span data-ttu-id="37a91-1094">這項功能通常用於在 UPDATE 陳述式來檢查有開放式同步存取違規的 WHERE 子句中包含原始值。</span><span class="sxs-lookup"><span data-stu-id="37a91-1094">This capability is often used to include original values in the WHERE clause of an UPDATE statement to check for optimistic concurrency violations.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="37a91-1095">如果在更新資料列時發生錯誤，會擲回例外狀況，並執行更新已停止。</span><span class="sxs-lookup"><span data-stu-id="37a91-1095">If an error occurs while updating a row, an exception is thrown and execution of the update is discontinued.</span></span> <span data-ttu-id="37a91-1096">若要繼續更新作業，而不會產生例外狀況，當發生錯誤時，設定<xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A>屬性，以`true`再呼叫<xref:System.Data.Common.DbDataAdapter.Update%2A>。</span><span class="sxs-lookup"><span data-stu-id="37a91-1096">To continue the update operation without generating exceptions when an error is encountered, set the <xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A> property to `true` before calling <xref:System.Data.Common.DbDataAdapter.Update%2A>.</span></span> <span data-ttu-id="37a91-1097">您也可以回應內每個資料列依錯誤`RowUpdated`DataAdapter 的事件。</span><span class="sxs-lookup"><span data-stu-id="37a91-1097">You may also respond to errors on a per-row basis within the `RowUpdated` event of a DataAdapter.</span></span> <span data-ttu-id="37a91-1098">若要繼續更新作業，而不會產生例外狀況內`RowUpdated`事件，設定<xref:System.Data.Common.RowUpdatedEventArgs.Status%2A>屬性<xref:System.Data.Common.RowUpdatedEventArgs>至<xref:System.Data.UpdateStatus.Continue>。</span><span class="sxs-lookup"><span data-stu-id="37a91-1098">To continue the update operation without generating an exception within the `RowUpdated` event, set the <xref:System.Data.Common.RowUpdatedEventArgs.Status%2A> property of the <xref:System.Data.Common.RowUpdatedEventArgs> to <xref:System.Data.UpdateStatus.Continue>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="37a91-1099">下列範例會使用衍生的類別中， <xref:System.Data.OleDb.OleDbDataAdapter>、 更新資料來源。</span><span class="sxs-lookup"><span data-stu-id="37a91-1099">The following example uses the derived class, <xref:System.Data.OleDb.OleDbDataAdapter>, to update the data source.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.Update3#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Update3/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.Update3#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Update3/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="37a91-1100"><see cref="T:System.Data.DataSet" /> 無效。</span><span class="sxs-lookup"><span data-stu-id="37a91-1100">The <see cref="T:System.Data.DataSet" /> is invalid.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="37a91-1101">來源資料表無效。</span><span class="sxs-lookup"><span data-stu-id="37a91-1101">The source table is invalid.</span></span></exception>
        <exception cref="T:System.Data.DBConcurrencyException"><span data-ttu-id="37a91-1102">嘗試執行 INSERT、UPDATE 或 DELETE 陳述式會造成沒有資料錄受影響。</span><span class="sxs-lookup"><span data-stu-id="37a91-1102">An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md"><span data-ttu-id="37a91-1103">操作資料 (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="37a91-1103">Manipulating Data (ADO.NET)</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="37a91-1104">DbProviderFactory (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="37a91-1104">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="37a91-1105">ADO.NET 概觀</span><span class="sxs-lookup"><span data-stu-id="37a91-1105">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="UpdateBatchSize">
      <MemberSignature Language="C#" Value="public virtual int UpdateBatchSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 UpdateBatchSize" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataAdapter.UpdateBatchSize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property UpdateBatchSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int UpdateBatchSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.UpdateBatchSize : int with get, set" Usage="System.Data.Common.DbDataAdapter.UpdateBatchSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.ComponentModel.DefaultValue(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="37a91-1106">取得或設定值，其啟用或停用批次處理支援，並指定可於批次中執行的命令數目。</span><span class="sxs-lookup"><span data-stu-id="37a91-1106">Gets or sets a value that enables or disables batch processing support, and specifies the number of commands that can be executed in a batch.</span></span></summary>
        <value><span data-ttu-id="37a91-1107">每一批次要處理的資料列數目。</span><span class="sxs-lookup"><span data-stu-id="37a91-1107">The number of rows to process per batch.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="37a91-1108">值為</span><span class="sxs-lookup"><span data-stu-id="37a91-1108">Value is</span></span> 
 </term><description> <span data-ttu-id="37a91-1109">作用</span><span class="sxs-lookup"><span data-stu-id="37a91-1109">Effect</span></span> 
 </description></listheader><item><term> <span data-ttu-id="37a91-1110">0</span><span class="sxs-lookup"><span data-stu-id="37a91-1110">0</span></span> 
 </term><description> <span data-ttu-id="37a91-1111">批次大小沒有任何限制。</span><span class="sxs-lookup"><span data-stu-id="37a91-1111">There is no limit on the batch size.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="37a91-1112">1</span><span class="sxs-lookup"><span data-stu-id="37a91-1112">1</span></span> 
 </term><description> <span data-ttu-id="37a91-1113">停用批次更新。</span><span class="sxs-lookup"><span data-stu-id="37a91-1113">Disables batch updating.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="37a91-1114">&gt; 1</span><span class="sxs-lookup"><span data-stu-id="37a91-1114">&gt; 1</span></span> 
 </term><description> <span data-ttu-id="37a91-1115">使用 <see cref="P:System.Data.Common.DbDataAdapter.UpdateBatchSize" /> 作業的批次一次傳送變更。</span><span class="sxs-lookup"><span data-stu-id="37a91-1115">Changes are sent using batches of <see cref="P:System.Data.Common.DbDataAdapter.UpdateBatchSize" /> operations at a time.</span></span>  
  
 </description></item></list>  

 <span data-ttu-id="37a91-1116">當設定為 1 以外的值，與相關聯的所有命令<see cref="T:System.Data.Common.DbDataAdapter" />必須有其<see cref="P:System.Data.IDbCommand.UpdatedRowSource" />屬性設定為**無**或**OutputParameters**。</span><span class="sxs-lookup"><span data-stu-id="37a91-1116">When setting this to a value other than 1, all the commands associated with the <see cref="T:System.Data.Common.DbDataAdapter" /> must have their <see cref="P:System.Data.IDbCommand.UpdatedRowSource" /> property set to **None** or **OutputParameters**.</span></span> <span data-ttu-id="37a91-1117">否則會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="37a91-1117">An exception will be thrown otherwise.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37a91-1118">使用<xref:System.Data.Common.DbDataAdapter.UpdateBatchSize%2A>屬性來更新資料來源，以反映變更<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="37a91-1118">Use the <xref:System.Data.Common.DbDataAdapter.UpdateBatchSize%2A> property to update a data source with changes from a <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="37a91-1119">如果此資料提供者支援批次處理，這可以減少伺服器的來回行程次數來提升應用程式效能。</span><span class="sxs-lookup"><span data-stu-id="37a91-1119">If the data provider supports batch processing, this can increase application performance by reducing the number of round-trips to the server.</span></span> <span data-ttu-id="37a91-1120">在 ADO.NET 2.0 中，支援這個屬性的.NET data provider for SQL Server (SqlClient) 和 Oracle (OracleClient)。</span><span class="sxs-lookup"><span data-stu-id="37a91-1120">In ADO.NET 2.0, this property is supported for the .NET data providers for SQL Server (SqlClient) and Oracle (OracleClient).</span></span>  
  
 <span data-ttu-id="37a91-1121">執行極大的批次可能會降低效能。</span><span class="sxs-lookup"><span data-stu-id="37a91-1121">Executing an extremely large batch could decrease performance.</span></span> <span data-ttu-id="37a91-1122">因此，您應該先測試理想的批次大小設定，再實作應用程式。</span><span class="sxs-lookup"><span data-stu-id="37a91-1122">Therefore, you should test for the optimum batch size setting before implementing your application.</span></span>  
  
 <span data-ttu-id="37a91-1123"><xref:System.ArgumentOutOfRangeException>便會擲回的值設定為 數字小於零。</span><span class="sxs-lookup"><span data-stu-id="37a91-1123">An <xref:System.ArgumentOutOfRangeException> will be thrown if the value is set to a number less than zero.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md"><span data-ttu-id="37a91-1124">操作資料 (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="37a91-1124">Manipulating Data (ADO.NET)</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="37a91-1125">DbProviderFactory (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="37a91-1125">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="37a91-1126">ADO.NET 概觀</span><span class="sxs-lookup"><span data-stu-id="37a91-1126">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="UpdateCommand">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbCommand UpdateCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbCommand UpdateCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataAdapter.UpdateCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateCommand As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Common::DbCommand ^ UpdateCommand { System::Data::Common::DbCommand ^ get(); void set(System::Data::Common::DbCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UpdateCommand : System.Data.Common.DbCommand with get, set" Usage="System.Data.Common.DbDataAdapter.UpdateCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;netcore-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="37a91-1127">取得或設定用來在資料來源中更新資料錄的命令。</span><span class="sxs-lookup"><span data-stu-id="37a91-1127">Gets or sets a command used to update records in the data source.</span></span></summary>
        <value><span data-ttu-id="37a91-1128"><see cref="T:System.Data.IDbCommand" />，在 <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> 期間用來為資料集中修改的資料列更新在資料來源中的資料錄。</span><span class="sxs-lookup"><span data-stu-id="37a91-1128">A <see cref="T:System.Data.IDbCommand" /> used during <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> to update records in the data source for modified rows in the data set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37a91-1129">期間<xref:System.Data.Common.DbDataAdapter.Update%2A>，如果沒有設定這個屬性，而主索引鍵資訊是存在於<xref:System.Data.DataSet>，則<xref:System.Data.IDbDataAdapter.UpdateCommand%2A>將會自動產生。</span><span class="sxs-lookup"><span data-stu-id="37a91-1129">During <xref:System.Data.Common.DbDataAdapter.Update%2A>, if this property is not set and primary key information is present in the <xref:System.Data.DataSet>, the <xref:System.Data.IDbDataAdapter.UpdateCommand%2A> will be automatically generated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="37a91-1130">下列範例會建立衍生的類別<xref:System.Data.OleDb.OleDbDataAdapter>並設定其部分屬性。</span><span class="sxs-lookup"><span data-stu-id="37a91-1130">The following example creates the derived class <xref:System.Data.OleDb.OleDbDataAdapter> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.UpdateCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.UpdateCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.UpdateCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.UpdateCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md"><span data-ttu-id="37a91-1131">操作資料 (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="37a91-1131">Manipulating Data (ADO.NET)</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="37a91-1132">DbProviderFactory (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="37a91-1132">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="37a91-1133">ADO.NET 概觀</span><span class="sxs-lookup"><span data-stu-id="37a91-1133">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>