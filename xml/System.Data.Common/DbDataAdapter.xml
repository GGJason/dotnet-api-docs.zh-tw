<Type Name="DbDataAdapter" FullName="System.Data.Common.DbDataAdapter">
  <TypeSignature Language="C#" Value="public abstract class DbDataAdapter : System.Data.Common.DataAdapter, ICloneable, System.Data.IDbDataAdapter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit DbDataAdapter extends System.Data.Common.DataAdapter implements class System.Data.IDataAdapter, class System.Data.IDbDataAdapter, class System.ICloneable" />
  <TypeSignature Language="DocId" Value="T:System.Data.Common.DbDataAdapter" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class DbDataAdapter&#xA;Inherits DataAdapter&#xA;Implements ICloneable, IDbDataAdapter" />
  <TypeSignature Language="C++ CLI" Value="public ref class DbDataAdapter abstract : System::Data::Common::DataAdapter, ICloneable, System::Data::IDbDataAdapter" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DataAdapter</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Data.IDbDataAdapter</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="e6b9e-101">可協助實作 <see cref="T:System.Data.IDbDataAdapter" /> 介面。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-101">Aids implementation of the <see cref="T:System.Data.IDbDataAdapter" /> interface.</span></span> <span data-ttu-id="e6b9e-102"><see cref="T:System.Data.Common.DbDataAdapter" /> 繼承者實作一組函式以提供強型別，但繼承大多數完整實作 **DataAdapter** 所需的功能。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-102">Inheritors of <see cref="T:System.Data.Common.DbDataAdapter" /> implement a set of functions to provide strong typing, but inherit most of the functionality needed to fully implement a **DataAdapter**.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6b9e-103"><xref:System.Data.Common.DbDataAdapter>類別繼承自<xref:System.Data.Common.DataAdapter>類別，並且實作<xref:System.Data.IDbDataAdapter>介面。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-103">The <xref:System.Data.Common.DbDataAdapter> class inherits from the <xref:System.Data.Common.DataAdapter> class and implements the <xref:System.Data.IDbDataAdapter> interface.</span></span> <span data-ttu-id="e6b9e-104">它可協助實作類別**DataAdapter**設計用於關聯式資料庫。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-104">It helps a class implement a **DataAdapter** designed for use with a relational database.</span></span>  
  
 <span data-ttu-id="e6b9e-105">應用程式不會建立的執行個體<xref:System.Data.Common.DbDataAdapter>類別直接，但是會建立繼承自該類別的執行個體。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-105">An application does not create an instance of the <xref:System.Data.Common.DbDataAdapter> class directly, but creates an instance of a class that inherits from it.</span></span>  
  
 <span data-ttu-id="e6b9e-106">繼承的類別<xref:System.Data.Common.DbDataAdapter>必須實作繼承的成員，和通常用來定義其他成員將提供者特有的功能。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-106">Classes that inherit <xref:System.Data.Common.DbDataAdapter> must implement the inherited members, and typically define additional members to add provider-specific functionality.</span></span> <span data-ttu-id="e6b9e-107">例如，<xref:System.Data.Common.DbDataAdapter>類別會定義<xref:System.Data.IDbDataAdapter.SelectCommand%2A>屬性，而<xref:System.Data.Common.DbDataAdapter>類別定義的八個多載<xref:System.Data.IDataAdapter.Fill%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-107">For example, the <xref:System.Data.Common.DbDataAdapter> class defines the <xref:System.Data.IDbDataAdapter.SelectCommand%2A> property, and the <xref:System.Data.Common.DbDataAdapter> class defines eight overloads of the <xref:System.Data.IDataAdapter.Fill%2A> method.</span></span> <span data-ttu-id="e6b9e-108">接著，<xref:System.Data.OleDb.OleDbDataAdapter>類別會繼承<xref:System.Data.Common.DbDataAdapter.Fill%2A>方法，而且也會定義兩個其他多載<xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A>可接受的 ADO 資料錄集物件做為參數。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-108">In turn, the <xref:System.Data.OleDb.OleDbDataAdapter> class inherits the <xref:System.Data.Common.DbDataAdapter.Fill%2A> method, and also defines two additional overloads of <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> that take an ADO Recordset object as a parameter.</span></span>  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para><span data-ttu-id="e6b9e-109">當您繼承自<see cref="T:System.Data.Common.DbDataAdapter" />類別，建議您實作下列建構函式：</span><span class="sxs-lookup"><span data-stu-id="e6b9e-109">When you inherit from the <see cref="T:System.Data.Common.DbDataAdapter" /> class, we recommend that you implement the following constructors:</span></span>  
  
 <span data-ttu-id="e6b9e-110"><list type="table"><listheader><term> 項目</span><span class="sxs-lookup"><span data-stu-id="e6b9e-110"><list type="table"><listheader><term> Item</span></span>  
  
 <span data-ttu-id="e6b9e-111"></term><description> 描述</span><span class="sxs-lookup"><span data-stu-id="e6b9e-111"></term><description> Description</span></span>  
  
 <span data-ttu-id="e6b9e-112"></description></listheader><item><term> *Prv*DataAdapter()</span><span class="sxs-lookup"><span data-stu-id="e6b9e-112"></description></listheader><item><term> *Prv*DataAdapter()</span></span>  
  
 <span data-ttu-id="e6b9e-113"></term><description> 初始化的新執行個體*Prv*資料配接器類別。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-113"></term><description> Initializes a new instance of the *Prv*DataAdapter class.</span></span>  
  
 <span data-ttu-id="e6b9e-114"></description></item><item><term> *Prv*DataAdapter (*Prv*命令*selectCommand*)</span><span class="sxs-lookup"><span data-stu-id="e6b9e-114"></description></item><item><term> *Prv*DataAdapter(*Prv*Command *selectCommand*)</span></span>  
  
 <span data-ttu-id="e6b9e-115"></term><description> 初始化的新執行個體*Prv*資料配接器類別，以指定的 SQL SELECT 陳述式。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-115"></term><description> Initializes a new instance of the *Prv*DataAdapter class with the specified SQL SELECT statement.</span></span>  
  
 <span data-ttu-id="e6b9e-116"></description></item><item><term> *Prv*DataAdapter (字串*selectCommandText*，字串*selectConnectionString*)</span><span class="sxs-lookup"><span data-stu-id="e6b9e-116"></description></item><item><term> *Prv*DataAdapter(string *selectCommandText*, string *selectConnectionString*)</span></span>  
  
 <span data-ttu-id="e6b9e-117"></term><description> 初始化的新執行個體*Prv*SQL SELECT 陳述式與連接字串的資料配接器類別。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-117"></term><description> Initializes a new instance of the *Prv*DataAdapter class with an SQL SELECT statement and a connection string.</span></span>  
  
 <span data-ttu-id="e6b9e-118"></description></item><item><term> *Prv*DataAdapter (字串*selectCommandText*， *Prv*連接*selectConnection*)</span><span class="sxs-lookup"><span data-stu-id="e6b9e-118"></description></item><item><term> *Prv*DataAdapter(string *selectCommandText*, *Prv*Connection *selectConnection*)</span></span>  
  
 <span data-ttu-id="e6b9e-119"></term><description> 初始化的新執行個體*Prv*資料配接器類別，以 SQL SELECT 陳述式和*Prv*連接物件。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-119"></term><description> Initializes a new instance of the *Prv*DataAdapter class with an SQL SELECT statement and a *Prv*Connection object.</span></span>  
  
 </description></item></list>  
  
 <span data-ttu-id="e6b9e-120">若要提升在.NET Framework 資料提供者之間的一致性，表單中的繼承類別應該命名*Prv*資料配接器，其中*Prv*是提供給特定的.NET 中的所有類別的統一前置詞Framework 資料提供者命名空間。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-120">To promote consistency among .NET Framework data providers, you should name the inheriting class in the form *Prv*DataAdapter, where *Prv* is the uniform prefix given to all classes in a specific .NET Framework data provider namespace.</span></span> <span data-ttu-id="e6b9e-121">例如，"Sql"這是前置詞<see cref="T:System.Data.SqlClient.SqlDataAdapter" />類別**System.Data.SqlClient**命名空間。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-121">For example, "Sql" is the prefix of the <see cref="T:System.Data.SqlClient.SqlDataAdapter" /> class in the **System.Data.SqlClient** namespace.</span></span></para>
    </block>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e6b9e-122">初始化 <see langword="DataAdapter" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-122">Initializes a new instance of a <see langword="DataAdapter" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DbDataAdapter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DbDataAdapter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e6b9e-123">初始化 **DataAdapter** 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-123">Initializes a new instance of a **DataAdapter** class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6b9e-124">當您建立的執行個體<xref:System.Data.Common.DbDataAdapter>，下列的讀取/寫入屬性設定為下列的初始值。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-124">When you create an instance of <xref:System.Data.Common.DbDataAdapter>, the following read/write properties are set to the following initial values.</span></span>  
  
|<span data-ttu-id="e6b9e-125">屬性</span><span class="sxs-lookup"><span data-stu-id="e6b9e-125">Properties</span></span>|<span data-ttu-id="e6b9e-126">Initial value</span><span class="sxs-lookup"><span data-stu-id="e6b9e-126">Initial value</span></span>|  
|----------------|-------------------|  
|<xref:System.Data.IDbDataAdapter.SelectCommand%2A>|<span data-ttu-id="e6b9e-127">新的 <xref:System.Data.IDbCommand>。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-127">A new <xref:System.Data.IDbCommand>.</span></span>|  
|<xref:System.Data.IDbDataAdapter.InsertCommand%2A>|<span data-ttu-id="e6b9e-128">新的 <xref:System.Data.IDbCommand>。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-128">A new <xref:System.Data.IDbCommand>.</span></span>|  
|<xref:System.Data.IDbDataAdapter.DeleteCommand%2A>|<span data-ttu-id="e6b9e-129">新的 <xref:System.Data.IDbCommand>。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-129">A new <xref:System.Data.IDbCommand>.</span></span>|  
|<xref:System.Data.IDbDataAdapter.UpdateCommand%2A>|<span data-ttu-id="e6b9e-130">新的 <xref:System.Data.IDbCommand>。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-130">A new <xref:System.Data.IDbCommand>.</span></span>|  
|<xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>|`MissingMappingAction.Passthrough`|  
|<xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>|`MissingSchemaAction.Add`|  
  
 <span data-ttu-id="e6b9e-131">您可以變更任何這些屬性，透過呼叫另一個屬性的值。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-131">You can change the value of any of these properties through a separate call to the property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DbDataAdapter (System.Data.Common.DbDataAdapter adapter);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Data.Common.DbDataAdapter adapter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.#ctor(System.Data.Common.DbDataAdapter)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (adapter As DbDataAdapter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DbDataAdapter(System::Data::Common::DbDataAdapter ^ adapter);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="adapter" Type="System.Data.Common.DbDataAdapter" />
      </Parameters>
      <Docs>
        <param name="adapter"><span data-ttu-id="e6b9e-132"><see langword="DataAdapter" /> 物件，用來建立新的 <see langword="DataAdapter" />。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-132">A <see langword="DataAdapter" /> object used to create the new <see langword="DataAdapter" />.</span></span></param>
        <summary><span data-ttu-id="e6b9e-133">從相同類型的現有物件，初始化 <see langword="DataAdapter" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-133">Initializes a new instance of a <see langword="DataAdapter" /> class from an existing object of the same type.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6b9e-134">這個多載<xref:System.Data.Common.DbDataAdapter>建構函式適用於.NET Framework 資料提供者實作 clone 實作中使用類似的建構函式時。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-134">This overload of the <xref:System.Data.Common.DbDataAdapter> constructor is designed for use by a .NET Framework data provider when implementing a similar constructor for use in a clone implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddToBatch">
      <MemberSignature Language="C#" Value="protected virtual int AddToBatch (System.Data.IDbCommand command);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 AddToBatch(class System.Data.IDbCommand command) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.AddToBatch(System.Data.IDbCommand)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function AddToBatch (command As IDbCommand) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int AddToBatch(System::Data::IDbCommand ^ command);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="System.Data.IDbCommand" />
      </Parameters>
      <Docs>
        <param name="command"><span data-ttu-id="e6b9e-135">要加入至批次的 <see cref="T:System.Data.IDbCommand" />。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-135">The <see cref="T:System.Data.IDbCommand" /> to add to the batch.</span></span></param>
        <summary><span data-ttu-id="e6b9e-136">加入 <see cref="T:System.Data.IDbCommand" /> 至目前批次。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-136">Adds a <see cref="T:System.Data.IDbCommand" /> to the current batch.</span></span></summary>
        <returns><span data-ttu-id="e6b9e-137">加入 <see cref="T:System.Data.IDbCommand" /> 之前，批次中的命令數目。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-137">The number of commands in the batch before adding the <see cref="T:System.Data.IDbCommand" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6b9e-138">在<xref:System.Data.Common.DbDataAdapter>，這個方法會擲回<xref:System.NotSupportedException>。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-138">In <xref:System.Data.Common.DbDataAdapter>, this method throws <xref:System.NotSupportedException>.</span></span> <span data-ttu-id="e6b9e-139">類別繼承自<xref:System.Data.Common.DbDataAdapter>覆寫這個方法以提供支援批次。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-139">Classes that inherit from <xref:System.Data.Common.DbDataAdapter> override this method to provide support for batches.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="e6b9e-140">配置器不支援批次。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-140">The adapter does not support batches.</span></span></exception>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="e6b9e-141">這個方法受到保護，可供使用的.NET Framework 資料提供者。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-141">This method is protected and is designed for use by a .NET Framework data provider.</span></span>  
  
 <span data-ttu-id="e6b9e-142">如果類別繼承自<see cref="T:System.Data.Common.DbDataAdapter" />支援批次，該類別會覆寫此方法可讓使用者將命令加入至批次。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-142">If a class that inherits from <see cref="T:System.Data.Common.DbDataAdapter" /> supports batches, that class overrides this method to allow users to add a command to a batch.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="ClearBatch">
      <MemberSignature Language="C#" Value="protected virtual void ClearBatch ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ClearBatch() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.ClearBatch" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ClearBatch ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ClearBatch();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e6b9e-143">將所有的 <see cref="T:System.Data.IDbCommand" /> 物件從批次中移除。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-143">Removes all <see cref="T:System.Data.IDbCommand" /> objects from the batch.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6b9e-144">在<xref:System.Data.Common.DbDataAdapter>，這個方法會擲回<xref:System.NotSupportedException>。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-144">In <xref:System.Data.Common.DbDataAdapter>, this method throws <xref:System.NotSupportedException>.</span></span> <span data-ttu-id="e6b9e-145">類別繼承自<xref:System.Data.Common.DbDataAdapter>覆寫這個方法以提供支援批次。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-145">Classes that inherit from <xref:System.Data.Common.DbDataAdapter> override this method to provide support for batches.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="e6b9e-146">配置器不支援批次。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-146">The adapter does not support batches.</span></span></exception>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="e6b9e-147">這個方法受到保護，可供使用的.NET Framework 資料提供者。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-147">This method is protected and is designed for use by a .NET Framework data provider.</span></span>  
  
 <span data-ttu-id="e6b9e-148">如果類別繼承自<see cref="T:System.Data.Common.DbDataAdapter" />支援批次，該類別會覆寫此方法可讓使用者從批次移除所有的命令。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-148">If a class that inherits from <see cref="T:System.Data.Common.DbDataAdapter" /> supports batches, that class overrides this method to allow users to remove all commands from a batch.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="CreateRowUpdatedEvent">
      <MemberSignature Language="C#" Value="protected virtual System.Data.Common.RowUpdatedEventArgs CreateRowUpdatedEvent (System.Data.DataRow dataRow, System.Data.IDbCommand command, System.Data.StatementType statementType, System.Data.Common.DataTableMapping tableMapping);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.Common.RowUpdatedEventArgs CreateRowUpdatedEvent(class System.Data.DataRow dataRow, class System.Data.IDbCommand command, valuetype System.Data.StatementType statementType, class System.Data.Common.DataTableMapping tableMapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Data::Common::RowUpdatedEventArgs ^ CreateRowUpdatedEvent(System::Data::DataRow ^ dataRow, System::Data::IDbCommand ^ command, System::Data::StatementType statementType, System::Data::Common::DataTableMapping ^ tableMapping);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.RowUpdatedEventArgs</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataRow" Type="System.Data.DataRow" />
        <Parameter Name="command" Type="System.Data.IDbCommand" />
        <Parameter Name="statementType" Type="System.Data.StatementType" />
        <Parameter Name="tableMapping" Type="System.Data.Common.DataTableMapping" />
      </Parameters>
      <Docs>
        <param name="dataRow"><span data-ttu-id="e6b9e-149">用來更新資料來源的 <see cref="T:System.Data.DataRow" />。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-149">The <see cref="T:System.Data.DataRow" /> used to update the data source.</span></span></param>
        <param name="command"><span data-ttu-id="e6b9e-150">在 <see cref="T:System.Data.IDbCommand" /> 期間執行的 <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-150">The <see cref="T:System.Data.IDbCommand" /> executed during the <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />.</span></span></param>
        <param name="statementType"><span data-ttu-id="e6b9e-151">命令為 UPDATE、INSERT、DELETE 或 SELECT 陳述式。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-151">Whether the command is an UPDATE, INSERT, DELETE, or SELECT statement.</span></span></param>
        <param name="tableMapping"><span data-ttu-id="e6b9e-152"><see cref="T:System.Data.Common.DataTableMapping" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-152">A <see cref="T:System.Data.Common.DataTableMapping" /> object.</span></span></param>
        <summary><span data-ttu-id="e6b9e-153">初始化 <see cref="T:System.Data.Common.RowUpdatedEventArgs" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-153">Initializes a new instance of the <see cref="T:System.Data.Common.RowUpdatedEventArgs" /> class.</span></span></summary>
        <returns><span data-ttu-id="e6b9e-154"><see cref="T:System.Data.Common.RowUpdatedEventArgs" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-154">A new instance of the <see cref="T:System.Data.Common.RowUpdatedEventArgs" /> class.</span></span></returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="e6b9e-155">在覆寫<see cref="M:System.Data.Common.DbDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" />在衍生類別中，請務必呼叫基底類別的<see cref="M:System.Data.Common.DbDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" />方法。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-155">When overriding <see cref="M:System.Data.Common.DbDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" /> in a derived class, be sure to call the base class's <see cref="M:System.Data.Common.DbDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" /> method.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="CreateRowUpdatingEvent">
      <MemberSignature Language="C#" Value="protected virtual System.Data.Common.RowUpdatingEventArgs CreateRowUpdatingEvent (System.Data.DataRow dataRow, System.Data.IDbCommand command, System.Data.StatementType statementType, System.Data.Common.DataTableMapping tableMapping);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.Common.RowUpdatingEventArgs CreateRowUpdatingEvent(class System.Data.DataRow dataRow, class System.Data.IDbCommand command, valuetype System.Data.StatementType statementType, class System.Data.Common.DataTableMapping tableMapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Data::Common::RowUpdatingEventArgs ^ CreateRowUpdatingEvent(System::Data::DataRow ^ dataRow, System::Data::IDbCommand ^ command, System::Data::StatementType statementType, System::Data::Common::DataTableMapping ^ tableMapping);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.RowUpdatingEventArgs</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataRow" Type="System.Data.DataRow" />
        <Parameter Name="command" Type="System.Data.IDbCommand" />
        <Parameter Name="statementType" Type="System.Data.StatementType" />
        <Parameter Name="tableMapping" Type="System.Data.Common.DataTableMapping" />
      </Parameters>
      <Docs>
        <param name="dataRow"><span data-ttu-id="e6b9e-156">更新資料來源的 <see cref="T:System.Data.DataRow" />。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-156">The <see cref="T:System.Data.DataRow" /> that updates the data source.</span></span></param>
        <param name="command"><span data-ttu-id="e6b9e-157">要在 <see cref="T:System.Data.IDbCommand" /> 期間執行的 <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-157">The <see cref="T:System.Data.IDbCommand" /> to execute during the <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />.</span></span></param>
        <param name="statementType"><span data-ttu-id="e6b9e-158">命令為 UPDATE、INSERT、DELETE 或 SELECT 陳述式。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-158">Whether the command is an UPDATE, INSERT, DELETE, or SELECT statement.</span></span></param>
        <param name="tableMapping"><span data-ttu-id="e6b9e-159"><see cref="T:System.Data.Common.DataTableMapping" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-159">A <see cref="T:System.Data.Common.DataTableMapping" /> object.</span></span></param>
        <summary><span data-ttu-id="e6b9e-160">初始化 <see cref="T:System.Data.Common.RowUpdatingEventArgs" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-160">Initializes a new instance of the <see cref="T:System.Data.Common.RowUpdatingEventArgs" /> class.</span></span></summary>
        <returns><span data-ttu-id="e6b9e-161"><see cref="T:System.Data.Common.RowUpdatingEventArgs" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-161">A new instance of the <see cref="T:System.Data.Common.RowUpdatingEventArgs" /> class.</span></span></returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="e6b9e-162">在覆寫<see cref="M:System.Data.Common.DbDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" />在衍生類別中，請務必呼叫基底類別的<see cref="M:System.Data.Common.DbDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" />方法。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-162">When overriding <see cref="M:System.Data.Common.DbDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" /> in a derived class, be sure to call the base class's <see cref="M:System.Data.Common.DbDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" /> method.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="DefaultSourceTableName">
      <MemberSignature Language="C#" Value="public const string DefaultSourceTableName;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string DefaultSourceTableName" />
      <MemberSignature Language="DocId" Value="F:System.Data.Common.DbDataAdapter.DefaultSourceTableName" />
      <MemberSignature Language="VB.NET" Value="Public Const DefaultSourceTableName As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ DefaultSourceTableName;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e6b9e-163">資料表對應之 <see cref="T:System.Data.Common.DataAdapter" /> 物件所使用的預設名稱。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-163">The default name used by the <see cref="T:System.Data.Common.DataAdapter" /> object for table mappings.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6b9e-164">「 資料表 」 是所使用的預設名稱<xref:System.Data.Common.DataAdapter>資料表對應的物件。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-164">"Table" is the default name used by the <xref:System.Data.Common.DataAdapter> object for table mappings.</span></span>  
  
 <span data-ttu-id="e6b9e-165"><xref:System.Data.Common.DbDataAdapter.DefaultSourceTableName> 當應用程式加入資料表對應搭配使用時<xref:System.Data.Common.DbDataAdapter.Fill%2A>，但未指定<xref:System.Data.DataTable>名稱。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-165"><xref:System.Data.Common.DbDataAdapter.DefaultSourceTableName> is when an application adds a table mapping to be used with <xref:System.Data.Common.DbDataAdapter.Fill%2A>, but does not specify a <xref:System.Data.DataTable> name.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteCommand">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbCommand DeleteCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbCommand DeleteCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataAdapter.DeleteCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property DeleteCommand As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Common::DbCommand ^ DeleteCommand { System::Data::Common::DbCommand ^ get(); void set(System::Data::Common::DbCommand ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e6b9e-166">取得或設定命令，以從資料集刪除資料錄。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-166">Gets or sets a command for deleting records from the data set.</span></span></summary>
        <value><span data-ttu-id="e6b9e-167"><see cref="T:System.Data.IDbCommand" />，在 <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> 期間用來為資料集中所刪除的資料列刪除在資料來源中的資料錄。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-167">An <see cref="T:System.Data.IDbCommand" /> used during <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> to delete records in the data source for deleted rows in the data set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6b9e-168">期間<xref:System.Data.Common.DbDataAdapter.Update%2A>，如果沒有設定這個屬性，並且出現在主索引鍵資訊<xref:System.Data.DataSet>、<xref:System.Data.IDbDataAdapter.DeleteCommand%2A>自動產生。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-168">During <xref:System.Data.Common.DbDataAdapter.Update%2A>, if this property is not set and primary key information is present in the <xref:System.Data.DataSet>, the <xref:System.Data.IDbDataAdapter.DeleteCommand%2A> is automatically generated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e6b9e-169">下列範例會建立衍生的類別<xref:System.Data.OleDb.OleDbDataAdapter>並設定其屬性的某些。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-169">The following example creates the derived class <xref:System.Data.OleDb.OleDbDataAdapter> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.DeleteCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.DeleteCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.DeleteCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.DeleteCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="e6b9e-170"><see langword="true" /> 表示釋放 Managed 和 Unmanaged 資源，<see langword="false" /> 則表示只釋放 Unmanaged 資源。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-170"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="e6b9e-171">釋放 <see cref="T:System.Data.Common.DbDataAdapter" /> 所使用的 Unmanaged 資源，並選擇性地釋放 Managed 資源。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-171">Releases the unmanaged resources used by the <see cref="T:System.Data.Common.DbDataAdapter" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteBatch">
      <MemberSignature Language="C#" Value="protected virtual int ExecuteBatch ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 ExecuteBatch() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.ExecuteBatch" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ExecuteBatch () As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int ExecuteBatch();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e6b9e-172">執行目前批次。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-172">Executes the current batch.</span></span></summary>
        <returns><span data-ttu-id="e6b9e-173">批次中上一個命令的傳回值。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-173">The return value from the last command in the batch.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6b9e-174">在<xref:System.Data.Common.DbDataAdapter>，這個方法會擲回<xref:System.NotSupportedException>。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-174">In <xref:System.Data.Common.DbDataAdapter>, this method throws <xref:System.NotSupportedException>.</span></span> <span data-ttu-id="e6b9e-175">類別繼承自<xref:System.Data.Common.DbDataAdapter>覆寫這個方法以提供支援批次。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-175">Classes that inherit from <xref:System.Data.Common.DbDataAdapter> override this method to provide support for batches.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="e6b9e-176">這個方法受到保護，可供使用的.NET Framework 資料提供者。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-176">This method is protected and is designed for use by a .NET Framework data provider.</span></span>  
  
 <span data-ttu-id="e6b9e-177">如果類別繼承自<see cref="T:System.Data.Common.DbDataAdapter" />支援批次，該類別會覆寫此方法可讓使用者執行批次。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-177">If a class that inherits from <see cref="T:System.Data.Common.DbDataAdapter" /> supports batches, that class overrides this method to allow users to execute a batch.</span></span> <span data-ttu-id="e6b9e-178">這個方法的實作將配接器中的命令結合成一個批次，然後執行批次並傳回批次的傳回值。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-178">An implementation of this method combines the commands in the adapter into a batch, then executes the batch and returns the return value of the batch.</span></span></para>
        </block>
      </Docs>
    </Member>
    <MemberGroup MemberName="Fill">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e6b9e-179">填入 <see cref="T:System.Data.DataSet" /> 或 <see cref="T:System.Data.DataTable" />。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-179">Fills a <see cref="T:System.Data.DataSet" /> or a <see cref="T:System.Data.DataTable" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="public override int Fill (System.Data.DataSet dataSet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Fill(class System.Data.DataSet dataSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int Fill(System::Data::DataSet ^ dataSet);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataAdapter.Fill(System.Data.DataSet)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
      </Parameters>
      <Docs>
        <param name="dataSet"><span data-ttu-id="e6b9e-180">要填入資料錄和結構描述 (如果必要的話) 的 <see cref="T:System.Data.DataSet" />。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-180">A <see cref="T:System.Data.DataSet" /> to fill with records and, if necessary, schema.</span></span></param>
        <summary><span data-ttu-id="e6b9e-181">在 <see cref="T:System.Data.DataSet" /> 中加入或重新整理資料列。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-181">Adds or refreshes rows in the <see cref="T:System.Data.DataSet" />.</span></span></summary>
        <returns><span data-ttu-id="e6b9e-182">成功加入至 <see cref="T:System.Data.DataSet" /> 或在其中重新整理的資料列數目。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-182">The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataSet" />.</span></span> <span data-ttu-id="e6b9e-183">這不包含被不傳回資料列之陳述式所影響的資料列。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-183">This does not include rows affected by statements that do not return rows.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6b9e-184"><xref:System.Data.Common.DbDataAdapter.Fill%2A>方法會從使用 SELECT 陳述式的資料來源擷取資料。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-184">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method retrieves the data from the data source using a SELECT statement.</span></span> <span data-ttu-id="e6b9e-185"><xref:System.Data.IDbConnection> Select 命令相關聯的物件必須有效，但它不需要開啟。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-185">The <xref:System.Data.IDbConnection> object associated with the select command must be valid, but it does not need to be open.</span></span> <span data-ttu-id="e6b9e-186">如果<xref:System.Data.IDbConnection>前已關閉<xref:System.Data.Common.DbDataAdapter.Fill%2A>是呼叫，它會開啟擷取資料並關閉。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-186">If the <xref:System.Data.IDbConnection> is closed before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it is opened to retrieve data and then closed.</span></span> <span data-ttu-id="e6b9e-187">如果連接為開啟之前<xref:System.Data.Common.DbDataAdapter.Fill%2A>是呼叫，它會保持開啟狀態。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-187">If the connection is open before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="e6b9e-188">如果錯誤或例外狀況時發生填入資料的資料表，在發生錯誤之前所加入的資料列會保留在資料的資料表。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-188">If an error or an exception is encountered while populating the data tables, rows added prior to the occurrence of the error remain in the data tables.</span></span> <span data-ttu-id="e6b9e-189">已中止運算的餘數。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-189">The remainder of the operation is aborted.</span></span>  
  
 <span data-ttu-id="e6b9e-190">如果命令未傳回任何資料列，將資料表加入至<xref:System.Data.DataSet>，並會引發任何例外狀況。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-190">If a command does not return any rows, no tables are added to the <xref:System.Data.DataSet>, and no exception is raised.</span></span>  
  
 <span data-ttu-id="e6b9e-191">如果<xref:System.Data.Common.DbDataAdapter>物件遇到重複的資料行在填入<xref:System.Data.DataTable>，它會產生後續使用模式的資料行名稱"*columnname*1"，"*columnname*2"，"*columnname*3"等等。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-191">If the <xref:System.Data.Common.DbDataAdapter> object encounters duplicate columns while populating a <xref:System.Data.DataTable>, it generates names for the subsequent columns using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="e6b9e-192">如果內送資料中包含未命名資料行，它們會放置於<xref:System.Data.DataSet>根據模式"Column1"、"Column2"，等等。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-192">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span>  
  
 <span data-ttu-id="e6b9e-193">當指定的查詢傳回多個結果時，結果集傳回查詢的每個資料列位於個別的資料表。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-193">When the query specified returns multiple results, the result set for each row returning query is placed in a separate table.</span></span> <span data-ttu-id="e6b9e-194">其他結果集的命名方式是附加至指定的資料表名稱 （例如，"Table"、"Table1"、"Table2"等等） 的整數值。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-194">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on).</span></span> <span data-ttu-id="e6b9e-195">不會建立資料表查詢不會傳回資料列，如果您在處理 insert 查詢後面的 select 查詢，因為資料表建立選取查詢的名稱為"Table"因為它是建立的第一個資料表。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-195">Because no table is created for a query that does not return rows, if you process an insert query followed by a select query, the table created for the select query is named "Table" because it is the first table created.</span></span> <span data-ttu-id="e6b9e-196">使用資料行和資料表名稱的應用程式應確保這些命名模式衝突不會發生。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-196">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="e6b9e-197">當 SELECT 陳述式用來填入<xref:System.Data.DataSet>傳回多個結果，例如批次 SQL 陳述式，如果其中一個結果包含錯誤，會略過所有後續的結果並不會加入至<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-197">When the SELECT statement used to populate the <xref:System.Data.DataSet> returns multiple results, such as batch SQL statements, if one of the results contains an error, all subsequent results are skipped and are not added to the <xref:System.Data.DataSet>.</span></span>  
  
 <span data-ttu-id="e6b9e-198">當使用後續<xref:System.Data.Common.DbDataAdapter.Fill%2A>對更新的內容呼叫<xref:System.Data.DataSet>，必須符合兩個條件：</span><span class="sxs-lookup"><span data-stu-id="e6b9e-198">When using subsequent <xref:System.Data.Common.DbDataAdapter.Fill%2A> calls to refresh the contents of the <xref:System.Data.DataSet>, two conditions must be met:</span></span>  
  
1.  <span data-ttu-id="e6b9e-199">SQL 陳述式應該符合最初用來填入<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-199">The SQL statement should match the one initially used to populate the <xref:System.Data.DataSet>.</span></span>  
  
2.  <span data-ttu-id="e6b9e-200">**金鑰**必須存在的資料行資訊。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-200">The **Key** column information must be present.</span></span>  
  
 <span data-ttu-id="e6b9e-201">如果主索引鍵資訊存在時，任何重複的資料列和一致，而且只能出現一次在<xref:System.Data.DataTable>對應於<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-201">If primary key information is present, any duplicate rows are reconciled and only appear once in the <xref:System.Data.DataTable> that corresponds to the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="e6b9e-202">主索引鍵資訊可能會設定透過<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>，藉由指定<xref:System.Data.DataTable.PrimaryKey%2A>屬性<xref:System.Data.DataTable>，或藉由設定<xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>屬性`AddWithKey`。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-202">Primary key information may be set either through <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, by specifying the <xref:System.Data.DataTable.PrimaryKey%2A> property of the <xref:System.Data.DataTable>, or by setting the <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> property to `AddWithKey`.</span></span>  
  
 <span data-ttu-id="e6b9e-203">如果 `SelectCommand` 傳回 OUTER JOIN 的結果，則 `DataAdapter` 便不會為產生的 <xref:System.Data.DataTable.PrimaryKey%2A> 設定 <xref:System.Data.DataTable> 值。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-203">If the `SelectCommand` returns the results of an OUTER JOIN, the `DataAdapter` does not set a <xref:System.Data.DataTable.PrimaryKey%2A> value for the resulting <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="e6b9e-204">您必須明確定義主索引鍵，以確保正確解析重複的資料列。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-204">You must explicitly define the primary key to ensure that duplicate rows are resolved correctly.</span></span> <span data-ttu-id="e6b9e-205">如需詳細資訊，請參閱[定義主索引鍵](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md)。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-205">For more information, see [Defining Primary Keys](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e6b9e-206">處理批次傳回多個結果，實作的 SQL 陳述式時<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>的.NET Framework Data Provider for OLE DB 擷取，只有第一個結果的結構描述資訊。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-206">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</span></span> <span data-ttu-id="e6b9e-207">若要擷取多個結果的結構描述資訊，請使用<xref:System.Data.Common.DbDataAdapter.Fill%2A>與<xref:System.Data.MissingSchemaAction>設`AddWithKey`。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-207">To retrieve schema information for multiple results, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> with the <xref:System.Data.MissingSchemaAction> set to `AddWithKey`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="public int Fill (System.Data.DataTable dataTable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Fill(class System.Data.DataTable dataTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Fill(System::Data::DataTable ^ dataTable);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataTable" Type="System.Data.DataTable" />
      </Parameters>
      <Docs>
        <param name="dataTable"><span data-ttu-id="e6b9e-208">用於資料表對應的 <see cref="T:System.Data.DataTable" /> 名稱。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-208">The name of the <see cref="T:System.Data.DataTable" /> to use for table mapping.</span></span></param>
        <summary><span data-ttu-id="e6b9e-209">使用 <see cref="T:System.Data.DataSet" /> 名稱，加入或重新整理 <see cref="T:System.Data.DataTable" /> 中指定範圍內的資料列，以符合那些在資料來源中的資料列。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-209">Adds or refreshes rows in a specified range in the <see cref="T:System.Data.DataSet" /> to match those in the data source using the <see cref="T:System.Data.DataTable" /> name.</span></span></summary>
        <returns><span data-ttu-id="e6b9e-210">成功加入至 <see cref="T:System.Data.DataSet" /> 或在其中重新整理的資料列數目。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-210">The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataSet" />.</span></span> <span data-ttu-id="e6b9e-211">這不包含被不傳回資料列之陳述式所影響的資料列。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-211">This does not include rows affected by statements that do not return rows.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6b9e-212"><xref:System.Data.Common.DbDataAdapter.Fill%2A>方法會從使用 SELECT 陳述式指定由相關聯的資料來源擷取資料列<xref:System.Data.IDbDataAdapter.SelectCommand%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-212">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method retrieves rows from the data source using the SELECT statement specified by an associated <xref:System.Data.IDbDataAdapter.SelectCommand%2A> property.</span></span> <span data-ttu-id="e6b9e-213">SELECT 陳述式相關聯的連接物件必須有效，但它不需要開啟。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-213">The connection object associated with the SELECT statement must be valid, but it does not need to be open.</span></span> <span data-ttu-id="e6b9e-214">如果連接已關閉之前<xref:System.Data.Common.DbDataAdapter.Fill%2A>是呼叫，它會開啟擷取資料，然後關閉。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-214">If the connection is closed before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it is opened to retrieve data, then closed.</span></span> <span data-ttu-id="e6b9e-215">如果連接為開啟之前<xref:System.Data.Common.DbDataAdapter.Fill%2A>是呼叫，它會保持開啟狀態。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-215">If the connection is open before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="e6b9e-216"><xref:System.Data.Common.DbDataAdapter.Fill%2A>作業接著會將資料列加入到目的地<xref:System.Data.DataTable>中的物件<xref:System.Data.DataSet>、 建立<xref:System.Data.DataTable>如果它們尚不存在的物件。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-216">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> operation then adds the rows to destination <xref:System.Data.DataTable> objects in the <xref:System.Data.DataSet>, creating the <xref:System.Data.DataTable> objects if they do not already exist.</span></span> <span data-ttu-id="e6b9e-217">建立時<xref:System.Data.DataTable>物件<xref:System.Data.Common.DbDataAdapter.Fill%2A>作業通常會建立只有資料行名稱中繼資料。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-217">When creating <xref:System.Data.DataTable> objects, the <xref:System.Data.Common.DbDataAdapter.Fill%2A> operation normally creates only column name metadata.</span></span> <span data-ttu-id="e6b9e-218">不過，如果<xref:System.Data.IDataAdapter.MissingSchemaAction%2A>屬性設定為`AddWithKey`，也會建立適當的主索引鍵和條件約束。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-218">However, if the <xref:System.Data.IDataAdapter.MissingSchemaAction%2A> property is set to `AddWithKey`, appropriate primary keys and constraints are also created.</span></span>  
  
 <span data-ttu-id="e6b9e-219">如果<xref:System.Data.Common.DbDataAdapter>遇到重複的資料行在填入<xref:System.Data.DataTable>，它會產生後續的資料行，並使用模式的名稱"*columnname*1"，"*columnname*2"，"*columnname*3"等等。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-219">If the <xref:System.Data.Common.DbDataAdapter> encounters duplicate columns while populating a <xref:System.Data.DataTable>, it generates names for the subsequent columns, using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="e6b9e-220">如果內送資料中包含未命名資料行，它們會放置於<xref:System.Data.DataSet>根據模式"Column1"、"Column2"，等等。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-220">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span> <span data-ttu-id="e6b9e-221">當多個結果集加入至<xref:System.Data.DataSet>放置於個別的資料表中每個結果集。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-221">When multiple result sets are added to the <xref:System.Data.DataSet> each result set is placed in a separate table.</span></span>  
  
 <span data-ttu-id="e6b9e-222">多載<xref:System.Data.Common.DbDataAdapter.Fill%2A>採用`DataTable`如參數只會取得第一個結果。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-222">The overload of <xref:System.Data.Common.DbDataAdapter.Fill%2A> that takes `DataTable` as a parameter only obtains the first result.</span></span> <span data-ttu-id="e6b9e-223">使用的多載<xref:System.Data.Common.DbDataAdapter.Fill%2A>採用`DataSet`做為參數來取得多個結果。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-223">Use an overload of <xref:System.Data.Common.DbDataAdapter.Fill%2A> that takes `DataSet` as a parameter to obtain multiple results.</span></span>  
  
 <span data-ttu-id="e6b9e-224"><xref:System.Data.Common.DbDataAdapter.Fill%2A>方法支援案例其中<xref:System.Data.DataSet>包含多個<xref:System.Data.DataTable>名稱只有大小寫不同的物件。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-224">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method supports scenarios where the <xref:System.Data.DataSet> contains multiple <xref:System.Data.DataTable> objects whose names differ only by case.</span></span> <span data-ttu-id="e6b9e-225">在這種情況下，<xref:System.Data.Common.DbDataAdapter.Fill%2A>執行區分大小寫的比較，來尋找對應的資料表，並建立新的資料表，如果沒有完全相符項目存在。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-225">In such situations, <xref:System.Data.Common.DbDataAdapter.Fill%2A> performs a case-sensitive comparison to find the corresponding table, and creates a new table if no exact match exists.</span></span> <span data-ttu-id="e6b9e-226">下列 C# 程式碼說明這個行為。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-226">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
 dataset.Tables.Add("aaa");  
 dataset.Tables.Add("AAA");  
 adapter.Fill(dataset, "aaa"); // Fills "aaa", which already exists in the DataSet.  
    adapter.Fill(dataset, "Aaa"); // Adds a new table called "Aaa".  
```  
  
 <span data-ttu-id="e6b9e-227">如果<xref:System.Data.Common.DbDataAdapter.Fill%2A>稱為和<xref:System.Data.DataSet>只包含<xref:System.Data.DataTable>名稱只有大小寫不同的<xref:System.Data.DataTable>會更新。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-227">If <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called and the <xref:System.Data.DataSet> contains only one <xref:System.Data.DataTable> whose name differs only by case, that <xref:System.Data.DataTable> is updated.</span></span> <span data-ttu-id="e6b9e-228">在此案例中，這個比較是不區分大小寫。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-228">In this scenario, the comparison is case insensitive.</span></span> <span data-ttu-id="e6b9e-229">下列 C# 程式碼說明這個行為。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-229">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
 dataset.Tables.Add("aaa");  
    adapter.Fill(dataset, "AAA"); // Fills table "aaa" because only one similarly named table is in the DataSet.  
```  
  
 <span data-ttu-id="e6b9e-230">您可以使用<xref:System.Data.Common.DbDataAdapter.Fill%2A>上多次相同的方法<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-230">You can use the <xref:System.Data.Common.DbDataAdapter.Fill%2A> method multiple times on the same <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="e6b9e-231">如果主索引鍵存在，內送資料列會合併具有相符的資料列已經存在。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-231">If a primary key exists, incoming rows are merged with matching rows that already exist.</span></span> <span data-ttu-id="e6b9e-232">如果沒有主索引鍵存在，將內送資料列附加至<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-232">If no primary key exists, incoming rows are appended to the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="e6b9e-233">如果 `SelectCommand` 傳回 OUTER JOIN 的結果，則 `DataAdapter` 便不會為產生的 <xref:System.Data.DataTable.PrimaryKey%2A> 設定 <xref:System.Data.DataTable> 值。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-233">If the `SelectCommand` returns the results of an OUTER JOIN, the `DataAdapter` does not set a <xref:System.Data.DataTable.PrimaryKey%2A> value for the resulting <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="e6b9e-234">您必須明確定義主索引鍵，以確保正確解析重複的資料列。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-234">You must explicitly define the primary key to ensure that duplicate rows are resolved correctly.</span></span> <span data-ttu-id="e6b9e-235">如需詳細資訊，請參閱[定義主索引鍵](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md)。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-235">For more information, see [Defining Primary Keys](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e6b9e-236">處理批次傳回多個結果，實作的 SQL 陳述式時<xref:System.Data.Common.DbDataAdapter.Fill%2A>和<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>對於.NET Framework 資料提供者擷取結構描述資訊，只有第一個結果。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-236">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.Fill%2A> and <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for a .NET Framework data provider retrieves schema information for only the first result.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e6b9e-237">來源資料表無效。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-237">The source table is invalid.</span></span></exception>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="e6b9e-238">這個多載<see cref="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)" />被保護的設計為使用.NET Framework 資料提供者方法。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-238">This overload of the <see cref="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)" /> method is protected and is designed for use by a .NET Framework data provider.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="public int Fill (System.Data.DataSet dataSet, string srcTable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Fill(class System.Data.DataSet dataSet, string srcTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Fill(System::Data::DataSet ^ dataSet, System::String ^ srcTable);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
        <Parameter Name="srcTable" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dataSet"><span data-ttu-id="e6b9e-239">要填入資料錄和結構描述 (如果必要的話) 的 <see cref="T:System.Data.DataSet" />。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-239">A <see cref="T:System.Data.DataSet" /> to fill with records and, if necessary, schema.</span></span></param>
        <param name="srcTable"><span data-ttu-id="e6b9e-240">用於資料表對應的來源資料表名稱。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-240">The name of the source table to use for table mapping.</span></span></param>
        <summary><span data-ttu-id="e6b9e-241">使用 <see cref="T:System.Data.DataSet" /> 和 <see cref="T:System.Data.DataSet" /> 名稱，加入或重新整理 <see cref="T:System.Data.DataTable" /> 中的資料列，以符合那些在資料來源中的資料列。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-241">Adds or refreshes rows in the <see cref="T:System.Data.DataSet" /> to match those in the data source using the <see cref="T:System.Data.DataSet" /> and <see cref="T:System.Data.DataTable" /> names.</span></span></summary>
        <returns><span data-ttu-id="e6b9e-242">成功加入至 <see cref="T:System.Data.DataSet" /> 或在其中重新整理的資料列數目。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-242">The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataSet" />.</span></span> <span data-ttu-id="e6b9e-243">這不包含被不傳回資料列之陳述式所影響的資料列。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-243">This does not include rows affected by statements that do not return rows.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6b9e-244"><xref:System.Data.Common.DbDataAdapter.Fill%2A>方法會從使用 SELECT 陳述式的資料來源擷取資料。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-244">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method retrieves the data from the data source using a SELECT statement.</span></span> <span data-ttu-id="e6b9e-245"><xref:System.Data.IDbConnection> Select 命令相關聯的物件必須有效，但它不需要開啟。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-245">The <xref:System.Data.IDbConnection> object associated with the select command must be valid, but it does not need to be open.</span></span> <span data-ttu-id="e6b9e-246">如果<xref:System.Data.IDbConnection>前已關閉<xref:System.Data.Common.DbDataAdapter.Fill%2A>是呼叫，它會開啟擷取資料，然後關閉。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-246">If the <xref:System.Data.IDbConnection> is closed before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it is opened to retrieve data, then closed.</span></span> <span data-ttu-id="e6b9e-247">如果連接為開啟之前<xref:System.Data.Common.DbDataAdapter.Fill%2A>是呼叫，它會保持開啟狀態。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-247">If the connection is open before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="e6b9e-248">如果命令未傳回任何資料列，將資料表加入至<xref:System.Data.DataSet>，並會引發任何例外狀況。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-248">If a command does not return any rows, no tables are added to the <xref:System.Data.DataSet>, and no exception is raised.</span></span>  
  
 <span data-ttu-id="e6b9e-249">如果<xref:System.Data.Common.DbDataAdapter>物件遇到重複的資料行在填入<xref:System.Data.DataTable>，它會產生後續的資料行，並使用模式 」 columnname1"、"columnname2"、"columnname3 」 和等等的名稱。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-249">If the <xref:System.Data.Common.DbDataAdapter> object encounters duplicate columns while populating a <xref:System.Data.DataTable>, it will generate names for the subsequent columns, using the pattern "columnname1", "columnname2", "columnname3", and so on.</span></span> <span data-ttu-id="e6b9e-250">如果內送資料中包含未命名資料行，它們會放置於<xref:System.Data.DataSet>根據模式"Column1"、"Column2"，等等。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-250">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span>  
  
 <span data-ttu-id="e6b9e-251">當指定的查詢傳回多個結果時，每個結果集被放在個別的資料表。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-251">When the query specified returns multiple results, each result set is placed in a separate table.</span></span> <span data-ttu-id="e6b9e-252">其他結果集的命名方式是附加至指定的資料表名稱 （例如，"Table"、"Table1"、"Table2"等等） 的整數值。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-252">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on).</span></span> <span data-ttu-id="e6b9e-253">不會建立資料表查詢不會傳回資料列，如果您要處理插入查詢後面的 select 查詢，因為建立選取查詢的資料表就會命名為"Table"，因為它是建立的第一個資料表。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-253">Since no table is created for a query that does not return rows, if you were to process an insert query followed by a select query, the table created for the select query would be named "Table", because it is the first table created.</span></span> <span data-ttu-id="e6b9e-254">使用資料行和資料表名稱的應用程式應確保這些命名模式衝突不會發生。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-254">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="e6b9e-255"><xref:System.Data.Common.DbDataAdapter.Fill%2A>方法支援案例其中<xref:System.Data.DataSet>包含多個<xref:System.Data.DataTable>名稱只有大小寫不同的物件。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-255">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method supports scenarios where the <xref:System.Data.DataSet> contains multiple <xref:System.Data.DataTable> objects whose names differ only by case.</span></span> <span data-ttu-id="e6b9e-256">在這種情況下，<xref:System.Data.Common.DbDataAdapter.Fill%2A>執行區分大小寫的比較，來尋找對應的資料表，並建立新的資料表，如果沒有完全相符項目存在。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-256">In such situations, <xref:System.Data.Common.DbDataAdapter.Fill%2A> performs a case-sensitive comparison to find the corresponding table, and creates a new table if no exact match exists.</span></span> <span data-ttu-id="e6b9e-257">下列 C# 程式碼說明這個行為。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-257">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
dataset.Tables.Add("AAA");  
adapter.Fill(dataset, "aaa"); // Fills "aaa", which already exists in the DataSet.  
adapter.Fill(dataset, "Aaa"); // Adds a new table called "Aaa".  
```  
  
 <span data-ttu-id="e6b9e-258">如果<xref:System.Data.Common.DbDataAdapter.Fill%2A>稱為和<xref:System.Data.DataSet>只包含<xref:System.Data.DataTable>名稱只有大小寫不同的<xref:System.Data.DataTable>會更新。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-258">If <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called and the <xref:System.Data.DataSet> contains only one <xref:System.Data.DataTable> whose name differs only by case, that <xref:System.Data.DataTable> is updated.</span></span> <span data-ttu-id="e6b9e-259">在此案例中，這個比較是不區分大小寫。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-259">In this scenario, the comparison is case insensitive.</span></span> <span data-ttu-id="e6b9e-260">下列 C# 程式碼說明這個行為。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-260">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
adapter.Fill(dataset, "AAA"); // Fills table "aaa" because only one similarly named table is in the DataSet.  
```  
  
 <span data-ttu-id="e6b9e-261">如果錯誤或例外狀況時發生填入資料的資料表，在發生錯誤之前所加入的資料列會保留在資料的資料表。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-261">If an error or an exception is encountered while populating the data tables, rows added prior to the occurrence of the error remain in the data tables.</span></span> <span data-ttu-id="e6b9e-262">已中止運算的餘數。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-262">The remainder of the operation is aborted.</span></span>  
  
 <span data-ttu-id="e6b9e-263">當 SELECT 陳述式用來填入<xref:System.Data.DataSet>會傳回多個結果，例如批次 SQL 陳述式，可注意下列事項：</span><span class="sxs-lookup"><span data-stu-id="e6b9e-263">When the SELECT statement used to populate the <xref:System.Data.DataSet> returns multiple results, such as a batch SQL statement, be aware of the following:</span></span>  
  
-   <span data-ttu-id="e6b9e-264">如果其中一個結果包含錯誤時，會略過所有後續的結果，且未新增到<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-264">If one of the results contains an error, all subsequent results are skipped and not added to the <xref:System.Data.DataSet>.</span></span>  
  
 <span data-ttu-id="e6b9e-265">當使用後續<xref:System.Data.Common.DbDataAdapter.Fill%2A>對更新的內容呼叫<xref:System.Data.DataSet>，必須符合兩個條件：</span><span class="sxs-lookup"><span data-stu-id="e6b9e-265">When using subsequent <xref:System.Data.Common.DbDataAdapter.Fill%2A> calls to refresh the contents of the <xref:System.Data.DataSet>, two conditions must be met:</span></span>  
  
1.  <span data-ttu-id="e6b9e-266">SQL 陳述式應該符合最初用來填入<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-266">The SQL statement should match the one initially used to populate the <xref:System.Data.DataSet>.</span></span>  
  
2.  <span data-ttu-id="e6b9e-267">**金鑰**必須存在的資料行資訊。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-267">The **Key** column information must be present.</span></span> <span data-ttu-id="e6b9e-268">如果主索引鍵資訊存在時，任何重複的資料列和一致，而且只能出現一次在<xref:System.Data.DataTable>對應於<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-268">If primary key information is present, any duplicate rows are reconciled and only appear once in the <xref:System.Data.DataTable> that corresponds to the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="e6b9e-269">主索引鍵資訊可能會設定透過<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>，藉由指定<xref:System.Data.DataTable.PrimaryKey%2A>屬性<xref:System.Data.DataTable>，或藉由設定<xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>屬性`AddWithKey`。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-269">Primary key information may be set either through <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, by specifying the <xref:System.Data.DataTable.PrimaryKey%2A> property of the <xref:System.Data.DataTable>, or by setting the <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> property to `AddWithKey`.</span></span>  
  
 <span data-ttu-id="e6b9e-270">如果 `SelectCommand` 傳回 OUTER JOIN 的結果，則 `DataAdapter` 便不會為產生的 <xref:System.Data.DataTable.PrimaryKey%2A> 設定 <xref:System.Data.DataTable> 值。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-270">If the `SelectCommand` returns the results of an OUTER JOIN, the `DataAdapter` does not set a <xref:System.Data.DataTable.PrimaryKey%2A> value for the resulting <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="e6b9e-271">您必須明確定義主索引鍵，以確保正確解析重複的資料列。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-271">You must explicitly define the primary key to ensure that duplicate rows are resolved correctly.</span></span> <span data-ttu-id="e6b9e-272">如需詳細資訊，請參閱[定義主索引鍵](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md)。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-272">For more information, see [Defining Primary Keys](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e6b9e-273">處理批次傳回多個結果，實作的 SQL 陳述式時<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>的.NET Framework Data Provider for OLE DB 擷取，只有第一個結果的結構描述資訊。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-273">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</span></span> <span data-ttu-id="e6b9e-274">若要擷取多個結果的結構描述資訊，請使用<xref:System.Data.Common.DbDataAdapter.Fill%2A>與<xref:System.Data.MissingSchemaAction>設`AddWithKey`。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-274">To retrieve schema information for multiple results, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> with the <xref:System.Data.MissingSchemaAction> set to `AddWithKey`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e6b9e-275">下列範例會使用衍生的類別， <xref:System.Data.OleDb.OleDbDataAdapter>，以填滿<xref:System.Data.DataSet>從 categories 資料表的資料列。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-275">The following example uses the derived class, <xref:System.Data.OleDb.OleDbDataAdapter>, to fill a <xref:System.Data.DataSet> with rows from the categories table.</span></span> <span data-ttu-id="e6b9e-276">這個範例假設您已建立<xref:System.Data.OleDb.OleDbDataAdapter>和<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-276">This example assumes that you have created an <xref:System.Data.OleDb.OleDbDataAdapter> and a <xref:System.Data.DataSet>.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.Fill2 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Fill2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.Fill2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Fill2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.SystemException"><span data-ttu-id="e6b9e-277">來源資料表無效。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-277">The source table is invalid.</span></span></exception>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="e6b9e-278">在覆寫<see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" />在衍生類別中，請務必呼叫基底類別的<see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" />方法。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-278">When overriding <see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /> in a derived class, be sure to call the base class's <see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /> method.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="protected virtual int Fill (System.Data.DataTable dataTable, System.Data.IDbCommand command, System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 Fill(class System.Data.DataTable dataTable, class System.Data.IDbCommand command, valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable,System.Data.IDbCommand,System.Data.CommandBehavior)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int Fill(System::Data::DataTable ^ dataTable, System::Data::IDbCommand ^ command, System::Data::CommandBehavior behavior);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataTable" Type="System.Data.DataTable" />
        <Parameter Name="command" Type="System.Data.IDbCommand" />
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" />
      </Parameters>
      <Docs>
        <param name="dataTable"><span data-ttu-id="e6b9e-279">要填入資料錄和結構描述 (如果必要的話) 的 <see cref="T:System.Data.DataTable" />。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-279">A <see cref="T:System.Data.DataTable" /> to fill with records and, if necessary, schema.</span></span></param>
        <param name="command"><span data-ttu-id="e6b9e-280">用來從資料來源擷取資料列的 SQL SELECT 陳述式。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-280">The SQL SELECT statement used to retrieve rows from the data source.</span></span></param>
        <param name="behavior"><span data-ttu-id="e6b9e-281">其中一個 <see cref="T:System.Data.CommandBehavior" /> 值。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-281">One of the <see cref="T:System.Data.CommandBehavior" /> values.</span></span></param>
        <summary><span data-ttu-id="e6b9e-282">使用指定的 <see cref="T:System.Data.DataTable" />、<see cref="T:System.Data.DataTable" /> 和 <see cref="T:System.Data.IDbCommand" />，加入或重新整理 <see cref="T:System.Data.CommandBehavior" /> 中的資料列，以符合那些在資料來源中的資料列。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-282">Adds or refreshes rows in a <see cref="T:System.Data.DataTable" /> to match those in the data source using the specified <see cref="T:System.Data.DataTable" />, <see cref="T:System.Data.IDbCommand" /> and <see cref="T:System.Data.CommandBehavior" />.</span></span></summary>
        <returns><span data-ttu-id="e6b9e-283">成功加入至 <see cref="T:System.Data.DataTable" /> 或在其中重新整理的資料列數目。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-283">The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataTable" />.</span></span> <span data-ttu-id="e6b9e-284">這不包含被不傳回資料列之陳述式所影響的資料列。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-284">This does not include rows affected by statements that do not return rows.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6b9e-285"><xref:System.Data.Common.DbDataAdapter.Fill%2A>方法會從使用 SELECT 陳述式指定由相關聯的資料來源擷取資料列<xref:System.Data.IDbDataAdapter.SelectCommand%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-285">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method retrieves rows from the data source using the SELECT statement specified by an associated <xref:System.Data.IDbDataAdapter.SelectCommand%2A> property.</span></span> <span data-ttu-id="e6b9e-286">SELECT 陳述式相關聯的連接物件必須有效，但它不需要開啟。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-286">The connection object associated with the SELECT statement must be valid, but it does not need to be open.</span></span> <span data-ttu-id="e6b9e-287">如果連接已關閉之前<xref:System.Data.Common.DbDataAdapter.Fill%2A>是呼叫，它會開啟擷取資料並關閉。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-287">If the connection is closed before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it is opened to retrieve data and then closed.</span></span> <span data-ttu-id="e6b9e-288">如果連接為開啟之前<xref:System.Data.Common.DbDataAdapter.Fill%2A>是呼叫，它會保持開啟狀態。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-288">If the connection is open before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="e6b9e-289"><xref:System.Data.Common.DbDataAdapter.Fill%2A>作業接著會將資料列加入到指定的目的地<xref:System.Data.DataTable>物件存放至<xref:System.Data.DataSet>、 建立<xref:System.Data.DataTable>如果它不存在的物件。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-289">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> operation then adds the rows to the specified destination <xref:System.Data.DataTable> object in the <xref:System.Data.DataSet>, creating the <xref:System.Data.DataTable> object if it does not already exist.</span></span> <span data-ttu-id="e6b9e-290">建立時<xref:System.Data.DataTable>物件<xref:System.Data.Common.DbDataAdapter.Fill%2A>作業通常會建立只有資料行名稱中繼資料。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-290">When creating a <xref:System.Data.DataTable> object, the <xref:System.Data.Common.DbDataAdapter.Fill%2A> operation normally creates only column name metadata.</span></span> <span data-ttu-id="e6b9e-291">不過，如果<xref:System.Data.IDataAdapter.MissingSchemaAction%2A>屬性設定為`AddWithKey`，也會建立適當的主索引鍵和條件約束。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-291">However, if the <xref:System.Data.IDataAdapter.MissingSchemaAction%2A> property is set to `AddWithKey`, appropriate primary keys and constraints are also created.</span></span>  
  
 <span data-ttu-id="e6b9e-292">如果<xref:System.Data.Common.DbDataAdapter>物件遇到重複的資料行在填入<xref:System.Data.DataTable>，它會產生後續的資料行，並使用模式的名稱"*columnname*1"，"*columnname*2"，"*columnname*3 」，依此類推。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-292">If the <xref:System.Data.Common.DbDataAdapter> object encounters duplicate columns while populating a <xref:System.Data.DataTable>, it will generate names for the subsequent columns, using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="e6b9e-293">如果內送資料中包含未命名資料行，它們會放置於<xref:System.Data.DataSet>根據模式"Column1"、"Column2"，等等。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-293">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span>  
  
 <span data-ttu-id="e6b9e-294">多載<xref:System.Data.Common.DbDataAdapter.Fill%2A>採用`DataTable`如參數只會取得第一個結果。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-294">The overload of <xref:System.Data.Common.DbDataAdapter.Fill%2A> that takes `DataTable` as a parameter only obtains the first result.</span></span> <span data-ttu-id="e6b9e-295">使用的多載<xref:System.Data.Common.DbDataAdapter.Fill%2A>採用`DataSet`做為參數來取得多個結果。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-295">Use an overload of <xref:System.Data.Common.DbDataAdapter.Fill%2A> that takes `DataSet` as a parameter to obtain multiple results.</span></span>  
  
 <span data-ttu-id="e6b9e-296">您可以使用<xref:System.Data.Common.DbDataAdapter.Fill%2A>上多次相同的方法<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-296">You can use the <xref:System.Data.Common.DbDataAdapter.Fill%2A> method multiple times on the same <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="e6b9e-297">如果主索引鍵存在，內送資料列會合併具有相符的資料列已經存在。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-297">If a primary key exists, incoming rows are merged with matching rows that already exist.</span></span> <span data-ttu-id="e6b9e-298">如果沒有主索引鍵存在，將內送資料列附加至<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-298">If no primary key exists, incoming rows are appended to the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="e6b9e-299">如果 `SelectCommand` 傳回 OUTER JOIN 的結果，則 `DataAdapter` 便不會為產生的 <xref:System.Data.DataTable.PrimaryKey%2A> 設定 <xref:System.Data.DataTable> 值。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-299">If the `SelectCommand` returns the results of an OUTER JOIN, the `DataAdapter` does not set a <xref:System.Data.DataTable.PrimaryKey%2A> value for the resulting <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="e6b9e-300">您必須明確定義主索引鍵，以確保正確解析重複的資料列。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-300">You must explicitly define the primary key to ensure that duplicate rows are resolved correctly.</span></span> <span data-ttu-id="e6b9e-301">如需詳細資訊，請參閱[定義主索引鍵](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md)。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-301">For more information, see [Defining Primary Keys](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e6b9e-302">處理批次傳回多個結果，實作的 SQL 陳述式時<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>的.NET Framework Data Provider for OLE DB 擷取，只有第一個結果的結構描述資訊。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-302">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</span></span> <span data-ttu-id="e6b9e-303">若要擷取多個結果的結構描述資訊，請使用<xref:System.Data.Common.DbDataAdapter.Fill%2A>與<xref:System.Data.MissingSchemaAction>設`AddWithKey`。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-303">To retrieve schema information for multiple results, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> with the <xref:System.Data.MissingSchemaAction> set to `AddWithKey`.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="e6b9e-304">這個多載<see cref="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)" />被保護的設計為使用.NET Framework 資料提供者方法。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-304">This overload of the <see cref="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)" /> method is protected and is designed for use by a .NET Framework data provider.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="public int Fill (int startRecord, int maxRecords, params System.Data.DataTable[] dataTables);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Fill(int32 startRecord, int32 maxRecords, class System.Data.DataTable[] dataTables) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Fill(System.Int32,System.Int32,System.Data.DataTable[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Fill (startRecord As Integer, maxRecords As Integer, ParamArray dataTables As DataTable()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Fill(int startRecord, int maxRecords, ... cli::array &lt;System::Data::DataTable ^&gt; ^ dataTables);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startRecord" Type="System.Int32" />
        <Parameter Name="maxRecords" Type="System.Int32" />
        <Parameter Name="dataTables" Type="System.Data.DataTable[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="startRecord"><span data-ttu-id="e6b9e-305">要起始之以零為起始的資料錄編號。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-305">The zero-based record number to start with.</span></span></param>
        <param name="maxRecords"><span data-ttu-id="e6b9e-306">要擷取之資料錄的最大數目。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-306">The maximum number of records to retrieve.</span></span></param>
        <param name="dataTables"><span data-ttu-id="e6b9e-307">要從資料來源填入的 <see cref="T:System.Data.DataTable" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-307">The <see cref="T:System.Data.DataTable" /> objects to fill from the data source.</span></span></param>
        <summary><span data-ttu-id="e6b9e-308">從指定的記錄開始擷取直到指定的記錄最大數目為止，加入或重新整理 <see cref="T:System.Data.DataTable" /> 中的資料列，以符合那些在資料來源中的資料列。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-308">Adds or refreshes rows in a <see cref="T:System.Data.DataTable" /> to match those in the data source starting at the specified record and retrieving up to the specified maximum number of records.</span></span></summary>
        <returns><span data-ttu-id="e6b9e-309">成功加入至 <see cref="T:System.Data.DataTable" /> 或在其中重新整理的資料列數目。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-309">The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataTable" />.</span></span> <span data-ttu-id="e6b9e-310">這個值不包含受未傳回資料列之陳述式所影響的資料列。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-310">This value does not include rows affected by statements that do not return rows.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6b9e-311"><xref:System.Data.Common.DataAdapter.Fill%2A>方法會從使用 SELECT 陳述式指定由相關聯的資料來源擷取資料列<xref:System.Data.IDbDataAdapter.SelectCommand%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-311">The <xref:System.Data.Common.DataAdapter.Fill%2A> method retrieves rows from the data source using the SELECT statement specified by an associated <xref:System.Data.IDbDataAdapter.SelectCommand%2A> property.</span></span> <span data-ttu-id="e6b9e-312">SELECT 陳述式相關聯的連接物件必須有效，但它不需要開啟。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-312">The connection object associated with the SELECT statement must be valid, but it does not need to be open.</span></span> <span data-ttu-id="e6b9e-313">如果連接已關閉之前<xref:System.Data.Common.DataAdapter.Fill%2A>是呼叫，來擷取資料，開啟和關閉然後。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-313">If the connection is closed before <xref:System.Data.Common.DataAdapter.Fill%2A> is called, it is opened to retrieve data, and then it is closed.</span></span> <span data-ttu-id="e6b9e-314">如果連接為開啟之前<xref:System.Data.Common.DataAdapter.Fill%2A>是呼叫，它會保持開啟狀態。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-314">If the connection is open before <xref:System.Data.Common.DataAdapter.Fill%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="e6b9e-315"><xref:System.Data.Common.DataAdapter.Fill%2A>作業接著會將資料列加入到目的地<xref:System.Data.DataTable>中的物件<xref:System.Data.DataSet>、 建立<xref:System.Data.DataTable>如果它們尚不存在的物件。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-315">The <xref:System.Data.Common.DataAdapter.Fill%2A> operation then adds the rows to destination <xref:System.Data.DataTable> objects in the <xref:System.Data.DataSet>, creating the <xref:System.Data.DataTable> objects if they do not already exist.</span></span> <span data-ttu-id="e6b9e-316">建立時<xref:System.Data.DataTable>物件<xref:System.Data.Common.DataAdapter.Fill%2A>作業通常會建立只有資料行名稱中繼資料。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-316">When creating <xref:System.Data.DataTable> objects, the <xref:System.Data.Common.DataAdapter.Fill%2A> operation normally creates only column name metadata.</span></span> <span data-ttu-id="e6b9e-317">不過，如果<xref:System.Data.IDataAdapter.MissingSchemaAction%2A>屬性設定為`AddWithKey`，也會建立適當的主索引鍵和條件約束。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-317">However, if the <xref:System.Data.IDataAdapter.MissingSchemaAction%2A> property is set to `AddWithKey`, appropriate primary keys and constraints are also created.</span></span>  
  
 <span data-ttu-id="e6b9e-318">如果 `SelectCommand` 傳回 OUTER JOIN 的結果，則 `DataAdapter` 便不會為產生的 <xref:System.Data.DataTable.PrimaryKey%2A> 設定 <xref:System.Data.DataTable> 值。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-318">If the `SelectCommand` returns the results of an OUTER JOIN, the `DataAdapter` does not set a <xref:System.Data.DataTable.PrimaryKey%2A> value for the resulting <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="e6b9e-319">您必須明確定義主索引鍵，以確保正確解析重複的資料列。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-319">You must explicitly define the primary key to ensure that duplicate rows are resolved correctly.</span></span> <span data-ttu-id="e6b9e-320">如需詳細資訊，請參閱[定義主索引鍵](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md)。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-320">For more information, see [Defining Primary Keys](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md).</span></span>  
  
 <span data-ttu-id="e6b9e-321">如果資料配接器遇到重複的資料行在填入<xref:System.Data.DataTable>，它會產生後續的資料行，並使用模式 」 columnname1"、"columnname2"、"columnname3 」 和等等的名稱。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-321">If the data adapter encounters duplicate columns while populating a <xref:System.Data.DataTable>, it generates names for the subsequent columns, using the pattern "columnname1", "columnname2", "columnname3", and so on.</span></span> <span data-ttu-id="e6b9e-322">如果內送資料中包含未命名資料行，它們會放置於<xref:System.Data.DataSet>根據模式"Column1"、"Column2"，等等。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-322">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span> <span data-ttu-id="e6b9e-323">當多個結果集加入至<xref:System.Data.DataSet>，每個結果集放在個別的資料表。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-323">When multiple result sets are added to the <xref:System.Data.DataSet>, each result set is placed in a separate table.</span></span> <span data-ttu-id="e6b9e-324">其他結果集的命名方式是附加至指定的資料表名稱 （例如，"Table"、"Table1"、"Table2"等等） 的整數值。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-324">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on).</span></span> <span data-ttu-id="e6b9e-325">使用資料行和資料表名稱的應用程式應確保這些命名模式衝突不會發生。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-325">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="e6b9e-326">當 SELECT 陳述式用來填入<xref:System.Data.DataSet>傳回多個結果，例如批次 SQL 陳述式中，如果其中一個結果包含錯誤，所有後續的結果會略過且未新增到<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-326">When the SELECT statement used to populate the <xref:System.Data.DataSet> returns multiple results, such as a batch SQL statements, if one of the results contains an error, all subsequent results are skipped and not added to the <xref:System.Data.DataSet>.</span></span>  
  
 <span data-ttu-id="e6b9e-327">您可以使用<xref:System.Data.Common.DataAdapter.Fill%2A>上多次相同的方法<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-327">You can use the <xref:System.Data.Common.DataAdapter.Fill%2A> method multiple times on the same <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="e6b9e-328">如果主索引鍵存在，內送資料列會合併具有相符的資料列已經存在。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-328">If a primary key exists, incoming rows are merged with matching rows that already exist.</span></span> <span data-ttu-id="e6b9e-329">如果沒有主索引鍵存在，將內送資料列附加至<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-329">If no primary key exists, incoming rows are appended to the <xref:System.Data.DataTable>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e6b9e-330">處理批次傳回多個結果，實作的 SQL 陳述式時<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>的.NET Framework Data Provider for OLE DB 擷取，只有第一個結果的結構描述資訊。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-330">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</span></span> <span data-ttu-id="e6b9e-331">若要擷取多個結果的結構描述資訊，請使用<xref:System.Data.Common.DbDataAdapter.Fill%2A>與<xref:System.Data.MissingSchemaAction>設`AddWithKey`。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-331">To retrieve schema information for multiple results, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> with the <xref:System.Data.MissingSchemaAction> set to `AddWithKey`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="public int Fill (System.Data.DataSet dataSet, int startRecord, int maxRecords, string srcTable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Fill(class System.Data.DataSet dataSet, int32 startRecord, int32 maxRecords, string srcTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Fill(System::Data::DataSet ^ dataSet, int startRecord, int maxRecords, System::String ^ srcTable);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
        <Parameter Name="startRecord" Type="System.Int32" />
        <Parameter Name="maxRecords" Type="System.Int32" />
        <Parameter Name="srcTable" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dataSet"><span data-ttu-id="e6b9e-332">要填入資料錄和結構描述 (如果必要的話) 的 <see cref="T:System.Data.DataSet" />。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-332">A <see cref="T:System.Data.DataSet" /> to fill with records and, if necessary, schema.</span></span></param>
        <param name="startRecord"><span data-ttu-id="e6b9e-333">要起始之以零為起始的資料錄編號。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-333">The zero-based record number to start with.</span></span></param>
        <param name="maxRecords"><span data-ttu-id="e6b9e-334">要擷取之資料錄的最大數目。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-334">The maximum number of records to retrieve.</span></span></param>
        <param name="srcTable"><span data-ttu-id="e6b9e-335">用於資料表對應的來源資料表名稱。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-335">The name of the source table to use for table mapping.</span></span></param>
        <summary><span data-ttu-id="e6b9e-336">使用 <see cref="T:System.Data.DataSet" /> 和 <see cref="T:System.Data.DataSet" /> 名稱，加入或重新整理 <see cref="T:System.Data.DataTable" /> 中指定範圍內的資料列，以符合那些在資料來源中的資料列。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-336">Adds or refreshes rows in a specified range in the <see cref="T:System.Data.DataSet" /> to match those in the data source using the <see cref="T:System.Data.DataSet" /> and <see cref="T:System.Data.DataTable" /> names.</span></span></summary>
        <returns><span data-ttu-id="e6b9e-337">成功加入至 <see cref="T:System.Data.DataSet" /> 或在其中重新整理的資料列數目。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-337">The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataSet" />.</span></span> <span data-ttu-id="e6b9e-338">這不包含被不傳回資料列之陳述式所影響的資料列。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-338">This does not include rows affected by statements that do not return rows.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6b9e-339">A `maxRecords` 0 的值取得開始記錄後，仍找到的所有記錄。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-339">A `maxRecords` value of 0 gets all records found after the start record.</span></span> <span data-ttu-id="e6b9e-340">如果`maxRecords`大於剩餘的資料列數目只會傳回其餘的資料列，並不會發出錯誤。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-340">If `maxRecords` is greater than the number of remaining rows, only the remaining rows are returned, and no error is issued.</span></span>  
  
 <span data-ttu-id="e6b9e-341">如果對應的 select 命令的陳述式傳回多個結果，<xref:System.Data.Common.DbDataAdapter.Fill%2A>只適用於`maxRecords`至第一個結果。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-341">If the corresponding select command is a statement returning multiple results, <xref:System.Data.Common.DbDataAdapter.Fill%2A> only applies `maxRecords` to the first result.</span></span>  
  
 <span data-ttu-id="e6b9e-342"><xref:System.Data.Common.DbDataAdapter.Fill%2A>方法會從使用 SELECT 陳述式的資料來源擷取資料。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-342">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method retrieves the data from the data source using a SELECT statement.</span></span> <span data-ttu-id="e6b9e-343"><xref:System.Data.IDbConnection> SELECT 陳述式相關聯的物件必須有效，但它不需要開啟。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-343">The <xref:System.Data.IDbConnection> object associated with the SELECT statement must be valid, but it does not need to be open.</span></span> <span data-ttu-id="e6b9e-344">如果<xref:System.Data.IDbConnection>前已關閉<xref:System.Data.Common.DbDataAdapter.Fill%2A>是呼叫，它會開啟擷取資料並關閉。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-344">If the <xref:System.Data.IDbConnection> is closed before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it is opened to retrieve data and then closed.</span></span> <span data-ttu-id="e6b9e-345">如果連接為開啟之前<xref:System.Data.Common.DbDataAdapter.Fill%2A>是呼叫，它會保持開啟狀態。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-345">If the connection is open before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="e6b9e-346">如果命令未傳回任何資料列，將資料表加入至<xref:System.Data.DataSet>，但會引發任何例外狀況。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-346">If a command does not return any rows, no tables are added to the <xref:System.Data.DataSet>, but no exception is raised.</span></span>  
  
 <span data-ttu-id="e6b9e-347">如果<xref:System.Data.Common.DbDataAdapter>物件遇到重複的資料行在填入<xref:System.Data.DataTable>，它會產生後續的資料行，並使用模式的名稱"*columnname*1"，"*columnname*2"，"*columnname*3 」，依此類推。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-347">If the <xref:System.Data.Common.DbDataAdapter> object encounters duplicate columns while populating a <xref:System.Data.DataTable>, it will generate names for the subsequent columns, using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="e6b9e-348">如果內送資料中包含未命名資料行，它們會放置於<xref:System.Data.DataSet>根據模式"Column1"、"Column2"，等等。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-348">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span>  
  
 <span data-ttu-id="e6b9e-349">當指定的查詢傳回多個結果時，每個結果集被放在個別的資料表。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-349">When the query specified returns multiple results, each result set is placed in a separate table.</span></span> <span data-ttu-id="e6b9e-350">其他結果集的命名方式是附加至指定的資料表名稱 （例如，"Table"、"Table1"、"Table2"等等） 的整數值。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-350">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on).</span></span> <span data-ttu-id="e6b9e-351">因為不會建立資料表查詢不會傳回資料列，如果您在處理 insert 查詢後面的 select 查詢，針對 select 查詢所建立的資料表是名為"Table"，因為它是建立的第一個資料表。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-351">Because no table is created for a query that does not return rows, if you process an insert query followed by a select query, the table created for the select query is named "Table", because it is the first table created.</span></span> <span data-ttu-id="e6b9e-352">使用資料行和資料表名稱的應用程式應確保這些命名模式衝突不會發生。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-352">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="e6b9e-353"><xref:System.Data.Common.DbDataAdapter.Fill%2A>方法支援案例其中<xref:System.Data.DataSet>包含多個<xref:System.Data.DataTable>名稱只有大小寫不同的物件。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-353">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method supports scenarios where the <xref:System.Data.DataSet> contains multiple <xref:System.Data.DataTable> objects whose names differ only by case.</span></span> <span data-ttu-id="e6b9e-354">在這種情況下，<xref:System.Data.Common.DbDataAdapter.Fill%2A>執行區分大小寫的比較，來尋找對應的資料表，並建立新的資料表，如果沒有完全相符項目存在。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-354">In such situations, <xref:System.Data.Common.DbDataAdapter.Fill%2A> performs a case-sensitive comparison to find the corresponding table, and creates a new table if no exact match exists.</span></span> <span data-ttu-id="e6b9e-355">下列 C# 程式碼說明這個行為。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-355">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
dataset.Tables.Add("AAA");  
adapter.Fill(dataset, "aaa"); // Fills "aaa", which already exists in the DataSet.  
adapter.Fill(dataset, "Aaa"); // Adds a new table called "Aaa".  
```  
  
 <span data-ttu-id="e6b9e-356">如果<xref:System.Data.Common.DbDataAdapter.Fill%2A>稱為和<xref:System.Data.DataSet>只包含<xref:System.Data.DataTable>名稱只有大小寫不同的<xref:System.Data.DataTable>會更新。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-356">If <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called and the <xref:System.Data.DataSet> contains only one <xref:System.Data.DataTable> whose name differs only by case, that <xref:System.Data.DataTable> is updated.</span></span> <span data-ttu-id="e6b9e-357">在此案例中，這個比較是不區分大小寫。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-357">In this scenario, the comparison is case insensitive.</span></span> <span data-ttu-id="e6b9e-358">下列 C# 程式碼說明這個行為。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-358">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
adapter.Fill(dataset, "AAA"); // Fills table "aaa" because only one similarly named table is in the DataSet.  
```  
  
 <span data-ttu-id="e6b9e-359">如果錯誤或例外狀況時發生填入資料的資料表，在發生錯誤之前所加入的資料列會保留在資料的資料表。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-359">If an error or an exception is encountered while populating the data tables, rows added prior to the occurrence of the error remain in the data tables.</span></span> <span data-ttu-id="e6b9e-360">已中止運算的餘數。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-360">The remainder of the operation is aborted.</span></span>  
  
 <span data-ttu-id="e6b9e-361">當 SELECT 陳述式用來填入<xref:System.Data.DataSet>傳回多個結果，例如批次 SQL 陳述式，可注意下列事項：</span><span class="sxs-lookup"><span data-stu-id="e6b9e-361">When the SELECT statement used to populate the <xref:System.Data.DataSet> returns multiple results, such as batch SQL statements, be aware of the following:</span></span>  
  
-   <span data-ttu-id="e6b9e-362">處理批次 SQL 陳述式，從多個結果時`maxRecords`只適用於第一個結果。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-362">When processing multiple results from a batch SQL statement, `maxRecords` only applies to the first result.</span></span> <span data-ttu-id="e6b9e-363">也適用於包含章節化的結果 (.NET Framework Data Provider for OLE DB 只) 的資料列。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-363">The same is true for rows containing chaptered results (.NET Framework Data Provider for OLE DB only).</span></span> <span data-ttu-id="e6b9e-364">最上層結果會受到`maxRecords`，但是所有的子資料列會加入。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-364">The top level result is limited by `maxRecords`, but all child rows are added.</span></span>  
  
-   <span data-ttu-id="e6b9e-365">如果其中一個結果包含錯誤時，會略過所有後續的結果，且未新增到<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-365">If one of the results contains an error, all subsequent results are skipped and not added to the <xref:System.Data.DataSet>.</span></span>  
  
 <span data-ttu-id="e6b9e-366">當使用後續<xref:System.Data.Common.DbDataAdapter.Fill%2A>對更新的內容呼叫<xref:System.Data.DataSet>，必須符合兩個條件：</span><span class="sxs-lookup"><span data-stu-id="e6b9e-366">When using subsequent <xref:System.Data.Common.DbDataAdapter.Fill%2A> calls to refresh the contents of the <xref:System.Data.DataSet>, two conditions must be met:</span></span>  
  
1.  <span data-ttu-id="e6b9e-367">SQL 陳述式應該符合最初用來填入<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-367">The SQL statement should match the one initially used to populate the <xref:System.Data.DataSet>.</span></span>  
  
2.  <span data-ttu-id="e6b9e-368">**金鑰**必須存在的資料行資訊。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-368">The **Key** column information must be present.</span></span>  
  
 <span data-ttu-id="e6b9e-369">如果主索引鍵資訊存在時，任何重複的資料列會調解並只能出現一次在<xref:System.Data.DataTable>對應於<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-369">If primary key information is present, any duplicate rows will be reconciled and only appear once in the <xref:System.Data.DataTable> that corresponds to the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="e6b9e-370">主索引鍵資訊可能會設定透過<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>，藉由指定<xref:System.Data.DataTable.PrimaryKey%2A>屬性<xref:System.Data.DataTable>，或藉由設定<xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>屬性`AddWithKey`。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-370">Primary key information may be set either through <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, by specifying the <xref:System.Data.DataTable.PrimaryKey%2A> property of the <xref:System.Data.DataTable>, or by setting the <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> property to `AddWithKey`.</span></span>  
  
 <span data-ttu-id="e6b9e-371">如果 `SelectCommand` 傳回 OUTER JOIN 的結果，則 `DataAdapter` 便不會為產生的 <xref:System.Data.DataTable.PrimaryKey%2A> 設定 <xref:System.Data.DataTable> 值。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-371">If the `SelectCommand` returns the results of an OUTER JOIN, the `DataAdapter` does not set a <xref:System.Data.DataTable.PrimaryKey%2A> value for the resulting <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="e6b9e-372">您必須明確定義主索引鍵，以確保正確解析重複的資料列。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-372">You must explicitly define the primary key to ensure that duplicate rows are resolved correctly.</span></span> <span data-ttu-id="e6b9e-373">如需詳細資訊，請參閱[定義主索引鍵](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md)。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-373">For more information, see [Defining Primary Keys](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e6b9e-374">處理批次傳回多個結果，實作的 SQL 陳述式時<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>的.NET Framework Data Provider for OLE DB 擷取，只有第一個結果的結構描述資訊。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-374">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</span></span> <span data-ttu-id="e6b9e-375">若要擷取多個結果的結構描述資訊，請使用<xref:System.Data.Common.DbDataAdapter.Fill%2A>與<xref:System.Data.MissingSchemaAction>設`AddWithKey`。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-375">To retrieve schema information for multiple results, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> with the <xref:System.Data.MissingSchemaAction> set to `AddWithKey`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e6b9e-376">`DataSet`不會包含在所指定的記錄數目超過`maxRecords`。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-376">The `DataSet` will not contain more than the number of records indicated by `maxRecords`.</span></span> <span data-ttu-id="e6b9e-377">不過，從伺服器仍會傳回查詢所產生的整個結果集。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-377">However, the entire result set generated by the query is still returned from the server.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e6b9e-378">下列範例會使用衍生的類別， <xref:System.Data.OleDb.OleDbDataAdapter>，以填滿<xref:System.Data.DataSet>具有 15 個資料列，從資料列 10，開始從**類別**資料表。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-378">The following example uses the derived class, <xref:System.Data.OleDb.OleDbDataAdapter>, to fill a <xref:System.Data.DataSet> with 15 rows, beginning at row 10, from the **Categories** table.</span></span> <span data-ttu-id="e6b9e-379">這個範例假設您已建立<xref:System.Data.OleDb.OleDbDataAdapter>和<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-379">This example assumes that you have created an <xref:System.Data.OleDb.OleDbDataAdapter> and a <xref:System.Data.DataSet>.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.Fill3 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Fill3 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.Fill3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Fill3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.SystemException"><span data-ttu-id="e6b9e-380"><see cref="T:System.Data.DataSet" /> 無效。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-380">The <see cref="T:System.Data.DataSet" /> is invalid.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e6b9e-381">來源資料表無效。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-381">The source table is invalid.</span></span>  
  
 <span data-ttu-id="e6b9e-382">-或-</span><span class="sxs-lookup"><span data-stu-id="e6b9e-382">-or-</span></span>  
  
 <span data-ttu-id="e6b9e-383">連接無效。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-383">The connection is invalid.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="e6b9e-384">找不到連線。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-384">The connection could not be found.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e6b9e-385"><paramref name="startRecord" /> 參數小於 0。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-385">The <paramref name="startRecord" /> parameter is less than 0.</span></span>  
  
 <span data-ttu-id="e6b9e-386">-或-</span><span class="sxs-lookup"><span data-stu-id="e6b9e-386">-or-</span></span>  
  
 <span data-ttu-id="e6b9e-387"><paramref name="maxRecords" /> 參數小於 0。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-387">The <paramref name="maxRecords" /> parameter is less than 0.</span></span></exception>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="e6b9e-388">在覆寫<see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" />在衍生類別中，請務必呼叫基底類別的<see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" />方法。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-388">When overriding <see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /> in a derived class, be sure to call the base class's <see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /> method.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="protected virtual int Fill (System.Data.DataTable[] dataTables, int startRecord, int maxRecords, System.Data.IDbCommand command, System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 Fill(class System.Data.DataTable[] dataTables, int32 startRecord, int32 maxRecords, class System.Data.IDbCommand command, valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable[],System.Int32,System.Int32,System.Data.IDbCommand,System.Data.CommandBehavior)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function Fill (dataTables As DataTable(), startRecord As Integer, maxRecords As Integer, command As IDbCommand, behavior As CommandBehavior) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int Fill(cli::array &lt;System::Data::DataTable ^&gt; ^ dataTables, int startRecord, int maxRecords, System::Data::IDbCommand ^ command, System::Data::CommandBehavior behavior);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataTables" Type="System.Data.DataTable[]" />
        <Parameter Name="startRecord" Type="System.Int32" />
        <Parameter Name="maxRecords" Type="System.Int32" />
        <Parameter Name="command" Type="System.Data.IDbCommand" />
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" />
      </Parameters>
      <Docs>
        <param name="dataTables"><span data-ttu-id="e6b9e-389">要從資料來源填入的 <see cref="T:System.Data.DataTable" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-389">The <see cref="T:System.Data.DataTable" /> objects to fill from the data source.</span></span></param>
        <param name="startRecord"><span data-ttu-id="e6b9e-390">要起始之以零為起始的資料錄編號。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-390">The zero-based record number to start with.</span></span></param>
        <param name="maxRecords"><span data-ttu-id="e6b9e-391">要擷取之資料錄的最大數目。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-391">The maximum number of records to retrieve.</span></span></param>
        <param name="command"><span data-ttu-id="e6b9e-392"><see cref="T:System.Data.IDbCommand" />，執行其以填入 <see cref="T:System.Data.DataTable" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-392">The <see cref="T:System.Data.IDbCommand" /> executed to fill the <see cref="T:System.Data.DataTable" /> objects.</span></span></param>
        <param name="behavior"><span data-ttu-id="e6b9e-393">其中一個 <see cref="T:System.Data.CommandBehavior" /> 值。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-393">One of the <see cref="T:System.Data.CommandBehavior" /> values.</span></span></param>
        <summary><span data-ttu-id="e6b9e-394">使用 <see cref="T:System.Data.DataSet" /> 和 <see cref="T:System.Data.DataSet" /> 名稱，加入或重新整理 <see cref="T:System.Data.DataTable" /> 中指定範圍內的資料列，以符合那些在資料來源中的資料列。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-394">Adds or refreshes rows in a specified range in the <see cref="T:System.Data.DataSet" /> to match those in the data source using the <see cref="T:System.Data.DataSet" /> and <see cref="T:System.Data.DataTable" /> names.</span></span></summary>
        <returns><span data-ttu-id="e6b9e-395">加入至資料的資料表 (Data Table) 或在其中重新整理的資料列數目。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-395">The number of rows added to or refreshed in the data tables.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6b9e-396">A `maxRecords` 0 的值取得開始記錄後，仍找到的所有記錄。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-396">A `maxRecords` value of 0 gets all records found after the start record.</span></span> <span data-ttu-id="e6b9e-397">如果`maxRecords`大於剩餘的資料列數目只會傳回其餘的資料列，不會發出錯誤。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-397">If `maxRecords` is greater than the number of remaining rows, only the remaining rows are returned and no error is issued.</span></span>  
  
 <span data-ttu-id="e6b9e-398"><xref:System.Data.Common.DbDataAdapter.Fill%2A>方法會從使用 SELECT 陳述式的資料來源擷取資料。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-398">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method retrieves the data from the data source using a SELECT statement.</span></span> <span data-ttu-id="e6b9e-399"><xref:System.Data.IDbConnection> SELECT 陳述式相關聯的物件必須有效，但它不需要開啟。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-399">The <xref:System.Data.IDbConnection> object associated with the SELECT statement must be valid, but it does not need to be open.</span></span> <span data-ttu-id="e6b9e-400">如果<xref:System.Data.IDbConnection>前已關閉<xref:System.Data.Common.DbDataAdapter.Fill%2A>是呼叫，它會開啟擷取資料，然後關閉。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-400">If the <xref:System.Data.IDbConnection> is closed before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it is opened to retrieve data, then closed.</span></span> <span data-ttu-id="e6b9e-401">如果連接為開啟之前<xref:System.Data.Common.DbDataAdapter.Fill%2A>是呼叫，它會保持開啟狀態。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-401">If the connection is open before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="e6b9e-402">如果命令未傳回任何資料列，將資料表加入至<xref:System.Data.DataSet>，但會引發任何例外狀況。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-402">If a command does not return any rows, no tables are added to the <xref:System.Data.DataSet>, but no exception is raised.</span></span>  
  
 <span data-ttu-id="e6b9e-403">如果<xref:System.Data.Common.DbDataAdapter>物件遇到重複的資料行在填入<xref:System.Data.DataTable>，它會產生後續的資料行，並使用模式的名稱"*columnname*1"，"*columnname*2"，"*columnname*3 」，依此類推。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-403">If the <xref:System.Data.Common.DbDataAdapter> object encounters duplicate columns while populating a <xref:System.Data.DataTable>, it will generate names for the subsequent columns, using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="e6b9e-404">如果內送資料中包含未命名資料行，它們會放置於<xref:System.Data.DataSet>根據模式"Column1"、"Column2"，等等。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-404">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span>  
  
 <span data-ttu-id="e6b9e-405">當指定的查詢傳回多個結果時，每個結果集被放在個別的資料表。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-405">When the query specified returns multiple results, each result set is placed in a separate table.</span></span> <span data-ttu-id="e6b9e-406">其他結果集的命名方式是附加至指定的資料表名稱 （例如，"Table"、"Table1"、"Table2"等等） 的整數值。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-406">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on).</span></span> <span data-ttu-id="e6b9e-407">不會建立資料表查詢不會傳回資料列，如果您要處理插入查詢後面的 select 查詢，因為建立選取查詢的資料表就會命名為"Table"，因為它是建立的第一個資料表。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-407">Since no table is created for a query that does not return rows, if you were to process an insert query followed by a select query, the table created for the select query would be named "Table", because it is the first table created.</span></span> <span data-ttu-id="e6b9e-408">使用資料行和資料表名稱的應用程式應確保這些命名模式衝突不會發生。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-408">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="e6b9e-409"><xref:System.Data.Common.DbDataAdapter.Fill%2A>方法支援案例其中<xref:System.Data.DataSet>包含多個<xref:System.Data.DataTable>名稱只有大小寫不同的物件。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-409">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method supports scenarios where the <xref:System.Data.DataSet> contains multiple <xref:System.Data.DataTable> objects whose names differ only by case.</span></span> <span data-ttu-id="e6b9e-410">在這種情況下，<xref:System.Data.Common.DbDataAdapter.Fill%2A>執行區分大小寫的比較，來尋找對應的資料表，並建立新的資料表，如果沒有完全相符項目存在。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-410">In such situations, <xref:System.Data.Common.DbDataAdapter.Fill%2A> performs a case-sensitive comparison to find the corresponding table, and creates a new table if no exact match exists.</span></span> <span data-ttu-id="e6b9e-411">下列 C# 程式碼說明這個行為。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-411">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
dataset.Tables.Add("AAA");  
adapter.Fill(dataset, "aaa"); // Fills "aaa", which already exists in the DataSet.  
adapter.Fill(dataset, "Aaa"); // Adds a new table called "Aaa".  
```  
  
 <span data-ttu-id="e6b9e-412">如果<xref:System.Data.Common.DbDataAdapter.Fill%2A>稱為和<xref:System.Data.DataSet>只包含<xref:System.Data.DataTable>名稱只有大小寫不同的<xref:System.Data.DataTable>會更新。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-412">If <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called and the <xref:System.Data.DataSet> contains only one <xref:System.Data.DataTable> whose name differs only by case, that <xref:System.Data.DataTable> is updated.</span></span> <span data-ttu-id="e6b9e-413">在此案例中，這個比較是不區分大小寫。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-413">In this scenario, the comparison is case insensitive.</span></span> <span data-ttu-id="e6b9e-414">下列 C# 程式碼說明這個行為。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-414">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
adapter.Fill(dataset, "AAA"); // Fills table "aaa" because only one similarly named table is in the DataSet.  
```  
  
 <span data-ttu-id="e6b9e-415">如果錯誤或例外狀況時發生填入資料的資料表，在發生錯誤之前所加入的資料列會保留在資料的資料表。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-415">If an error or an exception is encountered while populating the data tables, rows added prior to the occurrence of the error remain in the data tables.</span></span> <span data-ttu-id="e6b9e-416">已中止運算的餘數。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-416">The remainder of the operation is aborted.</span></span>  
  
 <span data-ttu-id="e6b9e-417">當 SELECT 陳述式用來填入<xref:System.Data.DataTable>物件會傳回多個結果，例如批次 SQL 陳述式，可注意下列事項：</span><span class="sxs-lookup"><span data-stu-id="e6b9e-417">When the SELECT statement used to populate the <xref:System.Data.DataTable> objects returns multiple results, such as a batch SQL statement, be aware of the following:</span></span>  
  
-   <span data-ttu-id="e6b9e-418">處理批次 SQL 陳述式，從多個結果時`maxRecords`只適用於第一個結果。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-418">When processing multiple results from a batch SQL statement, `maxRecords` only applies to the first result.</span></span> <span data-ttu-id="e6b9e-419">也適用於包含章節化的結果 (.NET Framework Data Provider for OLE DB 只) 的資料列。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-419">The same is true for rows containing chaptered results (.NET Framework Data Provider for OLE DB only).</span></span> <span data-ttu-id="e6b9e-420">最上層結果會受到`maxRecords`，但是所有的子資料列會加入。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-420">The top level result is limited by `maxRecords`, but all child rows are added.</span></span>  
  
-   <span data-ttu-id="e6b9e-421">如果其中一個結果包含錯誤時，會略過所有後續的結果。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-421">If one of the results contains an error, all subsequent results are skipped.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e6b9e-422">`DataSet`不會包含在所指定的記錄數目超過`maxRecords`。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-422">The `DataSet` will not contain more than the number of records indicated by `maxRecords`.</span></span> <span data-ttu-id="e6b9e-423">不過，從伺服器仍會傳回整個查詢所產生的結果集。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-423">However, the entire resultset generated by the query is still returned from the server.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.SystemException"><span data-ttu-id="e6b9e-424"><see cref="T:System.Data.DataSet" /> 無效。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-424">The <see cref="T:System.Data.DataSet" /> is invalid.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e6b9e-425">來源資料表無效。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-425">The source table is invalid.</span></span>  
  
 <span data-ttu-id="e6b9e-426">-或-</span><span class="sxs-lookup"><span data-stu-id="e6b9e-426">-or-</span></span>  
  
 <span data-ttu-id="e6b9e-427">連接無效。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-427">The connection is invalid.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="e6b9e-428">找不到連線。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-428">The connection could not be found.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e6b9e-429"><paramref name="startRecord" /> 參數小於 0。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-429">The <paramref name="startRecord" /> parameter is less than 0.</span></span>  
  
 <span data-ttu-id="e6b9e-430">-或-</span><span class="sxs-lookup"><span data-stu-id="e6b9e-430">-or-</span></span>  
  
 <span data-ttu-id="e6b9e-431"><paramref name="maxRecords" /> 參數小於 0。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-431">The <paramref name="maxRecords" /> parameter is less than 0.</span></span></exception>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="e6b9e-432">在覆寫<see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" />在衍生類別中，請務必呼叫基底類別的<see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" />方法。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-432">When overriding <see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /> in a derived class, be sure to call the base class's <see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /> method.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="protected virtual int Fill (System.Data.DataSet dataSet, int startRecord, int maxRecords, string srcTable, System.Data.IDbCommand command, System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 Fill(class System.Data.DataSet dataSet, int32 startRecord, int32 maxRecords, string srcTable, class System.Data.IDbCommand command, valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String,System.Data.IDbCommand,System.Data.CommandBehavior)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int Fill(System::Data::DataSet ^ dataSet, int startRecord, int maxRecords, System::String ^ srcTable, System::Data::IDbCommand ^ command, System::Data::CommandBehavior behavior);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
        <Parameter Name="startRecord" Type="System.Int32" />
        <Parameter Name="maxRecords" Type="System.Int32" />
        <Parameter Name="srcTable" Type="System.String" />
        <Parameter Name="command" Type="System.Data.IDbCommand" />
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" />
      </Parameters>
      <Docs>
        <param name="dataSet"><span data-ttu-id="e6b9e-433">要填入資料錄和結構描述 (如果必要的話) 的 <see cref="T:System.Data.DataSet" />。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-433">A <see cref="T:System.Data.DataSet" /> to fill with records and, if necessary, schema.</span></span></param>
        <param name="startRecord"><span data-ttu-id="e6b9e-434">要起始之以零為起始的資料錄編號。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-434">The zero-based record number to start with.</span></span></param>
        <param name="maxRecords"><span data-ttu-id="e6b9e-435">要擷取之資料錄的最大數目。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-435">The maximum number of records to retrieve.</span></span></param>
        <param name="srcTable"><span data-ttu-id="e6b9e-436">用於資料表對應的來源資料表名稱。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-436">The name of the source table to use for table mapping.</span></span></param>
        <param name="command"><span data-ttu-id="e6b9e-437">用來從資料來源擷取資料列的 SQL SELECT 陳述式。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-437">The SQL SELECT statement used to retrieve rows from the data source.</span></span></param>
        <param name="behavior"><span data-ttu-id="e6b9e-438">其中一個 <see cref="T:System.Data.CommandBehavior" /> 值。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-438">One of the <see cref="T:System.Data.CommandBehavior" /> values.</span></span></param>
        <summary><span data-ttu-id="e6b9e-439">使用 <see cref="T:System.Data.DataSet" />、來源資料表名稱、命令字串和命令行為，加入或重新整理 <see cref="T:System.Data.DataSet" /> 中指定範圍內的資料列，以符合那些在資料來源中的資料列。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-439">Adds or refreshes rows in a specified range in the <see cref="T:System.Data.DataSet" /> to match those in the data source using the <see cref="T:System.Data.DataSet" /> and source table names, command string, and command behavior.</span></span></summary>
        <returns><span data-ttu-id="e6b9e-440">成功加入至 <see cref="T:System.Data.DataSet" /> 或在其中重新整理的資料列數目。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-440">The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataSet" />.</span></span> <span data-ttu-id="e6b9e-441">這不包含被不傳回資料列之陳述式所影響的資料列。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-441">This does not include rows affected by statements that do not return rows.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6b9e-442"><xref:System.Data.Common.DbDataAdapter.Fill%2A>方法會從使用 SELECT 陳述式指定由相關聯的資料來源擷取資料列<xref:System.Data.IDbDataAdapter.SelectCommand%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-442">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method retrieves rows from the data source using the SELECT statement specified by an associated <xref:System.Data.IDbDataAdapter.SelectCommand%2A> property.</span></span> <span data-ttu-id="e6b9e-443">SELECT 陳述式相關聯的連接物件必須有效，但它不需要開啟。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-443">The connection object associated with the SELECT statement must be valid, but it does not need to be open.</span></span> <span data-ttu-id="e6b9e-444">如果連接已關閉之前<xref:System.Data.Common.DbDataAdapter.Fill%2A>是呼叫，它會開啟擷取資料，然後關閉。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-444">If the connection is closed before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it is opened to retrieve data, then closed.</span></span> <span data-ttu-id="e6b9e-445">如果連接為開啟之前<xref:System.Data.Common.DbDataAdapter.Fill%2A>是呼叫，它會保持開啟狀態。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-445">If the connection is open before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="e6b9e-446"><xref:System.Data.Common.DbDataAdapter.Fill%2A>作業接著會將資料列加入到目的地<xref:System.Data.DataTable>中的物件<xref:System.Data.DataSet>、 建立<xref:System.Data.DataTable>如果它們尚不存在的物件。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-446">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> operation then adds the rows to destination <xref:System.Data.DataTable> objects in the <xref:System.Data.DataSet>, creating the <xref:System.Data.DataTable> objects if they do not already exist.</span></span> <span data-ttu-id="e6b9e-447">建立時<xref:System.Data.DataTable>物件<xref:System.Data.Common.DbDataAdapter.Fill%2A>作業通常會建立只有資料行名稱中繼資料。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-447">When creating <xref:System.Data.DataTable> objects, the <xref:System.Data.Common.DbDataAdapter.Fill%2A> operation normally creates only column name metadata.</span></span> <span data-ttu-id="e6b9e-448">不過，如果<xref:System.Data.IDataAdapter.MissingSchemaAction%2A>屬性設定為`AddWithKey`，也會建立適當的主索引鍵和條件約束。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-448">However, if the <xref:System.Data.IDataAdapter.MissingSchemaAction%2A> property is set to `AddWithKey`, appropriate primary keys and constraints are also created.</span></span>  
  
 <span data-ttu-id="e6b9e-449">如果<xref:System.Data.Common.DbDataAdapter>遇到重複的資料行在填入<xref:System.Data.DataTable>，它會產生後續的資料行，並使用模式的名稱"*columnname*1"，"*columnname*2"，"*columnname*3"等等。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-449">If the <xref:System.Data.Common.DbDataAdapter> encounters duplicate columns while populating a <xref:System.Data.DataTable>, it generates names for the subsequent columns, using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="e6b9e-450">如果內送資料中包含未命名資料行，它們會放置於<xref:System.Data.DataSet>根據模式"Column1"、"Column2"，等等。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-450">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span> <span data-ttu-id="e6b9e-451">當多個結果集加入至<xref:System.Data.DataSet>放置於個別的資料表中每個結果集。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-451">When multiple result sets are added to the <xref:System.Data.DataSet> each result set is placed in a separate table.</span></span> <span data-ttu-id="e6b9e-452">其他結果集的命名方式是附加至指定的資料表名稱 （例如，"Table"、"Table1"、"Table2"等等） 的整數值。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-452">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on).</span></span> <span data-ttu-id="e6b9e-453">使用資料行和資料表名稱的應用程式應確保這些命名模式衝突不會發生。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-453">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="e6b9e-454"><xref:System.Data.Common.DbDataAdapter.Fill%2A>方法支援案例其中<xref:System.Data.DataSet>包含多個<xref:System.Data.DataTable>名稱只有大小寫不同的物件。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-454">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method supports scenarios where the <xref:System.Data.DataSet> contains multiple <xref:System.Data.DataTable> objects whose names differ only by case.</span></span> <span data-ttu-id="e6b9e-455">在這種情況下，<xref:System.Data.Common.DbDataAdapter.Fill%2A>執行區分大小寫的比較，來尋找對應的資料表，並建立新的資料表，如果沒有完全相符項目存在。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-455">In such situations, <xref:System.Data.Common.DbDataAdapter.Fill%2A> performs a case-sensitive comparison to find the corresponding table, and creates a new table if no exact match exists.</span></span> <span data-ttu-id="e6b9e-456">下列 C# 程式碼說明這個行為。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-456">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
dataset.Tables.Add("AAA");  
adapter.Fill(dataset, "aaa"); // Fills "aaa", which already exists in the DataSet.  
adapter.Fill(dataset, "Aaa"); // Adds a new table called "Aaa".  
```  
  
 <span data-ttu-id="e6b9e-457">如果<xref:System.Data.Common.DbDataAdapter.Fill%2A>稱為和<xref:System.Data.DataSet>只包含<xref:System.Data.DataTable>名稱只有大小寫不同的<xref:System.Data.DataTable>會更新。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-457">If <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called and the <xref:System.Data.DataSet> contains only one <xref:System.Data.DataTable> whose name differs only by case, that <xref:System.Data.DataTable> is updated.</span></span> <span data-ttu-id="e6b9e-458">在此案例中，這個比較是不區分大小寫。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-458">In this scenario, the comparison is case insensitive.</span></span> <span data-ttu-id="e6b9e-459">下列 C# 程式碼說明這個行為。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-459">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
adapter.Fill(dataset, "AAA"); // Fills table "aaa" because only one similarly named table is in the DataSet.  
```  
  
 <span data-ttu-id="e6b9e-460">您可以使用<xref:System.Data.Common.DbDataAdapter.Fill%2A>上多次相同的方法<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-460">You can use the <xref:System.Data.Common.DbDataAdapter.Fill%2A> method multiple times on the same <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="e6b9e-461">如果主索引鍵存在，內送資料列會合併具有相符的資料列已經存在。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-461">If a primary key exists, incoming rows are merged with matching rows that already exist.</span></span> <span data-ttu-id="e6b9e-462">如果沒有主索引鍵存在，將內送資料列附加至<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-462">If no primary key exists, incoming rows are appended to the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="e6b9e-463">如果 `SelectCommand` 傳回 OUTER JOIN 的結果，則 `DataAdapter` 便不會為產生的 <xref:System.Data.DataTable.PrimaryKey%2A> 設定 <xref:System.Data.DataTable> 值。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-463">If the `SelectCommand` returns the results of an OUTER JOIN, the `DataAdapter` does not set a <xref:System.Data.DataTable.PrimaryKey%2A> value for the resulting <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="e6b9e-464">您必須明確定義主索引鍵，以確保正確解析重複的資料列。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-464">You must explicitly define the primary key to ensure that duplicate rows are resolved correctly.</span></span> <span data-ttu-id="e6b9e-465">如需詳細資訊，請參閱[定義主索引鍵](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md)。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-465">For more information, see [Defining Primary Keys](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e6b9e-466">處理批次傳回多個結果，實作的 SQL 陳述式時<xref:System.Data.Common.DbDataAdapter.Fill%2A>和<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>對於.NET Framework 資料提供者擷取結構描述資訊，只有第一個結果。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-466">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.Fill%2A> and <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for a .NET Framework data provider retrieves schema information for only the first result.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e6b9e-467">來源資料表無效。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-467">The source table is invalid.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e6b9e-468"><paramref name="startRecord" /> 參數小於 0。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-468">The <paramref name="startRecord" /> parameter is less than 0.</span></span>  
  
 <span data-ttu-id="e6b9e-469">-或-</span><span class="sxs-lookup"><span data-stu-id="e6b9e-469">-or-</span></span>  
  
 <span data-ttu-id="e6b9e-470"><paramref name="maxRecords" /> 參數小於 0。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-470">The <paramref name="maxRecords" /> parameter is less than 0.</span></span></exception>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="e6b9e-471">這個多載<see cref="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)" />被保護的設計為使用.NET Framework 資料提供者方法。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-471">This overload of the <see cref="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)" /> method is protected and is designed for use by a .NET Framework data provider.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="FillCommandBehavior">
      <MemberSignature Language="C#" Value="protected internal System.Data.CommandBehavior FillCommandBehavior { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.CommandBehavior FillCommandBehavior" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataAdapter.FillCommandBehavior" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Property FillCommandBehavior As CommandBehavior" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property System::Data::CommandBehavior FillCommandBehavior { System::Data::CommandBehavior get(); void set(System::Data::CommandBehavior value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.CommandBehavior</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e6b9e-472">取得或設定用來填入資料配接器 (Adapter) 之命令的行為。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-472">Gets or sets the behavior of the command used to fill the data adapter.</span></span></summary>
        <value><span data-ttu-id="e6b9e-473">命令的 <see cref="T:System.Data.CommandBehavior" />，用於填入資料配接器。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-473">The <see cref="T:System.Data.CommandBehavior" /> of the command used to fill the data adapter.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="FillSchema">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e6b9e-474">加入 <see cref="T:System.Data.DataTable" /> 至 <see cref="T:System.Data.DataSet" />，並且設定結構描述，以符合資料來源中的資料表。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-474">Adds a <see cref="T:System.Data.DataTable" /> to a <see cref="T:System.Data.DataSet" /> and configures the schema to match that in the data source.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FillSchema">
      <MemberSignature Language="C#" Value="public override System.Data.DataTable[] FillSchema (System.Data.DataSet dataSet, System.Data.SchemaType schemaType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.DataTable[] FillSchema(class System.Data.DataSet dataSet, valuetype System.Data.SchemaType schemaType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Data::DataTable ^&gt; ^ FillSchema(System::Data::DataSet ^ dataSet, System::Data::SchemaType schemaType);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
        <Parameter Name="schemaType" Type="System.Data.SchemaType" />
      </Parameters>
      <Docs>
        <param name="dataSet"><span data-ttu-id="e6b9e-475">要插入結構描述的 <see cref="T:System.Data.DataSet" />。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-475">A <see cref="T:System.Data.DataSet" /> to insert the schema in.</span></span></param>
        <param name="schemaType"><span data-ttu-id="e6b9e-476">其中一個 <see cref="T:System.Data.SchemaType" /> 值，指定插入結構描述的方法。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-476">One of the <see cref="T:System.Data.SchemaType" /> values that specify how to insert the schema.</span></span></param>
        <summary><span data-ttu-id="e6b9e-477">將名稱為 "Table" 的 <see cref="T:System.Data.DataTable" /> 加入至指定的 <see cref="T:System.Data.DataSet" />，並根據指定的 <see cref="T:System.Data.SchemaType" />，設定結構描述以符合資料來源中的資料表。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-477">Adds a <see cref="T:System.Data.DataTable" /> named "Table" to the specified <see cref="T:System.Data.DataSet" /> and configures the schema to match that in the data source based on the specified <see cref="T:System.Data.SchemaType" />.</span></span></summary>
        <returns><span data-ttu-id="e6b9e-478">已加入至 <see cref="T:System.Data.DataTable" /> 之 <see cref="T:System.Data.DataSet" /> 物件集合的參考。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-478">A reference to a collection of <see cref="T:System.Data.DataTable" /> objects that were added to the <see cref="T:System.Data.DataSet" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6b9e-479">這個方法會擷取從資料來源使用的結構描述資訊<xref:System.Data.IDbDataAdapter.SelectCommand%2A>。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-479">This method retrieves the schema information from the data source using the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>.</span></span>  
  
 <span data-ttu-id="e6b9e-480">A<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>作業會將<xref:System.Data.DataTable>目的地<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-480">A <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> operation adds a <xref:System.Data.DataTable> to the destination <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="e6b9e-481">接著它會加入至資料行<xref:System.Data.DataColumnCollection>的<xref:System.Data.DataTable>，並設定下列<xref:System.Data.DataColumn>如果存在於資料來源的屬性：</span><span class="sxs-lookup"><span data-stu-id="e6b9e-481">It then adds columns to the <xref:System.Data.DataColumnCollection> of the <xref:System.Data.DataTable>, and configures the following <xref:System.Data.DataColumn> properties if they exist at the data source:</span></span>  
  
-   <xref:System.Data.DataColumn.AllowDBNull%2A>  
  
-   <span data-ttu-id="e6b9e-482"><xref:System.Data.DataColumn.AutoIncrement%2A>。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-482"><xref:System.Data.DataColumn.AutoIncrement%2A>.</span></span> <span data-ttu-id="e6b9e-483">您必須設定<xref:System.Data.DataColumn.AutoIncrementStep%2A>和<xref:System.Data.DataColumn.AutoIncrementSeed%2A>分開。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-483">You must set <xref:System.Data.DataColumn.AutoIncrementStep%2A> and <xref:System.Data.DataColumn.AutoIncrementSeed%2A> separately.</span></span>  
  
-   <xref:System.Data.DataColumn.MaxLength%2A>  
  
-   <xref:System.Data.DataColumn.ReadOnly%2A>  
  
-   <xref:System.Data.DataColumn.Unique%2A>  
  
 <span data-ttu-id="e6b9e-484"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 也會設定<xref:System.Data.DataTable.PrimaryKey%2A>和<xref:System.Data.DataTable.Constraints%2A>屬性根據下列規則：</span><span class="sxs-lookup"><span data-stu-id="e6b9e-484"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> also configures the <xref:System.Data.DataTable.PrimaryKey%2A> and <xref:System.Data.DataTable.Constraints%2A> properties according to the following rules:</span></span>  
  
-   <span data-ttu-id="e6b9e-485">如果一或多個主索引鍵資料行所傳回<xref:System.Data.IDbDataAdapter.SelectCommand%2A>，它們會做為主要索引鍵資料行<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-485">If one or more primary key columns are returned by the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>, they are used as the primary key columns for the <xref:System.Data.DataTable>.</span></span>  
  
-   <span data-ttu-id="e6b9e-486">如果傳回沒有主索引鍵資料行，但是唯一的資料行，唯一的資料行可用的主索引鍵，如果且只有唯一的資料行都不可為 null。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-486">If no primary key columns are returned but unique columns are, the unique columns are used as the primary key if, and only if, all the unique columns are nonnullable.</span></span> <span data-ttu-id="e6b9e-487">如果任何資料行可為 null，<xref:System.Data.UniqueConstraint>加入至<xref:System.Data.ConstraintCollection>，但<xref:System.Data.DataTable.PrimaryKey%2A>屬性未設定。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-487">If any of the columns are nullable, a <xref:System.Data.UniqueConstraint> is added to the <xref:System.Data.ConstraintCollection>, but the <xref:System.Data.DataTable.PrimaryKey%2A> property is not set.</span></span>  
  
-   <span data-ttu-id="e6b9e-488">如果傳回主要索引鍵資料行，唯一的資料行，將主索引鍵資料行做為主要索引鍵資料行<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-488">If both primary key columns and unique columns are returned, the primary key columns are used as the primary key columns for the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="e6b9e-489">請注意，會將主索引鍵和唯一條件約束加入至<xref:System.Data.ConstraintCollection>根據前述規則，但其他條件約束類型不會加入。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-489">Note that primary keys and unique constraints are added to the <xref:System.Data.ConstraintCollection> according to the preceding rules, but other constraint types are not added.</span></span>  
  
 <span data-ttu-id="e6b9e-490">如果唯一叢集索引上的資料行或 SQL Server 資料表中的資料行定義和叢集索引中的資料行的名稱將會傳回一組個別的資料行上定義主索引鍵條件約束。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-490">If a unique clustered index is defined on a column or columns in a SQL Server table and the primary key constraint is defined on a separate set of columns, then the names of the columns in the clustered index will be returned.</span></span> <span data-ttu-id="e6b9e-491">若要傳回的主索引鍵資料行的名稱，使用指定名稱的主索引鍵的 SELECT 陳述式中的查詢提示。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-491">To return the name or names of the primary key columns, use a query hint with the SELECT statement that specifies the name of the primary key index.</span></span> <span data-ttu-id="e6b9e-492">如需有關指定查詢提示的詳細資訊，請參閱[查詢提示 (TRANSACT-SQL)](http://msdn.microsoft.com/library/ms181714.aspx)。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-492">For more information about specifying query hints, see [Query Hint (Transact-SQL)](http://msdn.microsoft.com/library/ms181714.aspx).</span></span>  
  
 <span data-ttu-id="e6b9e-493">主索引鍵資訊會使用於<xref:System.Data.Common.DbDataAdapter.Fill%2A>來尋找和取代其索引鍵資料行符合任何資料列。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-493">Primary key information is used during <xref:System.Data.Common.DbDataAdapter.Fill%2A> to find and replace any rows whose key columns match.</span></span> <span data-ttu-id="e6b9e-494">如果這不是所要的行為，使用<xref:System.Data.Common.DbDataAdapter.Fill%2A>但未要求結構描述資訊。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-494">If this is not the desired behavior, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> without requesting schema information.</span></span>  
  
 <span data-ttu-id="e6b9e-495">如果<xref:System.Data.IDataAdapter>遇到重複的資料行在填入<xref:System.Data.DataTable>，它會產生後續的資料行，並使用模式的名稱"*columnname*1"，"*columnname*2"，"*columnname*3"等等。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-495">If the <xref:System.Data.IDataAdapter> encounters duplicate columns while populating a <xref:System.Data.DataTable>, it generates names for the subsequent columns, using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="e6b9e-496">如果內送資料中包含未命名資料行，它們會放置於<xref:System.Data.DataSet>根據模式"Column1"、"Column2"，等等。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-496">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span> <span data-ttu-id="e6b9e-497">當多個結果集加入至<xref:System.Data.DataSet>放置於個別的資料表中每個結果集。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-497">When multiple result sets are added to the <xref:System.Data.DataSet> each result set is placed in a separate table.</span></span> <span data-ttu-id="e6b9e-498">其他結果集的命名方式是附加至指定的資料表名稱 （例如，"Table"、"Table1"、"Table2"等。） 的整數值。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-498">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on.).</span></span> <span data-ttu-id="e6b9e-499">使用資料行和資料表名稱的應用程式應確保這些命名模式衝突不會發生。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-499">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="e6b9e-500"><xref:System.Data.IDbConnection> Select 命令相關聯的物件必須有效，但不需要開啟。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-500">The <xref:System.Data.IDbConnection> object associated with the select command must be valid, but it does not need to open.</span></span> <span data-ttu-id="e6b9e-501">如果<xref:System.Data.IDbConnection>前已關閉<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>是呼叫，它會開啟擷取資料，然後關閉。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-501">If the <xref:System.Data.IDbConnection> is closed before <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called, it is opened to retrieve data, then closed.</span></span> <span data-ttu-id="e6b9e-502">如果連接為開啟之前<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>是呼叫，它仍然為開啟狀態。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-502">If the connection is open before <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called, it is left open.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e6b9e-503">處理批次傳回多個結果，實作的 SQL 陳述式時<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>的.NET Framework Data Provider for OLE DB 擷取，只有第一個結果的結構描述資訊。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-503">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</span></span> <span data-ttu-id="e6b9e-504">若要擷取多個結果的結構描述資訊，請使用<xref:System.Data.Common.DbDataAdapter.Fill%2A>與<xref:System.Data.MissingSchemaAction>設`AddWithKey`。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-504">To retrieve schema information for multiple results, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> with the <xref:System.Data.MissingSchemaAction> set to `AddWithKey`.</span></span>  
  
 <span data-ttu-id="e6b9e-505">使用 <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 時，.NET Framework Data Provider for SQL Server 會將 FOR BROWSE 子句附加到正要執行的陳述式。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-505">When using <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, the .NET Framework Data Provider for SQL Server appends a FOR BROWSE clause to the statement being executed.</span></span> <span data-ttu-id="e6b9e-506">使用者應注意潛在的副作用，例如使用 SET FMTONLY ON 陳述式的干擾。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-506">The user should be aware of potential side effects, such as interference with the use of SET FMTONLY ON statements.</span></span> <span data-ttu-id="e6b9e-507">如需詳細資訊，請參閱《SQL Server 線上叢書》。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-507">See SQL Server Books Online for more information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e6b9e-508">下列範例會使用衍生的類別， <xref:System.Data.SqlClient.SqlDataAdapter>，以填滿<xref:System.Data.DataSet>與結構描述，以及傳回<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-508">The following example uses the derived class, <xref:System.Data.SqlClient.SqlDataAdapter>, to fill a <xref:System.Data.DataSet> with the schema, and returns a <xref:System.Data.DataSet>.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.FillSchema1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.FillSchema1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.FillSchema1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.FillSchema1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FillSchema">
      <MemberSignature Language="C#" Value="public System.Data.DataTable FillSchema (System.Data.DataTable dataTable, System.Data.SchemaType schemaType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataTable FillSchema(class System.Data.DataTable dataTable, valuetype System.Data.SchemaType schemaType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataTable ^ FillSchema(System::Data::DataTable ^ dataTable, System::Data::SchemaType schemaType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataTable" Type="System.Data.DataTable" />
        <Parameter Name="schemaType" Type="System.Data.SchemaType" />
      </Parameters>
      <Docs>
        <param name="dataTable"><span data-ttu-id="e6b9e-509"><see cref="T:System.Data.DataTable" />，以資料來源中的結構描述來填入其中。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-509">The <see cref="T:System.Data.DataTable" /> to be filled with the schema from the data source.</span></span></param>
        <param name="schemaType"><span data-ttu-id="e6b9e-510">其中一個 <see cref="T:System.Data.SchemaType" /> 值。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-510">One of the <see cref="T:System.Data.SchemaType" /> values.</span></span></param>
        <summary><span data-ttu-id="e6b9e-511">根據指定的 <see cref="T:System.Data.DataTable" />，設定指定 <see cref="T:System.Data.SchemaType" /> 的結構描述。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-511">Configures the schema of the specified <see cref="T:System.Data.DataTable" /> based on the specified <see cref="T:System.Data.SchemaType" />.</span></span></summary>
        <returns><span data-ttu-id="e6b9e-512"><see cref="T:System.Data.DataTable" />，包含從資料來源傳回的結構描述資訊。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-512">A <see cref="T:System.Data.DataTable" /> that contains schema information returned from the data source.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6b9e-513"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A>方法會擷取從資料來源使用的結構描述<xref:System.Data.IDbDataAdapter.SelectCommand%2A>。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-513">The <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> method retrieves the schema from the data source using the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>.</span></span> <span data-ttu-id="e6b9e-514">連接物件相關聯<xref:System.Data.IDbDataAdapter.SelectCommand%2A>必須有效，但它不需要開啟。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-514">The connection object associated with the <xref:System.Data.IDbDataAdapter.SelectCommand%2A> must be valid, but it does not need to be open.</span></span> <span data-ttu-id="e6b9e-515">如果連接已關閉之前<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>是呼叫，它會開啟擷取資料，然後關閉。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-515">If the connection is closed before <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called, it is opened to retrieve data, then closed.</span></span> <span data-ttu-id="e6b9e-516">如果連接為開啟之前<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>是呼叫，它會保持開啟狀態。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-516">If the connection is open before <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="e6b9e-517">A<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>作業會傳回<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-517">A <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> operation returns a <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="e6b9e-518">接著它會加入至資料行<xref:System.Data.DataColumnCollection>的<xref:System.Data.DataTable>，並設定下列<xref:System.Data.DataColumn>如果存在於資料來源的屬性：</span><span class="sxs-lookup"><span data-stu-id="e6b9e-518">It then adds columns to the <xref:System.Data.DataColumnCollection> of the <xref:System.Data.DataTable>, and configures the following <xref:System.Data.DataColumn> properties if they exist at the data source:</span></span>  
  
-   <xref:System.Data.DataColumn.AllowDBNull%2A>  
  
-   <span data-ttu-id="e6b9e-519"><xref:System.Data.DataColumn.AutoIncrement%2A>。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-519"><xref:System.Data.DataColumn.AutoIncrement%2A>.</span></span> <span data-ttu-id="e6b9e-520">您必須設定<xref:System.Data.DataColumn.AutoIncrementStep%2A>和<xref:System.Data.DataColumn.AutoIncrementSeed%2A>分開。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-520">You must set <xref:System.Data.DataColumn.AutoIncrementStep%2A> and <xref:System.Data.DataColumn.AutoIncrementSeed%2A> separately.</span></span>  
  
-   <xref:System.Data.DataColumn.MaxLength%2A>  
  
-   <xref:System.Data.DataColumn.ReadOnly%2A>  
  
-   <xref:System.Data.DataColumn.Unique%2A>  
  
 <span data-ttu-id="e6b9e-521"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 也會設定<xref:System.Data.DataTable.PrimaryKey%2A>和<xref:System.Data.DataTable.Constraints%2A>屬性根據下列規則：</span><span class="sxs-lookup"><span data-stu-id="e6b9e-521"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> also configures the <xref:System.Data.DataTable.PrimaryKey%2A> and <xref:System.Data.DataTable.Constraints%2A> properties according to the following rules:</span></span>  
  
-   <span data-ttu-id="e6b9e-522">如果<xref:System.Data.DataTable.PrimaryKey%2A>已經定義為`DataTable`，或`DataTable`包含資料，`PrimaryKey`未設定屬性。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-522">If a <xref:System.Data.DataTable.PrimaryKey%2A> has already been defined for the `DataTable`, or the `DataTable` contains data, the `PrimaryKey` property will not be set.</span></span>  
  
-   <span data-ttu-id="e6b9e-523">如果一或多個主索引鍵資料行所傳回<xref:System.Data.IDbDataAdapter.SelectCommand%2A>，它們會做為主要索引鍵資料行`DataTable`。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-523">If one or more primary key columns are returned by the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>, they are used as the primary key columns for the `DataTable`.</span></span>  
  
-   <span data-ttu-id="e6b9e-524">如果傳回沒有主索引鍵資料行，但是唯一的資料行，唯一的資料行可用的主索引鍵，如果且只有唯一的資料行都不可為 null。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-524">If no primary key columns are returned but unique columns are, the unique columns are used as the primary key if, and only if, all the unique columns are nonnullable.</span></span> <span data-ttu-id="e6b9e-525">如果任何資料行可為 null，<xref:System.Data.UniqueConstraint>加入至<xref:System.Data.ConstraintCollection>，但`PrimaryKey`屬性未設定。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-525">If any of the columns are nullable, a <xref:System.Data.UniqueConstraint> is added to the <xref:System.Data.ConstraintCollection>, but the `PrimaryKey` property is not set.</span></span>  
  
-   <span data-ttu-id="e6b9e-526">如果傳回主要索引鍵資料行，唯一的資料行，將主索引鍵資料行做為主要索引鍵資料行`DataTable`。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-526">If both primary key columns and unique columns are returned, the primary key columns are used as the primary key columns for the `DataTable`.</span></span>  
  
 <span data-ttu-id="e6b9e-527">請注意，會將主索引鍵和唯一條件約束加入至<xref:System.Data.ConstraintCollection>根據前述規則，但其他條件約束類型不會加入。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-527">Note that primary keys and unique constraints are added to the <xref:System.Data.ConstraintCollection> according to the preceding rules, but other constraint types are not added.</span></span> <span data-ttu-id="e6b9e-528">此程序可能需要數個往返到伺服器。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-528">This process may require several round-trips to the server.</span></span>  
  
 <span data-ttu-id="e6b9e-529">如果唯一叢集索引上的資料行或 SQL Server 資料表中的資料行定義和叢集索引中的資料行的名稱將會傳回一組個別的資料行上定義主索引鍵條件約束。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-529">If a unique clustered index is defined on a column or columns in a SQL Server table and the primary key constraint is defined on a separate set of columns, then the names of the columns in the clustered index will be returned.</span></span> <span data-ttu-id="e6b9e-530">若要傳回的主索引鍵資料行的名稱，使用指定名稱的主索引鍵的 SELECT 陳述式中的查詢提示。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-530">To return the name or names of the primary key columns, use a query hint with the SELECT statement that specifies the name of the primary key index.</span></span> <span data-ttu-id="e6b9e-531">如需有關指定查詢提示的詳細資訊，請參閱[查詢提示 (TRANSACT-SQL)](http://msdn.microsoft.com/library/ms181714.aspx)。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-531">For more information about specifying query hints, see [Query Hint (Transact-SQL)](http://msdn.microsoft.com/library/ms181714.aspx).</span></span>  
  
 <span data-ttu-id="e6b9e-532">如果<xref:System.Data.Common.DbDataAdapter>遇到重複的資料行在填入<xref:System.Data.DataTable>，它會產生後續的資料行，並使用模式的名稱"*columnname*1"，"*columnname*2"，"*columnname*3"等等。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-532">If the <xref:System.Data.Common.DbDataAdapter> encounters duplicate columns while populating a <xref:System.Data.DataTable>, it generates names for the subsequent columns, using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="e6b9e-533">如果內送資料中包含未命名資料行，它們會放置於<xref:System.Data.DataSet>根據模式"Column1"、"Column2"，等等。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-533">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span> <span data-ttu-id="e6b9e-534">當多個結果集加入至<xref:System.Data.DataSet>放置於個別的資料表中每個結果集。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-534">When multiple result sets are added to the <xref:System.Data.DataSet> each result set is placed in a separate table.</span></span> <span data-ttu-id="e6b9e-535">其他結果集的命名方式是附加至指定的資料表名稱 （例如，"Table"、"Table1"、"Table2"等。） 的整數值。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-535">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on.).</span></span> <span data-ttu-id="e6b9e-536">使用資料行和資料表名稱的應用程式應確保這些命名模式衝突不會發生。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-536">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="e6b9e-537"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 不會傳回任何資料列。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-537"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> does not return any rows.</span></span> <span data-ttu-id="e6b9e-538">使用<xref:System.Data.Common.DbDataAdapter.Fill%2A>方法，以將資料列加入<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-538">Use the <xref:System.Data.Common.DbDataAdapter.Fill%2A> method to add rows to a <xref:System.Data.DataTable>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e6b9e-539">處理批次傳回多個結果，實作的 SQL 陳述式時<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>的.NET Framework Data Provider for OLE DB 擷取，只有第一個結果的結構描述資訊。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-539">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</span></span> <span data-ttu-id="e6b9e-540">若要擷取多個結果的結構描述資訊，請使用<xref:System.Data.Common.DbDataAdapter.Fill%2A>與<xref:System.Data.MissingSchemaAction>設`AddWithKey`。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-540">To retrieve schema information for multiple results, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> with the <xref:System.Data.MissingSchemaAction> set to `AddWithKey`.</span></span>  
  
 <span data-ttu-id="e6b9e-541">使用 <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 時，.NET Framework Data Provider for SQL Server 會將 FOR BROWSE 子句附加到正要執行的陳述式。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-541">When using <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, the .NET Framework Data Provider for SQL Server appends a FOR BROWSE clause to the statement being executed.</span></span> <span data-ttu-id="e6b9e-542">使用者應注意潛在的副作用，例如使用 SET FMTONLY ON 陳述式的干擾。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-542">The user should be aware of potential side effects, such as interference with the use of SET FMTONLY ON statements.</span></span> <span data-ttu-id="e6b9e-543">如需詳細資訊，請參閱《SQL Server 線上叢書》。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-543">See SQL Server Books Online for more information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e6b9e-544">下列範例會使用衍生的類別， <xref:System.Data.SqlClient.SqlDataAdapter>，以填滿<xref:System.Data.DataSet>與結構描述，以及傳回<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-544">The following example uses the derived class, <xref:System.Data.SqlClient.SqlDataAdapter>, to fill a <xref:System.Data.DataSet> with the schema, and returns a <xref:System.Data.DataTable>.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.FillSchema3#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.FillSchema3/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.FillSchema3#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.FillSchema3/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FillSchema">
      <MemberSignature Language="C#" Value="public System.Data.DataTable[] FillSchema (System.Data.DataSet dataSet, System.Data.SchemaType schemaType, string srcTable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataTable[] FillSchema(class System.Data.DataSet dataSet, valuetype System.Data.SchemaType schemaType, string srcTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataTable ^&gt; ^ FillSchema(System::Data::DataSet ^ dataSet, System::Data::SchemaType schemaType, System::String ^ srcTable);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
        <Parameter Name="schemaType" Type="System.Data.SchemaType" />
        <Parameter Name="srcTable" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dataSet"><span data-ttu-id="e6b9e-545">要插入結構描述的 <see cref="T:System.Data.DataSet" />。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-545">A <see cref="T:System.Data.DataSet" /> to insert the schema in.</span></span></param>
        <param name="schemaType"><span data-ttu-id="e6b9e-546">其中一個 <see cref="T:System.Data.SchemaType" /> 值，指定插入結構描述的方法。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-546">One of the <see cref="T:System.Data.SchemaType" /> values that specify how to insert the schema.</span></span></param>
        <param name="srcTable"><span data-ttu-id="e6b9e-547">用於資料表對應的來源資料表名稱。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-547">The name of the source table to use for table mapping.</span></span></param>
        <summary><span data-ttu-id="e6b9e-548">將 <see cref="T:System.Data.DataTable" /> 加入至指定的 <see cref="T:System.Data.DataSet" />，並且根據指定的 <see cref="T:System.Data.SchemaType" /> 和 <see cref="T:System.Data.DataTable" /> 設定結構描述，以符合資料來源中的資料表。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-548">Adds a <see cref="T:System.Data.DataTable" /> to the specified <see cref="T:System.Data.DataSet" /> and configures the schema to match that in the data source based upon the specified <see cref="T:System.Data.SchemaType" /> and <see cref="T:System.Data.DataTable" />.</span></span></summary>
        <returns><span data-ttu-id="e6b9e-549">已加入至 <see cref="T:System.Data.DataTable" /> 之 <see cref="T:System.Data.DataSet" /> 物件集合的參考。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-549">A reference to a collection of <see cref="T:System.Data.DataTable" /> objects that were added to the <see cref="T:System.Data.DataSet" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6b9e-550">這個方法會擷取從資料來源使用的結構描述資訊<xref:System.Data.IDbDataAdapter.SelectCommand%2A>。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-550">This method retrieves the schema information from the data source using the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>.</span></span>  
  
 <span data-ttu-id="e6b9e-551">A<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>作業會將<xref:System.Data.DataTable>目的地<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-551">A <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> operation adds a <xref:System.Data.DataTable> to the destination <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="e6b9e-552">接著它會加入至資料行<xref:System.Data.DataColumnCollection>的<xref:System.Data.DataTable>，並設定下列<xref:System.Data.DataColumn>如果存在於資料來源的屬性：</span><span class="sxs-lookup"><span data-stu-id="e6b9e-552">It then adds columns to the <xref:System.Data.DataColumnCollection> of the <xref:System.Data.DataTable>, and configures the following <xref:System.Data.DataColumn> properties if they exist at the data source:</span></span>  
  
-   <xref:System.Data.DataColumn.AllowDBNull%2A>  
  
-   <span data-ttu-id="e6b9e-553"><xref:System.Data.DataColumn.AutoIncrement%2A>。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-553"><xref:System.Data.DataColumn.AutoIncrement%2A>.</span></span> <span data-ttu-id="e6b9e-554">您必須設定<xref:System.Data.DataColumn.AutoIncrementStep%2A>和<xref:System.Data.DataColumn.AutoIncrementSeed%2A>分開。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-554">You must set <xref:System.Data.DataColumn.AutoIncrementStep%2A> and <xref:System.Data.DataColumn.AutoIncrementSeed%2A> separately.</span></span>  
  
-   <xref:System.Data.DataColumn.MaxLength%2A>  
  
-   <xref:System.Data.DataColumn.ReadOnly%2A>  
  
-   <xref:System.Data.DataColumn.Unique%2A>  
  
 <span data-ttu-id="e6b9e-555"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 也會設定<xref:System.Data.DataTable.PrimaryKey%2A>和<xref:System.Data.DataTable.Constraints%2A>屬性根據下列規則：</span><span class="sxs-lookup"><span data-stu-id="e6b9e-555"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> also configures the <xref:System.Data.DataTable.PrimaryKey%2A> and <xref:System.Data.DataTable.Constraints%2A> properties according to the following rules:</span></span>  
  
-   <span data-ttu-id="e6b9e-556">如果一或多個主索引鍵資料行所傳回<xref:System.Data.IDbDataAdapter.SelectCommand%2A>，它們會做為主要索引鍵資料行<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-556">If one or more primary key columns are returned by the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>, they are used as the primary key columns for the <xref:System.Data.DataTable>.</span></span>  
  
-   <span data-ttu-id="e6b9e-557">如果傳回沒有主索引鍵資料行，但是唯一的資料行，唯一的資料行可用的主索引鍵，如果且只有唯一的資料行都不可為 null。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-557">If no primary key columns are returned but unique columns are, the unique columns are used as the primary key if, and only if, all the unique columns are nonnullable.</span></span> <span data-ttu-id="e6b9e-558">如果任何資料行可為 null，<xref:System.Data.UniqueConstraint>加入至<xref:System.Data.ConstraintCollection>，但<xref:System.Data.DataTable.PrimaryKey%2A>屬性未設定。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-558">If any of the columns are nullable, a <xref:System.Data.UniqueConstraint> is added to the <xref:System.Data.ConstraintCollection>, but the <xref:System.Data.DataTable.PrimaryKey%2A> property is not set.</span></span>  
  
-   <span data-ttu-id="e6b9e-559">如果傳回主要索引鍵資料行，唯一的資料行，將主索引鍵資料行做為主要索引鍵資料行<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-559">If both primary key columns and unique columns are returned, the primary key columns are used as the primary key columns for the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="e6b9e-560">請注意，會將主索引鍵和唯一條件約束加入至<xref:System.Data.ConstraintCollection>根據前述規則，但其他條件約束類型不會加入。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-560">Note that primary keys and unique constraints are added to the <xref:System.Data.ConstraintCollection> according to the preceding rules, but other constraint types are not added.</span></span>  
  
 <span data-ttu-id="e6b9e-561">如果唯一叢集索引上的資料行或 SQL Server 資料表中的資料行定義和叢集索引中的資料行的名稱將會傳回一組個別的資料行上定義主索引鍵條件約束。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-561">If a unique clustered index is defined on a column or columns in a SQL Server table and the primary key constraint is defined on a separate set of columns, then the names of the columns in the clustered index will be returned.</span></span> <span data-ttu-id="e6b9e-562">若要傳回的主索引鍵資料行的名稱，使用指定名稱的主索引鍵的 SELECT 陳述式中的查詢提示。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-562">To return the name or names of the primary key columns, use a query hint with the SELECT statement that specifies the name of the primary key index.</span></span> <span data-ttu-id="e6b9e-563">如需有關指定查詢提示的詳細資訊，請參閱[查詢提示 (TRANSACT-SQL)](http://msdn.microsoft.com/library/ms181714.aspx)。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-563">For more information about specifying query hints, see [Query Hint (Transact-SQL)](http://msdn.microsoft.com/library/ms181714.aspx).</span></span>  
  
 <span data-ttu-id="e6b9e-564">主索引鍵資訊會使用於<xref:System.Data.Common.DbDataAdapter.Fill%2A>來尋找和取代其索引鍵資料行符合任何資料列。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-564">Primary key information is used during <xref:System.Data.Common.DbDataAdapter.Fill%2A> to find and replace any rows whose key columns match.</span></span> <span data-ttu-id="e6b9e-565">如果這不是所要的行為，使用<xref:System.Data.Common.DbDataAdapter.Fill%2A>但未要求結構描述資訊。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-565">If this is not the desired behavior, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> without requesting schema information.</span></span>  
  
 <span data-ttu-id="e6b9e-566">如果<xref:System.Data.Common.DbDataAdapter>遇到重複的資料行在填入<xref:System.Data.DataTable>，它會產生後續的資料行，並使用模式的名稱"*columnname*1"，"*columnname*2"，"*columnname*3"等等。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-566">If the <xref:System.Data.Common.DbDataAdapter> encounters duplicate columns while populating a <xref:System.Data.DataTable>, it generates names for the subsequent columns, using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="e6b9e-567">如果內送資料中包含未命名資料行，它們會放置於<xref:System.Data.DataSet>根據模式"Column1"、"Column2"，等等。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-567">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span> <span data-ttu-id="e6b9e-568">當多個結果集加入至<xref:System.Data.DataSet>放置於個別的資料表中每個結果集。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-568">When multiple result sets are added to the <xref:System.Data.DataSet> each result set is placed in a separate table.</span></span> <span data-ttu-id="e6b9e-569">其他結果集的命名方式是附加至指定的資料表名稱 （例如，"Table"、"Table1"、"Table2"等。） 的整數值。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-569">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on.).</span></span> <span data-ttu-id="e6b9e-570">使用資料行和資料表名稱的應用程式應確保這些命名模式衝突不會發生。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-570">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="e6b9e-571"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A>方法支援案例其中<xref:System.Data.DataSet>包含多個<xref:System.Data.DataTable>名稱只有大小寫不同的物件。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-571">The <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> method supports scenarios where the <xref:System.Data.DataSet> contains multiple <xref:System.Data.DataTable> objects whose names differ only by case.</span></span> <span data-ttu-id="e6b9e-572">在這種情況下，<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>執行區分大小寫的比較，來尋找對應的資料表，並建立新的資料表，如果沒有完全相符項目存在。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-572">In such situations, <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> performs a case-sensitive comparison to find the corresponding table, and creates a new table if no exact match exists.</span></span> <span data-ttu-id="e6b9e-573">下列 C# 程式碼說明這個行為。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-573">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
dataset.Tables.Add("AAA");  
adapter.FillSchema(dataset, "aaa"); // Fills the schema of "aaa", which already exists in the DataSet.  
adapter.FillSchema(dataset, "Aaa"); // Adds a new table called "Aaa".  
```  
  
 <span data-ttu-id="e6b9e-574">如果<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>稱為和<xref:System.Data.DataSet>只包含<xref:System.Data.DataTable>名稱只有大小寫不同的<xref:System.Data.DataTable>會更新。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-574">If <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called and the <xref:System.Data.DataSet> contains only one <xref:System.Data.DataTable> whose name differs only by case, that <xref:System.Data.DataTable> is updated.</span></span> <span data-ttu-id="e6b9e-575">在此案例中，這個比較是不區分大小寫。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-575">In this scenario, the comparison is case insensitive.</span></span> <span data-ttu-id="e6b9e-576">下列 C# 程式碼說明這個行為。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-576">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
adapter.FillSchema(dataset, "AAA"); // Fills the schema of table "aaa" because only one similarly named table is in the DataSet.  
```  
  
 <span data-ttu-id="e6b9e-577"><xref:System.Data.IDbConnection> Select 命令相關聯的物件必須有效，但不需要開啟。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-577">The <xref:System.Data.IDbConnection> object associated with the select command must be valid, but it does not need to open.</span></span> <span data-ttu-id="e6b9e-578">如果<xref:System.Data.IDbConnection>前已關閉<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>是呼叫，它會開啟擷取資料，然後關閉。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-578">If the <xref:System.Data.IDbConnection> is closed before <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called, it is opened to retrieve data, then closed.</span></span> <span data-ttu-id="e6b9e-579">如果連接為開啟之前<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>是呼叫，它仍然為開啟狀態。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-579">If the connection is open before <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called, it is left open.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e6b9e-580">處理批次傳回多個結果，實作的 SQL 陳述式時<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>的.NET Framework Data Provider for OLE DB 擷取，只有第一個結果的結構描述資訊。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-580">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</span></span> <span data-ttu-id="e6b9e-581">若要擷取多個結果的結構描述資訊，請使用<xref:System.Data.Common.DbDataAdapter.Fill%2A>與<xref:System.Data.MissingSchemaAction>設`AddWithKey`。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-581">To retrieve schema information for multiple results, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> with the <xref:System.Data.MissingSchemaAction> set to `AddWithKey`.</span></span>  
  
 <span data-ttu-id="e6b9e-582">使用 <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 時，.NET Framework Data Provider for SQL Server 會將 FOR BROWSE 子句附加到正要執行的陳述式。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-582">When using <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, the .NET Framework Data Provider for SQL Server appends a FOR BROWSE clause to the statement being executed.</span></span> <span data-ttu-id="e6b9e-583">使用者應注意潛在的副作用，例如使用 SET FMTONLY ON 陳述式的干擾。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-583">The user should be aware of potential side effects, such as interference with the use of SET FMTONLY ON statements.</span></span> <span data-ttu-id="e6b9e-584">如需詳細資訊，請參閱《SQL Server 線上叢書》。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-584">See SQL Server Books Online for more information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e6b9e-585">下列範例會使用衍生的類別， <xref:System.Data.SqlClient.SqlDataAdapter>，以填滿<xref:System.Data.DataSet>與結構描述，以及傳回<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-585">The following example uses the derived class, <xref:System.Data.SqlClient.SqlDataAdapter>, to fill a <xref:System.Data.DataSet> with the schema, and returns a <xref:System.Data.DataSet>.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.FillSchema2 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.FillSchema2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.FillSchema2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.FillSchema2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e6b9e-586">找不到要從中取得結構描述的來源資料表。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-586">A source table from which to get the schema could not be found.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FillSchema">
      <MemberSignature Language="C#" Value="protected virtual System.Data.DataTable FillSchema (System.Data.DataTable dataTable, System.Data.SchemaType schemaType, System.Data.IDbCommand command, System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.DataTable FillSchema(class System.Data.DataTable dataTable, valuetype System.Data.SchemaType schemaType, class System.Data.IDbCommand command, valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDbCommand,System.Data.CommandBehavior)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Data::DataTable ^ FillSchema(System::Data::DataTable ^ dataTable, System::Data::SchemaType schemaType, System::Data::IDbCommand ^ command, System::Data::CommandBehavior behavior);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataTable" Type="System.Data.DataTable" />
        <Parameter Name="schemaType" Type="System.Data.SchemaType" />
        <Parameter Name="command" Type="System.Data.IDbCommand" />
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" />
      </Parameters>
      <Docs>
        <param name="dataTable"><span data-ttu-id="e6b9e-587"><see cref="T:System.Data.DataTable" />，以資料來源中的結構描述來填入其中。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-587">The <see cref="T:System.Data.DataTable" /> to be filled with the schema from the data source.</span></span></param>
        <param name="schemaType"><span data-ttu-id="e6b9e-588">其中一個 <see cref="T:System.Data.SchemaType" /> 值。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-588">One of the <see cref="T:System.Data.SchemaType" /> values.</span></span></param>
        <param name="command"><span data-ttu-id="e6b9e-589">用來從資料來源擷取資料列的 SQL SELECT 陳述式。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-589">The SQL SELECT statement used to retrieve rows from the data source.</span></span></param>
        <param name="behavior"><span data-ttu-id="e6b9e-590">其中一個 <see cref="T:System.Data.CommandBehavior" /> 值。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-590">One of the <see cref="T:System.Data.CommandBehavior" /> values.</span></span></param>
        <summary><span data-ttu-id="e6b9e-591">根據指定的 <see cref="T:System.Data.DataTable" />、命令字串和 <see cref="T:System.Data.SchemaType" /> 值，設定指定 <see cref="T:System.Data.CommandBehavior" /> 的結構描述。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-591">Configures the schema of the specified <see cref="T:System.Data.DataTable" /> based on the specified <see cref="T:System.Data.SchemaType" />, command string, and <see cref="T:System.Data.CommandBehavior" /> values.</span></span></summary>
        <returns><span data-ttu-id="e6b9e-592"><see cref="T:System.Data.DataTable" /> 物件，包含從資料來源傳回的結構描述資訊。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-592">A of <see cref="T:System.Data.DataTable" /> object that contains schema information returned from the data source.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6b9e-593"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A>方法會擷取從資料來源使用的結構描述<xref:System.Data.IDbDataAdapter.SelectCommand%2A>。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-593">The <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> method retrieves the schema from the data source using the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>.</span></span> <span data-ttu-id="e6b9e-594">連接物件相關聯<xref:System.Data.IDbDataAdapter.SelectCommand%2A>必須有效，但它不需要開啟。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-594">The connection object associated with the <xref:System.Data.IDbDataAdapter.SelectCommand%2A> must be valid, but it does not need to be open.</span></span> <span data-ttu-id="e6b9e-595">如果連接已關閉之前<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>是呼叫，它會開啟擷取資料，然後關閉。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-595">If the connection is closed before <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called, it is opened to retrieve data, then closed.</span></span> <span data-ttu-id="e6b9e-596">如果連接為開啟之前<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>是呼叫，它會保持開啟狀態。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-596">If the connection is open before <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="e6b9e-597">A<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>作業會將<xref:System.Data.DataTable>目的地<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-597">A <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> operation adds a <xref:System.Data.DataTable> to the destination <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="e6b9e-598">接著它會加入至資料行<xref:System.Data.DataColumnCollection>的<xref:System.Data.DataTable>，並設定下列<xref:System.Data.DataColumn>如果存在於資料來源的屬性：</span><span class="sxs-lookup"><span data-stu-id="e6b9e-598">It then adds columns to the <xref:System.Data.DataColumnCollection> of the <xref:System.Data.DataTable>, and configures the following <xref:System.Data.DataColumn> properties if they exist at the data source:</span></span>  
  
-   <xref:System.Data.DataColumn.AllowDBNull%2A>  
  
-   <span data-ttu-id="e6b9e-599"><xref:System.Data.DataColumn.AutoIncrement%2A>。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-599"><xref:System.Data.DataColumn.AutoIncrement%2A>.</span></span> <span data-ttu-id="e6b9e-600">您必須設定<xref:System.Data.DataColumn.AutoIncrementStep%2A>和<xref:System.Data.DataColumn.AutoIncrementSeed%2A>分開。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-600">You must set <xref:System.Data.DataColumn.AutoIncrementStep%2A> and <xref:System.Data.DataColumn.AutoIncrementSeed%2A> separately.</span></span>  
  
-   <xref:System.Data.DataColumn.MaxLength%2A>  
  
-   <xref:System.Data.DataColumn.ReadOnly%2A>  
  
-   <xref:System.Data.DataColumn.Unique%2A>  
  
 <span data-ttu-id="e6b9e-601"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 也會設定<xref:System.Data.DataTable.PrimaryKey%2A>和<xref:System.Data.DataTable.Constraints%2A>屬性根據下列規則：</span><span class="sxs-lookup"><span data-stu-id="e6b9e-601"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> also configures the <xref:System.Data.DataTable.PrimaryKey%2A> and <xref:System.Data.DataTable.Constraints%2A> properties according to the following rules:</span></span>  
  
-   <span data-ttu-id="e6b9e-602">如果一或多個主索引鍵資料行所傳回<xref:System.Data.IDbDataAdapter.SelectCommand%2A>，它們會做為主要索引鍵資料行<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-602">If one or more primary key columns are returned by the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>, they are used as the primary key columns for the <xref:System.Data.DataTable>.</span></span>  
  
-   <span data-ttu-id="e6b9e-603">如果傳回沒有主索引鍵資料行，但是唯一的資料行，唯一的資料行可用的主索引鍵，如果且只有唯一的資料行都不可為 null。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-603">If no primary key columns are returned but unique columns are, the unique columns are used as the primary key if, and only if, all the unique columns are nonnullable.</span></span> <span data-ttu-id="e6b9e-604">如果任何資料行可為 null，<xref:System.Data.UniqueConstraint>加入至<xref:System.Data.ConstraintCollection>，但<xref:System.Data.DataTable.PrimaryKey%2A>屬性未設定。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-604">If any of the columns are nullable, a <xref:System.Data.UniqueConstraint> is added to the <xref:System.Data.ConstraintCollection>, but the <xref:System.Data.DataTable.PrimaryKey%2A> property is not set.</span></span>  
  
-   <span data-ttu-id="e6b9e-605">如果傳回主要索引鍵資料行，唯一的資料行，將主索引鍵資料行做為主要索引鍵資料行<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-605">If both primary key columns and unique columns are returned, the primary key columns are used as the primary key columns for the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="e6b9e-606">請注意，會將主索引鍵和唯一條件約束加入至<xref:System.Data.ConstraintCollection>根據前述規則，但其他條件約束類型不會加入。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-606">Note that primary keys and unique constraints are added to the <xref:System.Data.ConstraintCollection> according to the preceding rules, but other constraint types are not added.</span></span>  
  
 <span data-ttu-id="e6b9e-607">如果唯一叢集索引上的資料行或 SQL Server 資料表中的資料行定義和叢集索引中的資料行的名稱將會傳回一組個別的資料行上定義主索引鍵條件約束。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-607">If a unique clustered index is defined on a column or columns in a SQL Server table and the primary key constraint is defined on a separate set of columns, then the names of the columns in the clustered index will be returned.</span></span> <span data-ttu-id="e6b9e-608">若要傳回的主索引鍵資料行的名稱，使用指定名稱的主索引鍵的 SELECT 陳述式中的查詢提示。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-608">To return the name or names of the primary key columns, use a query hint with the SELECT statement that specifies the name of the primary key index.</span></span> <span data-ttu-id="e6b9e-609">如需有關指定查詢提示的詳細資訊，請參閱[查詢提示 (TRANSACT-SQL)](http://msdn.microsoft.com/library/ms181714.aspx)。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-609">For more information about specifying query hints, see [Query Hint (Transact-SQL)](http://msdn.microsoft.com/library/ms181714.aspx).</span></span>  
  
 <span data-ttu-id="e6b9e-610">如果<xref:System.Data.IDataAdapter>遇到重複的資料行在填入<xref:System.Data.DataTable>，它會產生後續的資料行，並使用模式的名稱"*columnname*1"，"*columnname*2"，"*columnname*3"等等。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-610">If the <xref:System.Data.IDataAdapter> encounters duplicate columns while populating a <xref:System.Data.DataTable>, it generates names for the subsequent columns, using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="e6b9e-611">如果內送資料中包含未命名資料行，它們會放置於<xref:System.Data.DataSet>根據模式"Column1"、"Column2"，等等。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-611">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span> <span data-ttu-id="e6b9e-612">當多個結果集加入至<xref:System.Data.DataSet>放置於個別的資料表中每個結果集。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-612">When multiple result sets are added to the <xref:System.Data.DataSet> each result set is placed in a separate table.</span></span> <span data-ttu-id="e6b9e-613">其他結果集的命名方式是附加至指定的資料表名稱 （例如，"Table"、"Table1"、"Table2"等。） 的整數值。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-613">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on.).</span></span> <span data-ttu-id="e6b9e-614">使用資料行和資料表名稱的應用程式應確保這些命名模式衝突不會發生。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-614">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="e6b9e-615"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 不會傳回任何資料列。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-615"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> does not return any rows.</span></span> <span data-ttu-id="e6b9e-616">使用<xref:System.Data.Common.DbDataAdapter.Fill%2A>方法，以將資料列加入<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-616">Use the <xref:System.Data.Common.DbDataAdapter.Fill%2A> method to add rows to a <xref:System.Data.DataTable>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e6b9e-617">處理批次傳回多個結果，實作的 SQL 陳述式時<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>的.NET Framework Data Provider for OLE DB 擷取，只有第一個結果的結構描述資訊。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-617">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</span></span> <span data-ttu-id="e6b9e-618">若要擷取多個結果的結構描述資訊，請使用<xref:System.Data.Common.DbDataAdapter.Fill%2A>與<xref:System.Data.MissingSchemaAction>設`AddWithKey`。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-618">To retrieve schema information for multiple results, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> with the <xref:System.Data.MissingSchemaAction> set to `AddWithKey`.</span></span>  
  
 <span data-ttu-id="e6b9e-619">使用 <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 時，.NET Framework Data Provider for SQL Server 會將 FOR BROWSE 子句附加到正要執行的陳述式。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-619">When using <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, the .NET Framework Data Provider for SQL Server appends a FOR BROWSE clause to the statement being executed.</span></span> <span data-ttu-id="e6b9e-620">使用者應注意潛在的副作用，例如使用 SET FMTONLY ON 陳述式的干擾。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-620">The user should be aware of potential side effects, such as interference with the use of SET FMTONLY ON statements.</span></span> <span data-ttu-id="e6b9e-621">如需詳細資訊，請參閱《SQL Server 線上叢書》。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-621">See SQL Server Books Online for more information.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="e6b9e-622">這項實作<see cref="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)" />被保護的設計為使用.NET Framework 資料提供者方法。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-622">This implementation of the <see cref="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)" /> method is protected and is designed for use by a .NET Framework data provider.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="FillSchema">
      <MemberSignature Language="C#" Value="protected virtual System.Data.DataTable[] FillSchema (System.Data.DataSet dataSet, System.Data.SchemaType schemaType, System.Data.IDbCommand command, string srcTable, System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.DataTable[] FillSchema(class System.Data.DataSet dataSet, valuetype System.Data.SchemaType schemaType, class System.Data.IDbCommand command, string srcTable, valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.Data.IDbCommand,System.String,System.Data.CommandBehavior)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual cli::array &lt;System::Data::DataTable ^&gt; ^ FillSchema(System::Data::DataSet ^ dataSet, System::Data::SchemaType schemaType, System::Data::IDbCommand ^ command, System::String ^ srcTable, System::Data::CommandBehavior behavior);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
        <Parameter Name="schemaType" Type="System.Data.SchemaType" />
        <Parameter Name="command" Type="System.Data.IDbCommand" />
        <Parameter Name="srcTable" Type="System.String" />
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" />
      </Parameters>
      <Docs>
        <param name="dataSet"><span data-ttu-id="e6b9e-623"><see cref="T:System.Data.DataSet" />，以資料來源中的結構描述來填入其中。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-623">The <see cref="T:System.Data.DataSet" /> to be filled with the schema from the data source.</span></span></param>
        <param name="schemaType"><span data-ttu-id="e6b9e-624">其中一個 <see cref="T:System.Data.SchemaType" /> 值。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-624">One of the <see cref="T:System.Data.SchemaType" /> values.</span></span></param>
        <param name="command"><span data-ttu-id="e6b9e-625">用來從資料來源擷取資料列的 SQL SELECT 陳述式。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-625">The SQL SELECT statement used to retrieve rows from the data source.</span></span></param>
        <param name="srcTable"><span data-ttu-id="e6b9e-626">用於資料表對應的來源資料表名稱。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-626">The name of the source table to use for table mapping.</span></span></param>
        <param name="behavior"><span data-ttu-id="e6b9e-627">其中一個 <see cref="T:System.Data.CommandBehavior" /> 值。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-627">One of the <see cref="T:System.Data.CommandBehavior" /> values.</span></span></param>
        <summary><span data-ttu-id="e6b9e-628">將 <see cref="T:System.Data.DataTable" /> 加入至指定的 <see cref="T:System.Data.DataSet" />，並且根據指定的 <see cref="T:System.Data.SchemaType" /> 設定結構描述，以符合資料來源中的資料表。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-628">Adds a <see cref="T:System.Data.DataTable" /> to the specified <see cref="T:System.Data.DataSet" /> and configures the schema to match that in the data source based on the specified <see cref="T:System.Data.SchemaType" />.</span></span></summary>
        <returns><span data-ttu-id="e6b9e-629"><see cref="T:System.Data.DataTable" /> 物件的陣列，包含從資料來源傳回的結構描述資訊。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-629">An array of <see cref="T:System.Data.DataTable" /> objects that contain schema information returned from the data source.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6b9e-630"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A>方法會擷取從資料來源使用的結構描述<xref:System.Data.IDbDataAdapter.SelectCommand%2A>。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-630">The <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> method retrieves the schema from the data source using the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>.</span></span> <span data-ttu-id="e6b9e-631">連接物件相關聯<xref:System.Data.IDbDataAdapter.SelectCommand%2A>必須有效，但它不需要開啟。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-631">The connection object associated with the <xref:System.Data.IDbDataAdapter.SelectCommand%2A> must be valid, but it does not need to be open.</span></span> <span data-ttu-id="e6b9e-632">如果連接已關閉之前<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>是呼叫，它會開啟擷取資料，然後關閉。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-632">If the connection is closed before <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called, it is opened to retrieve data, then closed.</span></span> <span data-ttu-id="e6b9e-633">如果連接為開啟之前<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>是呼叫，它會保持開啟狀態。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-633">If the connection is open before <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="e6b9e-634">A<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>作業會將<xref:System.Data.DataTable>目的地<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-634">A <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> operation adds a <xref:System.Data.DataTable> to the destination <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="e6b9e-635">接著它會加入至資料行<xref:System.Data.DataColumnCollection>的<xref:System.Data.DataTable>，並設定下列<xref:System.Data.DataColumn>如果存在於資料來源的屬性：</span><span class="sxs-lookup"><span data-stu-id="e6b9e-635">It then adds columns to the <xref:System.Data.DataColumnCollection> of the <xref:System.Data.DataTable>, and configures the following <xref:System.Data.DataColumn> properties if they exist at the data source:</span></span>  
  
-   <xref:System.Data.DataColumn.AllowDBNull%2A>  
  
-   <span data-ttu-id="e6b9e-636"><xref:System.Data.DataColumn.AutoIncrement%2A>。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-636"><xref:System.Data.DataColumn.AutoIncrement%2A>.</span></span> <span data-ttu-id="e6b9e-637">您必須設定<xref:System.Data.DataColumn.AutoIncrementStep%2A>和<xref:System.Data.DataColumn.AutoIncrementSeed%2A>分開。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-637">You must set <xref:System.Data.DataColumn.AutoIncrementStep%2A> and <xref:System.Data.DataColumn.AutoIncrementSeed%2A> separately.</span></span>  
  
-   <xref:System.Data.DataColumn.MaxLength%2A>  
  
-   <xref:System.Data.DataColumn.ReadOnly%2A>  
  
-   <xref:System.Data.DataColumn.Unique%2A>  
  
 <span data-ttu-id="e6b9e-638"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 也會設定<xref:System.Data.DataTable.PrimaryKey%2A>和<xref:System.Data.DataTable.Constraints%2A>屬性根據下列規則：</span><span class="sxs-lookup"><span data-stu-id="e6b9e-638"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> also configures the <xref:System.Data.DataTable.PrimaryKey%2A> and <xref:System.Data.DataTable.Constraints%2A> properties according to the following rules:</span></span>  
  
-   <span data-ttu-id="e6b9e-639">如果一或多個主索引鍵資料行所傳回<xref:System.Data.IDbDataAdapter.SelectCommand%2A>，它們會做為主要索引鍵資料行<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-639">If one or more primary key columns are returned by the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>, they are used as the primary key columns for the <xref:System.Data.DataTable>.</span></span>  
  
-   <span data-ttu-id="e6b9e-640">如果傳回沒有主索引鍵資料行，但是唯一的資料行，唯一的資料行可用的主索引鍵，如果且只有唯一的資料行都不可為 null。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-640">If no primary key columns are returned but unique columns are, the unique columns are used as the primary key if, and only if, all the unique columns are nonnullable.</span></span> <span data-ttu-id="e6b9e-641">如果任何資料行可為 null，<xref:System.Data.UniqueConstraint>加入至<xref:System.Data.ConstraintCollection>，但<xref:System.Data.DataTable.PrimaryKey%2A>屬性未設定。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-641">If any of the columns are nullable, a <xref:System.Data.UniqueConstraint> is added to the <xref:System.Data.ConstraintCollection>, but the <xref:System.Data.DataTable.PrimaryKey%2A> property is not set.</span></span>  
  
-   <span data-ttu-id="e6b9e-642">如果傳回主要索引鍵資料行，唯一的資料行，將主索引鍵資料行做為主要索引鍵資料行<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-642">If both primary key columns and unique columns are returned, the primary key columns are used as the primary key columns for the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="e6b9e-643">請注意，會將主索引鍵和唯一條件約束加入至<xref:System.Data.ConstraintCollection>根據前述規則，但其他條件約束類型不會加入。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-643">Note that primary keys and unique constraints are added to the <xref:System.Data.ConstraintCollection> according to the preceding rules, but other constraint types are not added.</span></span>  
  
 <span data-ttu-id="e6b9e-644">如果唯一叢集索引上的資料行或 SQL Server 資料表中的資料行定義和叢集索引中的資料行的名稱將會傳回一組個別的資料行上定義主索引鍵條件約束。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-644">If a unique clustered index is defined on a column or columns in a SQL Server table and the primary key constraint is defined on a separate set of columns, then the names of the columns in the clustered index will be returned.</span></span> <span data-ttu-id="e6b9e-645">若要傳回的主索引鍵資料行的名稱，使用指定名稱的主索引鍵的 SELECT 陳述式中的查詢提示。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-645">To return the name or names of the primary key columns, use a query hint with the SELECT statement that specifies the name of the primary key index.</span></span> <span data-ttu-id="e6b9e-646">如需有關指定查詢提示的詳細資訊，請參閱[查詢提示 (TRANSACT-SQL)](http://msdn.microsoft.com/library/ms181714.aspx)。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-646">For more information about specifying query hints, see [Query Hint (Transact-SQL)](http://msdn.microsoft.com/library/ms181714.aspx).</span></span>  
  
 <span data-ttu-id="e6b9e-647">如果<xref:System.Data.IDataAdapter>遇到重複的資料行在填入<xref:System.Data.DataTable>，它會產生後續的資料行，並使用模式的名稱"*columnname*1"，"*columnname*2"，"*columnname*3"等等。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-647">If the <xref:System.Data.IDataAdapter> encounters duplicate columns while populating a <xref:System.Data.DataTable>, it generates names for the subsequent columns, using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="e6b9e-648">如果內送資料中包含未命名資料行，它們會放置於<xref:System.Data.DataSet>根據模式"Column1"、"Column2"，等等。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-648">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span> <span data-ttu-id="e6b9e-649">當多個結果集加入至<xref:System.Data.DataSet>放置於個別的資料表中每個結果集。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-649">When multiple result sets are added to the <xref:System.Data.DataSet> each result set is placed in a separate table.</span></span> <span data-ttu-id="e6b9e-650">其他結果集的命名方式是附加至指定的資料表名稱 （例如，"Table"、"Table1"、"Table2"等。） 的整數值。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-650">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on.).</span></span> <span data-ttu-id="e6b9e-651">使用資料行和資料表名稱的應用程式應確保這些命名模式衝突不會發生。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-651">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="e6b9e-652"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A>方法支援案例其中<xref:System.Data.DataSet>包含多個<xref:System.Data.DataTable>名稱只有大小寫不同的物件。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-652">The <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> method supports scenarios where the <xref:System.Data.DataSet> contains multiple <xref:System.Data.DataTable> objects whose names differ only by case.</span></span> <span data-ttu-id="e6b9e-653">在這種情況下，<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>執行區分大小寫的比較，來尋找對應的資料表，並建立新的資料表，如果沒有完全相符項目存在。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-653">In such situations, <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> performs a case-sensitive comparison to find the corresponding table, and creates a new table if no exact match exists.</span></span> <span data-ttu-id="e6b9e-654">下列 C# 程式碼說明這個行為。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-654">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
dataset.Tables.Add("AAA");  
adapter.FillSchema(dataset, "aaa"); // Fills the schema of "aaa", which already exists in the DataSet.  
adapter.FillSchema(dataset, "Aaa"); // Adds a new table called "Aaa".  
```  
  
 <span data-ttu-id="e6b9e-655">如果<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>稱為和<xref:System.Data.DataSet>只包含<xref:System.Data.DataTable>名稱只有大小寫不同的<xref:System.Data.DataTable>會更新。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-655">If <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called and the <xref:System.Data.DataSet> contains only one <xref:System.Data.DataTable> whose name differs only by case, that <xref:System.Data.DataTable> is updated.</span></span> <span data-ttu-id="e6b9e-656">在此案例中，這個比較是不區分大小寫。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-656">In this scenario, the comparison is case insensitive.</span></span> <span data-ttu-id="e6b9e-657">下列 C# 程式碼說明這個行為。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-657">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
adapter.FillSchema(dataset, "AAA"); // Fills the schema of table "aaa" because only one similarly named table is in the DataSet.  
```  
  
 <span data-ttu-id="e6b9e-658"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 不會傳回任何資料列。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-658"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> does not return any rows.</span></span> <span data-ttu-id="e6b9e-659">使用<xref:System.Data.Common.DbDataAdapter.Fill%2A>方法，以將資料列加入<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-659">Use the <xref:System.Data.Common.DbDataAdapter.Fill%2A> method to add rows to a <xref:System.Data.DataTable>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e6b9e-660">處理批次傳回多個結果，實作的 SQL 陳述式時<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>的.NET Framework Data Provider for OLE DB 擷取，只有第一個結果的結構描述資訊。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-660">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</span></span> <span data-ttu-id="e6b9e-661">若要擷取多個結果的結構描述資訊，請使用<xref:System.Data.Common.DbDataAdapter.Fill%2A>與<xref:System.Data.MissingSchemaAction>設`AddWithKey`。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-661">To retrieve schema information for multiple results, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> with the <xref:System.Data.MissingSchemaAction> set to `AddWithKey`.</span></span>  
  
 <span data-ttu-id="e6b9e-662">使用 <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 時，.NET Framework Data Provider for SQL Server 會將 FOR BROWSE 子句附加到正要執行的陳述式。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-662">When using <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, the .NET Framework Data Provider for SQL Server appends a FOR BROWSE clause to the statement being executed.</span></span> <span data-ttu-id="e6b9e-663">使用者應注意潛在的副作用，例如使用 SET FMTONLY ON 陳述式的干擾。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-663">The user should be aware of potential side effects, such as interference with the use of SET FMTONLY ON statements.</span></span> <span data-ttu-id="e6b9e-664">如需詳細資訊，請參閱《SQL Server 線上叢書》。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-664">See SQL Server Books Online for more information.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="e6b9e-665">這項實作<see cref="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)" />被保護的設計為使用.NET Framework 資料提供者方法。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-665">This implementation of the <see cref="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)" /> method is protected and is designed for use by a .NET Framework data provider.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetBatchedParameter">
      <MemberSignature Language="C#" Value="protected virtual System.Data.IDataParameter GetBatchedParameter (int commandIdentifier, int parameterIndex);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.IDataParameter GetBatchedParameter(int32 commandIdentifier, int32 parameterIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.GetBatchedParameter(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetBatchedParameter (commandIdentifier As Integer, parameterIndex As Integer) As IDataParameter" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Data::IDataParameter ^ GetBatchedParameter(int commandIdentifier, int parameterIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDataParameter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandIdentifier" Type="System.Int32" />
        <Parameter Name="parameterIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="commandIdentifier"><span data-ttu-id="e6b9e-666">要從其中擷取參數的命令索引。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-666">The index of the command to retrieve the parameter from.</span></span></param>
        <param name="parameterIndex"><span data-ttu-id="e6b9e-667">命令內參數的索引。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-667">The index of the parameter within the command.</span></span></param>
        <summary><span data-ttu-id="e6b9e-668">從目前批次中的其中一個命令傳回 <see cref="T:System.Data.IDataParameter" />。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-668">Returns a <see cref="T:System.Data.IDataParameter" /> from one of the commands in the current batch.</span></span></summary>
        <returns><span data-ttu-id="e6b9e-669">指定的 <see cref="T:System.Data.IDataParameter" />。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-669">The <see cref="T:System.Data.IDataParameter" /> specified.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6b9e-670">在<xref:System.Data.Common.DbDataAdapter>，這個方法會擲回<xref:System.NotSupportedException>。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-670">In <xref:System.Data.Common.DbDataAdapter>, this method throws <xref:System.NotSupportedException>.</span></span> <span data-ttu-id="e6b9e-671">類別繼承自<xref:System.Data.Common.DbDataAdapter>覆寫這個方法以提供支援批次。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-671">Classes that inherit from <xref:System.Data.Common.DbDataAdapter> override this method to provide support for batches.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="e6b9e-672">配置器不支援批次。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-672">The adapter does not support batches.</span></span></exception>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="e6b9e-673">這個方法受到保護，可供使用的.NET Framework 資料提供者。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-673">This method is protected and is designed for use by a .NET Framework data provider.</span></span>  
  
 <span data-ttu-id="e6b9e-674">如果類別繼承自<see cref="T:System.Data.Common.DbDataAdapter" />支援批次，該類別會覆寫此方法可讓使用者執行批次。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-674">If a class that inherits from <see cref="T:System.Data.Common.DbDataAdapter" /> supports batches, that class overrides this method to allow users to execute a batch.</span></span> <span data-ttu-id="e6b9e-675">實作會使用<paramref name="commandIdentifier" />提供尋找要求的命令，然後使用<paramref name="parameterIndex" />來尋找所要求的參數提供。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-675">An implementation uses the <paramref name="commandIdentifier" /> provided to locate the requested command, then uses the <paramref name="parameterIndex" /> provided to locate the requested parameter.</span></span> <span data-ttu-id="e6b9e-676">例如，<paramref name="commandIdentifier" />的 0 和<paramref name="parameterIndex" />為 0 會傳回第一個參數從批次中第一個命令。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-676">For example, a <paramref name="commandIdentifier" /> of 0 and a <paramref name="parameterIndex" /> of 0 returns the first parameter from the first command in the batch.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetBatchedRecordsAffected">
      <MemberSignature Language="C#" Value="protected virtual bool GetBatchedRecordsAffected (int commandIdentifier, out int recordsAffected, out Exception error);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool GetBatchedRecordsAffected(int32 commandIdentifier, [out] int32&amp; recordsAffected, [out] class System.Exception&amp; error) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.GetBatchedRecordsAffected(System.Int32,System.Int32@,System.Exception@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetBatchedRecordsAffected (commandIdentifier As Integer, ByRef recordsAffected As Integer, ByRef error As Exception) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool GetBatchedRecordsAffected(int commandIdentifier, [Runtime::InteropServices::Out] int % recordsAffected, [Runtime::InteropServices::Out] Exception ^ % error);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandIdentifier" Type="System.Int32" />
        <Parameter Name="recordsAffected" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="error" Type="System.Exception&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="commandIdentifier"><span data-ttu-id="e6b9e-677">批次中個別命令之以零為基礎的資料行序數。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-677">The zero-based column ordinal of the individual command within the batch.</span></span></param>
        <param name="recordsAffected"><span data-ttu-id="e6b9e-678">資料存放區中受批次內指定命令影響的資料行數目。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-678">The number of rows affected in the data store by the specified command within the batch.</span></span></param>
        <param name="error"><span data-ttu-id="e6b9e-679">在指定命令的執行期間所擲回的 <see cref="T:System.Exception" />。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-679">An <see cref="T:System.Exception" /> thrown during execution of the specified command.</span></span> <span data-ttu-id="e6b9e-680">如果未擲回例外狀況，則傳回 <see langword="null" /> (在 Visual Basic 中為 <see langword="Nothing" />)。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-680">Returns <see langword="null" /> (<see langword="Nothing" /> in Visual Basic) if no exception is thrown.</span></span></param>
        <summary><span data-ttu-id="e6b9e-681">傳回在較大之批次更新中嘗試個別更新的相關資訊。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-681">Returns information about an individual update attempt within a larger batched update.</span></span></summary>
        <returns><span data-ttu-id="e6b9e-682">在較大批次更新內個別更新嘗試的相關資訊。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-682">Information about an individual update attempt within a larger batched update.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6b9e-683">支援批次更新邏輯的資料提供者必須覆寫虛擬方法的一連串<xref:System.Data.Common.DbDataAdapter>類別。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-683">Data providers that support batched updating logic must override a series of virtual methods on the <xref:System.Data.Common.DbDataAdapter> class.</span></span> <span data-ttu-id="e6b9e-684">`GetBatchedRecordsAffected` 代表其中一個這些虛擬方法。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-684">`GetBatchedRecordsAffected` represents one of those virtual methods.</span></span> <span data-ttu-id="e6b9e-685">`DbDataAdapter`類別會倚賴`GetBatchedRecordsAffected`來判斷成功或失敗的批次內的個別更新嘗試，因此它可以將標記各有一個對應<xref:System.Data.DataRow>據此。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-685">The `DbDataAdapter` class relies on `GetBatchedRecordsAffected` to determine the success or failure of individual update attempts within a batch so it can mark each corresponding <xref:System.Data.DataRow> accordingly.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFillParameters">
      <MemberSignature Language="C#" Value="public override System.Data.IDataParameter[] GetFillParameters ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.IDataParameter[] GetFillParameters() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.GetFillParameters" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetFillParameters () As IDataParameter()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Data::IDataParameter ^&gt; ^ GetFillParameters();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataAdapter.GetFillParameters</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.IDataParameter[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e6b9e-686">取得在執行 SQL SELECT 陳述式時由使用者設定的參數。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-686">Gets the parameters set by the user when executing an SQL SELECT statement.</span></span></summary>
        <returns><span data-ttu-id="e6b9e-687"><see cref="T:System.Data.IDataParameter" /> 物件的陣列，含有由使用者設定的參數。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-687">An array of <see cref="T:System.Data.IDataParameter" /> objects that contains the parameters set by the user.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeBatching">
      <MemberSignature Language="C#" Value="protected virtual void InitializeBatching ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InitializeBatching() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.InitializeBatching" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub InitializeBatching ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void InitializeBatching();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e6b9e-688">初始化 <see cref="T:System.Data.Common.DbDataAdapter" /> 的批次處理。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-688">Initializes batching for the <see cref="T:System.Data.Common.DbDataAdapter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6b9e-689">在<xref:System.Data.Common.DbDataAdapter>，這個方法會擲回<xref:System.NotSupportedException>。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-689">In <xref:System.Data.Common.DbDataAdapter>, this method throws <xref:System.NotSupportedException>.</span></span> <span data-ttu-id="e6b9e-690">類別繼承自<xref:System.Data.Common.DbDataAdapter>覆寫這個方法以提供支援批次。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-690">Classes that inherit from <xref:System.Data.Common.DbDataAdapter> override this method to provide support for batches.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="e6b9e-691">配置器不支援批次。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-691">The adapter does not support batches.</span></span></exception>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="e6b9e-692">這個方法受到保護，可供使用的.NET Framework 資料提供者。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-692">This method is protected and is designed for use by a .NET Framework data provider.</span></span>  
  
 <span data-ttu-id="e6b9e-693">如果類別繼承自<see cref="T:System.Data.Common.DbDataAdapter" />支援批次，該類別會覆寫這個方法。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-693">If a class that inherits from <see cref="T:System.Data.Common.DbDataAdapter" /> supports batches, that class overrides this method.</span></span> <span data-ttu-id="e6b9e-694">這個方法可讓類別有機會初始化支援批次處理所需的任何資源。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-694">This method gives the class the opportunity to initialize any resources necessary to support batching.</span></span> <span data-ttu-id="e6b9e-695">例如，類別可能會配置來保存命令集的批次中的資料結構。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-695">For example, a class may allocate a data structure to hold the set of commands in the batch.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="InsertCommand">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbCommand InsertCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbCommand InsertCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataAdapter.InsertCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property InsertCommand As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Common::DbCommand ^ InsertCommand { System::Data::Common::DbCommand ^ get(); void set(System::Data::Common::DbCommand ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e6b9e-696">取得或設定用來將新的資料錄插入至資料來源的命令。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-696">Gets or sets a command used to insert new records into the data source.</span></span></summary>
        <value><span data-ttu-id="e6b9e-697"><see cref="T:System.Data.IDbCommand" />，在 <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> 期間用來為資料集中新的資料列插入在資料來源中的資料錄。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-697">A <see cref="T:System.Data.IDbCommand" /> used during <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> to insert records in the data source for new rows in the data set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6b9e-698">期間<xref:System.Data.Common.DbDataAdapter.Update%2A>，如果沒有設定這個屬性，並且出現在主索引鍵資訊<xref:System.Data.DataSet>、<xref:System.Data.IDbDataAdapter.InsertCommand%2A>就會自動產生。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-698">During <xref:System.Data.Common.DbDataAdapter.Update%2A>, if this property is not set and primary key information is present in the <xref:System.Data.DataSet>, the <xref:System.Data.IDbDataAdapter.InsertCommand%2A> will be automatically generated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e6b9e-699">下列範例會建立衍生的類別<xref:System.Data.OleDb.OleDbDataAdapter>並設定其屬性的某些。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-699">The following example creates the derived class <xref:System.Data.OleDb.OleDbDataAdapter> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.InsertCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.InsertCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.InsertCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.InsertCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnRowUpdated">
      <MemberSignature Language="C#" Value="protected virtual void OnRowUpdated (System.Data.Common.RowUpdatedEventArgs value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowUpdated(class System.Data.Common.RowUpdatedEventArgs value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowUpdated (value As RowUpdatedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowUpdated(System::Data::Common::RowUpdatedEventArgs ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.Common.RowUpdatedEventArgs" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="e6b9e-700"><see cref="T:System.Data.Common.RowUpdatedEventArgs" />，其中包含事件資料。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-700">A <see cref="T:System.Data.Common.RowUpdatedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="e6b9e-701">引發 .NET Framework 資料提供者的 <see langword="RowUpdated" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-701">Raises the <see langword="RowUpdated" /> event of a .NET Framework data provider.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6b9e-702">引發事件會透過委派叫用此事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-702">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="e6b9e-703">如需概觀，請參閱[處理和引發事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-703">For an overview, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="e6b9e-704">在覆寫<see cref="M:System.Data.Common.DbDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)" />在衍生類別中，請務必呼叫基底類別的<see cref="M:System.Data.Common.DbDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)" />方法。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-704">When overriding <see cref="M:System.Data.Common.DbDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Data.Common.DbDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)" /> method.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnRowUpdating">
      <MemberSignature Language="C#" Value="protected virtual void OnRowUpdating (System.Data.Common.RowUpdatingEventArgs value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowUpdating(class System.Data.Common.RowUpdatingEventArgs value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowUpdating (value As RowUpdatingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowUpdating(System::Data::Common::RowUpdatingEventArgs ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.Common.RowUpdatingEventArgs" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="e6b9e-705">包含事件資料的 <see cref="T:System.Data.Common.RowUpdatingEventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-705">An <see cref="T:System.Data.Common.RowUpdatingEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="e6b9e-706">引發 .NET Framework 資料提供者的 <see langword="RowUpdating" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-706">Raises the <see langword="RowUpdating" /> event of a .NET Framework data provider.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6b9e-707">引發事件會透過委派叫用此事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-707">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="e6b9e-708">如需概觀，請參閱[處理和引發事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-708">For an overview, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="e6b9e-709">在覆寫<see cref="M:System.Data.Common.DbDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)" />在衍生類別中，請務必呼叫基底類別的<see cref="M:System.Data.Common.DbDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)" />方法。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-709">When overriding <see cref="M:System.Data.Common.DbDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)" /> in a derived class, be sure to call the bases class's <see cref="M:System.Data.Common.DbDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)" /> method.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="SelectCommand">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbCommand SelectCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbCommand SelectCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataAdapter.SelectCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectCommand As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Common::DbCommand ^ SelectCommand { System::Data::Common::DbCommand ^ get(); void set(System::Data::Common::DbCommand ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e6b9e-710">取得或設定用來在資料來源中選取資料錄的命令。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-710">Gets or sets a command used to select records in the data source.</span></span></summary>
        <value><span data-ttu-id="e6b9e-711"><see cref="T:System.Data.IDbCommand" />，在 <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> 期間用來為資料集中的位置從資料來源選取資料錄。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-711">A <see cref="T:System.Data.IDbCommand" /> that is used during <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> to select records from data source for placement in the data set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e6b9e-712">下列範例會建立衍生的類別<xref:System.Data.OleDb.OleDbDataAdapter>並設定其屬性的某些。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-712">The following example creates the derived class <xref:System.Data.OleDb.OleDbDataAdapter> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.SelectCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.SelectCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.SelectCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.SelectCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbDataAdapter.DeleteCommand">
      <MemberSignature Language="C#" Value="System.Data.IDbCommand System.Data.IDbDataAdapter.DeleteCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand System.Data.IDbDataAdapter.DeleteCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#DeleteCommand" />
      <MemberSignature Language="VB.NET" Value=" Property DeleteCommand As IDbCommand Implements IDbDataAdapter.DeleteCommand" />
      <MemberSignature Language="C++ CLI" Value="property System::Data::IDbCommand ^ System.Data.IDbDataAdapter.DeleteCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataAdapter.DeleteCommand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e6b9e-713">取得或設定 SQL 陳述式從資料集刪除資料錄。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-713">Gets or sets an SQL statement for deleting records from the data set.</span></span></summary>
        <value><span data-ttu-id="e6b9e-714"><see cref="T:System.Data.IDbCommand" />，在 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> 期間用來為資料集中所刪除的資料列刪除在資料來源中的資料錄。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-714">An <see cref="T:System.Data.IDbCommand" /> used during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> to delete records in the data source for deleted rows in the data set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6b9e-715">這個成員是明確介面成員實作，</span><span class="sxs-lookup"><span data-stu-id="e6b9e-715">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="e6b9e-716">只有在 <xref:System.Data.Common.DbDataAdapter> 執行個體轉換成 <xref:System.Data.IDbDataAdapter> 介面時，才能使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-716">It can be used only when the <xref:System.Data.Common.DbDataAdapter> instance is cast to an <xref:System.Data.IDbDataAdapter> interface.</span></span>  
  
 <span data-ttu-id="e6b9e-717">如需詳細資訊，請參閱<xref:System.Data.IDbDataAdapter.DeleteCommand%2A>。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-717">For more information, see <xref:System.Data.IDbDataAdapter.DeleteCommand%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbDataAdapter.InsertCommand">
      <MemberSignature Language="C#" Value="System.Data.IDbCommand System.Data.IDbDataAdapter.InsertCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand System.Data.IDbDataAdapter.InsertCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#InsertCommand" />
      <MemberSignature Language="VB.NET" Value=" Property InsertCommand As IDbCommand Implements IDbDataAdapter.InsertCommand" />
      <MemberSignature Language="C++ CLI" Value="property System::Data::IDbCommand ^ System.Data.IDbDataAdapter.InsertCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataAdapter.InsertCommand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e6b9e-718">取得或設定用來將新的資料錄插入至資料來源的 SQL 陳述式。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-718">Gets or sets an SQL statement used to insert new records into the data source.</span></span></summary>
        <value><span data-ttu-id="e6b9e-719"><see cref="T:System.Data.IDbCommand" />，在 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> 期間用來為資料集中新的資料列插入在資料來源中的資料錄。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-719">An <see cref="T:System.Data.IDbCommand" /> used during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> to insert records in the data source for new rows in the data set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6b9e-720">這個成員是明確介面成員實作，</span><span class="sxs-lookup"><span data-stu-id="e6b9e-720">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="e6b9e-721">只有在 <xref:System.Data.Common.DbDataAdapter> 執行個體轉換成 <xref:System.Data.IDbDataAdapter> 介面時，才能使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-721">It can be used only when the <xref:System.Data.Common.DbDataAdapter> instance is cast to an <xref:System.Data.IDbDataAdapter> interface.</span></span>  
  
 <span data-ttu-id="e6b9e-722">如需詳細資訊，請參閱<xref:System.Data.IDbDataAdapter.InsertCommand%2A>。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-722">For more information, see <xref:System.Data.IDbDataAdapter.InsertCommand%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbDataAdapter.SelectCommand">
      <MemberSignature Language="C#" Value="System.Data.IDbCommand System.Data.IDbDataAdapter.SelectCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand System.Data.IDbDataAdapter.SelectCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#SelectCommand" />
      <MemberSignature Language="VB.NET" Value=" Property SelectCommand As IDbCommand Implements IDbDataAdapter.SelectCommand" />
      <MemberSignature Language="C++ CLI" Value="property System::Data::IDbCommand ^ System.Data.IDbDataAdapter.SelectCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataAdapter.SelectCommand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e6b9e-723">取得或設定用來在資料來源中選取資料錄的 SQL 陳述式。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-723">Gets or sets an SQL statement used to select records in the data source.</span></span></summary>
        <value><span data-ttu-id="e6b9e-724"><see cref="T:System.Data.IDbCommand" />，在 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> 期間用來為資料集中的位置從資料來源選取資料錄。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-724">An <see cref="T:System.Data.IDbCommand" /> that is used during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> to select records from data source for placement in the data set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6b9e-725">這個成員是明確介面成員實作，</span><span class="sxs-lookup"><span data-stu-id="e6b9e-725">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="e6b9e-726">只有在 <xref:System.Data.Common.DbDataAdapter> 執行個體轉換成 <xref:System.Data.IDbDataAdapter> 介面時，才能使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-726">It can be used only when the <xref:System.Data.Common.DbDataAdapter> instance is cast to an <xref:System.Data.IDbDataAdapter> interface.</span></span>  
  
 <span data-ttu-id="e6b9e-727">如需詳細資訊，請參閱<xref:System.Data.IDbDataAdapter.SelectCommand%2A>。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-727">For more information, see <xref:System.Data.IDbDataAdapter.SelectCommand%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbDataAdapter.UpdateCommand">
      <MemberSignature Language="C#" Value="System.Data.IDbCommand System.Data.IDbDataAdapter.UpdateCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand System.Data.IDbDataAdapter.UpdateCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#UpdateCommand" />
      <MemberSignature Language="VB.NET" Value=" Property UpdateCommand As IDbCommand Implements IDbDataAdapter.UpdateCommand" />
      <MemberSignature Language="C++ CLI" Value="property System::Data::IDbCommand ^ System.Data.IDbDataAdapter.UpdateCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataAdapter.UpdateCommand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e6b9e-728">取得或設定用來在資料來源中更新資料錄的 SQL 陳述式。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-728">Gets or sets an SQL statement used to update records in the data source.</span></span></summary>
        <value><span data-ttu-id="e6b9e-729"><see cref="T:System.Data.IDbCommand" />，在 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> 期間用來為資料集中所修改的資料列更新在資料來源中的資料錄。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-729">An <see cref="T:System.Data.IDbCommand" /> used during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> to update records in the data source for modified rows in the data set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6b9e-730">這個成員是明確介面成員實作，</span><span class="sxs-lookup"><span data-stu-id="e6b9e-730">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="e6b9e-731">只有在 <xref:System.Data.Common.DbDataAdapter> 執行個體轉換成 <xref:System.Data.IDbDataAdapter> 介面時，才能使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-731">It can be used only when the <xref:System.Data.Common.DbDataAdapter> instance is cast to an <xref:System.Data.IDbDataAdapter> interface.</span></span>  
  
 <span data-ttu-id="e6b9e-732">如需詳細資訊，請參閱<xref:System.Data.IDbDataAdapter.UpdateCommand%2A>。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-732">For more information, see <xref:System.Data.IDbDataAdapter.UpdateCommand%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ICloneable.Clone">
      <MemberSignature Language="C#" Value="object ICloneable.Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ICloneable.Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.System#ICloneable#Clone" />
      <MemberSignature Language="VB.NET" Value="Function Clone () As Object Implements ICloneable.Clone" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ICloneable.Clone() = ICloneable::Clone;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e6b9e-733">建立目前執行個體複本的新物件。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-733">Creates a new object that is a copy of the current instance.</span></span></summary>
        <returns><span data-ttu-id="e6b9e-734">這個執行個體複本的新物件。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-734">A new object that is a copy of this instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6b9e-735">這個成員是明確介面成員實作，</span><span class="sxs-lookup"><span data-stu-id="e6b9e-735">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="e6b9e-736">只有在 <xref:System.Data.Common.DbDataAdapter> 執行個體轉換成 <xref:System.ICloneable> 介面時，才能使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-736">It can be used only when the <xref:System.Data.Common.DbDataAdapter> instance is cast to an <xref:System.ICloneable> interface.</span></span>  
  
 <span data-ttu-id="e6b9e-737">如需詳細資訊，請參閱<xref:System.ICloneable.Clone%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-737">For more information, see <xref:System.ICloneable.Clone%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TerminateBatching">
      <MemberSignature Language="C#" Value="protected virtual void TerminateBatching ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void TerminateBatching() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.TerminateBatching" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub TerminateBatching ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void TerminateBatching();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e6b9e-738">結束 <see cref="T:System.Data.Common.DbDataAdapter" /> 的批次處理。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-738">Ends batching for the <see cref="T:System.Data.Common.DbDataAdapter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6b9e-739">在<xref:System.Data.Common.DbDataAdapter>，這個方法會擲回<xref:System.NotSupportedException>。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-739">In <xref:System.Data.Common.DbDataAdapter>, this method throws <xref:System.NotSupportedException>.</span></span> <span data-ttu-id="e6b9e-740">類別繼承自<xref:System.Data.Common.DbDataAdapter>覆寫這個方法以提供支援批次。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-740">Classes that inherit from <xref:System.Data.Common.DbDataAdapter> override this method to provide support for batches.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="e6b9e-741">配置器不支援批次。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-741">The adapter does not support batches.</span></span></exception>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="e6b9e-742">這個方法受到保護，可供使用的.NET Framework 資料提供者。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-742">This method is protected and is designed for use by a .NET Framework data provider.</span></span>  
  
 <span data-ttu-id="e6b9e-743">如果類別繼承自<see cref="T:System.Data.Common.DbDataAdapter" />支援批次，該類別會覆寫這個方法。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-743">If a class that inherits from <see cref="T:System.Data.Common.DbDataAdapter" /> supports batches, that class overrides this method.</span></span> <span data-ttu-id="e6b9e-744">這個方法可讓類別 dispose 配置支援批次處理的任何資源。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-744">This method gives the class the opportunity to dispose of any resources allocated to support batching.</span></span> <span data-ttu-id="e6b9e-745">例如，類別可能會取消配置保存命令批次中的資料結構。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-745">For example, the class may deallocate the data structure that holds the commands in the batch.</span></span></para>
        </block>
      </Docs>
    </Member>
    <MemberGroup MemberName="Update">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e6b9e-746">針對 <see cref="T:System.Data.DataSet" /> 中的每個插入、更新或刪除的資料列，執行個別的 INSERT、UPDATE 或 DELETE 陳述式，以更新資料庫中的值。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-746">Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the <see cref="T:System.Data.DataSet" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public int Update (System.Data.DataRow[] dataRows);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Update(class System.Data.DataRow[] dataRows) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Update (dataRows As DataRow()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Update(cli::array &lt;System::Data::DataRow ^&gt; ^ dataRows);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataRows" Type="System.Data.DataRow[]" />
      </Parameters>
      <Docs>
        <param name="dataRows"><span data-ttu-id="e6b9e-747">用來更新資料來源的 <see cref="T:System.Data.DataRow" /> 物件陣列。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-747">An array of <see cref="T:System.Data.DataRow" /> objects used to update the data source.</span></span></param>
        <summary><span data-ttu-id="e6b9e-748">針對 <see cref="T:System.Data.DataSet" /> 的指定陣列中每個插入、更新或刪除的資料列，執行個別的 INSERT、UPDATE 或 DELETE 陳述式，以更新資料庫中的值。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-748">Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified array in the <see cref="T:System.Data.DataSet" />.</span></span></summary>
        <returns><span data-ttu-id="e6b9e-749">自 <see cref="T:System.Data.DataSet" /> 中成功更新的資料列數目。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-749">The number of rows successfully updated from the <see cref="T:System.Data.DataSet" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6b9e-750">當應用程式呼叫<xref:System.Data.Common.DbDataAdapter.Update%2A>方法，<xref:System.Data.Common.DbDataAdapter>檢查<xref:System.Data.DataRow.RowState%2A>屬性，並執行必要的 INSERT、 UPDATE 或 DELETE 陳述式，反覆地針對每個資料列，並根據中設定的索引順序<xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="e6b9e-750">When an application calls the <xref:System.Data.Common.DbDataAdapter.Update%2A> method, the <xref:System.Data.Common.DbDataAdapter> examines the <xref:System.Data.DataRow.RowState%2A> property, and executes the required INSERT, UPDATE, or DELETE statements iteratively for each row, based on the order of the indexes configured in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="e6b9e-751">例如，<xref:System.Data.Common.DbDataAdapter.Update%2A>可能會執行 DELETE 陳述式，後面接著 INSERT 陳述式，則另一個的 DELETE 陳述式，所以中的資料列的排序<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-751">For example, <xref:System.Data.Common.DbDataAdapter.Update%2A> might execute a DELETE statement, followed by an INSERT statement, and then another DELETE statement, due to the ordering of the rows in the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="e6b9e-752">請注意這些陳述式不會執行以批次的處理程序。個別更新每個資料列。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-752">It should be noted that these statements are not performed as a batch process; each row is updated individually.</span></span> <span data-ttu-id="e6b9e-753">應用程式可以呼叫<xref:System.Data.DataSet.GetChanges%2A>情況下，您必須在其中控制陳述式型別 （例如，在更新之前插入） 順序的方法。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-753">An application can call the <xref:System.Data.DataSet.GetChanges%2A> method in situations where you must control the sequence of statement types (for example, INSERTs before UPDATEs).</span></span> <span data-ttu-id="e6b9e-754">如需詳細資訊，請參閱[以 Dataadapter 更新資料來源](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md)。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-754">For more information, see [Updating Data Sources with DataAdapters](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md).</span></span>  
  
 <span data-ttu-id="e6b9e-755">如果尚未指定 INSERT、 UPDATE 或 DELETE 陳述式，<xref:System.Data.Common.DbDataAdapter.Update%2A>方法會產生例外狀況。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-755">If INSERT, UPDATE, or DELETE statements have not been specified, the <xref:System.Data.Common.DbDataAdapter.Update%2A> method generates an exception.</span></span> <span data-ttu-id="e6b9e-756">不過，您可以建立<xref:System.Data.SqlClient.SqlCommandBuilder>或<xref:System.Data.OleDb.OleDbCommandBuilder>物件來自動產生的單一資料表更新 SQL 陳述式，如果您設定`SelectCommand`.NET Framework 資料提供者的屬性。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-756">However, you can create a <xref:System.Data.SqlClient.SqlCommandBuilder> or <xref:System.Data.OleDb.OleDbCommandBuilder> object to automatically generate SQL statements for single-table updates if you set the `SelectCommand` property of a .NET Framework data provider.</span></span> <span data-ttu-id="e6b9e-757">然後，您未設定任何其他 SQL 陳述式由產生**CommandBuilder**。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-757">Then, any additional SQL statements that you do not set are generated by the **CommandBuilder**.</span></span> <span data-ttu-id="e6b9e-758">此產生邏輯需要索引鍵資料行資訊會出現在<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-758">This generation logic requires key column information to be present in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="e6b9e-759">如需詳細資訊，請參閱[Commandbuilder 產生命令](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-759">For more information see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
 <span data-ttu-id="e6b9e-760"><xref:System.Data.Common.DbDataAdapter.Update%2A>方法會從執行更新前的第一個對應中所列的資料表擷取資料列。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-760">The <xref:System.Data.Common.DbDataAdapter.Update%2A> method retrieves rows from the table listed in the first mapping before performing an update.</span></span> <span data-ttu-id="e6b9e-761"><xref:System.Data.Common.DbDataAdapter.Update%2A>然後重新整理使用的值的資料列<xref:System.Data.IDbCommand.UpdatedRowSource%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-761">The <xref:System.Data.Common.DbDataAdapter.Update%2A> then refreshes the row using the value of the <xref:System.Data.IDbCommand.UpdatedRowSource%2A> property.</span></span> <span data-ttu-id="e6b9e-762">傳回的任何其他資料列都會被忽略。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-762">Any additional rows returned are ignored.</span></span>  
  
 <span data-ttu-id="e6b9e-763">任何資料會載入回後<xref:System.Data.DataSet>、<xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A>引發事件，讓使用者檢查調解<xref:System.Data.DataSet>資料列和任何輸出命令所傳回的參數。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-763">After any data is loaded back into the <xref:System.Data.DataSet>, the <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised, allowing the user to inspect the reconciled <xref:System.Data.DataSet> row and any output parameters returned by the command.</span></span> <span data-ttu-id="e6b9e-764">已成功更新資料列之後，會接受該資料列所做的變更。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-764">After a row updates successfully, the changes to that row are accepted.</span></span>  
  
 <span data-ttu-id="e6b9e-765">當使用<xref:System.Data.Common.DbDataAdapter.Update%2A>，執行的順序如下所示：</span><span class="sxs-lookup"><span data-stu-id="e6b9e-765">When using <xref:System.Data.Common.DbDataAdapter.Update%2A>, the order of execution is as follows:</span></span>  
  
1.  <span data-ttu-id="e6b9e-766">中的值<xref:System.Data.DataRow>移到參數值。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-766">The values in the <xref:System.Data.DataRow> are moved to the parameter values.</span></span>  
  
2.  <span data-ttu-id="e6b9e-767">便會引發 <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> 事件。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-767">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> event is raised.</span></span>  
  
3.  <span data-ttu-id="e6b9e-768">執行命令。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-768">The command executes.</span></span>  
  
4.  <span data-ttu-id="e6b9e-769">如果命令設定為`FirstReturnedRecord`，第一個傳回的結果放在<xref:System.Data.DataRow>。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-769">If the command is set to `FirstReturnedRecord`, the first returned result is placed in the <xref:System.Data.DataRow>.</span></span>  
  
5.  <span data-ttu-id="e6b9e-770">如果沒有輸出參數，它們會放置於<xref:System.Data.DataRow>。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-770">If there are output parameters, they are placed in the <xref:System.Data.DataRow>.</span></span>  
  
6.  <span data-ttu-id="e6b9e-771">便會引發 <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> 事件。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-771">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised.</span></span>  
  
7.  <span data-ttu-id="e6b9e-772">呼叫 <xref:System.Data.DataRow.AcceptChanges%2A>。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-772"><xref:System.Data.DataRow.AcceptChanges%2A> is called.</span></span>  
  
 <span data-ttu-id="e6b9e-773">每個相關聯的命令<xref:System.Data.Common.DbDataAdapter>通常會有與它關聯的參數集合。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-773">Each command associated with the <xref:System.Data.Common.DbDataAdapter> usually has a parameters collection associated with it.</span></span> <span data-ttu-id="e6b9e-774">參數對應到目前的資料列，透過`SourceColumn`和`SourceVersion`的.NET Framework 資料提供者的屬性`Parameter`類別。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-774">Parameters are mapped to the current row through the `SourceColumn` and `SourceVersion` properties of a .NET Framework data provider's `Parameter` class.</span></span> <span data-ttu-id="e6b9e-775">`SourceColumn` 是指<xref:System.Data.DataTable>資料行，<xref:System.Data.Common.DbDataAdapter>以取得目前資料列的參數值的參考。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-775">`SourceColumn` refers to a <xref:System.Data.DataTable> column that the <xref:System.Data.Common.DbDataAdapter> references to obtain parameter values for the current row.</span></span>  
  
 <span data-ttu-id="e6b9e-776">`SourceColumn` 在套用任何資料表對應之前，是指未對應的資料行名稱。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-776">`SourceColumn` refers to the unmapped column name before any table mappings have been applied.</span></span> <span data-ttu-id="e6b9e-777">如果`SourceColumn`參考到不存在的資料行中，所採取的動作取決於下列其中一種<xref:System.Data.MissingMappingAction>值。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-777">If `SourceColumn` refers to a nonexistent column, the action taken depends on one of the following <xref:System.Data.MissingMappingAction> values.</span></span>  
  
|<span data-ttu-id="e6b9e-778">列舉值</span><span class="sxs-lookup"><span data-stu-id="e6b9e-778">Enumeration value</span></span>|<span data-ttu-id="e6b9e-779">採取的動作</span><span class="sxs-lookup"><span data-stu-id="e6b9e-779">Action taken</span></span>|  
|-----------------------|------------------|  
|`MissingMappingAction.Passthrough`|<span data-ttu-id="e6b9e-780">使用中的資料表名稱與來源資料行名稱<xref:System.Data.DataSet>如果不不存在任何對應。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-780">Use the source column names and table names in the <xref:System.Data.DataSet> if no mapping is present.</span></span>|  
|`MissingMappingAction.Ignore`|<span data-ttu-id="e6b9e-781">A<xref:System.SystemException>產生。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-781">A <xref:System.SystemException> is generated.</span></span> <span data-ttu-id="e6b9e-782">對應已明確設定，當遺漏對應的輸入參數通常是錯誤的結果。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-782">When the mappings are explicitly set, a missing mapping for an input parameter is usually the result of an error.</span></span>|  
|`MissingMappingAction.Error`|<span data-ttu-id="e6b9e-783">A<xref:System.SystemException>產生。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-783">A <xref:System.SystemException> is generated.</span></span>|  
  
 <span data-ttu-id="e6b9e-784">`SourceColumn`屬性也用來對應輸出的值，或輸入/輸出參數回`DataSet`。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-784">The `SourceColumn` property is also used to map the value for output or input/output parameters back to the `DataSet`.</span></span> <span data-ttu-id="e6b9e-785">如果它是指不存在的資料行，會產生例外狀況。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-785">An exception is generated if it refers to a nonexistent column.</span></span>  
  
 <span data-ttu-id="e6b9e-786">`SourceVersion`的.NET Framework 資料提供者的屬性`Parameter`類別會決定是否要使用的資料行值的原始、 Current 或 Proposed 版本。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-786">The `SourceVersion` property of a .NET Framework data provider's `Parameter` class determines whether to use the Original, Current, or Proposed version of the column value.</span></span> <span data-ttu-id="e6b9e-787">這項功能通常用於在 UPDATE 陳述式來檢查有開放式同步存取違規的 WHERE 子句中包含原始值。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-787">This capability is often used to include original values in the WHERE clause of an UPDATE statement to check for optimistic concurrency violations.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e6b9e-788">如果在更新的資料列時發生錯誤，擲回例外狀況，並執行更新已停用。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-788">If an error occurs while updating a row, an exception is thrown and execution of the update is discontinued.</span></span> <span data-ttu-id="e6b9e-789">若要繼續更新作業，而不會產生例外狀況，當發生錯誤時，設定<xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A>屬性`true`之前先呼叫<xref:System.Data.Common.DbDataAdapter.Update%2A>。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-789">To continue the update operation without generating exceptions when an error is encountered, set the <xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A> property to `true` before calling <xref:System.Data.Common.DbDataAdapter.Update%2A>.</span></span> <span data-ttu-id="e6b9e-790">您可能也會回應內的每個資料列基礎上的錯誤`RowUpdated`DataAdapter 的事件。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-790">You may also respond to errors on a per-row basis within the `RowUpdated` event of a DataAdapter.</span></span> <span data-ttu-id="e6b9e-791">若要繼續更新作業，而不會產生例外狀況中的`RowUpdated`設定事件，<xref:System.Data.Common.RowUpdatedEventArgs.Status%2A>屬性<xref:System.Data.Common.RowUpdatedEventArgs>至<xref:System.Data.UpdateStatus.Continue>。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-791">To continue the update operation without generating an exception within the `RowUpdated` event, set the <xref:System.Data.Common.RowUpdatedEventArgs.Status%2A> property of the <xref:System.Data.Common.RowUpdatedEventArgs> to <xref:System.Data.UpdateStatus.Continue>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e6b9e-792">下列範例會使用衍生的類別， <xref:System.Data.OleDb.OleDbDataAdapter>、 更新資料來源。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-792">The following example uses the derived class, <xref:System.Data.OleDb.OleDbDataAdapter>, to update the data source.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.Update1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Update1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.Update1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Update1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e6b9e-793"><see cref="T:System.Data.DataSet" /> 無效。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-793">The <see cref="T:System.Data.DataSet" /> is invalid.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e6b9e-794">來源資料表無效。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-794">The source table is invalid.</span></span></exception>
        <exception cref="T:System.SystemException"><span data-ttu-id="e6b9e-795">要更新的 <see cref="T:System.Data.DataRow" /> 不存在。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-795">No <see cref="T:System.Data.DataRow" /> exists to update.</span></span>  
  
 <span data-ttu-id="e6b9e-796">-或-</span><span class="sxs-lookup"><span data-stu-id="e6b9e-796">-or-</span></span>  
  
 <span data-ttu-id="e6b9e-797">要更新的 <see cref="T:System.Data.DataTable" /> 不存在。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-797">No <see cref="T:System.Data.DataTable" /> exists to update.</span></span>  
  
 <span data-ttu-id="e6b9e-798">-或-</span><span class="sxs-lookup"><span data-stu-id="e6b9e-798">-or-</span></span>  
  
 <span data-ttu-id="e6b9e-799">要用來做為來源的 <see cref="T:System.Data.DataSet" /> 不存在。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-799">No <see cref="T:System.Data.DataSet" /> exists to use as a source.</span></span></exception>
        <exception cref="T:System.Data.DBConcurrencyException"><span data-ttu-id="e6b9e-800">嘗試執行 INSERT、UPDATE 或 DELETE 陳述式會造成沒有資料錄受影響。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-800">An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public override int Update (System.Data.DataSet dataSet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Update(class System.Data.DataSet dataSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int Update(System::Data::DataSet ^ dataSet);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataAdapter.Update(System.Data.DataSet)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
      </Parameters>
      <Docs>
        <param name="dataSet"><span data-ttu-id="e6b9e-801">用來更新資料來源的 <see cref="T:System.Data.DataSet" />。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-801">The <see cref="T:System.Data.DataSet" /> used to update the data source.</span></span></param>
        <summary><span data-ttu-id="e6b9e-802">針對指定之 <see cref="T:System.Data.DataSet" /> 中的每個插入、更新或刪除的資料列，執行個別的 INSERT、UPDATE 或 DELETE 陳述式，以更新資料庫中的值。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-802">Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified <see cref="T:System.Data.DataSet" />.</span></span></summary>
        <returns><span data-ttu-id="e6b9e-803">自 <see cref="T:System.Data.DataSet" /> 中成功更新的資料列數目。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-803">The number of rows successfully updated from the <see cref="T:System.Data.DataSet" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6b9e-804">當應用程式呼叫<xref:System.Data.Common.DbDataAdapter.Update%2A>方法，<xref:System.Data.Common.DbDataAdapter>檢查<xref:System.Data.DataRow.RowState%2A>屬性，並執行必要的 INSERT、 UPDATE 或 DELETE 陳述式，反覆地針對每個資料列，並根據中設定的索引順序<xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="e6b9e-804">When an application calls the <xref:System.Data.Common.DbDataAdapter.Update%2A> method, the <xref:System.Data.Common.DbDataAdapter> examines the <xref:System.Data.DataRow.RowState%2A> property, and executes the required INSERT, UPDATE, or DELETE statements iteratively for each row, based on the order of the indexes configured in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="e6b9e-805">例如，<xref:System.Data.Common.DbDataAdapter.Update%2A>可能會執行 DELETE 陳述式，後面接著 INSERT 陳述式，則另一個的 DELETE 陳述式，所以中的資料列的排序<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-805">For example, <xref:System.Data.Common.DbDataAdapter.Update%2A> might execute a DELETE statement, followed by an INSERT statement, and then another DELETE statement, due to the ordering of the rows in the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="e6b9e-806">請注意這些陳述式不會執行以批次的處理程序。個別更新每個資料列。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-806">It should be noted that these statements are not performed as a batch process; each row is updated individually.</span></span> <span data-ttu-id="e6b9e-807">應用程式可以呼叫<xref:System.Data.DataSet.GetChanges%2A>情況下，您必須在其中控制陳述式型別 （例如，在更新之前插入） 順序的方法。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-807">An application can call the <xref:System.Data.DataSet.GetChanges%2A> method in situations where you must control the sequence of statement types (for example, INSERTs before UPDATEs).</span></span> <span data-ttu-id="e6b9e-808">如需詳細資訊，請參閱[以 Dataadapter 更新資料來源](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md)。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-808">For more information, see [Updating Data Sources with DataAdapters](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md).</span></span>  
  
 <span data-ttu-id="e6b9e-809">如果尚未指定 INSERT、 UPDATE 或 DELETE 陳述式，<xref:System.Data.Common.DbDataAdapter.Update%2A>方法會產生例外狀況。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-809">If INSERT, UPDATE, or DELETE statements have not been specified, the <xref:System.Data.Common.DbDataAdapter.Update%2A> method generates an exception.</span></span> <span data-ttu-id="e6b9e-810">不過，您可以建立<xref:System.Data.SqlClient.SqlCommandBuilder>或<xref:System.Data.OleDb.OleDbCommandBuilder>物件來自動產生的單一資料表更新 SQL 陳述式，如果您設定`SelectCommand`.NET Framework 資料提供者的屬性。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-810">However, you can create a <xref:System.Data.SqlClient.SqlCommandBuilder> or <xref:System.Data.OleDb.OleDbCommandBuilder> object to automatically generate SQL statements for single-table updates if you set the `SelectCommand` property of a .NET Framework data provider.</span></span> <span data-ttu-id="e6b9e-811">然後，您未設定任何其他 SQL 陳述式由產生**CommandBuilder**。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-811">Then, any additional SQL statements that you do not set are generated by the **CommandBuilder**.</span></span> <span data-ttu-id="e6b9e-812">此產生邏輯需要索引鍵資料行資訊會出現在<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-812">This generation logic requires key column information to be present in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="e6b9e-813">如需詳細資訊，請參閱[Commandbuilder 產生命令](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-813">For more information see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
 <span data-ttu-id="e6b9e-814"><xref:System.Data.Common.DbDataAdapter.Update%2A>方法會從執行更新前的第一個對應中所列的資料表擷取資料列。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-814">The <xref:System.Data.Common.DbDataAdapter.Update%2A> method retrieves rows from the table listed in the first mapping before performing an update.</span></span> <span data-ttu-id="e6b9e-815"><xref:System.Data.Common.DbDataAdapter.Update%2A>然後重新整理使用的值的資料列<xref:System.Data.IDbCommand.UpdatedRowSource%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-815">The <xref:System.Data.Common.DbDataAdapter.Update%2A> then refreshes the row using the value of the <xref:System.Data.IDbCommand.UpdatedRowSource%2A> property.</span></span> <span data-ttu-id="e6b9e-816">傳回的任何其他資料列都會被忽略。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-816">Any additional rows returned are ignored.</span></span>  
  
 <span data-ttu-id="e6b9e-817">任何資料會載入回後<xref:System.Data.DataSet>、<xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A>引發事件，讓使用者檢查調解<xref:System.Data.DataSet>資料列和任何輸出命令所傳回的參數。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-817">After any data is loaded back into the <xref:System.Data.DataSet>, the <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised, allowing the user to inspect the reconciled <xref:System.Data.DataSet> row and any output parameters returned by the command.</span></span> <span data-ttu-id="e6b9e-818">已成功更新資料列之後，會接受該資料列所做的變更。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-818">After a row updates successfully, the changes to that row are accepted.</span></span>  
  
 <span data-ttu-id="e6b9e-819">當使用<xref:System.Data.Common.DbDataAdapter.Update%2A>，執行的順序如下所示：</span><span class="sxs-lookup"><span data-stu-id="e6b9e-819">When using <xref:System.Data.Common.DbDataAdapter.Update%2A>, the order of execution is as follows:</span></span>  
  
1.  <span data-ttu-id="e6b9e-820">中的值<xref:System.Data.DataRow>移到參數值。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-820">The values in the <xref:System.Data.DataRow> are moved to the parameter values.</span></span>  
  
2.  <span data-ttu-id="e6b9e-821">便會引發 <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> 事件。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-821">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> event is raised.</span></span>  
  
3.  <span data-ttu-id="e6b9e-822">執行命令。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-822">The command executes.</span></span>  
  
4.  <span data-ttu-id="e6b9e-823">如果命令設定為`FirstReturnedRecord`，則第一個傳回的結果放在<xref:System.Data.DataRow>。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-823">If the command is set to `FirstReturnedRecord`, then the first returned result is placed in the <xref:System.Data.DataRow>.</span></span>  
  
5.  <span data-ttu-id="e6b9e-824">如果沒有輸出參數，它們會放置於<xref:System.Data.DataRow>。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-824">If there are output parameters, they are placed in the <xref:System.Data.DataRow>.</span></span>  
  
6.  <span data-ttu-id="e6b9e-825">便會引發 <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> 事件。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-825">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised.</span></span>  
  
7.  <span data-ttu-id="e6b9e-826">呼叫 <xref:System.Data.DataRow.AcceptChanges%2A>。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-826"><xref:System.Data.DataRow.AcceptChanges%2A> is called.</span></span>  
  
 <span data-ttu-id="e6b9e-827">每個相關聯的命令<xref:System.Data.Common.DbDataAdapter>通常會有與它關聯的參數集合。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-827">Each command associated with the <xref:System.Data.Common.DbDataAdapter> usually has a parameters collection associated with it.</span></span> <span data-ttu-id="e6b9e-828">參數對應到目前的資料列，透過`SourceColumn`和`SourceVersion`的.NET Framework 資料提供者的屬性`Parameter`類別。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-828">Parameters are mapped to the current row through the `SourceColumn` and `SourceVersion` properties of a .NET Framework data provider's `Parameter` class.</span></span> <span data-ttu-id="e6b9e-829">`SourceColumn` 是指<xref:System.Data.DataTable>資料行，<xref:System.Data.Common.DbDataAdapter>以取得目前資料列的參數值的參考。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-829">`SourceColumn` refers to a <xref:System.Data.DataTable> column that the <xref:System.Data.Common.DbDataAdapter> references to obtain parameter values for the current row.</span></span>  
  
 <span data-ttu-id="e6b9e-830">`SourceColumn` 在套用任何資料表對應之前，是指未對應的資料行名稱。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-830">`SourceColumn` refers to the unmapped column name before any table mappings have been applied.</span></span> <span data-ttu-id="e6b9e-831">如果`SourceColumn`參考到不存在的資料行中，所採取的動作取決於下列其中一種<xref:System.Data.MissingMappingAction>值。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-831">If `SourceColumn` refers to a nonexistent column, the action taken depends on one of the following <xref:System.Data.MissingMappingAction> values.</span></span>  
  
|<span data-ttu-id="e6b9e-832">列舉值</span><span class="sxs-lookup"><span data-stu-id="e6b9e-832">Enumeration value</span></span>|<span data-ttu-id="e6b9e-833">採取的動作</span><span class="sxs-lookup"><span data-stu-id="e6b9e-833">Action taken</span></span>|  
|-----------------------|------------------|  
|`MissingMappingAction.Passthrough`|<span data-ttu-id="e6b9e-834">使用中的資料表名稱與來源資料行名稱<xref:System.Data.DataSet>如果不不存在任何對應。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-834">Use the source column names and table names in the <xref:System.Data.DataSet> if no mapping is present.</span></span>|  
|`MissingMappingAction.Ignore`|<span data-ttu-id="e6b9e-835">A<xref:System.SystemException>產生。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-835">A <xref:System.SystemException> is generated.</span></span> <span data-ttu-id="e6b9e-836">對應已明確設定，當遺漏對應的輸入參數通常是錯誤的結果。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-836">When the mappings are explicitly set, a missing mapping for an input parameter is usually the result of an error.</span></span>|  
|`MissingMappingAction.Error`|<span data-ttu-id="e6b9e-837">A<xref:System.SystemException>產生。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-837">A <xref:System.SystemException> is generated.</span></span>|  
  
 <span data-ttu-id="e6b9e-838">`SourceColumn`屬性也用來對應輸出的值，或輸入/輸出參數回`DataSet`。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-838">The `SourceColumn` property is also used to map the value for output or input/output parameters back to the `DataSet`.</span></span> <span data-ttu-id="e6b9e-839">如果它是指不存在的資料行，會產生例外狀況。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-839">An exception is generated if it refers to a nonexistent column.</span></span>  
  
 <span data-ttu-id="e6b9e-840">`SourceVersion`的.NET Framework 資料提供者的屬性`Parameter`類別會決定是否要使用的資料行值的原始、 Current 或 Proposed 版本。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-840">The `SourceVersion` property of a .NET Framework data provider's `Parameter` class determines whether to use the Original, Current, or Proposed version of the column value.</span></span> <span data-ttu-id="e6b9e-841">這項功能通常用於在 UPDATE 陳述式來檢查有開放式同步存取違規的 WHERE 子句中包含原始值。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-841">This capability is often used to include original values in the WHERE clause of an UPDATE statement to check for optimistic concurrency violations.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e6b9e-842">如果在更新的資料列時發生錯誤，擲回例外狀況，並執行更新已停用。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-842">If an error occurs while updating a row, an exception is thrown and execution of the update is discontinued.</span></span> <span data-ttu-id="e6b9e-843">若要繼續更新作業，而不會產生例外狀況，當發生錯誤時，設定<xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A>屬性`true`之前先呼叫<xref:System.Data.Common.DbDataAdapter.Update%2A>。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-843">To continue the update operation without generating exceptions when an error is encountered, set the <xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A> property to `true` before calling <xref:System.Data.Common.DbDataAdapter.Update%2A>.</span></span> <span data-ttu-id="e6b9e-844">您可能也會回應內的每個資料列基礎上的錯誤`RowUpdated`DataAdapter 的事件。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-844">You may also respond to errors on a per-row basis within the `RowUpdated` event of a DataAdapter.</span></span> <span data-ttu-id="e6b9e-845">若要繼續更新作業，而不會產生例外狀況中的`RowUpdated`設定事件，<xref:System.Data.Common.RowUpdatedEventArgs.Status%2A>屬性<xref:System.Data.Common.RowUpdatedEventArgs>至<xref:System.Data.UpdateStatus.Continue>。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-845">To continue the update operation without generating an exception within the `RowUpdated` event, set the <xref:System.Data.Common.RowUpdatedEventArgs.Status%2A> property of the <xref:System.Data.Common.RowUpdatedEventArgs> to <xref:System.Data.UpdateStatus.Continue>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e6b9e-846">下列範例會使用衍生的類別， <xref:System.Data.OleDb.OleDbDataAdapter>、 更新資料來源。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-846">The following example uses the derived class, <xref:System.Data.OleDb.OleDbDataAdapter>, to update the data source.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.Update Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Update Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.Update Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Update Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e6b9e-847">來源資料表無效。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-847">The source table is invalid.</span></span></exception>
        <exception cref="T:System.Data.DBConcurrencyException"><span data-ttu-id="e6b9e-848">嘗試執行 INSERT、UPDATE 或 DELETE 陳述式會造成沒有資料錄受影響。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-848">An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public int Update (System.Data.DataTable dataTable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Update(class System.Data.DataTable dataTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataTable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Update(System::Data::DataTable ^ dataTable);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataTable" Type="System.Data.DataTable" />
      </Parameters>
      <Docs>
        <param name="dataTable"><span data-ttu-id="e6b9e-849">用來更新資料來源的 <see cref="T:System.Data.DataTable" />。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-849">The <see cref="T:System.Data.DataTable" /> used to update the data source.</span></span></param>
        <summary><span data-ttu-id="e6b9e-850">針對指定之 <see cref="T:System.Data.DataTable" /> 中的每個插入、更新或刪除的資料列，執行個別的 INSERT、UPDATE 或 DELETE 陳述式，以更新資料庫中的值。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-850">Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified <see cref="T:System.Data.DataTable" />.</span></span></summary>
        <returns><span data-ttu-id="e6b9e-851">自 <see cref="T:System.Data.DataTable" /> 中成功更新的資料列數目。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-851">The number of rows successfully updated from the <see cref="T:System.Data.DataTable" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6b9e-852">當應用程式呼叫<xref:System.Data.Common.DbDataAdapter.Update%2A>方法，<xref:System.Data.Common.DbDataAdapter>檢查<xref:System.Data.DataRow.RowState%2A>屬性，並執行必要的 INSERT、 UPDATE 或 DELETE 陳述式，反覆地針對每個資料列，並根據中設定的索引順序<xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="e6b9e-852">When an application calls the <xref:System.Data.Common.DbDataAdapter.Update%2A> method, the <xref:System.Data.Common.DbDataAdapter> examines the <xref:System.Data.DataRow.RowState%2A> property, and executes the required INSERT, UPDATE, or DELETE statements iteratively for each row, based on the order of the indexes configured in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="e6b9e-853">例如，<xref:System.Data.Common.DbDataAdapter.Update%2A>可能會執行 DELETE 陳述式，後面接著 INSERT 陳述式，則另一個的 DELETE 陳述式，所以中的資料列的排序<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-853">For example, <xref:System.Data.Common.DbDataAdapter.Update%2A> might execute a DELETE statement, followed by an INSERT statement, and then another DELETE statement, due to the ordering of the rows in the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="e6b9e-854">請注意這些陳述式不會執行以批次的處理程序。個別更新每個資料列。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-854">It should be noted that these statements are not performed as a batch process; each row is updated individually.</span></span> <span data-ttu-id="e6b9e-855">應用程式可以呼叫<xref:System.Data.DataSet.GetChanges%2A>情況下，您必須在其中控制陳述式型別 （例如，在更新之前插入） 順序的方法。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-855">An application can call the <xref:System.Data.DataSet.GetChanges%2A> method in situations where you must control the sequence of statement types (for example, INSERTs before UPDATEs).</span></span> <span data-ttu-id="e6b9e-856">如需詳細資訊，請參閱[以 Dataadapter 更新資料來源](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md)。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-856">For more information, see [Updating Data Sources with DataAdapters](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md).</span></span>  
  
 <span data-ttu-id="e6b9e-857">如果尚未指定 INSERT、 UPDATE 或 DELETE 陳述式，<xref:System.Data.Common.DbDataAdapter.Update%2A>方法會產生例外狀況。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-857">If INSERT, UPDATE, or DELETE statements have not been specified, the <xref:System.Data.Common.DbDataAdapter.Update%2A> method generates an exception.</span></span> <span data-ttu-id="e6b9e-858">不過，您可以建立<xref:System.Data.SqlClient.SqlCommandBuilder>或<xref:System.Data.OleDb.OleDbCommandBuilder>物件來自動產生的單一資料表更新 SQL 陳述式，如果您設定`SelectCommand`.NET Framework 資料提供者的屬性。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-858">However, you can create a <xref:System.Data.SqlClient.SqlCommandBuilder> or <xref:System.Data.OleDb.OleDbCommandBuilder> object to automatically generate SQL statements for single-table updates if you set the `SelectCommand` property of a .NET Framework data provider.</span></span> <span data-ttu-id="e6b9e-859">然後，您未設定任何其他 SQL 陳述式由產生**CommandBuilder**。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-859">Then, any additional SQL statements that you do not set are generated by the **CommandBuilder**.</span></span> <span data-ttu-id="e6b9e-860">此產生邏輯需要索引鍵資料行資訊會出現在<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-860">This generation logic requires key column information to be present in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="e6b9e-861">如需詳細資訊，請參閱[Commandbuilder 產生命令](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-861">For more information see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
 <span data-ttu-id="e6b9e-862"><xref:System.Data.Common.DbDataAdapter.Update%2A>方法會從執行更新前的第一個對應中所列的資料表擷取資料列。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-862">The <xref:System.Data.Common.DbDataAdapter.Update%2A> method retrieves rows from the table listed in the first mapping before performing an update.</span></span> <span data-ttu-id="e6b9e-863"><xref:System.Data.Common.DbDataAdapter.Update%2A>然後重新整理使用的值的資料列<xref:System.Data.IDbCommand.UpdatedRowSource%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-863">The <xref:System.Data.Common.DbDataAdapter.Update%2A> then refreshes the row using the value of the <xref:System.Data.IDbCommand.UpdatedRowSource%2A> property.</span></span> <span data-ttu-id="e6b9e-864">傳回的任何其他資料列都會被忽略。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-864">Any additional rows returned are ignored.</span></span>  
  
 <span data-ttu-id="e6b9e-865">任何資料會載入回後<xref:System.Data.DataSet>、<xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A>引發事件，讓使用者檢查調解<xref:System.Data.DataSet>資料列和任何輸出命令所傳回的參數。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-865">After any data is loaded back into the <xref:System.Data.DataSet>, the <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised, allowing the user to inspect the reconciled <xref:System.Data.DataSet> row and any output parameters returned by the command.</span></span> <span data-ttu-id="e6b9e-866">已成功更新資料列之後，會接受該資料列所做的變更。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-866">After a row updates successfully, the changes to that row are accepted.</span></span>  
  
 <span data-ttu-id="e6b9e-867">當使用<xref:System.Data.Common.DbDataAdapter.Update%2A>，執行的順序如下所示：</span><span class="sxs-lookup"><span data-stu-id="e6b9e-867">When using <xref:System.Data.Common.DbDataAdapter.Update%2A>, the order of execution is as follows:</span></span>  
  
1.  <span data-ttu-id="e6b9e-868">中的值<xref:System.Data.DataRow>移到參數值。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-868">The values in the <xref:System.Data.DataRow> are moved to the parameter values.</span></span>  
  
2.  <span data-ttu-id="e6b9e-869">便會引發 <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> 事件。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-869">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> event is raised.</span></span>  
  
3.  <span data-ttu-id="e6b9e-870">執行命令。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-870">The command executes.</span></span>  
  
4.  <span data-ttu-id="e6b9e-871">如果命令設定為`FirstReturnedRecord`，則第一個傳回的結果放在<xref:System.Data.DataRow>。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-871">If the command is set to `FirstReturnedRecord`, then the first returned result is placed in the <xref:System.Data.DataRow>.</span></span>  
  
5.  <span data-ttu-id="e6b9e-872">如果沒有輸出參數，它們會放置於<xref:System.Data.DataRow>。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-872">If there are output parameters, they are placed in the <xref:System.Data.DataRow>.</span></span>  
  
6.  <span data-ttu-id="e6b9e-873">便會引發 <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> 事件。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-873">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised.</span></span>  
  
7.  <span data-ttu-id="e6b9e-874">呼叫 <xref:System.Data.DataRow.AcceptChanges%2A>。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-874"><xref:System.Data.DataRow.AcceptChanges%2A> is called.</span></span>  
  
 <span data-ttu-id="e6b9e-875">每個相關聯的命令<xref:System.Data.Common.DbDataAdapter>通常會有與它關聯的參數集合。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-875">Each command associated with the <xref:System.Data.Common.DbDataAdapter> usually has a parameters collection associated with it.</span></span> <span data-ttu-id="e6b9e-876">參數對應到目前的資料列，透過`SourceColumn`和`SourceVersion`的.NET Framework 資料提供者的屬性`Parameter`類別。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-876">Parameters are mapped to the current row through the `SourceColumn` and `SourceVersion` properties of a .NET Framework data provider's `Parameter` class.</span></span> <span data-ttu-id="e6b9e-877">`SourceColumn` 是指<xref:System.Data.DataTable>資料行，<xref:System.Data.Common.DbDataAdapter>以取得目前資料列的參數值的參考。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-877">`SourceColumn` refers to a <xref:System.Data.DataTable> column that the <xref:System.Data.Common.DbDataAdapter> references to obtain parameter values for the current row.</span></span>  
  
 <span data-ttu-id="e6b9e-878">`SourceColumn` 在套用任何資料表對應之前，是指未對應的資料行名稱。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-878">`SourceColumn` refers to the unmapped column name before any table mappings have been applied.</span></span> <span data-ttu-id="e6b9e-879">如果`SourceColumn`參考到不存在的資料行中，所採取的動作取決於下列其中一種<xref:System.Data.MissingMappingAction>值。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-879">If `SourceColumn` refers to a nonexistent column, the action taken depends on one of the following <xref:System.Data.MissingMappingAction> values.</span></span>  
  
|<span data-ttu-id="e6b9e-880">列舉值</span><span class="sxs-lookup"><span data-stu-id="e6b9e-880">Enumeration value</span></span>|<span data-ttu-id="e6b9e-881">採取的動作</span><span class="sxs-lookup"><span data-stu-id="e6b9e-881">Action taken</span></span>|  
|-----------------------|------------------|  
|`MissingMappingAction.Passthrough`|<span data-ttu-id="e6b9e-882">使用中的資料表名稱與來源資料行名稱<xref:System.Data.DataSet>如果不不存在任何對應。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-882">Use the source column names and table names in the <xref:System.Data.DataSet> if no mapping is present.</span></span>|  
|`MissingMappingAction.Ignore`|<span data-ttu-id="e6b9e-883">A<xref:System.SystemException>產生。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-883">A <xref:System.SystemException> is generated.</span></span> <span data-ttu-id="e6b9e-884">對應已明確設定，當遺漏對應的輸入參數通常是錯誤的結果。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-884">When the mappings are explicitly set, a missing mapping for an input parameter is usually the result of an error.</span></span>|  
|`MissingMappingAction.Error`|<span data-ttu-id="e6b9e-885">A<xref:System.SystemException>產生。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-885">A <xref:System.SystemException> is generated.</span></span>|  
  
 <span data-ttu-id="e6b9e-886">`SourceColumn`屬性也用來對應輸出的值，或輸入/輸出參數回`DataSet`。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-886">The `SourceColumn` property is also used to map the value for output or input/output parameters back to the `DataSet`.</span></span> <span data-ttu-id="e6b9e-887">如果它是指不存在的資料行，會產生例外狀況。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-887">An exception is generated if it refers to a nonexistent column.</span></span>  
  
 <span data-ttu-id="e6b9e-888">`SourceVersion`的.NET Framework 資料提供者的屬性`Parameter`類別會決定是否要使用的資料行值的原始、 Current 或 Proposed 版本。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-888">The `SourceVersion` property of a .NET Framework data provider's `Parameter` class determines whether to use the Original, Current, or Proposed version of the column value.</span></span> <span data-ttu-id="e6b9e-889">這項功能通常用於在 UPDATE 陳述式來檢查有開放式同步存取違規的 WHERE 子句中包含原始值。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-889">This capability is often used to include original values in the WHERE clause of an UPDATE statement to check for optimistic concurrency violations.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e6b9e-890">如果在更新的資料列時發生錯誤，擲回例外狀況，並執行更新已停用。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-890">If an error occurs while updating a row, an exception is thrown and execution of the update is discontinued.</span></span> <span data-ttu-id="e6b9e-891">若要繼續更新作業，而不會產生例外狀況，當發生錯誤時，設定<xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A>屬性`true`之前先呼叫<xref:System.Data.Common.DbDataAdapter.Update%2A>。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-891">To continue the update operation without generating exceptions when an error is encountered, set the <xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A> property to `true` before calling <xref:System.Data.Common.DbDataAdapter.Update%2A>.</span></span> <span data-ttu-id="e6b9e-892">您可能也會回應內的每個資料列基礎上的錯誤`RowUpdated`DataAdapter 的事件。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-892">You may also respond to errors on a per-row basis within the `RowUpdated` event of a DataAdapter.</span></span> <span data-ttu-id="e6b9e-893">若要繼續更新作業，而不會產生例外狀況中的`RowUpdated`設定事件，<xref:System.Data.Common.RowUpdatedEventArgs.Status%2A>屬性<xref:System.Data.Common.RowUpdatedEventArgs>至<xref:System.Data.UpdateStatus.Continue>。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-893">To continue the update operation without generating an exception within the `RowUpdated` event, set the <xref:System.Data.Common.RowUpdatedEventArgs.Status%2A> property of the <xref:System.Data.Common.RowUpdatedEventArgs> to <xref:System.Data.UpdateStatus.Continue>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e6b9e-894">下列範例會使用衍生的類別， <xref:System.Data.OleDb.OleDbDataAdapter>、 更新資料來源。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-894">The following example uses the derived class, <xref:System.Data.OleDb.OleDbDataAdapter>, to update the data source.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.Update2 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Update2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.Update2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Update2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e6b9e-895"><see cref="T:System.Data.DataSet" /> 無效。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-895">The <see cref="T:System.Data.DataSet" /> is invalid.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e6b9e-896">來源資料表無效。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-896">The source table is invalid.</span></span></exception>
        <exception cref="T:System.SystemException"><span data-ttu-id="e6b9e-897">要更新的 <see cref="T:System.Data.DataRow" /> 不存在。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-897">No <see cref="T:System.Data.DataRow" /> exists to update.</span></span>  
  
 <span data-ttu-id="e6b9e-898">-或-</span><span class="sxs-lookup"><span data-stu-id="e6b9e-898">-or-</span></span>  
  
 <span data-ttu-id="e6b9e-899">要更新的 <see cref="T:System.Data.DataTable" /> 不存在。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-899">No <see cref="T:System.Data.DataTable" /> exists to update.</span></span>  
  
 <span data-ttu-id="e6b9e-900">-或-</span><span class="sxs-lookup"><span data-stu-id="e6b9e-900">-or-</span></span>  
  
 <span data-ttu-id="e6b9e-901">要用來做為來源的 <see cref="T:System.Data.DataSet" /> 不存在。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-901">No <see cref="T:System.Data.DataSet" /> exists to use as a source.</span></span></exception>
        <exception cref="T:System.Data.DBConcurrencyException"><span data-ttu-id="e6b9e-902">嘗試執行 INSERT、UPDATE 或 DELETE 陳述式會造成沒有資料錄受影響。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-902">An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="protected virtual int Update (System.Data.DataRow[] dataRows, System.Data.Common.DataTableMapping tableMapping);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 Update(class System.Data.DataRow[] dataRows, class System.Data.Common.DataTableMapping tableMapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[],System.Data.Common.DataTableMapping)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function Update (dataRows As DataRow(), tableMapping As DataTableMapping) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int Update(cli::array &lt;System::Data::DataRow ^&gt; ^ dataRows, System::Data::Common::DataTableMapping ^ tableMapping);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataRows" Type="System.Data.DataRow[]" />
        <Parameter Name="tableMapping" Type="System.Data.Common.DataTableMapping" />
      </Parameters>
      <Docs>
        <param name="dataRows"><span data-ttu-id="e6b9e-903">用來更新資料來源的 <see cref="T:System.Data.DataRow" /> 物件陣列。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-903">An array of <see cref="T:System.Data.DataRow" /> objects used to update the data source.</span></span></param>
        <param name="tableMapping"><span data-ttu-id="e6b9e-904">要使用的 <see cref="P:System.Data.IDataAdapter.TableMappings" /> 集合。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-904">The <see cref="P:System.Data.IDataAdapter.TableMappings" /> collection to use.</span></span></param>
        <summary><span data-ttu-id="e6b9e-905">針對 <see cref="T:System.Data.DataSet" /> 物件的指定陣列中每個插入、更新或刪除的資料列，執行個別的 INSERT、UPDATE 或 DELETE 陳述式，以更新資料庫中的值。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-905">Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified array of <see cref="T:System.Data.DataSet" /> objects.</span></span></summary>
        <returns><span data-ttu-id="e6b9e-906">自 <see cref="T:System.Data.DataSet" /> 中成功更新的資料列數目。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-906">The number of rows successfully updated from the <see cref="T:System.Data.DataSet" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6b9e-907">當應用程式呼叫<xref:System.Data.Common.DbDataAdapter.Update%2A>方法，<xref:System.Data.Common.DbDataAdapter>檢查<xref:System.Data.DataRow.RowState%2A>屬性，並執行必要的 INSERT、 UPDATE 或 DELETE 陳述式，反覆地針對每個資料列，並根據中設定的索引順序<xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="e6b9e-907">When an application calls the <xref:System.Data.Common.DbDataAdapter.Update%2A> method, the <xref:System.Data.Common.DbDataAdapter> examines the <xref:System.Data.DataRow.RowState%2A> property, and executes the required INSERT, UPDATE, or DELETE statements iteratively for each row, based on the order of the indexes configured in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="e6b9e-908">例如，<xref:System.Data.Common.DbDataAdapter.Update%2A>可能會執行 DELETE 陳述式，後面接著 INSERT 陳述式，則另一個的 DELETE 陳述式，所以中的資料列的排序<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-908">For example, <xref:System.Data.Common.DbDataAdapter.Update%2A> might execute a DELETE statement, followed by an INSERT statement, and then another DELETE statement, due to the ordering of the rows in the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="e6b9e-909">請注意這些陳述式不會執行以批次的處理程序。個別更新每個資料列。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-909">It should be noted that these statements are not performed as a batch process; each row is updated individually.</span></span> <span data-ttu-id="e6b9e-910">應用程式可以呼叫<xref:System.Data.DataSet.GetChanges%2A>情況下，您必須在其中控制陳述式型別 （例如，在更新之前插入） 順序的方法。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-910">An application can call the <xref:System.Data.DataSet.GetChanges%2A> method in situations where you must control the sequence of statement types (for example, INSERTs before UPDATEs).</span></span> <span data-ttu-id="e6b9e-911">如需詳細資訊，請參閱[以 Dataadapter 更新資料來源](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md)。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-911">For more information, see [Updating Data Sources with DataAdapters](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md).</span></span>  
  
 <span data-ttu-id="e6b9e-912">如果尚未指定 INSERT、 UPDATE 或 DELETE 陳述式，<xref:System.Data.Common.DbDataAdapter.Update%2A>方法會產生例外狀況。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-912">If INSERT, UPDATE, or DELETE statements have not been specified, the <xref:System.Data.Common.DbDataAdapter.Update%2A> method generates an exception.</span></span> <span data-ttu-id="e6b9e-913">不過，您可以建立<xref:System.Data.SqlClient.SqlCommandBuilder>或<xref:System.Data.OleDb.OleDbCommandBuilder>物件來自動產生的單一資料表更新 SQL 陳述式，如果您設定`SelectCommand`.NET Framework 資料提供者的屬性。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-913">However, you can create a <xref:System.Data.SqlClient.SqlCommandBuilder> or <xref:System.Data.OleDb.OleDbCommandBuilder> object to automatically generate SQL statements for single-table updates if you set the `SelectCommand` property of a .NET Framework data provider.</span></span> <span data-ttu-id="e6b9e-914">然後，您未設定任何其他 SQL 陳述式由產生**CommandBuilder**。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-914">Then, any additional SQL statements that you do not set are generated by the **CommandBuilder**.</span></span> <span data-ttu-id="e6b9e-915">此產生邏輯需要索引鍵資料行資訊會出現在<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-915">This generation logic requires key column information to be present in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="e6b9e-916">如需詳細資訊，請參閱[Commandbuilder 產生命令](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-916">For more information see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
 <span data-ttu-id="e6b9e-917"><xref:System.Data.Common.DbDataAdapter.Update%2A>方法會從執行更新前的第一個對應中所列的資料表擷取資料列。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-917">The <xref:System.Data.Common.DbDataAdapter.Update%2A> method retrieves rows from the table listed in the first mapping before performing an update.</span></span> <span data-ttu-id="e6b9e-918"><xref:System.Data.Common.DbDataAdapter.Update%2A>然後重新整理使用的值的資料列<xref:System.Data.IDbCommand.UpdatedRowSource%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-918">The <xref:System.Data.Common.DbDataAdapter.Update%2A> then refreshes the row using the value of the <xref:System.Data.IDbCommand.UpdatedRowSource%2A> property.</span></span> <span data-ttu-id="e6b9e-919">傳回的任何其他資料列都會被忽略。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-919">Any additional rows returned are ignored.</span></span>  
  
 <span data-ttu-id="e6b9e-920">任何資料會載入回後<xref:System.Data.DataSet>、<xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A>引發事件，讓使用者檢查調解<xref:System.Data.DataSet>資料列和任何輸出命令所傳回的參數。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-920">After any data is loaded back into the <xref:System.Data.DataSet>, the <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised, allowing the user to inspect the reconciled <xref:System.Data.DataSet> row and any output parameters returned by the command.</span></span> <span data-ttu-id="e6b9e-921">已成功更新資料列之後，會接受該資料列所做的變更。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-921">After a row updates successfully, the changes to that row are accepted.</span></span>  
  
 <span data-ttu-id="e6b9e-922">當使用<xref:System.Data.Common.DbDataAdapter.Update%2A>，執行的順序如下所示：</span><span class="sxs-lookup"><span data-stu-id="e6b9e-922">When using <xref:System.Data.Common.DbDataAdapter.Update%2A>, the order of execution is as follows:</span></span>  
  
1.  <span data-ttu-id="e6b9e-923">中的值<xref:System.Data.DataRow>移到參數值。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-923">The values in the <xref:System.Data.DataRow> are moved to the parameter values.</span></span>  
  
2.  <span data-ttu-id="e6b9e-924">便會引發 <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> 事件。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-924">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> event is raised.</span></span>  
  
3.  <span data-ttu-id="e6b9e-925">執行命令。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-925">The command executes.</span></span>  
  
4.  <span data-ttu-id="e6b9e-926">如果命令設定為`FirstReturnedRecord`，則第一個傳回的結果放在<xref:System.Data.DataRow>。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-926">If the command is set to `FirstReturnedRecord`, then the first returned result is placed in the <xref:System.Data.DataRow>.</span></span>  
  
5.  <span data-ttu-id="e6b9e-927">如果沒有輸出參數，它們會放置於<xref:System.Data.DataRow>。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-927">If there are output parameters, they are placed in the <xref:System.Data.DataRow>.</span></span>  
  
6.  <span data-ttu-id="e6b9e-928">便會引發 <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> 事件。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-928">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised.</span></span>  
  
7.  <span data-ttu-id="e6b9e-929">呼叫 <xref:System.Data.DataRow.AcceptChanges%2A>。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-929"><xref:System.Data.DataRow.AcceptChanges%2A> is called.</span></span>  
  
 <span data-ttu-id="e6b9e-930">每個相關聯的命令<xref:System.Data.Common.DbDataAdapter>通常會有與它關聯的參數集合。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-930">Each command associated with the <xref:System.Data.Common.DbDataAdapter> usually has a parameters collection associated with it.</span></span> <span data-ttu-id="e6b9e-931">參數對應到目前的資料列，透過`SourceColumn`和`SourceVersion`的.NET Framework 資料提供者的屬性`Parameter`類別。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-931">Parameters are mapped to the current row through the `SourceColumn` and `SourceVersion` properties of a .NET Framework data provider's `Parameter` class.</span></span> <span data-ttu-id="e6b9e-932">`SourceColumn` 是指<xref:System.Data.DataTable>資料行，<xref:System.Data.Common.DbDataAdapter>以取得目前資料列的參數值的參考。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-932">`SourceColumn` refers to a <xref:System.Data.DataTable> column that the <xref:System.Data.Common.DbDataAdapter> references to obtain parameter values for the current row.</span></span>  
  
 <span data-ttu-id="e6b9e-933">`SourceColumn` 在套用任何資料表對應之前，是指未對應的資料行名稱。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-933">`SourceColumn` refers to the unmapped column name before any table mappings have been applied.</span></span> <span data-ttu-id="e6b9e-934">如果`SourceColumn`參考到不存在的資料行中，所採取的動作取決於下列其中一種<xref:System.Data.MissingMappingAction>值。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-934">If `SourceColumn` refers to a nonexistent column, the action taken depends on one of the following <xref:System.Data.MissingMappingAction> values.</span></span>  
  
|<span data-ttu-id="e6b9e-935">列舉值</span><span class="sxs-lookup"><span data-stu-id="e6b9e-935">Enumeration value</span></span>|<span data-ttu-id="e6b9e-936">採取的動作</span><span class="sxs-lookup"><span data-stu-id="e6b9e-936">Action taken</span></span>|  
|-----------------------|------------------|  
|`MissingMappingAction.Passthrough`|<span data-ttu-id="e6b9e-937">使用中的資料表名稱與來源資料行名稱<xref:System.Data.DataSet>如果不不存在任何對應。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-937">Use the source column names and table names in the <xref:System.Data.DataSet> if no mapping is present.</span></span>|  
|`MissingMappingAction.Ignore`|<span data-ttu-id="e6b9e-938">A<xref:System.SystemException>產生。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-938">A <xref:System.SystemException> is generated.</span></span> <span data-ttu-id="e6b9e-939">對應已明確設定，當遺漏對應的輸入參數通常是錯誤的結果。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-939">When the mappings are explicitly set, a missing mapping for an input parameter is usually the result of an error.</span></span>|  
|`MissingMappingAction.Error`|<span data-ttu-id="e6b9e-940">A<xref:System.SystemException>產生。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-940">A <xref:System.SystemException> is generated.</span></span>|  
  
 <span data-ttu-id="e6b9e-941">`SourceColumn`屬性也用來對應輸出的值，或輸入/輸出參數回`DataSet`。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-941">The `SourceColumn` property is also used to map the value for output or input/output parameters back to the `DataSet`.</span></span> <span data-ttu-id="e6b9e-942">如果它是指不存在的資料行，會產生例外狀況。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-942">An exception is generated if it refers to a nonexistent column.</span></span>  
  
 <span data-ttu-id="e6b9e-943">`SourceVersion`的.NET Framework 資料提供者的屬性`Parameter`類別會決定是否要使用的資料行值的原始、 Current 或 Proposed 版本。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-943">The `SourceVersion` property of a .NET Framework data provider's `Parameter` class determines whether to use the Original, Current, or Proposed version of the column value.</span></span> <span data-ttu-id="e6b9e-944">這項功能通常用於在 UPDATE 陳述式來檢查有開放式同步存取違規的 WHERE 子句中包含原始值。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-944">This capability is often used to include original values in the WHERE clause of an UPDATE statement to check for optimistic concurrency violations.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e6b9e-945">如果在更新的資料列時發生錯誤，擲回例外狀況，並執行更新已停用。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-945">If an error occurs while updating a row, an exception is thrown and execution of the update is discontinued.</span></span> <span data-ttu-id="e6b9e-946">若要繼續更新作業，而不會產生例外狀況，當發生錯誤時，設定<xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A>屬性`true`之前先呼叫<xref:System.Data.Common.DbDataAdapter.Update%2A>。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-946">To continue the update operation without generating exceptions when an error is encountered, set the <xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A> property to `true` before calling <xref:System.Data.Common.DbDataAdapter.Update%2A>.</span></span> <span data-ttu-id="e6b9e-947">您可能也會回應內的每個資料列基礎上的錯誤`RowUpdated`DataAdapter 的事件。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-947">You may also respond to errors on a per-row basis within the `RowUpdated` event of a DataAdapter.</span></span> <span data-ttu-id="e6b9e-948">若要繼續更新作業，而不會產生例外狀況中的`RowUpdated`設定事件，<xref:System.Data.Common.RowUpdatedEventArgs.Status%2A>屬性<xref:System.Data.Common.RowUpdatedEventArgs>至<xref:System.Data.UpdateStatus.Continue>。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-948">To continue the update operation without generating an exception within the `RowUpdated` event, set the <xref:System.Data.Common.RowUpdatedEventArgs.Status%2A> property of the <xref:System.Data.Common.RowUpdatedEventArgs> to <xref:System.Data.UpdateStatus.Continue>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e6b9e-949"><see cref="T:System.Data.DataSet" /> 無效。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-949">The <see cref="T:System.Data.DataSet" /> is invalid.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e6b9e-950">來源資料表無效。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-950">The source table is invalid.</span></span></exception>
        <exception cref="T:System.SystemException"><span data-ttu-id="e6b9e-951">要更新的 <see cref="T:System.Data.DataRow" /> 不存在。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-951">No <see cref="T:System.Data.DataRow" /> exists to update.</span></span>  
  
 <span data-ttu-id="e6b9e-952">-或-</span><span class="sxs-lookup"><span data-stu-id="e6b9e-952">-or-</span></span>  
  
 <span data-ttu-id="e6b9e-953">要更新的 <see cref="T:System.Data.DataTable" /> 不存在。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-953">No <see cref="T:System.Data.DataTable" /> exists to update.</span></span>  
  
 <span data-ttu-id="e6b9e-954">-或-</span><span class="sxs-lookup"><span data-stu-id="e6b9e-954">-or-</span></span>  
  
 <span data-ttu-id="e6b9e-955">要用來做為來源的 <see cref="T:System.Data.DataSet" /> 不存在。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-955">No <see cref="T:System.Data.DataSet" /> exists to use as a source.</span></span></exception>
        <exception cref="T:System.Data.DBConcurrencyException"><span data-ttu-id="e6b9e-956">嘗試執行 INSERT、UPDATE 或 DELETE 陳述式會造成沒有資料錄受影響。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-956">An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public int Update (System.Data.DataSet dataSet, string srcTable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Update(class System.Data.DataSet dataSet, string srcTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Update(System::Data::DataSet ^ dataSet, System::String ^ srcTable);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
        <Parameter Name="srcTable" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dataSet"><span data-ttu-id="e6b9e-957">用來更新資料來源的 <see cref="T:System.Data.DataSet" />。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-957">The <see cref="T:System.Data.DataSet" /> to use to update the data source.</span></span></param>
        <param name="srcTable"><span data-ttu-id="e6b9e-958">用於資料表對應的來源資料表名稱。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-958">The name of the source table to use for table mapping.</span></span></param>
        <summary><span data-ttu-id="e6b9e-959">針對具有指定 <see cref="T:System.Data.DataTable" /> 名稱之 <see cref="T:System.Data.DataSet" /> 中的每個插入、更新或刪除的資料列，執行個別的 INSERT、UPDATE 或 DELETE 陳述式，以更新資料庫中的值。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-959">Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the <see cref="T:System.Data.DataSet" /> with the specified <see cref="T:System.Data.DataTable" /> name.</span></span></summary>
        <returns><span data-ttu-id="e6b9e-960">自 <see cref="T:System.Data.DataSet" /> 中成功更新的資料列數目。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-960">The number of rows successfully updated from the <see cref="T:System.Data.DataSet" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6b9e-961">當應用程式呼叫<xref:System.Data.Common.DbDataAdapter.Update%2A>方法，<xref:System.Data.Common.DbDataAdapter>檢查<xref:System.Data.DataRow.RowState%2A>屬性，並執行必要的 INSERT、 UPDATE 或 DELETE 陳述式，反覆地針對每個資料列，並根據中設定的索引順序<xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="e6b9e-961">When an application calls the <xref:System.Data.Common.DbDataAdapter.Update%2A> method, the <xref:System.Data.Common.DbDataAdapter> examines the <xref:System.Data.DataRow.RowState%2A> property, and executes the required INSERT, UPDATE, or DELETE statements iteratively for each row, based on the order of the indexes configured in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="e6b9e-962">例如，<xref:System.Data.Common.DbDataAdapter.Update%2A>可能會執行 DELETE 陳述式，後面接著 INSERT 陳述式，則另一個的 DELETE 陳述式，所以中的資料列的排序<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-962">For example, <xref:System.Data.Common.DbDataAdapter.Update%2A> might execute a DELETE statement, followed by an INSERT statement, and then another DELETE statement, due to the ordering of the rows in the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="e6b9e-963">請注意這些陳述式不會執行以批次的處理程序。個別更新每個資料列。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-963">It should be noted that these statements are not performed as a batch process; each row is updated individually.</span></span> <span data-ttu-id="e6b9e-964">應用程式可以呼叫<xref:System.Data.DataSet.GetChanges%2A>情況下，您必須在其中控制陳述式型別序列中的方法 （例如，更新之前插入）。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-964">An application can call the <xref:System.Data.DataSet.GetChanges%2A> method in situations where you must control the sequence of statement types (for example, INSERT before UPDATE).</span></span> <span data-ttu-id="e6b9e-965">如需詳細資訊，請參閱[以 Dataadapter 更新資料來源](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md)。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-965">For more information, see [Updating Data Sources with DataAdapters](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md).</span></span>  
  
 <span data-ttu-id="e6b9e-966">如果尚未指定 INSERT、 UPDATE 或 DELETE 陳述式，<xref:System.Data.Common.DbDataAdapter.Update%2A>方法會產生例外狀況。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-966">If INSERT, UPDATE, or DELETE statements have not been specified, the <xref:System.Data.Common.DbDataAdapter.Update%2A> method generates an exception.</span></span> <span data-ttu-id="e6b9e-967">不過，您可以建立<xref:System.Data.SqlClient.SqlCommandBuilder>或<xref:System.Data.OleDb.OleDbCommandBuilder>物件來自動產生的單一資料表更新 SQL 陳述式，如果您設定`SelectCommand`.NET Framework 資料提供者的屬性。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-967">However, you can create a <xref:System.Data.SqlClient.SqlCommandBuilder> or <xref:System.Data.OleDb.OleDbCommandBuilder> object to automatically generate SQL statements for single-table updates if you set the `SelectCommand` property of a .NET Framework data provider.</span></span> <span data-ttu-id="e6b9e-968">然後，您未設定任何其他 SQL 陳述式由產生**CommandBuilder**。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-968">Then, any additional SQL statements that you do not set are generated by the **CommandBuilder**.</span></span> <span data-ttu-id="e6b9e-969">此產生邏輯需要索引鍵資料行資訊會出現在<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-969">This generation logic requires key column information to be present in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="e6b9e-970">如需詳細資訊，請參閱[Commandbuilder 產生命令](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-970">For more information see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
 <span data-ttu-id="e6b9e-971"><xref:System.Data.Common.DbDataAdapter.Update%2A>方法支援案例其中<xref:System.Data.DataSet>包含多個<xref:System.Data.DataTable>名稱只有大小寫不同的物件。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-971">The <xref:System.Data.Common.DbDataAdapter.Update%2A> method supports scenarios where the <xref:System.Data.DataSet> contains multiple <xref:System.Data.DataTable> objects whose names differ only by case.</span></span> <span data-ttu-id="e6b9e-972">當多個資料表具有名稱相同但大小寫不同，存在於`DataSet`，<xref:System.Data.Common.DbDataAdapter.Update%2A>執行區分大小寫的比較，來尋找對應的資料表，並產生例外狀況，如果沒有完全相符項目存在。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-972">When multiple tables with the same name, but different case, exist in a `DataSet`, <xref:System.Data.Common.DbDataAdapter.Update%2A> performs a case-sensitive comparison to find the corresponding table, and generates an exception if no exact match exists.</span></span> <span data-ttu-id="e6b9e-973">下列 C# 程式碼說明這個行為。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-973">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet ds = new DataSet();  
 ds.Tables.Add("aaa");  
 ds.Tables.Add("AAA");  
 adapter.Update(ds, "aaa"); // Updates "aaa", which already exists in the DataSet.  
 adapter.Update(ds, "AAA"); // Updates "AAA", which already exists in the DataSet.  
    adapter.Update(ds, "Aaa"); // Results in an exception.  
```  
  
 <span data-ttu-id="e6b9e-974">如果<xref:System.Data.Common.DbDataAdapter.Update%2A>稱為和<xref:System.Data.DataSet>只包含<xref:System.Data.DataTable>名稱只有大小寫不同的<xref:System.Data.DataTable>會更新。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-974">If <xref:System.Data.Common.DbDataAdapter.Update%2A> is called and the <xref:System.Data.DataSet> contains only one <xref:System.Data.DataTable> whose name differs only by case, that <xref:System.Data.DataTable> is updated.</span></span> <span data-ttu-id="e6b9e-975">在此案例中，這個比較是不區分大小寫。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-975">In this scenario, the comparison is case insensitive.</span></span> <span data-ttu-id="e6b9e-976">下列 C# 程式碼說明這個行為。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-976">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
 dataset.Tables.Add("aaa");  
    adapter.Update(dataset, "AAA"); // Updates table "aaa" because only one similarly named table is in the DataSet.  
```  
  
 <span data-ttu-id="e6b9e-977"><xref:System.Data.Common.DbDataAdapter.Update%2A>方法會從執行更新前的第一個對應中所列的資料表擷取資料列。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-977">The <xref:System.Data.Common.DbDataAdapter.Update%2A> method retrieves rows from the table listed in the first mapping before performing an update.</span></span> <span data-ttu-id="e6b9e-978"><xref:System.Data.Common.DbDataAdapter.Update%2A>然後重新整理使用的值的資料列<xref:System.Data.IDbCommand.UpdatedRowSource%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-978">The <xref:System.Data.Common.DbDataAdapter.Update%2A> then refreshes the row using the value of the <xref:System.Data.IDbCommand.UpdatedRowSource%2A> property.</span></span> <span data-ttu-id="e6b9e-979">傳回的任何其他資料列都會被忽略。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-979">Any additional rows returned are ignored.</span></span>  
  
 <span data-ttu-id="e6b9e-980">任何資料會載入回後<xref:System.Data.DataSet>、<xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A>引發事件，讓使用者檢查調解<xref:System.Data.DataSet>資料列和任何輸出命令所傳回的參數。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-980">After any data is loaded back into the <xref:System.Data.DataSet>, the <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised, allowing the user to inspect the reconciled <xref:System.Data.DataSet> row and any output parameters returned by the command.</span></span> <span data-ttu-id="e6b9e-981">已成功更新資料列之後，會接受該資料列所做的變更。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-981">After a row updates successfully, the changes to that row are accepted.</span></span>  
  
 <span data-ttu-id="e6b9e-982">當使用<xref:System.Data.Common.DbDataAdapter.Update%2A>，執行的順序如下所示：</span><span class="sxs-lookup"><span data-stu-id="e6b9e-982">When using <xref:System.Data.Common.DbDataAdapter.Update%2A>, the order of execution is as follows:</span></span>  
  
1.  <span data-ttu-id="e6b9e-983">中的值<xref:System.Data.DataRow>移到參數值。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-983">The values in the <xref:System.Data.DataRow> are moved to the parameter values.</span></span>  
  
2.  <span data-ttu-id="e6b9e-984">便會引發 <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> 事件。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-984">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> event is raised.</span></span>  
  
3.  <span data-ttu-id="e6b9e-985">執行命令。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-985">The command executes.</span></span>  
  
4.  <span data-ttu-id="e6b9e-986">如果命令設定為`FirstReturnedRecord`，則第一個傳回的結果放在<xref:System.Data.DataRow>。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-986">If the command is set to `FirstReturnedRecord`, then the first returned result is placed in the <xref:System.Data.DataRow>.</span></span>  
  
5.  <span data-ttu-id="e6b9e-987">如果沒有輸出參數，它們會放置於<xref:System.Data.DataRow>。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-987">If there are output parameters, they are placed in the <xref:System.Data.DataRow>.</span></span>  
  
6.  <span data-ttu-id="e6b9e-988">便會引發 <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> 事件。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-988">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised.</span></span>  
  
7.  <span data-ttu-id="e6b9e-989">呼叫 <xref:System.Data.DataRow.AcceptChanges%2A>。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-989"><xref:System.Data.DataRow.AcceptChanges%2A> is called.</span></span>  
  
 <span data-ttu-id="e6b9e-990">每個相關聯的命令<xref:System.Data.Common.DbDataAdapter>通常會有與它關聯的參數集合。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-990">Each command associated with the <xref:System.Data.Common.DbDataAdapter> usually has a parameters collection associated with it.</span></span> <span data-ttu-id="e6b9e-991">參數對應到目前的資料列，透過`SourceColumn`和`SourceVersion`的.NET Framework 資料提供者的屬性`Parameter`類別。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-991">Parameters are mapped to the current row through the `SourceColumn` and `SourceVersion` properties of a .NET Framework data provider's `Parameter` class.</span></span> <span data-ttu-id="e6b9e-992">`SourceColumn` 是指<xref:System.Data.DataTable>資料行，<xref:System.Data.Common.DbDataAdapter>以取得目前資料列的參數值的參考。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-992">`SourceColumn` refers to a <xref:System.Data.DataTable> column that the <xref:System.Data.Common.DbDataAdapter> references to obtain parameter values for the current row.</span></span>  
  
 <span data-ttu-id="e6b9e-993">`SourceColumn` 在套用任何資料表對應之前，是指未對應的資料行名稱。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-993">`SourceColumn` refers to the unmapped column name before any table mappings have been applied.</span></span> <span data-ttu-id="e6b9e-994">如果`SourceColumn`參考到不存在的資料行中，所採取的動作取決於下列其中一種<xref:System.Data.MissingMappingAction>值。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-994">If `SourceColumn` refers to a nonexistent column, the action taken depends on one of the following <xref:System.Data.MissingMappingAction> values.</span></span>  
  
|<span data-ttu-id="e6b9e-995">列舉值</span><span class="sxs-lookup"><span data-stu-id="e6b9e-995">Enumeration value</span></span>|<span data-ttu-id="e6b9e-996">採取的動作</span><span class="sxs-lookup"><span data-stu-id="e6b9e-996">Action taken</span></span>|  
|-----------------------|------------------|  
|`MissingMappingAction.Passthrough`|<span data-ttu-id="e6b9e-997">使用中的資料表名稱與來源資料行名稱<xref:System.Data.DataSet>如果不不存在任何對應。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-997">Use the source column names and table names in the <xref:System.Data.DataSet> if no mapping is present.</span></span>|  
|`MissingMappingAction.Ignore`|<span data-ttu-id="e6b9e-998">A<xref:System.SystemException>產生。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-998">A <xref:System.SystemException> is generated.</span></span> <span data-ttu-id="e6b9e-999">對應已明確設定，當遺漏對應的輸入參數通常是錯誤的結果。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-999">When the mappings are explicitly set, a missing mapping for an input parameter is usually the result of an error.</span></span>|  
|`MissingMappingAction.Error`|<span data-ttu-id="e6b9e-1000">A<xref:System.SystemException>產生。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-1000">A <xref:System.SystemException> is generated.</span></span>|  
  
 <span data-ttu-id="e6b9e-1001">`SourceColumn`屬性也用來對應輸出的值，或輸入/輸出參數回`DataSet`。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-1001">The `SourceColumn` property is also used to map the value for output or input/output parameters back to the `DataSet`.</span></span> <span data-ttu-id="e6b9e-1002">如果它是指不存在的資料行，會產生例外狀況。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-1002">An exception is generated if it refers to a nonexistent column.</span></span>  
  
 <span data-ttu-id="e6b9e-1003">`SourceVersion`的.NET Framework 資料提供者的屬性`Parameter`類別會決定是否要使用的資料行值的原始、 Current 或 Proposed 版本。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-1003">The `SourceVersion` property of a .NET Framework data provider's `Parameter` class determines whether to use the Original, Current, or Proposed version of the column value.</span></span> <span data-ttu-id="e6b9e-1004">這項功能通常用於在 UPDATE 陳述式來檢查有開放式同步存取違規的 WHERE 子句中包含原始值。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-1004">This capability is often used to include original values in the WHERE clause of an UPDATE statement to check for optimistic concurrency violations.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e6b9e-1005">如果在更新的資料列時發生錯誤，擲回例外狀況，並執行更新已停用。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-1005">If an error occurs while updating a row, an exception is thrown and execution of the update is discontinued.</span></span> <span data-ttu-id="e6b9e-1006">若要繼續更新作業，而不會產生例外狀況，當發生錯誤時，設定<xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A>屬性`true`之前先呼叫<xref:System.Data.Common.DbDataAdapter.Update%2A>。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-1006">To continue the update operation without generating exceptions when an error is encountered, set the <xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A> property to `true` before calling <xref:System.Data.Common.DbDataAdapter.Update%2A>.</span></span> <span data-ttu-id="e6b9e-1007">您可能也會回應內的每個資料列基礎上的錯誤`RowUpdated`DataAdapter 的事件。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-1007">You may also respond to errors on a per-row basis within the `RowUpdated` event of a DataAdapter.</span></span> <span data-ttu-id="e6b9e-1008">若要繼續更新作業，而不會產生例外狀況中的`RowUpdated`設定事件，<xref:System.Data.Common.RowUpdatedEventArgs.Status%2A>屬性<xref:System.Data.Common.RowUpdatedEventArgs>至<xref:System.Data.UpdateStatus.Continue>。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-1008">To continue the update operation without generating an exception within the `RowUpdated` event, set the <xref:System.Data.Common.RowUpdatedEventArgs.Status%2A> property of the <xref:System.Data.Common.RowUpdatedEventArgs> to <xref:System.Data.UpdateStatus.Continue>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e6b9e-1009">下列範例會使用衍生的類別， <xref:System.Data.OleDb.OleDbDataAdapter>、 更新資料來源。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-1009">The following example uses the derived class, <xref:System.Data.OleDb.OleDbDataAdapter>, to update the data source.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.Update3#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Update3/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.Update3#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Update3/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e6b9e-1010"><see cref="T:System.Data.DataSet" /> 無效。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-1010">The <see cref="T:System.Data.DataSet" /> is invalid.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e6b9e-1011">來源資料表無效。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-1011">The source table is invalid.</span></span></exception>
        <exception cref="T:System.Data.DBConcurrencyException"><span data-ttu-id="e6b9e-1012">嘗試執行 INSERT、UPDATE 或 DELETE 陳述式會造成沒有資料錄受影響。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-1012">An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateBatchSize">
      <MemberSignature Language="C#" Value="public virtual int UpdateBatchSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 UpdateBatchSize" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataAdapter.UpdateBatchSize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property UpdateBatchSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int UpdateBatchSize { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e6b9e-1013">取得或設定值，其啟用或停用批次處理支援，並指定可於批次中執行的命令數目。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-1013">Gets or sets a value that enables or disables batch processing support, and specifies the number of commands that can be executed in a batch.</span></span></summary>
        <value><span data-ttu-id="e6b9e-1014">每一批次要處理的資料列數目。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-1014">The number of rows to process per batch.</span></span>  
  
 <span data-ttu-id="e6b9e-1015"><list type="table"><listheader><term> 值是</span><span class="sxs-lookup"><span data-stu-id="e6b9e-1015"><list type="table"><listheader><term> Value is</span></span>  
  
 <span data-ttu-id="e6b9e-1016"></term><description> 效果</span><span class="sxs-lookup"><span data-stu-id="e6b9e-1016"></term><description> Effect</span></span>  
  
 <span data-ttu-id="e6b9e-1017"></description></listheader><item><term> 0</span><span class="sxs-lookup"><span data-stu-id="e6b9e-1017"></description></listheader><item><term> 0</span></span>  
  
 <span data-ttu-id="e6b9e-1018"></term><description> 批次大小沒有任何限制。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-1018"></term><description> There is no limit on the batch size.</span></span>  
  
 <span data-ttu-id="e6b9e-1019"></description></item><item><term> 1</span><span class="sxs-lookup"><span data-stu-id="e6b9e-1019"></description></item><item><term> 1</span></span>  
  
 <span data-ttu-id="e6b9e-1020"></term><description> 停用批次更新。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-1020"></term><description> Disables batch updating.</span></span>  
  
 <span data-ttu-id="e6b9e-1021"></description></item><item><term> &gt; 1</span><span class="sxs-lookup"><span data-stu-id="e6b9e-1021"></description></item><item><term> &gt; 1</span></span>  
  
 <span data-ttu-id="e6b9e-1022"></term><description> 變更使用的批次傳送<see cref="P:System.Data.Common.DbDataAdapter.UpdateBatchSize" />一次作業。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-1022"></term><description> Changes are sent using batches of <see cref="P:System.Data.Common.DbDataAdapter.UpdateBatchSize" /> operations at a time.</span></span>  
  
 </description></item></list>  
  
 <span data-ttu-id="e6b9e-1023">當設定為 1 以外的值，與相關聯的所有命令<see cref="T:System.Data.Common.DbDataAdapter" />必須要有其<see cref="P:System.Data.IDbCommand.UpdatedRowSource" />屬性設定為**無**或**輸出參數**。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-1023">When setting this to a value other than 1, all the commands associated with the <see cref="T:System.Data.Common.DbDataAdapter" /> must have their <see cref="P:System.Data.IDbCommand.UpdatedRowSource" /> property set to **None** or **OutputParameters**.</span></span> <span data-ttu-id="e6b9e-1024">否則會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-1024">An exception will be thrown otherwise.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6b9e-1025">使用<xref:System.Data.Common.DbDataAdapter.UpdateBatchSize%2A>屬性來更新資料來源的變更與<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-1025">Use the <xref:System.Data.Common.DbDataAdapter.UpdateBatchSize%2A> property to update a data source with changes from a <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="e6b9e-1026">如果資料提供者支援批次處理，這可藉由減少伺服器的來回次數來增加應用程式的效能。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-1026">If the data provider supports batch processing, this can increase application performance by reducing the number of round-trips to the server.</span></span> <span data-ttu-id="e6b9e-1027">在 ADO.NET 2.0 中，這個屬性可支援.NET 資料提供者的 SQL Server (SqlClient) 和 Oracle (OracleClient)。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-1027">In ADO.NET 2.0, this property is supported for the .NET data providers for SQL Server (SqlClient) and Oracle (OracleClient).</span></span>  
  
 <span data-ttu-id="e6b9e-1028">執行極大的批次可能會降低效能。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-1028">Executing an extremely large batch could decrease performance.</span></span> <span data-ttu-id="e6b9e-1029">因此，您應該先測試理想的批次大小設定，再實作應用程式。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-1029">Therefore, you should test for the optimum batch size setting before implementing your application.</span></span>  
  
 <span data-ttu-id="e6b9e-1030"><xref:System.ArgumentOutOfRangeException>會擲回此值設為號碼小於零。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-1030">An <xref:System.ArgumentOutOfRangeException> will be thrown if the value is set to a number less than zero.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateCommand">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbCommand UpdateCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbCommand UpdateCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataAdapter.UpdateCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateCommand As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Common::DbCommand ^ UpdateCommand { System::Data::Common::DbCommand ^ get(); void set(System::Data::Common::DbCommand ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e6b9e-1031">取得或設定用來在資料來源中更新資料錄的命令。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-1031">Gets or sets a command used to update records in the data source.</span></span></summary>
        <value><span data-ttu-id="e6b9e-1032"><see cref="T:System.Data.IDbCommand" />，在 <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> 期間用來為資料集中修改的資料列更新在資料來源中的資料錄。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-1032">A <see cref="T:System.Data.IDbCommand" /> used during <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> to update records in the data source for modified rows in the data set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6b9e-1033">期間<xref:System.Data.Common.DbDataAdapter.Update%2A>，如果沒有設定這個屬性，並且出現在主索引鍵資訊<xref:System.Data.DataSet>、<xref:System.Data.IDbDataAdapter.UpdateCommand%2A>就會自動產生。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-1033">During <xref:System.Data.Common.DbDataAdapter.Update%2A>, if this property is not set and primary key information is present in the <xref:System.Data.DataSet>, the <xref:System.Data.IDbDataAdapter.UpdateCommand%2A> will be automatically generated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e6b9e-1034">下列範例會建立衍生的類別<xref:System.Data.OleDb.OleDbDataAdapter>並設定其屬性的某些。</span><span class="sxs-lookup"><span data-stu-id="e6b9e-1034">The following example creates the derived class <xref:System.Data.OleDb.OleDbDataAdapter> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.UpdateCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.UpdateCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.UpdateCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.UpdateCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>