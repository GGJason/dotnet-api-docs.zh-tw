<Type Name="DbDataAdapter" FullName="System.Data.Common.DbDataAdapter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3db191c839c8f56032f735e1fccf95a42edd36ef" /><Meta Name="ms.sourcegitcommit" Value="0609891c89ddaa91e4c02970acb00072fcc29baf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="05/13/2019" /><Meta Name="ms.locfileid" Value="65558339" /></Metadata><TypeSignature Language="C#" Value="public abstract class DbDataAdapter : System.Data.Common.DataAdapter, ICloneable, System.Data.IDbDataAdapter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit DbDataAdapter extends System.Data.Common.DataAdapter implements class System.Data.IDataAdapter, class System.Data.IDbDataAdapter, class System.ICloneable" />
  <TypeSignature Language="DocId" Value="T:System.Data.Common.DbDataAdapter" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class DbDataAdapter&#xA;Inherits DataAdapter&#xA;Implements ICloneable, IDbDataAdapter" />
  <TypeSignature Language="C++ CLI" Value="public ref class DbDataAdapter abstract : System::Data::Common::DataAdapter, ICloneable, System::Data::IDbDataAdapter" />
  <TypeSignature Language="F#" Value="type DbDataAdapter = class&#xA;    inherit DataAdapter&#xA;    interface IDbDataAdapter&#xA;    interface ICloneable&#xA;    interface IDataAdapter" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DataAdapter</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Data.IDataAdapter</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Data.IDbDataAdapter</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="72192-101">可協助實作 <see cref="T:System.Data.IDbDataAdapter" /> 介面。</span><span class="sxs-lookup"><span data-stu-id="72192-101">Aids implementation of the <see cref="T:System.Data.IDbDataAdapter" /> interface.</span></span> <span data-ttu-id="72192-102"><see cref="T:System.Data.Common.DbDataAdapter" /> 繼承者實作一組函式以提供強型別，但繼承大多數完整實作 **DataAdapter** 所需的功能。</span><span class="sxs-lookup"><span data-stu-id="72192-102">Inheritors of <see cref="T:System.Data.Common.DbDataAdapter" /> implement a set of functions to provide strong typing, but inherit most of the functionality needed to fully implement a **DataAdapter**.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72192-103"><xref:System.Data.Common.DbDataAdapter>類別繼承自<xref:System.Data.Common.DataAdapter>類別，並且實作<xref:System.Data.IDbDataAdapter>介面。</span><span class="sxs-lookup"><span data-stu-id="72192-103">The <xref:System.Data.Common.DbDataAdapter> class inherits from the <xref:System.Data.Common.DataAdapter> class and implements the <xref:System.Data.IDbDataAdapter> interface.</span></span> <span data-ttu-id="72192-104">它可協助實作的類別**DataAdapter**設計使用於關聯式資料庫。</span><span class="sxs-lookup"><span data-stu-id="72192-104">It helps a class implement a **DataAdapter** designed for use with a relational database.</span></span>  
  
 <span data-ttu-id="72192-105">應用程式不會建立的執行個體<xref:System.Data.Common.DbDataAdapter>類別直接，但是會建立繼承自該類別的執行個體。</span><span class="sxs-lookup"><span data-stu-id="72192-105">An application does not create an instance of the <xref:System.Data.Common.DbDataAdapter> class directly, but creates an instance of a class that inherits from it.</span></span>  
  
 <span data-ttu-id="72192-106">繼承的類別<xref:System.Data.Common.DbDataAdapter>必須實作繼承的成員，並通常會定義要新增提供者特有的功能的其他成員。</span><span class="sxs-lookup"><span data-stu-id="72192-106">Classes that inherit <xref:System.Data.Common.DbDataAdapter> must implement the inherited members, and typically define additional members to add provider-specific functionality.</span></span> <span data-ttu-id="72192-107">例如，<xref:System.Data.Common.DbDataAdapter>類別會定義<xref:System.Data.IDbDataAdapter.SelectCommand%2A>屬性，而<xref:System.Data.Common.DbDataAdapter>類別定義了八個多載<xref:System.Data.IDataAdapter.Fill%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="72192-107">For example, the <xref:System.Data.Common.DbDataAdapter> class defines the <xref:System.Data.IDbDataAdapter.SelectCommand%2A> property, and the <xref:System.Data.Common.DbDataAdapter> class defines eight overloads of the <xref:System.Data.IDataAdapter.Fill%2A> method.</span></span> <span data-ttu-id="72192-108">依次<xref:System.Data.OleDb.OleDbDataAdapter>類別會繼承<xref:System.Data.Common.DbDataAdapter.Fill%2A>方法，而且也會定義兩個額外的多載<xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A>可接受的 ADO 資料錄集物件，做為參數。</span><span class="sxs-lookup"><span data-stu-id="72192-108">In turn, the <xref:System.Data.OleDb.OleDbDataAdapter> class inherits the <xref:System.Data.Common.DbDataAdapter.Fill%2A> method, and also defines two additional overloads of <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> that take an ADO Recordset object as a parameter.</span></span>  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para><span data-ttu-id="72192-109">當您繼承自<see cref="T:System.Data.Common.DbDataAdapter" />類別，建議您實作下列建構函式：</span><span class="sxs-lookup"><span data-stu-id="72192-109">When you inherit from the <see cref="T:System.Data.Common.DbDataAdapter" /> class, we recommend that you implement the following constructors:</span></span> 
 <list type="table"><listheader><term> <span data-ttu-id="72192-110">項目</span><span class="sxs-lookup"><span data-stu-id="72192-110">Item</span></span> 
 </term><description> <span data-ttu-id="72192-111">描述</span><span class="sxs-lookup"><span data-stu-id="72192-111">Description</span></span> 
 </description></listheader><item><term> <span data-ttu-id="72192-112">*Prv*DataAdapter()</span><span class="sxs-lookup"><span data-stu-id="72192-112">*Prv*DataAdapter()</span></span> 
 </term><description> <span data-ttu-id="72192-113">初始化的新執行個體*Prv*DataAdapter 類別。</span><span class="sxs-lookup"><span data-stu-id="72192-113">Initializes a new instance of the *Prv*DataAdapter class.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="72192-114">*Prv*DataAdapter(*Prv*Command *selectCommand*)</span><span class="sxs-lookup"><span data-stu-id="72192-114">*Prv*DataAdapter(*Prv*Command *selectCommand*)</span></span> 
 </term><description> <span data-ttu-id="72192-115">初始化的新執行個體*Prv*DataAdapter 類別使用指定的 SQL SELECT 陳述式。</span><span class="sxs-lookup"><span data-stu-id="72192-115">Initializes a new instance of the *Prv*DataAdapter class with the specified SQL SELECT statement.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="72192-116">*Prv*DataAdapter(string *selectCommandText*, string *selectConnectionString*)</span><span class="sxs-lookup"><span data-stu-id="72192-116">*Prv*DataAdapter(string *selectCommandText*, string *selectConnectionString*)</span></span> 
 </term><description> <span data-ttu-id="72192-117">初始化的新執行個體*Prv*DataAdapter 類別使用的 SQL SELECT 陳述式和連接字串。</span><span class="sxs-lookup"><span data-stu-id="72192-117">Initializes a new instance of the *Prv*DataAdapter class with an SQL SELECT statement and a connection string.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="72192-118">*Prv*DataAdapter(string *selectCommandText*, *Prv*Connection *selectConnection*)</span><span class="sxs-lookup"><span data-stu-id="72192-118">*Prv*DataAdapter(string *selectCommandText*, *Prv*Connection *selectConnection*)</span></span> 
 </term><description> <span data-ttu-id="72192-119">初始化的新執行個體*Prv*DataAdapter 類別，使用 SQL SELECT 陳述式並*Prv*連接物件。</span><span class="sxs-lookup"><span data-stu-id="72192-119">Initializes a new instance of the *Prv*DataAdapter class with an SQL SELECT statement and a *Prv*Connection object.</span></span>  
  
 </description></item></list>  

 <span data-ttu-id="72192-120">若要提升在.NET Framework 資料提供者之間的一致性，表單中的繼承類別應該命名*Prv*DataAdapter，其中*Prv*是統一的前置詞提供給特定的.NET 中的所有類別Framework 資料提供者命名空間。</span><span class="sxs-lookup"><span data-stu-id="72192-120">To promote consistency among .NET Framework data providers, you should name the inheriting class in the form *Prv*DataAdapter, where *Prv* is the uniform prefix given to all classes in a specific .NET Framework data provider namespace.</span></span> <span data-ttu-id="72192-121">例如，"Sql"為的前置詞<see cref="T:System.Data.SqlClient.SqlDataAdapter" />類別內**System.Data.SqlClient**命名空間。</span><span class="sxs-lookup"><span data-stu-id="72192-121">For example, "Sql" is the prefix of the <see cref="T:System.Data.SqlClient.SqlDataAdapter" /> class in the **System.Data.SqlClient** namespace.</span></span></para></block>
    <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="72192-122">DbProviderFactory (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="72192-122">DbProviderFactories (ADO.NET)</span></span></related>
    <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="72192-123">ADO.NET 概觀</span><span class="sxs-lookup"><span data-stu-id="72192-123">ADO.NET Overview</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="72192-124">初始化 <see langword="DataAdapter" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="72192-124">Initializes a new instance of a <see langword="DataAdapter" /> class.</span></span></summary>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="72192-125">ADO.NET 概觀</span><span class="sxs-lookup"><span data-stu-id="72192-125">ADO.NET Overview</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DbDataAdapter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DbDataAdapter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="72192-126">初始化 **DataAdapter** 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="72192-126">Initializes a new instance of a **DataAdapter** class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72192-127">當您建立的執行個體<xref:System.Data.Common.DbDataAdapter>，下列的讀取/寫入屬性設定為下列的初始值。</span><span class="sxs-lookup"><span data-stu-id="72192-127">When you create an instance of <xref:System.Data.Common.DbDataAdapter>, the following read/write properties are set to the following initial values.</span></span>  
  
|<span data-ttu-id="72192-128">屬性</span><span class="sxs-lookup"><span data-stu-id="72192-128">Properties</span></span>|<span data-ttu-id="72192-129">Initial value</span><span class="sxs-lookup"><span data-stu-id="72192-129">Initial value</span></span>|  
|----------------|-------------------|  
|<xref:System.Data.IDbDataAdapter.SelectCommand%2A>|<span data-ttu-id="72192-130">新的 <xref:System.Data.IDbCommand>。</span><span class="sxs-lookup"><span data-stu-id="72192-130">A new <xref:System.Data.IDbCommand>.</span></span>|  
|<xref:System.Data.IDbDataAdapter.InsertCommand%2A>|<span data-ttu-id="72192-131">新的 <xref:System.Data.IDbCommand>。</span><span class="sxs-lookup"><span data-stu-id="72192-131">A new <xref:System.Data.IDbCommand>.</span></span>|  
|<xref:System.Data.IDbDataAdapter.DeleteCommand%2A>|<span data-ttu-id="72192-132">新的 <xref:System.Data.IDbCommand>。</span><span class="sxs-lookup"><span data-stu-id="72192-132">A new <xref:System.Data.IDbCommand>.</span></span>|  
|<xref:System.Data.IDbDataAdapter.UpdateCommand%2A>|<span data-ttu-id="72192-133">新的 <xref:System.Data.IDbCommand>。</span><span class="sxs-lookup"><span data-stu-id="72192-133">A new <xref:System.Data.IDbCommand>.</span></span>|  
|<xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>|`MissingMappingAction.Passthrough`|  
|<xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>|`MissingSchemaAction.Add`|  
  
 <span data-ttu-id="72192-134">您可以變更任何屬性個別呼叫透過這些屬性的值。</span><span class="sxs-lookup"><span data-stu-id="72192-134">You can change the value of any of these properties through a separate call to the property.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="72192-135">DbProviderFactory (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="72192-135">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="72192-136">ADO.NET 概觀</span><span class="sxs-lookup"><span data-stu-id="72192-136">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DbDataAdapter (System.Data.Common.DbDataAdapter adapter);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Data.Common.DbDataAdapter adapter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.#ctor(System.Data.Common.DbDataAdapter)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (adapter As DbDataAdapter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DbDataAdapter(System::Data::Common::DbDataAdapter ^ adapter);" />
      <MemberSignature Language="F#" Value="new System.Data.Common.DbDataAdapter : System.Data.Common.DbDataAdapter -&gt; System.Data.Common.DbDataAdapter" Usage="new System.Data.Common.DbDataAdapter adapter" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="adapter" Type="System.Data.Common.DbDataAdapter" />
      </Parameters>
      <Docs>
        <param name="adapter"><span data-ttu-id="72192-137">A<see langword="DataAdapter" />用來建立新物件<see langword="DataAdapter" />。</span><span class="sxs-lookup"><span data-stu-id="72192-137">A <see langword="DataAdapter" /> object used to create the new <see langword="DataAdapter" />.</span></span></param>
        <summary><span data-ttu-id="72192-138">初始化的新執行個體<see langword="DataAdapter" />從現有的物件相同型別的類別。</span><span class="sxs-lookup"><span data-stu-id="72192-138">Initializes a new instance of a <see langword="DataAdapter" /> class from an existing object of the same type.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72192-139">這個多載<xref:System.Data.Common.DbDataAdapter>建構函式設計用於由.NET Framework 資料提供者在複製的實作中實作類似的建構函式使用時。</span><span class="sxs-lookup"><span data-stu-id="72192-139">This overload of the <xref:System.Data.Common.DbDataAdapter> constructor is designed for use by a .NET Framework data provider when implementing a similar constructor for use in a clone implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="72192-140">DbProviderFactory (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="72192-140">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="72192-141">ADO.NET 概觀</span><span class="sxs-lookup"><span data-stu-id="72192-141">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AddToBatch">
      <MemberSignature Language="C#" Value="protected virtual int AddToBatch (System.Data.IDbCommand command);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 AddToBatch(class System.Data.IDbCommand command) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.AddToBatch(System.Data.IDbCommand)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function AddToBatch (command As IDbCommand) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int AddToBatch(System::Data::IDbCommand ^ command);" />
      <MemberSignature Language="F#" Value="abstract member AddToBatch : System.Data.IDbCommand -&gt; int&#xA;override this.AddToBatch : System.Data.IDbCommand -&gt; int" Usage="dbDataAdapter.AddToBatch command" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="System.Data.IDbCommand" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="command"><span data-ttu-id="72192-142"><see cref="T:System.Data.IDbCommand" />將新增至批次。</span><span class="sxs-lookup"><span data-stu-id="72192-142">The <see cref="T:System.Data.IDbCommand" /> to add to the batch.</span></span></param>
        <summary><span data-ttu-id="72192-143">新增<see cref="T:System.Data.IDbCommand" />至目前的批次。</span><span class="sxs-lookup"><span data-stu-id="72192-143">Adds a <see cref="T:System.Data.IDbCommand" /> to the current batch.</span></span></summary>
        <returns><span data-ttu-id="72192-144">然後再加入批次中的命令數目<see cref="T:System.Data.IDbCommand" />。</span><span class="sxs-lookup"><span data-stu-id="72192-144">The number of commands in the batch before adding the <see cref="T:System.Data.IDbCommand" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72192-145">在  <xref:System.Data.Common.DbDataAdapter>，此方法會擲回<xref:System.NotSupportedException>。</span><span class="sxs-lookup"><span data-stu-id="72192-145">In <xref:System.Data.Common.DbDataAdapter>, this method throws <xref:System.NotSupportedException>.</span></span> <span data-ttu-id="72192-146">類別繼承自<xref:System.Data.Common.DbDataAdapter>覆寫這個方法，以提供的批次支援。</span><span class="sxs-lookup"><span data-stu-id="72192-146">Classes that inherit from <xref:System.Data.Common.DbDataAdapter> override this method to provide support for batches.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="72192-147">配接器不支援批次。</span><span class="sxs-lookup"><span data-stu-id="72192-147">The adapter does not support batches.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="72192-148">這個方法會保護，而且設計用於使用.NET Framework 資料提供者。</span><span class="sxs-lookup"><span data-stu-id="72192-148">This method is protected and is designed for use by a .NET Framework data provider.</span></span>  
  
<span data-ttu-id="72192-149">如果類別繼承自<see cref="T:System.Data.Common.DbDataAdapter" />支援批次，該類別會覆寫此方法以允許使用者將命令加入至批次。</span><span class="sxs-lookup"><span data-stu-id="72192-149">If a class that inherits from <see cref="T:System.Data.Common.DbDataAdapter" /> supports batches, that class overrides this method to allow users to add a command to a batch.</span></span></para></block>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="72192-150">DbProviderFactory (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="72192-150">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="72192-151">ADO.NET 概觀</span><span class="sxs-lookup"><span data-stu-id="72192-151">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ClearBatch">
      <MemberSignature Language="C#" Value="protected virtual void ClearBatch ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ClearBatch() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.ClearBatch" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ClearBatch ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ClearBatch();" />
      <MemberSignature Language="F#" Value="abstract member ClearBatch : unit -&gt; unit&#xA;override this.ClearBatch : unit -&gt; unit" Usage="dbDataAdapter.ClearBatch " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="72192-152">移除所有<see cref="T:System.Data.IDbCommand" />批次中的物件。</span><span class="sxs-lookup"><span data-stu-id="72192-152">Removes all <see cref="T:System.Data.IDbCommand" /> objects from the batch.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72192-153">在  <xref:System.Data.Common.DbDataAdapter>，此方法會擲回<xref:System.NotSupportedException>。</span><span class="sxs-lookup"><span data-stu-id="72192-153">In <xref:System.Data.Common.DbDataAdapter>, this method throws <xref:System.NotSupportedException>.</span></span> <span data-ttu-id="72192-154">類別繼承自<xref:System.Data.Common.DbDataAdapter>覆寫這個方法，以提供的批次支援。</span><span class="sxs-lookup"><span data-stu-id="72192-154">Classes that inherit from <xref:System.Data.Common.DbDataAdapter> override this method to provide support for batches.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="72192-155">配接器不支援批次。</span><span class="sxs-lookup"><span data-stu-id="72192-155">The adapter does not support batches.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="72192-156">這個方法會保護，而且設計用於使用.NET Framework 資料提供者。</span><span class="sxs-lookup"><span data-stu-id="72192-156">This method is protected and is designed for use by a .NET Framework data provider.</span></span>  
  
<span data-ttu-id="72192-157">如果類別繼承自<see cref="T:System.Data.Common.DbDataAdapter" />支援批次，該類別會覆寫此方法以允許使用者從批次移除所有的命令。</span><span class="sxs-lookup"><span data-stu-id="72192-157">If a class that inherits from <see cref="T:System.Data.Common.DbDataAdapter" /> supports batches, that class overrides this method to allow users to remove all commands from a batch.</span></span></para></block>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="72192-158">DbProviderFactory (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="72192-158">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="72192-159">ADO.NET 概觀</span><span class="sxs-lookup"><span data-stu-id="72192-159">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CreateRowUpdatedEvent">
      <MemberSignature Language="C#" Value="protected virtual System.Data.Common.RowUpdatedEventArgs CreateRowUpdatedEvent (System.Data.DataRow dataRow, System.Data.IDbCommand command, System.Data.StatementType statementType, System.Data.Common.DataTableMapping tableMapping);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.Common.RowUpdatedEventArgs CreateRowUpdatedEvent(class System.Data.DataRow dataRow, class System.Data.IDbCommand command, valuetype System.Data.StatementType statementType, class System.Data.Common.DataTableMapping tableMapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Data::Common::RowUpdatedEventArgs ^ CreateRowUpdatedEvent(System::Data::DataRow ^ dataRow, System::Data::IDbCommand ^ command, System::Data::StatementType statementType, System::Data::Common::DataTableMapping ^ tableMapping);" />
      <MemberSignature Language="F#" Value="abstract member CreateRowUpdatedEvent : System.Data.DataRow * System.Data.IDbCommand * System.Data.StatementType * System.Data.Common.DataTableMapping -&gt; System.Data.Common.RowUpdatedEventArgs&#xA;override this.CreateRowUpdatedEvent : System.Data.DataRow * System.Data.IDbCommand * System.Data.StatementType * System.Data.Common.DataTableMapping -&gt; System.Data.Common.RowUpdatedEventArgs" Usage="dbDataAdapter.CreateRowUpdatedEvent (dataRow, command, statementType, tableMapping)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.RowUpdatedEventArgs</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataRow" Type="System.Data.DataRow" />
        <Parameter Name="command" Type="System.Data.IDbCommand" />
        <Parameter Name="statementType" Type="System.Data.StatementType" />
        <Parameter Name="tableMapping" Type="System.Data.Common.DataTableMapping" />
      </Parameters>
      <Docs>
        <param name="dataRow"><span data-ttu-id="72192-160"><see cref="T:System.Data.DataRow" />用來更新資料來源。</span><span class="sxs-lookup"><span data-stu-id="72192-160">The <see cref="T:System.Data.DataRow" /> used to update the data source.</span></span></param>
        <param name="command"><span data-ttu-id="72192-161"><see cref="T:System.Data.IDbCommand" />期間執行<see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />。</span><span class="sxs-lookup"><span data-stu-id="72192-161">The <see cref="T:System.Data.IDbCommand" /> executed during the <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />.</span></span></param>
        <param name="statementType"><span data-ttu-id="72192-162">命令是要更新、 插入、 刪除或 SELECT 陳述式。</span><span class="sxs-lookup"><span data-stu-id="72192-162">Whether the command is an UPDATE, INSERT, DELETE, or SELECT statement.</span></span></param>
        <param name="tableMapping"><span data-ttu-id="72192-163"><see cref="T:System.Data.Common.DataTableMapping" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="72192-163">A <see cref="T:System.Data.Common.DataTableMapping" /> object.</span></span></param>
        <summary><span data-ttu-id="72192-164">初始化 <see cref="T:System.Data.Common.RowUpdatedEventArgs" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="72192-164">Initializes a new instance of the <see cref="T:System.Data.Common.RowUpdatedEventArgs" /> class.</span></span></summary>
        <returns><span data-ttu-id="72192-165"><see cref="T:System.Data.Common.RowUpdatedEventArgs" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="72192-165">A new instance of the <see cref="T:System.Data.Common.RowUpdatedEventArgs" /> class.</span></span></returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="72192-166">當覆寫<see cref="M:System.Data.Common.DbDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" />衍生類別時，請務必呼叫基底類別的<see cref="M:System.Data.Common.DbDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" />方法。</span><span class="sxs-lookup"><span data-stu-id="72192-166">When overriding <see cref="M:System.Data.Common.DbDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" /> in a derived class, be sure to call the base class's <see cref="M:System.Data.Common.DbDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" /> method.</span></span></para></block>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="72192-167">ADO.NET 概觀</span><span class="sxs-lookup"><span data-stu-id="72192-167">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CreateRowUpdatingEvent">
      <MemberSignature Language="C#" Value="protected virtual System.Data.Common.RowUpdatingEventArgs CreateRowUpdatingEvent (System.Data.DataRow dataRow, System.Data.IDbCommand command, System.Data.StatementType statementType, System.Data.Common.DataTableMapping tableMapping);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.Common.RowUpdatingEventArgs CreateRowUpdatingEvent(class System.Data.DataRow dataRow, class System.Data.IDbCommand command, valuetype System.Data.StatementType statementType, class System.Data.Common.DataTableMapping tableMapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Data::Common::RowUpdatingEventArgs ^ CreateRowUpdatingEvent(System::Data::DataRow ^ dataRow, System::Data::IDbCommand ^ command, System::Data::StatementType statementType, System::Data::Common::DataTableMapping ^ tableMapping);" />
      <MemberSignature Language="F#" Value="abstract member CreateRowUpdatingEvent : System.Data.DataRow * System.Data.IDbCommand * System.Data.StatementType * System.Data.Common.DataTableMapping -&gt; System.Data.Common.RowUpdatingEventArgs&#xA;override this.CreateRowUpdatingEvent : System.Data.DataRow * System.Data.IDbCommand * System.Data.StatementType * System.Data.Common.DataTableMapping -&gt; System.Data.Common.RowUpdatingEventArgs" Usage="dbDataAdapter.CreateRowUpdatingEvent (dataRow, command, statementType, tableMapping)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.RowUpdatingEventArgs</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataRow" Type="System.Data.DataRow" />
        <Parameter Name="command" Type="System.Data.IDbCommand" />
        <Parameter Name="statementType" Type="System.Data.StatementType" />
        <Parameter Name="tableMapping" Type="System.Data.Common.DataTableMapping" />
      </Parameters>
      <Docs>
        <param name="dataRow"><span data-ttu-id="72192-168"><see cref="T:System.Data.DataRow" /> ，更新資料來源。</span><span class="sxs-lookup"><span data-stu-id="72192-168">The <see cref="T:System.Data.DataRow" /> that updates the data source.</span></span></param>
        <param name="command"><span data-ttu-id="72192-169"><see cref="T:System.Data.IDbCommand" />期間執行<see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />。</span><span class="sxs-lookup"><span data-stu-id="72192-169">The <see cref="T:System.Data.IDbCommand" /> to execute during the <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />.</span></span></param>
        <param name="statementType"><span data-ttu-id="72192-170">命令是要更新、 插入、 刪除或 SELECT 陳述式。</span><span class="sxs-lookup"><span data-stu-id="72192-170">Whether the command is an UPDATE, INSERT, DELETE, or SELECT statement.</span></span></param>
        <param name="tableMapping"><span data-ttu-id="72192-171"><see cref="T:System.Data.Common.DataTableMapping" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="72192-171">A <see cref="T:System.Data.Common.DataTableMapping" /> object.</span></span></param>
        <summary><span data-ttu-id="72192-172">初始化 <see cref="T:System.Data.Common.RowUpdatingEventArgs" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="72192-172">Initializes a new instance of the <see cref="T:System.Data.Common.RowUpdatingEventArgs" /> class.</span></span></summary>
        <returns><span data-ttu-id="72192-173"><see cref="T:System.Data.Common.RowUpdatingEventArgs" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="72192-173">A new instance of the <see cref="T:System.Data.Common.RowUpdatingEventArgs" /> class.</span></span></returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="72192-174">當覆寫<see cref="M:System.Data.Common.DbDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" />衍生類別時，請務必呼叫基底類別的<see cref="M:System.Data.Common.DbDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" />方法。</span><span class="sxs-lookup"><span data-stu-id="72192-174">When overriding <see cref="M:System.Data.Common.DbDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" /> in a derived class, be sure to call the base class's <see cref="M:System.Data.Common.DbDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" /> method.</span></span></para></block>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="72192-175">DbProviderFactory (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="72192-175">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="72192-176">ADO.NET 概觀</span><span class="sxs-lookup"><span data-stu-id="72192-176">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DefaultSourceTableName">
      <MemberSignature Language="C#" Value="public const string DefaultSourceTableName;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string DefaultSourceTableName" />
      <MemberSignature Language="DocId" Value="F:System.Data.Common.DbDataAdapter.DefaultSourceTableName" />
      <MemberSignature Language="VB.NET" Value="Public Const DefaultSourceTableName As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ DefaultSourceTableName;" />
      <MemberSignature Language="F#" Value="val mutable DefaultSourceTableName : string" Usage="System.Data.Common.DbDataAdapter.DefaultSourceTableName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="72192-177">所使用的預設名稱<see cref="T:System.Data.Common.DataAdapter" />資料表對應的物件。</span><span class="sxs-lookup"><span data-stu-id="72192-177">The default name used by the <see cref="T:System.Data.Common.DataAdapter" /> object for table mappings.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72192-178">「 資料表 」 時所使用的預設名稱<xref:System.Data.Common.DataAdapter>資料表對應的物件。</span><span class="sxs-lookup"><span data-stu-id="72192-178">"Table" is the default name used by the <xref:System.Data.Common.DataAdapter> object for table mappings.</span></span>  
  
 <span data-ttu-id="72192-179"><xref:System.Data.Common.DbDataAdapter.DefaultSourceTableName> 時，應用程式新增至適用於資料表對應<xref:System.Data.Common.DbDataAdapter.Fill%2A>，但未指定<xref:System.Data.DataTable>名稱。</span><span class="sxs-lookup"><span data-stu-id="72192-179"><xref:System.Data.Common.DbDataAdapter.DefaultSourceTableName> is when an application adds a table mapping to be used with <xref:System.Data.Common.DbDataAdapter.Fill%2A>, but does not specify a <xref:System.Data.DataTable> name.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="72192-180">DbProviderFactory (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="72192-180">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="72192-181">ADO.NET 概觀</span><span class="sxs-lookup"><span data-stu-id="72192-181">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DeleteCommand">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbCommand DeleteCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbCommand DeleteCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataAdapter.DeleteCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property DeleteCommand As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Common::DbCommand ^ DeleteCommand { System::Data::Common::DbCommand ^ get(); void set(System::Data::Common::DbCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DeleteCommand : System.Data.Common.DbCommand with get, set" Usage="System.Data.Common.DbDataAdapter.DeleteCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;netcore-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="72192-182">取得或設定從資料集刪除資料錄的命令。</span><span class="sxs-lookup"><span data-stu-id="72192-182">Gets or sets a command for deleting records from the data set.</span></span></summary>
        <value><span data-ttu-id="72192-183"><see cref="T:System.Data.IDbCommand" />期間使用<see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />在資料集中刪除的資料列的資料來源中刪除記錄。</span><span class="sxs-lookup"><span data-stu-id="72192-183">An <see cref="T:System.Data.IDbCommand" /> used during <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> to delete records in the data source for deleted rows in the data set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72192-184">期間<xref:System.Data.Common.DbDataAdapter.Update%2A>，如果沒有設定這個屬性，而主索引鍵資訊是存在於<xref:System.Data.DataSet>，則<xref:System.Data.IDbDataAdapter.DeleteCommand%2A>自動產生。</span><span class="sxs-lookup"><span data-stu-id="72192-184">During <xref:System.Data.Common.DbDataAdapter.Update%2A>, if this property is not set and primary key information is present in the <xref:System.Data.DataSet>, the <xref:System.Data.IDbDataAdapter.DeleteCommand%2A> is automatically generated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="72192-185">下列範例會建立衍生的類別<xref:System.Data.OleDb.OleDbDataAdapter>並設定其部分屬性。</span><span class="sxs-lookup"><span data-stu-id="72192-185">The following example creates the derived class <xref:System.Data.OleDb.OleDbDataAdapter> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.DeleteCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.DeleteCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.DeleteCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.DeleteCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md"><span data-ttu-id="72192-186">操作資料 (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="72192-186">Manipulating Data (ADO.NET)</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="72192-187">DbProviderFactory (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="72192-187">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="72192-188">ADO.NET 概觀</span><span class="sxs-lookup"><span data-stu-id="72192-188">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="dbDataAdapter.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="72192-189"><see langword="true" /> 表示釋放 Managed 和 Unmanaged 資源，<see langword="false" /> 則表示只釋放 Unmanaged 資源。</span><span class="sxs-lookup"><span data-stu-id="72192-189"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="72192-190">釋放 <see cref="T:System.Data.Common.DbDataAdapter" /> 所使用的 Unmanaged 資源，並選擇性地釋放 Managed 資源。</span><span class="sxs-lookup"><span data-stu-id="72192-190">Releases the unmanaged resources used by the <see cref="T:System.Data.Common.DbDataAdapter" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="72192-191">DbProviderFactory (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="72192-191">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="72192-192">ADO.NET 概觀</span><span class="sxs-lookup"><span data-stu-id="72192-192">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ExecuteBatch">
      <MemberSignature Language="C#" Value="protected virtual int ExecuteBatch ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 ExecuteBatch() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.ExecuteBatch" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ExecuteBatch () As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int ExecuteBatch();" />
      <MemberSignature Language="F#" Value="abstract member ExecuteBatch : unit -&gt; int&#xA;override this.ExecuteBatch : unit -&gt; int" Usage="dbDataAdapter.ExecuteBatch " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="72192-193">執行目前的批次。</span><span class="sxs-lookup"><span data-stu-id="72192-193">Executes the current batch.</span></span></summary>
        <returns><span data-ttu-id="72192-194">從批次中最後一個命令傳回的值。</span><span class="sxs-lookup"><span data-stu-id="72192-194">The return value from the last command in the batch.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72192-195">在  <xref:System.Data.Common.DbDataAdapter>，此方法會擲回<xref:System.NotSupportedException>。</span><span class="sxs-lookup"><span data-stu-id="72192-195">In <xref:System.Data.Common.DbDataAdapter>, this method throws <xref:System.NotSupportedException>.</span></span> <span data-ttu-id="72192-196">類別繼承自<xref:System.Data.Common.DbDataAdapter>覆寫這個方法，以提供的批次支援。</span><span class="sxs-lookup"><span data-stu-id="72192-196">Classes that inherit from <xref:System.Data.Common.DbDataAdapter> override this method to provide support for batches.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="72192-197">這個方法會保護，而且設計用於使用.NET Framework 資料提供者。</span><span class="sxs-lookup"><span data-stu-id="72192-197">This method is protected and is designed for use by a .NET Framework data provider.</span></span>  
  
<span data-ttu-id="72192-198">如果類別繼承自<see cref="T:System.Data.Common.DbDataAdapter" />支援批次，該類別會覆寫這個方法，以允許使用者執行的批次。</span><span class="sxs-lookup"><span data-stu-id="72192-198">If a class that inherits from <see cref="T:System.Data.Common.DbDataAdapter" /> supports batches, that class overrides this method to allow users to execute a batch.</span></span> <span data-ttu-id="72192-199">此方法的實作中配接器的命令結合為批次，然後執行批次，並傳回批次的傳回值。</span><span class="sxs-lookup"><span data-stu-id="72192-199">An implementation of this method combines the commands in the adapter into a batch, then executes the batch and returns the return value of the batch.</span></span></para></block>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md"><span data-ttu-id="72192-200">操作資料 (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="72192-200">Manipulating Data (ADO.NET)</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="72192-201">DbProviderFactory (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="72192-201">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="72192-202">ADO.NET 概觀</span><span class="sxs-lookup"><span data-stu-id="72192-202">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Fill">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="72192-203">填滿<see cref="T:System.Data.DataSet" />或<see cref="T:System.Data.DataTable" />。</span><span class="sxs-lookup"><span data-stu-id="72192-203">Fills a <see cref="T:System.Data.DataSet" /> or a <see cref="T:System.Data.DataTable" />.</span></span></summary>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="72192-204">ADO.NET 概觀</span><span class="sxs-lookup"><span data-stu-id="72192-204">ADO.NET Overview</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="public override int Fill (System.Data.DataSet dataSet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Fill(class System.Data.DataSet dataSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int Fill(System::Data::DataSet ^ dataSet);" />
      <MemberSignature Language="F#" Value="override this.Fill : System.Data.DataSet -&gt; int" Usage="dbDataAdapter.Fill dataSet" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataAdapter.Fill(System.Data.DataSet)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
      </Parameters>
      <Docs>
        <param name="dataSet"><span data-ttu-id="72192-205">A<see cref="T:System.Data.DataSet" />来填入資料錄，如有必要，結構描述。</span><span class="sxs-lookup"><span data-stu-id="72192-205">A <see cref="T:System.Data.DataSet" /> to fill with records and, if necessary, schema.</span></span></param>
        <summary><span data-ttu-id="72192-206">加入或重新整理中的資料列<see cref="T:System.Data.DataSet" />。</span><span class="sxs-lookup"><span data-stu-id="72192-206">Adds or refreshes rows in the <see cref="T:System.Data.DataSet" />.</span></span></summary>
        <returns><span data-ttu-id="72192-207">加入或重新整理成功的資料列數目<see cref="T:System.Data.DataSet" />。</span><span class="sxs-lookup"><span data-stu-id="72192-207">The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataSet" />.</span></span> <span data-ttu-id="72192-208">這不包括不傳回資料列的陳述式所影響的資料列。</span><span class="sxs-lookup"><span data-stu-id="72192-208">This does not include rows affected by statements that do not return rows.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72192-209"><xref:System.Data.Common.DbDataAdapter.Fill%2A>方法會從使用 SELECT 陳述式的資料來源擷取資料。</span><span class="sxs-lookup"><span data-stu-id="72192-209">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method retrieves the data from the data source using a SELECT statement.</span></span> <span data-ttu-id="72192-210"><xref:System.Data.IDbConnection> Select 命令相關聯的物件必須有效，但它不需要開啟。</span><span class="sxs-lookup"><span data-stu-id="72192-210">The <xref:System.Data.IDbConnection> object associated with the select command must be valid, but it does not need to be open.</span></span> <span data-ttu-id="72192-211">如果<xref:System.Data.IDbConnection>關閉之前<xref:System.Data.Common.DbDataAdapter.Fill%2A>是呼叫，它是開啟擷取資料並關閉。</span><span class="sxs-lookup"><span data-stu-id="72192-211">If the <xref:System.Data.IDbConnection> is closed before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it is opened to retrieve data and then closed.</span></span> <span data-ttu-id="72192-212">如果連接已開啟之前<xref:System.Data.Common.DbDataAdapter.Fill%2A>是呼叫，它會保持開啟狀態。</span><span class="sxs-lookup"><span data-stu-id="72192-212">If the connection is open before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="72192-213">如果發生錯誤或例外狀況發生時填入資料的資料表，在發生錯誤之前所加入的資料列將保留在資料表中。</span><span class="sxs-lookup"><span data-stu-id="72192-213">If an error or an exception is encountered while populating the data tables, rows added prior to the occurrence of the error remain in the data tables.</span></span> <span data-ttu-id="72192-214">作業的其餘部分就會中止。</span><span class="sxs-lookup"><span data-stu-id="72192-214">The remainder of the operation is aborted.</span></span>  
  
 <span data-ttu-id="72192-215">如果命令未傳回任何資料列，將資料表加入至<xref:System.Data.DataSet>，並會引發任何例外狀況。</span><span class="sxs-lookup"><span data-stu-id="72192-215">If a command does not return any rows, no tables are added to the <xref:System.Data.DataSet>, and no exception is raised.</span></span>  
  
 <span data-ttu-id="72192-216">如果<xref:System.Data.Common.DbDataAdapter>物件在填入遇到重複的資料行<xref:System.Data.DataTable>，它會產生後續使用模式的資料行名稱 」*columnname*1"，"*columnname*2 」、 「*columnname*3"，依此類推。</span><span class="sxs-lookup"><span data-stu-id="72192-216">If the <xref:System.Data.Common.DbDataAdapter> object encounters duplicate columns while populating a <xref:System.Data.DataTable>, it generates names for the subsequent columns using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="72192-217">如果內送資料包含未命名的資料行，它們會放在<xref:System.Data.DataSet>根據模式"Column1"、"Column2"，依此類推。</span><span class="sxs-lookup"><span data-stu-id="72192-217">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span>  
  
 <span data-ttu-id="72192-218">當指定的查詢傳回多個結果時，結果集傳回查詢的每個資料列位於個別的資料表。</span><span class="sxs-lookup"><span data-stu-id="72192-218">When the query specified returns multiple results, the result set for each row returning query is placed in a separate table.</span></span> <span data-ttu-id="72192-219">其他結果集的命名方式將整數值附加至指定的資料表名稱 （例如，"Table"、"Table1"、"Table2"，等等）。</span><span class="sxs-lookup"><span data-stu-id="72192-219">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on).</span></span> <span data-ttu-id="72192-220">因為不會建立資料表的查詢不會傳回資料列，如果您在處理 insert 查詢，其後的 select 查詢，建立 select 查詢的資料表是名為"Table"因為它是建立的第一個資料表。</span><span class="sxs-lookup"><span data-stu-id="72192-220">Because no table is created for a query that does not return rows, if you process an insert query followed by a select query, the table created for the select query is named "Table" because it is the first table created.</span></span> <span data-ttu-id="72192-221">使用資料行和資料表名稱的應用程式應該確定 je v konfliktu 這些命名模式不會發生。</span><span class="sxs-lookup"><span data-stu-id="72192-221">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="72192-222">當 SELECT 陳述式用來填入<xref:System.Data.DataSet>傳回多個結果，例如批次 SQL 陳述式，如果其中一個結果包含錯誤，會略過所有後續的結果並不會新增至<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="72192-222">When the SELECT statement used to populate the <xref:System.Data.DataSet> returns multiple results, such as batch SQL statements, if one of the results contains an error, all subsequent results are skipped and are not added to the <xref:System.Data.DataSet>.</span></span>  
  
 <span data-ttu-id="72192-223">當使用後續<xref:System.Data.Common.DbDataAdapter.Fill%2A>重新整理的內容呼叫<xref:System.Data.DataSet>，必須符合兩個條件：</span><span class="sxs-lookup"><span data-stu-id="72192-223">When using subsequent <xref:System.Data.Common.DbDataAdapter.Fill%2A> calls to refresh the contents of the <xref:System.Data.DataSet>, two conditions must be met:</span></span>  
  
1.  <span data-ttu-id="72192-224">SQL 陳述式應該符合一開始用來填入<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="72192-224">The SQL statement should match the one initially used to populate the <xref:System.Data.DataSet>.</span></span>  
  
2.  <span data-ttu-id="72192-225">**金鑰**必須存在的資料行資訊。</span><span class="sxs-lookup"><span data-stu-id="72192-225">The **Key** column information must be present.</span></span>  
  
 <span data-ttu-id="72192-226">如果有主索引鍵資訊，任何重複的資料列會協調，而且只能出現一次在<xref:System.Data.DataTable>，其對應於<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="72192-226">If primary key information is present, any duplicate rows are reconciled and only appear once in the <xref:System.Data.DataTable> that corresponds to the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="72192-227">主索引鍵資訊可能會設定透過<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>，藉由指定<xref:System.Data.DataTable.PrimaryKey%2A>屬性<xref:System.Data.DataTable>，或藉由設定<xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>屬性設`AddWithKey`。</span><span class="sxs-lookup"><span data-stu-id="72192-227">Primary key information may be set either through <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, by specifying the <xref:System.Data.DataTable.PrimaryKey%2A> property of the <xref:System.Data.DataTable>, or by setting the <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> property to `AddWithKey`.</span></span>  
  
 <span data-ttu-id="72192-228">如果 `SelectCommand` 傳回 OUTER JOIN 的結果，則 `DataAdapter` 便不會為產生的 <xref:System.Data.DataTable.PrimaryKey%2A> 設定 <xref:System.Data.DataTable>值。</span><span class="sxs-lookup"><span data-stu-id="72192-228">If the `SelectCommand` returns the results of an OUTER JOIN, the `DataAdapter` does not set a <xref:System.Data.DataTable.PrimaryKey%2A> value for the resulting <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="72192-229">您必須明確定義以確保正確解析重複的資料列的主索引鍵。</span><span class="sxs-lookup"><span data-stu-id="72192-229">You must explicitly define the primary key to ensure that duplicate rows are resolved correctly.</span></span> <span data-ttu-id="72192-230">如需詳細資訊，請參閱 <<c0> [ 定義主索引鍵](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md)。</span><span class="sxs-lookup"><span data-stu-id="72192-230">For more information, see [Defining Primary Keys](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="72192-231">當處理批次 SQL 陳述式會傳回多個結果，實作<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>的.NET Framework Data Provider for OLE DB 擷取第一個結果的結構描述資訊。</span><span class="sxs-lookup"><span data-stu-id="72192-231">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</span></span> <span data-ttu-id="72192-232">若要擷取多個結果的結構描述資訊，請使用<xref:System.Data.Common.DbDataAdapter.Fill%2A>具有<xref:System.Data.MissingSchemaAction>設定為`AddWithKey`。</span><span class="sxs-lookup"><span data-stu-id="72192-232">To retrieve schema information for multiple results, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> with the <xref:System.Data.MissingSchemaAction> set to `AddWithKey`.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="72192-233">DbProviderFactory (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="72192-233">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="72192-234">ADO.NET 概觀</span><span class="sxs-lookup"><span data-stu-id="72192-234">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="public int Fill (System.Data.DataTable dataTable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Fill(class System.Data.DataTable dataTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Fill(System::Data::DataTable ^ dataTable);" />
      <MemberSignature Language="F#" Value="override this.Fill : System.Data.DataTable -&gt; int" Usage="dbDataAdapter.Fill dataTable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataTable" Type="System.Data.DataTable" />
      </Parameters>
      <Docs>
        <param name="dataTable"><span data-ttu-id="72192-235">名稱<see cref="T:System.Data.DataTable" />来用於資料表對應。</span><span class="sxs-lookup"><span data-stu-id="72192-235">The name of the <see cref="T:System.Data.DataTable" /> to use for table mapping.</span></span></param>
        <summary><span data-ttu-id="72192-236">加入或重新整理中的指定範圍中的資料列<see cref="T:System.Data.DataSet" />以符合那些在資料來源使用<see cref="T:System.Data.DataTable" />名稱。</span><span class="sxs-lookup"><span data-stu-id="72192-236">Adds or refreshes rows in a specified range in the <see cref="T:System.Data.DataSet" /> to match those in the data source using the <see cref="T:System.Data.DataTable" /> name.</span></span></summary>
        <returns><span data-ttu-id="72192-237">加入或重新整理成功的資料列數目<see cref="T:System.Data.DataSet" />。</span><span class="sxs-lookup"><span data-stu-id="72192-237">The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataSet" />.</span></span> <span data-ttu-id="72192-238">這不包括不傳回資料列的陳述式所影響的資料列。</span><span class="sxs-lookup"><span data-stu-id="72192-238">This does not include rows affected by statements that do not return rows.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72192-239"><xref:System.Data.Common.DbDataAdapter.Fill%2A>方法會從使用 SELECT 陳述式指定由相關聯的資料來源擷取資料列<xref:System.Data.IDbDataAdapter.SelectCommand%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="72192-239">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method retrieves rows from the data source using the SELECT statement specified by an associated <xref:System.Data.IDbDataAdapter.SelectCommand%2A> property.</span></span> <span data-ttu-id="72192-240">SELECT 陳述式相關聯的連接物件必須是有效的但它不需要開啟。</span><span class="sxs-lookup"><span data-stu-id="72192-240">The connection object associated with the SELECT statement must be valid, but it does not need to be open.</span></span> <span data-ttu-id="72192-241">如果連線已關閉之前<xref:System.Data.Common.DbDataAdapter.Fill%2A>會呼叫它，它會開啟來擷取資料，然後關閉。</span><span class="sxs-lookup"><span data-stu-id="72192-241">If the connection is closed before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it is opened to retrieve data, then closed.</span></span> <span data-ttu-id="72192-242">如果連接已開啟之前<xref:System.Data.Common.DbDataAdapter.Fill%2A>是呼叫，它會保持開啟狀態。</span><span class="sxs-lookup"><span data-stu-id="72192-242">If the connection is open before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="72192-243"><xref:System.Data.Common.DbDataAdapter.Fill%2A>作業，然後將資料列加入到目的地<xref:System.Data.DataTable>中的物件<xref:System.Data.DataSet>建立<xref:System.Data.DataTable>物件如果它們尚不存在。</span><span class="sxs-lookup"><span data-stu-id="72192-243">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> operation then adds the rows to destination <xref:System.Data.DataTable> objects in the <xref:System.Data.DataSet>, creating the <xref:System.Data.DataTable> objects if they do not already exist.</span></span> <span data-ttu-id="72192-244">建立時<xref:System.Data.DataTable>物件，<xref:System.Data.Common.DbDataAdapter.Fill%2A>作業通常會建立只有資料行名稱中繼資料。</span><span class="sxs-lookup"><span data-stu-id="72192-244">When creating <xref:System.Data.DataTable> objects, the <xref:System.Data.Common.DbDataAdapter.Fill%2A> operation normally creates only column name metadata.</span></span> <span data-ttu-id="72192-245">不過，如果<xref:System.Data.IDataAdapter.MissingSchemaAction%2A>屬性設定為`AddWithKey`，也會建立適當的主索引鍵和條件約束。</span><span class="sxs-lookup"><span data-stu-id="72192-245">However, if the <xref:System.Data.IDataAdapter.MissingSchemaAction%2A> property is set to `AddWithKey`, appropriate primary keys and constraints are also created.</span></span>  
  
 <span data-ttu-id="72192-246">如果<xref:System.Data.Common.DbDataAdapter>遇到重複的資料行在填入<xref:System.Data.DataTable>，它會產生後續的資料行，並使用模式的名稱 」*columnname*1""*columnname*2"，"*columnname*3"，依此類推。</span><span class="sxs-lookup"><span data-stu-id="72192-246">If the <xref:System.Data.Common.DbDataAdapter> encounters duplicate columns while populating a <xref:System.Data.DataTable>, it generates names for the subsequent columns, using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="72192-247">如果內送資料包含未命名的資料行，它們會放在<xref:System.Data.DataSet>根據模式"Column1"、"Column2"，依此類推。</span><span class="sxs-lookup"><span data-stu-id="72192-247">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span> <span data-ttu-id="72192-248">當多個結果集加入至<xref:System.Data.DataSet>放置於個別的資料表中每個結果集。</span><span class="sxs-lookup"><span data-stu-id="72192-248">When multiple result sets are added to the <xref:System.Data.DataSet> each result set is placed in a separate table.</span></span>  
  
 <span data-ttu-id="72192-249">多載<xref:System.Data.Common.DbDataAdapter.Fill%2A>採用`DataTable`因為參數只會取得第一個結果。</span><span class="sxs-lookup"><span data-stu-id="72192-249">The overload of <xref:System.Data.Common.DbDataAdapter.Fill%2A> that takes `DataTable` as a parameter only obtains the first result.</span></span> <span data-ttu-id="72192-250">使用的多載<xref:System.Data.Common.DbDataAdapter.Fill%2A>採用`DataSet`做為參數來取得多個結果。</span><span class="sxs-lookup"><span data-stu-id="72192-250">Use an overload of <xref:System.Data.Common.DbDataAdapter.Fill%2A> that takes `DataSet` as a parameter to obtain multiple results.</span></span>  
  
 <span data-ttu-id="72192-251"><xref:System.Data.Common.DbDataAdapter.Fill%2A>方法支援案例所在<xref:System.Data.DataSet>包含多個<xref:System.Data.DataTable>名稱只有大小寫不同的物件。</span><span class="sxs-lookup"><span data-stu-id="72192-251">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method supports scenarios where the <xref:System.Data.DataSet> contains multiple <xref:System.Data.DataTable> objects whose names differ only by case.</span></span> <span data-ttu-id="72192-252">在這種情況下，<xref:System.Data.Common.DbDataAdapter.Fill%2A>執行區分大小寫的比較，來尋找對應的資料表，並建立新的資料表，如果沒有完全相符項目存在。</span><span class="sxs-lookup"><span data-stu-id="72192-252">In such situations, <xref:System.Data.Common.DbDataAdapter.Fill%2A> performs a case-sensitive comparison to find the corresponding table, and creates a new table if no exact match exists.</span></span> <span data-ttu-id="72192-253">下列 C# 程式碼說明此行為。</span><span class="sxs-lookup"><span data-stu-id="72192-253">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
 dataset.Tables.Add("aaa");  
 dataset.Tables.Add("AAA");  
 adapter.Fill(dataset, "aaa"); // Fills "aaa", which already exists in the DataSet.  
    adapter.Fill(dataset, "Aaa"); // Adds a new table called "Aaa".  
```  
  
 <span data-ttu-id="72192-254">如果<xref:System.Data.Common.DbDataAdapter.Fill%2A>呼叫時，<xref:System.Data.DataSet>只會包含一個<xref:System.Data.DataTable>名稱只有大小寫不同，，<xref:System.Data.DataTable>會更新。</span><span class="sxs-lookup"><span data-stu-id="72192-254">If <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called and the <xref:System.Data.DataSet> contains only one <xref:System.Data.DataTable> whose name differs only by case, that <xref:System.Data.DataTable> is updated.</span></span> <span data-ttu-id="72192-255">在此案例中，比較不區分大小寫。</span><span class="sxs-lookup"><span data-stu-id="72192-255">In this scenario, the comparison is case insensitive.</span></span> <span data-ttu-id="72192-256">下列 C# 程式碼說明此行為。</span><span class="sxs-lookup"><span data-stu-id="72192-256">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
 dataset.Tables.Add("aaa");  
    adapter.Fill(dataset, "AAA"); // Fills table "aaa" because only one similarly named table is in the DataSet.  
```  
  
 <span data-ttu-id="72192-257">您可以使用<xref:System.Data.Common.DbDataAdapter.Fill%2A>上多次相同的方法<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="72192-257">You can use the <xref:System.Data.Common.DbDataAdapter.Fill%2A> method multiple times on the same <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="72192-258">如果主索引鍵存在，內送資料列會合併與相符的資料列已經存在。</span><span class="sxs-lookup"><span data-stu-id="72192-258">If a primary key exists, incoming rows are merged with matching rows that already exist.</span></span> <span data-ttu-id="72192-259">如果沒有主索引鍵存在，將內送資料列附加至<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="72192-259">If no primary key exists, incoming rows are appended to the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="72192-260">如果 `SelectCommand` 傳回 OUTER JOIN 的結果，則 `DataAdapter` 便不會為產生的 <xref:System.Data.DataTable.PrimaryKey%2A> 設定 <xref:System.Data.DataTable>值。</span><span class="sxs-lookup"><span data-stu-id="72192-260">If the `SelectCommand` returns the results of an OUTER JOIN, the `DataAdapter` does not set a <xref:System.Data.DataTable.PrimaryKey%2A> value for the resulting <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="72192-261">您必須明確定義以確保正確解析重複的資料列的主索引鍵。</span><span class="sxs-lookup"><span data-stu-id="72192-261">You must explicitly define the primary key to ensure that duplicate rows are resolved correctly.</span></span> <span data-ttu-id="72192-262">如需詳細資訊，請參閱 <<c0> [ 定義主索引鍵](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md)。</span><span class="sxs-lookup"><span data-stu-id="72192-262">For more information, see [Defining Primary Keys](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="72192-263">當處理批次 SQL 陳述式會傳回多個結果，實作<xref:System.Data.Common.DbDataAdapter.Fill%2A>和<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>.NET Framework 資料提供者會擷取第一個結果的結構描述資訊。</span><span class="sxs-lookup"><span data-stu-id="72192-263">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.Fill%2A> and <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for a .NET Framework data provider retrieves schema information for only the first result.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="72192-264">來源資料表無效。</span><span class="sxs-lookup"><span data-stu-id="72192-264">The source table is invalid.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="72192-265">這個多載<see cref="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)" />方法受到保護，設計用於使用.NET Framework 資料提供者。</span><span class="sxs-lookup"><span data-stu-id="72192-265">This overload of the <see cref="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)" /> method is protected and is designed for use by a .NET Framework data provider.</span></span></para></block>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="72192-266">DbProviderFactory (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="72192-266">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="72192-267">ADO.NET 概觀</span><span class="sxs-lookup"><span data-stu-id="72192-267">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="public int Fill (System.Data.DataSet dataSet, string srcTable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Fill(class System.Data.DataSet dataSet, string srcTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Fill(System::Data::DataSet ^ dataSet, System::String ^ srcTable);" />
      <MemberSignature Language="F#" Value="override this.Fill : System.Data.DataSet * string -&gt; int" Usage="dbDataAdapter.Fill (dataSet, srcTable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
        <Parameter Name="srcTable" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dataSet"><span data-ttu-id="72192-268">A<see cref="T:System.Data.DataSet" />来填入資料錄，如有必要，結構描述。</span><span class="sxs-lookup"><span data-stu-id="72192-268">A <see cref="T:System.Data.DataSet" /> to fill with records and, if necessary, schema.</span></span></param>
        <param name="srcTable"><span data-ttu-id="72192-269">用於資料表對應的來源資料表名稱。</span><span class="sxs-lookup"><span data-stu-id="72192-269">The name of the source table to use for table mapping.</span></span></param>
        <summary><span data-ttu-id="72192-270">加入或重新整理中的資料列<see cref="T:System.Data.DataSet" />以符合那些在資料來源藉<see cref="T:System.Data.DataSet" />和<see cref="T:System.Data.DataTable" />名稱。</span><span class="sxs-lookup"><span data-stu-id="72192-270">Adds or refreshes rows in the <see cref="T:System.Data.DataSet" /> to match those in the data source using the <see cref="T:System.Data.DataSet" /> and <see cref="T:System.Data.DataTable" /> names.</span></span></summary>
        <returns><span data-ttu-id="72192-271">加入或重新整理成功的資料列數目<see cref="T:System.Data.DataSet" />。</span><span class="sxs-lookup"><span data-stu-id="72192-271">The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataSet" />.</span></span> <span data-ttu-id="72192-272">這不包括不傳回資料列的陳述式所影響的資料列。</span><span class="sxs-lookup"><span data-stu-id="72192-272">This does not include rows affected by statements that do not return rows.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72192-273"><xref:System.Data.Common.DbDataAdapter.Fill%2A>方法會從使用 SELECT 陳述式的資料來源擷取資料。</span><span class="sxs-lookup"><span data-stu-id="72192-273">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method retrieves the data from the data source using a SELECT statement.</span></span> <span data-ttu-id="72192-274"><xref:System.Data.IDbConnection> Select 命令相關聯的物件必須有效，但它不需要開啟。</span><span class="sxs-lookup"><span data-stu-id="72192-274">The <xref:System.Data.IDbConnection> object associated with the select command must be valid, but it does not need to be open.</span></span> <span data-ttu-id="72192-275">如果<xref:System.Data.IDbConnection>關閉之前<xref:System.Data.Common.DbDataAdapter.Fill%2A>會呼叫它，它會開啟來擷取資料，然後關閉。</span><span class="sxs-lookup"><span data-stu-id="72192-275">If the <xref:System.Data.IDbConnection> is closed before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it is opened to retrieve data, then closed.</span></span> <span data-ttu-id="72192-276">如果連接已開啟之前<xref:System.Data.Common.DbDataAdapter.Fill%2A>是呼叫，它會保持開啟狀態。</span><span class="sxs-lookup"><span data-stu-id="72192-276">If the connection is open before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="72192-277">如果命令未傳回任何資料列，將資料表加入至<xref:System.Data.DataSet>，並會引發任何例外狀況。</span><span class="sxs-lookup"><span data-stu-id="72192-277">If a command does not return any rows, no tables are added to the <xref:System.Data.DataSet>, and no exception is raised.</span></span>  
  
 <span data-ttu-id="72192-278">如果<xref:System.Data.Common.DbDataAdapter>物件在填入遇到重複的資料行<xref:System.Data.DataTable>，它會產生後續的資料行，並使用模式 」 columnname1"、"columnname2 」、 「 columnname3"，等等的名稱。</span><span class="sxs-lookup"><span data-stu-id="72192-278">If the <xref:System.Data.Common.DbDataAdapter> object encounters duplicate columns while populating a <xref:System.Data.DataTable>, it will generate names for the subsequent columns, using the pattern "columnname1", "columnname2", "columnname3", and so on.</span></span> <span data-ttu-id="72192-279">如果內送資料包含未命名的資料行，它們會放在<xref:System.Data.DataSet>根據模式"Column1"、"Column2"，依此類推。</span><span class="sxs-lookup"><span data-stu-id="72192-279">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span>  
  
 <span data-ttu-id="72192-280">當指定的查詢傳回多個結果時，每個結果集被放在個別的資料表。</span><span class="sxs-lookup"><span data-stu-id="72192-280">When the query specified returns multiple results, each result set is placed in a separate table.</span></span> <span data-ttu-id="72192-281">其他結果集的命名方式將整數值附加至指定的資料表名稱 （例如，"Table"、"Table1"、"Table2"，等等）。</span><span class="sxs-lookup"><span data-stu-id="72192-281">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on).</span></span> <span data-ttu-id="72192-282">因為不會建立資料表的查詢不會傳回資料列，如果您要處理 insert 查詢，其後的 select 查詢，建立 select 查詢的資料表就會命名為"Table"，因為它是建立的第一個資料表。</span><span class="sxs-lookup"><span data-stu-id="72192-282">Since no table is created for a query that does not return rows, if you were to process an insert query followed by a select query, the table created for the select query would be named "Table", because it is the first table created.</span></span> <span data-ttu-id="72192-283">使用資料行和資料表名稱的應用程式應該確定 je v konfliktu 這些命名模式不會發生。</span><span class="sxs-lookup"><span data-stu-id="72192-283">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="72192-284"><xref:System.Data.Common.DbDataAdapter.Fill%2A>方法支援案例所在<xref:System.Data.DataSet>包含多個<xref:System.Data.DataTable>名稱只有大小寫不同的物件。</span><span class="sxs-lookup"><span data-stu-id="72192-284">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method supports scenarios where the <xref:System.Data.DataSet> contains multiple <xref:System.Data.DataTable> objects whose names differ only by case.</span></span> <span data-ttu-id="72192-285">在這種情況下，<xref:System.Data.Common.DbDataAdapter.Fill%2A>執行區分大小寫的比較，來尋找對應的資料表，並建立新的資料表，如果沒有完全相符項目存在。</span><span class="sxs-lookup"><span data-stu-id="72192-285">In such situations, <xref:System.Data.Common.DbDataAdapter.Fill%2A> performs a case-sensitive comparison to find the corresponding table, and creates a new table if no exact match exists.</span></span> <span data-ttu-id="72192-286">下列 C# 程式碼說明此行為。</span><span class="sxs-lookup"><span data-stu-id="72192-286">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
dataset.Tables.Add("AAA");  
adapter.Fill(dataset, "aaa"); // Fills "aaa", which already exists in the DataSet.  
adapter.Fill(dataset, "Aaa"); // Adds a new table called "Aaa".  
```  
  
 <span data-ttu-id="72192-287">如果<xref:System.Data.Common.DbDataAdapter.Fill%2A>呼叫時，<xref:System.Data.DataSet>只會包含一個<xref:System.Data.DataTable>名稱只有大小寫不同，，<xref:System.Data.DataTable>會更新。</span><span class="sxs-lookup"><span data-stu-id="72192-287">If <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called and the <xref:System.Data.DataSet> contains only one <xref:System.Data.DataTable> whose name differs only by case, that <xref:System.Data.DataTable> is updated.</span></span> <span data-ttu-id="72192-288">在此案例中，比較不區分大小寫。</span><span class="sxs-lookup"><span data-stu-id="72192-288">In this scenario, the comparison is case insensitive.</span></span> <span data-ttu-id="72192-289">下列 C# 程式碼說明此行為。</span><span class="sxs-lookup"><span data-stu-id="72192-289">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
adapter.Fill(dataset, "AAA"); // Fills table "aaa" because only one similarly named table is in the DataSet.  
```  
  
 <span data-ttu-id="72192-290">如果發生錯誤或例外狀況發生時填入資料的資料表，在發生錯誤之前所加入的資料列將保留在資料表中。</span><span class="sxs-lookup"><span data-stu-id="72192-290">If an error or an exception is encountered while populating the data tables, rows added prior to the occurrence of the error remain in the data tables.</span></span> <span data-ttu-id="72192-291">作業的其餘部分就會中止。</span><span class="sxs-lookup"><span data-stu-id="72192-291">The remainder of the operation is aborted.</span></span>  
  
 <span data-ttu-id="72192-292">當 SELECT 陳述式用來填入<xref:System.Data.DataSet>傳回多個結果，例如批次 SQL 陳述式中，注意下列事項：</span><span class="sxs-lookup"><span data-stu-id="72192-292">When the SELECT statement used to populate the <xref:System.Data.DataSet> returns multiple results, such as a batch SQL statement, be aware of the following:</span></span>  
  
-   <span data-ttu-id="72192-293">如果其中一個結果包含錯誤時，會略過所有後續的結果，且未新增到<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="72192-293">If one of the results contains an error, all subsequent results are skipped and not added to the <xref:System.Data.DataSet>.</span></span>  
  
 <span data-ttu-id="72192-294">當使用後續<xref:System.Data.Common.DbDataAdapter.Fill%2A>重新整理的內容呼叫<xref:System.Data.DataSet>，必須符合兩個條件：</span><span class="sxs-lookup"><span data-stu-id="72192-294">When using subsequent <xref:System.Data.Common.DbDataAdapter.Fill%2A> calls to refresh the contents of the <xref:System.Data.DataSet>, two conditions must be met:</span></span>  
  
1.  <span data-ttu-id="72192-295">SQL 陳述式應該符合一開始用來填入<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="72192-295">The SQL statement should match the one initially used to populate the <xref:System.Data.DataSet>.</span></span>  
  
2.  <span data-ttu-id="72192-296">**金鑰**必須存在的資料行資訊。</span><span class="sxs-lookup"><span data-stu-id="72192-296">The **Key** column information must be present.</span></span> <span data-ttu-id="72192-297">如果有主索引鍵資訊，任何重複的資料列會協調，而且只能出現一次在<xref:System.Data.DataTable>，其對應於<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="72192-297">If primary key information is present, any duplicate rows are reconciled and only appear once in the <xref:System.Data.DataTable> that corresponds to the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="72192-298">主索引鍵資訊可能會設定透過<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>，藉由指定<xref:System.Data.DataTable.PrimaryKey%2A>屬性<xref:System.Data.DataTable>，或藉由設定<xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>屬性設`AddWithKey`。</span><span class="sxs-lookup"><span data-stu-id="72192-298">Primary key information may be set either through <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, by specifying the <xref:System.Data.DataTable.PrimaryKey%2A> property of the <xref:System.Data.DataTable>, or by setting the <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> property to `AddWithKey`.</span></span>  
  
 <span data-ttu-id="72192-299">如果 `SelectCommand` 傳回 OUTER JOIN 的結果，則 `DataAdapter` 便不會為產生的 <xref:System.Data.DataTable.PrimaryKey%2A> 設定 <xref:System.Data.DataTable>值。</span><span class="sxs-lookup"><span data-stu-id="72192-299">If the `SelectCommand` returns the results of an OUTER JOIN, the `DataAdapter` does not set a <xref:System.Data.DataTable.PrimaryKey%2A> value for the resulting <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="72192-300">您必須明確定義以確保正確解析重複的資料列的主索引鍵。</span><span class="sxs-lookup"><span data-stu-id="72192-300">You must explicitly define the primary key to ensure that duplicate rows are resolved correctly.</span></span> <span data-ttu-id="72192-301">如需詳細資訊，請參閱 <<c0> [ 定義主索引鍵](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md)。</span><span class="sxs-lookup"><span data-stu-id="72192-301">For more information, see [Defining Primary Keys](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="72192-302">當處理批次 SQL 陳述式會傳回多個結果，實作<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>的.NET Framework Data Provider for OLE DB 擷取第一個結果的結構描述資訊。</span><span class="sxs-lookup"><span data-stu-id="72192-302">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</span></span> <span data-ttu-id="72192-303">若要擷取多個結果的結構描述資訊，請使用<xref:System.Data.Common.DbDataAdapter.Fill%2A>具有<xref:System.Data.MissingSchemaAction>設定為`AddWithKey`。</span><span class="sxs-lookup"><span data-stu-id="72192-303">To retrieve schema information for multiple results, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> with the <xref:System.Data.MissingSchemaAction> set to `AddWithKey`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="72192-304">下列範例會使用衍生的類別中， <xref:System.Data.OleDb.OleDbDataAdapter>，以填滿<xref:System.Data.DataSet>從 categories 資料表的資料列。</span><span class="sxs-lookup"><span data-stu-id="72192-304">The following example uses the derived class, <xref:System.Data.OleDb.OleDbDataAdapter>, to fill a <xref:System.Data.DataSet> with rows from the categories table.</span></span> <span data-ttu-id="72192-305">這個範例假設您已建立<xref:System.Data.OleDb.OleDbDataAdapter>和<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="72192-305">This example assumes that you have created an <xref:System.Data.OleDb.OleDbDataAdapter> and a <xref:System.Data.DataSet>.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.Fill2 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Fill2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.Fill2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Fill2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.SystemException"><span data-ttu-id="72192-306">來源資料表無效。</span><span class="sxs-lookup"><span data-stu-id="72192-306">The source table is invalid.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="72192-307">當覆寫<see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" />衍生類別時，請務必呼叫基底類別的<see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" />方法。</span><span class="sxs-lookup"><span data-stu-id="72192-307">When overriding <see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /> in a derived class, be sure to call the base class's <see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /> method.</span></span></para></block>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="72192-308">DbProviderFactory (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="72192-308">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="72192-309">ADO.NET 概觀</span><span class="sxs-lookup"><span data-stu-id="72192-309">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="protected virtual int Fill (System.Data.DataTable dataTable, System.Data.IDataReader dataReader);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 Fill(class System.Data.DataTable dataTable, class System.Data.IDataReader dataReader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable,System.Data.IDataReader)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int Fill(System::Data::DataTable ^ dataTable, System::Data::IDataReader ^ dataReader);" />
      <MemberSignature Language="F#" Value="override this.Fill : System.Data.DataTable * System.Data.IDataReader -&gt; int" Usage="dbDataAdapter.Fill (dataTable, dataReader)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataTable" Type="System.Data.DataTable" Index="0" FrameworkAlternate="netframework-1.1" />
        <Parameter Name="dataReader" Type="System.Data.IDataReader" Index="1" FrameworkAlternate="netframework-1.1" />
      </Parameters>
      <Docs>
        <param name="dataTable"><span data-ttu-id="72192-310">A<see cref="T:System.Data.DataTable" />来填入資料錄，如有必要，結構描述。</span><span class="sxs-lookup"><span data-stu-id="72192-310">A <see cref="T:System.Data.DataTable" /> to fill with records and, if necessary, schema.</span></span></param>
        <param name="dataReader"><span data-ttu-id="72192-311"><see cref="T:System.Data.IDataReader" /> 的名稱。</span><span class="sxs-lookup"><span data-stu-id="72192-311">The name of the <see cref="T:System.Data.IDataReader" />.</span></span></param>
        <summary><span data-ttu-id="72192-312">加入或重新整理中的資料列<see cref="T:System.Data.DataTable" />以符合那些在使用指定的資料來源<see cref="T:System.Data.DataTable" />和<see cref="T:System.Data.IDataReader" />名稱。</span><span class="sxs-lookup"><span data-stu-id="72192-312">Adds or refreshes rows in a <see cref="T:System.Data.DataTable" /> to match those in the data source using the specified <see cref="T:System.Data.DataTable" /> and <see cref="T:System.Data.IDataReader" /> names.</span></span></summary>
        <returns><span data-ttu-id="72192-313">加入或重新整理成功的資料列數目<see cref="T:System.Data.DataTable" />。</span><span class="sxs-lookup"><span data-stu-id="72192-313">The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataTable" />.</span></span> <span data-ttu-id="72192-314">這不包括不傳回資料列的陳述式所影響的資料列。</span><span class="sxs-lookup"><span data-stu-id="72192-314">This does not include rows affected by statements that do not return rows.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="protected virtual int Fill (System.Data.DataTable dataTable, System.Data.IDbCommand command, System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 Fill(class System.Data.DataTable dataTable, class System.Data.IDbCommand command, valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable,System.Data.IDbCommand,System.Data.CommandBehavior)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int Fill(System::Data::DataTable ^ dataTable, System::Data::IDbCommand ^ command, System::Data::CommandBehavior behavior);" />
      <MemberSignature Language="F#" Value="override this.Fill : System.Data.DataTable * System.Data.IDbCommand * System.Data.CommandBehavior -&gt; int" Usage="dbDataAdapter.Fill (dataTable, command, behavior)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataTable" Type="System.Data.DataTable" />
        <Parameter Name="command" Type="System.Data.IDbCommand" />
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" />
      </Parameters>
      <Docs>
        <param name="dataTable"><span data-ttu-id="72192-315">A<see cref="T:System.Data.DataTable" />来填入資料錄，如有必要，結構描述。</span><span class="sxs-lookup"><span data-stu-id="72192-315">A <see cref="T:System.Data.DataTable" /> to fill with records and, if necessary, schema.</span></span></param>
        <param name="command"><span data-ttu-id="72192-316">SQL SELECT 陳述式用於從資料來源擷取資料列。</span><span class="sxs-lookup"><span data-stu-id="72192-316">The SQL SELECT statement used to retrieve rows from the data source.</span></span></param>
        <param name="behavior"><span data-ttu-id="72192-317">其中一個 <see cref="T:System.Data.CommandBehavior" /> 值。</span><span class="sxs-lookup"><span data-stu-id="72192-317">One of the <see cref="T:System.Data.CommandBehavior" /> values.</span></span></param>
        <summary><span data-ttu-id="72192-318">加入或重新整理中的資料列<see cref="T:System.Data.DataTable" />以符合那些在使用指定的資料來源<see cref="T:System.Data.DataTable" />，<see cref="T:System.Data.IDbCommand" />和<see cref="T:System.Data.CommandBehavior" />。</span><span class="sxs-lookup"><span data-stu-id="72192-318">Adds or refreshes rows in a <see cref="T:System.Data.DataTable" /> to match those in the data source using the specified <see cref="T:System.Data.DataTable" />, <see cref="T:System.Data.IDbCommand" /> and <see cref="T:System.Data.CommandBehavior" />.</span></span></summary>
        <returns><span data-ttu-id="72192-319">加入或重新整理成功的資料列數目<see cref="T:System.Data.DataTable" />。</span><span class="sxs-lookup"><span data-stu-id="72192-319">The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataTable" />.</span></span> <span data-ttu-id="72192-320">這不包括不傳回資料列的陳述式所影響的資料列。</span><span class="sxs-lookup"><span data-stu-id="72192-320">This does not include rows affected by statements that do not return rows.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72192-321"><xref:System.Data.Common.DbDataAdapter.Fill%2A>方法會從使用 SELECT 陳述式指定由相關聯的資料來源擷取資料列<xref:System.Data.IDbDataAdapter.SelectCommand%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="72192-321">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method retrieves rows from the data source using the SELECT statement specified by an associated <xref:System.Data.IDbDataAdapter.SelectCommand%2A> property.</span></span> <span data-ttu-id="72192-322">SELECT 陳述式相關聯的連接物件必須是有效的但它不需要開啟。</span><span class="sxs-lookup"><span data-stu-id="72192-322">The connection object associated with the SELECT statement must be valid, but it does not need to be open.</span></span> <span data-ttu-id="72192-323">如果連線已關閉之前<xref:System.Data.Common.DbDataAdapter.Fill%2A>是呼叫，它是開啟擷取資料並關閉。</span><span class="sxs-lookup"><span data-stu-id="72192-323">If the connection is closed before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it is opened to retrieve data and then closed.</span></span> <span data-ttu-id="72192-324">如果連接已開啟之前<xref:System.Data.Common.DbDataAdapter.Fill%2A>是呼叫，它會保持開啟狀態。</span><span class="sxs-lookup"><span data-stu-id="72192-324">If the connection is open before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="72192-325"><xref:System.Data.Common.DbDataAdapter.Fill%2A>作業，然後將資料列加入到指定的目的地<xref:System.Data.DataTable>物件中<xref:System.Data.DataSet>建立<xref:System.Data.DataTable>物件如果它不存在。</span><span class="sxs-lookup"><span data-stu-id="72192-325">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> operation then adds the rows to the specified destination <xref:System.Data.DataTable> object in the <xref:System.Data.DataSet>, creating the <xref:System.Data.DataTable> object if it does not already exist.</span></span> <span data-ttu-id="72192-326">建立時<xref:System.Data.DataTable>物件，<xref:System.Data.Common.DbDataAdapter.Fill%2A>作業通常會建立只有資料行名稱中繼資料。</span><span class="sxs-lookup"><span data-stu-id="72192-326">When creating a <xref:System.Data.DataTable> object, the <xref:System.Data.Common.DbDataAdapter.Fill%2A> operation normally creates only column name metadata.</span></span> <span data-ttu-id="72192-327">不過，如果<xref:System.Data.IDataAdapter.MissingSchemaAction%2A>屬性設定為`AddWithKey`，也會建立適當的主索引鍵和條件約束。</span><span class="sxs-lookup"><span data-stu-id="72192-327">However, if the <xref:System.Data.IDataAdapter.MissingSchemaAction%2A> property is set to `AddWithKey`, appropriate primary keys and constraints are also created.</span></span>  
  
 <span data-ttu-id="72192-328">如果<xref:System.Data.Common.DbDataAdapter>物件在填入遇到重複的資料行<xref:System.Data.DataTable>，它會產生後續的資料行，並使用模式的名稱 」*columnname*1"，"*columnname*2"，"*columnname*3 」，依此類推。</span><span class="sxs-lookup"><span data-stu-id="72192-328">If the <xref:System.Data.Common.DbDataAdapter> object encounters duplicate columns while populating a <xref:System.Data.DataTable>, it will generate names for the subsequent columns, using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="72192-329">如果內送資料包含未命名的資料行，它們會放在<xref:System.Data.DataSet>根據模式"Column1"、"Column2"，依此類推。</span><span class="sxs-lookup"><span data-stu-id="72192-329">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span>  
  
 <span data-ttu-id="72192-330">多載<xref:System.Data.Common.DbDataAdapter.Fill%2A>採用`DataTable`因為參數只會取得第一個結果。</span><span class="sxs-lookup"><span data-stu-id="72192-330">The overload of <xref:System.Data.Common.DbDataAdapter.Fill%2A> that takes `DataTable` as a parameter only obtains the first result.</span></span> <span data-ttu-id="72192-331">使用的多載<xref:System.Data.Common.DbDataAdapter.Fill%2A>採用`DataSet`做為參數來取得多個結果。</span><span class="sxs-lookup"><span data-stu-id="72192-331">Use an overload of <xref:System.Data.Common.DbDataAdapter.Fill%2A> that takes `DataSet` as a parameter to obtain multiple results.</span></span>  
  
 <span data-ttu-id="72192-332">您可以使用<xref:System.Data.Common.DbDataAdapter.Fill%2A>上多次相同的方法<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="72192-332">You can use the <xref:System.Data.Common.DbDataAdapter.Fill%2A> method multiple times on the same <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="72192-333">如果主索引鍵存在，內送資料列會合併與相符的資料列已經存在。</span><span class="sxs-lookup"><span data-stu-id="72192-333">If a primary key exists, incoming rows are merged with matching rows that already exist.</span></span> <span data-ttu-id="72192-334">如果沒有主索引鍵存在，將內送資料列附加至<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="72192-334">If no primary key exists, incoming rows are appended to the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="72192-335">如果 `SelectCommand` 傳回 OUTER JOIN 的結果，則 `DataAdapter` 便不會為產生的 <xref:System.Data.DataTable.PrimaryKey%2A> 設定 <xref:System.Data.DataTable>值。</span><span class="sxs-lookup"><span data-stu-id="72192-335">If the `SelectCommand` returns the results of an OUTER JOIN, the `DataAdapter` does not set a <xref:System.Data.DataTable.PrimaryKey%2A> value for the resulting <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="72192-336">您必須明確定義以確保正確解析重複的資料列的主索引鍵。</span><span class="sxs-lookup"><span data-stu-id="72192-336">You must explicitly define the primary key to ensure that duplicate rows are resolved correctly.</span></span> <span data-ttu-id="72192-337">如需詳細資訊，請參閱 <<c0> [ 定義主索引鍵](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md)。</span><span class="sxs-lookup"><span data-stu-id="72192-337">For more information, see [Defining Primary Keys](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="72192-338">當處理批次 SQL 陳述式會傳回多個結果，實作<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>的.NET Framework Data Provider for OLE DB 擷取第一個結果的結構描述資訊。</span><span class="sxs-lookup"><span data-stu-id="72192-338">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</span></span> <span data-ttu-id="72192-339">若要擷取多個結果的結構描述資訊，請使用<xref:System.Data.Common.DbDataAdapter.Fill%2A>具有<xref:System.Data.MissingSchemaAction>設定為`AddWithKey`。</span><span class="sxs-lookup"><span data-stu-id="72192-339">To retrieve schema information for multiple results, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> with the <xref:System.Data.MissingSchemaAction> set to `AddWithKey`.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="72192-340">這個多載<see cref="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)" />方法受到保護，設計用於使用.NET Framework 資料提供者。</span><span class="sxs-lookup"><span data-stu-id="72192-340">This overload of the <see cref="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)" /> method is protected and is designed for use by a .NET Framework data provider.</span></span></para></block>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="72192-341">DbProviderFactory (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="72192-341">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="72192-342">ADO.NET 概觀</span><span class="sxs-lookup"><span data-stu-id="72192-342">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="public int Fill (int startRecord, int maxRecords, params System.Data.DataTable[] dataTables);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Fill(int32 startRecord, int32 maxRecords, class System.Data.DataTable[] dataTables) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Fill(System.Int32,System.Int32,System.Data.DataTable[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Fill (startRecord As Integer, maxRecords As Integer, ParamArray dataTables As DataTable()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Fill(int startRecord, int maxRecords, ... cli::array &lt;System::Data::DataTable ^&gt; ^ dataTables);" />
      <MemberSignature Language="F#" Value="override this.Fill : int * int * System.Data.DataTable[] -&gt; int" Usage="dbDataAdapter.Fill (startRecord, maxRecords, dataTables)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startRecord" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="maxRecords" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="dataTables" Type="System.Data.DataTable[]" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <Attributes>
            <Attribute FrameworkAlternate="netcore-2.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="startRecord"><span data-ttu-id="72192-343">若要開始使用以零為起始的記錄數目。</span><span class="sxs-lookup"><span data-stu-id="72192-343">The zero-based record number to start with.</span></span></param>
        <param name="maxRecords"><span data-ttu-id="72192-344">要擷取的記錄數目上限。</span><span class="sxs-lookup"><span data-stu-id="72192-344">The maximum number of records to retrieve.</span></span></param>
        <param name="dataTables"><span data-ttu-id="72192-345"><see cref="T:System.Data.DataTable" />來填滿資料來源的物件。</span><span class="sxs-lookup"><span data-stu-id="72192-345">The <see cref="T:System.Data.DataTable" /> objects to fill from the data source.</span></span></param>
        <summary><span data-ttu-id="72192-346">加入或重新整理中的資料列<see cref="T:System.Data.DataTable" />以符合那些在資料來源，起價為指定的記錄，且不超過指定的最大數目的記錄擷取。</span><span class="sxs-lookup"><span data-stu-id="72192-346">Adds or refreshes rows in a <see cref="T:System.Data.DataTable" /> to match those in the data source starting at the specified record and retrieving up to the specified maximum number of records.</span></span></summary>
        <returns><span data-ttu-id="72192-347">加入或重新整理成功的資料列數目<see cref="T:System.Data.DataTable" />。</span><span class="sxs-lookup"><span data-stu-id="72192-347">The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataTable" />.</span></span> <span data-ttu-id="72192-348">此值不包含不傳回資料列的陳述式所影響的資料列。</span><span class="sxs-lookup"><span data-stu-id="72192-348">This value does not include rows affected by statements that do not return rows.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72192-349"><xref:System.Data.Common.DataAdapter.Fill%2A>方法會從使用 SELECT 陳述式指定由相關聯的資料來源擷取資料列<xref:System.Data.IDbDataAdapter.SelectCommand%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="72192-349">The <xref:System.Data.Common.DataAdapter.Fill%2A> method retrieves rows from the data source using the SELECT statement specified by an associated <xref:System.Data.IDbDataAdapter.SelectCommand%2A> property.</span></span> <span data-ttu-id="72192-350">SELECT 陳述式相關聯的連接物件必須是有效的但它不需要開啟。</span><span class="sxs-lookup"><span data-stu-id="72192-350">The connection object associated with the SELECT statement must be valid, but it does not need to be open.</span></span> <span data-ttu-id="72192-351">如果連線已關閉之前<xref:System.Data.Common.DataAdapter.Fill%2A>是呼叫，來擷取資料，開啟，然後關閉。</span><span class="sxs-lookup"><span data-stu-id="72192-351">If the connection is closed before <xref:System.Data.Common.DataAdapter.Fill%2A> is called, it is opened to retrieve data, and then it is closed.</span></span> <span data-ttu-id="72192-352">如果連接已開啟之前<xref:System.Data.Common.DataAdapter.Fill%2A>是呼叫，它會保持開啟狀態。</span><span class="sxs-lookup"><span data-stu-id="72192-352">If the connection is open before <xref:System.Data.Common.DataAdapter.Fill%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="72192-353"><xref:System.Data.Common.DataAdapter.Fill%2A>作業，然後將資料列加入到目的地<xref:System.Data.DataTable>中的物件<xref:System.Data.DataSet>建立<xref:System.Data.DataTable>物件如果它們尚不存在。</span><span class="sxs-lookup"><span data-stu-id="72192-353">The <xref:System.Data.Common.DataAdapter.Fill%2A> operation then adds the rows to destination <xref:System.Data.DataTable> objects in the <xref:System.Data.DataSet>, creating the <xref:System.Data.DataTable> objects if they do not already exist.</span></span> <span data-ttu-id="72192-354">建立時<xref:System.Data.DataTable>物件，<xref:System.Data.Common.DataAdapter.Fill%2A>作業通常會建立只有資料行名稱中繼資料。</span><span class="sxs-lookup"><span data-stu-id="72192-354">When creating <xref:System.Data.DataTable> objects, the <xref:System.Data.Common.DataAdapter.Fill%2A> operation normally creates only column name metadata.</span></span> <span data-ttu-id="72192-355">不過，如果<xref:System.Data.IDataAdapter.MissingSchemaAction%2A>屬性設定為`AddWithKey`，也會建立適當的主索引鍵和條件約束。</span><span class="sxs-lookup"><span data-stu-id="72192-355">However, if the <xref:System.Data.IDataAdapter.MissingSchemaAction%2A> property is set to `AddWithKey`, appropriate primary keys and constraints are also created.</span></span>  
  
 <span data-ttu-id="72192-356">如果 `SelectCommand` 傳回 OUTER JOIN 的結果，則 `DataAdapter` 便不會為產生的 <xref:System.Data.DataTable.PrimaryKey%2A> 設定 <xref:System.Data.DataTable>值。</span><span class="sxs-lookup"><span data-stu-id="72192-356">If the `SelectCommand` returns the results of an OUTER JOIN, the `DataAdapter` does not set a <xref:System.Data.DataTable.PrimaryKey%2A> value for the resulting <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="72192-357">您必須明確定義以確保正確解析重複的資料列的主索引鍵。</span><span class="sxs-lookup"><span data-stu-id="72192-357">You must explicitly define the primary key to ensure that duplicate rows are resolved correctly.</span></span> <span data-ttu-id="72192-358">如需詳細資訊，請參閱 <<c0> [ 定義主索引鍵](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md)。</span><span class="sxs-lookup"><span data-stu-id="72192-358">For more information, see [Defining Primary Keys](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md).</span></span>  
  
 <span data-ttu-id="72192-359">如果資料配接器遇到重複的資料行，在填入<xref:System.Data.DataTable>，它會產生後續的資料行，並使用模式 」 columnname1"、"columnname2 」、 「 columnname3"，等等的名稱。</span><span class="sxs-lookup"><span data-stu-id="72192-359">If the data adapter encounters duplicate columns while populating a <xref:System.Data.DataTable>, it generates names for the subsequent columns, using the pattern "columnname1", "columnname2", "columnname3", and so on.</span></span> <span data-ttu-id="72192-360">如果內送資料包含未命名的資料行，它們會放在<xref:System.Data.DataSet>根據模式"Column1"、"Column2"，依此類推。</span><span class="sxs-lookup"><span data-stu-id="72192-360">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span> <span data-ttu-id="72192-361">當多個結果集加入至<xref:System.Data.DataSet>，每個結果集放在個別的資料表。</span><span class="sxs-lookup"><span data-stu-id="72192-361">When multiple result sets are added to the <xref:System.Data.DataSet>, each result set is placed in a separate table.</span></span> <span data-ttu-id="72192-362">其他結果集的命名方式將整數值附加至指定的資料表名稱 （例如，"Table"、"Table1"、"Table2"，等等）。</span><span class="sxs-lookup"><span data-stu-id="72192-362">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on).</span></span> <span data-ttu-id="72192-363">使用資料行和資料表名稱的應用程式應該確定 je v konfliktu 這些命名模式不會發生。</span><span class="sxs-lookup"><span data-stu-id="72192-363">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="72192-364">當 SELECT 陳述式用來填入<xref:System.Data.DataSet>傳回多個結果，例如批次 SQL 陳述式中，如果其中一個結果包含錯誤，所有後續的結果會跳過，且不會加入至<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="72192-364">When the SELECT statement used to populate the <xref:System.Data.DataSet> returns multiple results, such as a batch SQL statements, if one of the results contains an error, all subsequent results are skipped and not added to the <xref:System.Data.DataSet>.</span></span>  
  
 <span data-ttu-id="72192-365">您可以使用<xref:System.Data.Common.DataAdapter.Fill%2A>上多次相同的方法<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="72192-365">You can use the <xref:System.Data.Common.DataAdapter.Fill%2A> method multiple times on the same <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="72192-366">如果主索引鍵存在，內送資料列會合併與相符的資料列已經存在。</span><span class="sxs-lookup"><span data-stu-id="72192-366">If a primary key exists, incoming rows are merged with matching rows that already exist.</span></span> <span data-ttu-id="72192-367">如果沒有主索引鍵存在，將內送資料列附加至<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="72192-367">If no primary key exists, incoming rows are appended to the <xref:System.Data.DataTable>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="72192-368">當處理批次 SQL 陳述式會傳回多個結果，實作<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>的.NET Framework Data Provider for OLE DB 擷取第一個結果的結構描述資訊。</span><span class="sxs-lookup"><span data-stu-id="72192-368">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</span></span> <span data-ttu-id="72192-369">若要擷取多個結果的結構描述資訊，請使用<xref:System.Data.Common.DbDataAdapter.Fill%2A>具有<xref:System.Data.MissingSchemaAction>設定為`AddWithKey`。</span><span class="sxs-lookup"><span data-stu-id="72192-369">To retrieve schema information for multiple results, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> with the <xref:System.Data.MissingSchemaAction> set to `AddWithKey`.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="72192-370">DbProviderFactory (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="72192-370">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="72192-371">ADO.NET 概觀</span><span class="sxs-lookup"><span data-stu-id="72192-371">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="public int Fill (System.Data.DataSet dataSet, int startRecord, int maxRecords, string srcTable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Fill(class System.Data.DataSet dataSet, int32 startRecord, int32 maxRecords, string srcTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Fill(System::Data::DataSet ^ dataSet, int startRecord, int maxRecords, System::String ^ srcTable);" />
      <MemberSignature Language="F#" Value="override this.Fill : System.Data.DataSet * int * int * string -&gt; int" Usage="dbDataAdapter.Fill (dataSet, startRecord, maxRecords, srcTable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
        <Parameter Name="startRecord" Type="System.Int32" />
        <Parameter Name="maxRecords" Type="System.Int32" />
        <Parameter Name="srcTable" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dataSet"><span data-ttu-id="72192-372">A<see cref="T:System.Data.DataSet" />来填入資料錄，如有必要，結構描述。</span><span class="sxs-lookup"><span data-stu-id="72192-372">A <see cref="T:System.Data.DataSet" /> to fill with records and, if necessary, schema.</span></span></param>
        <param name="startRecord"><span data-ttu-id="72192-373">若要開始使用以零為起始的記錄數目。</span><span class="sxs-lookup"><span data-stu-id="72192-373">The zero-based record number to start with.</span></span></param>
        <param name="maxRecords"><span data-ttu-id="72192-374">要擷取的記錄數目上限。</span><span class="sxs-lookup"><span data-stu-id="72192-374">The maximum number of records to retrieve.</span></span></param>
        <param name="srcTable"><span data-ttu-id="72192-375">用於資料表對應的來源資料表名稱。</span><span class="sxs-lookup"><span data-stu-id="72192-375">The name of the source table to use for table mapping.</span></span></param>
        <summary><span data-ttu-id="72192-376">加入或重新整理中的指定範圍中的資料列<see cref="T:System.Data.DataSet" />以符合那些在資料來源藉<see cref="T:System.Data.DataSet" />和<see cref="T:System.Data.DataTable" />名稱。</span><span class="sxs-lookup"><span data-stu-id="72192-376">Adds or refreshes rows in a specified range in the <see cref="T:System.Data.DataSet" /> to match those in the data source using the <see cref="T:System.Data.DataSet" /> and <see cref="T:System.Data.DataTable" /> names.</span></span></summary>
        <returns><span data-ttu-id="72192-377">加入或重新整理成功的資料列數目<see cref="T:System.Data.DataSet" />。</span><span class="sxs-lookup"><span data-stu-id="72192-377">The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataSet" />.</span></span> <span data-ttu-id="72192-378">這不包括不傳回資料列的陳述式所影響的資料列。</span><span class="sxs-lookup"><span data-stu-id="72192-378">This does not include rows affected by statements that do not return rows.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72192-379">A `maxRecords` 0 的值取得開始記錄之後所發現的所有記錄。</span><span class="sxs-lookup"><span data-stu-id="72192-379">A `maxRecords` value of 0 gets all records found after the start record.</span></span> <span data-ttu-id="72192-380">如果`maxRecords`大於剩餘的資料列數目僅會傳回其餘的資料列，且不會發出錯誤。</span><span class="sxs-lookup"><span data-stu-id="72192-380">If `maxRecords` is greater than the number of remaining rows, only the remaining rows are returned, and no error is issued.</span></span>  
  
 <span data-ttu-id="72192-381">如果對應的 select 命令傳回多個結果，陳述式<xref:System.Data.Common.DbDataAdapter.Fill%2A>僅適用於`maxRecords`至第一個結果。</span><span class="sxs-lookup"><span data-stu-id="72192-381">If the corresponding select command is a statement returning multiple results, <xref:System.Data.Common.DbDataAdapter.Fill%2A> only applies `maxRecords` to the first result.</span></span>  
  
 <span data-ttu-id="72192-382"><xref:System.Data.Common.DbDataAdapter.Fill%2A>方法會從使用 SELECT 陳述式的資料來源擷取資料。</span><span class="sxs-lookup"><span data-stu-id="72192-382">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method retrieves the data from the data source using a SELECT statement.</span></span> <span data-ttu-id="72192-383"><xref:System.Data.IDbConnection> SELECT 陳述式相關聯的物件必須有效，但它不需要開啟。</span><span class="sxs-lookup"><span data-stu-id="72192-383">The <xref:System.Data.IDbConnection> object associated with the SELECT statement must be valid, but it does not need to be open.</span></span> <span data-ttu-id="72192-384">如果<xref:System.Data.IDbConnection>關閉之前<xref:System.Data.Common.DbDataAdapter.Fill%2A>是呼叫，它是開啟擷取資料並關閉。</span><span class="sxs-lookup"><span data-stu-id="72192-384">If the <xref:System.Data.IDbConnection> is closed before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it is opened to retrieve data and then closed.</span></span> <span data-ttu-id="72192-385">如果連接已開啟之前<xref:System.Data.Common.DbDataAdapter.Fill%2A>是呼叫，它會保持開啟狀態。</span><span class="sxs-lookup"><span data-stu-id="72192-385">If the connection is open before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="72192-386">如果命令未傳回任何資料列，將資料表加入至<xref:System.Data.DataSet>，但會引發任何例外狀況。</span><span class="sxs-lookup"><span data-stu-id="72192-386">If a command does not return any rows, no tables are added to the <xref:System.Data.DataSet>, but no exception is raised.</span></span>  
  
 <span data-ttu-id="72192-387">如果<xref:System.Data.Common.DbDataAdapter>物件在填入遇到重複的資料行<xref:System.Data.DataTable>，它會產生後續的資料行，並使用模式的名稱 」*columnname*1"，"*columnname*2"，"*columnname*3 」，依此類推。</span><span class="sxs-lookup"><span data-stu-id="72192-387">If the <xref:System.Data.Common.DbDataAdapter> object encounters duplicate columns while populating a <xref:System.Data.DataTable>, it will generate names for the subsequent columns, using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="72192-388">如果內送資料包含未命名的資料行，它們會放在<xref:System.Data.DataSet>根據模式"Column1"、"Column2"，依此類推。</span><span class="sxs-lookup"><span data-stu-id="72192-388">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span>  
  
 <span data-ttu-id="72192-389">當指定的查詢傳回多個結果時，每個結果集被放在個別的資料表。</span><span class="sxs-lookup"><span data-stu-id="72192-389">When the query specified returns multiple results, each result set is placed in a separate table.</span></span> <span data-ttu-id="72192-390">其他結果集的命名方式將整數值附加至指定的資料表名稱 （例如，"Table"、"Table1"、"Table2"，等等）。</span><span class="sxs-lookup"><span data-stu-id="72192-390">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on).</span></span> <span data-ttu-id="72192-391">因為不會建立資料表的查詢不會傳回資料列，如果您在處理 insert 查詢，其後的 select 查詢，建立 select 查詢的資料表是名為"Table"，因為它是建立的第一個資料表。</span><span class="sxs-lookup"><span data-stu-id="72192-391">Because no table is created for a query that does not return rows, if you process an insert query followed by a select query, the table created for the select query is named "Table", because it is the first table created.</span></span> <span data-ttu-id="72192-392">使用資料行和資料表名稱的應用程式應該確定 je v konfliktu 這些命名模式不會發生。</span><span class="sxs-lookup"><span data-stu-id="72192-392">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="72192-393"><xref:System.Data.Common.DbDataAdapter.Fill%2A>方法支援案例所在<xref:System.Data.DataSet>包含多個<xref:System.Data.DataTable>名稱只有大小寫不同的物件。</span><span class="sxs-lookup"><span data-stu-id="72192-393">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method supports scenarios where the <xref:System.Data.DataSet> contains multiple <xref:System.Data.DataTable> objects whose names differ only by case.</span></span> <span data-ttu-id="72192-394">在這種情況下，<xref:System.Data.Common.DbDataAdapter.Fill%2A>執行區分大小寫的比較，來尋找對應的資料表，並建立新的資料表，如果沒有完全相符項目存在。</span><span class="sxs-lookup"><span data-stu-id="72192-394">In such situations, <xref:System.Data.Common.DbDataAdapter.Fill%2A> performs a case-sensitive comparison to find the corresponding table, and creates a new table if no exact match exists.</span></span> <span data-ttu-id="72192-395">下列 C# 程式碼說明此行為。</span><span class="sxs-lookup"><span data-stu-id="72192-395">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
dataset.Tables.Add("AAA");  
adapter.Fill(dataset, "aaa"); // Fills "aaa", which already exists in the DataSet.  
adapter.Fill(dataset, "Aaa"); // Adds a new table called "Aaa".  
```  
  
 <span data-ttu-id="72192-396">如果<xref:System.Data.Common.DbDataAdapter.Fill%2A>呼叫時，<xref:System.Data.DataSet>只會包含一個<xref:System.Data.DataTable>名稱只有大小寫不同，，<xref:System.Data.DataTable>會更新。</span><span class="sxs-lookup"><span data-stu-id="72192-396">If <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called and the <xref:System.Data.DataSet> contains only one <xref:System.Data.DataTable> whose name differs only by case, that <xref:System.Data.DataTable> is updated.</span></span> <span data-ttu-id="72192-397">在此案例中，比較不區分大小寫。</span><span class="sxs-lookup"><span data-stu-id="72192-397">In this scenario, the comparison is case insensitive.</span></span> <span data-ttu-id="72192-398">下列 C# 程式碼說明此行為。</span><span class="sxs-lookup"><span data-stu-id="72192-398">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
adapter.Fill(dataset, "AAA"); // Fills table "aaa" because only one similarly named table is in the DataSet.  
```  
  
 <span data-ttu-id="72192-399">如果發生錯誤或例外狀況發生時填入資料的資料表，在發生錯誤之前所加入的資料列將保留在資料表中。</span><span class="sxs-lookup"><span data-stu-id="72192-399">If an error or an exception is encountered while populating the data tables, rows added prior to the occurrence of the error remain in the data tables.</span></span> <span data-ttu-id="72192-400">作業的其餘部分就會中止。</span><span class="sxs-lookup"><span data-stu-id="72192-400">The remainder of the operation is aborted.</span></span>  
  
 <span data-ttu-id="72192-401">當 SELECT 陳述式用來填入<xref:System.Data.DataSet>傳回多個結果，例如批次 SQL 陳述式，要注意下列事項：</span><span class="sxs-lookup"><span data-stu-id="72192-401">When the SELECT statement used to populate the <xref:System.Data.DataSet> returns multiple results, such as batch SQL statements, be aware of the following:</span></span>  
  
-   <span data-ttu-id="72192-402">處理批次 SQL 陳述式，從多個結果時`maxRecords`僅適用於第一個結果。</span><span class="sxs-lookup"><span data-stu-id="72192-402">When processing multiple results from a batch SQL statement, `maxRecords` only applies to the first result.</span></span> <span data-ttu-id="72192-403">這也適用於包含章節化的結果 (.NET Framework Data Provider for OLE DB 只) 的資料列。</span><span class="sxs-lookup"><span data-stu-id="72192-403">The same is true for rows containing chaptered results (.NET Framework Data Provider for OLE DB only).</span></span> <span data-ttu-id="72192-404">最上層結果會受到`maxRecords`，但是所有的子資料列會加入。</span><span class="sxs-lookup"><span data-stu-id="72192-404">The top level result is limited by `maxRecords`, but all child rows are added.</span></span>  
  
-   <span data-ttu-id="72192-405">如果其中一個結果包含錯誤時，會略過所有後續的結果，且未新增到<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="72192-405">If one of the results contains an error, all subsequent results are skipped and not added to the <xref:System.Data.DataSet>.</span></span>  
  
 <span data-ttu-id="72192-406">當使用後續<xref:System.Data.Common.DbDataAdapter.Fill%2A>重新整理的內容呼叫<xref:System.Data.DataSet>，必須符合兩個條件：</span><span class="sxs-lookup"><span data-stu-id="72192-406">When using subsequent <xref:System.Data.Common.DbDataAdapter.Fill%2A> calls to refresh the contents of the <xref:System.Data.DataSet>, two conditions must be met:</span></span>  
  
1.  <span data-ttu-id="72192-407">SQL 陳述式應該符合一開始用來填入<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="72192-407">The SQL statement should match the one initially used to populate the <xref:System.Data.DataSet>.</span></span>  
  
2.  <span data-ttu-id="72192-408">**金鑰**必須存在的資料行資訊。</span><span class="sxs-lookup"><span data-stu-id="72192-408">The **Key** column information must be present.</span></span>  
  
 <span data-ttu-id="72192-409">如果主索引鍵資訊存在時，任何重複的資料列會協調並只出現一次在<xref:System.Data.DataTable>，其對應於<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="72192-409">If primary key information is present, any duplicate rows will be reconciled and only appear once in the <xref:System.Data.DataTable> that corresponds to the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="72192-410">主索引鍵資訊可能會設定透過<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>，藉由指定<xref:System.Data.DataTable.PrimaryKey%2A>屬性<xref:System.Data.DataTable>，或藉由設定<xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>屬性設`AddWithKey`。</span><span class="sxs-lookup"><span data-stu-id="72192-410">Primary key information may be set either through <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, by specifying the <xref:System.Data.DataTable.PrimaryKey%2A> property of the <xref:System.Data.DataTable>, or by setting the <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> property to `AddWithKey`.</span></span>  
  
 <span data-ttu-id="72192-411">如果 `SelectCommand` 傳回 OUTER JOIN 的結果，則 `DataAdapter` 便不會為產生的 <xref:System.Data.DataTable.PrimaryKey%2A> 設定 <xref:System.Data.DataTable>值。</span><span class="sxs-lookup"><span data-stu-id="72192-411">If the `SelectCommand` returns the results of an OUTER JOIN, the `DataAdapter` does not set a <xref:System.Data.DataTable.PrimaryKey%2A> value for the resulting <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="72192-412">您必須明確定義以確保正確解析重複的資料列的主索引鍵。</span><span class="sxs-lookup"><span data-stu-id="72192-412">You must explicitly define the primary key to ensure that duplicate rows are resolved correctly.</span></span> <span data-ttu-id="72192-413">如需詳細資訊，請參閱 <<c0> [ 定義主索引鍵](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md)。</span><span class="sxs-lookup"><span data-stu-id="72192-413">For more information, see [Defining Primary Keys](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="72192-414">當處理批次 SQL 陳述式會傳回多個結果，實作<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>的.NET Framework Data Provider for OLE DB 擷取第一個結果的結構描述資訊。</span><span class="sxs-lookup"><span data-stu-id="72192-414">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</span></span> <span data-ttu-id="72192-415">若要擷取多個結果的結構描述資訊，請使用<xref:System.Data.Common.DbDataAdapter.Fill%2A>具有<xref:System.Data.MissingSchemaAction>設定為`AddWithKey`。</span><span class="sxs-lookup"><span data-stu-id="72192-415">To retrieve schema information for multiple results, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> with the <xref:System.Data.MissingSchemaAction> set to `AddWithKey`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="72192-416">`DataSet`不會包含在所指定的記錄數目超過`maxRecords`。</span><span class="sxs-lookup"><span data-stu-id="72192-416">The `DataSet` will not contain more than the number of records indicated by `maxRecords`.</span></span> <span data-ttu-id="72192-417">不過，從伺服器仍然傳回查詢所產生的整個結果集。</span><span class="sxs-lookup"><span data-stu-id="72192-417">However, the entire result set generated by the query is still returned from the server.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="72192-418">下列範例會使用衍生的類別中， <xref:System.Data.OleDb.OleDbDataAdapter>，以填滿<xref:System.Data.DataSet>具有 15 個資料列，從資料列 10，開始**類別**資料表。</span><span class="sxs-lookup"><span data-stu-id="72192-418">The following example uses the derived class, <xref:System.Data.OleDb.OleDbDataAdapter>, to fill a <xref:System.Data.DataSet> with 15 rows, beginning at row 10, from the **Categories** table.</span></span> <span data-ttu-id="72192-419">這個範例假設您已建立<xref:System.Data.OleDb.OleDbDataAdapter>和<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="72192-419">This example assumes that you have created an <xref:System.Data.OleDb.OleDbDataAdapter> and a <xref:System.Data.DataSet>.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.Fill3 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Fill3 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.Fill3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Fill3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.SystemException"><span data-ttu-id="72192-420"><see cref="T:System.Data.DataSet" /> 無效。</span><span class="sxs-lookup"><span data-stu-id="72192-420">The <see cref="T:System.Data.DataSet" /> is invalid.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="72192-421">來源資料表無效。</span><span class="sxs-lookup"><span data-stu-id="72192-421">The source table is invalid.</span></span>  
  
<span data-ttu-id="72192-422">-或-</span><span class="sxs-lookup"><span data-stu-id="72192-422">-or-</span></span> 
<span data-ttu-id="72192-423">連接無效。</span><span class="sxs-lookup"><span data-stu-id="72192-423">The connection is invalid.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="72192-424">找不到連接。</span><span class="sxs-lookup"><span data-stu-id="72192-424">The connection could not be found.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="72192-425"><paramref name="startRecord" />參數小於 0。</span><span class="sxs-lookup"><span data-stu-id="72192-425">The <paramref name="startRecord" /> parameter is less than 0.</span></span>  
  
<span data-ttu-id="72192-426">-或-</span><span class="sxs-lookup"><span data-stu-id="72192-426">-or-</span></span> 
<span data-ttu-id="72192-427"><paramref name="maxRecords" />參數小於 0。</span><span class="sxs-lookup"><span data-stu-id="72192-427">The <paramref name="maxRecords" /> parameter is less than 0.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="72192-428">當覆寫<see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" />衍生類別時，請務必呼叫基底類別的<see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" />方法。</span><span class="sxs-lookup"><span data-stu-id="72192-428">When overriding <see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /> in a derived class, be sure to call the base class's <see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /> method.</span></span></para></block>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="72192-429">DbProviderFactory (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="72192-429">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="72192-430">ADO.NET 概觀</span><span class="sxs-lookup"><span data-stu-id="72192-430">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="protected virtual int Fill (System.Data.DataSet dataSet, string srcTable, System.Data.IDataReader dataReader, int startRecord, int maxRecords);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 Fill(class System.Data.DataSet dataSet, string srcTable, class System.Data.IDataReader dataReader, int32 startRecord, int32 maxRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.String,System.Data.IDataReader,System.Int32,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int Fill(System::Data::DataSet ^ dataSet, System::String ^ srcTable, System::Data::IDataReader ^ dataReader, int startRecord, int maxRecords);" />
      <MemberSignature Language="F#" Value="override this.Fill : System.Data.DataSet * string * System.Data.IDataReader * int * int -&gt; int" Usage="dbDataAdapter.Fill (dataSet, srcTable, dataReader, startRecord, maxRecords)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" Index="0" FrameworkAlternate="netframework-1.1" />
        <Parameter Name="srcTable" Type="System.String" Index="1" FrameworkAlternate="netframework-1.1" />
        <Parameter Name="dataReader" Type="System.Data.IDataReader" Index="2" FrameworkAlternate="netframework-1.1" />
        <Parameter Name="startRecord" Type="System.Int32" Index="3" FrameworkAlternate="netframework-1.1" />
        <Parameter Name="maxRecords" Type="System.Int32" Index="4" FrameworkAlternate="netframework-1.1" />
      </Parameters>
      <Docs>
        <param name="dataSet"><span data-ttu-id="72192-431">A<see cref="T:System.Data.DataSet" />来填入資料錄，如有必要，結構描述。</span><span class="sxs-lookup"><span data-stu-id="72192-431">A <see cref="T:System.Data.DataSet" /> to fill with records and, if necessary, schema.</span></span></param>
        <param name="srcTable"><span data-ttu-id="72192-432">名稱<see cref="T:System.Data.DataTable" />来用於資料表對應。</span><span class="sxs-lookup"><span data-stu-id="72192-432">The name of the <see cref="T:System.Data.DataTable" /> to use for table mapping.</span></span></param>
        <param name="dataReader"><span data-ttu-id="72192-433"><see cref="T:System.Data.IDataReader" /> 的名稱。</span><span class="sxs-lookup"><span data-stu-id="72192-433">The name of the <see cref="T:System.Data.IDataReader" />.</span></span></param>
        <param name="startRecord"><span data-ttu-id="72192-434">若要開始使用以零為起始的記錄數目。</span><span class="sxs-lookup"><span data-stu-id="72192-434">The zero-based record number to start with.</span></span></param>
        <param name="maxRecords"><span data-ttu-id="72192-435">要擷取的記錄數目上限。</span><span class="sxs-lookup"><span data-stu-id="72192-435">The maximum number of records to retrieve.</span></span></param>
        <summary><span data-ttu-id="72192-436">加入或重新整理中的指定範圍中的資料列<see cref="T:System.Data.DataSet" />以符合那些在資料來源藉<see cref="T:System.Data.DataSet" />， <see cref="T:System.Data.DataTable" />，和<see cref="T:System.Data.IDataReader" />名稱。</span><span class="sxs-lookup"><span data-stu-id="72192-436">Adds or refreshes rows in a specified range in the <see cref="T:System.Data.DataSet" /> to match those in the data source using the <see cref="T:System.Data.DataSet" />, <see cref="T:System.Data.DataTable" />, and <see cref="T:System.Data.IDataReader" /> names.</span></span></summary>
        <returns><span data-ttu-id="72192-437">加入或重新整理成功的資料列數目<see cref="T:System.Data.DataSet" />。</span><span class="sxs-lookup"><span data-stu-id="72192-437">The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataSet" />.</span></span> <span data-ttu-id="72192-438">這不包括不傳回資料列的陳述式所影響的資料列。</span><span class="sxs-lookup"><span data-stu-id="72192-438">This does not include rows affected by statements that do not return rows.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="protected virtual int Fill (System.Data.DataTable[] dataTables, int startRecord, int maxRecords, System.Data.IDbCommand command, System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 Fill(class System.Data.DataTable[] dataTables, int32 startRecord, int32 maxRecords, class System.Data.IDbCommand command, valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable[],System.Int32,System.Int32,System.Data.IDbCommand,System.Data.CommandBehavior)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function Fill (dataTables As DataTable(), startRecord As Integer, maxRecords As Integer, command As IDbCommand, behavior As CommandBehavior) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int Fill(cli::array &lt;System::Data::DataTable ^&gt; ^ dataTables, int startRecord, int maxRecords, System::Data::IDbCommand ^ command, System::Data::CommandBehavior behavior);" />
      <MemberSignature Language="F#" Value="override this.Fill : System.Data.DataTable[] * int * int * System.Data.IDbCommand * System.Data.CommandBehavior -&gt; int" Usage="dbDataAdapter.Fill (dataTables, startRecord, maxRecords, command, behavior)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataTables" Type="System.Data.DataTable[]" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="startRecord" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="maxRecords" Type="System.Int32" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="command" Type="System.Data.IDbCommand" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" Index="4" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="dataTables"><span data-ttu-id="72192-439"><see cref="T:System.Data.DataTable" />來填滿資料來源的物件。</span><span class="sxs-lookup"><span data-stu-id="72192-439">The <see cref="T:System.Data.DataTable" /> objects to fill from the data source.</span></span></param>
        <param name="startRecord"><span data-ttu-id="72192-440">若要開始使用以零為起始的記錄數目。</span><span class="sxs-lookup"><span data-stu-id="72192-440">The zero-based record number to start with.</span></span></param>
        <param name="maxRecords"><span data-ttu-id="72192-441">要擷取的記錄數目上限。</span><span class="sxs-lookup"><span data-stu-id="72192-441">The maximum number of records to retrieve.</span></span></param>
        <param name="command"><span data-ttu-id="72192-442"><see cref="T:System.Data.IDbCommand" />執行，以填滿<see cref="T:System.Data.DataTable" />物件。</span><span class="sxs-lookup"><span data-stu-id="72192-442">The <see cref="T:System.Data.IDbCommand" /> executed to fill the <see cref="T:System.Data.DataTable" /> objects.</span></span></param>
        <param name="behavior"><span data-ttu-id="72192-443">其中一個 <see cref="T:System.Data.CommandBehavior" /> 值。</span><span class="sxs-lookup"><span data-stu-id="72192-443">One of the <see cref="T:System.Data.CommandBehavior" /> values.</span></span></param>
        <summary><span data-ttu-id="72192-444">加入或重新整理中的指定範圍中的資料列<see cref="T:System.Data.DataSet" />以符合那些在資料來源藉<see cref="T:System.Data.DataSet" />和<see cref="T:System.Data.DataTable" />名稱。</span><span class="sxs-lookup"><span data-stu-id="72192-444">Adds or refreshes rows in a specified range in the <see cref="T:System.Data.DataSet" /> to match those in the data source using the <see cref="T:System.Data.DataSet" /> and <see cref="T:System.Data.DataTable" /> names.</span></span></summary>
        <returns><span data-ttu-id="72192-445">加入或重新整理資料的資料表中的資料列數目。</span><span class="sxs-lookup"><span data-stu-id="72192-445">The number of rows added to or refreshed in the data tables.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72192-446">A `maxRecords` 0 的值取得開始記錄之後所發現的所有記錄。</span><span class="sxs-lookup"><span data-stu-id="72192-446">A `maxRecords` value of 0 gets all records found after the start record.</span></span> <span data-ttu-id="72192-447">如果`maxRecords`大於剩餘的資料列數目只會傳回其餘的資料列，不會發出錯誤。</span><span class="sxs-lookup"><span data-stu-id="72192-447">If `maxRecords` is greater than the number of remaining rows, only the remaining rows are returned and no error is issued.</span></span>  
  
 <span data-ttu-id="72192-448"><xref:System.Data.Common.DbDataAdapter.Fill%2A>方法會從使用 SELECT 陳述式的資料來源擷取資料。</span><span class="sxs-lookup"><span data-stu-id="72192-448">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method retrieves the data from the data source using a SELECT statement.</span></span> <span data-ttu-id="72192-449"><xref:System.Data.IDbConnection> SELECT 陳述式相關聯的物件必須有效，但它不需要開啟。</span><span class="sxs-lookup"><span data-stu-id="72192-449">The <xref:System.Data.IDbConnection> object associated with the SELECT statement must be valid, but it does not need to be open.</span></span> <span data-ttu-id="72192-450">如果<xref:System.Data.IDbConnection>關閉之前<xref:System.Data.Common.DbDataAdapter.Fill%2A>會呼叫它，它會開啟來擷取資料，然後關閉。</span><span class="sxs-lookup"><span data-stu-id="72192-450">If the <xref:System.Data.IDbConnection> is closed before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it is opened to retrieve data, then closed.</span></span> <span data-ttu-id="72192-451">如果連接已開啟之前<xref:System.Data.Common.DbDataAdapter.Fill%2A>是呼叫，它會保持開啟狀態。</span><span class="sxs-lookup"><span data-stu-id="72192-451">If the connection is open before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="72192-452">如果命令未傳回任何資料列，將資料表加入至<xref:System.Data.DataSet>，但會引發任何例外狀況。</span><span class="sxs-lookup"><span data-stu-id="72192-452">If a command does not return any rows, no tables are added to the <xref:System.Data.DataSet>, but no exception is raised.</span></span>  
  
 <span data-ttu-id="72192-453">如果<xref:System.Data.Common.DbDataAdapter>物件在填入遇到重複的資料行<xref:System.Data.DataTable>，它會產生後續的資料行，並使用模式的名稱 」*columnname*1"，"*columnname*2"，"*columnname*3 」，依此類推。</span><span class="sxs-lookup"><span data-stu-id="72192-453">If the <xref:System.Data.Common.DbDataAdapter> object encounters duplicate columns while populating a <xref:System.Data.DataTable>, it will generate names for the subsequent columns, using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="72192-454">如果內送資料包含未命名的資料行，它們會放在<xref:System.Data.DataSet>根據模式"Column1"、"Column2"，依此類推。</span><span class="sxs-lookup"><span data-stu-id="72192-454">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span>  
  
 <span data-ttu-id="72192-455">當指定的查詢傳回多個結果時，每個結果集被放在個別的資料表。</span><span class="sxs-lookup"><span data-stu-id="72192-455">When the query specified returns multiple results, each result set is placed in a separate table.</span></span> <span data-ttu-id="72192-456">其他結果集的命名方式將整數值附加至指定的資料表名稱 （例如，"Table"、"Table1"、"Table2"，等等）。</span><span class="sxs-lookup"><span data-stu-id="72192-456">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on).</span></span> <span data-ttu-id="72192-457">因為不會建立資料表的查詢不會傳回資料列，如果您要處理 insert 查詢，其後的 select 查詢，建立 select 查詢的資料表就會命名為"Table"，因為它是建立的第一個資料表。</span><span class="sxs-lookup"><span data-stu-id="72192-457">Since no table is created for a query that does not return rows, if you were to process an insert query followed by a select query, the table created for the select query would be named "Table", because it is the first table created.</span></span> <span data-ttu-id="72192-458">使用資料行和資料表名稱的應用程式應該確定 je v konfliktu 這些命名模式不會發生。</span><span class="sxs-lookup"><span data-stu-id="72192-458">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="72192-459"><xref:System.Data.Common.DbDataAdapter.Fill%2A>方法支援案例所在<xref:System.Data.DataSet>包含多個<xref:System.Data.DataTable>名稱只有大小寫不同的物件。</span><span class="sxs-lookup"><span data-stu-id="72192-459">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method supports scenarios where the <xref:System.Data.DataSet> contains multiple <xref:System.Data.DataTable> objects whose names differ only by case.</span></span> <span data-ttu-id="72192-460">在這種情況下，<xref:System.Data.Common.DbDataAdapter.Fill%2A>執行區分大小寫的比較，來尋找對應的資料表，並建立新的資料表，如果沒有完全相符項目存在。</span><span class="sxs-lookup"><span data-stu-id="72192-460">In such situations, <xref:System.Data.Common.DbDataAdapter.Fill%2A> performs a case-sensitive comparison to find the corresponding table, and creates a new table if no exact match exists.</span></span> <span data-ttu-id="72192-461">下列 C# 程式碼說明此行為。</span><span class="sxs-lookup"><span data-stu-id="72192-461">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
dataset.Tables.Add("AAA");  
adapter.Fill(dataset, "aaa"); // Fills "aaa", which already exists in the DataSet.  
adapter.Fill(dataset, "Aaa"); // Adds a new table called "Aaa".  
```  
  
 <span data-ttu-id="72192-462">如果<xref:System.Data.Common.DbDataAdapter.Fill%2A>呼叫時，<xref:System.Data.DataSet>只會包含一個<xref:System.Data.DataTable>名稱只有大小寫不同，，<xref:System.Data.DataTable>會更新。</span><span class="sxs-lookup"><span data-stu-id="72192-462">If <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called and the <xref:System.Data.DataSet> contains only one <xref:System.Data.DataTable> whose name differs only by case, that <xref:System.Data.DataTable> is updated.</span></span> <span data-ttu-id="72192-463">在此案例中，比較不區分大小寫。</span><span class="sxs-lookup"><span data-stu-id="72192-463">In this scenario, the comparison is case insensitive.</span></span> <span data-ttu-id="72192-464">下列 C# 程式碼說明此行為。</span><span class="sxs-lookup"><span data-stu-id="72192-464">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
adapter.Fill(dataset, "AAA"); // Fills table "aaa" because only one similarly named table is in the DataSet.  
```  
  
 <span data-ttu-id="72192-465">如果發生錯誤或例外狀況發生時填入資料的資料表，在發生錯誤之前所加入的資料列將保留在資料表中。</span><span class="sxs-lookup"><span data-stu-id="72192-465">If an error or an exception is encountered while populating the data tables, rows added prior to the occurrence of the error remain in the data tables.</span></span> <span data-ttu-id="72192-466">作業的其餘部分就會中止。</span><span class="sxs-lookup"><span data-stu-id="72192-466">The remainder of the operation is aborted.</span></span>  
  
 <span data-ttu-id="72192-467">當 SELECT 陳述式用來填入<xref:System.Data.DataTable>物件會傳回多個結果，例如批次 SQL 陳述式中，注意下列事項：</span><span class="sxs-lookup"><span data-stu-id="72192-467">When the SELECT statement used to populate the <xref:System.Data.DataTable> objects returns multiple results, such as a batch SQL statement, be aware of the following:</span></span>  
  
-   <span data-ttu-id="72192-468">處理批次 SQL 陳述式，從多個結果時`maxRecords`僅適用於第一個結果。</span><span class="sxs-lookup"><span data-stu-id="72192-468">When processing multiple results from a batch SQL statement, `maxRecords` only applies to the first result.</span></span> <span data-ttu-id="72192-469">這也適用於包含章節化的結果 (.NET Framework Data Provider for OLE DB 只) 的資料列。</span><span class="sxs-lookup"><span data-stu-id="72192-469">The same is true for rows containing chaptered results (.NET Framework Data Provider for OLE DB only).</span></span> <span data-ttu-id="72192-470">最上層結果會受到`maxRecords`，但是所有的子資料列會加入。</span><span class="sxs-lookup"><span data-stu-id="72192-470">The top level result is limited by `maxRecords`, but all child rows are added.</span></span>  
  
-   <span data-ttu-id="72192-471">如果其中一個結果包含錯誤時，會略過所有後續的結果。</span><span class="sxs-lookup"><span data-stu-id="72192-471">If one of the results contains an error, all subsequent results are skipped.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="72192-472">`DataSet`不會包含在所指定的記錄數目超過`maxRecords`。</span><span class="sxs-lookup"><span data-stu-id="72192-472">The `DataSet` will not contain more than the number of records indicated by `maxRecords`.</span></span> <span data-ttu-id="72192-473">不過，從伺服器仍然傳回整個查詢所產生的結果集。</span><span class="sxs-lookup"><span data-stu-id="72192-473">However, the entire resultset generated by the query is still returned from the server.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.SystemException"><span data-ttu-id="72192-474"><see cref="T:System.Data.DataSet" /> 無效。</span><span class="sxs-lookup"><span data-stu-id="72192-474">The <see cref="T:System.Data.DataSet" /> is invalid.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="72192-475">來源資料表無效。</span><span class="sxs-lookup"><span data-stu-id="72192-475">The source table is invalid.</span></span>  
  
<span data-ttu-id="72192-476">-或-</span><span class="sxs-lookup"><span data-stu-id="72192-476">-or-</span></span> 
<span data-ttu-id="72192-477">連接無效。</span><span class="sxs-lookup"><span data-stu-id="72192-477">The connection is invalid.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="72192-478">找不到連接。</span><span class="sxs-lookup"><span data-stu-id="72192-478">The connection could not be found.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="72192-479"><paramref name="startRecord" />參數小於 0。</span><span class="sxs-lookup"><span data-stu-id="72192-479">The <paramref name="startRecord" /> parameter is less than 0.</span></span>  
  
<span data-ttu-id="72192-480">-或-</span><span class="sxs-lookup"><span data-stu-id="72192-480">-or-</span></span> 
<span data-ttu-id="72192-481"><paramref name="maxRecords" />參數小於 0。</span><span class="sxs-lookup"><span data-stu-id="72192-481">The <paramref name="maxRecords" /> parameter is less than 0.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="72192-482">當覆寫<see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" />衍生類別時，請務必呼叫基底類別的<see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" />方法。</span><span class="sxs-lookup"><span data-stu-id="72192-482">When overriding <see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /> in a derived class, be sure to call the base class's <see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /> method.</span></span></para></block>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="72192-483">DbProviderFactory (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="72192-483">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="72192-484">ADO.NET 概觀</span><span class="sxs-lookup"><span data-stu-id="72192-484">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="protected virtual int Fill (System.Data.DataSet dataSet, int startRecord, int maxRecords, string srcTable, System.Data.IDbCommand command, System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 Fill(class System.Data.DataSet dataSet, int32 startRecord, int32 maxRecords, string srcTable, class System.Data.IDbCommand command, valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String,System.Data.IDbCommand,System.Data.CommandBehavior)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int Fill(System::Data::DataSet ^ dataSet, int startRecord, int maxRecords, System::String ^ srcTable, System::Data::IDbCommand ^ command, System::Data::CommandBehavior behavior);" />
      <MemberSignature Language="F#" Value="override this.Fill : System.Data.DataSet * int * int * string * System.Data.IDbCommand * System.Data.CommandBehavior -&gt; int" Usage="dbDataAdapter.Fill (dataSet, startRecord, maxRecords, srcTable, command, behavior)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
        <Parameter Name="startRecord" Type="System.Int32" />
        <Parameter Name="maxRecords" Type="System.Int32" />
        <Parameter Name="srcTable" Type="System.String" />
        <Parameter Name="command" Type="System.Data.IDbCommand" />
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" />
      </Parameters>
      <Docs>
        <param name="dataSet"><span data-ttu-id="72192-485">A<see cref="T:System.Data.DataSet" />来填入資料錄，如有必要，結構描述。</span><span class="sxs-lookup"><span data-stu-id="72192-485">A <see cref="T:System.Data.DataSet" /> to fill with records and, if necessary, schema.</span></span></param>
        <param name="startRecord"><span data-ttu-id="72192-486">若要開始使用以零為起始的記錄數目。</span><span class="sxs-lookup"><span data-stu-id="72192-486">The zero-based record number to start with.</span></span></param>
        <param name="maxRecords"><span data-ttu-id="72192-487">要擷取的記錄數目上限。</span><span class="sxs-lookup"><span data-stu-id="72192-487">The maximum number of records to retrieve.</span></span></param>
        <param name="srcTable"><span data-ttu-id="72192-488">用於資料表對應的來源資料表名稱。</span><span class="sxs-lookup"><span data-stu-id="72192-488">The name of the source table to use for table mapping.</span></span></param>
        <param name="command"><span data-ttu-id="72192-489">SQL SELECT 陳述式用於從資料來源擷取資料列。</span><span class="sxs-lookup"><span data-stu-id="72192-489">The SQL SELECT statement used to retrieve rows from the data source.</span></span></param>
        <param name="behavior"><span data-ttu-id="72192-490">其中一個 <see cref="T:System.Data.CommandBehavior" /> 值。</span><span class="sxs-lookup"><span data-stu-id="72192-490">One of the <see cref="T:System.Data.CommandBehavior" /> values.</span></span></param>
        <summary><span data-ttu-id="72192-491">加入或重新整理中的指定範圍中的資料列<see cref="T:System.Data.DataSet" />以符合那些在資料來源使用<see cref="T:System.Data.DataSet" />和來源資料表名稱、 命令字串和命令行為。</span><span class="sxs-lookup"><span data-stu-id="72192-491">Adds or refreshes rows in a specified range in the <see cref="T:System.Data.DataSet" /> to match those in the data source using the <see cref="T:System.Data.DataSet" /> and source table names, command string, and command behavior.</span></span></summary>
        <returns><span data-ttu-id="72192-492">加入或重新整理成功的資料列數目<see cref="T:System.Data.DataSet" />。</span><span class="sxs-lookup"><span data-stu-id="72192-492">The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataSet" />.</span></span> <span data-ttu-id="72192-493">這不包括不傳回資料列的陳述式所影響的資料列。</span><span class="sxs-lookup"><span data-stu-id="72192-493">This does not include rows affected by statements that do not return rows.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72192-494"><xref:System.Data.Common.DbDataAdapter.Fill%2A>方法會從使用 SELECT 陳述式指定由相關聯的資料來源擷取資料列<xref:System.Data.IDbDataAdapter.SelectCommand%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="72192-494">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method retrieves rows from the data source using the SELECT statement specified by an associated <xref:System.Data.IDbDataAdapter.SelectCommand%2A> property.</span></span> <span data-ttu-id="72192-495">SELECT 陳述式相關聯的連接物件必須是有效的但它不需要開啟。</span><span class="sxs-lookup"><span data-stu-id="72192-495">The connection object associated with the SELECT statement must be valid, but it does not need to be open.</span></span> <span data-ttu-id="72192-496">如果連線已關閉之前<xref:System.Data.Common.DbDataAdapter.Fill%2A>會呼叫它，它會開啟來擷取資料，然後關閉。</span><span class="sxs-lookup"><span data-stu-id="72192-496">If the connection is closed before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it is opened to retrieve data, then closed.</span></span> <span data-ttu-id="72192-497">如果連接已開啟之前<xref:System.Data.Common.DbDataAdapter.Fill%2A>是呼叫，它會保持開啟狀態。</span><span class="sxs-lookup"><span data-stu-id="72192-497">If the connection is open before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="72192-498"><xref:System.Data.Common.DbDataAdapter.Fill%2A>作業，然後將資料列加入到目的地<xref:System.Data.DataTable>中的物件<xref:System.Data.DataSet>建立<xref:System.Data.DataTable>物件如果它們尚不存在。</span><span class="sxs-lookup"><span data-stu-id="72192-498">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> operation then adds the rows to destination <xref:System.Data.DataTable> objects in the <xref:System.Data.DataSet>, creating the <xref:System.Data.DataTable> objects if they do not already exist.</span></span> <span data-ttu-id="72192-499">建立時<xref:System.Data.DataTable>物件，<xref:System.Data.Common.DbDataAdapter.Fill%2A>作業通常會建立只有資料行名稱中繼資料。</span><span class="sxs-lookup"><span data-stu-id="72192-499">When creating <xref:System.Data.DataTable> objects, the <xref:System.Data.Common.DbDataAdapter.Fill%2A> operation normally creates only column name metadata.</span></span> <span data-ttu-id="72192-500">不過，如果<xref:System.Data.IDataAdapter.MissingSchemaAction%2A>屬性設定為`AddWithKey`，也會建立適當的主索引鍵和條件約束。</span><span class="sxs-lookup"><span data-stu-id="72192-500">However, if the <xref:System.Data.IDataAdapter.MissingSchemaAction%2A> property is set to `AddWithKey`, appropriate primary keys and constraints are also created.</span></span>  
  
 <span data-ttu-id="72192-501">如果<xref:System.Data.Common.DbDataAdapter>遇到重複的資料行在填入<xref:System.Data.DataTable>，它會產生後續的資料行，並使用模式的名稱 」*columnname*1""*columnname*2"，"*columnname*3"，依此類推。</span><span class="sxs-lookup"><span data-stu-id="72192-501">If the <xref:System.Data.Common.DbDataAdapter> encounters duplicate columns while populating a <xref:System.Data.DataTable>, it generates names for the subsequent columns, using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="72192-502">如果內送資料包含未命名的資料行，它們會放在<xref:System.Data.DataSet>根據模式"Column1"、"Column2"，依此類推。</span><span class="sxs-lookup"><span data-stu-id="72192-502">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span> <span data-ttu-id="72192-503">當多個結果集加入至<xref:System.Data.DataSet>放置於個別的資料表中每個結果集。</span><span class="sxs-lookup"><span data-stu-id="72192-503">When multiple result sets are added to the <xref:System.Data.DataSet> each result set is placed in a separate table.</span></span> <span data-ttu-id="72192-504">其他結果集的命名方式將整數值附加至指定的資料表名稱 （例如，"Table"、"Table1"、"Table2"，等等）。</span><span class="sxs-lookup"><span data-stu-id="72192-504">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on).</span></span> <span data-ttu-id="72192-505">使用資料行和資料表名稱的應用程式應該確定 je v konfliktu 這些命名模式不會發生。</span><span class="sxs-lookup"><span data-stu-id="72192-505">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="72192-506"><xref:System.Data.Common.DbDataAdapter.Fill%2A>方法支援案例所在<xref:System.Data.DataSet>包含多個<xref:System.Data.DataTable>名稱只有大小寫不同的物件。</span><span class="sxs-lookup"><span data-stu-id="72192-506">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method supports scenarios where the <xref:System.Data.DataSet> contains multiple <xref:System.Data.DataTable> objects whose names differ only by case.</span></span> <span data-ttu-id="72192-507">在這種情況下，<xref:System.Data.Common.DbDataAdapter.Fill%2A>執行區分大小寫的比較，來尋找對應的資料表，並建立新的資料表，如果沒有完全相符項目存在。</span><span class="sxs-lookup"><span data-stu-id="72192-507">In such situations, <xref:System.Data.Common.DbDataAdapter.Fill%2A> performs a case-sensitive comparison to find the corresponding table, and creates a new table if no exact match exists.</span></span> <span data-ttu-id="72192-508">下列 C# 程式碼說明此行為。</span><span class="sxs-lookup"><span data-stu-id="72192-508">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
dataset.Tables.Add("AAA");  
adapter.Fill(dataset, "aaa"); // Fills "aaa", which already exists in the DataSet.  
adapter.Fill(dataset, "Aaa"); // Adds a new table called "Aaa".  
```  
  
 <span data-ttu-id="72192-509">如果<xref:System.Data.Common.DbDataAdapter.Fill%2A>呼叫時，<xref:System.Data.DataSet>只會包含一個<xref:System.Data.DataTable>名稱只有大小寫不同，，<xref:System.Data.DataTable>會更新。</span><span class="sxs-lookup"><span data-stu-id="72192-509">If <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called and the <xref:System.Data.DataSet> contains only one <xref:System.Data.DataTable> whose name differs only by case, that <xref:System.Data.DataTable> is updated.</span></span> <span data-ttu-id="72192-510">在此案例中，比較不區分大小寫。</span><span class="sxs-lookup"><span data-stu-id="72192-510">In this scenario, the comparison is case insensitive.</span></span> <span data-ttu-id="72192-511">下列 C# 程式碼說明此行為。</span><span class="sxs-lookup"><span data-stu-id="72192-511">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
adapter.Fill(dataset, "AAA"); // Fills table "aaa" because only one similarly named table is in the DataSet.  
```  
  
 <span data-ttu-id="72192-512">您可以使用<xref:System.Data.Common.DbDataAdapter.Fill%2A>上多次相同的方法<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="72192-512">You can use the <xref:System.Data.Common.DbDataAdapter.Fill%2A> method multiple times on the same <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="72192-513">如果主索引鍵存在，內送資料列會合併與相符的資料列已經存在。</span><span class="sxs-lookup"><span data-stu-id="72192-513">If a primary key exists, incoming rows are merged with matching rows that already exist.</span></span> <span data-ttu-id="72192-514">如果沒有主索引鍵存在，將內送資料列附加至<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="72192-514">If no primary key exists, incoming rows are appended to the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="72192-515">如果 `SelectCommand` 傳回 OUTER JOIN 的結果，則 `DataAdapter` 便不會為產生的 <xref:System.Data.DataTable.PrimaryKey%2A> 設定 <xref:System.Data.DataTable>值。</span><span class="sxs-lookup"><span data-stu-id="72192-515">If the `SelectCommand` returns the results of an OUTER JOIN, the `DataAdapter` does not set a <xref:System.Data.DataTable.PrimaryKey%2A> value for the resulting <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="72192-516">您必須明確定義以確保正確解析重複的資料列的主索引鍵。</span><span class="sxs-lookup"><span data-stu-id="72192-516">You must explicitly define the primary key to ensure that duplicate rows are resolved correctly.</span></span> <span data-ttu-id="72192-517">如需詳細資訊，請參閱 <<c0> [ 定義主索引鍵](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md)。</span><span class="sxs-lookup"><span data-stu-id="72192-517">For more information, see [Defining Primary Keys](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="72192-518">當處理批次 SQL 陳述式會傳回多個結果，實作<xref:System.Data.Common.DbDataAdapter.Fill%2A>和<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>.NET Framework 資料提供者會擷取第一個結果的結構描述資訊。</span><span class="sxs-lookup"><span data-stu-id="72192-518">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.Fill%2A> and <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for a .NET Framework data provider retrieves schema information for only the first result.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="72192-519">來源資料表無效。</span><span class="sxs-lookup"><span data-stu-id="72192-519">The source table is invalid.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="72192-520"><paramref name="startRecord" />參數小於 0。</span><span class="sxs-lookup"><span data-stu-id="72192-520">The <paramref name="startRecord" /> parameter is less than 0.</span></span>  
  
<span data-ttu-id="72192-521">-或-</span><span class="sxs-lookup"><span data-stu-id="72192-521">-or-</span></span> 
<span data-ttu-id="72192-522"><paramref name="maxRecords" />參數小於 0。</span><span class="sxs-lookup"><span data-stu-id="72192-522">The <paramref name="maxRecords" /> parameter is less than 0.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="72192-523">這個多載<see cref="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)" />方法受到保護，設計用於使用.NET Framework 資料提供者。</span><span class="sxs-lookup"><span data-stu-id="72192-523">This overload of the <see cref="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)" /> method is protected and is designed for use by a .NET Framework data provider.</span></span></para></block>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="72192-524">DbProviderFactory (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="72192-524">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="72192-525">ADO.NET 概觀</span><span class="sxs-lookup"><span data-stu-id="72192-525">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FillCommandBehavior">
      <MemberSignature Language="C#" Value="protected internal System.Data.CommandBehavior FillCommandBehavior { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.CommandBehavior FillCommandBehavior" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataAdapter.FillCommandBehavior" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Property FillCommandBehavior As CommandBehavior" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property System::Data::CommandBehavior FillCommandBehavior { System::Data::CommandBehavior get(); void set(System::Data::CommandBehavior value); };" />
      <MemberSignature Language="F#" Value="member this.FillCommandBehavior : System.Data.CommandBehavior with get, set" Usage="System.Data.Common.DbDataAdapter.FillCommandBehavior" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.CommandBehavior</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="72192-526">取得或設定用來填入資料配接器的命令的行為。</span><span class="sxs-lookup"><span data-stu-id="72192-526">Gets or sets the behavior of the command used to fill the data adapter.</span></span></summary>
        <value><span data-ttu-id="72192-527"><see cref="T:System.Data.CommandBehavior" />用來填滿資料配接器的命令。</span><span class="sxs-lookup"><span data-stu-id="72192-527">The <see cref="T:System.Data.CommandBehavior" /> of the command used to fill the data adapter.</span></span></value>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="72192-528">DbProviderFactory (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="72192-528">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="72192-529">ADO.NET 概觀</span><span class="sxs-lookup"><span data-stu-id="72192-529">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FillError">
      <MemberSignature Language="C#" Value="public event System.Data.FillErrorEventHandler FillError;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.FillErrorEventHandler FillError" />
      <MemberSignature Language="DocId" Value="E:System.Data.Common.DbDataAdapter.FillError" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event FillError As FillErrorEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::FillErrorEventHandler ^ FillError;" />
      <MemberSignature Language="F#" Value="member this.FillError : System.Data.FillErrorEventHandler " Usage="member this.FillError : System.Data.FillErrorEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DbDataAdapter_FillError")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.FillErrorEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="72192-530">在填入作業期間發生錯誤時傳回。</span><span class="sxs-lookup"><span data-stu-id="72192-530">Returned when an error occurs during a fill operation.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="FillSchema">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="72192-531">新增<see cref="T:System.Data.DataTable" />至<see cref="T:System.Data.DataSet" />並設定成符合資料來源中的結構描述。</span><span class="sxs-lookup"><span data-stu-id="72192-531">Adds a <see cref="T:System.Data.DataTable" /> to a <see cref="T:System.Data.DataSet" /> and configures the schema to match that in the data source.</span></span></summary>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="72192-532">ADO.NET 概觀</span><span class="sxs-lookup"><span data-stu-id="72192-532">ADO.NET Overview</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="FillSchema">
      <MemberSignature Language="C#" Value="public override System.Data.DataTable[] FillSchema (System.Data.DataSet dataSet, System.Data.SchemaType schemaType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.DataTable[] FillSchema(class System.Data.DataSet dataSet, valuetype System.Data.SchemaType schemaType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Data::DataTable ^&gt; ^ FillSchema(System::Data::DataSet ^ dataSet, System::Data::SchemaType schemaType);" />
      <MemberSignature Language="F#" Value="override this.FillSchema : System.Data.DataSet * System.Data.SchemaType -&gt; System.Data.DataTable[]" Usage="dbDataAdapter.FillSchema (dataSet, schemaType)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
        <Parameter Name="schemaType" Type="System.Data.SchemaType" />
      </Parameters>
      <Docs>
        <param name="dataSet"><span data-ttu-id="72192-533">用以插入結構描述的 <see cref="T:System.Data.DataSet" />。</span><span class="sxs-lookup"><span data-stu-id="72192-533">A <see cref="T:System.Data.DataSet" /> to insert the schema in.</span></span></param>
        <param name="schemaType"><span data-ttu-id="72192-534">其中一個 <see cref="T:System.Data.SchemaType" /> 值，指定如何插入結構描述。</span><span class="sxs-lookup"><span data-stu-id="72192-534">One of the <see cref="T:System.Data.SchemaType" /> values that specify how to insert the schema.</span></span></param>
        <summary><span data-ttu-id="72192-535">新增一個名為 "Table" 的 <see cref="T:System.Data.DataTable" /> 至指定的 <see cref="T:System.Data.DataSet" />，並且設定符合指定的 <see cref="T:System.Data.SchemaType" /> 上之資料來源的結構描述。</span><span class="sxs-lookup"><span data-stu-id="72192-535">Adds a <see cref="T:System.Data.DataTable" /> named "Table" to the specified <see cref="T:System.Data.DataSet" /> and configures the schema to match that in the data source based on the specified <see cref="T:System.Data.SchemaType" />.</span></span></summary>
        <returns><span data-ttu-id="72192-536">加入 <see cref="T:System.Data.DataSet" /> 之 <see cref="T:System.Data.DataTable" /> 物件集合的參考。</span><span class="sxs-lookup"><span data-stu-id="72192-536">A reference to a collection of <see cref="T:System.Data.DataTable" /> objects that were added to the <see cref="T:System.Data.DataSet" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72192-537">這個方法會擷取從資料來源使用的結構描述資訊<xref:System.Data.IDbDataAdapter.SelectCommand%2A>。</span><span class="sxs-lookup"><span data-stu-id="72192-537">This method retrieves the schema information from the data source using the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>.</span></span>  
  
 <span data-ttu-id="72192-538">A<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>作業會將加入<xref:System.Data.DataTable>到目的地<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="72192-538">A <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> operation adds a <xref:System.Data.DataTable> to the destination <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="72192-539">接著它會加入至資料行<xref:System.Data.DataColumnCollection>的<xref:System.Data.DataTable>，並設定下列<xref:System.Data.DataColumn>如果它們存在於資料來源的屬性：</span><span class="sxs-lookup"><span data-stu-id="72192-539">It then adds columns to the <xref:System.Data.DataColumnCollection> of the <xref:System.Data.DataTable>, and configures the following <xref:System.Data.DataColumn> properties if they exist at the data source:</span></span>  
  
-   <xref:System.Data.DataColumn.AllowDBNull%2A>  
  
-   <span data-ttu-id="72192-540"><xref:System.Data.DataColumn.AutoIncrement%2A>.</span><span class="sxs-lookup"><span data-stu-id="72192-540"><xref:System.Data.DataColumn.AutoIncrement%2A>.</span></span> <span data-ttu-id="72192-541">您必須設定<xref:System.Data.DataColumn.AutoIncrementStep%2A>和<xref:System.Data.DataColumn.AutoIncrementSeed%2A>分開。</span><span class="sxs-lookup"><span data-stu-id="72192-541">You must set <xref:System.Data.DataColumn.AutoIncrementStep%2A> and <xref:System.Data.DataColumn.AutoIncrementSeed%2A> separately.</span></span>  
  
-   <xref:System.Data.DataColumn.MaxLength%2A>  
  
-   <xref:System.Data.DataColumn.ReadOnly%2A>  
  
-   <xref:System.Data.DataColumn.Unique%2A>  
  
 <span data-ttu-id="72192-542"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 也會設定<xref:System.Data.DataTable.PrimaryKey%2A>和<xref:System.Data.DataTable.Constraints%2A>屬性根據下列規則：</span><span class="sxs-lookup"><span data-stu-id="72192-542"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> also configures the <xref:System.Data.DataTable.PrimaryKey%2A> and <xref:System.Data.DataTable.Constraints%2A> properties according to the following rules:</span></span>  
  
-   <span data-ttu-id="72192-543">如果所傳回的一或多個主要的索引鍵資料行<xref:System.Data.IDbDataAdapter.SelectCommand%2A>，做為主要索引鍵資料行<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="72192-543">If one or more primary key columns are returned by the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>, they are used as the primary key columns for the <xref:System.Data.DataTable>.</span></span>  
  
-   <span data-ttu-id="72192-544">如果傳回沒有主索引鍵資料行，但唯一資料行，會使用唯一的資料行作為主索引鍵，並僅有，唯一的資料行都不可為 null。</span><span class="sxs-lookup"><span data-stu-id="72192-544">If no primary key columns are returned but unique columns are, the unique columns are used as the primary key if, and only if, all the unique columns are nonnullable.</span></span> <span data-ttu-id="72192-545">如果任何資料行可為 null，<xref:System.Data.UniqueConstraint>新增至<xref:System.Data.ConstraintCollection>，但<xref:System.Data.DataTable.PrimaryKey%2A>屬性未設定。</span><span class="sxs-lookup"><span data-stu-id="72192-545">If any of the columns are nullable, a <xref:System.Data.UniqueConstraint> is added to the <xref:System.Data.ConstraintCollection>, but the <xref:System.Data.DataTable.PrimaryKey%2A> property is not set.</span></span>  
  
-   <span data-ttu-id="72192-546">如果傳回主要索引鍵資料行及唯一的資料行，將主索引鍵資料行做為主要索引鍵資料行<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="72192-546">If both primary key columns and unique columns are returned, the primary key columns are used as the primary key columns for the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="72192-547">請注意，會將主索引鍵和唯一條件約束加入至<xref:System.Data.ConstraintCollection>根據前述規則，但其他條件約束類型不會新增。</span><span class="sxs-lookup"><span data-stu-id="72192-547">Note that primary keys and unique constraints are added to the <xref:System.Data.ConstraintCollection> according to the preceding rules, but other constraint types are not added.</span></span>  
  
 <span data-ttu-id="72192-548">如果唯一的叢集資料行或將 SQL Server 資料表中的資料行上定義索引和叢集索引中的資料行的名稱將會傳回一組個別的資料行上定義主索引鍵條件約束。</span><span class="sxs-lookup"><span data-stu-id="72192-548">If a unique clustered index is defined on a column or columns in a SQL Server table and the primary key constraint is defined on a separate set of columns, then the names of the columns in the clustered index will be returned.</span></span> <span data-ttu-id="72192-549">若要傳回的名稱或主索引鍵資料行的名稱，使用指定的主索引鍵名稱的 SELECT 陳述式中的查詢提示。</span><span class="sxs-lookup"><span data-stu-id="72192-549">To return the name or names of the primary key columns, use a query hint with the SELECT statement that specifies the name of the primary key index.</span></span> <span data-ttu-id="72192-550">如需指定查詢提示的詳細資訊，請參閱[查詢提示 & Amp;#40;transact-SQL&AMP;#41;](https://msdn.microsoft.com/library/ms181714.aspx)。</span><span class="sxs-lookup"><span data-stu-id="72192-550">For more information about specifying query hints, see [Query Hint (Transact-SQL)](https://msdn.microsoft.com/library/ms181714.aspx).</span></span>  
  
 <span data-ttu-id="72192-551">主索引鍵資訊會使用於<xref:System.Data.Common.DbDataAdapter.Fill%2A>來尋找和取代任何符合其索引鍵資料行的資料列。</span><span class="sxs-lookup"><span data-stu-id="72192-551">Primary key information is used during <xref:System.Data.Common.DbDataAdapter.Fill%2A> to find and replace any rows whose key columns match.</span></span> <span data-ttu-id="72192-552">如果這不是所要的行為，使用<xref:System.Data.Common.DbDataAdapter.Fill%2A>但未要求結構描述資訊。</span><span class="sxs-lookup"><span data-stu-id="72192-552">If this is not the desired behavior, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> without requesting schema information.</span></span>  
  
 <span data-ttu-id="72192-553">如果<xref:System.Data.IDataAdapter>遇到重複的資料行在填入<xref:System.Data.DataTable>，它會產生後續的資料行，並使用模式的名稱 」*columnname*1""*columnname*2"，"*columnname*3"，依此類推。</span><span class="sxs-lookup"><span data-stu-id="72192-553">If the <xref:System.Data.IDataAdapter> encounters duplicate columns while populating a <xref:System.Data.DataTable>, it generates names for the subsequent columns, using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="72192-554">如果內送資料包含未命名的資料行，它們會放在<xref:System.Data.DataSet>根據模式"Column1"、"Column2"，依此類推。</span><span class="sxs-lookup"><span data-stu-id="72192-554">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span> <span data-ttu-id="72192-555">當多個結果集加入至<xref:System.Data.DataSet>放置於個別的資料表中每個結果集。</span><span class="sxs-lookup"><span data-stu-id="72192-555">When multiple result sets are added to the <xref:System.Data.DataSet> each result set is placed in a separate table.</span></span> <span data-ttu-id="72192-556">其他結果集的命名方式將整數值附加至指定的資料表名稱 （例如，「 資料表 」、"Table1"、"Table2"，等等。）。</span><span class="sxs-lookup"><span data-stu-id="72192-556">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on.).</span></span> <span data-ttu-id="72192-557">使用資料行和資料表名稱的應用程式應該確定 je v konfliktu 這些命名模式不會發生。</span><span class="sxs-lookup"><span data-stu-id="72192-557">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="72192-558"><xref:System.Data.IDbConnection> Select 命令相關聯的物件必須有效，但它不需要開啟。</span><span class="sxs-lookup"><span data-stu-id="72192-558">The <xref:System.Data.IDbConnection> object associated with the select command must be valid, but it does not need to open.</span></span> <span data-ttu-id="72192-559">如果<xref:System.Data.IDbConnection>關閉之前<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>會呼叫它，它會開啟來擷取資料，然後關閉。</span><span class="sxs-lookup"><span data-stu-id="72192-559">If the <xref:System.Data.IDbConnection> is closed before <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called, it is opened to retrieve data, then closed.</span></span> <span data-ttu-id="72192-560">如果連接已開啟之前<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>是呼叫，它會處於開啟狀態。</span><span class="sxs-lookup"><span data-stu-id="72192-560">If the connection is open before <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called, it is left open.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="72192-561">當處理批次 SQL 陳述式會傳回多個結果，實作<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>的.NET Framework Data Provider for OLE DB 擷取第一個結果的結構描述資訊。</span><span class="sxs-lookup"><span data-stu-id="72192-561">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</span></span> <span data-ttu-id="72192-562">若要擷取多個結果的結構描述資訊，請使用<xref:System.Data.Common.DbDataAdapter.Fill%2A>具有<xref:System.Data.MissingSchemaAction>設定為`AddWithKey`。</span><span class="sxs-lookup"><span data-stu-id="72192-562">To retrieve schema information for multiple results, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> with the <xref:System.Data.MissingSchemaAction> set to `AddWithKey`.</span></span>  
  
 <span data-ttu-id="72192-563">當使用<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>，.NET Framework Data Provider for SQL Server 會將 FOR BROWSE 子句附加至正在執行的陳述式。</span><span class="sxs-lookup"><span data-stu-id="72192-563">When using <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, the .NET Framework Data Provider for SQL Server appends a FOR BROWSE clause to the statement being executed.</span></span> <span data-ttu-id="72192-564">使用者應該留意的潛在的副作用，例如使用 SET FMTONLY ON 陳述式的干擾。</span><span class="sxs-lookup"><span data-stu-id="72192-564">The user should be aware of potential side effects, such as interference with the use of SET FMTONLY ON statements.</span></span> <span data-ttu-id="72192-565">如需詳細資訊，請參閱 [SET FMTONLY (Transact-SQL)](/sql/t-sql/statements/set-fmtonly-transact-sql)。</span><span class="sxs-lookup"><span data-stu-id="72192-565">For more information, see [SET FMTONLY (Transact-SQL)](/sql/t-sql/statements/set-fmtonly-transact-sql).</span></span>
  
   
  
## Examples  
 <span data-ttu-id="72192-566">下列範例會使用衍生的類別中， <xref:System.Data.SqlClient.SqlDataAdapter>，以填滿<xref:System.Data.DataSet>結構描述，且會傳回<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="72192-566">The following example uses the derived class, <xref:System.Data.SqlClient.SqlDataAdapter>, to fill a <xref:System.Data.DataSet> with the schema, and returns a <xref:System.Data.DataSet>.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.FillSchema1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.FillSchema1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.FillSchema1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.FillSchema1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="72192-567">DbProviderFactory</span><span class="sxs-lookup"><span data-stu-id="72192-567">DbProviderFactories</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="72192-568">ADO.NET 概觀</span><span class="sxs-lookup"><span data-stu-id="72192-568">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FillSchema">
      <MemberSignature Language="C#" Value="public System.Data.DataTable FillSchema (System.Data.DataTable dataTable, System.Data.SchemaType schemaType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataTable FillSchema(class System.Data.DataTable dataTable, valuetype System.Data.SchemaType schemaType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataTable ^ FillSchema(System::Data::DataTable ^ dataTable, System::Data::SchemaType schemaType);" />
      <MemberSignature Language="F#" Value="override this.FillSchema : System.Data.DataTable * System.Data.SchemaType -&gt; System.Data.DataTable" Usage="dbDataAdapter.FillSchema (dataTable, schemaType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataTable" Type="System.Data.DataTable" />
        <Parameter Name="schemaType" Type="System.Data.SchemaType" />
      </Parameters>
      <Docs>
        <param name="dataTable"><span data-ttu-id="72192-569">要從資料來源以結構描述填入的 <see cref="T:System.Data.DataTable" />。</span><span class="sxs-lookup"><span data-stu-id="72192-569">The <see cref="T:System.Data.DataTable" /> to be filled with the schema from the data source.</span></span></param>
        <param name="schemaType"><span data-ttu-id="72192-570">其中一個 <see cref="T:System.Data.SchemaType" /> 值。</span><span class="sxs-lookup"><span data-stu-id="72192-570">One of the <see cref="T:System.Data.SchemaType" /> values.</span></span></param>
        <summary><span data-ttu-id="72192-571">根據指定的 <see cref="T:System.Data.SchemaType" />，設定指定的 <see cref="T:System.Data.DataTable" /> 結構描述。</span><span class="sxs-lookup"><span data-stu-id="72192-571">Configures the schema of the specified <see cref="T:System.Data.DataTable" /> based on the specified <see cref="T:System.Data.SchemaType" />.</span></span></summary>
        <returns><span data-ttu-id="72192-572">包含資料來源所傳回結構描述資訊的 <see cref="T:System.Data.DataTable" />。</span><span class="sxs-lookup"><span data-stu-id="72192-572">A <see cref="T:System.Data.DataTable" /> that contains schema information returned from the data source.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72192-573"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A>方法會擷取結構描述從資料來源使用<xref:System.Data.IDbDataAdapter.SelectCommand%2A>。</span><span class="sxs-lookup"><span data-stu-id="72192-573">The <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> method retrieves the schema from the data source using the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>.</span></span> <span data-ttu-id="72192-574">連接物件相關聯<xref:System.Data.IDbDataAdapter.SelectCommand%2A>必須是有效的但它不需要開啟。</span><span class="sxs-lookup"><span data-stu-id="72192-574">The connection object associated with the <xref:System.Data.IDbDataAdapter.SelectCommand%2A> must be valid, but it does not need to be open.</span></span> <span data-ttu-id="72192-575">如果連線已關閉之前<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>會呼叫它，它會開啟來擷取資料，然後關閉。</span><span class="sxs-lookup"><span data-stu-id="72192-575">If the connection is closed before <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called, it is opened to retrieve data, then closed.</span></span> <span data-ttu-id="72192-576">如果連接已開啟之前<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>是呼叫，它會保持開啟狀態。</span><span class="sxs-lookup"><span data-stu-id="72192-576">If the connection is open before <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="72192-577">A<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>作業會傳回<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="72192-577">A <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> operation returns a <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="72192-578">接著它會加入至資料行<xref:System.Data.DataColumnCollection>的<xref:System.Data.DataTable>，並設定下列<xref:System.Data.DataColumn>如果它們存在於資料來源的屬性：</span><span class="sxs-lookup"><span data-stu-id="72192-578">It then adds columns to the <xref:System.Data.DataColumnCollection> of the <xref:System.Data.DataTable>, and configures the following <xref:System.Data.DataColumn> properties if they exist at the data source:</span></span>  
  
-   <xref:System.Data.DataColumn.AllowDBNull%2A>  
  
-   <span data-ttu-id="72192-579"><xref:System.Data.DataColumn.AutoIncrement%2A>.</span><span class="sxs-lookup"><span data-stu-id="72192-579"><xref:System.Data.DataColumn.AutoIncrement%2A>.</span></span> <span data-ttu-id="72192-580">您必須設定<xref:System.Data.DataColumn.AutoIncrementStep%2A>和<xref:System.Data.DataColumn.AutoIncrementSeed%2A>分開。</span><span class="sxs-lookup"><span data-stu-id="72192-580">You must set <xref:System.Data.DataColumn.AutoIncrementStep%2A> and <xref:System.Data.DataColumn.AutoIncrementSeed%2A> separately.</span></span>  
  
-   <xref:System.Data.DataColumn.MaxLength%2A>  
  
-   <xref:System.Data.DataColumn.ReadOnly%2A>  
  
-   <xref:System.Data.DataColumn.Unique%2A>  
  
 <span data-ttu-id="72192-581"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 也會設定<xref:System.Data.DataTable.PrimaryKey%2A>和<xref:System.Data.DataTable.Constraints%2A>屬性根據下列規則：</span><span class="sxs-lookup"><span data-stu-id="72192-581"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> also configures the <xref:System.Data.DataTable.PrimaryKey%2A> and <xref:System.Data.DataTable.Constraints%2A> properties according to the following rules:</span></span>  
  
-   <span data-ttu-id="72192-582">如果<xref:System.Data.DataTable.PrimaryKey%2A>具有已定義`DataTable`，或`DataTable`包含的資料，`PrimaryKey`將不會設定屬性。</span><span class="sxs-lookup"><span data-stu-id="72192-582">If a <xref:System.Data.DataTable.PrimaryKey%2A> has already been defined for the `DataTable`, or the `DataTable` contains data, the `PrimaryKey` property will not be set.</span></span>  
  
-   <span data-ttu-id="72192-583">如果所傳回的一或多個主要的索引鍵資料行<xref:System.Data.IDbDataAdapter.SelectCommand%2A>，做為主要索引鍵資料行`DataTable`。</span><span class="sxs-lookup"><span data-stu-id="72192-583">If one or more primary key columns are returned by the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>, they are used as the primary key columns for the `DataTable`.</span></span>  
  
-   <span data-ttu-id="72192-584">如果傳回沒有主索引鍵資料行，但唯一資料行，會使用唯一的資料行作為主索引鍵，並僅有，唯一的資料行都不可為 null。</span><span class="sxs-lookup"><span data-stu-id="72192-584">If no primary key columns are returned but unique columns are, the unique columns are used as the primary key if, and only if, all the unique columns are nonnullable.</span></span> <span data-ttu-id="72192-585">如果任何資料行可為 null，<xref:System.Data.UniqueConstraint>新增至<xref:System.Data.ConstraintCollection>，但`PrimaryKey`屬性未設定。</span><span class="sxs-lookup"><span data-stu-id="72192-585">If any of the columns are nullable, a <xref:System.Data.UniqueConstraint> is added to the <xref:System.Data.ConstraintCollection>, but the `PrimaryKey` property is not set.</span></span>  
  
-   <span data-ttu-id="72192-586">如果傳回主要索引鍵資料行及唯一的資料行，將主索引鍵資料行做為主要索引鍵資料行`DataTable`。</span><span class="sxs-lookup"><span data-stu-id="72192-586">If both primary key columns and unique columns are returned, the primary key columns are used as the primary key columns for the `DataTable`.</span></span>  
  
 <span data-ttu-id="72192-587">請注意，會將主索引鍵和唯一條件約束加入至<xref:System.Data.ConstraintCollection>根據前述規則，但其他條件約束類型不會新增。</span><span class="sxs-lookup"><span data-stu-id="72192-587">Note that primary keys and unique constraints are added to the <xref:System.Data.ConstraintCollection> according to the preceding rules, but other constraint types are not added.</span></span> <span data-ttu-id="72192-588">此程序可能需要數個來回伺服器。</span><span class="sxs-lookup"><span data-stu-id="72192-588">This process may require several round-trips to the server.</span></span>  
  
 <span data-ttu-id="72192-589">如果唯一的叢集資料行或將 SQL Server 資料表中的資料行上定義索引和叢集索引中的資料行的名稱將會傳回一組個別的資料行上定義主索引鍵條件約束。</span><span class="sxs-lookup"><span data-stu-id="72192-589">If a unique clustered index is defined on a column or columns in a SQL Server table and the primary key constraint is defined on a separate set of columns, then the names of the columns in the clustered index will be returned.</span></span> <span data-ttu-id="72192-590">若要傳回的名稱或主索引鍵資料行的名稱，使用指定的主索引鍵名稱的 SELECT 陳述式中的查詢提示。</span><span class="sxs-lookup"><span data-stu-id="72192-590">To return the name or names of the primary key columns, use a query hint with the SELECT statement that specifies the name of the primary key index.</span></span> <span data-ttu-id="72192-591">如需指定查詢提示的詳細資訊，請參閱[查詢提示 & Amp;#40;transact-SQL&AMP;#41;](https://msdn.microsoft.com/library/ms181714.aspx)。</span><span class="sxs-lookup"><span data-stu-id="72192-591">For more information about specifying query hints, see [Query Hint (Transact-SQL)](https://msdn.microsoft.com/library/ms181714.aspx).</span></span>  
  
 <span data-ttu-id="72192-592">如果<xref:System.Data.Common.DbDataAdapter>遇到重複的資料行在填入<xref:System.Data.DataTable>，它會產生後續的資料行，並使用模式的名稱 」*columnname*1""*columnname*2"，"*columnname*3"，依此類推。</span><span class="sxs-lookup"><span data-stu-id="72192-592">If the <xref:System.Data.Common.DbDataAdapter> encounters duplicate columns while populating a <xref:System.Data.DataTable>, it generates names for the subsequent columns, using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="72192-593">如果內送資料包含未命名的資料行，它們會放在<xref:System.Data.DataSet>根據模式"Column1"、"Column2"，依此類推。</span><span class="sxs-lookup"><span data-stu-id="72192-593">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span> <span data-ttu-id="72192-594">當多個結果集加入至<xref:System.Data.DataSet>放置於個別的資料表中每個結果集。</span><span class="sxs-lookup"><span data-stu-id="72192-594">When multiple result sets are added to the <xref:System.Data.DataSet> each result set is placed in a separate table.</span></span> <span data-ttu-id="72192-595">其他結果集的命名方式將整數值附加至指定的資料表名稱 （例如，「 資料表 」、"Table1"、"Table2"，等等。）。</span><span class="sxs-lookup"><span data-stu-id="72192-595">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on.).</span></span> <span data-ttu-id="72192-596">使用資料行和資料表名稱的應用程式應該確定 je v konfliktu 這些命名模式不會發生。</span><span class="sxs-lookup"><span data-stu-id="72192-596">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="72192-597"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 不會傳回任何資料列。</span><span class="sxs-lookup"><span data-stu-id="72192-597"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> does not return any rows.</span></span> <span data-ttu-id="72192-598">使用<xref:System.Data.Common.DbDataAdapter.Fill%2A>方法，以將資料列加入<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="72192-598">Use the <xref:System.Data.Common.DbDataAdapter.Fill%2A> method to add rows to a <xref:System.Data.DataTable>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="72192-599">當處理批次 SQL 陳述式會傳回多個結果，實作<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>的.NET Framework Data Provider for OLE DB 擷取第一個結果的結構描述資訊。</span><span class="sxs-lookup"><span data-stu-id="72192-599">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</span></span> <span data-ttu-id="72192-600">若要擷取多個結果的結構描述資訊，請使用<xref:System.Data.Common.DbDataAdapter.Fill%2A>具有<xref:System.Data.MissingSchemaAction>設定為`AddWithKey`。</span><span class="sxs-lookup"><span data-stu-id="72192-600">To retrieve schema information for multiple results, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> with the <xref:System.Data.MissingSchemaAction> set to `AddWithKey`.</span></span>  
  
 <span data-ttu-id="72192-601">當使用<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>，.NET Framework Data Provider for SQL Server 會將 FOR BROWSE 子句附加至正在執行的陳述式。</span><span class="sxs-lookup"><span data-stu-id="72192-601">When using <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, the .NET Framework Data Provider for SQL Server appends a FOR BROWSE clause to the statement being executed.</span></span> <span data-ttu-id="72192-602">使用者應該留意的潛在的副作用，例如使用 SET FMTONLY ON 陳述式的干擾。</span><span class="sxs-lookup"><span data-stu-id="72192-602">The user should be aware of potential side effects, such as interference with the use of SET FMTONLY ON statements.</span></span> <span data-ttu-id="72192-603">如需詳細資訊，請參閱 [SET FMTONLY (Transact-SQL)](/sql/t-sql/statements/set-fmtonly-transact-sql)。</span><span class="sxs-lookup"><span data-stu-id="72192-603">For more information, see [SET FMTONLY (Transact-SQL)](/sql/t-sql/statements/set-fmtonly-transact-sql).</span></span>
  
   
  
## Examples  
 <span data-ttu-id="72192-604">下列範例會使用衍生的類別中， <xref:System.Data.SqlClient.SqlDataAdapter>，以填滿<xref:System.Data.DataSet>結構描述，且會傳回<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="72192-604">The following example uses the derived class, <xref:System.Data.SqlClient.SqlDataAdapter>, to fill a <xref:System.Data.DataSet> with the schema, and returns a <xref:System.Data.DataTable>.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.FillSchema3#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.FillSchema3/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.FillSchema3#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.FillSchema3/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="72192-605">DbProviderFactory</span><span class="sxs-lookup"><span data-stu-id="72192-605">DbProviderFactories</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="72192-606">ADO.NET 概觀</span><span class="sxs-lookup"><span data-stu-id="72192-606">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FillSchema">
      <MemberSignature Language="C#" Value="public System.Data.DataTable[] FillSchema (System.Data.DataSet dataSet, System.Data.SchemaType schemaType, string srcTable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataTable[] FillSchema(class System.Data.DataSet dataSet, valuetype System.Data.SchemaType schemaType, string srcTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataTable ^&gt; ^ FillSchema(System::Data::DataSet ^ dataSet, System::Data::SchemaType schemaType, System::String ^ srcTable);" />
      <MemberSignature Language="F#" Value="override this.FillSchema : System.Data.DataSet * System.Data.SchemaType * string -&gt; System.Data.DataTable[]" Usage="dbDataAdapter.FillSchema (dataSet, schemaType, srcTable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
        <Parameter Name="schemaType" Type="System.Data.SchemaType" />
        <Parameter Name="srcTable" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dataSet"><span data-ttu-id="72192-607">用以插入結構描述的 <see cref="T:System.Data.DataSet" />。</span><span class="sxs-lookup"><span data-stu-id="72192-607">A <see cref="T:System.Data.DataSet" /> to insert the schema in.</span></span></param>
        <param name="schemaType"><span data-ttu-id="72192-608">其中一個 <see cref="T:System.Data.SchemaType" /> 值，指定如何插入結構描述。</span><span class="sxs-lookup"><span data-stu-id="72192-608">One of the <see cref="T:System.Data.SchemaType" /> values that specify how to insert the schema.</span></span></param>
        <param name="srcTable"><span data-ttu-id="72192-609">用於資料表對應的來源資料表名稱。</span><span class="sxs-lookup"><span data-stu-id="72192-609">The name of the source table to use for table mapping.</span></span></param>
        <summary><span data-ttu-id="72192-610">將 <see cref="T:System.Data.DataTable" /> 加入指定的 <see cref="T:System.Data.DataSet" />，並設定結構描述，使其符合以指定 <see cref="T:System.Data.SchemaType" /> 和 <see cref="T:System.Data.DataTable" /> 為基礎的資料來源中結構描述。</span><span class="sxs-lookup"><span data-stu-id="72192-610">Adds a <see cref="T:System.Data.DataTable" /> to the specified <see cref="T:System.Data.DataSet" /> and configures the schema to match that in the data source based upon the specified <see cref="T:System.Data.SchemaType" /> and <see cref="T:System.Data.DataTable" />.</span></span></summary>
        <returns><span data-ttu-id="72192-611">加入 <see cref="T:System.Data.DataSet" /> 之 <see cref="T:System.Data.DataTable" /> 物件集合的參考。</span><span class="sxs-lookup"><span data-stu-id="72192-611">A reference to a collection of <see cref="T:System.Data.DataTable" /> objects that were added to the <see cref="T:System.Data.DataSet" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72192-612">這個方法會擷取從資料來源使用的結構描述資訊<xref:System.Data.IDbDataAdapter.SelectCommand%2A>。</span><span class="sxs-lookup"><span data-stu-id="72192-612">This method retrieves the schema information from the data source using the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>.</span></span>  
  
 <span data-ttu-id="72192-613">A<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>作業會將加入<xref:System.Data.DataTable>到目的地<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="72192-613">A <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> operation adds a <xref:System.Data.DataTable> to the destination <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="72192-614">接著它會加入至資料行<xref:System.Data.DataColumnCollection>的<xref:System.Data.DataTable>，並設定下列<xref:System.Data.DataColumn>如果它們存在於資料來源的屬性：</span><span class="sxs-lookup"><span data-stu-id="72192-614">It then adds columns to the <xref:System.Data.DataColumnCollection> of the <xref:System.Data.DataTable>, and configures the following <xref:System.Data.DataColumn> properties if they exist at the data source:</span></span>  
  
-   <xref:System.Data.DataColumn.AllowDBNull%2A>  
  
-   <span data-ttu-id="72192-615"><xref:System.Data.DataColumn.AutoIncrement%2A>.</span><span class="sxs-lookup"><span data-stu-id="72192-615"><xref:System.Data.DataColumn.AutoIncrement%2A>.</span></span> <span data-ttu-id="72192-616">您必須設定<xref:System.Data.DataColumn.AutoIncrementStep%2A>和<xref:System.Data.DataColumn.AutoIncrementSeed%2A>分開。</span><span class="sxs-lookup"><span data-stu-id="72192-616">You must set <xref:System.Data.DataColumn.AutoIncrementStep%2A> and <xref:System.Data.DataColumn.AutoIncrementSeed%2A> separately.</span></span>  
  
-   <xref:System.Data.DataColumn.MaxLength%2A>  
  
-   <xref:System.Data.DataColumn.ReadOnly%2A>  
  
-   <xref:System.Data.DataColumn.Unique%2A>  
  
 <span data-ttu-id="72192-617"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 也會設定<xref:System.Data.DataTable.PrimaryKey%2A>和<xref:System.Data.DataTable.Constraints%2A>屬性根據下列規則：</span><span class="sxs-lookup"><span data-stu-id="72192-617"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> also configures the <xref:System.Data.DataTable.PrimaryKey%2A> and <xref:System.Data.DataTable.Constraints%2A> properties according to the following rules:</span></span>  
  
-   <span data-ttu-id="72192-618">如果所傳回的一或多個主要的索引鍵資料行<xref:System.Data.IDbDataAdapter.SelectCommand%2A>，做為主要索引鍵資料行<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="72192-618">If one or more primary key columns are returned by the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>, they are used as the primary key columns for the <xref:System.Data.DataTable>.</span></span>  
  
-   <span data-ttu-id="72192-619">如果傳回沒有主索引鍵資料行，但唯一資料行，會使用唯一的資料行作為主索引鍵，並僅有，唯一的資料行都不可為 null。</span><span class="sxs-lookup"><span data-stu-id="72192-619">If no primary key columns are returned but unique columns are, the unique columns are used as the primary key if, and only if, all the unique columns are nonnullable.</span></span> <span data-ttu-id="72192-620">如果任何資料行可為 null，<xref:System.Data.UniqueConstraint>新增至<xref:System.Data.ConstraintCollection>，但<xref:System.Data.DataTable.PrimaryKey%2A>屬性未設定。</span><span class="sxs-lookup"><span data-stu-id="72192-620">If any of the columns are nullable, a <xref:System.Data.UniqueConstraint> is added to the <xref:System.Data.ConstraintCollection>, but the <xref:System.Data.DataTable.PrimaryKey%2A> property is not set.</span></span>  
  
-   <span data-ttu-id="72192-621">如果傳回主要索引鍵資料行及唯一的資料行，將主索引鍵資料行做為主要索引鍵資料行<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="72192-621">If both primary key columns and unique columns are returned, the primary key columns are used as the primary key columns for the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="72192-622">請注意，會將主索引鍵和唯一條件約束加入至<xref:System.Data.ConstraintCollection>根據前述規則，但其他條件約束類型不會新增。</span><span class="sxs-lookup"><span data-stu-id="72192-622">Note that primary keys and unique constraints are added to the <xref:System.Data.ConstraintCollection> according to the preceding rules, but other constraint types are not added.</span></span>  
  
 <span data-ttu-id="72192-623">如果唯一的叢集資料行或將 SQL Server 資料表中的資料行上定義索引和叢集索引中的資料行的名稱將會傳回一組個別的資料行上定義主索引鍵條件約束。</span><span class="sxs-lookup"><span data-stu-id="72192-623">If a unique clustered index is defined on a column or columns in a SQL Server table and the primary key constraint is defined on a separate set of columns, then the names of the columns in the clustered index will be returned.</span></span> <span data-ttu-id="72192-624">若要傳回的名稱或主索引鍵資料行的名稱，使用指定的主索引鍵名稱的 SELECT 陳述式中的查詢提示。</span><span class="sxs-lookup"><span data-stu-id="72192-624">To return the name or names of the primary key columns, use a query hint with the SELECT statement that specifies the name of the primary key index.</span></span> <span data-ttu-id="72192-625">如需指定查詢提示的詳細資訊，請參閱[查詢提示 & Amp;#40;transact-SQL&AMP;#41;](https://msdn.microsoft.com/library/ms181714.aspx)。</span><span class="sxs-lookup"><span data-stu-id="72192-625">For more information about specifying query hints, see [Query Hint (Transact-SQL)](https://msdn.microsoft.com/library/ms181714.aspx).</span></span>  
  
 <span data-ttu-id="72192-626">主索引鍵資訊會使用於<xref:System.Data.Common.DbDataAdapter.Fill%2A>來尋找和取代任何符合其索引鍵資料行的資料列。</span><span class="sxs-lookup"><span data-stu-id="72192-626">Primary key information is used during <xref:System.Data.Common.DbDataAdapter.Fill%2A> to find and replace any rows whose key columns match.</span></span> <span data-ttu-id="72192-627">如果這不是所要的行為，使用<xref:System.Data.Common.DbDataAdapter.Fill%2A>但未要求結構描述資訊。</span><span class="sxs-lookup"><span data-stu-id="72192-627">If this is not the desired behavior, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> without requesting schema information.</span></span>  
  
 <span data-ttu-id="72192-628">如果<xref:System.Data.Common.DbDataAdapter>遇到重複的資料行在填入<xref:System.Data.DataTable>，它會產生後續的資料行，並使用模式的名稱 」*columnname*1""*columnname*2"，"*columnname*3"，依此類推。</span><span class="sxs-lookup"><span data-stu-id="72192-628">If the <xref:System.Data.Common.DbDataAdapter> encounters duplicate columns while populating a <xref:System.Data.DataTable>, it generates names for the subsequent columns, using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="72192-629">如果內送資料包含未命名的資料行，它們會放在<xref:System.Data.DataSet>根據模式"Column1"、"Column2"，依此類推。</span><span class="sxs-lookup"><span data-stu-id="72192-629">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span> <span data-ttu-id="72192-630">當多個結果集加入至<xref:System.Data.DataSet>放置於個別的資料表中每個結果集。</span><span class="sxs-lookup"><span data-stu-id="72192-630">When multiple result sets are added to the <xref:System.Data.DataSet> each result set is placed in a separate table.</span></span> <span data-ttu-id="72192-631">其他結果集的命名方式將整數值附加至指定的資料表名稱 （例如，「 資料表 」、"Table1"、"Table2"，等等。）。</span><span class="sxs-lookup"><span data-stu-id="72192-631">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on.).</span></span> <span data-ttu-id="72192-632">使用資料行和資料表名稱的應用程式應該確定 je v konfliktu 這些命名模式不會發生。</span><span class="sxs-lookup"><span data-stu-id="72192-632">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="72192-633"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A>方法支援案例所在<xref:System.Data.DataSet>包含多個<xref:System.Data.DataTable>名稱只有大小寫不同的物件。</span><span class="sxs-lookup"><span data-stu-id="72192-633">The <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> method supports scenarios where the <xref:System.Data.DataSet> contains multiple <xref:System.Data.DataTable> objects whose names differ only by case.</span></span> <span data-ttu-id="72192-634">在這種情況下，<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>執行區分大小寫的比較，來尋找對應的資料表，並建立新的資料表，如果沒有完全相符項目存在。</span><span class="sxs-lookup"><span data-stu-id="72192-634">In such situations, <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> performs a case-sensitive comparison to find the corresponding table, and creates a new table if no exact match exists.</span></span> <span data-ttu-id="72192-635">下列 C# 程式碼說明此行為。</span><span class="sxs-lookup"><span data-stu-id="72192-635">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
dataset.Tables.Add("AAA");  
adapter.FillSchema(dataset, "aaa"); // Fills the schema of "aaa", which already exists in the DataSet.  
adapter.FillSchema(dataset, "Aaa"); // Adds a new table called "Aaa".  
```  
  
 <span data-ttu-id="72192-636">如果<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>呼叫時，<xref:System.Data.DataSet>只會包含一個<xref:System.Data.DataTable>名稱只有大小寫不同，，<xref:System.Data.DataTable>會更新。</span><span class="sxs-lookup"><span data-stu-id="72192-636">If <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called and the <xref:System.Data.DataSet> contains only one <xref:System.Data.DataTable> whose name differs only by case, that <xref:System.Data.DataTable> is updated.</span></span> <span data-ttu-id="72192-637">在此案例中，比較不區分大小寫。</span><span class="sxs-lookup"><span data-stu-id="72192-637">In this scenario, the comparison is case insensitive.</span></span> <span data-ttu-id="72192-638">下列 C# 程式碼說明此行為。</span><span class="sxs-lookup"><span data-stu-id="72192-638">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
adapter.FillSchema(dataset, "AAA"); // Fills the schema of table "aaa" because only one similarly named table is in the DataSet.  
```  
  
 <span data-ttu-id="72192-639"><xref:System.Data.IDbConnection> Select 命令相關聯的物件必須有效，但它不需要開啟。</span><span class="sxs-lookup"><span data-stu-id="72192-639">The <xref:System.Data.IDbConnection> object associated with the select command must be valid, but it does not need to open.</span></span> <span data-ttu-id="72192-640">如果<xref:System.Data.IDbConnection>關閉之前<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>會呼叫它，它會開啟來擷取資料，然後關閉。</span><span class="sxs-lookup"><span data-stu-id="72192-640">If the <xref:System.Data.IDbConnection> is closed before <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called, it is opened to retrieve data, then closed.</span></span> <span data-ttu-id="72192-641">如果連接已開啟之前<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>是呼叫，它會處於開啟狀態。</span><span class="sxs-lookup"><span data-stu-id="72192-641">If the connection is open before <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called, it is left open.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="72192-642">當處理批次 SQL 陳述式會傳回多個結果，實作<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>的.NET Framework Data Provider for OLE DB 擷取第一個結果的結構描述資訊。</span><span class="sxs-lookup"><span data-stu-id="72192-642">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</span></span> <span data-ttu-id="72192-643">若要擷取多個結果的結構描述資訊，請使用<xref:System.Data.Common.DbDataAdapter.Fill%2A>具有<xref:System.Data.MissingSchemaAction>設定為`AddWithKey`。</span><span class="sxs-lookup"><span data-stu-id="72192-643">To retrieve schema information for multiple results, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> with the <xref:System.Data.MissingSchemaAction> set to `AddWithKey`.</span></span>  
  
 <span data-ttu-id="72192-644">當使用<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>，.NET Framework Data Provider for SQL Server 會將 FOR BROWSE 子句附加至正在執行的陳述式。</span><span class="sxs-lookup"><span data-stu-id="72192-644">When using <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, the .NET Framework Data Provider for SQL Server appends a FOR BROWSE clause to the statement being executed.</span></span> <span data-ttu-id="72192-645">使用者應該留意的潛在的副作用，例如使用 SET FMTONLY ON 陳述式的干擾。</span><span class="sxs-lookup"><span data-stu-id="72192-645">The user should be aware of potential side effects, such as interference with the use of SET FMTONLY ON statements.</span></span> <span data-ttu-id="72192-646">如需詳細資訊，請參閱 [SET FMTONLY (Transact-SQL)](/sql/t-sql/statements/set-fmtonly-transact-sql)。</span><span class="sxs-lookup"><span data-stu-id="72192-646">For more information, see [SET FMTONLY (Transact-SQL)](/sql/t-sql/statements/set-fmtonly-transact-sql).</span></span>
  
   
  
## Examples  
 <span data-ttu-id="72192-647">下列範例會使用衍生的類別中， <xref:System.Data.SqlClient.SqlDataAdapter>，以填滿<xref:System.Data.DataSet>結構描述，且會傳回<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="72192-647">The following example uses the derived class, <xref:System.Data.SqlClient.SqlDataAdapter>, to fill a <xref:System.Data.DataSet> with the schema, and returns a <xref:System.Data.DataSet>.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.FillSchema2 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.FillSchema2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.FillSchema2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.FillSchema2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="72192-648">找不到要從中取得結構描述的來源資料表。</span><span class="sxs-lookup"><span data-stu-id="72192-648">A source table from which to get the schema could not be found.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="72192-649">DbProviderFactory</span><span class="sxs-lookup"><span data-stu-id="72192-649">DbProviderFactories</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="72192-650">ADO.NET 概觀</span><span class="sxs-lookup"><span data-stu-id="72192-650">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FillSchema">
      <MemberSignature Language="C#" Value="protected virtual System.Data.DataTable FillSchema (System.Data.DataTable dataTable, System.Data.SchemaType schemaType, System.Data.IDbCommand command, System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.DataTable FillSchema(class System.Data.DataTable dataTable, valuetype System.Data.SchemaType schemaType, class System.Data.IDbCommand command, valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDbCommand,System.Data.CommandBehavior)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Data::DataTable ^ FillSchema(System::Data::DataTable ^ dataTable, System::Data::SchemaType schemaType, System::Data::IDbCommand ^ command, System::Data::CommandBehavior behavior);" />
      <MemberSignature Language="F#" Value="override this.FillSchema : System.Data.DataTable * System.Data.SchemaType * System.Data.IDbCommand * System.Data.CommandBehavior -&gt; System.Data.DataTable" Usage="dbDataAdapter.FillSchema (dataTable, schemaType, command, behavior)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataTable" Type="System.Data.DataTable" />
        <Parameter Name="schemaType" Type="System.Data.SchemaType" />
        <Parameter Name="command" Type="System.Data.IDbCommand" />
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" />
      </Parameters>
      <Docs>
        <param name="dataTable"><span data-ttu-id="72192-651">要從資料來源以結構描述填入的 <see cref="T:System.Data.DataTable" />。</span><span class="sxs-lookup"><span data-stu-id="72192-651">The <see cref="T:System.Data.DataTable" /> to be filled with the schema from the data source.</span></span></param>
        <param name="schemaType"><span data-ttu-id="72192-652">其中一個 <see cref="T:System.Data.SchemaType" /> 值。</span><span class="sxs-lookup"><span data-stu-id="72192-652">One of the <see cref="T:System.Data.SchemaType" /> values.</span></span></param>
        <param name="command"><span data-ttu-id="72192-653">SQL SELECT 陳述式用於從資料來源擷取資料列。</span><span class="sxs-lookup"><span data-stu-id="72192-653">The SQL SELECT statement used to retrieve rows from the data source.</span></span></param>
        <param name="behavior"><span data-ttu-id="72192-654">其中一個 <see cref="T:System.Data.CommandBehavior" /> 值。</span><span class="sxs-lookup"><span data-stu-id="72192-654">One of the <see cref="T:System.Data.CommandBehavior" /> values.</span></span></param>
        <summary><span data-ttu-id="72192-655">設定指定的結構描述<see cref="T:System.Data.DataTable" />根據指定<see cref="T:System.Data.SchemaType" />、 命令字串和<see cref="T:System.Data.CommandBehavior" />值。</span><span class="sxs-lookup"><span data-stu-id="72192-655">Configures the schema of the specified <see cref="T:System.Data.DataTable" /> based on the specified <see cref="T:System.Data.SchemaType" />, command string, and <see cref="T:System.Data.CommandBehavior" /> values.</span></span></summary>
        <returns><span data-ttu-id="72192-656">A<see cref="T:System.Data.DataTable" />從資料來源傳回的物件，包含結構描述資訊。</span><span class="sxs-lookup"><span data-stu-id="72192-656">A of <see cref="T:System.Data.DataTable" /> object that contains schema information returned from the data source.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72192-657"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A>方法會擷取結構描述從資料來源使用<xref:System.Data.IDbDataAdapter.SelectCommand%2A>。</span><span class="sxs-lookup"><span data-stu-id="72192-657">The <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> method retrieves the schema from the data source using the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>.</span></span> <span data-ttu-id="72192-658">連接物件相關聯<xref:System.Data.IDbDataAdapter.SelectCommand%2A>必須是有效的但它不需要開啟。</span><span class="sxs-lookup"><span data-stu-id="72192-658">The connection object associated with the <xref:System.Data.IDbDataAdapter.SelectCommand%2A> must be valid, but it does not need to be open.</span></span> <span data-ttu-id="72192-659">如果連線已關閉之前<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>會呼叫它，它會開啟來擷取資料，然後關閉。</span><span class="sxs-lookup"><span data-stu-id="72192-659">If the connection is closed before <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called, it is opened to retrieve data, then closed.</span></span> <span data-ttu-id="72192-660">如果連接已開啟之前<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>是呼叫，它會保持開啟狀態。</span><span class="sxs-lookup"><span data-stu-id="72192-660">If the connection is open before <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="72192-661">A<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>作業會將加入<xref:System.Data.DataTable>到目的地<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="72192-661">A <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> operation adds a <xref:System.Data.DataTable> to the destination <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="72192-662">接著它會加入至資料行<xref:System.Data.DataColumnCollection>的<xref:System.Data.DataTable>，並設定下列<xref:System.Data.DataColumn>如果它們存在於資料來源的屬性：</span><span class="sxs-lookup"><span data-stu-id="72192-662">It then adds columns to the <xref:System.Data.DataColumnCollection> of the <xref:System.Data.DataTable>, and configures the following <xref:System.Data.DataColumn> properties if they exist at the data source:</span></span>  
  
-   <xref:System.Data.DataColumn.AllowDBNull%2A>  
  
-   <span data-ttu-id="72192-663"><xref:System.Data.DataColumn.AutoIncrement%2A>.</span><span class="sxs-lookup"><span data-stu-id="72192-663"><xref:System.Data.DataColumn.AutoIncrement%2A>.</span></span> <span data-ttu-id="72192-664">您必須設定<xref:System.Data.DataColumn.AutoIncrementStep%2A>和<xref:System.Data.DataColumn.AutoIncrementSeed%2A>分開。</span><span class="sxs-lookup"><span data-stu-id="72192-664">You must set <xref:System.Data.DataColumn.AutoIncrementStep%2A> and <xref:System.Data.DataColumn.AutoIncrementSeed%2A> separately.</span></span>  
  
-   <xref:System.Data.DataColumn.MaxLength%2A>  
  
-   <xref:System.Data.DataColumn.ReadOnly%2A>  
  
-   <xref:System.Data.DataColumn.Unique%2A>  
  
 <span data-ttu-id="72192-665"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 也會設定<xref:System.Data.DataTable.PrimaryKey%2A>和<xref:System.Data.DataTable.Constraints%2A>屬性根據下列規則：</span><span class="sxs-lookup"><span data-stu-id="72192-665"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> also configures the <xref:System.Data.DataTable.PrimaryKey%2A> and <xref:System.Data.DataTable.Constraints%2A> properties according to the following rules:</span></span>  
  
-   <span data-ttu-id="72192-666">如果所傳回的一或多個主要的索引鍵資料行<xref:System.Data.IDbDataAdapter.SelectCommand%2A>，做為主要索引鍵資料行<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="72192-666">If one or more primary key columns are returned by the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>, they are used as the primary key columns for the <xref:System.Data.DataTable>.</span></span>  
  
-   <span data-ttu-id="72192-667">如果傳回沒有主索引鍵資料行，但唯一資料行，會使用唯一的資料行作為主索引鍵，並僅有，唯一的資料行都不可為 null。</span><span class="sxs-lookup"><span data-stu-id="72192-667">If no primary key columns are returned but unique columns are, the unique columns are used as the primary key if, and only if, all the unique columns are nonnullable.</span></span> <span data-ttu-id="72192-668">如果任何資料行可為 null，<xref:System.Data.UniqueConstraint>新增至<xref:System.Data.ConstraintCollection>，但<xref:System.Data.DataTable.PrimaryKey%2A>屬性未設定。</span><span class="sxs-lookup"><span data-stu-id="72192-668">If any of the columns are nullable, a <xref:System.Data.UniqueConstraint> is added to the <xref:System.Data.ConstraintCollection>, but the <xref:System.Data.DataTable.PrimaryKey%2A> property is not set.</span></span>  
  
-   <span data-ttu-id="72192-669">如果傳回主要索引鍵資料行及唯一的資料行，將主索引鍵資料行做為主要索引鍵資料行<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="72192-669">If both primary key columns and unique columns are returned, the primary key columns are used as the primary key columns for the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="72192-670">請注意，會將主索引鍵和唯一條件約束加入至<xref:System.Data.ConstraintCollection>根據前述規則，但其他條件約束類型不會新增。</span><span class="sxs-lookup"><span data-stu-id="72192-670">Note that primary keys and unique constraints are added to the <xref:System.Data.ConstraintCollection> according to the preceding rules, but other constraint types are not added.</span></span>  
  
 <span data-ttu-id="72192-671">如果唯一的叢集資料行或將 SQL Server 資料表中的資料行上定義索引和叢集索引中的資料行的名稱將會傳回一組個別的資料行上定義主索引鍵條件約束。</span><span class="sxs-lookup"><span data-stu-id="72192-671">If a unique clustered index is defined on a column or columns in a SQL Server table and the primary key constraint is defined on a separate set of columns, then the names of the columns in the clustered index will be returned.</span></span> <span data-ttu-id="72192-672">若要傳回的名稱或主索引鍵資料行的名稱，使用指定的主索引鍵名稱的 SELECT 陳述式中的查詢提示。</span><span class="sxs-lookup"><span data-stu-id="72192-672">To return the name or names of the primary key columns, use a query hint with the SELECT statement that specifies the name of the primary key index.</span></span> <span data-ttu-id="72192-673">如需指定查詢提示的詳細資訊，請參閱[查詢提示 & Amp;#40;transact-SQL&AMP;#41;](https://msdn.microsoft.com/library/ms181714.aspx)。</span><span class="sxs-lookup"><span data-stu-id="72192-673">For more information about specifying query hints, see [Query Hint (Transact-SQL)](https://msdn.microsoft.com/library/ms181714.aspx).</span></span>  
  
 <span data-ttu-id="72192-674">如果<xref:System.Data.IDataAdapter>遇到重複的資料行在填入<xref:System.Data.DataTable>，它會產生後續的資料行，並使用模式的名稱 」*columnname*1""*columnname*2"，"*columnname*3"，依此類推。</span><span class="sxs-lookup"><span data-stu-id="72192-674">If the <xref:System.Data.IDataAdapter> encounters duplicate columns while populating a <xref:System.Data.DataTable>, it generates names for the subsequent columns, using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="72192-675">如果內送資料包含未命名的資料行，它們會放在<xref:System.Data.DataSet>根據模式"Column1"、"Column2"，依此類推。</span><span class="sxs-lookup"><span data-stu-id="72192-675">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span> <span data-ttu-id="72192-676">當多個結果集加入至<xref:System.Data.DataSet>放置於個別的資料表中每個結果集。</span><span class="sxs-lookup"><span data-stu-id="72192-676">When multiple result sets are added to the <xref:System.Data.DataSet> each result set is placed in a separate table.</span></span> <span data-ttu-id="72192-677">其他結果集的命名方式將整數值附加至指定的資料表名稱 （例如，「 資料表 」、"Table1"、"Table2"，等等。）。</span><span class="sxs-lookup"><span data-stu-id="72192-677">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on.).</span></span> <span data-ttu-id="72192-678">使用資料行和資料表名稱的應用程式應該確定 je v konfliktu 這些命名模式不會發生。</span><span class="sxs-lookup"><span data-stu-id="72192-678">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="72192-679"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 不會傳回任何資料列。</span><span class="sxs-lookup"><span data-stu-id="72192-679"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> does not return any rows.</span></span> <span data-ttu-id="72192-680">使用<xref:System.Data.Common.DbDataAdapter.Fill%2A>方法，以將資料列加入<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="72192-680">Use the <xref:System.Data.Common.DbDataAdapter.Fill%2A> method to add rows to a <xref:System.Data.DataTable>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="72192-681">當處理批次 SQL 陳述式會傳回多個結果，實作<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>的.NET Framework Data Provider for OLE DB 擷取第一個結果的結構描述資訊。</span><span class="sxs-lookup"><span data-stu-id="72192-681">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</span></span> <span data-ttu-id="72192-682">若要擷取多個結果的結構描述資訊，請使用<xref:System.Data.Common.DbDataAdapter.Fill%2A>具有<xref:System.Data.MissingSchemaAction>設定為`AddWithKey`。</span><span class="sxs-lookup"><span data-stu-id="72192-682">To retrieve schema information for multiple results, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> with the <xref:System.Data.MissingSchemaAction> set to `AddWithKey`.</span></span>  
  
 <span data-ttu-id="72192-683">當使用<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>，.NET Framework Data Provider for SQL Server 會將 FOR BROWSE 子句附加至正在執行的陳述式。</span><span class="sxs-lookup"><span data-stu-id="72192-683">When using <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, the .NET Framework Data Provider for SQL Server appends a FOR BROWSE clause to the statement being executed.</span></span> <span data-ttu-id="72192-684">使用者應該留意的潛在的副作用，例如使用 SET FMTONLY ON 陳述式的干擾。</span><span class="sxs-lookup"><span data-stu-id="72192-684">The user should be aware of potential side effects, such as interference with the use of SET FMTONLY ON statements.</span></span> <span data-ttu-id="72192-685">如需詳細資訊，請參閱 [SET FMTONLY (Transact-SQL)](/sql/t-sql/statements/set-fmtonly-transact-sql)。</span><span class="sxs-lookup"><span data-stu-id="72192-685">For more information, see [SET FMTONLY (Transact-SQL)](/sql/t-sql/statements/set-fmtonly-transact-sql).</span></span>
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="72192-686">這個實作<see cref="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)" />方法受到保護，設計用於使用.NET Framework 資料提供者。</span><span class="sxs-lookup"><span data-stu-id="72192-686">This implementation of the <see cref="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)" /> method is protected and is designed for use by a .NET Framework data provider.</span></span></para></block>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="72192-687">DbProviderFactory (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="72192-687">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="72192-688">ADO.NET 概觀</span><span class="sxs-lookup"><span data-stu-id="72192-688">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FillSchema">
      <MemberSignature Language="C#" Value="protected virtual System.Data.DataTable[] FillSchema (System.Data.DataSet dataSet, System.Data.SchemaType schemaType, System.Data.IDbCommand command, string srcTable, System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.DataTable[] FillSchema(class System.Data.DataSet dataSet, valuetype System.Data.SchemaType schemaType, class System.Data.IDbCommand command, string srcTable, valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.Data.IDbCommand,System.String,System.Data.CommandBehavior)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual cli::array &lt;System::Data::DataTable ^&gt; ^ FillSchema(System::Data::DataSet ^ dataSet, System::Data::SchemaType schemaType, System::Data::IDbCommand ^ command, System::String ^ srcTable, System::Data::CommandBehavior behavior);" />
      <MemberSignature Language="F#" Value="override this.FillSchema : System.Data.DataSet * System.Data.SchemaType * System.Data.IDbCommand * string * System.Data.CommandBehavior -&gt; System.Data.DataTable[]" Usage="dbDataAdapter.FillSchema (dataSet, schemaType, command, srcTable, behavior)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
        <Parameter Name="schemaType" Type="System.Data.SchemaType" />
        <Parameter Name="command" Type="System.Data.IDbCommand" />
        <Parameter Name="srcTable" Type="System.String" />
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" />
      </Parameters>
      <Docs>
        <param name="dataSet"><span data-ttu-id="72192-689">要從資料來源以結構描述填入的 <see cref="T:System.Data.DataSet" />。</span><span class="sxs-lookup"><span data-stu-id="72192-689">The <see cref="T:System.Data.DataSet" /> to be filled with the schema from the data source.</span></span></param>
        <param name="schemaType"><span data-ttu-id="72192-690">其中一個 <see cref="T:System.Data.SchemaType" /> 值。</span><span class="sxs-lookup"><span data-stu-id="72192-690">One of the <see cref="T:System.Data.SchemaType" /> values.</span></span></param>
        <param name="command"><span data-ttu-id="72192-691">SQL SELECT 陳述式用於從資料來源擷取資料列。</span><span class="sxs-lookup"><span data-stu-id="72192-691">The SQL SELECT statement used to retrieve rows from the data source.</span></span></param>
        <param name="srcTable"><span data-ttu-id="72192-692">用於資料表對應的來源資料表名稱。</span><span class="sxs-lookup"><span data-stu-id="72192-692">The name of the source table to use for table mapping.</span></span></param>
        <param name="behavior"><span data-ttu-id="72192-693">其中一個 <see cref="T:System.Data.CommandBehavior" /> 值。</span><span class="sxs-lookup"><span data-stu-id="72192-693">One of the <see cref="T:System.Data.CommandBehavior" /> values.</span></span></param>
        <summary><span data-ttu-id="72192-694">新增<see cref="T:System.Data.DataTable" />來指定<see cref="T:System.Data.DataSet" />，並設定要符合的資料來源中根據指定的結構描述<see cref="T:System.Data.SchemaType" />。</span><span class="sxs-lookup"><span data-stu-id="72192-694">Adds a <see cref="T:System.Data.DataTable" /> to the specified <see cref="T:System.Data.DataSet" /> and configures the schema to match that in the data source based on the specified <see cref="T:System.Data.SchemaType" />.</span></span></summary>
        <returns><span data-ttu-id="72192-695">陣列<see cref="T:System.Data.DataTable" />從資料來源，傳回包含結構描述資訊的物件。</span><span class="sxs-lookup"><span data-stu-id="72192-695">An array of <see cref="T:System.Data.DataTable" /> objects that contain schema information returned from the data source.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72192-696"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A>方法會擷取結構描述從資料來源使用<xref:System.Data.IDbDataAdapter.SelectCommand%2A>。</span><span class="sxs-lookup"><span data-stu-id="72192-696">The <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> method retrieves the schema from the data source using the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>.</span></span> <span data-ttu-id="72192-697">連接物件相關聯<xref:System.Data.IDbDataAdapter.SelectCommand%2A>必須是有效的但它不需要開啟。</span><span class="sxs-lookup"><span data-stu-id="72192-697">The connection object associated with the <xref:System.Data.IDbDataAdapter.SelectCommand%2A> must be valid, but it does not need to be open.</span></span> <span data-ttu-id="72192-698">如果連線已關閉之前<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>會呼叫它，它會開啟來擷取資料，然後關閉。</span><span class="sxs-lookup"><span data-stu-id="72192-698">If the connection is closed before <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called, it is opened to retrieve data, then closed.</span></span> <span data-ttu-id="72192-699">如果連接已開啟之前<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>是呼叫，它會保持開啟狀態。</span><span class="sxs-lookup"><span data-stu-id="72192-699">If the connection is open before <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="72192-700">A<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>作業會將加入<xref:System.Data.DataTable>到目的地<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="72192-700">A <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> operation adds a <xref:System.Data.DataTable> to the destination <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="72192-701">接著它會加入至資料行<xref:System.Data.DataColumnCollection>的<xref:System.Data.DataTable>，並設定下列<xref:System.Data.DataColumn>如果它們存在於資料來源的屬性：</span><span class="sxs-lookup"><span data-stu-id="72192-701">It then adds columns to the <xref:System.Data.DataColumnCollection> of the <xref:System.Data.DataTable>, and configures the following <xref:System.Data.DataColumn> properties if they exist at the data source:</span></span>  
  
-   <xref:System.Data.DataColumn.AllowDBNull%2A>  
  
-   <span data-ttu-id="72192-702"><xref:System.Data.DataColumn.AutoIncrement%2A>.</span><span class="sxs-lookup"><span data-stu-id="72192-702"><xref:System.Data.DataColumn.AutoIncrement%2A>.</span></span> <span data-ttu-id="72192-703">您必須設定<xref:System.Data.DataColumn.AutoIncrementStep%2A>和<xref:System.Data.DataColumn.AutoIncrementSeed%2A>分開。</span><span class="sxs-lookup"><span data-stu-id="72192-703">You must set <xref:System.Data.DataColumn.AutoIncrementStep%2A> and <xref:System.Data.DataColumn.AutoIncrementSeed%2A> separately.</span></span>  
  
-   <xref:System.Data.DataColumn.MaxLength%2A>  
  
-   <xref:System.Data.DataColumn.ReadOnly%2A>  
  
-   <xref:System.Data.DataColumn.Unique%2A>  
  
 <span data-ttu-id="72192-704"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 也會設定<xref:System.Data.DataTable.PrimaryKey%2A>和<xref:System.Data.DataTable.Constraints%2A>屬性根據下列規則：</span><span class="sxs-lookup"><span data-stu-id="72192-704"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> also configures the <xref:System.Data.DataTable.PrimaryKey%2A> and <xref:System.Data.DataTable.Constraints%2A> properties according to the following rules:</span></span>  
  
-   <span data-ttu-id="72192-705">如果所傳回的一或多個主要的索引鍵資料行<xref:System.Data.IDbDataAdapter.SelectCommand%2A>，做為主要索引鍵資料行<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="72192-705">If one or more primary key columns are returned by the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>, they are used as the primary key columns for the <xref:System.Data.DataTable>.</span></span>  
  
-   <span data-ttu-id="72192-706">如果傳回沒有主索引鍵資料行，但唯一資料行，會使用唯一的資料行作為主索引鍵，並僅有，唯一的資料行都不可為 null。</span><span class="sxs-lookup"><span data-stu-id="72192-706">If no primary key columns are returned but unique columns are, the unique columns are used as the primary key if, and only if, all the unique columns are nonnullable.</span></span> <span data-ttu-id="72192-707">如果任何資料行可為 null，<xref:System.Data.UniqueConstraint>新增至<xref:System.Data.ConstraintCollection>，但<xref:System.Data.DataTable.PrimaryKey%2A>屬性未設定。</span><span class="sxs-lookup"><span data-stu-id="72192-707">If any of the columns are nullable, a <xref:System.Data.UniqueConstraint> is added to the <xref:System.Data.ConstraintCollection>, but the <xref:System.Data.DataTable.PrimaryKey%2A> property is not set.</span></span>  
  
-   <span data-ttu-id="72192-708">如果傳回主要索引鍵資料行及唯一的資料行，將主索引鍵資料行做為主要索引鍵資料行<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="72192-708">If both primary key columns and unique columns are returned, the primary key columns are used as the primary key columns for the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="72192-709">請注意，會將主索引鍵和唯一條件約束加入至<xref:System.Data.ConstraintCollection>根據前述規則，但其他條件約束類型不會新增。</span><span class="sxs-lookup"><span data-stu-id="72192-709">Note that primary keys and unique constraints are added to the <xref:System.Data.ConstraintCollection> according to the preceding rules, but other constraint types are not added.</span></span>  
  
 <span data-ttu-id="72192-710">如果唯一的叢集資料行或將 SQL Server 資料表中的資料行上定義索引和叢集索引中的資料行的名稱將會傳回一組個別的資料行上定義主索引鍵條件約束。</span><span class="sxs-lookup"><span data-stu-id="72192-710">If a unique clustered index is defined on a column or columns in a SQL Server table and the primary key constraint is defined on a separate set of columns, then the names of the columns in the clustered index will be returned.</span></span> <span data-ttu-id="72192-711">若要傳回的名稱或主索引鍵資料行的名稱，使用指定的主索引鍵名稱的 SELECT 陳述式中的查詢提示。</span><span class="sxs-lookup"><span data-stu-id="72192-711">To return the name or names of the primary key columns, use a query hint with the SELECT statement that specifies the name of the primary key index.</span></span> <span data-ttu-id="72192-712">如需指定查詢提示的詳細資訊，請參閱[查詢提示 & Amp;#40;transact-SQL&AMP;#41;](https://msdn.microsoft.com/library/ms181714.aspx)。</span><span class="sxs-lookup"><span data-stu-id="72192-712">For more information about specifying query hints, see [Query Hint (Transact-SQL)](https://msdn.microsoft.com/library/ms181714.aspx).</span></span>  
  
 <span data-ttu-id="72192-713">如果<xref:System.Data.IDataAdapter>遇到重複的資料行在填入<xref:System.Data.DataTable>，它會產生後續的資料行，並使用模式的名稱 」*columnname*1""*columnname*2"，"*columnname*3"，依此類推。</span><span class="sxs-lookup"><span data-stu-id="72192-713">If the <xref:System.Data.IDataAdapter> encounters duplicate columns while populating a <xref:System.Data.DataTable>, it generates names for the subsequent columns, using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="72192-714">如果內送資料包含未命名的資料行，它們會放在<xref:System.Data.DataSet>根據模式"Column1"、"Column2"，依此類推。</span><span class="sxs-lookup"><span data-stu-id="72192-714">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span> <span data-ttu-id="72192-715">當多個結果集加入至<xref:System.Data.DataSet>放置於個別的資料表中每個結果集。</span><span class="sxs-lookup"><span data-stu-id="72192-715">When multiple result sets are added to the <xref:System.Data.DataSet> each result set is placed in a separate table.</span></span> <span data-ttu-id="72192-716">其他結果集的命名方式將整數值附加至指定的資料表名稱 （例如，「 資料表 」、"Table1"、"Table2"，等等。）。</span><span class="sxs-lookup"><span data-stu-id="72192-716">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on.).</span></span> <span data-ttu-id="72192-717">使用資料行和資料表名稱的應用程式應該確定 je v konfliktu 這些命名模式不會發生。</span><span class="sxs-lookup"><span data-stu-id="72192-717">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="72192-718"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A>方法支援案例所在<xref:System.Data.DataSet>包含多個<xref:System.Data.DataTable>名稱只有大小寫不同的物件。</span><span class="sxs-lookup"><span data-stu-id="72192-718">The <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> method supports scenarios where the <xref:System.Data.DataSet> contains multiple <xref:System.Data.DataTable> objects whose names differ only by case.</span></span> <span data-ttu-id="72192-719">在這種情況下，<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>執行區分大小寫的比較，來尋找對應的資料表，並建立新的資料表，如果沒有完全相符項目存在。</span><span class="sxs-lookup"><span data-stu-id="72192-719">In such situations, <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> performs a case-sensitive comparison to find the corresponding table, and creates a new table if no exact match exists.</span></span> <span data-ttu-id="72192-720">下列 C# 程式碼說明此行為。</span><span class="sxs-lookup"><span data-stu-id="72192-720">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
dataset.Tables.Add("AAA");  
adapter.FillSchema(dataset, "aaa"); // Fills the schema of "aaa", which already exists in the DataSet.  
adapter.FillSchema(dataset, "Aaa"); // Adds a new table called "Aaa".  
```  
  
 <span data-ttu-id="72192-721">如果<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>呼叫時，<xref:System.Data.DataSet>只會包含一個<xref:System.Data.DataTable>名稱只有大小寫不同，，<xref:System.Data.DataTable>會更新。</span><span class="sxs-lookup"><span data-stu-id="72192-721">If <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called and the <xref:System.Data.DataSet> contains only one <xref:System.Data.DataTable> whose name differs only by case, that <xref:System.Data.DataTable> is updated.</span></span> <span data-ttu-id="72192-722">在此案例中，比較不區分大小寫。</span><span class="sxs-lookup"><span data-stu-id="72192-722">In this scenario, the comparison is case insensitive.</span></span> <span data-ttu-id="72192-723">下列 C# 程式碼說明此行為。</span><span class="sxs-lookup"><span data-stu-id="72192-723">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
adapter.FillSchema(dataset, "AAA"); // Fills the schema of table "aaa" because only one similarly named table is in the DataSet.  
```  
  
 <span data-ttu-id="72192-724"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 不會傳回任何資料列。</span><span class="sxs-lookup"><span data-stu-id="72192-724"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> does not return any rows.</span></span> <span data-ttu-id="72192-725">使用<xref:System.Data.Common.DbDataAdapter.Fill%2A>方法，以將資料列加入<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="72192-725">Use the <xref:System.Data.Common.DbDataAdapter.Fill%2A> method to add rows to a <xref:System.Data.DataTable>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="72192-726">當處理批次 SQL 陳述式會傳回多個結果，實作<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>的.NET Framework Data Provider for OLE DB 擷取第一個結果的結構描述資訊。</span><span class="sxs-lookup"><span data-stu-id="72192-726">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</span></span> <span data-ttu-id="72192-727">若要擷取多個結果的結構描述資訊，請使用<xref:System.Data.Common.DbDataAdapter.Fill%2A>具有<xref:System.Data.MissingSchemaAction>設定為`AddWithKey`。</span><span class="sxs-lookup"><span data-stu-id="72192-727">To retrieve schema information for multiple results, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> with the <xref:System.Data.MissingSchemaAction> set to `AddWithKey`.</span></span>  
  
 <span data-ttu-id="72192-728">當使用<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>，.NET Framework Data Provider for SQL Server 會將 FOR BROWSE 子句附加至正在執行的陳述式。</span><span class="sxs-lookup"><span data-stu-id="72192-728">When using <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, the .NET Framework Data Provider for SQL Server appends a FOR BROWSE clause to the statement being executed.</span></span> <span data-ttu-id="72192-729">使用者應該留意的潛在的副作用，例如使用 SET FMTONLY ON 陳述式的干擾。</span><span class="sxs-lookup"><span data-stu-id="72192-729">The user should be aware of potential side effects, such as interference with the use of SET FMTONLY ON statements.</span></span> <span data-ttu-id="72192-730">如需詳細資訊，請參閱 [SET FMTONLY (Transact-SQL)](/sql/t-sql/statements/set-fmtonly-transact-sql)。</span><span class="sxs-lookup"><span data-stu-id="72192-730">For more information, see [SET FMTONLY (Transact-SQL)](/sql/t-sql/statements/set-fmtonly-transact-sql).</span></span>
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="72192-731">這個實作<see cref="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)" />方法受到保護，設計用於使用.NET Framework 資料提供者。</span><span class="sxs-lookup"><span data-stu-id="72192-731">This implementation of the <see cref="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)" /> method is protected and is designed for use by a .NET Framework data provider.</span></span></para></block>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="72192-732">DbProviderFactory (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="72192-732">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="72192-733">ADO.NET 概觀</span><span class="sxs-lookup"><span data-stu-id="72192-733">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetBatchedParameter">
      <MemberSignature Language="C#" Value="protected virtual System.Data.IDataParameter GetBatchedParameter (int commandIdentifier, int parameterIndex);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.IDataParameter GetBatchedParameter(int32 commandIdentifier, int32 parameterIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.GetBatchedParameter(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetBatchedParameter (commandIdentifier As Integer, parameterIndex As Integer) As IDataParameter" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Data::IDataParameter ^ GetBatchedParameter(int commandIdentifier, int parameterIndex);" />
      <MemberSignature Language="F#" Value="abstract member GetBatchedParameter : int * int -&gt; System.Data.IDataParameter&#xA;override this.GetBatchedParameter : int * int -&gt; System.Data.IDataParameter" Usage="dbDataAdapter.GetBatchedParameter (commandIdentifier, parameterIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDataParameter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandIdentifier" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="parameterIndex" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="commandIdentifier"><span data-ttu-id="72192-734">要從其中擷取參數的命令索引。</span><span class="sxs-lookup"><span data-stu-id="72192-734">The index of the command to retrieve the parameter from.</span></span></param>
        <param name="parameterIndex"><span data-ttu-id="72192-735">在命令中參數的索引。</span><span class="sxs-lookup"><span data-stu-id="72192-735">The index of the parameter within the command.</span></span></param>
        <summary><span data-ttu-id="72192-736">傳回<see cref="T:System.Data.IDataParameter" />其中一個目前的批次中的命令。</span><span class="sxs-lookup"><span data-stu-id="72192-736">Returns a <see cref="T:System.Data.IDataParameter" /> from one of the commands in the current batch.</span></span></summary>
        <returns><span data-ttu-id="72192-737"><see cref="T:System.Data.IDataParameter" />指定。</span><span class="sxs-lookup"><span data-stu-id="72192-737">The <see cref="T:System.Data.IDataParameter" /> specified.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72192-738">在  <xref:System.Data.Common.DbDataAdapter>，此方法會擲回<xref:System.NotSupportedException>。</span><span class="sxs-lookup"><span data-stu-id="72192-738">In <xref:System.Data.Common.DbDataAdapter>, this method throws <xref:System.NotSupportedException>.</span></span> <span data-ttu-id="72192-739">類別繼承自<xref:System.Data.Common.DbDataAdapter>覆寫這個方法，以提供的批次支援。</span><span class="sxs-lookup"><span data-stu-id="72192-739">Classes that inherit from <xref:System.Data.Common.DbDataAdapter> override this method to provide support for batches.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="72192-740">配接器不支援批次。</span><span class="sxs-lookup"><span data-stu-id="72192-740">The adapter does not support batches.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="72192-741">這個方法會保護，而且設計用於使用.NET Framework 資料提供者。</span><span class="sxs-lookup"><span data-stu-id="72192-741">This method is protected and is designed for use by a .NET Framework data provider.</span></span>  
  
<span data-ttu-id="72192-742">如果類別繼承自<see cref="T:System.Data.Common.DbDataAdapter" />支援批次，該類別會覆寫這個方法，以允許使用者執行的批次。</span><span class="sxs-lookup"><span data-stu-id="72192-742">If a class that inherits from <see cref="T:System.Data.Common.DbDataAdapter" /> supports batches, that class overrides this method to allow users to execute a batch.</span></span> <span data-ttu-id="72192-743">實作會使用<paramref name="commandIdentifier" />可找出要求的命令，則會使用<paramref name="parameterIndex" />可找出要求的參數。</span><span class="sxs-lookup"><span data-stu-id="72192-743">An implementation uses the <paramref name="commandIdentifier" /> provided to locate the requested command, then uses the <paramref name="parameterIndex" /> provided to locate the requested parameter.</span></span> <span data-ttu-id="72192-744">例如，<paramref name="commandIdentifier" />為 0 和<paramref name="parameterIndex" />0 會傳回從第一個命令批次中的第一個參數。</span><span class="sxs-lookup"><span data-stu-id="72192-744">For example, a <paramref name="commandIdentifier" /> of 0 and a <paramref name="parameterIndex" /> of 0 returns the first parameter from the first command in the batch.</span></span></para></block>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="72192-745">DbProviderFactory (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="72192-745">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="72192-746">ADO.NET 概觀</span><span class="sxs-lookup"><span data-stu-id="72192-746">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetBatchedRecordsAffected">
      <MemberSignature Language="C#" Value="protected virtual bool GetBatchedRecordsAffected (int commandIdentifier, out int recordsAffected, out Exception error);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool GetBatchedRecordsAffected(int32 commandIdentifier, [out] int32&amp; recordsAffected, [out] class System.Exception&amp; error) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.GetBatchedRecordsAffected(System.Int32,System.Int32@,System.Exception@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetBatchedRecordsAffected (commandIdentifier As Integer, ByRef recordsAffected As Integer, ByRef error As Exception) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool GetBatchedRecordsAffected(int commandIdentifier, [Runtime::InteropServices::Out] int % recordsAffected, [Runtime::InteropServices::Out] Exception ^ % error);" />
      <MemberSignature Language="F#" Value="abstract member GetBatchedRecordsAffected : int *  *  -&gt; bool&#xA;override this.GetBatchedRecordsAffected : int *  *  -&gt; bool" Usage="dbDataAdapter.GetBatchedRecordsAffected (commandIdentifier, recordsAffected, error)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandIdentifier" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="recordsAffected" Type="System.Int32" RefType="out" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="error" Type="System.Exception" RefType="out" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="commandIdentifier"><span data-ttu-id="72192-747">個別的命令批次內之以零為起始的資料行序數。</span><span class="sxs-lookup"><span data-stu-id="72192-747">The zero-based column ordinal of the individual command within the batch.</span></span></param>
        <param name="recordsAffected"><span data-ttu-id="72192-748">受影響的資料存放區中所指定的命令批次內的資料列數目。</span><span class="sxs-lookup"><span data-stu-id="72192-748">The number of rows affected in the data store by the specified command within the batch.</span></span></param>
        <param name="error"><span data-ttu-id="72192-749"><see cref="T:System.Exception" />指定命令執行期間擲回。</span><span class="sxs-lookup"><span data-stu-id="72192-749">An <see cref="T:System.Exception" /> thrown during execution of the specified command.</span></span> <span data-ttu-id="72192-750">傳回<see langword="null" />(<see langword="Nothing" /> Visual Basic 中) 如果擲不回任何例外狀況。</span><span class="sxs-lookup"><span data-stu-id="72192-750">Returns <see langword="null" /> (<see langword="Nothing" /> in Visual Basic) if no exception is thrown.</span></span></param>
        <summary><span data-ttu-id="72192-751">傳回在較大的批次更新內個別更新嘗試的相關資訊。</span><span class="sxs-lookup"><span data-stu-id="72192-751">Returns information about an individual update attempt within a larger batched update.</span></span></summary>
        <returns><span data-ttu-id="72192-752">較大的批次更新內個別更新嘗試的相關資訊。</span><span class="sxs-lookup"><span data-stu-id="72192-752">Information about an individual update attempt within a larger batched update.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72192-753">支援批次的更新邏輯的資料提供者必須在項目覆寫虛擬方法的一系列<xref:System.Data.Common.DbDataAdapter>類別。</span><span class="sxs-lookup"><span data-stu-id="72192-753">Data providers that support batched updating logic must override a series of virtual methods on the <xref:System.Data.Common.DbDataAdapter> class.</span></span> <span data-ttu-id="72192-754">`GetBatchedRecordsAffected` 代表其中一個這些虛擬方法。</span><span class="sxs-lookup"><span data-stu-id="72192-754">`GetBatchedRecordsAffected` represents one of those virtual methods.</span></span> <span data-ttu-id="72192-755">`DbDataAdapter`類別會倚賴`GetBatchedRecordsAffected`若要判斷成功或失敗的批次內的個別更新嘗試，因此它可以將標記每個對應<xref:System.Data.DataRow>據此。</span><span class="sxs-lookup"><span data-stu-id="72192-755">The `DbDataAdapter` class relies on `GetBatchedRecordsAffected` to determine the success or failure of individual update attempts within a batch so it can mark each corresponding <xref:System.Data.DataRow> accordingly.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="72192-756">ADO.NET 概觀</span><span class="sxs-lookup"><span data-stu-id="72192-756">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetFillParameters">
      <MemberSignature Language="C#" Value="public override System.Data.IDataParameter[] GetFillParameters ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.IDataParameter[] GetFillParameters() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.GetFillParameters" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetFillParameters () As IDataParameter()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Data::IDataParameter ^&gt; ^ GetFillParameters();" />
      <MemberSignature Language="F#" Value="override this.GetFillParameters : unit -&gt; System.Data.IDataParameter[]" Usage="dbDataAdapter.GetFillParameters " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataAdapter.GetFillParameters</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;netcore-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.IDataParameter[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="72192-757">取得執行的 SQL SELECT 陳述式時，使用者所設定的參數。</span><span class="sxs-lookup"><span data-stu-id="72192-757">Gets the parameters set by the user when executing an SQL SELECT statement.</span></span></summary>
        <returns><span data-ttu-id="72192-758">陣列<see cref="T:System.Data.IDataParameter" />由使用者設定物件，包含的參數。</span><span class="sxs-lookup"><span data-stu-id="72192-758">An array of <see cref="T:System.Data.IDataParameter" /> objects that contains the parameters set by the user.</span></span></returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="72192-759">ADO.NET 概觀</span><span class="sxs-lookup"><span data-stu-id="72192-759">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="InitializeBatching">
      <MemberSignature Language="C#" Value="protected virtual void InitializeBatching ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InitializeBatching() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.InitializeBatching" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub InitializeBatching ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void InitializeBatching();" />
      <MemberSignature Language="F#" Value="abstract member InitializeBatching : unit -&gt; unit&#xA;override this.InitializeBatching : unit -&gt; unit" Usage="dbDataAdapter.InitializeBatching " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="72192-760">初始化批次處理<see cref="T:System.Data.Common.DbDataAdapter" />。</span><span class="sxs-lookup"><span data-stu-id="72192-760">Initializes batching for the <see cref="T:System.Data.Common.DbDataAdapter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72192-761">在  <xref:System.Data.Common.DbDataAdapter>，此方法會擲回<xref:System.NotSupportedException>。</span><span class="sxs-lookup"><span data-stu-id="72192-761">In <xref:System.Data.Common.DbDataAdapter>, this method throws <xref:System.NotSupportedException>.</span></span> <span data-ttu-id="72192-762">類別繼承自<xref:System.Data.Common.DbDataAdapter>覆寫這個方法，以提供的批次支援。</span><span class="sxs-lookup"><span data-stu-id="72192-762">Classes that inherit from <xref:System.Data.Common.DbDataAdapter> override this method to provide support for batches.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="72192-763">配接器不支援批次。</span><span class="sxs-lookup"><span data-stu-id="72192-763">The adapter does not support batches.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="72192-764">這個方法會保護，而且設計用於使用.NET Framework 資料提供者。</span><span class="sxs-lookup"><span data-stu-id="72192-764">This method is protected and is designed for use by a .NET Framework data provider.</span></span>  
  
<span data-ttu-id="72192-765">如果類別繼承自<see cref="T:System.Data.Common.DbDataAdapter" />支援批次，該類別會覆寫這個方法。</span><span class="sxs-lookup"><span data-stu-id="72192-765">If a class that inherits from <see cref="T:System.Data.Common.DbDataAdapter" /> supports batches, that class overrides this method.</span></span> <span data-ttu-id="72192-766">這個方法可讓類別來初始化支援批次所需的任何資源的機會。</span><span class="sxs-lookup"><span data-stu-id="72192-766">This method gives the class the opportunity to initialize any resources necessary to support batching.</span></span> <span data-ttu-id="72192-767">例如，類別可能配置來保存命令集的批次中的資料結構。</span><span class="sxs-lookup"><span data-stu-id="72192-767">For example, a class may allocate a data structure to hold the set of commands in the batch.</span></span></para></block>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="72192-768">DbProviderFactory (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="72192-768">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="72192-769">ADO.NET 概觀</span><span class="sxs-lookup"><span data-stu-id="72192-769">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="InsertCommand">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbCommand InsertCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbCommand InsertCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataAdapter.InsertCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property InsertCommand As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Common::DbCommand ^ InsertCommand { System::Data::Common::DbCommand ^ get(); void set(System::Data::Common::DbCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InsertCommand : System.Data.Common.DbCommand with get, set" Usage="System.Data.Common.DbDataAdapter.InsertCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;netcore-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="72192-770">取得或設定用來將新記錄插入至資料來源的命令。</span><span class="sxs-lookup"><span data-stu-id="72192-770">Gets or sets a command used to insert new records into the data source.</span></span></summary>
        <value><span data-ttu-id="72192-771">A<see cref="T:System.Data.IDbCommand" />期間使用<see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />來插入新資料列的資料集的資料來源中的記錄。</span><span class="sxs-lookup"><span data-stu-id="72192-771">A <see cref="T:System.Data.IDbCommand" /> used during <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> to insert records in the data source for new rows in the data set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72192-772">期間<xref:System.Data.Common.DbDataAdapter.Update%2A>，如果沒有設定這個屬性，而主索引鍵資訊是存在於<xref:System.Data.DataSet>，則<xref:System.Data.IDbDataAdapter.InsertCommand%2A>將會自動產生。</span><span class="sxs-lookup"><span data-stu-id="72192-772">During <xref:System.Data.Common.DbDataAdapter.Update%2A>, if this property is not set and primary key information is present in the <xref:System.Data.DataSet>, the <xref:System.Data.IDbDataAdapter.InsertCommand%2A> will be automatically generated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="72192-773">下列範例會建立衍生的類別<xref:System.Data.OleDb.OleDbDataAdapter>並設定其部分屬性。</span><span class="sxs-lookup"><span data-stu-id="72192-773">The following example creates the derived class <xref:System.Data.OleDb.OleDbDataAdapter> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.InsertCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.InsertCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.InsertCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.InsertCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md"><span data-ttu-id="72192-774">操作資料 (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="72192-774">Manipulating Data (ADO.NET)</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="72192-775">DbProviderFactory (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="72192-775">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="72192-776">ADO.NET 概觀</span><span class="sxs-lookup"><span data-stu-id="72192-776">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OnFillError">
      <MemberSignature Language="C#" Value="protected virtual void OnFillError (System.Data.FillErrorEventArgs value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnFillError(class System.Data.FillErrorEventArgs value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.OnFillError(System.Data.FillErrorEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnFillError (value As FillErrorEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnFillError(System::Data::FillErrorEventArgs ^ value);" />
      <MemberSignature Language="F#" Value="abstract member OnFillError : System.Data.FillErrorEventArgs -&gt; unit&#xA;override this.OnFillError : System.Data.FillErrorEventArgs -&gt; unit" Usage="dbDataAdapter.OnFillError value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.FillErrorEventArgs" Index="0" FrameworkAlternate="netframework-1.1" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="72192-777">事件的資料。</span><span class="sxs-lookup"><span data-stu-id="72192-777">The data for the event.</span></span></param>
        <summary><span data-ttu-id="72192-778">引發 <see cref="E:System.Data.Common.DataAdapter.FillError" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="72192-778">Raises the <see cref="E:System.Data.Common.DataAdapter.FillError" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnRowUpdated">
      <MemberSignature Language="C#" Value="protected virtual void OnRowUpdated (System.Data.Common.RowUpdatedEventArgs value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowUpdated(class System.Data.Common.RowUpdatedEventArgs value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowUpdated (value As RowUpdatedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowUpdated(System::Data::Common::RowUpdatedEventArgs ^ value);" />
      <MemberSignature Language="F#" Value="abstract member OnRowUpdated : System.Data.Common.RowUpdatedEventArgs -&gt; unit&#xA;override this.OnRowUpdated : System.Data.Common.RowUpdatedEventArgs -&gt; unit" Usage="dbDataAdapter.OnRowUpdated value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.Common.RowUpdatedEventArgs" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="72192-779"><see cref="T:System.Data.Common.RowUpdatedEventArgs" />，其中包含事件資料。</span><span class="sxs-lookup"><span data-stu-id="72192-779">A <see cref="T:System.Data.Common.RowUpdatedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="72192-780">引發<see langword="RowUpdated" />.NET Framework 資料提供者的事件。</span><span class="sxs-lookup"><span data-stu-id="72192-780">Raises the <see langword="RowUpdated" /> event of a .NET Framework data provider.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72192-781">引發事件會透過委派叫用此事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="72192-781">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="72192-782">如需概觀，請參閱[處理和引發事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="72192-782">For an overview, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="72192-783">當覆寫<see cref="M:System.Data.Common.DbDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)" />衍生類別時，請務必呼叫基底類別的<see cref="M:System.Data.Common.DbDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)" />方法。</span><span class="sxs-lookup"><span data-stu-id="72192-783">When overriding <see cref="M:System.Data.Common.DbDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Data.Common.DbDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)" /> method.</span></span></para></block>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="72192-784">DbProviderFactory (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="72192-784">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="72192-785">ADO.NET 概觀</span><span class="sxs-lookup"><span data-stu-id="72192-785">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OnRowUpdating">
      <MemberSignature Language="C#" Value="protected virtual void OnRowUpdating (System.Data.Common.RowUpdatingEventArgs value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowUpdating(class System.Data.Common.RowUpdatingEventArgs value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowUpdating (value As RowUpdatingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowUpdating(System::Data::Common::RowUpdatingEventArgs ^ value);" />
      <MemberSignature Language="F#" Value="abstract member OnRowUpdating : System.Data.Common.RowUpdatingEventArgs -&gt; unit&#xA;override this.OnRowUpdating : System.Data.Common.RowUpdatingEventArgs -&gt; unit" Usage="dbDataAdapter.OnRowUpdating value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.Common.RowUpdatingEventArgs" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="72192-786">包含事件資料的 <see cref="T:System.Data.Common.RowUpdatingEventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="72192-786">An <see cref="T:System.Data.Common.RowUpdatingEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="72192-787">引發<see langword="RowUpdating" />.NET Framework 資料提供者的事件。</span><span class="sxs-lookup"><span data-stu-id="72192-787">Raises the <see langword="RowUpdating" /> event of a .NET Framework data provider.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72192-788">引發事件會透過委派叫用此事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="72192-788">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="72192-789">如需概觀，請參閱[處理和引發事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="72192-789">For an overview, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="72192-790">當覆寫<see cref="M:System.Data.Common.DbDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)" />衍生類別時，請務必呼叫基底類別的<see cref="M:System.Data.Common.DbDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)" />方法。</span><span class="sxs-lookup"><span data-stu-id="72192-790">When overriding <see cref="M:System.Data.Common.DbDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)" /> in a derived class, be sure to call the bases class's <see cref="M:System.Data.Common.DbDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)" /> method.</span></span></para></block>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="72192-791">DbProviderFactory (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="72192-791">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="72192-792">ADO.NET 概觀</span><span class="sxs-lookup"><span data-stu-id="72192-792">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SelectCommand">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbCommand SelectCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbCommand SelectCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataAdapter.SelectCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectCommand As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Common::DbCommand ^ SelectCommand { System::Data::Common::DbCommand ^ get(); void set(System::Data::Common::DbCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SelectCommand : System.Data.Common.DbCommand with get, set" Usage="System.Data.Common.DbDataAdapter.SelectCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;netcore-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="72192-793">取得或設定用來選取資料來源中資料錄的命令。</span><span class="sxs-lookup"><span data-stu-id="72192-793">Gets or sets a command used to select records in the data source.</span></span></summary>
        <value><span data-ttu-id="72192-794">A<see cref="T:System.Data.IDbCommand" />期間用<see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />來選取資料錄從資料來源的資料集中的位置。</span><span class="sxs-lookup"><span data-stu-id="72192-794">A <see cref="T:System.Data.IDbCommand" /> that is used during <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> to select records from data source for placement in the data set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="72192-795">下列範例會建立衍生的類別<xref:System.Data.OleDb.OleDbDataAdapter>並設定其部分屬性。</span><span class="sxs-lookup"><span data-stu-id="72192-795">The following example creates the derived class <xref:System.Data.OleDb.OleDbDataAdapter> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.SelectCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.SelectCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.SelectCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.SelectCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md"><span data-ttu-id="72192-796">操作資料 (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="72192-796">Manipulating Data (ADO.NET)</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="72192-797">DbProviderFactory (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="72192-797">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="72192-798">ADO.NET 概觀</span><span class="sxs-lookup"><span data-stu-id="72192-798">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbDataAdapter.DeleteCommand">
      <MemberSignature Language="C#" Value="System.Data.IDbCommand System.Data.IDbDataAdapter.DeleteCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand System.Data.IDbDataAdapter.DeleteCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#DeleteCommand" />
      <MemberSignature Language="VB.NET" Value=" Property DeleteCommand As IDbCommand Implements IDbDataAdapter.DeleteCommand" />
      <MemberSignature Language="C++ CLI" Value="property System::Data::IDbCommand ^ System::Data::IDbDataAdapter::DeleteCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Data.IDbDataAdapter.DeleteCommand" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataAdapter.DeleteCommand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="72192-799">取得或設定從資料集刪除資料錄的 SQL 陳述式。</span><span class="sxs-lookup"><span data-stu-id="72192-799">Gets or sets an SQL statement for deleting records from the data set.</span></span></summary>
        <value><span data-ttu-id="72192-800"><see cref="T:System.Data.IDbCommand" />期間使用<see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />在資料集中刪除的資料列的資料來源中刪除記錄。</span><span class="sxs-lookup"><span data-stu-id="72192-800">An <see cref="T:System.Data.IDbCommand" /> used during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> to delete records in the data source for deleted rows in the data set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72192-801">這個成員是明確介面成員實作，</span><span class="sxs-lookup"><span data-stu-id="72192-801">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="72192-802">只有在 <xref:System.Data.Common.DbDataAdapter> 執行個體轉換成 <xref:System.Data.IDbDataAdapter> 介面時，才能使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="72192-802">It can be used only when the <xref:System.Data.Common.DbDataAdapter> instance is cast to an <xref:System.Data.IDbDataAdapter> interface.</span></span>  
  
 <span data-ttu-id="72192-803">如需詳細資訊，請參閱 <xref:System.Data.IDbDataAdapter.DeleteCommand%2A>。</span><span class="sxs-lookup"><span data-stu-id="72192-803">For more information, see <xref:System.Data.IDbDataAdapter.DeleteCommand%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="72192-804">ADO.NET 概觀</span><span class="sxs-lookup"><span data-stu-id="72192-804">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbDataAdapter.InsertCommand">
      <MemberSignature Language="C#" Value="System.Data.IDbCommand System.Data.IDbDataAdapter.InsertCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand System.Data.IDbDataAdapter.InsertCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#InsertCommand" />
      <MemberSignature Language="VB.NET" Value=" Property InsertCommand As IDbCommand Implements IDbDataAdapter.InsertCommand" />
      <MemberSignature Language="C++ CLI" Value="property System::Data::IDbCommand ^ System::Data::IDbDataAdapter::InsertCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Data.IDbDataAdapter.InsertCommand" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataAdapter.InsertCommand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="72192-805">取得或設定用來將新記錄插入至資料來源的 SQL 陳述式。</span><span class="sxs-lookup"><span data-stu-id="72192-805">Gets or sets an SQL statement used to insert new records into the data source.</span></span></summary>
        <value><span data-ttu-id="72192-806"><see cref="T:System.Data.IDbCommand" />期間使用<see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />來插入新資料列的資料集的資料來源中的記錄。</span><span class="sxs-lookup"><span data-stu-id="72192-806">An <see cref="T:System.Data.IDbCommand" /> used during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> to insert records in the data source for new rows in the data set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72192-807">這個成員是明確介面成員實作，</span><span class="sxs-lookup"><span data-stu-id="72192-807">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="72192-808">只有在 <xref:System.Data.Common.DbDataAdapter> 執行個體轉換成 <xref:System.Data.IDbDataAdapter> 介面時，才能使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="72192-808">It can be used only when the <xref:System.Data.Common.DbDataAdapter> instance is cast to an <xref:System.Data.IDbDataAdapter> interface.</span></span>  
  
 <span data-ttu-id="72192-809">如需詳細資訊，請參閱 <xref:System.Data.IDbDataAdapter.InsertCommand%2A>。</span><span class="sxs-lookup"><span data-stu-id="72192-809">For more information, see <xref:System.Data.IDbDataAdapter.InsertCommand%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="72192-810">ADO.NET 概觀</span><span class="sxs-lookup"><span data-stu-id="72192-810">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbDataAdapter.SelectCommand">
      <MemberSignature Language="C#" Value="System.Data.IDbCommand System.Data.IDbDataAdapter.SelectCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand System.Data.IDbDataAdapter.SelectCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#SelectCommand" />
      <MemberSignature Language="VB.NET" Value=" Property SelectCommand As IDbCommand Implements IDbDataAdapter.SelectCommand" />
      <MemberSignature Language="C++ CLI" Value="property System::Data::IDbCommand ^ System::Data::IDbDataAdapter::SelectCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Data.IDbDataAdapter.SelectCommand" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataAdapter.SelectCommand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="72192-811">取得或設定用來選取資料來源中資料錄的 SQL 陳述式。</span><span class="sxs-lookup"><span data-stu-id="72192-811">Gets or sets an SQL statement used to select records in the data source.</span></span></summary>
        <value><span data-ttu-id="72192-812"><see cref="T:System.Data.IDbCommand" />期間用<see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />來選取資料錄從資料來源的資料集中的位置。</span><span class="sxs-lookup"><span data-stu-id="72192-812">An <see cref="T:System.Data.IDbCommand" /> that is used during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> to select records from data source for placement in the data set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72192-813">這個成員是明確介面成員實作，</span><span class="sxs-lookup"><span data-stu-id="72192-813">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="72192-814">只有在 <xref:System.Data.Common.DbDataAdapter> 執行個體轉換成 <xref:System.Data.IDbDataAdapter> 介面時，才能使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="72192-814">It can be used only when the <xref:System.Data.Common.DbDataAdapter> instance is cast to an <xref:System.Data.IDbDataAdapter> interface.</span></span>  
  
 <span data-ttu-id="72192-815">如需詳細資訊，請參閱 <xref:System.Data.IDbDataAdapter.SelectCommand%2A>。</span><span class="sxs-lookup"><span data-stu-id="72192-815">For more information, see <xref:System.Data.IDbDataAdapter.SelectCommand%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="72192-816">ADO.NET 概觀</span><span class="sxs-lookup"><span data-stu-id="72192-816">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbDataAdapter.UpdateCommand">
      <MemberSignature Language="C#" Value="System.Data.IDbCommand System.Data.IDbDataAdapter.UpdateCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand System.Data.IDbDataAdapter.UpdateCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#UpdateCommand" />
      <MemberSignature Language="VB.NET" Value=" Property UpdateCommand As IDbCommand Implements IDbDataAdapter.UpdateCommand" />
      <MemberSignature Language="C++ CLI" Value="property System::Data::IDbCommand ^ System::Data::IDbDataAdapter::UpdateCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Data.IDbDataAdapter.UpdateCommand" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataAdapter.UpdateCommand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="72192-817">取得或設定用來更新資料來源中的資料錄的 SQL 陳述式。</span><span class="sxs-lookup"><span data-stu-id="72192-817">Gets or sets an SQL statement used to update records in the data source.</span></span></summary>
        <value><span data-ttu-id="72192-818"><see cref="T:System.Data.IDbCommand" />期間使用<see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />來更新資料集中修改的資料列的資料來源中的記錄。</span><span class="sxs-lookup"><span data-stu-id="72192-818">An <see cref="T:System.Data.IDbCommand" /> used during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> to update records in the data source for modified rows in the data set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72192-819">這個成員是明確介面成員實作，</span><span class="sxs-lookup"><span data-stu-id="72192-819">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="72192-820">只有在 <xref:System.Data.Common.DbDataAdapter> 執行個體轉換成 <xref:System.Data.IDbDataAdapter> 介面時，才能使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="72192-820">It can be used only when the <xref:System.Data.Common.DbDataAdapter> instance is cast to an <xref:System.Data.IDbDataAdapter> interface.</span></span>  
  
 <span data-ttu-id="72192-821">如需詳細資訊，請參閱 <xref:System.Data.IDbDataAdapter.UpdateCommand%2A>。</span><span class="sxs-lookup"><span data-stu-id="72192-821">For more information, see <xref:System.Data.IDbDataAdapter.UpdateCommand%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="72192-822">ADO.NET 概觀</span><span class="sxs-lookup"><span data-stu-id="72192-822">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.ICloneable.Clone">
      <MemberSignature Language="C#" Value="object ICloneable.Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ICloneable.Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.System#ICloneable#Clone" />
      <MemberSignature Language="VB.NET" Value="Function Clone () As Object Implements ICloneable.Clone" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ICloneable.Clone() = ICloneable::Clone;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("use 'protected DbDataAdapter(DbDataAdapter)' ctor")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="72192-823">建立目前執行個體複本的新物件。</span><span class="sxs-lookup"><span data-stu-id="72192-823">Creates a new object that is a copy of the current instance.</span></span></summary>
        <returns><span data-ttu-id="72192-824">這個執行個體複本的新物件。</span><span class="sxs-lookup"><span data-stu-id="72192-824">A new object that is a copy of this instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72192-825">這個成員是明確介面成員實作，</span><span class="sxs-lookup"><span data-stu-id="72192-825">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="72192-826">只有在 <xref:System.Data.Common.DbDataAdapter> 執行個體轉換成 <xref:System.ICloneable> 介面時，才能使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="72192-826">It can be used only when the <xref:System.Data.Common.DbDataAdapter> instance is cast to an <xref:System.ICloneable> interface.</span></span>  
  
 <span data-ttu-id="72192-827">如需詳細資訊，請參閱 <xref:System.ICloneable.Clone%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="72192-827">For more information, see <xref:System.ICloneable.Clone%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="72192-828">ADO.NET 概觀</span><span class="sxs-lookup"><span data-stu-id="72192-828">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TerminateBatching">
      <MemberSignature Language="C#" Value="protected virtual void TerminateBatching ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void TerminateBatching() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.TerminateBatching" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub TerminateBatching ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void TerminateBatching();" />
      <MemberSignature Language="F#" Value="abstract member TerminateBatching : unit -&gt; unit&#xA;override this.TerminateBatching : unit -&gt; unit" Usage="dbDataAdapter.TerminateBatching " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="72192-829">結束批次處理<see cref="T:System.Data.Common.DbDataAdapter" />。</span><span class="sxs-lookup"><span data-stu-id="72192-829">Ends batching for the <see cref="T:System.Data.Common.DbDataAdapter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72192-830">在  <xref:System.Data.Common.DbDataAdapter>，此方法會擲回<xref:System.NotSupportedException>。</span><span class="sxs-lookup"><span data-stu-id="72192-830">In <xref:System.Data.Common.DbDataAdapter>, this method throws <xref:System.NotSupportedException>.</span></span> <span data-ttu-id="72192-831">類別繼承自<xref:System.Data.Common.DbDataAdapter>覆寫這個方法，以提供的批次支援。</span><span class="sxs-lookup"><span data-stu-id="72192-831">Classes that inherit from <xref:System.Data.Common.DbDataAdapter> override this method to provide support for batches.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="72192-832">配接器不支援批次。</span><span class="sxs-lookup"><span data-stu-id="72192-832">The adapter does not support batches.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="72192-833">這個方法會保護，而且設計用於使用.NET Framework 資料提供者。</span><span class="sxs-lookup"><span data-stu-id="72192-833">This method is protected and is designed for use by a .NET Framework data provider.</span></span>  
  
<span data-ttu-id="72192-834">如果類別繼承自<see cref="T:System.Data.Common.DbDataAdapter" />支援批次，該類別會覆寫這個方法。</span><span class="sxs-lookup"><span data-stu-id="72192-834">If a class that inherits from <see cref="T:System.Data.Common.DbDataAdapter" /> supports batches, that class overrides this method.</span></span> <span data-ttu-id="72192-835">這個方法可讓類別處置任何資源配置給支援批次的機會。</span><span class="sxs-lookup"><span data-stu-id="72192-835">This method gives the class the opportunity to dispose of any resources allocated to support batching.</span></span> <span data-ttu-id="72192-836">例如，類別可能會取消配置保存命令批次中的資料結構。</span><span class="sxs-lookup"><span data-stu-id="72192-836">For example, the class may deallocate the data structure that holds the commands in the batch.</span></span></para></block>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="72192-837">DbProviderFactory (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="72192-837">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="72192-838">ADO.NET 概觀</span><span class="sxs-lookup"><span data-stu-id="72192-838">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Update">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="72192-839">藉由執行個別的 INSERT、 UPDATE 或 DELETE 陳述式，針對每個插入、 更新或刪除的資料列以更新資料庫中的值<see cref="T:System.Data.DataSet" />。</span><span class="sxs-lookup"><span data-stu-id="72192-839">Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the <see cref="T:System.Data.DataSet" />.</span></span></summary>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="72192-840">ADO.NET 概觀</span><span class="sxs-lookup"><span data-stu-id="72192-840">ADO.NET Overview</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public int Update (System.Data.DataRow[] dataRows);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Update(class System.Data.DataRow[] dataRows) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Update (dataRows As DataRow()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Update(cli::array &lt;System::Data::DataRow ^&gt; ^ dataRows);" />
      <MemberSignature Language="F#" Value="override this.Update : System.Data.DataRow[] -&gt; int" Usage="dbDataAdapter.Update dataRows" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataRows" Type="System.Data.DataRow[]" />
      </Parameters>
      <Docs>
        <param name="dataRows"><span data-ttu-id="72192-841">陣列<see cref="T:System.Data.DataRow" />用來更新資料來源的物件。</span><span class="sxs-lookup"><span data-stu-id="72192-841">An array of <see cref="T:System.Data.DataRow" /> objects used to update the data source.</span></span></param>
        <summary><span data-ttu-id="72192-842">藉由執行個別的 INSERT、 UPDATE 或 DELETE 陳述式，針對每個插入、 更新或刪除的資料列中的指定陣列中以更新資料庫中的值<see cref="T:System.Data.DataSet" />。</span><span class="sxs-lookup"><span data-stu-id="72192-842">Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified array in the <see cref="T:System.Data.DataSet" />.</span></span></summary>
        <returns><span data-ttu-id="72192-843">已成功從更新的資料列數目<see cref="T:System.Data.DataSet" />。</span><span class="sxs-lookup"><span data-stu-id="72192-843">The number of rows successfully updated from the <see cref="T:System.Data.DataSet" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72192-844">當應用程式呼叫<xref:System.Data.Common.DbDataAdapter.Update%2A>方法中，<xref:System.Data.Common.DbDataAdapter>會檢查<xref:System.Data.DataRow.RowState%2A>屬性，並執行必要的 INSERT、 UPDATE 或 DELETE 陳述式，反覆地針對每個的資料列中，然後再根據順序中設定的索引<xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="72192-844">When an application calls the <xref:System.Data.Common.DbDataAdapter.Update%2A> method, the <xref:System.Data.Common.DbDataAdapter> examines the <xref:System.Data.DataRow.RowState%2A> property, and executes the required INSERT, UPDATE, or DELETE statements iteratively for each row, based on the order of the indexes configured in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="72192-845">例如，<xref:System.Data.Common.DbDataAdapter.Update%2A>可能會執行 DELETE 陳述式，後面接著 INSERT 陳述式和另一個的 DELETE 陳述式，由於資料列的排序<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="72192-845">For example, <xref:System.Data.Common.DbDataAdapter.Update%2A> might execute a DELETE statement, followed by an INSERT statement, and then another DELETE statement, due to the ordering of the rows in the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="72192-846">請注意，這些陳述式都不會執行以批次程序;個別更新每個資料列。</span><span class="sxs-lookup"><span data-stu-id="72192-846">It should be noted that these statements are not performed as a batch process; each row is updated individually.</span></span> <span data-ttu-id="72192-847">應用程式可以呼叫<xref:System.Data.DataSet.GetChanges%2A>情況下，您必須在其中控制序列的陳述式型別 （例如，在更新之前插入） 的方法。</span><span class="sxs-lookup"><span data-stu-id="72192-847">An application can call the <xref:System.Data.DataSet.GetChanges%2A> method in situations where you must control the sequence of statement types (for example, INSERTs before UPDATEs).</span></span> <span data-ttu-id="72192-848">如需詳細資訊，請參閱 <<c0> [ 使用 Dataadapter 更新資料來源](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md)。</span><span class="sxs-lookup"><span data-stu-id="72192-848">For more information, see [Updating Data Sources with DataAdapters](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md).</span></span>  
  
 <span data-ttu-id="72192-849">如果尚未指定 INSERT、 UPDATE 或 DELETE 陳述式，<xref:System.Data.Common.DbDataAdapter.Update%2A>方法會產生例外狀況。</span><span class="sxs-lookup"><span data-stu-id="72192-849">If INSERT, UPDATE, or DELETE statements have not been specified, the <xref:System.Data.Common.DbDataAdapter.Update%2A> method generates an exception.</span></span> <span data-ttu-id="72192-850">不過，您可以建立<xref:System.Data.SqlClient.SqlCommandBuilder>或是<xref:System.Data.OleDb.OleDbCommandBuilder>物件來自動產生單一資料表更新的 SQL 陳述式，如果您將設定`SelectCommand`.NET Framework 資料提供者的屬性。</span><span class="sxs-lookup"><span data-stu-id="72192-850">However, you can create a <xref:System.Data.SqlClient.SqlCommandBuilder> or <xref:System.Data.OleDb.OleDbCommandBuilder> object to automatically generate SQL statements for single-table updates if you set the `SelectCommand` property of a .NET Framework data provider.</span></span> <span data-ttu-id="72192-851">然後，您未設定任何其他 SQL 陳述式由產生**CommandBuilder**。</span><span class="sxs-lookup"><span data-stu-id="72192-851">Then, any additional SQL statements that you do not set are generated by the **CommandBuilder**.</span></span> <span data-ttu-id="72192-852">此層代 」 邏輯需要索引鍵資料行資訊會出現在<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="72192-852">This generation logic requires key column information to be present in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="72192-853">如需詳細資訊，請參閱[Commandbuilder 產生命令](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)。</span><span class="sxs-lookup"><span data-stu-id="72192-853">For more information see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
 <span data-ttu-id="72192-854"><xref:System.Data.Common.DbDataAdapter.Update%2A>方法會從第一個對應，然後再執行更新中所列的資料表擷取資料列。</span><span class="sxs-lookup"><span data-stu-id="72192-854">The <xref:System.Data.Common.DbDataAdapter.Update%2A> method retrieves rows from the table listed in the first mapping before performing an update.</span></span> <span data-ttu-id="72192-855"><xref:System.Data.Common.DbDataAdapter.Update%2A>然後重新整理使用值的資料列<xref:System.Data.IDbCommand.UpdatedRowSource%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="72192-855">The <xref:System.Data.Common.DbDataAdapter.Update%2A> then refreshes the row using the value of the <xref:System.Data.IDbCommand.UpdatedRowSource%2A> property.</span></span> <span data-ttu-id="72192-856">傳回任何其他資料列都會被忽略。</span><span class="sxs-lookup"><span data-stu-id="72192-856">Any additional rows returned are ignored.</span></span>  
  
 <span data-ttu-id="72192-857">任何資料載入回後<xref:System.Data.DataSet>，則<xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A>引發事件時，讓使用者能夠檢查協調<xref:System.Data.DataSet>資料列和任何輸出命令所傳回的參數。</span><span class="sxs-lookup"><span data-stu-id="72192-857">After any data is loaded back into the <xref:System.Data.DataSet>, the <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised, allowing the user to inspect the reconciled <xref:System.Data.DataSet> row and any output parameters returned by the command.</span></span> <span data-ttu-id="72192-858">已成功更新資料列之後，會接受該資料列所做的變更。</span><span class="sxs-lookup"><span data-stu-id="72192-858">After a row updates successfully, the changes to that row are accepted.</span></span>  
  
 <span data-ttu-id="72192-859">當使用<xref:System.Data.Common.DbDataAdapter.Update%2A>，執行的順序如下所示：</span><span class="sxs-lookup"><span data-stu-id="72192-859">When using <xref:System.Data.Common.DbDataAdapter.Update%2A>, the order of execution is as follows:</span></span>  
  
1.  <span data-ttu-id="72192-860">中的值<xref:System.Data.DataRow>會移至 參數值。</span><span class="sxs-lookup"><span data-stu-id="72192-860">The values in the <xref:System.Data.DataRow> are moved to the parameter values.</span></span>  
  
2.  <span data-ttu-id="72192-861">便會引發 <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> 事件。</span><span class="sxs-lookup"><span data-stu-id="72192-861">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> event is raised.</span></span>  
  
3.  <span data-ttu-id="72192-862">執行命令。</span><span class="sxs-lookup"><span data-stu-id="72192-862">The command executes.</span></span>  
  
4.  <span data-ttu-id="72192-863">如果命令設定為`FirstReturnedRecord`，將第一個傳回的結果會放在<xref:System.Data.DataRow>。</span><span class="sxs-lookup"><span data-stu-id="72192-863">If the command is set to `FirstReturnedRecord`, the first returned result is placed in the <xref:System.Data.DataRow>.</span></span>  
  
5.  <span data-ttu-id="72192-864">如果沒有輸出參數，它們會放在<xref:System.Data.DataRow>。</span><span class="sxs-lookup"><span data-stu-id="72192-864">If there are output parameters, they are placed in the <xref:System.Data.DataRow>.</span></span>  
  
6.  <span data-ttu-id="72192-865">便會引發 <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> 事件。</span><span class="sxs-lookup"><span data-stu-id="72192-865">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised.</span></span>  
  
7.  <span data-ttu-id="72192-866">呼叫 <xref:System.Data.DataRow.AcceptChanges%2A>。</span><span class="sxs-lookup"><span data-stu-id="72192-866"><xref:System.Data.DataRow.AcceptChanges%2A> is called.</span></span>  
  
 <span data-ttu-id="72192-867">每個相關聯的命令<xref:System.Data.Common.DbDataAdapter>通常都有一個與其相關聯的參數集合。</span><span class="sxs-lookup"><span data-stu-id="72192-867">Each command associated with the <xref:System.Data.Common.DbDataAdapter> usually has a parameters collection associated with it.</span></span> <span data-ttu-id="72192-868">參數會對應至目前的資料列，透過`SourceColumn`並`SourceVersion`屬性的.NET Framework 資料提供者的`Parameter`類別。</span><span class="sxs-lookup"><span data-stu-id="72192-868">Parameters are mapped to the current row through the `SourceColumn` and `SourceVersion` properties of a .NET Framework data provider's `Parameter` class.</span></span> <span data-ttu-id="72192-869">`SourceColumn` 是指<xref:System.Data.DataTable>資料行，<xref:System.Data.Common.DbDataAdapter>以取得目前資料列的參數值的參考。</span><span class="sxs-lookup"><span data-stu-id="72192-869">`SourceColumn` refers to a <xref:System.Data.DataTable> column that the <xref:System.Data.Common.DbDataAdapter> references to obtain parameter values for the current row.</span></span>  
  
 <span data-ttu-id="72192-870">`SourceColumn` 在套用任何資料表對應之前，是指未對應的資料行名稱。</span><span class="sxs-lookup"><span data-stu-id="72192-870">`SourceColumn` refers to the unmapped column name before any table mappings have been applied.</span></span> <span data-ttu-id="72192-871">如果`SourceColumn`指的是不存在的資料行中，所採取的動作取決於下列其中一種<xref:System.Data.MissingMappingAction>值。</span><span class="sxs-lookup"><span data-stu-id="72192-871">If `SourceColumn` refers to a nonexistent column, the action taken depends on one of the following <xref:System.Data.MissingMappingAction> values.</span></span>  
  
|<span data-ttu-id="72192-872">列舉值</span><span class="sxs-lookup"><span data-stu-id="72192-872">Enumeration value</span></span>|<span data-ttu-id="72192-873">採取的動作</span><span class="sxs-lookup"><span data-stu-id="72192-873">Action taken</span></span>|  
|-----------------------|------------------|  
|`MissingMappingAction.Passthrough`|<span data-ttu-id="72192-874">使用中的資料表名稱與來源資料行名稱<xref:System.Data.DataSet>如果不不存在任何對應。</span><span class="sxs-lookup"><span data-stu-id="72192-874">Use the source column names and table names in the <xref:System.Data.DataSet> if no mapping is present.</span></span>|  
|`MissingMappingAction.Ignore`|<span data-ttu-id="72192-875">A<xref:System.SystemException>產生。</span><span class="sxs-lookup"><span data-stu-id="72192-875">A <xref:System.SystemException> is generated.</span></span> <span data-ttu-id="72192-876">對應已明確設定，當遺漏對應的輸入參數通常是錯誤的結果。</span><span class="sxs-lookup"><span data-stu-id="72192-876">When the mappings are explicitly set, a missing mapping for an input parameter is usually the result of an error.</span></span>|  
|`MissingMappingAction.Error`|<span data-ttu-id="72192-877">A<xref:System.SystemException>產生。</span><span class="sxs-lookup"><span data-stu-id="72192-877">A <xref:System.SystemException> is generated.</span></span>|  
  
 <span data-ttu-id="72192-878">`SourceColumn`屬性也會用來對應輸出的值，或輸入/輸出參數傳回`DataSet`。</span><span class="sxs-lookup"><span data-stu-id="72192-878">The `SourceColumn` property is also used to map the value for output or input/output parameters back to the `DataSet`.</span></span> <span data-ttu-id="72192-879">如果它是指不存在的資料行，則會產生例外狀況。</span><span class="sxs-lookup"><span data-stu-id="72192-879">An exception is generated if it refers to a nonexistent column.</span></span>  
  
 <span data-ttu-id="72192-880">`SourceVersion`屬性的.NET Framework 資料提供者的`Parameter`類別會決定是否要使用的原始、 目前、 或已提議版本資料行的值。</span><span class="sxs-lookup"><span data-stu-id="72192-880">The `SourceVersion` property of a .NET Framework data provider's `Parameter` class determines whether to use the Original, Current, or Proposed version of the column value.</span></span> <span data-ttu-id="72192-881">這項功能通常用於在 UPDATE 陳述式來檢查有開放式同步存取違規的 WHERE 子句中包含原始值。</span><span class="sxs-lookup"><span data-stu-id="72192-881">This capability is often used to include original values in the WHERE clause of an UPDATE statement to check for optimistic concurrency violations.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="72192-882">如果在更新資料列時發生錯誤，會擲回例外狀況，並執行更新已停止。</span><span class="sxs-lookup"><span data-stu-id="72192-882">If an error occurs while updating a row, an exception is thrown and execution of the update is discontinued.</span></span> <span data-ttu-id="72192-883">若要繼續更新作業，而不會產生例外狀況，當發生錯誤時，設定<xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A>屬性，以`true`再呼叫<xref:System.Data.Common.DbDataAdapter.Update%2A>。</span><span class="sxs-lookup"><span data-stu-id="72192-883">To continue the update operation without generating exceptions when an error is encountered, set the <xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A> property to `true` before calling <xref:System.Data.Common.DbDataAdapter.Update%2A>.</span></span> <span data-ttu-id="72192-884">您也可以回應內每個資料列依錯誤`RowUpdated`DataAdapter 的事件。</span><span class="sxs-lookup"><span data-stu-id="72192-884">You may also respond to errors on a per-row basis within the `RowUpdated` event of a DataAdapter.</span></span> <span data-ttu-id="72192-885">若要繼續更新作業，而不會產生例外狀況內`RowUpdated`事件，設定<xref:System.Data.Common.RowUpdatedEventArgs.Status%2A>屬性<xref:System.Data.Common.RowUpdatedEventArgs>至<xref:System.Data.UpdateStatus.Continue>。</span><span class="sxs-lookup"><span data-stu-id="72192-885">To continue the update operation without generating an exception within the `RowUpdated` event, set the <xref:System.Data.Common.RowUpdatedEventArgs.Status%2A> property of the <xref:System.Data.Common.RowUpdatedEventArgs> to <xref:System.Data.UpdateStatus.Continue>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="72192-886">下列範例會使用衍生的類別中， <xref:System.Data.OleDb.OleDbDataAdapter>、 更新資料來源。</span><span class="sxs-lookup"><span data-stu-id="72192-886">The following example uses the derived class, <xref:System.Data.OleDb.OleDbDataAdapter>, to update the data source.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.Update1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Update1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.Update1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Update1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="72192-887"><see cref="T:System.Data.DataSet" /> 無效。</span><span class="sxs-lookup"><span data-stu-id="72192-887">The <see cref="T:System.Data.DataSet" /> is invalid.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="72192-888">來源資料表無效。</span><span class="sxs-lookup"><span data-stu-id="72192-888">The source table is invalid.</span></span></exception>
        <exception cref="T:System.SystemException"><span data-ttu-id="72192-889">否<see cref="T:System.Data.DataRow" />存在更新。</span><span class="sxs-lookup"><span data-stu-id="72192-889">No <see cref="T:System.Data.DataRow" /> exists to update.</span></span>  
  
<span data-ttu-id="72192-890">-或-</span><span class="sxs-lookup"><span data-stu-id="72192-890">-or-</span></span> 
<span data-ttu-id="72192-891">否<see cref="T:System.Data.DataTable" />存在更新。</span><span class="sxs-lookup"><span data-stu-id="72192-891">No <see cref="T:System.Data.DataTable" /> exists to update.</span></span>  
  
<span data-ttu-id="72192-892">-或-</span><span class="sxs-lookup"><span data-stu-id="72192-892">-or-</span></span> 
<span data-ttu-id="72192-893">否<see cref="T:System.Data.DataSet" />存在以做為來源。</span><span class="sxs-lookup"><span data-stu-id="72192-893">No <see cref="T:System.Data.DataSet" /> exists to use as a source.</span></span></exception>
        <exception cref="T:System.Data.DBConcurrencyException"><span data-ttu-id="72192-894">嘗試執行 INSERT、 UPDATE 或 DELETE 陳述式卻沒有受影響的資料錄。</span><span class="sxs-lookup"><span data-stu-id="72192-894">An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md"><span data-ttu-id="72192-895">操作資料 (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="72192-895">Manipulating Data (ADO.NET)</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="72192-896">DbProviderFactory (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="72192-896">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="72192-897">ADO.NET 概觀</span><span class="sxs-lookup"><span data-stu-id="72192-897">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public override int Update (System.Data.DataSet dataSet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Update(class System.Data.DataSet dataSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int Update(System::Data::DataSet ^ dataSet);" />
      <MemberSignature Language="F#" Value="override this.Update : System.Data.DataSet -&gt; int" Usage="dbDataAdapter.Update dataSet" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataAdapter.Update(System.Data.DataSet)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
      </Parameters>
      <Docs>
        <param name="dataSet"><span data-ttu-id="72192-898"><see cref="T:System.Data.DataSet" />用來更新資料來源。</span><span class="sxs-lookup"><span data-stu-id="72192-898">The <see cref="T:System.Data.DataSet" /> used to update the data source.</span></span></param>
        <summary><span data-ttu-id="72192-899">執行個別的 INSERT、 UPDATE 或 DELETE 陳述式，針對每個插入、 更新或刪除的資料列中指定的更新資料庫中的值<see cref="T:System.Data.DataSet" />。</span><span class="sxs-lookup"><span data-stu-id="72192-899">Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified <see cref="T:System.Data.DataSet" />.</span></span></summary>
        <returns><span data-ttu-id="72192-900">已成功從更新的資料列數目<see cref="T:System.Data.DataSet" />。</span><span class="sxs-lookup"><span data-stu-id="72192-900">The number of rows successfully updated from the <see cref="T:System.Data.DataSet" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72192-901">當應用程式呼叫<xref:System.Data.Common.DbDataAdapter.Update%2A>方法中，<xref:System.Data.Common.DbDataAdapter>會檢查<xref:System.Data.DataRow.RowState%2A>屬性，並執行必要的 INSERT、 UPDATE 或 DELETE 陳述式，反覆地針對每個的資料列中，然後再根據順序中設定的索引<xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="72192-901">When an application calls the <xref:System.Data.Common.DbDataAdapter.Update%2A> method, the <xref:System.Data.Common.DbDataAdapter> examines the <xref:System.Data.DataRow.RowState%2A> property, and executes the required INSERT, UPDATE, or DELETE statements iteratively for each row, based on the order of the indexes configured in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="72192-902">例如，<xref:System.Data.Common.DbDataAdapter.Update%2A>可能會執行 DELETE 陳述式，後面接著 INSERT 陳述式和另一個的 DELETE 陳述式，由於資料列的排序<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="72192-902">For example, <xref:System.Data.Common.DbDataAdapter.Update%2A> might execute a DELETE statement, followed by an INSERT statement, and then another DELETE statement, due to the ordering of the rows in the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="72192-903">請注意，這些陳述式都不會執行以批次程序;個別更新每個資料列。</span><span class="sxs-lookup"><span data-stu-id="72192-903">It should be noted that these statements are not performed as a batch process; each row is updated individually.</span></span> <span data-ttu-id="72192-904">應用程式可以呼叫<xref:System.Data.DataSet.GetChanges%2A>情況下，您必須在其中控制序列的陳述式型別 （例如，在更新之前插入） 的方法。</span><span class="sxs-lookup"><span data-stu-id="72192-904">An application can call the <xref:System.Data.DataSet.GetChanges%2A> method in situations where you must control the sequence of statement types (for example, INSERTs before UPDATEs).</span></span> <span data-ttu-id="72192-905">如需詳細資訊，請參閱 <<c0> [ 使用 Dataadapter 更新資料來源](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md)。</span><span class="sxs-lookup"><span data-stu-id="72192-905">For more information, see [Updating Data Sources with DataAdapters](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md).</span></span>  
  
 <span data-ttu-id="72192-906">如果尚未指定 INSERT、 UPDATE 或 DELETE 陳述式，<xref:System.Data.Common.DbDataAdapter.Update%2A>方法會產生例外狀況。</span><span class="sxs-lookup"><span data-stu-id="72192-906">If INSERT, UPDATE, or DELETE statements have not been specified, the <xref:System.Data.Common.DbDataAdapter.Update%2A> method generates an exception.</span></span> <span data-ttu-id="72192-907">不過，您可以建立<xref:System.Data.SqlClient.SqlCommandBuilder>或是<xref:System.Data.OleDb.OleDbCommandBuilder>物件來自動產生單一資料表更新的 SQL 陳述式，如果您將設定`SelectCommand`.NET Framework 資料提供者的屬性。</span><span class="sxs-lookup"><span data-stu-id="72192-907">However, you can create a <xref:System.Data.SqlClient.SqlCommandBuilder> or <xref:System.Data.OleDb.OleDbCommandBuilder> object to automatically generate SQL statements for single-table updates if you set the `SelectCommand` property of a .NET Framework data provider.</span></span> <span data-ttu-id="72192-908">然後，您未設定任何其他 SQL 陳述式由產生**CommandBuilder**。</span><span class="sxs-lookup"><span data-stu-id="72192-908">Then, any additional SQL statements that you do not set are generated by the **CommandBuilder**.</span></span> <span data-ttu-id="72192-909">此層代 」 邏輯需要索引鍵資料行資訊會出現在<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="72192-909">This generation logic requires key column information to be present in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="72192-910">如需詳細資訊，請參閱[Commandbuilder 產生命令](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)。</span><span class="sxs-lookup"><span data-stu-id="72192-910">For more information see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
 <span data-ttu-id="72192-911"><xref:System.Data.Common.DbDataAdapter.Update%2A>方法會從第一個對應，然後再執行更新中所列的資料表擷取資料列。</span><span class="sxs-lookup"><span data-stu-id="72192-911">The <xref:System.Data.Common.DbDataAdapter.Update%2A> method retrieves rows from the table listed in the first mapping before performing an update.</span></span> <span data-ttu-id="72192-912"><xref:System.Data.Common.DbDataAdapter.Update%2A>然後重新整理使用值的資料列<xref:System.Data.IDbCommand.UpdatedRowSource%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="72192-912">The <xref:System.Data.Common.DbDataAdapter.Update%2A> then refreshes the row using the value of the <xref:System.Data.IDbCommand.UpdatedRowSource%2A> property.</span></span> <span data-ttu-id="72192-913">傳回任何其他資料列都會被忽略。</span><span class="sxs-lookup"><span data-stu-id="72192-913">Any additional rows returned are ignored.</span></span>  
  
 <span data-ttu-id="72192-914">任何資料載入回後<xref:System.Data.DataSet>，則<xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A>引發事件時，讓使用者能夠檢查協調<xref:System.Data.DataSet>資料列和任何輸出命令所傳回的參數。</span><span class="sxs-lookup"><span data-stu-id="72192-914">After any data is loaded back into the <xref:System.Data.DataSet>, the <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised, allowing the user to inspect the reconciled <xref:System.Data.DataSet> row and any output parameters returned by the command.</span></span> <span data-ttu-id="72192-915">已成功更新資料列之後，會接受該資料列所做的變更。</span><span class="sxs-lookup"><span data-stu-id="72192-915">After a row updates successfully, the changes to that row are accepted.</span></span>  
  
 <span data-ttu-id="72192-916">當使用<xref:System.Data.Common.DbDataAdapter.Update%2A>，執行的順序如下所示：</span><span class="sxs-lookup"><span data-stu-id="72192-916">When using <xref:System.Data.Common.DbDataAdapter.Update%2A>, the order of execution is as follows:</span></span>  
  
1.  <span data-ttu-id="72192-917">中的值<xref:System.Data.DataRow>會移至 參數值。</span><span class="sxs-lookup"><span data-stu-id="72192-917">The values in the <xref:System.Data.DataRow> are moved to the parameter values.</span></span>  
  
2.  <span data-ttu-id="72192-918">便會引發 <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> 事件。</span><span class="sxs-lookup"><span data-stu-id="72192-918">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> event is raised.</span></span>  
  
3.  <span data-ttu-id="72192-919">執行命令。</span><span class="sxs-lookup"><span data-stu-id="72192-919">The command executes.</span></span>  
  
4.  <span data-ttu-id="72192-920">如果命令設定為`FirstReturnedRecord`，則第一個傳回的結果會放在<xref:System.Data.DataRow>。</span><span class="sxs-lookup"><span data-stu-id="72192-920">If the command is set to `FirstReturnedRecord`, then the first returned result is placed in the <xref:System.Data.DataRow>.</span></span>  
  
5.  <span data-ttu-id="72192-921">如果沒有輸出參數，它們會放在<xref:System.Data.DataRow>。</span><span class="sxs-lookup"><span data-stu-id="72192-921">If there are output parameters, they are placed in the <xref:System.Data.DataRow>.</span></span>  
  
6.  <span data-ttu-id="72192-922">便會引發 <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> 事件。</span><span class="sxs-lookup"><span data-stu-id="72192-922">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised.</span></span>  
  
7.  <span data-ttu-id="72192-923">呼叫 <xref:System.Data.DataRow.AcceptChanges%2A>。</span><span class="sxs-lookup"><span data-stu-id="72192-923"><xref:System.Data.DataRow.AcceptChanges%2A> is called.</span></span>  
  
 <span data-ttu-id="72192-924">每個相關聯的命令<xref:System.Data.Common.DbDataAdapter>通常都有一個與其相關聯的參數集合。</span><span class="sxs-lookup"><span data-stu-id="72192-924">Each command associated with the <xref:System.Data.Common.DbDataAdapter> usually has a parameters collection associated with it.</span></span> <span data-ttu-id="72192-925">參數會對應至目前的資料列，透過`SourceColumn`並`SourceVersion`屬性的.NET Framework 資料提供者的`Parameter`類別。</span><span class="sxs-lookup"><span data-stu-id="72192-925">Parameters are mapped to the current row through the `SourceColumn` and `SourceVersion` properties of a .NET Framework data provider's `Parameter` class.</span></span> <span data-ttu-id="72192-926">`SourceColumn` 是指<xref:System.Data.DataTable>資料行，<xref:System.Data.Common.DbDataAdapter>以取得目前資料列的參數值的參考。</span><span class="sxs-lookup"><span data-stu-id="72192-926">`SourceColumn` refers to a <xref:System.Data.DataTable> column that the <xref:System.Data.Common.DbDataAdapter> references to obtain parameter values for the current row.</span></span>  
  
 <span data-ttu-id="72192-927">`SourceColumn` 在套用任何資料表對應之前，是指未對應的資料行名稱。</span><span class="sxs-lookup"><span data-stu-id="72192-927">`SourceColumn` refers to the unmapped column name before any table mappings have been applied.</span></span> <span data-ttu-id="72192-928">如果`SourceColumn`指的是不存在的資料行中，所採取的動作取決於下列其中一種<xref:System.Data.MissingMappingAction>值。</span><span class="sxs-lookup"><span data-stu-id="72192-928">If `SourceColumn` refers to a nonexistent column, the action taken depends on one of the following <xref:System.Data.MissingMappingAction> values.</span></span>  
  
|<span data-ttu-id="72192-929">列舉值</span><span class="sxs-lookup"><span data-stu-id="72192-929">Enumeration value</span></span>|<span data-ttu-id="72192-930">採取的動作</span><span class="sxs-lookup"><span data-stu-id="72192-930">Action taken</span></span>|  
|-----------------------|------------------|  
|`MissingMappingAction.Passthrough`|<span data-ttu-id="72192-931">使用中的資料表名稱與來源資料行名稱<xref:System.Data.DataSet>如果不不存在任何對應。</span><span class="sxs-lookup"><span data-stu-id="72192-931">Use the source column names and table names in the <xref:System.Data.DataSet> if no mapping is present.</span></span>|  
|`MissingMappingAction.Ignore`|<span data-ttu-id="72192-932">A<xref:System.SystemException>產生。</span><span class="sxs-lookup"><span data-stu-id="72192-932">A <xref:System.SystemException> is generated.</span></span> <span data-ttu-id="72192-933">對應已明確設定，當遺漏對應的輸入參數通常是錯誤的結果。</span><span class="sxs-lookup"><span data-stu-id="72192-933">When the mappings are explicitly set, a missing mapping for an input parameter is usually the result of an error.</span></span>|  
|`MissingMappingAction.Error`|<span data-ttu-id="72192-934">A<xref:System.SystemException>產生。</span><span class="sxs-lookup"><span data-stu-id="72192-934">A <xref:System.SystemException> is generated.</span></span>|  
  
 <span data-ttu-id="72192-935">`SourceColumn`屬性也會用來對應輸出的值，或輸入/輸出參數傳回`DataSet`。</span><span class="sxs-lookup"><span data-stu-id="72192-935">The `SourceColumn` property is also used to map the value for output or input/output parameters back to the `DataSet`.</span></span> <span data-ttu-id="72192-936">如果它是指不存在的資料行，則會產生例外狀況。</span><span class="sxs-lookup"><span data-stu-id="72192-936">An exception is generated if it refers to a nonexistent column.</span></span>  
  
 <span data-ttu-id="72192-937">`SourceVersion`屬性的.NET Framework 資料提供者的`Parameter`類別會決定是否要使用的原始、 目前、 或已提議版本資料行的值。</span><span class="sxs-lookup"><span data-stu-id="72192-937">The `SourceVersion` property of a .NET Framework data provider's `Parameter` class determines whether to use the Original, Current, or Proposed version of the column value.</span></span> <span data-ttu-id="72192-938">這項功能通常用於在 UPDATE 陳述式來檢查有開放式同步存取違規的 WHERE 子句中包含原始值。</span><span class="sxs-lookup"><span data-stu-id="72192-938">This capability is often used to include original values in the WHERE clause of an UPDATE statement to check for optimistic concurrency violations.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="72192-939">如果在更新資料列時發生錯誤，會擲回例外狀況，並執行更新已停止。</span><span class="sxs-lookup"><span data-stu-id="72192-939">If an error occurs while updating a row, an exception is thrown and execution of the update is discontinued.</span></span> <span data-ttu-id="72192-940">若要繼續更新作業，而不會產生例外狀況，當發生錯誤時，設定<xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A>屬性，以`true`再呼叫<xref:System.Data.Common.DbDataAdapter.Update%2A>。</span><span class="sxs-lookup"><span data-stu-id="72192-940">To continue the update operation without generating exceptions when an error is encountered, set the <xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A> property to `true` before calling <xref:System.Data.Common.DbDataAdapter.Update%2A>.</span></span> <span data-ttu-id="72192-941">您也可以回應內每個資料列依錯誤`RowUpdated`DataAdapter 的事件。</span><span class="sxs-lookup"><span data-stu-id="72192-941">You may also respond to errors on a per-row basis within the `RowUpdated` event of a DataAdapter.</span></span> <span data-ttu-id="72192-942">若要繼續更新作業，而不會產生例外狀況內`RowUpdated`事件，設定<xref:System.Data.Common.RowUpdatedEventArgs.Status%2A>屬性<xref:System.Data.Common.RowUpdatedEventArgs>至<xref:System.Data.UpdateStatus.Continue>。</span><span class="sxs-lookup"><span data-stu-id="72192-942">To continue the update operation without generating an exception within the `RowUpdated` event, set the <xref:System.Data.Common.RowUpdatedEventArgs.Status%2A> property of the <xref:System.Data.Common.RowUpdatedEventArgs> to <xref:System.Data.UpdateStatus.Continue>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="72192-943">下列範例會使用衍生的類別中， <xref:System.Data.OleDb.OleDbDataAdapter>、 更新資料來源。</span><span class="sxs-lookup"><span data-stu-id="72192-943">The following example uses the derived class, <xref:System.Data.OleDb.OleDbDataAdapter>, to update the data source.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.Update Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Update Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.Update Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Update Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="72192-944">來源資料表無效。</span><span class="sxs-lookup"><span data-stu-id="72192-944">The source table is invalid.</span></span></exception>
        <exception cref="T:System.Data.DBConcurrencyException"><span data-ttu-id="72192-945">嘗試執行 INSERT、 UPDATE 或 DELETE 陳述式卻沒有受影響的資料錄。</span><span class="sxs-lookup"><span data-stu-id="72192-945">An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md"><span data-ttu-id="72192-946">操作資料 (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="72192-946">Manipulating Data (ADO.NET)</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="72192-947">DbProviderFactory (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="72192-947">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="72192-948">ADO.NET 概觀</span><span class="sxs-lookup"><span data-stu-id="72192-948">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public int Update (System.Data.DataTable dataTable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Update(class System.Data.DataTable dataTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataTable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Update(System::Data::DataTable ^ dataTable);" />
      <MemberSignature Language="F#" Value="override this.Update : System.Data.DataTable -&gt; int" Usage="dbDataAdapter.Update dataTable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataTable" Type="System.Data.DataTable" />
      </Parameters>
      <Docs>
        <param name="dataTable"><span data-ttu-id="72192-949"><see cref="T:System.Data.DataTable" />用來更新資料來源。</span><span class="sxs-lookup"><span data-stu-id="72192-949">The <see cref="T:System.Data.DataTable" /> used to update the data source.</span></span></param>
        <summary><span data-ttu-id="72192-950">執行個別的 INSERT、 UPDATE 或 DELETE 陳述式，針對每個插入、 更新或刪除的資料列中指定的更新資料庫中的值<see cref="T:System.Data.DataTable" />。</span><span class="sxs-lookup"><span data-stu-id="72192-950">Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified <see cref="T:System.Data.DataTable" />.</span></span></summary>
        <returns><span data-ttu-id="72192-951">已成功從更新的資料列數目<see cref="T:System.Data.DataTable" />。</span><span class="sxs-lookup"><span data-stu-id="72192-951">The number of rows successfully updated from the <see cref="T:System.Data.DataTable" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72192-952">當應用程式呼叫<xref:System.Data.Common.DbDataAdapter.Update%2A>方法中，<xref:System.Data.Common.DbDataAdapter>會檢查<xref:System.Data.DataRow.RowState%2A>屬性，並執行必要的 INSERT、 UPDATE 或 DELETE 陳述式，反覆地針對每個的資料列中，然後再根據順序中設定的索引<xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="72192-952">When an application calls the <xref:System.Data.Common.DbDataAdapter.Update%2A> method, the <xref:System.Data.Common.DbDataAdapter> examines the <xref:System.Data.DataRow.RowState%2A> property, and executes the required INSERT, UPDATE, or DELETE statements iteratively for each row, based on the order of the indexes configured in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="72192-953">例如，<xref:System.Data.Common.DbDataAdapter.Update%2A>可能會執行 DELETE 陳述式，後面接著 INSERT 陳述式和另一個的 DELETE 陳述式，由於資料列的排序<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="72192-953">For example, <xref:System.Data.Common.DbDataAdapter.Update%2A> might execute a DELETE statement, followed by an INSERT statement, and then another DELETE statement, due to the ordering of the rows in the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="72192-954">請注意，這些陳述式都不會執行以批次程序;個別更新每個資料列。</span><span class="sxs-lookup"><span data-stu-id="72192-954">It should be noted that these statements are not performed as a batch process; each row is updated individually.</span></span> <span data-ttu-id="72192-955">應用程式可以呼叫<xref:System.Data.DataSet.GetChanges%2A>情況下，您必須在其中控制序列的陳述式型別 （例如，在更新之前插入） 的方法。</span><span class="sxs-lookup"><span data-stu-id="72192-955">An application can call the <xref:System.Data.DataSet.GetChanges%2A> method in situations where you must control the sequence of statement types (for example, INSERTs before UPDATEs).</span></span> <span data-ttu-id="72192-956">如需詳細資訊，請參閱 <<c0> [ 使用 Dataadapter 更新資料來源](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md)。</span><span class="sxs-lookup"><span data-stu-id="72192-956">For more information, see [Updating Data Sources with DataAdapters](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md).</span></span>  
  
 <span data-ttu-id="72192-957">如果尚未指定 INSERT、 UPDATE 或 DELETE 陳述式，<xref:System.Data.Common.DbDataAdapter.Update%2A>方法會產生例外狀況。</span><span class="sxs-lookup"><span data-stu-id="72192-957">If INSERT, UPDATE, or DELETE statements have not been specified, the <xref:System.Data.Common.DbDataAdapter.Update%2A> method generates an exception.</span></span> <span data-ttu-id="72192-958">不過，您可以建立<xref:System.Data.SqlClient.SqlCommandBuilder>或是<xref:System.Data.OleDb.OleDbCommandBuilder>物件來自動產生單一資料表更新的 SQL 陳述式，如果您將設定`SelectCommand`.NET Framework 資料提供者的屬性。</span><span class="sxs-lookup"><span data-stu-id="72192-958">However, you can create a <xref:System.Data.SqlClient.SqlCommandBuilder> or <xref:System.Data.OleDb.OleDbCommandBuilder> object to automatically generate SQL statements for single-table updates if you set the `SelectCommand` property of a .NET Framework data provider.</span></span> <span data-ttu-id="72192-959">然後，您未設定任何其他 SQL 陳述式由產生**CommandBuilder**。</span><span class="sxs-lookup"><span data-stu-id="72192-959">Then, any additional SQL statements that you do not set are generated by the **CommandBuilder**.</span></span> <span data-ttu-id="72192-960">此層代 」 邏輯需要索引鍵資料行資訊會出現在<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="72192-960">This generation logic requires key column information to be present in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="72192-961">如需詳細資訊，請參閱[Commandbuilder 產生命令](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)。</span><span class="sxs-lookup"><span data-stu-id="72192-961">For more information see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
 <span data-ttu-id="72192-962"><xref:System.Data.Common.DbDataAdapter.Update%2A>方法會從第一個對應，然後再執行更新中所列的資料表擷取資料列。</span><span class="sxs-lookup"><span data-stu-id="72192-962">The <xref:System.Data.Common.DbDataAdapter.Update%2A> method retrieves rows from the table listed in the first mapping before performing an update.</span></span> <span data-ttu-id="72192-963"><xref:System.Data.Common.DbDataAdapter.Update%2A>然後重新整理使用值的資料列<xref:System.Data.IDbCommand.UpdatedRowSource%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="72192-963">The <xref:System.Data.Common.DbDataAdapter.Update%2A> then refreshes the row using the value of the <xref:System.Data.IDbCommand.UpdatedRowSource%2A> property.</span></span> <span data-ttu-id="72192-964">傳回任何其他資料列都會被忽略。</span><span class="sxs-lookup"><span data-stu-id="72192-964">Any additional rows returned are ignored.</span></span>  
  
 <span data-ttu-id="72192-965">任何資料載入回後<xref:System.Data.DataSet>，則<xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A>引發事件時，讓使用者能夠檢查協調<xref:System.Data.DataSet>資料列和任何輸出命令所傳回的參數。</span><span class="sxs-lookup"><span data-stu-id="72192-965">After any data is loaded back into the <xref:System.Data.DataSet>, the <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised, allowing the user to inspect the reconciled <xref:System.Data.DataSet> row and any output parameters returned by the command.</span></span> <span data-ttu-id="72192-966">已成功更新資料列之後，會接受該資料列所做的變更。</span><span class="sxs-lookup"><span data-stu-id="72192-966">After a row updates successfully, the changes to that row are accepted.</span></span>  
  
 <span data-ttu-id="72192-967">當使用<xref:System.Data.Common.DbDataAdapter.Update%2A>，執行的順序如下所示：</span><span class="sxs-lookup"><span data-stu-id="72192-967">When using <xref:System.Data.Common.DbDataAdapter.Update%2A>, the order of execution is as follows:</span></span>  
  
1.  <span data-ttu-id="72192-968">中的值<xref:System.Data.DataRow>會移至 參數值。</span><span class="sxs-lookup"><span data-stu-id="72192-968">The values in the <xref:System.Data.DataRow> are moved to the parameter values.</span></span>  
  
2.  <span data-ttu-id="72192-969">便會引發 <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> 事件。</span><span class="sxs-lookup"><span data-stu-id="72192-969">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> event is raised.</span></span>  
  
3.  <span data-ttu-id="72192-970">執行命令。</span><span class="sxs-lookup"><span data-stu-id="72192-970">The command executes.</span></span>  
  
4.  <span data-ttu-id="72192-971">如果命令設定為`FirstReturnedRecord`，則第一個傳回的結果會放在<xref:System.Data.DataRow>。</span><span class="sxs-lookup"><span data-stu-id="72192-971">If the command is set to `FirstReturnedRecord`, then the first returned result is placed in the <xref:System.Data.DataRow>.</span></span>  
  
5.  <span data-ttu-id="72192-972">如果沒有輸出參數，它們會放在<xref:System.Data.DataRow>。</span><span class="sxs-lookup"><span data-stu-id="72192-972">If there are output parameters, they are placed in the <xref:System.Data.DataRow>.</span></span>  
  
6.  <span data-ttu-id="72192-973">便會引發 <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> 事件。</span><span class="sxs-lookup"><span data-stu-id="72192-973">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised.</span></span>  
  
7.  <span data-ttu-id="72192-974">呼叫 <xref:System.Data.DataRow.AcceptChanges%2A>。</span><span class="sxs-lookup"><span data-stu-id="72192-974"><xref:System.Data.DataRow.AcceptChanges%2A> is called.</span></span>  
  
 <span data-ttu-id="72192-975">每個相關聯的命令<xref:System.Data.Common.DbDataAdapter>通常都有一個與其相關聯的參數集合。</span><span class="sxs-lookup"><span data-stu-id="72192-975">Each command associated with the <xref:System.Data.Common.DbDataAdapter> usually has a parameters collection associated with it.</span></span> <span data-ttu-id="72192-976">參數會對應至目前的資料列，透過`SourceColumn`並`SourceVersion`屬性的.NET Framework 資料提供者的`Parameter`類別。</span><span class="sxs-lookup"><span data-stu-id="72192-976">Parameters are mapped to the current row through the `SourceColumn` and `SourceVersion` properties of a .NET Framework data provider's `Parameter` class.</span></span> <span data-ttu-id="72192-977">`SourceColumn` 是指<xref:System.Data.DataTable>資料行，<xref:System.Data.Common.DbDataAdapter>以取得目前資料列的參數值的參考。</span><span class="sxs-lookup"><span data-stu-id="72192-977">`SourceColumn` refers to a <xref:System.Data.DataTable> column that the <xref:System.Data.Common.DbDataAdapter> references to obtain parameter values for the current row.</span></span>  
  
 <span data-ttu-id="72192-978">`SourceColumn` 在套用任何資料表對應之前，是指未對應的資料行名稱。</span><span class="sxs-lookup"><span data-stu-id="72192-978">`SourceColumn` refers to the unmapped column name before any table mappings have been applied.</span></span> <span data-ttu-id="72192-979">如果`SourceColumn`指的是不存在的資料行中，所採取的動作取決於下列其中一種<xref:System.Data.MissingMappingAction>值。</span><span class="sxs-lookup"><span data-stu-id="72192-979">If `SourceColumn` refers to a nonexistent column, the action taken depends on one of the following <xref:System.Data.MissingMappingAction> values.</span></span>  
  
|<span data-ttu-id="72192-980">列舉值</span><span class="sxs-lookup"><span data-stu-id="72192-980">Enumeration value</span></span>|<span data-ttu-id="72192-981">採取的動作</span><span class="sxs-lookup"><span data-stu-id="72192-981">Action taken</span></span>|  
|-----------------------|------------------|  
|`MissingMappingAction.Passthrough`|<span data-ttu-id="72192-982">使用中的資料表名稱與來源資料行名稱<xref:System.Data.DataSet>如果不不存在任何對應。</span><span class="sxs-lookup"><span data-stu-id="72192-982">Use the source column names and table names in the <xref:System.Data.DataSet> if no mapping is present.</span></span>|  
|`MissingMappingAction.Ignore`|<span data-ttu-id="72192-983">A<xref:System.SystemException>產生。</span><span class="sxs-lookup"><span data-stu-id="72192-983">A <xref:System.SystemException> is generated.</span></span> <span data-ttu-id="72192-984">對應已明確設定，當遺漏對應的輸入參數通常是錯誤的結果。</span><span class="sxs-lookup"><span data-stu-id="72192-984">When the mappings are explicitly set, a missing mapping for an input parameter is usually the result of an error.</span></span>|  
|`MissingMappingAction.Error`|<span data-ttu-id="72192-985">A<xref:System.SystemException>產生。</span><span class="sxs-lookup"><span data-stu-id="72192-985">A <xref:System.SystemException> is generated.</span></span>|  
  
 <span data-ttu-id="72192-986">`SourceColumn`屬性也會用來對應輸出的值，或輸入/輸出參數傳回`DataSet`。</span><span class="sxs-lookup"><span data-stu-id="72192-986">The `SourceColumn` property is also used to map the value for output or input/output parameters back to the `DataSet`.</span></span> <span data-ttu-id="72192-987">如果它是指不存在的資料行，則會產生例外狀況。</span><span class="sxs-lookup"><span data-stu-id="72192-987">An exception is generated if it refers to a nonexistent column.</span></span>  
  
 <span data-ttu-id="72192-988">`SourceVersion`屬性的.NET Framework 資料提供者的`Parameter`類別會決定是否要使用的原始、 目前、 或已提議版本資料行的值。</span><span class="sxs-lookup"><span data-stu-id="72192-988">The `SourceVersion` property of a .NET Framework data provider's `Parameter` class determines whether to use the Original, Current, or Proposed version of the column value.</span></span> <span data-ttu-id="72192-989">這項功能通常用於在 UPDATE 陳述式來檢查有開放式同步存取違規的 WHERE 子句中包含原始值。</span><span class="sxs-lookup"><span data-stu-id="72192-989">This capability is often used to include original values in the WHERE clause of an UPDATE statement to check for optimistic concurrency violations.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="72192-990">如果在更新資料列時發生錯誤，會擲回例外狀況，並執行更新已停止。</span><span class="sxs-lookup"><span data-stu-id="72192-990">If an error occurs while updating a row, an exception is thrown and execution of the update is discontinued.</span></span> <span data-ttu-id="72192-991">若要繼續更新作業，而不會產生例外狀況，當發生錯誤時，設定<xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A>屬性，以`true`再呼叫<xref:System.Data.Common.DbDataAdapter.Update%2A>。</span><span class="sxs-lookup"><span data-stu-id="72192-991">To continue the update operation without generating exceptions when an error is encountered, set the <xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A> property to `true` before calling <xref:System.Data.Common.DbDataAdapter.Update%2A>.</span></span> <span data-ttu-id="72192-992">您也可以回應內每個資料列依錯誤`RowUpdated`DataAdapter 的事件。</span><span class="sxs-lookup"><span data-stu-id="72192-992">You may also respond to errors on a per-row basis within the `RowUpdated` event of a DataAdapter.</span></span> <span data-ttu-id="72192-993">若要繼續更新作業，而不會產生例外狀況內`RowUpdated`事件，設定<xref:System.Data.Common.RowUpdatedEventArgs.Status%2A>屬性<xref:System.Data.Common.RowUpdatedEventArgs>至<xref:System.Data.UpdateStatus.Continue>。</span><span class="sxs-lookup"><span data-stu-id="72192-993">To continue the update operation without generating an exception within the `RowUpdated` event, set the <xref:System.Data.Common.RowUpdatedEventArgs.Status%2A> property of the <xref:System.Data.Common.RowUpdatedEventArgs> to <xref:System.Data.UpdateStatus.Continue>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="72192-994">下列範例會使用衍生的類別中， <xref:System.Data.OleDb.OleDbDataAdapter>、 更新資料來源。</span><span class="sxs-lookup"><span data-stu-id="72192-994">The following example uses the derived class, <xref:System.Data.OleDb.OleDbDataAdapter>, to update the data source.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.Update2 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Update2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.Update2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Update2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="72192-995"><see cref="T:System.Data.DataSet" /> 無效。</span><span class="sxs-lookup"><span data-stu-id="72192-995">The <see cref="T:System.Data.DataSet" /> is invalid.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="72192-996">來源資料表無效。</span><span class="sxs-lookup"><span data-stu-id="72192-996">The source table is invalid.</span></span></exception>
        <exception cref="T:System.SystemException"><span data-ttu-id="72192-997">否<see cref="T:System.Data.DataRow" />存在更新。</span><span class="sxs-lookup"><span data-stu-id="72192-997">No <see cref="T:System.Data.DataRow" /> exists to update.</span></span>  
  
<span data-ttu-id="72192-998">-或-</span><span class="sxs-lookup"><span data-stu-id="72192-998">-or-</span></span> 
<span data-ttu-id="72192-999">否<see cref="T:System.Data.DataTable" />存在更新。</span><span class="sxs-lookup"><span data-stu-id="72192-999">No <see cref="T:System.Data.DataTable" /> exists to update.</span></span>  
  
<span data-ttu-id="72192-1000">-或-</span><span class="sxs-lookup"><span data-stu-id="72192-1000">-or-</span></span> 
<span data-ttu-id="72192-1001">否<see cref="T:System.Data.DataSet" />存在以做為來源。</span><span class="sxs-lookup"><span data-stu-id="72192-1001">No <see cref="T:System.Data.DataSet" /> exists to use as a source.</span></span></exception>
        <exception cref="T:System.Data.DBConcurrencyException"><span data-ttu-id="72192-1002">嘗試執行 INSERT、 UPDATE 或 DELETE 陳述式卻沒有受影響的資料錄。</span><span class="sxs-lookup"><span data-stu-id="72192-1002">An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md"><span data-ttu-id="72192-1003">操作資料 (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="72192-1003">Manipulating Data (ADO.NET)</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="72192-1004">DbProviderFactory (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="72192-1004">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="72192-1005">ADO.NET 概觀</span><span class="sxs-lookup"><span data-stu-id="72192-1005">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="protected virtual int Update (System.Data.DataRow[] dataRows, System.Data.Common.DataTableMapping tableMapping);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 Update(class System.Data.DataRow[] dataRows, class System.Data.Common.DataTableMapping tableMapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[],System.Data.Common.DataTableMapping)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function Update (dataRows As DataRow(), tableMapping As DataTableMapping) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int Update(cli::array &lt;System::Data::DataRow ^&gt; ^ dataRows, System::Data::Common::DataTableMapping ^ tableMapping);" />
      <MemberSignature Language="F#" Value="override this.Update : System.Data.DataRow[] * System.Data.Common.DataTableMapping -&gt; int" Usage="dbDataAdapter.Update (dataRows, tableMapping)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataRows" Type="System.Data.DataRow[]" />
        <Parameter Name="tableMapping" Type="System.Data.Common.DataTableMapping" />
      </Parameters>
      <Docs>
        <param name="dataRows"><span data-ttu-id="72192-1006">陣列<see cref="T:System.Data.DataRow" />用來更新資料來源的物件。</span><span class="sxs-lookup"><span data-stu-id="72192-1006">An array of <see cref="T:System.Data.DataRow" /> objects used to update the data source.</span></span></param>
        <param name="tableMapping"><span data-ttu-id="72192-1007"><see cref="P:System.Data.IDataAdapter.TableMappings" />若要使用的集合。</span><span class="sxs-lookup"><span data-stu-id="72192-1007">The <see cref="P:System.Data.IDataAdapter.TableMappings" /> collection to use.</span></span></param>
        <summary><span data-ttu-id="72192-1008">藉由執行個別的 INSERT、 UPDATE 或 DELETE 陳述式，針對每個插入、 更新或刪除的指定陣列中的資料列以更新資料庫中的值<see cref="T:System.Data.DataSet" />物件。</span><span class="sxs-lookup"><span data-stu-id="72192-1008">Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified array of <see cref="T:System.Data.DataSet" /> objects.</span></span></summary>
        <returns><span data-ttu-id="72192-1009">已成功從更新的資料列數目<see cref="T:System.Data.DataSet" />。</span><span class="sxs-lookup"><span data-stu-id="72192-1009">The number of rows successfully updated from the <see cref="T:System.Data.DataSet" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72192-1010">當應用程式呼叫<xref:System.Data.Common.DbDataAdapter.Update%2A>方法中，<xref:System.Data.Common.DbDataAdapter>會檢查<xref:System.Data.DataRow.RowState%2A>屬性，並執行必要的 INSERT、 UPDATE 或 DELETE 陳述式，反覆地針對每個的資料列中，然後再根據順序中設定的索引<xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="72192-1010">When an application calls the <xref:System.Data.Common.DbDataAdapter.Update%2A> method, the <xref:System.Data.Common.DbDataAdapter> examines the <xref:System.Data.DataRow.RowState%2A> property, and executes the required INSERT, UPDATE, or DELETE statements iteratively for each row, based on the order of the indexes configured in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="72192-1011">例如，<xref:System.Data.Common.DbDataAdapter.Update%2A>可能會執行 DELETE 陳述式，後面接著 INSERT 陳述式和另一個的 DELETE 陳述式，由於資料列的排序<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="72192-1011">For example, <xref:System.Data.Common.DbDataAdapter.Update%2A> might execute a DELETE statement, followed by an INSERT statement, and then another DELETE statement, due to the ordering of the rows in the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="72192-1012">請注意，這些陳述式都不會執行以批次程序;個別更新每個資料列。</span><span class="sxs-lookup"><span data-stu-id="72192-1012">It should be noted that these statements are not performed as a batch process; each row is updated individually.</span></span> <span data-ttu-id="72192-1013">應用程式可以呼叫<xref:System.Data.DataSet.GetChanges%2A>情況下，您必須在其中控制序列的陳述式型別 （例如，在更新之前插入） 的方法。</span><span class="sxs-lookup"><span data-stu-id="72192-1013">An application can call the <xref:System.Data.DataSet.GetChanges%2A> method in situations where you must control the sequence of statement types (for example, INSERTs before UPDATEs).</span></span> <span data-ttu-id="72192-1014">如需詳細資訊，請參閱 <<c0> [ 使用 Dataadapter 更新資料來源](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md)。</span><span class="sxs-lookup"><span data-stu-id="72192-1014">For more information, see [Updating Data Sources with DataAdapters](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md).</span></span>  
  
 <span data-ttu-id="72192-1015">如果尚未指定 INSERT、 UPDATE 或 DELETE 陳述式，<xref:System.Data.Common.DbDataAdapter.Update%2A>方法會產生例外狀況。</span><span class="sxs-lookup"><span data-stu-id="72192-1015">If INSERT, UPDATE, or DELETE statements have not been specified, the <xref:System.Data.Common.DbDataAdapter.Update%2A> method generates an exception.</span></span> <span data-ttu-id="72192-1016">不過，您可以建立<xref:System.Data.SqlClient.SqlCommandBuilder>或是<xref:System.Data.OleDb.OleDbCommandBuilder>物件來自動產生單一資料表更新的 SQL 陳述式，如果您將設定`SelectCommand`.NET Framework 資料提供者的屬性。</span><span class="sxs-lookup"><span data-stu-id="72192-1016">However, you can create a <xref:System.Data.SqlClient.SqlCommandBuilder> or <xref:System.Data.OleDb.OleDbCommandBuilder> object to automatically generate SQL statements for single-table updates if you set the `SelectCommand` property of a .NET Framework data provider.</span></span> <span data-ttu-id="72192-1017">然後，您未設定任何其他 SQL 陳述式由產生**CommandBuilder**。</span><span class="sxs-lookup"><span data-stu-id="72192-1017">Then, any additional SQL statements that you do not set are generated by the **CommandBuilder**.</span></span> <span data-ttu-id="72192-1018">此層代 」 邏輯需要索引鍵資料行資訊會出現在<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="72192-1018">This generation logic requires key column information to be present in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="72192-1019">如需詳細資訊，請參閱[Commandbuilder 產生命令](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)。</span><span class="sxs-lookup"><span data-stu-id="72192-1019">For more information see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
 <span data-ttu-id="72192-1020"><xref:System.Data.Common.DbDataAdapter.Update%2A>方法會從第一個對應，然後再執行更新中所列的資料表擷取資料列。</span><span class="sxs-lookup"><span data-stu-id="72192-1020">The <xref:System.Data.Common.DbDataAdapter.Update%2A> method retrieves rows from the table listed in the first mapping before performing an update.</span></span> <span data-ttu-id="72192-1021"><xref:System.Data.Common.DbDataAdapter.Update%2A>然後重新整理使用值的資料列<xref:System.Data.IDbCommand.UpdatedRowSource%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="72192-1021">The <xref:System.Data.Common.DbDataAdapter.Update%2A> then refreshes the row using the value of the <xref:System.Data.IDbCommand.UpdatedRowSource%2A> property.</span></span> <span data-ttu-id="72192-1022">傳回任何其他資料列都會被忽略。</span><span class="sxs-lookup"><span data-stu-id="72192-1022">Any additional rows returned are ignored.</span></span>  
  
 <span data-ttu-id="72192-1023">任何資料載入回後<xref:System.Data.DataSet>，則<xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A>引發事件時，讓使用者能夠檢查協調<xref:System.Data.DataSet>資料列和任何輸出命令所傳回的參數。</span><span class="sxs-lookup"><span data-stu-id="72192-1023">After any data is loaded back into the <xref:System.Data.DataSet>, the <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised, allowing the user to inspect the reconciled <xref:System.Data.DataSet> row and any output parameters returned by the command.</span></span> <span data-ttu-id="72192-1024">已成功更新資料列之後，會接受該資料列所做的變更。</span><span class="sxs-lookup"><span data-stu-id="72192-1024">After a row updates successfully, the changes to that row are accepted.</span></span>  
  
 <span data-ttu-id="72192-1025">當使用<xref:System.Data.Common.DbDataAdapter.Update%2A>，執行的順序如下所示：</span><span class="sxs-lookup"><span data-stu-id="72192-1025">When using <xref:System.Data.Common.DbDataAdapter.Update%2A>, the order of execution is as follows:</span></span>  
  
1.  <span data-ttu-id="72192-1026">中的值<xref:System.Data.DataRow>會移至 參數值。</span><span class="sxs-lookup"><span data-stu-id="72192-1026">The values in the <xref:System.Data.DataRow> are moved to the parameter values.</span></span>  
  
2.  <span data-ttu-id="72192-1027">便會引發 <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> 事件。</span><span class="sxs-lookup"><span data-stu-id="72192-1027">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> event is raised.</span></span>  
  
3.  <span data-ttu-id="72192-1028">執行命令。</span><span class="sxs-lookup"><span data-stu-id="72192-1028">The command executes.</span></span>  
  
4.  <span data-ttu-id="72192-1029">如果命令設定為`FirstReturnedRecord`，則第一個傳回的結果會放在<xref:System.Data.DataRow>。</span><span class="sxs-lookup"><span data-stu-id="72192-1029">If the command is set to `FirstReturnedRecord`, then the first returned result is placed in the <xref:System.Data.DataRow>.</span></span>  
  
5.  <span data-ttu-id="72192-1030">如果沒有輸出參數，它們會放在<xref:System.Data.DataRow>。</span><span class="sxs-lookup"><span data-stu-id="72192-1030">If there are output parameters, they are placed in the <xref:System.Data.DataRow>.</span></span>  
  
6.  <span data-ttu-id="72192-1031">便會引發 <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> 事件。</span><span class="sxs-lookup"><span data-stu-id="72192-1031">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised.</span></span>  
  
7.  <span data-ttu-id="72192-1032">呼叫 <xref:System.Data.DataRow.AcceptChanges%2A>。</span><span class="sxs-lookup"><span data-stu-id="72192-1032"><xref:System.Data.DataRow.AcceptChanges%2A> is called.</span></span>  
  
 <span data-ttu-id="72192-1033">每個相關聯的命令<xref:System.Data.Common.DbDataAdapter>通常都有一個與其相關聯的參數集合。</span><span class="sxs-lookup"><span data-stu-id="72192-1033">Each command associated with the <xref:System.Data.Common.DbDataAdapter> usually has a parameters collection associated with it.</span></span> <span data-ttu-id="72192-1034">參數會對應至目前的資料列，透過`SourceColumn`並`SourceVersion`屬性的.NET Framework 資料提供者的`Parameter`類別。</span><span class="sxs-lookup"><span data-stu-id="72192-1034">Parameters are mapped to the current row through the `SourceColumn` and `SourceVersion` properties of a .NET Framework data provider's `Parameter` class.</span></span> <span data-ttu-id="72192-1035">`SourceColumn` 是指<xref:System.Data.DataTable>資料行，<xref:System.Data.Common.DbDataAdapter>以取得目前資料列的參數值的參考。</span><span class="sxs-lookup"><span data-stu-id="72192-1035">`SourceColumn` refers to a <xref:System.Data.DataTable> column that the <xref:System.Data.Common.DbDataAdapter> references to obtain parameter values for the current row.</span></span>  
  
 <span data-ttu-id="72192-1036">`SourceColumn` 在套用任何資料表對應之前，是指未對應的資料行名稱。</span><span class="sxs-lookup"><span data-stu-id="72192-1036">`SourceColumn` refers to the unmapped column name before any table mappings have been applied.</span></span> <span data-ttu-id="72192-1037">如果`SourceColumn`指的是不存在的資料行中，所採取的動作取決於下列其中一種<xref:System.Data.MissingMappingAction>值。</span><span class="sxs-lookup"><span data-stu-id="72192-1037">If `SourceColumn` refers to a nonexistent column, the action taken depends on one of the following <xref:System.Data.MissingMappingAction> values.</span></span>  
  
|<span data-ttu-id="72192-1038">列舉值</span><span class="sxs-lookup"><span data-stu-id="72192-1038">Enumeration value</span></span>|<span data-ttu-id="72192-1039">採取的動作</span><span class="sxs-lookup"><span data-stu-id="72192-1039">Action taken</span></span>|  
|-----------------------|------------------|  
|`MissingMappingAction.Passthrough`|<span data-ttu-id="72192-1040">使用中的資料表名稱與來源資料行名稱<xref:System.Data.DataSet>如果不不存在任何對應。</span><span class="sxs-lookup"><span data-stu-id="72192-1040">Use the source column names and table names in the <xref:System.Data.DataSet> if no mapping is present.</span></span>|  
|`MissingMappingAction.Ignore`|<span data-ttu-id="72192-1041">A<xref:System.SystemException>產生。</span><span class="sxs-lookup"><span data-stu-id="72192-1041">A <xref:System.SystemException> is generated.</span></span> <span data-ttu-id="72192-1042">對應已明確設定，當遺漏對應的輸入參數通常是錯誤的結果。</span><span class="sxs-lookup"><span data-stu-id="72192-1042">When the mappings are explicitly set, a missing mapping for an input parameter is usually the result of an error.</span></span>|  
|`MissingMappingAction.Error`|<span data-ttu-id="72192-1043">A<xref:System.SystemException>產生。</span><span class="sxs-lookup"><span data-stu-id="72192-1043">A <xref:System.SystemException> is generated.</span></span>|  
  
 <span data-ttu-id="72192-1044">`SourceColumn`屬性也會用來對應輸出的值，或輸入/輸出參數傳回`DataSet`。</span><span class="sxs-lookup"><span data-stu-id="72192-1044">The `SourceColumn` property is also used to map the value for output or input/output parameters back to the `DataSet`.</span></span> <span data-ttu-id="72192-1045">如果它是指不存在的資料行，則會產生例外狀況。</span><span class="sxs-lookup"><span data-stu-id="72192-1045">An exception is generated if it refers to a nonexistent column.</span></span>  
  
 <span data-ttu-id="72192-1046">`SourceVersion`屬性的.NET Framework 資料提供者的`Parameter`類別會決定是否要使用的原始、 目前、 或已提議版本資料行的值。</span><span class="sxs-lookup"><span data-stu-id="72192-1046">The `SourceVersion` property of a .NET Framework data provider's `Parameter` class determines whether to use the Original, Current, or Proposed version of the column value.</span></span> <span data-ttu-id="72192-1047">這項功能通常用於在 UPDATE 陳述式來檢查有開放式同步存取違規的 WHERE 子句中包含原始值。</span><span class="sxs-lookup"><span data-stu-id="72192-1047">This capability is often used to include original values in the WHERE clause of an UPDATE statement to check for optimistic concurrency violations.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="72192-1048">如果在更新資料列時發生錯誤，會擲回例外狀況，並執行更新已停止。</span><span class="sxs-lookup"><span data-stu-id="72192-1048">If an error occurs while updating a row, an exception is thrown and execution of the update is discontinued.</span></span> <span data-ttu-id="72192-1049">若要繼續更新作業，而不會產生例外狀況，當發生錯誤時，設定<xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A>屬性，以`true`再呼叫<xref:System.Data.Common.DbDataAdapter.Update%2A>。</span><span class="sxs-lookup"><span data-stu-id="72192-1049">To continue the update operation without generating exceptions when an error is encountered, set the <xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A> property to `true` before calling <xref:System.Data.Common.DbDataAdapter.Update%2A>.</span></span> <span data-ttu-id="72192-1050">您也可以回應內每個資料列依錯誤`RowUpdated`DataAdapter 的事件。</span><span class="sxs-lookup"><span data-stu-id="72192-1050">You may also respond to errors on a per-row basis within the `RowUpdated` event of a DataAdapter.</span></span> <span data-ttu-id="72192-1051">若要繼續更新作業，而不會產生例外狀況內`RowUpdated`事件，設定<xref:System.Data.Common.RowUpdatedEventArgs.Status%2A>屬性<xref:System.Data.Common.RowUpdatedEventArgs>至<xref:System.Data.UpdateStatus.Continue>。</span><span class="sxs-lookup"><span data-stu-id="72192-1051">To continue the update operation without generating an exception within the `RowUpdated` event, set the <xref:System.Data.Common.RowUpdatedEventArgs.Status%2A> property of the <xref:System.Data.Common.RowUpdatedEventArgs> to <xref:System.Data.UpdateStatus.Continue>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="72192-1052"><see cref="T:System.Data.DataSet" /> 無效。</span><span class="sxs-lookup"><span data-stu-id="72192-1052">The <see cref="T:System.Data.DataSet" /> is invalid.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="72192-1053">來源資料表無效。</span><span class="sxs-lookup"><span data-stu-id="72192-1053">The source table is invalid.</span></span></exception>
        <exception cref="T:System.SystemException"><span data-ttu-id="72192-1054">否<see cref="T:System.Data.DataRow" />存在更新。</span><span class="sxs-lookup"><span data-stu-id="72192-1054">No <see cref="T:System.Data.DataRow" /> exists to update.</span></span>  
  
<span data-ttu-id="72192-1055">-或-</span><span class="sxs-lookup"><span data-stu-id="72192-1055">-or-</span></span> 
<span data-ttu-id="72192-1056">否<see cref="T:System.Data.DataTable" />存在更新。</span><span class="sxs-lookup"><span data-stu-id="72192-1056">No <see cref="T:System.Data.DataTable" /> exists to update.</span></span>  
  
<span data-ttu-id="72192-1057">-或-</span><span class="sxs-lookup"><span data-stu-id="72192-1057">-or-</span></span> 
<span data-ttu-id="72192-1058">否<see cref="T:System.Data.DataSet" />存在以做為來源。</span><span class="sxs-lookup"><span data-stu-id="72192-1058">No <see cref="T:System.Data.DataSet" /> exists to use as a source.</span></span></exception>
        <exception cref="T:System.Data.DBConcurrencyException"><span data-ttu-id="72192-1059">嘗試執行 INSERT、 UPDATE 或 DELETE 陳述式卻沒有受影響的資料錄。</span><span class="sxs-lookup"><span data-stu-id="72192-1059">An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md"><span data-ttu-id="72192-1060">操作資料 (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="72192-1060">Manipulating Data (ADO.NET)</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="72192-1061">DbProviderFactory (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="72192-1061">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="72192-1062">ADO.NET 概觀</span><span class="sxs-lookup"><span data-stu-id="72192-1062">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public int Update (System.Data.DataSet dataSet, string srcTable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Update(class System.Data.DataSet dataSet, string srcTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Update(System::Data::DataSet ^ dataSet, System::String ^ srcTable);" />
      <MemberSignature Language="F#" Value="override this.Update : System.Data.DataSet * string -&gt; int" Usage="dbDataAdapter.Update (dataSet, srcTable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
        <Parameter Name="srcTable" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dataSet"><span data-ttu-id="72192-1063"><see cref="T:System.Data.DataSet" />用以更新資料來源。</span><span class="sxs-lookup"><span data-stu-id="72192-1063">The <see cref="T:System.Data.DataSet" /> to use to update the data source.</span></span></param>
        <param name="srcTable"><span data-ttu-id="72192-1064">用於資料表對應的來源資料表名稱。</span><span class="sxs-lookup"><span data-stu-id="72192-1064">The name of the source table to use for table mapping.</span></span></param>
        <summary><span data-ttu-id="72192-1065">針對具有指定 <see cref="T:System.Data.DataTable" /> 名稱之 <see cref="T:System.Data.DataSet" /> 中的每個插入、更新或刪除的資料列，執行個別的 INSERT、UPDATE 或 DELETE 陳述式，以更新資料庫中的值。</span><span class="sxs-lookup"><span data-stu-id="72192-1065">Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the <see cref="T:System.Data.DataSet" /> with the specified <see cref="T:System.Data.DataTable" /> name.</span></span></summary>
        <returns><span data-ttu-id="72192-1066">已成功從更新的資料列數目<see cref="T:System.Data.DataSet" />。</span><span class="sxs-lookup"><span data-stu-id="72192-1066">The number of rows successfully updated from the <see cref="T:System.Data.DataSet" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72192-1067">當應用程式呼叫<xref:System.Data.Common.DbDataAdapter.Update%2A>方法中，<xref:System.Data.Common.DbDataAdapter>會檢查<xref:System.Data.DataRow.RowState%2A>屬性，並執行必要的 INSERT、 UPDATE 或 DELETE 陳述式，反覆地針對每個的資料列中，然後再根據順序中設定的索引<xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="72192-1067">When an application calls the <xref:System.Data.Common.DbDataAdapter.Update%2A> method, the <xref:System.Data.Common.DbDataAdapter> examines the <xref:System.Data.DataRow.RowState%2A> property, and executes the required INSERT, UPDATE, or DELETE statements iteratively for each row, based on the order of the indexes configured in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="72192-1068">例如，<xref:System.Data.Common.DbDataAdapter.Update%2A>可能會執行 DELETE 陳述式，後面接著 INSERT 陳述式和另一個的 DELETE 陳述式，由於資料列的排序<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="72192-1068">For example, <xref:System.Data.Common.DbDataAdapter.Update%2A> might execute a DELETE statement, followed by an INSERT statement, and then another DELETE statement, due to the ordering of the rows in the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="72192-1069">請注意，這些陳述式都不會執行以批次程序;個別更新每個資料列。</span><span class="sxs-lookup"><span data-stu-id="72192-1069">It should be noted that these statements are not performed as a batch process; each row is updated individually.</span></span> <span data-ttu-id="72192-1070">應用程式可以呼叫<xref:System.Data.DataSet.GetChanges%2A>情況下，您必須在其中控制陳述式型別的序列中的方法 （例如，更新之前插入）。</span><span class="sxs-lookup"><span data-stu-id="72192-1070">An application can call the <xref:System.Data.DataSet.GetChanges%2A> method in situations where you must control the sequence of statement types (for example, INSERT before UPDATE).</span></span> <span data-ttu-id="72192-1071">如需詳細資訊，請參閱 <<c0> [ 使用 Dataadapter 更新資料來源](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md)。</span><span class="sxs-lookup"><span data-stu-id="72192-1071">For more information, see [Updating Data Sources with DataAdapters](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md).</span></span>  
  
 <span data-ttu-id="72192-1072">如果尚未指定 INSERT、 UPDATE 或 DELETE 陳述式，<xref:System.Data.Common.DbDataAdapter.Update%2A>方法會產生例外狀況。</span><span class="sxs-lookup"><span data-stu-id="72192-1072">If INSERT, UPDATE, or DELETE statements have not been specified, the <xref:System.Data.Common.DbDataAdapter.Update%2A> method generates an exception.</span></span> <span data-ttu-id="72192-1073">不過，您可以建立<xref:System.Data.SqlClient.SqlCommandBuilder>或是<xref:System.Data.OleDb.OleDbCommandBuilder>物件來自動產生單一資料表更新的 SQL 陳述式，如果您將設定`SelectCommand`.NET Framework 資料提供者的屬性。</span><span class="sxs-lookup"><span data-stu-id="72192-1073">However, you can create a <xref:System.Data.SqlClient.SqlCommandBuilder> or <xref:System.Data.OleDb.OleDbCommandBuilder> object to automatically generate SQL statements for single-table updates if you set the `SelectCommand` property of a .NET Framework data provider.</span></span> <span data-ttu-id="72192-1074">然後，您未設定任何其他 SQL 陳述式由產生**CommandBuilder**。</span><span class="sxs-lookup"><span data-stu-id="72192-1074">Then, any additional SQL statements that you do not set are generated by the **CommandBuilder**.</span></span> <span data-ttu-id="72192-1075">此層代 」 邏輯需要索引鍵資料行資訊會出現在<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="72192-1075">This generation logic requires key column information to be present in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="72192-1076">如需詳細資訊，請參閱[Commandbuilder 產生命令](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)。</span><span class="sxs-lookup"><span data-stu-id="72192-1076">For more information see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
 <span data-ttu-id="72192-1077"><xref:System.Data.Common.DbDataAdapter.Update%2A>方法支援案例所在<xref:System.Data.DataSet>包含多個<xref:System.Data.DataTable>名稱只有大小寫不同的物件。</span><span class="sxs-lookup"><span data-stu-id="72192-1077">The <xref:System.Data.Common.DbDataAdapter.Update%2A> method supports scenarios where the <xref:System.Data.DataSet> contains multiple <xref:System.Data.DataTable> objects whose names differ only by case.</span></span> <span data-ttu-id="72192-1078">當多個資料表具有相同名稱但不同的情況下，存在於`DataSet`，<xref:System.Data.Common.DbDataAdapter.Update%2A>執行區分大小寫的比較，來尋找對應的資料表，並產生例外狀況，如果沒有完全相符項目存在。</span><span class="sxs-lookup"><span data-stu-id="72192-1078">When multiple tables with the same name, but different case, exist in a `DataSet`, <xref:System.Data.Common.DbDataAdapter.Update%2A> performs a case-sensitive comparison to find the corresponding table, and generates an exception if no exact match exists.</span></span> <span data-ttu-id="72192-1079">下列 C# 程式碼說明此行為。</span><span class="sxs-lookup"><span data-stu-id="72192-1079">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet ds = new DataSet();  
 ds.Tables.Add("aaa");  
 ds.Tables.Add("AAA");  
 adapter.Update(ds, "aaa"); // Updates "aaa", which already exists in the DataSet.  
 adapter.Update(ds, "AAA"); // Updates "AAA", which already exists in the DataSet.  
    adapter.Update(ds, "Aaa"); // Results in an exception.  
```  
  
 <span data-ttu-id="72192-1080">如果<xref:System.Data.Common.DbDataAdapter.Update%2A>呼叫時，<xref:System.Data.DataSet>只會包含一個<xref:System.Data.DataTable>名稱只有大小寫不同，，<xref:System.Data.DataTable>會更新。</span><span class="sxs-lookup"><span data-stu-id="72192-1080">If <xref:System.Data.Common.DbDataAdapter.Update%2A> is called and the <xref:System.Data.DataSet> contains only one <xref:System.Data.DataTable> whose name differs only by case, that <xref:System.Data.DataTable> is updated.</span></span> <span data-ttu-id="72192-1081">在此案例中，比較不區分大小寫。</span><span class="sxs-lookup"><span data-stu-id="72192-1081">In this scenario, the comparison is case insensitive.</span></span> <span data-ttu-id="72192-1082">下列 C# 程式碼說明此行為。</span><span class="sxs-lookup"><span data-stu-id="72192-1082">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
 dataset.Tables.Add("aaa");  
    adapter.Update(dataset, "AAA"); // Updates table "aaa" because only one similarly named table is in the DataSet.  
```  
  
 <span data-ttu-id="72192-1083"><xref:System.Data.Common.DbDataAdapter.Update%2A>方法會從第一個對應，然後再執行更新中所列的資料表擷取資料列。</span><span class="sxs-lookup"><span data-stu-id="72192-1083">The <xref:System.Data.Common.DbDataAdapter.Update%2A> method retrieves rows from the table listed in the first mapping before performing an update.</span></span> <span data-ttu-id="72192-1084"><xref:System.Data.Common.DbDataAdapter.Update%2A>然後重新整理使用值的資料列<xref:System.Data.IDbCommand.UpdatedRowSource%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="72192-1084">The <xref:System.Data.Common.DbDataAdapter.Update%2A> then refreshes the row using the value of the <xref:System.Data.IDbCommand.UpdatedRowSource%2A> property.</span></span> <span data-ttu-id="72192-1085">傳回任何其他資料列都會被忽略。</span><span class="sxs-lookup"><span data-stu-id="72192-1085">Any additional rows returned are ignored.</span></span>  
  
 <span data-ttu-id="72192-1086">任何資料載入回後<xref:System.Data.DataSet>，則<xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A>引發事件時，讓使用者能夠檢查協調<xref:System.Data.DataSet>資料列和任何輸出命令所傳回的參數。</span><span class="sxs-lookup"><span data-stu-id="72192-1086">After any data is loaded back into the <xref:System.Data.DataSet>, the <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised, allowing the user to inspect the reconciled <xref:System.Data.DataSet> row and any output parameters returned by the command.</span></span> <span data-ttu-id="72192-1087">已成功更新資料列之後，會接受該資料列所做的變更。</span><span class="sxs-lookup"><span data-stu-id="72192-1087">After a row updates successfully, the changes to that row are accepted.</span></span>  
  
 <span data-ttu-id="72192-1088">當使用<xref:System.Data.Common.DbDataAdapter.Update%2A>，執行的順序如下所示：</span><span class="sxs-lookup"><span data-stu-id="72192-1088">When using <xref:System.Data.Common.DbDataAdapter.Update%2A>, the order of execution is as follows:</span></span>  
  
1.  <span data-ttu-id="72192-1089">中的值<xref:System.Data.DataRow>會移至 參數值。</span><span class="sxs-lookup"><span data-stu-id="72192-1089">The values in the <xref:System.Data.DataRow> are moved to the parameter values.</span></span>  
  
2.  <span data-ttu-id="72192-1090">便會引發 <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> 事件。</span><span class="sxs-lookup"><span data-stu-id="72192-1090">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> event is raised.</span></span>  
  
3.  <span data-ttu-id="72192-1091">執行命令。</span><span class="sxs-lookup"><span data-stu-id="72192-1091">The command executes.</span></span>  
  
4.  <span data-ttu-id="72192-1092">如果命令設定為`FirstReturnedRecord`，則第一個傳回的結果會放在<xref:System.Data.DataRow>。</span><span class="sxs-lookup"><span data-stu-id="72192-1092">If the command is set to `FirstReturnedRecord`, then the first returned result is placed in the <xref:System.Data.DataRow>.</span></span>  
  
5.  <span data-ttu-id="72192-1093">如果沒有輸出參數，它們會放在<xref:System.Data.DataRow>。</span><span class="sxs-lookup"><span data-stu-id="72192-1093">If there are output parameters, they are placed in the <xref:System.Data.DataRow>.</span></span>  
  
6.  <span data-ttu-id="72192-1094">便會引發 <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> 事件。</span><span class="sxs-lookup"><span data-stu-id="72192-1094">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised.</span></span>  
  
7.  <span data-ttu-id="72192-1095">呼叫 <xref:System.Data.DataRow.AcceptChanges%2A>。</span><span class="sxs-lookup"><span data-stu-id="72192-1095"><xref:System.Data.DataRow.AcceptChanges%2A> is called.</span></span>  
  
 <span data-ttu-id="72192-1096">每個相關聯的命令<xref:System.Data.Common.DbDataAdapter>通常都有一個與其相關聯的參數集合。</span><span class="sxs-lookup"><span data-stu-id="72192-1096">Each command associated with the <xref:System.Data.Common.DbDataAdapter> usually has a parameters collection associated with it.</span></span> <span data-ttu-id="72192-1097">參數會對應至目前的資料列，透過`SourceColumn`並`SourceVersion`屬性的.NET Framework 資料提供者的`Parameter`類別。</span><span class="sxs-lookup"><span data-stu-id="72192-1097">Parameters are mapped to the current row through the `SourceColumn` and `SourceVersion` properties of a .NET Framework data provider's `Parameter` class.</span></span> <span data-ttu-id="72192-1098">`SourceColumn` 是指<xref:System.Data.DataTable>資料行，<xref:System.Data.Common.DbDataAdapter>以取得目前資料列的參數值的參考。</span><span class="sxs-lookup"><span data-stu-id="72192-1098">`SourceColumn` refers to a <xref:System.Data.DataTable> column that the <xref:System.Data.Common.DbDataAdapter> references to obtain parameter values for the current row.</span></span>  
  
 <span data-ttu-id="72192-1099">`SourceColumn` 在套用任何資料表對應之前，是指未對應的資料行名稱。</span><span class="sxs-lookup"><span data-stu-id="72192-1099">`SourceColumn` refers to the unmapped column name before any table mappings have been applied.</span></span> <span data-ttu-id="72192-1100">如果`SourceColumn`指的是不存在的資料行中，所採取的動作取決於下列其中一種<xref:System.Data.MissingMappingAction>值。</span><span class="sxs-lookup"><span data-stu-id="72192-1100">If `SourceColumn` refers to a nonexistent column, the action taken depends on one of the following <xref:System.Data.MissingMappingAction> values.</span></span>  
  
|<span data-ttu-id="72192-1101">列舉值</span><span class="sxs-lookup"><span data-stu-id="72192-1101">Enumeration value</span></span>|<span data-ttu-id="72192-1102">採取的動作</span><span class="sxs-lookup"><span data-stu-id="72192-1102">Action taken</span></span>|  
|-----------------------|------------------|  
|`MissingMappingAction.Passthrough`|<span data-ttu-id="72192-1103">使用中的資料表名稱與來源資料行名稱<xref:System.Data.DataSet>如果不不存在任何對應。</span><span class="sxs-lookup"><span data-stu-id="72192-1103">Use the source column names and table names in the <xref:System.Data.DataSet> if no mapping is present.</span></span>|  
|`MissingMappingAction.Ignore`|<span data-ttu-id="72192-1104">A<xref:System.SystemException>產生。</span><span class="sxs-lookup"><span data-stu-id="72192-1104">A <xref:System.SystemException> is generated.</span></span> <span data-ttu-id="72192-1105">對應已明確設定，當遺漏對應的輸入參數通常是錯誤的結果。</span><span class="sxs-lookup"><span data-stu-id="72192-1105">When the mappings are explicitly set, a missing mapping for an input parameter is usually the result of an error.</span></span>|  
|`MissingMappingAction.Error`|<span data-ttu-id="72192-1106">A<xref:System.SystemException>產生。</span><span class="sxs-lookup"><span data-stu-id="72192-1106">A <xref:System.SystemException> is generated.</span></span>|  
  
 <span data-ttu-id="72192-1107">`SourceColumn`屬性也會用來對應輸出的值，或輸入/輸出參數傳回`DataSet`。</span><span class="sxs-lookup"><span data-stu-id="72192-1107">The `SourceColumn` property is also used to map the value for output or input/output parameters back to the `DataSet`.</span></span> <span data-ttu-id="72192-1108">如果它是指不存在的資料行，則會產生例外狀況。</span><span class="sxs-lookup"><span data-stu-id="72192-1108">An exception is generated if it refers to a nonexistent column.</span></span>  
  
 <span data-ttu-id="72192-1109">`SourceVersion`屬性的.NET Framework 資料提供者的`Parameter`類別會決定是否要使用的原始、 目前、 或已提議版本資料行的值。</span><span class="sxs-lookup"><span data-stu-id="72192-1109">The `SourceVersion` property of a .NET Framework data provider's `Parameter` class determines whether to use the Original, Current, or Proposed version of the column value.</span></span> <span data-ttu-id="72192-1110">這項功能通常用於在 UPDATE 陳述式來檢查有開放式同步存取違規的 WHERE 子句中包含原始值。</span><span class="sxs-lookup"><span data-stu-id="72192-1110">This capability is often used to include original values in the WHERE clause of an UPDATE statement to check for optimistic concurrency violations.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="72192-1111">如果在更新資料列時發生錯誤，會擲回例外狀況，並執行更新已停止。</span><span class="sxs-lookup"><span data-stu-id="72192-1111">If an error occurs while updating a row, an exception is thrown and execution of the update is discontinued.</span></span> <span data-ttu-id="72192-1112">若要繼續更新作業，而不會產生例外狀況，當發生錯誤時，設定<xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A>屬性，以`true`再呼叫<xref:System.Data.Common.DbDataAdapter.Update%2A>。</span><span class="sxs-lookup"><span data-stu-id="72192-1112">To continue the update operation without generating exceptions when an error is encountered, set the <xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A> property to `true` before calling <xref:System.Data.Common.DbDataAdapter.Update%2A>.</span></span> <span data-ttu-id="72192-1113">您也可以回應內每個資料列依錯誤`RowUpdated`DataAdapter 的事件。</span><span class="sxs-lookup"><span data-stu-id="72192-1113">You may also respond to errors on a per-row basis within the `RowUpdated` event of a DataAdapter.</span></span> <span data-ttu-id="72192-1114">若要繼續更新作業，而不會產生例外狀況內`RowUpdated`事件，設定<xref:System.Data.Common.RowUpdatedEventArgs.Status%2A>屬性<xref:System.Data.Common.RowUpdatedEventArgs>至<xref:System.Data.UpdateStatus.Continue>。</span><span class="sxs-lookup"><span data-stu-id="72192-1114">To continue the update operation without generating an exception within the `RowUpdated` event, set the <xref:System.Data.Common.RowUpdatedEventArgs.Status%2A> property of the <xref:System.Data.Common.RowUpdatedEventArgs> to <xref:System.Data.UpdateStatus.Continue>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="72192-1115">下列範例會使用衍生的類別中， <xref:System.Data.OleDb.OleDbDataAdapter>、 更新資料來源。</span><span class="sxs-lookup"><span data-stu-id="72192-1115">The following example uses the derived class, <xref:System.Data.OleDb.OleDbDataAdapter>, to update the data source.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.Update3#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Update3/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.Update3#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Update3/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="72192-1116"><see cref="T:System.Data.DataSet" /> 無效。</span><span class="sxs-lookup"><span data-stu-id="72192-1116">The <see cref="T:System.Data.DataSet" /> is invalid.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="72192-1117">來源資料表無效。</span><span class="sxs-lookup"><span data-stu-id="72192-1117">The source table is invalid.</span></span></exception>
        <exception cref="T:System.Data.DBConcurrencyException"><span data-ttu-id="72192-1118">嘗試執行 INSERT、 UPDATE 或 DELETE 陳述式卻沒有受影響的資料錄。</span><span class="sxs-lookup"><span data-stu-id="72192-1118">An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md"><span data-ttu-id="72192-1119">操作資料 (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="72192-1119">Manipulating Data (ADO.NET)</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="72192-1120">DbProviderFactory (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="72192-1120">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="72192-1121">ADO.NET 概觀</span><span class="sxs-lookup"><span data-stu-id="72192-1121">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="UpdateBatchSize">
      <MemberSignature Language="C#" Value="public virtual int UpdateBatchSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 UpdateBatchSize" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataAdapter.UpdateBatchSize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property UpdateBatchSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int UpdateBatchSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.UpdateBatchSize : int with get, set" Usage="System.Data.Common.DbDataAdapter.UpdateBatchSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.ComponentModel.DefaultValue(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="72192-1122">取得或設定值，這個值會啟用或停用批次處理支援，並指定可以執行批次中的命令數目。</span><span class="sxs-lookup"><span data-stu-id="72192-1122">Gets or sets a value that enables or disables batch processing support, and specifies the number of commands that can be executed in a batch.</span></span></summary>
        <value><span data-ttu-id="72192-1123">處理每個批次的資料列數目。</span><span class="sxs-lookup"><span data-stu-id="72192-1123">The number of rows to process per batch.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="72192-1124">值是</span><span class="sxs-lookup"><span data-stu-id="72192-1124">Value is</span></span> 
 </term><description> <span data-ttu-id="72192-1125">作用</span><span class="sxs-lookup"><span data-stu-id="72192-1125">Effect</span></span> 
 </description></listheader><item><term> <span data-ttu-id="72192-1126">0</span><span class="sxs-lookup"><span data-stu-id="72192-1126">0</span></span> 
 </term><description> <span data-ttu-id="72192-1127">批次大小沒有任何限制。</span><span class="sxs-lookup"><span data-stu-id="72192-1127">There is no limit on the batch size.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="72192-1128">1</span><span class="sxs-lookup"><span data-stu-id="72192-1128">1</span></span> 
 </term><description> <span data-ttu-id="72192-1129">停用批次更新。</span><span class="sxs-lookup"><span data-stu-id="72192-1129">Disables batch updating.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="72192-1130">&gt; 1</span><span class="sxs-lookup"><span data-stu-id="72192-1130">&gt; 1</span></span> 
 </term><description> <span data-ttu-id="72192-1131">使用批次傳送變更<see cref="P:System.Data.Common.DbDataAdapter.UpdateBatchSize" />一次作業。</span><span class="sxs-lookup"><span data-stu-id="72192-1131">Changes are sent using batches of <see cref="P:System.Data.Common.DbDataAdapter.UpdateBatchSize" /> operations at a time.</span></span>  
  
 </description></item></list>  

 <span data-ttu-id="72192-1132">當設定為 1 以外的值，與相關聯的所有命令<see cref="T:System.Data.Common.DbDataAdapter" />必須有其<see cref="P:System.Data.IDbCommand.UpdatedRowSource" />屬性設定為**無**或**OutputParameters**。</span><span class="sxs-lookup"><span data-stu-id="72192-1132">When setting this to a value other than 1, all the commands associated with the <see cref="T:System.Data.Common.DbDataAdapter" /> must have their <see cref="P:System.Data.IDbCommand.UpdatedRowSource" /> property set to **None** or **OutputParameters**.</span></span> <span data-ttu-id="72192-1133">否則會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="72192-1133">An exception will be thrown otherwise.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72192-1134">使用<xref:System.Data.Common.DbDataAdapter.UpdateBatchSize%2A>屬性來更新資料來源，以反映變更<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="72192-1134">Use the <xref:System.Data.Common.DbDataAdapter.UpdateBatchSize%2A> property to update a data source with changes from a <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="72192-1135">如果此資料提供者支援批次處理，這可以減少伺服器的來回行程次數來提升應用程式效能。</span><span class="sxs-lookup"><span data-stu-id="72192-1135">If the data provider supports batch processing, this can increase application performance by reducing the number of round-trips to the server.</span></span> <span data-ttu-id="72192-1136">在 ADO.NET 2.0 中，支援這個屬性的.NET data provider for SQL Server (SqlClient) 和 Oracle (OracleClient)。</span><span class="sxs-lookup"><span data-stu-id="72192-1136">In ADO.NET 2.0, this property is supported for the .NET data providers for SQL Server (SqlClient) and Oracle (OracleClient).</span></span>  
  
 <span data-ttu-id="72192-1137">執行極大的批次可能會降低效能。</span><span class="sxs-lookup"><span data-stu-id="72192-1137">Executing an extremely large batch could decrease performance.</span></span> <span data-ttu-id="72192-1138">因此，您應該先測試理想的批次大小設定，再實作應用程式。</span><span class="sxs-lookup"><span data-stu-id="72192-1138">Therefore, you should test for the optimum batch size setting before implementing your application.</span></span>  
  
 <span data-ttu-id="72192-1139"><xref:System.ArgumentOutOfRangeException>便會擲回的值設定為 數字小於零。</span><span class="sxs-lookup"><span data-stu-id="72192-1139">An <xref:System.ArgumentOutOfRangeException> will be thrown if the value is set to a number less than zero.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md"><span data-ttu-id="72192-1140">操作資料 (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="72192-1140">Manipulating Data (ADO.NET)</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="72192-1141">DbProviderFactory (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="72192-1141">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="72192-1142">ADO.NET 概觀</span><span class="sxs-lookup"><span data-stu-id="72192-1142">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="UpdateCommand">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbCommand UpdateCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbCommand UpdateCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataAdapter.UpdateCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateCommand As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Common::DbCommand ^ UpdateCommand { System::Data::Common::DbCommand ^ get(); void set(System::Data::Common::DbCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UpdateCommand : System.Data.Common.DbCommand with get, set" Usage="System.Data.Common.DbDataAdapter.UpdateCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;netcore-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="72192-1143">取得或設定用來更新資料來源中的資料錄的命令。</span><span class="sxs-lookup"><span data-stu-id="72192-1143">Gets or sets a command used to update records in the data source.</span></span></summary>
        <value><span data-ttu-id="72192-1144">A<see cref="T:System.Data.IDbCommand" />期間使用<see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />來更新資料集中修改的資料列的資料來源中的記錄。</span><span class="sxs-lookup"><span data-stu-id="72192-1144">A <see cref="T:System.Data.IDbCommand" /> used during <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> to update records in the data source for modified rows in the data set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72192-1145">期間<xref:System.Data.Common.DbDataAdapter.Update%2A>，如果沒有設定這個屬性，而主索引鍵資訊是存在於<xref:System.Data.DataSet>，則<xref:System.Data.IDbDataAdapter.UpdateCommand%2A>將會自動產生。</span><span class="sxs-lookup"><span data-stu-id="72192-1145">During <xref:System.Data.Common.DbDataAdapter.Update%2A>, if this property is not set and primary key information is present in the <xref:System.Data.DataSet>, the <xref:System.Data.IDbDataAdapter.UpdateCommand%2A> will be automatically generated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="72192-1146">下列範例會建立衍生的類別<xref:System.Data.OleDb.OleDbDataAdapter>並設定其部分屬性。</span><span class="sxs-lookup"><span data-stu-id="72192-1146">The following example creates the derived class <xref:System.Data.OleDb.OleDbDataAdapter> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.UpdateCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.UpdateCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.UpdateCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.UpdateCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md"><span data-ttu-id="72192-1147">操作資料 (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="72192-1147">Manipulating Data (ADO.NET)</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="72192-1148">DbProviderFactory (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="72192-1148">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="72192-1149">ADO.NET 概觀</span><span class="sxs-lookup"><span data-stu-id="72192-1149">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>