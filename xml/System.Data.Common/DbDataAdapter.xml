<Type Name="DbDataAdapter" FullName="System.Data.Common.DbDataAdapter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="332e7bf7ba0f9c35c1455cd28bcf8d4bd18ca3f3" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36692805" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class DbDataAdapter : System.Data.Common.DataAdapter, ICloneable, System.Data.IDbDataAdapter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit DbDataAdapter extends System.Data.Common.DataAdapter implements class System.Data.IDataAdapter, class System.Data.IDbDataAdapter, class System.ICloneable" />
  <TypeSignature Language="DocId" Value="T:System.Data.Common.DbDataAdapter" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class DbDataAdapter&#xA;Inherits DataAdapter&#xA;Implements ICloneable, IDbDataAdapter" />
  <TypeSignature Language="C++ CLI" Value="public ref class DbDataAdapter abstract : System::Data::Common::DataAdapter, ICloneable, System::Data::IDbDataAdapter" />
  <TypeSignature Language="F#" Value="type DbDataAdapter = class&#xA;    inherit DataAdapter&#xA;    interface IDbDataAdapter&#xA;    interface ICloneable&#xA;    interface IDataAdapter" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DataAdapter</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Data.IDbDataAdapter</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="79025-101">Aids implementation of the <see cref="T:System.Data.IDbDataAdapter" /> interface.</span>
      <span class="sxs-lookup">
        <span data-stu-id="79025-101">Aids implementation of the <see cref="T:System.Data.IDbDataAdapter" /> interface.</span>
      </span>
      <span data-ttu-id="79025-102">Inheritors of <see cref="T:System.Data.Common.DbDataAdapter" /> implement a set of functions to provide strong typing, but inherit most of the functionality needed to fully implement a **DataAdapter**.</span>
      <span class="sxs-lookup">
        <span data-stu-id="79025-102">Inheritors of <see cref="T:System.Data.Common.DbDataAdapter" /> implement a set of functions to provide strong typing, but inherit most of the functionality needed to fully implement a **DataAdapter**.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79025-103"><xref:System.Data.Common.DbDataAdapter>類別繼承自<xref:System.Data.Common.DataAdapter>類別，並且實作<xref:System.Data.IDbDataAdapter>介面。</span><span class="sxs-lookup"><span data-stu-id="79025-103">The <xref:System.Data.Common.DbDataAdapter> class inherits from the <xref:System.Data.Common.DataAdapter> class and implements the <xref:System.Data.IDbDataAdapter> interface.</span></span> <span data-ttu-id="79025-104">它可協助實作類別**DataAdapter**設計用於關聯式資料庫。</span><span class="sxs-lookup"><span data-stu-id="79025-104">It helps a class implement a **DataAdapter** designed for use with a relational database.</span></span>  
  
 <span data-ttu-id="79025-105">應用程式不會建立的執行個體<xref:System.Data.Common.DbDataAdapter>類別直接，但是會建立繼承自該類別的執行個體。</span><span class="sxs-lookup"><span data-stu-id="79025-105">An application does not create an instance of the <xref:System.Data.Common.DbDataAdapter> class directly, but creates an instance of a class that inherits from it.</span></span>  
  
 <span data-ttu-id="79025-106">繼承的類別<xref:System.Data.Common.DbDataAdapter>必須實作繼承的成員，和通常用來定義其他成員將提供者特有的功能。</span><span class="sxs-lookup"><span data-stu-id="79025-106">Classes that inherit <xref:System.Data.Common.DbDataAdapter> must implement the inherited members, and typically define additional members to add provider-specific functionality.</span></span> <span data-ttu-id="79025-107">例如，<xref:System.Data.Common.DbDataAdapter>類別會定義<xref:System.Data.IDbDataAdapter.SelectCommand%2A>屬性，而<xref:System.Data.Common.DbDataAdapter>類別定義的八個多載<xref:System.Data.IDataAdapter.Fill%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="79025-107">For example, the <xref:System.Data.Common.DbDataAdapter> class defines the <xref:System.Data.IDbDataAdapter.SelectCommand%2A> property, and the <xref:System.Data.Common.DbDataAdapter> class defines eight overloads of the <xref:System.Data.IDataAdapter.Fill%2A> method.</span></span> <span data-ttu-id="79025-108">接著，<xref:System.Data.OleDb.OleDbDataAdapter>類別會繼承<xref:System.Data.Common.DbDataAdapter.Fill%2A>方法，而且也會定義兩個其他多載<xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A>可接受的 ADO 資料錄集物件做為參數。</span><span class="sxs-lookup"><span data-stu-id="79025-108">In turn, the <xref:System.Data.OleDb.OleDbDataAdapter> class inherits the <xref:System.Data.Common.DbDataAdapter.Fill%2A> method, and also defines two additional overloads of <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> that take an ADO Recordset object as a parameter.</span></span>  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <span data-ttu-id="79025-109">
        <para>當您繼承自<see cref="T:System.Data.Common.DbDataAdapter" />類別，建議您實作下列建構函式： <list type="table"><listheader><term>項目</term><description>描述</description></listheader><item><term> *Prv*DataAdapter() </term><description>初始化的新執行個體 * Prv * 資料配接器類別。 </description></item><item><term> * Prv * 資料配接器 (* Prv * 命令 * selectCommand *) </term><description>初始化的新執行個體 * Prv * 指定的 SQL SELECT 資料配接器類別陳述式。 </description></item><item><term> * Prv * DataAdapter (字串 * selectCommandText *、 字串 * selectConnectionString *) </term><description>初始化的新執行個體 * Prv * DataAdapter 類別以 SQL SELECT 陳述式和連接字串。 </description></item><item><term> * Prv * DataAdapter (字串 * selectCommandText * * Prv * 連線 * selectConnection *) </term><description>初始化的新執行個體 * Prv * DataAdapter以 SQL SELECT 陳述式的類別和 * Prv * 連接物件。</description></item></list>  若要提升在.NET Framework 資料提供者之間的一致性，您應該命名繼承的類別，在表單中 * Prv * 資料配接器，其中 * Prv * 是提供給特定的.NET Framework 資料提供者命名空間中的所有類別的統一前置詞。例如，"Sql"這是前置詞<see cref="T:System.Data.SqlClient.SqlDataAdapter" />**System.Data.SqlClient** 命名空間中的類別。</para>
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="79025-109">
          <para>When you inherit from the <see cref="T:System.Data.Common.DbDataAdapter" /> class, we recommend that you implement the following constructors:  <list type="table"><listheader><term> Item  </term><description> Description  </description></listheader><item><term> *Prv*DataAdapter()  </term><description> Initializes a new instance of the *Prv*DataAdapter class.  </description></item><item><term> *Prv*DataAdapter(*Prv*Command *selectCommand*)  </term><description> Initializes a new instance of the *Prv*DataAdapter class with the specified SQL SELECT statement.  </description></item><item><term> *Prv*DataAdapter(string *selectCommandText*, string *selectConnectionString*)  </term><description> Initializes a new instance of the *Prv*DataAdapter class with an SQL SELECT statement and a connection string.  </description></item><item><term> *Prv*DataAdapter(string *selectCommandText*, *Prv*Connection *selectConnection*)  </term><description> Initializes a new instance of the *Prv*DataAdapter class with an SQL SELECT statement and a *Prv*Connection object.  </description></item></list>  To promote consistency among .NET Framework data providers, you should name the inheriting class in the form *Prv*DataAdapter, where *Prv* is the uniform prefix given to all classes in a specific .NET Framework data provider namespace. For example, "Sql" is the prefix of the <see cref="T:System.Data.SqlClient.SqlDataAdapter" /> class in the **System.Data.SqlClient** namespace.</para>
        </span>
      </span>
    </block>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="79025-110">Initializes a new instance of a <see langword="DataAdapter" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-110">Initializes a new instance of a <see langword="DataAdapter" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DbDataAdapter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DbDataAdapter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="79025-111">Initializes a new instance of a **DataAdapter** class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-111">Initializes a new instance of a **DataAdapter** class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79025-112">當您建立的執行個體<xref:System.Data.Common.DbDataAdapter>，下列的讀取/寫入屬性設定為下列的初始值。</span><span class="sxs-lookup"><span data-stu-id="79025-112">When you create an instance of <xref:System.Data.Common.DbDataAdapter>, the following read/write properties are set to the following initial values.</span></span>  
  
|<span data-ttu-id="79025-113">屬性</span><span class="sxs-lookup"><span data-stu-id="79025-113">Properties</span></span>|<span data-ttu-id="79025-114">Initial value</span><span class="sxs-lookup"><span data-stu-id="79025-114">Initial value</span></span>|  
|----------------|-------------------|  
|<xref:System.Data.IDbDataAdapter.SelectCommand%2A>|<span data-ttu-id="79025-115">新的 <xref:System.Data.IDbCommand>。</span><span class="sxs-lookup"><span data-stu-id="79025-115">A new <xref:System.Data.IDbCommand>.</span></span>|  
|<xref:System.Data.IDbDataAdapter.InsertCommand%2A>|<span data-ttu-id="79025-116">新的 <xref:System.Data.IDbCommand>。</span><span class="sxs-lookup"><span data-stu-id="79025-116">A new <xref:System.Data.IDbCommand>.</span></span>|  
|<xref:System.Data.IDbDataAdapter.DeleteCommand%2A>|<span data-ttu-id="79025-117">新的 <xref:System.Data.IDbCommand>。</span><span class="sxs-lookup"><span data-stu-id="79025-117">A new <xref:System.Data.IDbCommand>.</span></span>|  
|<xref:System.Data.IDbDataAdapter.UpdateCommand%2A>|<span data-ttu-id="79025-118">新的 <xref:System.Data.IDbCommand>。</span><span class="sxs-lookup"><span data-stu-id="79025-118">A new <xref:System.Data.IDbCommand>.</span></span>|  
|<xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>|`MissingMappingAction.Passthrough`|  
|<xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>|`MissingSchemaAction.Add`|  
  
 <span data-ttu-id="79025-119">您可以變更任何這些屬性，透過呼叫另一個屬性的值。</span><span class="sxs-lookup"><span data-stu-id="79025-119">You can change the value of any of these properties through a separate call to the property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DbDataAdapter (System.Data.Common.DbDataAdapter adapter);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Data.Common.DbDataAdapter adapter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.#ctor(System.Data.Common.DbDataAdapter)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (adapter As DbDataAdapter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DbDataAdapter(System::Data::Common::DbDataAdapter ^ adapter);" />
      <MemberSignature Language="F#" Value="new System.Data.Common.DbDataAdapter : System.Data.Common.DbDataAdapter -&gt; System.Data.Common.DbDataAdapter" Usage="new System.Data.Common.DbDataAdapter adapter" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="adapter" Type="System.Data.Common.DbDataAdapter" />
      </Parameters>
      <Docs>
        <param name="adapter">
          <span data-ttu-id="79025-120">A <see langword="DataAdapter" /> object used to create the new <see langword="DataAdapter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-120">A <see langword="DataAdapter" /> object used to create the new <see langword="DataAdapter" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="79025-121">Initializes a new instance of a <see langword="DataAdapter" /> class from an existing object of the same type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-121">Initializes a new instance of a <see langword="DataAdapter" /> class from an existing object of the same type.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79025-122">這個多載<xref:System.Data.Common.DbDataAdapter>建構函式適用於.NET Framework 資料提供者實作 clone 實作中使用類似的建構函式時。</span><span class="sxs-lookup"><span data-stu-id="79025-122">This overload of the <xref:System.Data.Common.DbDataAdapter> constructor is designed for use by a .NET Framework data provider when implementing a similar constructor for use in a clone implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddToBatch">
      <MemberSignature Language="C#" Value="protected virtual int AddToBatch (System.Data.IDbCommand command);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 AddToBatch(class System.Data.IDbCommand command) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.AddToBatch(System.Data.IDbCommand)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function AddToBatch (command As IDbCommand) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int AddToBatch(System::Data::IDbCommand ^ command);" />
      <MemberSignature Language="F#" Value="abstract member AddToBatch : System.Data.IDbCommand -&gt; int&#xA;override this.AddToBatch : System.Data.IDbCommand -&gt; int" Usage="dbDataAdapter.AddToBatch command" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="System.Data.IDbCommand" />
      </Parameters>
      <Docs>
        <param name="command">
          <span data-ttu-id="79025-123">The <see cref="T:System.Data.IDbCommand" /> to add to the batch.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-123">The <see cref="T:System.Data.IDbCommand" /> to add to the batch.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="79025-124">Adds a <see cref="T:System.Data.IDbCommand" /> to the current batch.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-124">Adds a <see cref="T:System.Data.IDbCommand" /> to the current batch.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="79025-125">The number of commands in the batch before adding the <see cref="T:System.Data.IDbCommand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-125">The number of commands in the batch before adding the <see cref="T:System.Data.IDbCommand" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79025-126">在<xref:System.Data.Common.DbDataAdapter>，這個方法會擲回<xref:System.NotSupportedException>。</span><span class="sxs-lookup"><span data-stu-id="79025-126">In <xref:System.Data.Common.DbDataAdapter>, this method throws <xref:System.NotSupportedException>.</span></span> <span data-ttu-id="79025-127">類別繼承自<xref:System.Data.Common.DbDataAdapter>覆寫這個方法以提供支援批次。</span><span class="sxs-lookup"><span data-stu-id="79025-127">Classes that inherit from <xref:System.Data.Common.DbDataAdapter> override this method to provide support for batches.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="79025-128">The adapter does not support batches.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-128">The adapter does not support batches.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="79025-129">
            <para>這個方法受到保護，可供使用的.NET Framework 資料提供者。如果類別繼承自<see cref="T:System.Data.Common.DbDataAdapter" />支援批次，該類別會覆寫此方法可讓使用者將命令加入至批次。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-129">
              <para>This method is protected and is designed for use by a .NET Framework data provider.  If a class that inherits from <see cref="T:System.Data.Common.DbDataAdapter" /> supports batches, that class overrides this method to allow users to add a command to a batch.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="ClearBatch">
      <MemberSignature Language="C#" Value="protected virtual void ClearBatch ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ClearBatch() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.ClearBatch" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ClearBatch ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ClearBatch();" />
      <MemberSignature Language="F#" Value="abstract member ClearBatch : unit -&gt; unit&#xA;override this.ClearBatch : unit -&gt; unit" Usage="dbDataAdapter.ClearBatch " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="79025-130">Removes all <see cref="T:System.Data.IDbCommand" /> objects from the batch.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-130">Removes all <see cref="T:System.Data.IDbCommand" /> objects from the batch.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79025-131">在<xref:System.Data.Common.DbDataAdapter>，這個方法會擲回<xref:System.NotSupportedException>。</span><span class="sxs-lookup"><span data-stu-id="79025-131">In <xref:System.Data.Common.DbDataAdapter>, this method throws <xref:System.NotSupportedException>.</span></span> <span data-ttu-id="79025-132">類別繼承自<xref:System.Data.Common.DbDataAdapter>覆寫這個方法以提供支援批次。</span><span class="sxs-lookup"><span data-stu-id="79025-132">Classes that inherit from <xref:System.Data.Common.DbDataAdapter> override this method to provide support for batches.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="79025-133">The adapter does not support batches.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-133">The adapter does not support batches.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="79025-134">
            <para>這個方法受到保護，可供使用的.NET Framework 資料提供者。如果類別繼承自<see cref="T:System.Data.Common.DbDataAdapter" />支援批次，該類別會覆寫此方法可讓使用者從批次移除所有的命令。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-134">
              <para>This method is protected and is designed for use by a .NET Framework data provider.  If a class that inherits from <see cref="T:System.Data.Common.DbDataAdapter" /> supports batches, that class overrides this method to allow users to remove all commands from a batch.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="CreateRowUpdatedEvent">
      <MemberSignature Language="C#" Value="protected virtual System.Data.Common.RowUpdatedEventArgs CreateRowUpdatedEvent (System.Data.DataRow dataRow, System.Data.IDbCommand command, System.Data.StatementType statementType, System.Data.Common.DataTableMapping tableMapping);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.Common.RowUpdatedEventArgs CreateRowUpdatedEvent(class System.Data.DataRow dataRow, class System.Data.IDbCommand command, valuetype System.Data.StatementType statementType, class System.Data.Common.DataTableMapping tableMapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Data::Common::RowUpdatedEventArgs ^ CreateRowUpdatedEvent(System::Data::DataRow ^ dataRow, System::Data::IDbCommand ^ command, System::Data::StatementType statementType, System::Data::Common::DataTableMapping ^ tableMapping);" />
      <MemberSignature Language="F#" Value="abstract member CreateRowUpdatedEvent : System.Data.DataRow * System.Data.IDbCommand * System.Data.StatementType * System.Data.Common.DataTableMapping -&gt; System.Data.Common.RowUpdatedEventArgs&#xA;override this.CreateRowUpdatedEvent : System.Data.DataRow * System.Data.IDbCommand * System.Data.StatementType * System.Data.Common.DataTableMapping -&gt; System.Data.Common.RowUpdatedEventArgs" Usage="dbDataAdapter.CreateRowUpdatedEvent (dataRow, command, statementType, tableMapping)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.RowUpdatedEventArgs</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataRow" Type="System.Data.DataRow" />
        <Parameter Name="command" Type="System.Data.IDbCommand" />
        <Parameter Name="statementType" Type="System.Data.StatementType" />
        <Parameter Name="tableMapping" Type="System.Data.Common.DataTableMapping" />
      </Parameters>
      <Docs>
        <param name="dataRow">
          <span data-ttu-id="79025-135">The <see cref="T:System.Data.DataRow" /> used to update the data source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-135">The <see cref="T:System.Data.DataRow" /> used to update the data source.</span>
          </span>
        </param>
        <param name="command">
          <span data-ttu-id="79025-136">The <see cref="T:System.Data.IDbCommand" /> executed during the <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-136">The <see cref="T:System.Data.IDbCommand" /> executed during the <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />.</span>
          </span>
        </param>
        <param name="statementType">
          <span data-ttu-id="79025-137">Whether the command is an UPDATE, INSERT, DELETE, or SELECT statement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-137">Whether the command is an UPDATE, INSERT, DELETE, or SELECT statement.</span>
          </span>
        </param>
        <param name="tableMapping">
          <span data-ttu-id="79025-138">A <see cref="T:System.Data.Common.DataTableMapping" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-138">A <see cref="T:System.Data.Common.DataTableMapping" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="79025-139">Initializes a new instance of the <see cref="T:System.Data.Common.RowUpdatedEventArgs" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-139">Initializes a new instance of the <see cref="T:System.Data.Common.RowUpdatedEventArgs" /> class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="79025-140">A new instance of the <see cref="T:System.Data.Common.RowUpdatedEventArgs" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-140">A new instance of the <see cref="T:System.Data.Common.RowUpdatedEventArgs" /> class.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="79025-141">
            <para>在覆寫<see cref="M:System.Data.Common.DbDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" />在衍生類別中，請務必呼叫基底類別的<see cref="M:System.Data.Common.DbDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" />方法。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-141">
              <para>When overriding <see cref="M:System.Data.Common.DbDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" /> in a derived class, be sure to call the base class's <see cref="M:System.Data.Common.DbDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" /> method.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="CreateRowUpdatingEvent">
      <MemberSignature Language="C#" Value="protected virtual System.Data.Common.RowUpdatingEventArgs CreateRowUpdatingEvent (System.Data.DataRow dataRow, System.Data.IDbCommand command, System.Data.StatementType statementType, System.Data.Common.DataTableMapping tableMapping);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.Common.RowUpdatingEventArgs CreateRowUpdatingEvent(class System.Data.DataRow dataRow, class System.Data.IDbCommand command, valuetype System.Data.StatementType statementType, class System.Data.Common.DataTableMapping tableMapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Data::Common::RowUpdatingEventArgs ^ CreateRowUpdatingEvent(System::Data::DataRow ^ dataRow, System::Data::IDbCommand ^ command, System::Data::StatementType statementType, System::Data::Common::DataTableMapping ^ tableMapping);" />
      <MemberSignature Language="F#" Value="abstract member CreateRowUpdatingEvent : System.Data.DataRow * System.Data.IDbCommand * System.Data.StatementType * System.Data.Common.DataTableMapping -&gt; System.Data.Common.RowUpdatingEventArgs&#xA;override this.CreateRowUpdatingEvent : System.Data.DataRow * System.Data.IDbCommand * System.Data.StatementType * System.Data.Common.DataTableMapping -&gt; System.Data.Common.RowUpdatingEventArgs" Usage="dbDataAdapter.CreateRowUpdatingEvent (dataRow, command, statementType, tableMapping)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.RowUpdatingEventArgs</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataRow" Type="System.Data.DataRow" />
        <Parameter Name="command" Type="System.Data.IDbCommand" />
        <Parameter Name="statementType" Type="System.Data.StatementType" />
        <Parameter Name="tableMapping" Type="System.Data.Common.DataTableMapping" />
      </Parameters>
      <Docs>
        <param name="dataRow">
          <span data-ttu-id="79025-142">The <see cref="T:System.Data.DataRow" /> that updates the data source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-142">The <see cref="T:System.Data.DataRow" /> that updates the data source.</span>
          </span>
        </param>
        <param name="command">
          <span data-ttu-id="79025-143">The <see cref="T:System.Data.IDbCommand" /> to execute during the <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-143">The <see cref="T:System.Data.IDbCommand" /> to execute during the <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />.</span>
          </span>
        </param>
        <param name="statementType">
          <span data-ttu-id="79025-144">Whether the command is an UPDATE, INSERT, DELETE, or SELECT statement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-144">Whether the command is an UPDATE, INSERT, DELETE, or SELECT statement.</span>
          </span>
        </param>
        <param name="tableMapping">
          <span data-ttu-id="79025-145">A <see cref="T:System.Data.Common.DataTableMapping" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-145">A <see cref="T:System.Data.Common.DataTableMapping" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="79025-146">Initializes a new instance of the <see cref="T:System.Data.Common.RowUpdatingEventArgs" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-146">Initializes a new instance of the <see cref="T:System.Data.Common.RowUpdatingEventArgs" /> class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="79025-147">A new instance of the <see cref="T:System.Data.Common.RowUpdatingEventArgs" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-147">A new instance of the <see cref="T:System.Data.Common.RowUpdatingEventArgs" /> class.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="79025-148">
            <para>在覆寫<see cref="M:System.Data.Common.DbDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" />在衍生類別中，請務必呼叫基底類別的<see cref="M:System.Data.Common.DbDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" />方法。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-148">
              <para>When overriding <see cref="M:System.Data.Common.DbDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" /> in a derived class, be sure to call the base class's <see cref="M:System.Data.Common.DbDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" /> method.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="DefaultSourceTableName">
      <MemberSignature Language="C#" Value="public const string DefaultSourceTableName;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string DefaultSourceTableName" />
      <MemberSignature Language="DocId" Value="F:System.Data.Common.DbDataAdapter.DefaultSourceTableName" />
      <MemberSignature Language="VB.NET" Value="Public Const DefaultSourceTableName As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ DefaultSourceTableName;" />
      <MemberSignature Language="F#" Value="val mutable DefaultSourceTableName : string" Usage="System.Data.Common.DbDataAdapter.DefaultSourceTableName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="79025-149">The default name used by the <see cref="T:System.Data.Common.DataAdapter" /> object for table mappings.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-149">The default name used by the <see cref="T:System.Data.Common.DataAdapter" /> object for table mappings.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79025-150">「 資料表 」 是所使用的預設名稱<xref:System.Data.Common.DataAdapter>資料表對應的物件。</span><span class="sxs-lookup"><span data-stu-id="79025-150">"Table" is the default name used by the <xref:System.Data.Common.DataAdapter> object for table mappings.</span></span>  
  
 <span data-ttu-id="79025-151"><xref:System.Data.Common.DbDataAdapter.DefaultSourceTableName> 當應用程式加入資料表對應搭配使用時<xref:System.Data.Common.DbDataAdapter.Fill%2A>，但未指定<xref:System.Data.DataTable>名稱。</span><span class="sxs-lookup"><span data-stu-id="79025-151"><xref:System.Data.Common.DbDataAdapter.DefaultSourceTableName> is when an application adds a table mapping to be used with <xref:System.Data.Common.DbDataAdapter.Fill%2A>, but does not specify a <xref:System.Data.DataTable> name.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteCommand">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbCommand DeleteCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbCommand DeleteCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataAdapter.DeleteCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property DeleteCommand As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Common::DbCommand ^ DeleteCommand { System::Data::Common::DbCommand ^ get(); void set(System::Data::Common::DbCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DeleteCommand : System.Data.Common.DbCommand with get, set" Usage="System.Data.Common.DbDataAdapter.DeleteCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="79025-152">Gets or sets a command for deleting records from the data set.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-152">Gets or sets a command for deleting records from the data set.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="79025-153">
            <see cref="T:System.Data.IDbCommand" />期間使用<see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />資料集中刪除的資料列的資料來源中刪除記錄。</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-153">An <see cref="T:System.Data.IDbCommand" /> used during <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> to delete records in the data source for deleted rows in the data set.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79025-154">期間<xref:System.Data.Common.DbDataAdapter.Update%2A>，如果沒有設定這個屬性，並且出現在主索引鍵資訊<xref:System.Data.DataSet>、<xref:System.Data.IDbDataAdapter.DeleteCommand%2A>自動產生。</span><span class="sxs-lookup"><span data-stu-id="79025-154">During <xref:System.Data.Common.DbDataAdapter.Update%2A>, if this property is not set and primary key information is present in the <xref:System.Data.DataSet>, the <xref:System.Data.IDbDataAdapter.DeleteCommand%2A> is automatically generated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="79025-155">下列範例會建立衍生的類別<xref:System.Data.OleDb.OleDbDataAdapter>並設定其屬性的某些。</span><span class="sxs-lookup"><span data-stu-id="79025-155">The following example creates the derived class <xref:System.Data.OleDb.OleDbDataAdapter> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.DeleteCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.DeleteCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.DeleteCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.DeleteCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="dbDataAdapter.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="79025-156">
            <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-156">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="79025-157">Releases the unmanaged resources used by the <see cref="T:System.Data.Common.DbDataAdapter" /> and optionally releases the managed resources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-157">Releases the unmanaged resources used by the <see cref="T:System.Data.Common.DbDataAdapter" /> and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteBatch">
      <MemberSignature Language="C#" Value="protected virtual int ExecuteBatch ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 ExecuteBatch() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.ExecuteBatch" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ExecuteBatch () As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int ExecuteBatch();" />
      <MemberSignature Language="F#" Value="abstract member ExecuteBatch : unit -&gt; int&#xA;override this.ExecuteBatch : unit -&gt; int" Usage="dbDataAdapter.ExecuteBatch " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="79025-158">Executes the current batch.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-158">Executes the current batch.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="79025-159">The return value from the last command in the batch.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-159">The return value from the last command in the batch.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79025-160">在<xref:System.Data.Common.DbDataAdapter>，這個方法會擲回<xref:System.NotSupportedException>。</span><span class="sxs-lookup"><span data-stu-id="79025-160">In <xref:System.Data.Common.DbDataAdapter>, this method throws <xref:System.NotSupportedException>.</span></span> <span data-ttu-id="79025-161">類別繼承自<xref:System.Data.Common.DbDataAdapter>覆寫這個方法以提供支援批次。</span><span class="sxs-lookup"><span data-stu-id="79025-161">Classes that inherit from <xref:System.Data.Common.DbDataAdapter> override this method to provide support for batches.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="79025-162">
            <para>這個方法受到保護，可供使用的.NET Framework 資料提供者。如果類別繼承自<see cref="T:System.Data.Common.DbDataAdapter" />支援批次，該類別會覆寫此方法可讓使用者執行批次。這個方法的實作將配接器中的命令結合成一個批次，然後執行批次並傳回批次的傳回值。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-162">
              <para>This method is protected and is designed for use by a .NET Framework data provider.  If a class that inherits from <see cref="T:System.Data.Common.DbDataAdapter" /> supports batches, that class overrides this method to allow users to execute a batch. An implementation of this method combines the commands in the adapter into a batch, then executes the batch and returns the return value of the batch.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <MemberGroup MemberName="Fill">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="79025-163">Fills a <see cref="T:System.Data.DataSet" /> or a <see cref="T:System.Data.DataTable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-163">Fills a <see cref="T:System.Data.DataSet" /> or a <see cref="T:System.Data.DataTable" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="public override int Fill (System.Data.DataSet dataSet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Fill(class System.Data.DataSet dataSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int Fill(System::Data::DataSet ^ dataSet);" />
      <MemberSignature Language="F#" Value="override this.Fill : System.Data.DataSet -&gt; int" Usage="dbDataAdapter.Fill dataSet" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataAdapter.Fill(System.Data.DataSet)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
      </Parameters>
      <Docs>
        <param name="dataSet">
          <span data-ttu-id="79025-164">A <see cref="T:System.Data.DataSet" /> to fill with records and, if necessary, schema.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-164">A <see cref="T:System.Data.DataSet" /> to fill with records and, if necessary, schema.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="79025-165">Adds or refreshes rows in the <see cref="T:System.Data.DataSet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-165">Adds or refreshes rows in the <see cref="T:System.Data.DataSet" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="79025-166">The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataSet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-166">The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataSet" />.</span>
          </span>
          <span data-ttu-id="79025-167">This does not include rows affected by statements that do not return rows.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-167">This does not include rows affected by statements that do not return rows.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79025-168"><xref:System.Data.Common.DbDataAdapter.Fill%2A>方法會從使用 SELECT 陳述式的資料來源擷取資料。</span><span class="sxs-lookup"><span data-stu-id="79025-168">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method retrieves the data from the data source using a SELECT statement.</span></span> <span data-ttu-id="79025-169"><xref:System.Data.IDbConnection> Select 命令相關聯的物件必須有效，但它不需要開啟。</span><span class="sxs-lookup"><span data-stu-id="79025-169">The <xref:System.Data.IDbConnection> object associated with the select command must be valid, but it does not need to be open.</span></span> <span data-ttu-id="79025-170">如果<xref:System.Data.IDbConnection>前已關閉<xref:System.Data.Common.DbDataAdapter.Fill%2A>是呼叫，它會開啟擷取資料並關閉。</span><span class="sxs-lookup"><span data-stu-id="79025-170">If the <xref:System.Data.IDbConnection> is closed before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it is opened to retrieve data and then closed.</span></span> <span data-ttu-id="79025-171">如果連接為開啟之前<xref:System.Data.Common.DbDataAdapter.Fill%2A>是呼叫，它會保持開啟狀態。</span><span class="sxs-lookup"><span data-stu-id="79025-171">If the connection is open before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="79025-172">如果錯誤或例外狀況時發生填入資料的資料表，在發生錯誤之前所加入的資料列會保留在資料的資料表。</span><span class="sxs-lookup"><span data-stu-id="79025-172">If an error or an exception is encountered while populating the data tables, rows added prior to the occurrence of the error remain in the data tables.</span></span> <span data-ttu-id="79025-173">已中止運算的餘數。</span><span class="sxs-lookup"><span data-stu-id="79025-173">The remainder of the operation is aborted.</span></span>  
  
 <span data-ttu-id="79025-174">如果命令未傳回任何資料列，將資料表加入至<xref:System.Data.DataSet>，並會引發任何例外狀況。</span><span class="sxs-lookup"><span data-stu-id="79025-174">If a command does not return any rows, no tables are added to the <xref:System.Data.DataSet>, and no exception is raised.</span></span>  
  
 <span data-ttu-id="79025-175">如果<xref:System.Data.Common.DbDataAdapter>物件遇到重複的資料行在填入<xref:System.Data.DataTable>，它會產生後續使用模式的資料行名稱"*columnname*1"，"*columnname*2"，"*columnname*3"等等。</span><span class="sxs-lookup"><span data-stu-id="79025-175">If the <xref:System.Data.Common.DbDataAdapter> object encounters duplicate columns while populating a <xref:System.Data.DataTable>, it generates names for the subsequent columns using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="79025-176">如果內送資料中包含未命名資料行，它們會放置於<xref:System.Data.DataSet>根據模式"Column1"、"Column2"，等等。</span><span class="sxs-lookup"><span data-stu-id="79025-176">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span>  
  
 <span data-ttu-id="79025-177">當指定的查詢傳回多個結果時，結果集傳回查詢的每個資料列位於個別的資料表。</span><span class="sxs-lookup"><span data-stu-id="79025-177">When the query specified returns multiple results, the result set for each row returning query is placed in a separate table.</span></span> <span data-ttu-id="79025-178">其他結果集的命名方式是附加至指定的資料表名稱 （例如，"Table"、"Table1"、"Table2"等等） 的整數值。</span><span class="sxs-lookup"><span data-stu-id="79025-178">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on).</span></span> <span data-ttu-id="79025-179">不會建立資料表查詢不會傳回資料列，如果您在處理 insert 查詢後面的 select 查詢，因為資料表建立選取查詢的名稱為"Table"因為它是建立的第一個資料表。</span><span class="sxs-lookup"><span data-stu-id="79025-179">Because no table is created for a query that does not return rows, if you process an insert query followed by a select query, the table created for the select query is named "Table" because it is the first table created.</span></span> <span data-ttu-id="79025-180">使用資料行和資料表名稱的應用程式應確保這些命名模式衝突不會發生。</span><span class="sxs-lookup"><span data-stu-id="79025-180">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="79025-181">當 SELECT 陳述式用來填入<xref:System.Data.DataSet>傳回多個結果，例如批次 SQL 陳述式，如果其中一個結果包含錯誤，會略過所有後續的結果並不會加入至<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="79025-181">When the SELECT statement used to populate the <xref:System.Data.DataSet> returns multiple results, such as batch SQL statements, if one of the results contains an error, all subsequent results are skipped and are not added to the <xref:System.Data.DataSet>.</span></span>  
  
 <span data-ttu-id="79025-182">當使用後續<xref:System.Data.Common.DbDataAdapter.Fill%2A>對更新的內容呼叫<xref:System.Data.DataSet>，必須符合兩個條件：</span><span class="sxs-lookup"><span data-stu-id="79025-182">When using subsequent <xref:System.Data.Common.DbDataAdapter.Fill%2A> calls to refresh the contents of the <xref:System.Data.DataSet>, two conditions must be met:</span></span>  
  
1.  <span data-ttu-id="79025-183">SQL 陳述式應該符合最初用來填入<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="79025-183">The SQL statement should match the one initially used to populate the <xref:System.Data.DataSet>.</span></span>  
  
2.  <span data-ttu-id="79025-184">**金鑰**必須存在的資料行資訊。</span><span class="sxs-lookup"><span data-stu-id="79025-184">The **Key** column information must be present.</span></span>  
  
 <span data-ttu-id="79025-185">如果主索引鍵資訊存在時，任何重複的資料列和一致，而且只能出現一次在<xref:System.Data.DataTable>對應於<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="79025-185">If primary key information is present, any duplicate rows are reconciled and only appear once in the <xref:System.Data.DataTable> that corresponds to the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="79025-186">主索引鍵資訊可能會設定透過<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>，藉由指定<xref:System.Data.DataTable.PrimaryKey%2A>屬性<xref:System.Data.DataTable>，或藉由設定<xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>屬性`AddWithKey`。</span><span class="sxs-lookup"><span data-stu-id="79025-186">Primary key information may be set either through <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, by specifying the <xref:System.Data.DataTable.PrimaryKey%2A> property of the <xref:System.Data.DataTable>, or by setting the <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> property to `AddWithKey`.</span></span>  
  
 <span data-ttu-id="79025-187">如果 `SelectCommand` 傳回 OUTER JOIN 的結果，則 `DataAdapter` 便不會為產生的 <xref:System.Data.DataTable.PrimaryKey%2A> 設定 <xref:System.Data.DataTable> 值。</span><span class="sxs-lookup"><span data-stu-id="79025-187">If the `SelectCommand` returns the results of an OUTER JOIN, the `DataAdapter` does not set a <xref:System.Data.DataTable.PrimaryKey%2A> value for the resulting <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="79025-188">您必須明確定義主索引鍵，以確保正確解析重複的資料列。</span><span class="sxs-lookup"><span data-stu-id="79025-188">You must explicitly define the primary key to ensure that duplicate rows are resolved correctly.</span></span> <span data-ttu-id="79025-189">如需詳細資訊，請參閱[定義主索引鍵](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md)。</span><span class="sxs-lookup"><span data-stu-id="79025-189">For more information, see [Defining Primary Keys](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="79025-190">處理批次傳回多個結果，實作的 SQL 陳述式時<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>的.NET Framework Data Provider for OLE DB 擷取，只有第一個結果的結構描述資訊。</span><span class="sxs-lookup"><span data-stu-id="79025-190">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</span></span> <span data-ttu-id="79025-191">若要擷取多個結果的結構描述資訊，請使用<xref:System.Data.Common.DbDataAdapter.Fill%2A>與<xref:System.Data.MissingSchemaAction>設`AddWithKey`。</span><span class="sxs-lookup"><span data-stu-id="79025-191">To retrieve schema information for multiple results, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> with the <xref:System.Data.MissingSchemaAction> set to `AddWithKey`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="public int Fill (System.Data.DataTable dataTable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Fill(class System.Data.DataTable dataTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Fill(System::Data::DataTable ^ dataTable);" />
      <MemberSignature Language="F#" Value="override this.Fill : System.Data.DataTable -&gt; int" Usage="dbDataAdapter.Fill dataTable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataTable" Type="System.Data.DataTable" />
      </Parameters>
      <Docs>
        <param name="dataTable">
          <span data-ttu-id="79025-192">The name of the <see cref="T:System.Data.DataTable" /> to use for table mapping.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-192">The name of the <see cref="T:System.Data.DataTable" /> to use for table mapping.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="79025-193">Adds or refreshes rows in a specified range in the <see cref="T:System.Data.DataSet" /> to match those in the data source using the <see cref="T:System.Data.DataTable" /> name.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-193">Adds or refreshes rows in a specified range in the <see cref="T:System.Data.DataSet" /> to match those in the data source using the <see cref="T:System.Data.DataTable" /> name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="79025-194">The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataSet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-194">The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataSet" />.</span>
          </span>
          <span data-ttu-id="79025-195">This does not include rows affected by statements that do not return rows.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-195">This does not include rows affected by statements that do not return rows.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79025-196"><xref:System.Data.Common.DbDataAdapter.Fill%2A>方法會從使用 SELECT 陳述式指定由相關聯的資料來源擷取資料列<xref:System.Data.IDbDataAdapter.SelectCommand%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="79025-196">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method retrieves rows from the data source using the SELECT statement specified by an associated <xref:System.Data.IDbDataAdapter.SelectCommand%2A> property.</span></span> <span data-ttu-id="79025-197">SELECT 陳述式相關聯的連接物件必須有效，但它不需要開啟。</span><span class="sxs-lookup"><span data-stu-id="79025-197">The connection object associated with the SELECT statement must be valid, but it does not need to be open.</span></span> <span data-ttu-id="79025-198">如果連接已關閉之前<xref:System.Data.Common.DbDataAdapter.Fill%2A>是呼叫，它會開啟擷取資料，然後關閉。</span><span class="sxs-lookup"><span data-stu-id="79025-198">If the connection is closed before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it is opened to retrieve data, then closed.</span></span> <span data-ttu-id="79025-199">如果連接為開啟之前<xref:System.Data.Common.DbDataAdapter.Fill%2A>是呼叫，它會保持開啟狀態。</span><span class="sxs-lookup"><span data-stu-id="79025-199">If the connection is open before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="79025-200"><xref:System.Data.Common.DbDataAdapter.Fill%2A>作業接著會將資料列加入到目的地<xref:System.Data.DataTable>中的物件<xref:System.Data.DataSet>、 建立<xref:System.Data.DataTable>如果它們尚不存在的物件。</span><span class="sxs-lookup"><span data-stu-id="79025-200">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> operation then adds the rows to destination <xref:System.Data.DataTable> objects in the <xref:System.Data.DataSet>, creating the <xref:System.Data.DataTable> objects if they do not already exist.</span></span> <span data-ttu-id="79025-201">建立時<xref:System.Data.DataTable>物件<xref:System.Data.Common.DbDataAdapter.Fill%2A>作業通常會建立只有資料行名稱中繼資料。</span><span class="sxs-lookup"><span data-stu-id="79025-201">When creating <xref:System.Data.DataTable> objects, the <xref:System.Data.Common.DbDataAdapter.Fill%2A> operation normally creates only column name metadata.</span></span> <span data-ttu-id="79025-202">不過，如果<xref:System.Data.IDataAdapter.MissingSchemaAction%2A>屬性設定為`AddWithKey`，也會建立適當的主索引鍵和條件約束。</span><span class="sxs-lookup"><span data-stu-id="79025-202">However, if the <xref:System.Data.IDataAdapter.MissingSchemaAction%2A> property is set to `AddWithKey`, appropriate primary keys and constraints are also created.</span></span>  
  
 <span data-ttu-id="79025-203">如果<xref:System.Data.Common.DbDataAdapter>遇到重複的資料行在填入<xref:System.Data.DataTable>，它會產生後續的資料行，並使用模式的名稱"*columnname*1"，"*columnname*2"，"*columnname*3"等等。</span><span class="sxs-lookup"><span data-stu-id="79025-203">If the <xref:System.Data.Common.DbDataAdapter> encounters duplicate columns while populating a <xref:System.Data.DataTable>, it generates names for the subsequent columns, using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="79025-204">如果內送資料中包含未命名資料行，它們會放置於<xref:System.Data.DataSet>根據模式"Column1"、"Column2"，等等。</span><span class="sxs-lookup"><span data-stu-id="79025-204">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span> <span data-ttu-id="79025-205">當多個結果集加入至<xref:System.Data.DataSet>放置於個別的資料表中每個結果集。</span><span class="sxs-lookup"><span data-stu-id="79025-205">When multiple result sets are added to the <xref:System.Data.DataSet> each result set is placed in a separate table.</span></span>  
  
 <span data-ttu-id="79025-206">多載<xref:System.Data.Common.DbDataAdapter.Fill%2A>採用`DataTable`如參數只會取得第一個結果。</span><span class="sxs-lookup"><span data-stu-id="79025-206">The overload of <xref:System.Data.Common.DbDataAdapter.Fill%2A> that takes `DataTable` as a parameter only obtains the first result.</span></span> <span data-ttu-id="79025-207">使用的多載<xref:System.Data.Common.DbDataAdapter.Fill%2A>採用`DataSet`做為參數來取得多個結果。</span><span class="sxs-lookup"><span data-stu-id="79025-207">Use an overload of <xref:System.Data.Common.DbDataAdapter.Fill%2A> that takes `DataSet` as a parameter to obtain multiple results.</span></span>  
  
 <span data-ttu-id="79025-208"><xref:System.Data.Common.DbDataAdapter.Fill%2A>方法支援案例其中<xref:System.Data.DataSet>包含多個<xref:System.Data.DataTable>名稱只有大小寫不同的物件。</span><span class="sxs-lookup"><span data-stu-id="79025-208">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method supports scenarios where the <xref:System.Data.DataSet> contains multiple <xref:System.Data.DataTable> objects whose names differ only by case.</span></span> <span data-ttu-id="79025-209">在這種情況下，<xref:System.Data.Common.DbDataAdapter.Fill%2A>執行區分大小寫的比較，來尋找對應的資料表，並建立新的資料表，如果沒有完全相符項目存在。</span><span class="sxs-lookup"><span data-stu-id="79025-209">In such situations, <xref:System.Data.Common.DbDataAdapter.Fill%2A> performs a case-sensitive comparison to find the corresponding table, and creates a new table if no exact match exists.</span></span> <span data-ttu-id="79025-210">下列 C# 程式碼說明這個行為。</span><span class="sxs-lookup"><span data-stu-id="79025-210">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
 dataset.Tables.Add("aaa");  
 dataset.Tables.Add("AAA");  
 adapter.Fill(dataset, "aaa"); // Fills "aaa", which already exists in the DataSet.  
    adapter.Fill(dataset, "Aaa"); // Adds a new table called "Aaa".  
```  
  
 <span data-ttu-id="79025-211">如果<xref:System.Data.Common.DbDataAdapter.Fill%2A>稱為和<xref:System.Data.DataSet>只包含<xref:System.Data.DataTable>名稱只有大小寫不同的<xref:System.Data.DataTable>會更新。</span><span class="sxs-lookup"><span data-stu-id="79025-211">If <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called and the <xref:System.Data.DataSet> contains only one <xref:System.Data.DataTable> whose name differs only by case, that <xref:System.Data.DataTable> is updated.</span></span> <span data-ttu-id="79025-212">在此案例中，這個比較是不區分大小寫。</span><span class="sxs-lookup"><span data-stu-id="79025-212">In this scenario, the comparison is case insensitive.</span></span> <span data-ttu-id="79025-213">下列 C# 程式碼說明這個行為。</span><span class="sxs-lookup"><span data-stu-id="79025-213">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
 dataset.Tables.Add("aaa");  
    adapter.Fill(dataset, "AAA"); // Fills table "aaa" because only one similarly named table is in the DataSet.  
```  
  
 <span data-ttu-id="79025-214">您可以使用<xref:System.Data.Common.DbDataAdapter.Fill%2A>上多次相同的方法<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="79025-214">You can use the <xref:System.Data.Common.DbDataAdapter.Fill%2A> method multiple times on the same <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="79025-215">如果主索引鍵存在，內送資料列會合併具有相符的資料列已經存在。</span><span class="sxs-lookup"><span data-stu-id="79025-215">If a primary key exists, incoming rows are merged with matching rows that already exist.</span></span> <span data-ttu-id="79025-216">如果沒有主索引鍵存在，將內送資料列附加至<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="79025-216">If no primary key exists, incoming rows are appended to the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="79025-217">如果 `SelectCommand` 傳回 OUTER JOIN 的結果，則 `DataAdapter` 便不會為產生的 <xref:System.Data.DataTable.PrimaryKey%2A> 設定 <xref:System.Data.DataTable> 值。</span><span class="sxs-lookup"><span data-stu-id="79025-217">If the `SelectCommand` returns the results of an OUTER JOIN, the `DataAdapter` does not set a <xref:System.Data.DataTable.PrimaryKey%2A> value for the resulting <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="79025-218">您必須明確定義主索引鍵，以確保正確解析重複的資料列。</span><span class="sxs-lookup"><span data-stu-id="79025-218">You must explicitly define the primary key to ensure that duplicate rows are resolved correctly.</span></span> <span data-ttu-id="79025-219">如需詳細資訊，請參閱[定義主索引鍵](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md)。</span><span class="sxs-lookup"><span data-stu-id="79025-219">For more information, see [Defining Primary Keys](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="79025-220">處理批次傳回多個結果，實作的 SQL 陳述式時<xref:System.Data.Common.DbDataAdapter.Fill%2A>和<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>對於.NET Framework 資料提供者擷取結構描述資訊，只有第一個結果。</span><span class="sxs-lookup"><span data-stu-id="79025-220">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.Fill%2A> and <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for a .NET Framework data provider retrieves schema information for only the first result.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="79025-221">The source table is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-221">The source table is invalid.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="79025-222">
            <para>這個多載<see cref="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)" />被保護的設計為使用.NET Framework 資料提供者方法。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-222">
              <para>This overload of the <see cref="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)" /> method is protected and is designed for use by a .NET Framework data provider.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="public int Fill (System.Data.DataSet dataSet, string srcTable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Fill(class System.Data.DataSet dataSet, string srcTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Fill(System::Data::DataSet ^ dataSet, System::String ^ srcTable);" />
      <MemberSignature Language="F#" Value="override this.Fill : System.Data.DataSet * string -&gt; int" Usage="dbDataAdapter.Fill (dataSet, srcTable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
        <Parameter Name="srcTable" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dataSet">
          <span data-ttu-id="79025-223">A <see cref="T:System.Data.DataSet" /> to fill with records and, if necessary, schema.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-223">A <see cref="T:System.Data.DataSet" /> to fill with records and, if necessary, schema.</span>
          </span>
        </param>
        <param name="srcTable">
          <span data-ttu-id="79025-224">The name of the source table to use for table mapping.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-224">The name of the source table to use for table mapping.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="79025-225">Adds or refreshes rows in the <see cref="T:System.Data.DataSet" /> to match those in the data source using the <see cref="T:System.Data.DataSet" /> and <see cref="T:System.Data.DataTable" /> names.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-225">Adds or refreshes rows in the <see cref="T:System.Data.DataSet" /> to match those in the data source using the <see cref="T:System.Data.DataSet" /> and <see cref="T:System.Data.DataTable" /> names.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="79025-226">The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataSet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-226">The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataSet" />.</span>
          </span>
          <span data-ttu-id="79025-227">This does not include rows affected by statements that do not return rows.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-227">This does not include rows affected by statements that do not return rows.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79025-228"><xref:System.Data.Common.DbDataAdapter.Fill%2A>方法會從使用 SELECT 陳述式的資料來源擷取資料。</span><span class="sxs-lookup"><span data-stu-id="79025-228">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method retrieves the data from the data source using a SELECT statement.</span></span> <span data-ttu-id="79025-229"><xref:System.Data.IDbConnection> Select 命令相關聯的物件必須有效，但它不需要開啟。</span><span class="sxs-lookup"><span data-stu-id="79025-229">The <xref:System.Data.IDbConnection> object associated with the select command must be valid, but it does not need to be open.</span></span> <span data-ttu-id="79025-230">如果<xref:System.Data.IDbConnection>前已關閉<xref:System.Data.Common.DbDataAdapter.Fill%2A>是呼叫，它會開啟擷取資料，然後關閉。</span><span class="sxs-lookup"><span data-stu-id="79025-230">If the <xref:System.Data.IDbConnection> is closed before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it is opened to retrieve data, then closed.</span></span> <span data-ttu-id="79025-231">如果連接為開啟之前<xref:System.Data.Common.DbDataAdapter.Fill%2A>是呼叫，它會保持開啟狀態。</span><span class="sxs-lookup"><span data-stu-id="79025-231">If the connection is open before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="79025-232">如果命令未傳回任何資料列，將資料表加入至<xref:System.Data.DataSet>，並會引發任何例外狀況。</span><span class="sxs-lookup"><span data-stu-id="79025-232">If a command does not return any rows, no tables are added to the <xref:System.Data.DataSet>, and no exception is raised.</span></span>  
  
 <span data-ttu-id="79025-233">如果<xref:System.Data.Common.DbDataAdapter>物件遇到重複的資料行在填入<xref:System.Data.DataTable>，它會產生後續的資料行，並使用模式 」 columnname1"、"columnname2"、"columnname3 」 和等等的名稱。</span><span class="sxs-lookup"><span data-stu-id="79025-233">If the <xref:System.Data.Common.DbDataAdapter> object encounters duplicate columns while populating a <xref:System.Data.DataTable>, it will generate names for the subsequent columns, using the pattern "columnname1", "columnname2", "columnname3", and so on.</span></span> <span data-ttu-id="79025-234">如果內送資料中包含未命名資料行，它們會放置於<xref:System.Data.DataSet>根據模式"Column1"、"Column2"，等等。</span><span class="sxs-lookup"><span data-stu-id="79025-234">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span>  
  
 <span data-ttu-id="79025-235">當指定的查詢傳回多個結果時，每個結果集被放在個別的資料表。</span><span class="sxs-lookup"><span data-stu-id="79025-235">When the query specified returns multiple results, each result set is placed in a separate table.</span></span> <span data-ttu-id="79025-236">其他結果集的命名方式是附加至指定的資料表名稱 （例如，"Table"、"Table1"、"Table2"等等） 的整數值。</span><span class="sxs-lookup"><span data-stu-id="79025-236">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on).</span></span> <span data-ttu-id="79025-237">不會建立資料表查詢不會傳回資料列，如果您要處理插入查詢後面的 select 查詢，因為建立選取查詢的資料表就會命名為"Table"，因為它是建立的第一個資料表。</span><span class="sxs-lookup"><span data-stu-id="79025-237">Since no table is created for a query that does not return rows, if you were to process an insert query followed by a select query, the table created for the select query would be named "Table", because it is the first table created.</span></span> <span data-ttu-id="79025-238">使用資料行和資料表名稱的應用程式應確保這些命名模式衝突不會發生。</span><span class="sxs-lookup"><span data-stu-id="79025-238">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="79025-239"><xref:System.Data.Common.DbDataAdapter.Fill%2A>方法支援案例其中<xref:System.Data.DataSet>包含多個<xref:System.Data.DataTable>名稱只有大小寫不同的物件。</span><span class="sxs-lookup"><span data-stu-id="79025-239">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method supports scenarios where the <xref:System.Data.DataSet> contains multiple <xref:System.Data.DataTable> objects whose names differ only by case.</span></span> <span data-ttu-id="79025-240">在這種情況下，<xref:System.Data.Common.DbDataAdapter.Fill%2A>執行區分大小寫的比較，來尋找對應的資料表，並建立新的資料表，如果沒有完全相符項目存在。</span><span class="sxs-lookup"><span data-stu-id="79025-240">In such situations, <xref:System.Data.Common.DbDataAdapter.Fill%2A> performs a case-sensitive comparison to find the corresponding table, and creates a new table if no exact match exists.</span></span> <span data-ttu-id="79025-241">下列 C# 程式碼說明這個行為。</span><span class="sxs-lookup"><span data-stu-id="79025-241">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
dataset.Tables.Add("AAA");  
adapter.Fill(dataset, "aaa"); // Fills "aaa", which already exists in the DataSet.  
adapter.Fill(dataset, "Aaa"); // Adds a new table called "Aaa".  
```  
  
 <span data-ttu-id="79025-242">如果<xref:System.Data.Common.DbDataAdapter.Fill%2A>稱為和<xref:System.Data.DataSet>只包含<xref:System.Data.DataTable>名稱只有大小寫不同的<xref:System.Data.DataTable>會更新。</span><span class="sxs-lookup"><span data-stu-id="79025-242">If <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called and the <xref:System.Data.DataSet> contains only one <xref:System.Data.DataTable> whose name differs only by case, that <xref:System.Data.DataTable> is updated.</span></span> <span data-ttu-id="79025-243">在此案例中，這個比較是不區分大小寫。</span><span class="sxs-lookup"><span data-stu-id="79025-243">In this scenario, the comparison is case insensitive.</span></span> <span data-ttu-id="79025-244">下列 C# 程式碼說明這個行為。</span><span class="sxs-lookup"><span data-stu-id="79025-244">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
adapter.Fill(dataset, "AAA"); // Fills table "aaa" because only one similarly named table is in the DataSet.  
```  
  
 <span data-ttu-id="79025-245">如果錯誤或例外狀況時發生填入資料的資料表，在發生錯誤之前所加入的資料列會保留在資料的資料表。</span><span class="sxs-lookup"><span data-stu-id="79025-245">If an error or an exception is encountered while populating the data tables, rows added prior to the occurrence of the error remain in the data tables.</span></span> <span data-ttu-id="79025-246">已中止運算的餘數。</span><span class="sxs-lookup"><span data-stu-id="79025-246">The remainder of the operation is aborted.</span></span>  
  
 <span data-ttu-id="79025-247">當 SELECT 陳述式用來填入<xref:System.Data.DataSet>會傳回多個結果，例如批次 SQL 陳述式，可注意下列事項：</span><span class="sxs-lookup"><span data-stu-id="79025-247">When the SELECT statement used to populate the <xref:System.Data.DataSet> returns multiple results, such as a batch SQL statement, be aware of the following:</span></span>  
  
-   <span data-ttu-id="79025-248">如果其中一個結果包含錯誤時，會略過所有後續的結果，且未新增到<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="79025-248">If one of the results contains an error, all subsequent results are skipped and not added to the <xref:System.Data.DataSet>.</span></span>  
  
 <span data-ttu-id="79025-249">當使用後續<xref:System.Data.Common.DbDataAdapter.Fill%2A>對更新的內容呼叫<xref:System.Data.DataSet>，必須符合兩個條件：</span><span class="sxs-lookup"><span data-stu-id="79025-249">When using subsequent <xref:System.Data.Common.DbDataAdapter.Fill%2A> calls to refresh the contents of the <xref:System.Data.DataSet>, two conditions must be met:</span></span>  
  
1.  <span data-ttu-id="79025-250">SQL 陳述式應該符合最初用來填入<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="79025-250">The SQL statement should match the one initially used to populate the <xref:System.Data.DataSet>.</span></span>  
  
2.  <span data-ttu-id="79025-251">**金鑰**必須存在的資料行資訊。</span><span class="sxs-lookup"><span data-stu-id="79025-251">The **Key** column information must be present.</span></span> <span data-ttu-id="79025-252">如果主索引鍵資訊存在時，任何重複的資料列和一致，而且只能出現一次在<xref:System.Data.DataTable>對應於<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="79025-252">If primary key information is present, any duplicate rows are reconciled and only appear once in the <xref:System.Data.DataTable> that corresponds to the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="79025-253">主索引鍵資訊可能會設定透過<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>，藉由指定<xref:System.Data.DataTable.PrimaryKey%2A>屬性<xref:System.Data.DataTable>，或藉由設定<xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>屬性`AddWithKey`。</span><span class="sxs-lookup"><span data-stu-id="79025-253">Primary key information may be set either through <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, by specifying the <xref:System.Data.DataTable.PrimaryKey%2A> property of the <xref:System.Data.DataTable>, or by setting the <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> property to `AddWithKey`.</span></span>  
  
 <span data-ttu-id="79025-254">如果 `SelectCommand` 傳回 OUTER JOIN 的結果，則 `DataAdapter` 便不會為產生的 <xref:System.Data.DataTable.PrimaryKey%2A> 設定 <xref:System.Data.DataTable> 值。</span><span class="sxs-lookup"><span data-stu-id="79025-254">If the `SelectCommand` returns the results of an OUTER JOIN, the `DataAdapter` does not set a <xref:System.Data.DataTable.PrimaryKey%2A> value for the resulting <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="79025-255">您必須明確定義主索引鍵，以確保正確解析重複的資料列。</span><span class="sxs-lookup"><span data-stu-id="79025-255">You must explicitly define the primary key to ensure that duplicate rows are resolved correctly.</span></span> <span data-ttu-id="79025-256">如需詳細資訊，請參閱[定義主索引鍵](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md)。</span><span class="sxs-lookup"><span data-stu-id="79025-256">For more information, see [Defining Primary Keys](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="79025-257">處理批次傳回多個結果，實作的 SQL 陳述式時<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>的.NET Framework Data Provider for OLE DB 擷取，只有第一個結果的結構描述資訊。</span><span class="sxs-lookup"><span data-stu-id="79025-257">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</span></span> <span data-ttu-id="79025-258">若要擷取多個結果的結構描述資訊，請使用<xref:System.Data.Common.DbDataAdapter.Fill%2A>與<xref:System.Data.MissingSchemaAction>設`AddWithKey`。</span><span class="sxs-lookup"><span data-stu-id="79025-258">To retrieve schema information for multiple results, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> with the <xref:System.Data.MissingSchemaAction> set to `AddWithKey`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="79025-259">下列範例會使用衍生的類別， <xref:System.Data.OleDb.OleDbDataAdapter>，以填滿<xref:System.Data.DataSet>從 categories 資料表的資料列。</span><span class="sxs-lookup"><span data-stu-id="79025-259">The following example uses the derived class, <xref:System.Data.OleDb.OleDbDataAdapter>, to fill a <xref:System.Data.DataSet> with rows from the categories table.</span></span> <span data-ttu-id="79025-260">這個範例假設您已建立<xref:System.Data.OleDb.OleDbDataAdapter>和<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="79025-260">This example assumes that you have created an <xref:System.Data.OleDb.OleDbDataAdapter> and a <xref:System.Data.DataSet>.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.Fill2 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Fill2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.Fill2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Fill2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.SystemException">
          <span data-ttu-id="79025-261">The source table is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-261">The source table is invalid.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="79025-262">
            <para>在覆寫<see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" />在衍生類別中，請務必呼叫基底類別的<see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" />方法。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-262">
              <para>When overriding <see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /> in a derived class, be sure to call the base class's <see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /> method.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="protected virtual int Fill (System.Data.DataTable dataTable, System.Data.IDbCommand command, System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 Fill(class System.Data.DataTable dataTable, class System.Data.IDbCommand command, valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable,System.Data.IDbCommand,System.Data.CommandBehavior)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int Fill(System::Data::DataTable ^ dataTable, System::Data::IDbCommand ^ command, System::Data::CommandBehavior behavior);" />
      <MemberSignature Language="F#" Value="override this.Fill : System.Data.DataTable * System.Data.IDbCommand * System.Data.CommandBehavior -&gt; int" Usage="dbDataAdapter.Fill (dataTable, command, behavior)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataTable" Type="System.Data.DataTable" />
        <Parameter Name="command" Type="System.Data.IDbCommand" />
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" />
      </Parameters>
      <Docs>
        <param name="dataTable">
          <span data-ttu-id="79025-263">A <see cref="T:System.Data.DataTable" /> to fill with records and, if necessary, schema.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-263">A <see cref="T:System.Data.DataTable" /> to fill with records and, if necessary, schema.</span>
          </span>
        </param>
        <param name="command">
          <span data-ttu-id="79025-264">The SQL SELECT statement used to retrieve rows from the data source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-264">The SQL SELECT statement used to retrieve rows from the data source.</span>
          </span>
        </param>
        <param name="behavior">
          <span data-ttu-id="79025-265">One of the <see cref="T:System.Data.CommandBehavior" /> values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-265">One of the <see cref="T:System.Data.CommandBehavior" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="79025-266">Adds or refreshes rows in a <see cref="T:System.Data.DataTable" /> to match those in the data source using the specified <see cref="T:System.Data.DataTable" />, <see cref="T:System.Data.IDbCommand" /> and <see cref="T:System.Data.CommandBehavior" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-266">Adds or refreshes rows in a <see cref="T:System.Data.DataTable" /> to match those in the data source using the specified <see cref="T:System.Data.DataTable" />, <see cref="T:System.Data.IDbCommand" /> and <see cref="T:System.Data.CommandBehavior" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="79025-267">The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataTable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-267">The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataTable" />.</span>
          </span>
          <span data-ttu-id="79025-268">This does not include rows affected by statements that do not return rows.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-268">This does not include rows affected by statements that do not return rows.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79025-269"><xref:System.Data.Common.DbDataAdapter.Fill%2A>方法會從使用 SELECT 陳述式指定由相關聯的資料來源擷取資料列<xref:System.Data.IDbDataAdapter.SelectCommand%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="79025-269">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method retrieves rows from the data source using the SELECT statement specified by an associated <xref:System.Data.IDbDataAdapter.SelectCommand%2A> property.</span></span> <span data-ttu-id="79025-270">SELECT 陳述式相關聯的連接物件必須有效，但它不需要開啟。</span><span class="sxs-lookup"><span data-stu-id="79025-270">The connection object associated with the SELECT statement must be valid, but it does not need to be open.</span></span> <span data-ttu-id="79025-271">如果連接已關閉之前<xref:System.Data.Common.DbDataAdapter.Fill%2A>是呼叫，它會開啟擷取資料並關閉。</span><span class="sxs-lookup"><span data-stu-id="79025-271">If the connection is closed before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it is opened to retrieve data and then closed.</span></span> <span data-ttu-id="79025-272">如果連接為開啟之前<xref:System.Data.Common.DbDataAdapter.Fill%2A>是呼叫，它會保持開啟狀態。</span><span class="sxs-lookup"><span data-stu-id="79025-272">If the connection is open before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="79025-273"><xref:System.Data.Common.DbDataAdapter.Fill%2A>作業接著會將資料列加入到指定的目的地<xref:System.Data.DataTable>物件存放至<xref:System.Data.DataSet>、 建立<xref:System.Data.DataTable>如果它不存在的物件。</span><span class="sxs-lookup"><span data-stu-id="79025-273">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> operation then adds the rows to the specified destination <xref:System.Data.DataTable> object in the <xref:System.Data.DataSet>, creating the <xref:System.Data.DataTable> object if it does not already exist.</span></span> <span data-ttu-id="79025-274">建立時<xref:System.Data.DataTable>物件<xref:System.Data.Common.DbDataAdapter.Fill%2A>作業通常會建立只有資料行名稱中繼資料。</span><span class="sxs-lookup"><span data-stu-id="79025-274">When creating a <xref:System.Data.DataTable> object, the <xref:System.Data.Common.DbDataAdapter.Fill%2A> operation normally creates only column name metadata.</span></span> <span data-ttu-id="79025-275">不過，如果<xref:System.Data.IDataAdapter.MissingSchemaAction%2A>屬性設定為`AddWithKey`，也會建立適當的主索引鍵和條件約束。</span><span class="sxs-lookup"><span data-stu-id="79025-275">However, if the <xref:System.Data.IDataAdapter.MissingSchemaAction%2A> property is set to `AddWithKey`, appropriate primary keys and constraints are also created.</span></span>  
  
 <span data-ttu-id="79025-276">如果<xref:System.Data.Common.DbDataAdapter>物件遇到重複的資料行在填入<xref:System.Data.DataTable>，它會產生後續的資料行，並使用模式的名稱"*columnname*1"，"*columnname*2"，"*columnname*3 」，依此類推。</span><span class="sxs-lookup"><span data-stu-id="79025-276">If the <xref:System.Data.Common.DbDataAdapter> object encounters duplicate columns while populating a <xref:System.Data.DataTable>, it will generate names for the subsequent columns, using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="79025-277">如果內送資料中包含未命名資料行，它們會放置於<xref:System.Data.DataSet>根據模式"Column1"、"Column2"，等等。</span><span class="sxs-lookup"><span data-stu-id="79025-277">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span>  
  
 <span data-ttu-id="79025-278">多載<xref:System.Data.Common.DbDataAdapter.Fill%2A>採用`DataTable`如參數只會取得第一個結果。</span><span class="sxs-lookup"><span data-stu-id="79025-278">The overload of <xref:System.Data.Common.DbDataAdapter.Fill%2A> that takes `DataTable` as a parameter only obtains the first result.</span></span> <span data-ttu-id="79025-279">使用的多載<xref:System.Data.Common.DbDataAdapter.Fill%2A>採用`DataSet`做為參數來取得多個結果。</span><span class="sxs-lookup"><span data-stu-id="79025-279">Use an overload of <xref:System.Data.Common.DbDataAdapter.Fill%2A> that takes `DataSet` as a parameter to obtain multiple results.</span></span>  
  
 <span data-ttu-id="79025-280">您可以使用<xref:System.Data.Common.DbDataAdapter.Fill%2A>上多次相同的方法<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="79025-280">You can use the <xref:System.Data.Common.DbDataAdapter.Fill%2A> method multiple times on the same <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="79025-281">如果主索引鍵存在，內送資料列會合併具有相符的資料列已經存在。</span><span class="sxs-lookup"><span data-stu-id="79025-281">If a primary key exists, incoming rows are merged with matching rows that already exist.</span></span> <span data-ttu-id="79025-282">如果沒有主索引鍵存在，將內送資料列附加至<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="79025-282">If no primary key exists, incoming rows are appended to the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="79025-283">如果 `SelectCommand` 傳回 OUTER JOIN 的結果，則 `DataAdapter` 便不會為產生的 <xref:System.Data.DataTable.PrimaryKey%2A> 設定 <xref:System.Data.DataTable> 值。</span><span class="sxs-lookup"><span data-stu-id="79025-283">If the `SelectCommand` returns the results of an OUTER JOIN, the `DataAdapter` does not set a <xref:System.Data.DataTable.PrimaryKey%2A> value for the resulting <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="79025-284">您必須明確定義主索引鍵，以確保正確解析重複的資料列。</span><span class="sxs-lookup"><span data-stu-id="79025-284">You must explicitly define the primary key to ensure that duplicate rows are resolved correctly.</span></span> <span data-ttu-id="79025-285">如需詳細資訊，請參閱[定義主索引鍵](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md)。</span><span class="sxs-lookup"><span data-stu-id="79025-285">For more information, see [Defining Primary Keys](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="79025-286">處理批次傳回多個結果，實作的 SQL 陳述式時<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>的.NET Framework Data Provider for OLE DB 擷取，只有第一個結果的結構描述資訊。</span><span class="sxs-lookup"><span data-stu-id="79025-286">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</span></span> <span data-ttu-id="79025-287">若要擷取多個結果的結構描述資訊，請使用<xref:System.Data.Common.DbDataAdapter.Fill%2A>與<xref:System.Data.MissingSchemaAction>設`AddWithKey`。</span><span class="sxs-lookup"><span data-stu-id="79025-287">To retrieve schema information for multiple results, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> with the <xref:System.Data.MissingSchemaAction> set to `AddWithKey`.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="79025-288">
            <para>這個多載<see cref="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)" />被保護的設計為使用.NET Framework 資料提供者方法。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-288">
              <para>This overload of the <see cref="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)" /> method is protected and is designed for use by a .NET Framework data provider.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="public int Fill (int startRecord, int maxRecords, params System.Data.DataTable[] dataTables);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Fill(int32 startRecord, int32 maxRecords, class System.Data.DataTable[] dataTables) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Fill(System.Int32,System.Int32,System.Data.DataTable[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Fill (startRecord As Integer, maxRecords As Integer, ParamArray dataTables As DataTable()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Fill(int startRecord, int maxRecords, ... cli::array &lt;System::Data::DataTable ^&gt; ^ dataTables);" />
      <MemberSignature Language="F#" Value="override this.Fill : int * int * System.Data.DataTable[] -&gt; int" Usage="dbDataAdapter.Fill (startRecord, maxRecords, dataTables)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startRecord" Type="System.Int32" />
        <Parameter Name="maxRecords" Type="System.Int32" />
        <Parameter Name="dataTables" Type="System.Data.DataTable[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="startRecord">
          <span data-ttu-id="79025-289">The zero-based record number to start with.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-289">The zero-based record number to start with.</span>
          </span>
        </param>
        <param name="maxRecords">
          <span data-ttu-id="79025-290">The maximum number of records to retrieve.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-290">The maximum number of records to retrieve.</span>
          </span>
        </param>
        <param name="dataTables">
          <span data-ttu-id="79025-291">The <see cref="T:System.Data.DataTable" /> objects to fill from the data source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-291">The <see cref="T:System.Data.DataTable" /> objects to fill from the data source.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="79025-292">Adds or refreshes rows in a <see cref="T:System.Data.DataTable" /> to match those in the data source starting at the specified record and retrieving up to the specified maximum number of records.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-292">Adds or refreshes rows in a <see cref="T:System.Data.DataTable" /> to match those in the data source starting at the specified record and retrieving up to the specified maximum number of records.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="79025-293">The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataTable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-293">The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataTable" />.</span>
          </span>
          <span data-ttu-id="79025-294">This value does not include rows affected by statements that do not return rows.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-294">This value does not include rows affected by statements that do not return rows.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79025-295"><xref:System.Data.Common.DataAdapter.Fill%2A>方法會從使用 SELECT 陳述式指定由相關聯的資料來源擷取資料列<xref:System.Data.IDbDataAdapter.SelectCommand%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="79025-295">The <xref:System.Data.Common.DataAdapter.Fill%2A> method retrieves rows from the data source using the SELECT statement specified by an associated <xref:System.Data.IDbDataAdapter.SelectCommand%2A> property.</span></span> <span data-ttu-id="79025-296">SELECT 陳述式相關聯的連接物件必須有效，但它不需要開啟。</span><span class="sxs-lookup"><span data-stu-id="79025-296">The connection object associated with the SELECT statement must be valid, but it does not need to be open.</span></span> <span data-ttu-id="79025-297">如果連接已關閉之前<xref:System.Data.Common.DataAdapter.Fill%2A>是呼叫，來擷取資料，開啟和關閉然後。</span><span class="sxs-lookup"><span data-stu-id="79025-297">If the connection is closed before <xref:System.Data.Common.DataAdapter.Fill%2A> is called, it is opened to retrieve data, and then it is closed.</span></span> <span data-ttu-id="79025-298">如果連接為開啟之前<xref:System.Data.Common.DataAdapter.Fill%2A>是呼叫，它會保持開啟狀態。</span><span class="sxs-lookup"><span data-stu-id="79025-298">If the connection is open before <xref:System.Data.Common.DataAdapter.Fill%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="79025-299"><xref:System.Data.Common.DataAdapter.Fill%2A>作業接著會將資料列加入到目的地<xref:System.Data.DataTable>中的物件<xref:System.Data.DataSet>、 建立<xref:System.Data.DataTable>如果它們尚不存在的物件。</span><span class="sxs-lookup"><span data-stu-id="79025-299">The <xref:System.Data.Common.DataAdapter.Fill%2A> operation then adds the rows to destination <xref:System.Data.DataTable> objects in the <xref:System.Data.DataSet>, creating the <xref:System.Data.DataTable> objects if they do not already exist.</span></span> <span data-ttu-id="79025-300">建立時<xref:System.Data.DataTable>物件<xref:System.Data.Common.DataAdapter.Fill%2A>作業通常會建立只有資料行名稱中繼資料。</span><span class="sxs-lookup"><span data-stu-id="79025-300">When creating <xref:System.Data.DataTable> objects, the <xref:System.Data.Common.DataAdapter.Fill%2A> operation normally creates only column name metadata.</span></span> <span data-ttu-id="79025-301">不過，如果<xref:System.Data.IDataAdapter.MissingSchemaAction%2A>屬性設定為`AddWithKey`，也會建立適當的主索引鍵和條件約束。</span><span class="sxs-lookup"><span data-stu-id="79025-301">However, if the <xref:System.Data.IDataAdapter.MissingSchemaAction%2A> property is set to `AddWithKey`, appropriate primary keys and constraints are also created.</span></span>  
  
 <span data-ttu-id="79025-302">如果 `SelectCommand` 傳回 OUTER JOIN 的結果，則 `DataAdapter` 便不會為產生的 <xref:System.Data.DataTable.PrimaryKey%2A> 設定 <xref:System.Data.DataTable> 值。</span><span class="sxs-lookup"><span data-stu-id="79025-302">If the `SelectCommand` returns the results of an OUTER JOIN, the `DataAdapter` does not set a <xref:System.Data.DataTable.PrimaryKey%2A> value for the resulting <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="79025-303">您必須明確定義主索引鍵，以確保正確解析重複的資料列。</span><span class="sxs-lookup"><span data-stu-id="79025-303">You must explicitly define the primary key to ensure that duplicate rows are resolved correctly.</span></span> <span data-ttu-id="79025-304">如需詳細資訊，請參閱[定義主索引鍵](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md)。</span><span class="sxs-lookup"><span data-stu-id="79025-304">For more information, see [Defining Primary Keys](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md).</span></span>  
  
 <span data-ttu-id="79025-305">如果資料配接器遇到重複的資料行在填入<xref:System.Data.DataTable>，它會產生後續的資料行，並使用模式 」 columnname1"、"columnname2"、"columnname3 」 和等等的名稱。</span><span class="sxs-lookup"><span data-stu-id="79025-305">If the data adapter encounters duplicate columns while populating a <xref:System.Data.DataTable>, it generates names for the subsequent columns, using the pattern "columnname1", "columnname2", "columnname3", and so on.</span></span> <span data-ttu-id="79025-306">如果內送資料中包含未命名資料行，它們會放置於<xref:System.Data.DataSet>根據模式"Column1"、"Column2"，等等。</span><span class="sxs-lookup"><span data-stu-id="79025-306">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span> <span data-ttu-id="79025-307">當多個結果集加入至<xref:System.Data.DataSet>，每個結果集放在個別的資料表。</span><span class="sxs-lookup"><span data-stu-id="79025-307">When multiple result sets are added to the <xref:System.Data.DataSet>, each result set is placed in a separate table.</span></span> <span data-ttu-id="79025-308">其他結果集的命名方式是附加至指定的資料表名稱 （例如，"Table"、"Table1"、"Table2"等等） 的整數值。</span><span class="sxs-lookup"><span data-stu-id="79025-308">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on).</span></span> <span data-ttu-id="79025-309">使用資料行和資料表名稱的應用程式應確保這些命名模式衝突不會發生。</span><span class="sxs-lookup"><span data-stu-id="79025-309">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="79025-310">當 SELECT 陳述式用來填入<xref:System.Data.DataSet>傳回多個結果，例如批次 SQL 陳述式中，如果其中一個結果包含錯誤，所有後續的結果會略過且未新增到<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="79025-310">When the SELECT statement used to populate the <xref:System.Data.DataSet> returns multiple results, such as a batch SQL statements, if one of the results contains an error, all subsequent results are skipped and not added to the <xref:System.Data.DataSet>.</span></span>  
  
 <span data-ttu-id="79025-311">您可以使用<xref:System.Data.Common.DataAdapter.Fill%2A>上多次相同的方法<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="79025-311">You can use the <xref:System.Data.Common.DataAdapter.Fill%2A> method multiple times on the same <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="79025-312">如果主索引鍵存在，內送資料列會合併具有相符的資料列已經存在。</span><span class="sxs-lookup"><span data-stu-id="79025-312">If a primary key exists, incoming rows are merged with matching rows that already exist.</span></span> <span data-ttu-id="79025-313">如果沒有主索引鍵存在，將內送資料列附加至<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="79025-313">If no primary key exists, incoming rows are appended to the <xref:System.Data.DataTable>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="79025-314">處理批次傳回多個結果，實作的 SQL 陳述式時<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>的.NET Framework Data Provider for OLE DB 擷取，只有第一個結果的結構描述資訊。</span><span class="sxs-lookup"><span data-stu-id="79025-314">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</span></span> <span data-ttu-id="79025-315">若要擷取多個結果的結構描述資訊，請使用<xref:System.Data.Common.DbDataAdapter.Fill%2A>與<xref:System.Data.MissingSchemaAction>設`AddWithKey`。</span><span class="sxs-lookup"><span data-stu-id="79025-315">To retrieve schema information for multiple results, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> with the <xref:System.Data.MissingSchemaAction> set to `AddWithKey`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="public int Fill (System.Data.DataSet dataSet, int startRecord, int maxRecords, string srcTable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Fill(class System.Data.DataSet dataSet, int32 startRecord, int32 maxRecords, string srcTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Fill(System::Data::DataSet ^ dataSet, int startRecord, int maxRecords, System::String ^ srcTable);" />
      <MemberSignature Language="F#" Value="override this.Fill : System.Data.DataSet * int * int * string -&gt; int" Usage="dbDataAdapter.Fill (dataSet, startRecord, maxRecords, srcTable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
        <Parameter Name="startRecord" Type="System.Int32" />
        <Parameter Name="maxRecords" Type="System.Int32" />
        <Parameter Name="srcTable" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dataSet">
          <span data-ttu-id="79025-316">A <see cref="T:System.Data.DataSet" /> to fill with records and, if necessary, schema.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-316">A <see cref="T:System.Data.DataSet" /> to fill with records and, if necessary, schema.</span>
          </span>
        </param>
        <param name="startRecord">
          <span data-ttu-id="79025-317">The zero-based record number to start with.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-317">The zero-based record number to start with.</span>
          </span>
        </param>
        <param name="maxRecords">
          <span data-ttu-id="79025-318">The maximum number of records to retrieve.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-318">The maximum number of records to retrieve.</span>
          </span>
        </param>
        <param name="srcTable">
          <span data-ttu-id="79025-319">The name of the source table to use for table mapping.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-319">The name of the source table to use for table mapping.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="79025-320">Adds or refreshes rows in a specified range in the <see cref="T:System.Data.DataSet" /> to match those in the data source using the <see cref="T:System.Data.DataSet" /> and <see cref="T:System.Data.DataTable" /> names.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-320">Adds or refreshes rows in a specified range in the <see cref="T:System.Data.DataSet" /> to match those in the data source using the <see cref="T:System.Data.DataSet" /> and <see cref="T:System.Data.DataTable" /> names.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="79025-321">The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataSet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-321">The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataSet" />.</span>
          </span>
          <span data-ttu-id="79025-322">This does not include rows affected by statements that do not return rows.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-322">This does not include rows affected by statements that do not return rows.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79025-323">A `maxRecords` 0 的值取得開始記錄後，仍找到的所有記錄。</span><span class="sxs-lookup"><span data-stu-id="79025-323">A `maxRecords` value of 0 gets all records found after the start record.</span></span> <span data-ttu-id="79025-324">如果`maxRecords`大於剩餘的資料列數目只會傳回其餘的資料列，並不會發出錯誤。</span><span class="sxs-lookup"><span data-stu-id="79025-324">If `maxRecords` is greater than the number of remaining rows, only the remaining rows are returned, and no error is issued.</span></span>  
  
 <span data-ttu-id="79025-325">如果對應的 select 命令的陳述式傳回多個結果，<xref:System.Data.Common.DbDataAdapter.Fill%2A>只適用於`maxRecords`至第一個結果。</span><span class="sxs-lookup"><span data-stu-id="79025-325">If the corresponding select command is a statement returning multiple results, <xref:System.Data.Common.DbDataAdapter.Fill%2A> only applies `maxRecords` to the first result.</span></span>  
  
 <span data-ttu-id="79025-326"><xref:System.Data.Common.DbDataAdapter.Fill%2A>方法會從使用 SELECT 陳述式的資料來源擷取資料。</span><span class="sxs-lookup"><span data-stu-id="79025-326">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method retrieves the data from the data source using a SELECT statement.</span></span> <span data-ttu-id="79025-327"><xref:System.Data.IDbConnection> SELECT 陳述式相關聯的物件必須有效，但它不需要開啟。</span><span class="sxs-lookup"><span data-stu-id="79025-327">The <xref:System.Data.IDbConnection> object associated with the SELECT statement must be valid, but it does not need to be open.</span></span> <span data-ttu-id="79025-328">如果<xref:System.Data.IDbConnection>前已關閉<xref:System.Data.Common.DbDataAdapter.Fill%2A>是呼叫，它會開啟擷取資料並關閉。</span><span class="sxs-lookup"><span data-stu-id="79025-328">If the <xref:System.Data.IDbConnection> is closed before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it is opened to retrieve data and then closed.</span></span> <span data-ttu-id="79025-329">如果連接為開啟之前<xref:System.Data.Common.DbDataAdapter.Fill%2A>是呼叫，它會保持開啟狀態。</span><span class="sxs-lookup"><span data-stu-id="79025-329">If the connection is open before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="79025-330">如果命令未傳回任何資料列，將資料表加入至<xref:System.Data.DataSet>，但會引發任何例外狀況。</span><span class="sxs-lookup"><span data-stu-id="79025-330">If a command does not return any rows, no tables are added to the <xref:System.Data.DataSet>, but no exception is raised.</span></span>  
  
 <span data-ttu-id="79025-331">如果<xref:System.Data.Common.DbDataAdapter>物件遇到重複的資料行在填入<xref:System.Data.DataTable>，它會產生後續的資料行，並使用模式的名稱"*columnname*1"，"*columnname*2"，"*columnname*3 」，依此類推。</span><span class="sxs-lookup"><span data-stu-id="79025-331">If the <xref:System.Data.Common.DbDataAdapter> object encounters duplicate columns while populating a <xref:System.Data.DataTable>, it will generate names for the subsequent columns, using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="79025-332">如果內送資料中包含未命名資料行，它們會放置於<xref:System.Data.DataSet>根據模式"Column1"、"Column2"，等等。</span><span class="sxs-lookup"><span data-stu-id="79025-332">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span>  
  
 <span data-ttu-id="79025-333">當指定的查詢傳回多個結果時，每個結果集被放在個別的資料表。</span><span class="sxs-lookup"><span data-stu-id="79025-333">When the query specified returns multiple results, each result set is placed in a separate table.</span></span> <span data-ttu-id="79025-334">其他結果集的命名方式是附加至指定的資料表名稱 （例如，"Table"、"Table1"、"Table2"等等） 的整數值。</span><span class="sxs-lookup"><span data-stu-id="79025-334">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on).</span></span> <span data-ttu-id="79025-335">因為不會建立資料表查詢不會傳回資料列，如果您在處理 insert 查詢後面的 select 查詢，針對 select 查詢所建立的資料表是名為"Table"，因為它是建立的第一個資料表。</span><span class="sxs-lookup"><span data-stu-id="79025-335">Because no table is created for a query that does not return rows, if you process an insert query followed by a select query, the table created for the select query is named "Table", because it is the first table created.</span></span> <span data-ttu-id="79025-336">使用資料行和資料表名稱的應用程式應確保這些命名模式衝突不會發生。</span><span class="sxs-lookup"><span data-stu-id="79025-336">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="79025-337"><xref:System.Data.Common.DbDataAdapter.Fill%2A>方法支援案例其中<xref:System.Data.DataSet>包含多個<xref:System.Data.DataTable>名稱只有大小寫不同的物件。</span><span class="sxs-lookup"><span data-stu-id="79025-337">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method supports scenarios where the <xref:System.Data.DataSet> contains multiple <xref:System.Data.DataTable> objects whose names differ only by case.</span></span> <span data-ttu-id="79025-338">在這種情況下，<xref:System.Data.Common.DbDataAdapter.Fill%2A>執行區分大小寫的比較，來尋找對應的資料表，並建立新的資料表，如果沒有完全相符項目存在。</span><span class="sxs-lookup"><span data-stu-id="79025-338">In such situations, <xref:System.Data.Common.DbDataAdapter.Fill%2A> performs a case-sensitive comparison to find the corresponding table, and creates a new table if no exact match exists.</span></span> <span data-ttu-id="79025-339">下列 C# 程式碼說明這個行為。</span><span class="sxs-lookup"><span data-stu-id="79025-339">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
dataset.Tables.Add("AAA");  
adapter.Fill(dataset, "aaa"); // Fills "aaa", which already exists in the DataSet.  
adapter.Fill(dataset, "Aaa"); // Adds a new table called "Aaa".  
```  
  
 <span data-ttu-id="79025-340">如果<xref:System.Data.Common.DbDataAdapter.Fill%2A>稱為和<xref:System.Data.DataSet>只包含<xref:System.Data.DataTable>名稱只有大小寫不同的<xref:System.Data.DataTable>會更新。</span><span class="sxs-lookup"><span data-stu-id="79025-340">If <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called and the <xref:System.Data.DataSet> contains only one <xref:System.Data.DataTable> whose name differs only by case, that <xref:System.Data.DataTable> is updated.</span></span> <span data-ttu-id="79025-341">在此案例中，這個比較是不區分大小寫。</span><span class="sxs-lookup"><span data-stu-id="79025-341">In this scenario, the comparison is case insensitive.</span></span> <span data-ttu-id="79025-342">下列 C# 程式碼說明這個行為。</span><span class="sxs-lookup"><span data-stu-id="79025-342">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
adapter.Fill(dataset, "AAA"); // Fills table "aaa" because only one similarly named table is in the DataSet.  
```  
  
 <span data-ttu-id="79025-343">如果錯誤或例外狀況時發生填入資料的資料表，在發生錯誤之前所加入的資料列會保留在資料的資料表。</span><span class="sxs-lookup"><span data-stu-id="79025-343">If an error or an exception is encountered while populating the data tables, rows added prior to the occurrence of the error remain in the data tables.</span></span> <span data-ttu-id="79025-344">已中止運算的餘數。</span><span class="sxs-lookup"><span data-stu-id="79025-344">The remainder of the operation is aborted.</span></span>  
  
 <span data-ttu-id="79025-345">當 SELECT 陳述式用來填入<xref:System.Data.DataSet>傳回多個結果，例如批次 SQL 陳述式，可注意下列事項：</span><span class="sxs-lookup"><span data-stu-id="79025-345">When the SELECT statement used to populate the <xref:System.Data.DataSet> returns multiple results, such as batch SQL statements, be aware of the following:</span></span>  
  
-   <span data-ttu-id="79025-346">處理批次 SQL 陳述式，從多個結果時`maxRecords`只適用於第一個結果。</span><span class="sxs-lookup"><span data-stu-id="79025-346">When processing multiple results from a batch SQL statement, `maxRecords` only applies to the first result.</span></span> <span data-ttu-id="79025-347">也適用於包含章節化的結果 (.NET Framework Data Provider for OLE DB 只) 的資料列。</span><span class="sxs-lookup"><span data-stu-id="79025-347">The same is true for rows containing chaptered results (.NET Framework Data Provider for OLE DB only).</span></span> <span data-ttu-id="79025-348">最上層結果會受到`maxRecords`，但是所有的子資料列會加入。</span><span class="sxs-lookup"><span data-stu-id="79025-348">The top level result is limited by `maxRecords`, but all child rows are added.</span></span>  
  
-   <span data-ttu-id="79025-349">如果其中一個結果包含錯誤時，會略過所有後續的結果，且未新增到<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="79025-349">If one of the results contains an error, all subsequent results are skipped and not added to the <xref:System.Data.DataSet>.</span></span>  
  
 <span data-ttu-id="79025-350">當使用後續<xref:System.Data.Common.DbDataAdapter.Fill%2A>對更新的內容呼叫<xref:System.Data.DataSet>，必須符合兩個條件：</span><span class="sxs-lookup"><span data-stu-id="79025-350">When using subsequent <xref:System.Data.Common.DbDataAdapter.Fill%2A> calls to refresh the contents of the <xref:System.Data.DataSet>, two conditions must be met:</span></span>  
  
1.  <span data-ttu-id="79025-351">SQL 陳述式應該符合最初用來填入<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="79025-351">The SQL statement should match the one initially used to populate the <xref:System.Data.DataSet>.</span></span>  
  
2.  <span data-ttu-id="79025-352">**金鑰**必須存在的資料行資訊。</span><span class="sxs-lookup"><span data-stu-id="79025-352">The **Key** column information must be present.</span></span>  
  
 <span data-ttu-id="79025-353">如果主索引鍵資訊存在時，任何重複的資料列會調解並只能出現一次在<xref:System.Data.DataTable>對應於<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="79025-353">If primary key information is present, any duplicate rows will be reconciled and only appear once in the <xref:System.Data.DataTable> that corresponds to the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="79025-354">主索引鍵資訊可能會設定透過<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>，藉由指定<xref:System.Data.DataTable.PrimaryKey%2A>屬性<xref:System.Data.DataTable>，或藉由設定<xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>屬性`AddWithKey`。</span><span class="sxs-lookup"><span data-stu-id="79025-354">Primary key information may be set either through <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, by specifying the <xref:System.Data.DataTable.PrimaryKey%2A> property of the <xref:System.Data.DataTable>, or by setting the <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> property to `AddWithKey`.</span></span>  
  
 <span data-ttu-id="79025-355">如果 `SelectCommand` 傳回 OUTER JOIN 的結果，則 `DataAdapter` 便不會為產生的 <xref:System.Data.DataTable.PrimaryKey%2A> 設定 <xref:System.Data.DataTable> 值。</span><span class="sxs-lookup"><span data-stu-id="79025-355">If the `SelectCommand` returns the results of an OUTER JOIN, the `DataAdapter` does not set a <xref:System.Data.DataTable.PrimaryKey%2A> value for the resulting <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="79025-356">您必須明確定義主索引鍵，以確保正確解析重複的資料列。</span><span class="sxs-lookup"><span data-stu-id="79025-356">You must explicitly define the primary key to ensure that duplicate rows are resolved correctly.</span></span> <span data-ttu-id="79025-357">如需詳細資訊，請參閱[定義主索引鍵](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md)。</span><span class="sxs-lookup"><span data-stu-id="79025-357">For more information, see [Defining Primary Keys](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="79025-358">處理批次傳回多個結果，實作的 SQL 陳述式時<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>的.NET Framework Data Provider for OLE DB 擷取，只有第一個結果的結構描述資訊。</span><span class="sxs-lookup"><span data-stu-id="79025-358">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</span></span> <span data-ttu-id="79025-359">若要擷取多個結果的結構描述資訊，請使用<xref:System.Data.Common.DbDataAdapter.Fill%2A>與<xref:System.Data.MissingSchemaAction>設`AddWithKey`。</span><span class="sxs-lookup"><span data-stu-id="79025-359">To retrieve schema information for multiple results, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> with the <xref:System.Data.MissingSchemaAction> set to `AddWithKey`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="79025-360">`DataSet`不會包含在所指定的記錄數目超過`maxRecords`。</span><span class="sxs-lookup"><span data-stu-id="79025-360">The `DataSet` will not contain more than the number of records indicated by `maxRecords`.</span></span> <span data-ttu-id="79025-361">不過，從伺服器仍會傳回查詢所產生的整個結果集。</span><span class="sxs-lookup"><span data-stu-id="79025-361">However, the entire result set generated by the query is still returned from the server.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="79025-362">下列範例會使用衍生的類別， <xref:System.Data.OleDb.OleDbDataAdapter>，以填滿<xref:System.Data.DataSet>具有 15 個資料列，從資料列 10，開始從**類別**資料表。</span><span class="sxs-lookup"><span data-stu-id="79025-362">The following example uses the derived class, <xref:System.Data.OleDb.OleDbDataAdapter>, to fill a <xref:System.Data.DataSet> with 15 rows, beginning at row 10, from the **Categories** table.</span></span> <span data-ttu-id="79025-363">這個範例假設您已建立<xref:System.Data.OleDb.OleDbDataAdapter>和<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="79025-363">This example assumes that you have created an <xref:System.Data.OleDb.OleDbDataAdapter> and a <xref:System.Data.DataSet>.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.Fill3 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Fill3 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.Fill3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Fill3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.SystemException">
          <span data-ttu-id="79025-364">The <see cref="T:System.Data.DataSet" /> is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-364">The <see cref="T:System.Data.DataSet" /> is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="79025-365">The source table is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-365">The source table is invalid.</span>
          </span>
          <span data-ttu-id="79025-366">-or-  The connection is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-366">-or-  The connection is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="79025-367">The connection could not be found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-367">The connection could not be found.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="79025-368">The <paramref name="startRecord" /> parameter is less than 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-368">The <paramref name="startRecord" /> parameter is less than 0.</span>
          </span>
          <span data-ttu-id="79025-369">-or-  The <paramref name="maxRecords" /> parameter is less than 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-369">-or-  The <paramref name="maxRecords" /> parameter is less than 0.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="79025-370">
            <para>在覆寫<see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" />在衍生類別中，請務必呼叫基底類別的<see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" />方法。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-370">
              <para>When overriding <see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /> in a derived class, be sure to call the base class's <see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /> method.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="protected virtual int Fill (System.Data.DataTable[] dataTables, int startRecord, int maxRecords, System.Data.IDbCommand command, System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 Fill(class System.Data.DataTable[] dataTables, int32 startRecord, int32 maxRecords, class System.Data.IDbCommand command, valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable[],System.Int32,System.Int32,System.Data.IDbCommand,System.Data.CommandBehavior)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function Fill (dataTables As DataTable(), startRecord As Integer, maxRecords As Integer, command As IDbCommand, behavior As CommandBehavior) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int Fill(cli::array &lt;System::Data::DataTable ^&gt; ^ dataTables, int startRecord, int maxRecords, System::Data::IDbCommand ^ command, System::Data::CommandBehavior behavior);" />
      <MemberSignature Language="F#" Value="override this.Fill : System.Data.DataTable[] * int * int * System.Data.IDbCommand * System.Data.CommandBehavior -&gt; int" Usage="dbDataAdapter.Fill (dataTables, startRecord, maxRecords, command, behavior)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataTables" Type="System.Data.DataTable[]" />
        <Parameter Name="startRecord" Type="System.Int32" />
        <Parameter Name="maxRecords" Type="System.Int32" />
        <Parameter Name="command" Type="System.Data.IDbCommand" />
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" />
      </Parameters>
      <Docs>
        <param name="dataTables">
          <span data-ttu-id="79025-371">The <see cref="T:System.Data.DataTable" /> objects to fill from the data source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-371">The <see cref="T:System.Data.DataTable" /> objects to fill from the data source.</span>
          </span>
        </param>
        <param name="startRecord">
          <span data-ttu-id="79025-372">The zero-based record number to start with.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-372">The zero-based record number to start with.</span>
          </span>
        </param>
        <param name="maxRecords">
          <span data-ttu-id="79025-373">The maximum number of records to retrieve.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-373">The maximum number of records to retrieve.</span>
          </span>
        </param>
        <param name="command">
          <span data-ttu-id="79025-374">The <see cref="T:System.Data.IDbCommand" /> executed to fill the <see cref="T:System.Data.DataTable" /> objects.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-374">The <see cref="T:System.Data.IDbCommand" /> executed to fill the <see cref="T:System.Data.DataTable" /> objects.</span>
          </span>
        </param>
        <param name="behavior">
          <span data-ttu-id="79025-375">One of the <see cref="T:System.Data.CommandBehavior" /> values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-375">One of the <see cref="T:System.Data.CommandBehavior" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="79025-376">Adds or refreshes rows in a specified range in the <see cref="T:System.Data.DataSet" /> to match those in the data source using the <see cref="T:System.Data.DataSet" /> and <see cref="T:System.Data.DataTable" /> names.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-376">Adds or refreshes rows in a specified range in the <see cref="T:System.Data.DataSet" /> to match those in the data source using the <see cref="T:System.Data.DataSet" /> and <see cref="T:System.Data.DataTable" /> names.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="79025-377">The number of rows added to or refreshed in the data tables.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-377">The number of rows added to or refreshed in the data tables.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79025-378">A `maxRecords` 0 的值取得開始記錄後，仍找到的所有記錄。</span><span class="sxs-lookup"><span data-stu-id="79025-378">A `maxRecords` value of 0 gets all records found after the start record.</span></span> <span data-ttu-id="79025-379">如果`maxRecords`大於剩餘的資料列數目只會傳回其餘的資料列，不會發出錯誤。</span><span class="sxs-lookup"><span data-stu-id="79025-379">If `maxRecords` is greater than the number of remaining rows, only the remaining rows are returned and no error is issued.</span></span>  
  
 <span data-ttu-id="79025-380"><xref:System.Data.Common.DbDataAdapter.Fill%2A>方法會從使用 SELECT 陳述式的資料來源擷取資料。</span><span class="sxs-lookup"><span data-stu-id="79025-380">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method retrieves the data from the data source using a SELECT statement.</span></span> <span data-ttu-id="79025-381"><xref:System.Data.IDbConnection> SELECT 陳述式相關聯的物件必須有效，但它不需要開啟。</span><span class="sxs-lookup"><span data-stu-id="79025-381">The <xref:System.Data.IDbConnection> object associated with the SELECT statement must be valid, but it does not need to be open.</span></span> <span data-ttu-id="79025-382">如果<xref:System.Data.IDbConnection>前已關閉<xref:System.Data.Common.DbDataAdapter.Fill%2A>是呼叫，它會開啟擷取資料，然後關閉。</span><span class="sxs-lookup"><span data-stu-id="79025-382">If the <xref:System.Data.IDbConnection> is closed before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it is opened to retrieve data, then closed.</span></span> <span data-ttu-id="79025-383">如果連接為開啟之前<xref:System.Data.Common.DbDataAdapter.Fill%2A>是呼叫，它會保持開啟狀態。</span><span class="sxs-lookup"><span data-stu-id="79025-383">If the connection is open before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="79025-384">如果命令未傳回任何資料列，將資料表加入至<xref:System.Data.DataSet>，但會引發任何例外狀況。</span><span class="sxs-lookup"><span data-stu-id="79025-384">If a command does not return any rows, no tables are added to the <xref:System.Data.DataSet>, but no exception is raised.</span></span>  
  
 <span data-ttu-id="79025-385">如果<xref:System.Data.Common.DbDataAdapter>物件遇到重複的資料行在填入<xref:System.Data.DataTable>，它會產生後續的資料行，並使用模式的名稱"*columnname*1"，"*columnname*2"，"*columnname*3 」，依此類推。</span><span class="sxs-lookup"><span data-stu-id="79025-385">If the <xref:System.Data.Common.DbDataAdapter> object encounters duplicate columns while populating a <xref:System.Data.DataTable>, it will generate names for the subsequent columns, using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="79025-386">如果內送資料中包含未命名資料行，它們會放置於<xref:System.Data.DataSet>根據模式"Column1"、"Column2"，等等。</span><span class="sxs-lookup"><span data-stu-id="79025-386">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span>  
  
 <span data-ttu-id="79025-387">當指定的查詢傳回多個結果時，每個結果集被放在個別的資料表。</span><span class="sxs-lookup"><span data-stu-id="79025-387">When the query specified returns multiple results, each result set is placed in a separate table.</span></span> <span data-ttu-id="79025-388">其他結果集的命名方式是附加至指定的資料表名稱 （例如，"Table"、"Table1"、"Table2"等等） 的整數值。</span><span class="sxs-lookup"><span data-stu-id="79025-388">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on).</span></span> <span data-ttu-id="79025-389">不會建立資料表查詢不會傳回資料列，如果您要處理插入查詢後面的 select 查詢，因為建立選取查詢的資料表就會命名為"Table"，因為它是建立的第一個資料表。</span><span class="sxs-lookup"><span data-stu-id="79025-389">Since no table is created for a query that does not return rows, if you were to process an insert query followed by a select query, the table created for the select query would be named "Table", because it is the first table created.</span></span> <span data-ttu-id="79025-390">使用資料行和資料表名稱的應用程式應確保這些命名模式衝突不會發生。</span><span class="sxs-lookup"><span data-stu-id="79025-390">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="79025-391"><xref:System.Data.Common.DbDataAdapter.Fill%2A>方法支援案例其中<xref:System.Data.DataSet>包含多個<xref:System.Data.DataTable>名稱只有大小寫不同的物件。</span><span class="sxs-lookup"><span data-stu-id="79025-391">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method supports scenarios where the <xref:System.Data.DataSet> contains multiple <xref:System.Data.DataTable> objects whose names differ only by case.</span></span> <span data-ttu-id="79025-392">在這種情況下，<xref:System.Data.Common.DbDataAdapter.Fill%2A>執行區分大小寫的比較，來尋找對應的資料表，並建立新的資料表，如果沒有完全相符項目存在。</span><span class="sxs-lookup"><span data-stu-id="79025-392">In such situations, <xref:System.Data.Common.DbDataAdapter.Fill%2A> performs a case-sensitive comparison to find the corresponding table, and creates a new table if no exact match exists.</span></span> <span data-ttu-id="79025-393">下列 C# 程式碼說明這個行為。</span><span class="sxs-lookup"><span data-stu-id="79025-393">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
dataset.Tables.Add("AAA");  
adapter.Fill(dataset, "aaa"); // Fills "aaa", which already exists in the DataSet.  
adapter.Fill(dataset, "Aaa"); // Adds a new table called "Aaa".  
```  
  
 <span data-ttu-id="79025-394">如果<xref:System.Data.Common.DbDataAdapter.Fill%2A>稱為和<xref:System.Data.DataSet>只包含<xref:System.Data.DataTable>名稱只有大小寫不同的<xref:System.Data.DataTable>會更新。</span><span class="sxs-lookup"><span data-stu-id="79025-394">If <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called and the <xref:System.Data.DataSet> contains only one <xref:System.Data.DataTable> whose name differs only by case, that <xref:System.Data.DataTable> is updated.</span></span> <span data-ttu-id="79025-395">在此案例中，這個比較是不區分大小寫。</span><span class="sxs-lookup"><span data-stu-id="79025-395">In this scenario, the comparison is case insensitive.</span></span> <span data-ttu-id="79025-396">下列 C# 程式碼說明這個行為。</span><span class="sxs-lookup"><span data-stu-id="79025-396">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
adapter.Fill(dataset, "AAA"); // Fills table "aaa" because only one similarly named table is in the DataSet.  
```  
  
 <span data-ttu-id="79025-397">如果錯誤或例外狀況時發生填入資料的資料表，在發生錯誤之前所加入的資料列會保留在資料的資料表。</span><span class="sxs-lookup"><span data-stu-id="79025-397">If an error or an exception is encountered while populating the data tables, rows added prior to the occurrence of the error remain in the data tables.</span></span> <span data-ttu-id="79025-398">已中止運算的餘數。</span><span class="sxs-lookup"><span data-stu-id="79025-398">The remainder of the operation is aborted.</span></span>  
  
 <span data-ttu-id="79025-399">當 SELECT 陳述式用來填入<xref:System.Data.DataTable>物件會傳回多個結果，例如批次 SQL 陳述式，可注意下列事項：</span><span class="sxs-lookup"><span data-stu-id="79025-399">When the SELECT statement used to populate the <xref:System.Data.DataTable> objects returns multiple results, such as a batch SQL statement, be aware of the following:</span></span>  
  
-   <span data-ttu-id="79025-400">處理批次 SQL 陳述式，從多個結果時`maxRecords`只適用於第一個結果。</span><span class="sxs-lookup"><span data-stu-id="79025-400">When processing multiple results from a batch SQL statement, `maxRecords` only applies to the first result.</span></span> <span data-ttu-id="79025-401">也適用於包含章節化的結果 (.NET Framework Data Provider for OLE DB 只) 的資料列。</span><span class="sxs-lookup"><span data-stu-id="79025-401">The same is true for rows containing chaptered results (.NET Framework Data Provider for OLE DB only).</span></span> <span data-ttu-id="79025-402">最上層結果會受到`maxRecords`，但是所有的子資料列會加入。</span><span class="sxs-lookup"><span data-stu-id="79025-402">The top level result is limited by `maxRecords`, but all child rows are added.</span></span>  
  
-   <span data-ttu-id="79025-403">如果其中一個結果包含錯誤時，會略過所有後續的結果。</span><span class="sxs-lookup"><span data-stu-id="79025-403">If one of the results contains an error, all subsequent results are skipped.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="79025-404">`DataSet`不會包含在所指定的記錄數目超過`maxRecords`。</span><span class="sxs-lookup"><span data-stu-id="79025-404">The `DataSet` will not contain more than the number of records indicated by `maxRecords`.</span></span> <span data-ttu-id="79025-405">不過，從伺服器仍會傳回整個查詢所產生的結果集。</span><span class="sxs-lookup"><span data-stu-id="79025-405">However, the entire resultset generated by the query is still returned from the server.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.SystemException">
          <span data-ttu-id="79025-406">The <see cref="T:System.Data.DataSet" /> is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-406">The <see cref="T:System.Data.DataSet" /> is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="79025-407">The source table is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-407">The source table is invalid.</span>
          </span>
          <span data-ttu-id="79025-408">-or-  The connection is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-408">-or-  The connection is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="79025-409">The connection could not be found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-409">The connection could not be found.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="79025-410">The <paramref name="startRecord" /> parameter is less than 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-410">The <paramref name="startRecord" /> parameter is less than 0.</span>
          </span>
          <span data-ttu-id="79025-411">-or-  The <paramref name="maxRecords" /> parameter is less than 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-411">-or-  The <paramref name="maxRecords" /> parameter is less than 0.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="79025-412">
            <para>在覆寫<see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" />在衍生類別中，請務必呼叫基底類別的<see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" />方法。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-412">
              <para>When overriding <see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /> in a derived class, be sure to call the base class's <see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /> method.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="protected virtual int Fill (System.Data.DataSet dataSet, int startRecord, int maxRecords, string srcTable, System.Data.IDbCommand command, System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 Fill(class System.Data.DataSet dataSet, int32 startRecord, int32 maxRecords, string srcTable, class System.Data.IDbCommand command, valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String,System.Data.IDbCommand,System.Data.CommandBehavior)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int Fill(System::Data::DataSet ^ dataSet, int startRecord, int maxRecords, System::String ^ srcTable, System::Data::IDbCommand ^ command, System::Data::CommandBehavior behavior);" />
      <MemberSignature Language="F#" Value="override this.Fill : System.Data.DataSet * int * int * string * System.Data.IDbCommand * System.Data.CommandBehavior -&gt; int" Usage="dbDataAdapter.Fill (dataSet, startRecord, maxRecords, srcTable, command, behavior)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
        <Parameter Name="startRecord" Type="System.Int32" />
        <Parameter Name="maxRecords" Type="System.Int32" />
        <Parameter Name="srcTable" Type="System.String" />
        <Parameter Name="command" Type="System.Data.IDbCommand" />
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" />
      </Parameters>
      <Docs>
        <param name="dataSet">
          <span data-ttu-id="79025-413">A <see cref="T:System.Data.DataSet" /> to fill with records and, if necessary, schema.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-413">A <see cref="T:System.Data.DataSet" /> to fill with records and, if necessary, schema.</span>
          </span>
        </param>
        <param name="startRecord">
          <span data-ttu-id="79025-414">The zero-based record number to start with.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-414">The zero-based record number to start with.</span>
          </span>
        </param>
        <param name="maxRecords">
          <span data-ttu-id="79025-415">The maximum number of records to retrieve.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-415">The maximum number of records to retrieve.</span>
          </span>
        </param>
        <param name="srcTable">
          <span data-ttu-id="79025-416">The name of the source table to use for table mapping.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-416">The name of the source table to use for table mapping.</span>
          </span>
        </param>
        <param name="command">
          <span data-ttu-id="79025-417">The SQL SELECT statement used to retrieve rows from the data source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-417">The SQL SELECT statement used to retrieve rows from the data source.</span>
          </span>
        </param>
        <param name="behavior">
          <span data-ttu-id="79025-418">One of the <see cref="T:System.Data.CommandBehavior" /> values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-418">One of the <see cref="T:System.Data.CommandBehavior" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="79025-419">Adds or refreshes rows in a specified range in the <see cref="T:System.Data.DataSet" /> to match those in the data source using the <see cref="T:System.Data.DataSet" /> and source table names, command string, and command behavior.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-419">Adds or refreshes rows in a specified range in the <see cref="T:System.Data.DataSet" /> to match those in the data source using the <see cref="T:System.Data.DataSet" /> and source table names, command string, and command behavior.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="79025-420">The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataSet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-420">The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataSet" />.</span>
          </span>
          <span data-ttu-id="79025-421">This does not include rows affected by statements that do not return rows.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-421">This does not include rows affected by statements that do not return rows.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79025-422"><xref:System.Data.Common.DbDataAdapter.Fill%2A>方法會從使用 SELECT 陳述式指定由相關聯的資料來源擷取資料列<xref:System.Data.IDbDataAdapter.SelectCommand%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="79025-422">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method retrieves rows from the data source using the SELECT statement specified by an associated <xref:System.Data.IDbDataAdapter.SelectCommand%2A> property.</span></span> <span data-ttu-id="79025-423">SELECT 陳述式相關聯的連接物件必須有效，但它不需要開啟。</span><span class="sxs-lookup"><span data-stu-id="79025-423">The connection object associated with the SELECT statement must be valid, but it does not need to be open.</span></span> <span data-ttu-id="79025-424">如果連接已關閉之前<xref:System.Data.Common.DbDataAdapter.Fill%2A>是呼叫，它會開啟擷取資料，然後關閉。</span><span class="sxs-lookup"><span data-stu-id="79025-424">If the connection is closed before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it is opened to retrieve data, then closed.</span></span> <span data-ttu-id="79025-425">如果連接為開啟之前<xref:System.Data.Common.DbDataAdapter.Fill%2A>是呼叫，它會保持開啟狀態。</span><span class="sxs-lookup"><span data-stu-id="79025-425">If the connection is open before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="79025-426"><xref:System.Data.Common.DbDataAdapter.Fill%2A>作業接著會將資料列加入到目的地<xref:System.Data.DataTable>中的物件<xref:System.Data.DataSet>、 建立<xref:System.Data.DataTable>如果它們尚不存在的物件。</span><span class="sxs-lookup"><span data-stu-id="79025-426">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> operation then adds the rows to destination <xref:System.Data.DataTable> objects in the <xref:System.Data.DataSet>, creating the <xref:System.Data.DataTable> objects if they do not already exist.</span></span> <span data-ttu-id="79025-427">建立時<xref:System.Data.DataTable>物件<xref:System.Data.Common.DbDataAdapter.Fill%2A>作業通常會建立只有資料行名稱中繼資料。</span><span class="sxs-lookup"><span data-stu-id="79025-427">When creating <xref:System.Data.DataTable> objects, the <xref:System.Data.Common.DbDataAdapter.Fill%2A> operation normally creates only column name metadata.</span></span> <span data-ttu-id="79025-428">不過，如果<xref:System.Data.IDataAdapter.MissingSchemaAction%2A>屬性設定為`AddWithKey`，也會建立適當的主索引鍵和條件約束。</span><span class="sxs-lookup"><span data-stu-id="79025-428">However, if the <xref:System.Data.IDataAdapter.MissingSchemaAction%2A> property is set to `AddWithKey`, appropriate primary keys and constraints are also created.</span></span>  
  
 <span data-ttu-id="79025-429">如果<xref:System.Data.Common.DbDataAdapter>遇到重複的資料行在填入<xref:System.Data.DataTable>，它會產生後續的資料行，並使用模式的名稱"*columnname*1"，"*columnname*2"，"*columnname*3"等等。</span><span class="sxs-lookup"><span data-stu-id="79025-429">If the <xref:System.Data.Common.DbDataAdapter> encounters duplicate columns while populating a <xref:System.Data.DataTable>, it generates names for the subsequent columns, using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="79025-430">如果內送資料中包含未命名資料行，它們會放置於<xref:System.Data.DataSet>根據模式"Column1"、"Column2"，等等。</span><span class="sxs-lookup"><span data-stu-id="79025-430">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span> <span data-ttu-id="79025-431">當多個結果集加入至<xref:System.Data.DataSet>放置於個別的資料表中每個結果集。</span><span class="sxs-lookup"><span data-stu-id="79025-431">When multiple result sets are added to the <xref:System.Data.DataSet> each result set is placed in a separate table.</span></span> <span data-ttu-id="79025-432">其他結果集的命名方式是附加至指定的資料表名稱 （例如，"Table"、"Table1"、"Table2"等等） 的整數值。</span><span class="sxs-lookup"><span data-stu-id="79025-432">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on).</span></span> <span data-ttu-id="79025-433">使用資料行和資料表名稱的應用程式應確保這些命名模式衝突不會發生。</span><span class="sxs-lookup"><span data-stu-id="79025-433">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="79025-434"><xref:System.Data.Common.DbDataAdapter.Fill%2A>方法支援案例其中<xref:System.Data.DataSet>包含多個<xref:System.Data.DataTable>名稱只有大小寫不同的物件。</span><span class="sxs-lookup"><span data-stu-id="79025-434">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method supports scenarios where the <xref:System.Data.DataSet> contains multiple <xref:System.Data.DataTable> objects whose names differ only by case.</span></span> <span data-ttu-id="79025-435">在這種情況下，<xref:System.Data.Common.DbDataAdapter.Fill%2A>執行區分大小寫的比較，來尋找對應的資料表，並建立新的資料表，如果沒有完全相符項目存在。</span><span class="sxs-lookup"><span data-stu-id="79025-435">In such situations, <xref:System.Data.Common.DbDataAdapter.Fill%2A> performs a case-sensitive comparison to find the corresponding table, and creates a new table if no exact match exists.</span></span> <span data-ttu-id="79025-436">下列 C# 程式碼說明這個行為。</span><span class="sxs-lookup"><span data-stu-id="79025-436">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
dataset.Tables.Add("AAA");  
adapter.Fill(dataset, "aaa"); // Fills "aaa", which already exists in the DataSet.  
adapter.Fill(dataset, "Aaa"); // Adds a new table called "Aaa".  
```  
  
 <span data-ttu-id="79025-437">如果<xref:System.Data.Common.DbDataAdapter.Fill%2A>稱為和<xref:System.Data.DataSet>只包含<xref:System.Data.DataTable>名稱只有大小寫不同的<xref:System.Data.DataTable>會更新。</span><span class="sxs-lookup"><span data-stu-id="79025-437">If <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called and the <xref:System.Data.DataSet> contains only one <xref:System.Data.DataTable> whose name differs only by case, that <xref:System.Data.DataTable> is updated.</span></span> <span data-ttu-id="79025-438">在此案例中，這個比較是不區分大小寫。</span><span class="sxs-lookup"><span data-stu-id="79025-438">In this scenario, the comparison is case insensitive.</span></span> <span data-ttu-id="79025-439">下列 C# 程式碼說明這個行為。</span><span class="sxs-lookup"><span data-stu-id="79025-439">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
adapter.Fill(dataset, "AAA"); // Fills table "aaa" because only one similarly named table is in the DataSet.  
```  
  
 <span data-ttu-id="79025-440">您可以使用<xref:System.Data.Common.DbDataAdapter.Fill%2A>上多次相同的方法<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="79025-440">You can use the <xref:System.Data.Common.DbDataAdapter.Fill%2A> method multiple times on the same <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="79025-441">如果主索引鍵存在，內送資料列會合併具有相符的資料列已經存在。</span><span class="sxs-lookup"><span data-stu-id="79025-441">If a primary key exists, incoming rows are merged with matching rows that already exist.</span></span> <span data-ttu-id="79025-442">如果沒有主索引鍵存在，將內送資料列附加至<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="79025-442">If no primary key exists, incoming rows are appended to the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="79025-443">如果 `SelectCommand` 傳回 OUTER JOIN 的結果，則 `DataAdapter` 便不會為產生的 <xref:System.Data.DataTable.PrimaryKey%2A> 設定 <xref:System.Data.DataTable> 值。</span><span class="sxs-lookup"><span data-stu-id="79025-443">If the `SelectCommand` returns the results of an OUTER JOIN, the `DataAdapter` does not set a <xref:System.Data.DataTable.PrimaryKey%2A> value for the resulting <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="79025-444">您必須明確定義主索引鍵，以確保正確解析重複的資料列。</span><span class="sxs-lookup"><span data-stu-id="79025-444">You must explicitly define the primary key to ensure that duplicate rows are resolved correctly.</span></span> <span data-ttu-id="79025-445">如需詳細資訊，請參閱[定義主索引鍵](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md)。</span><span class="sxs-lookup"><span data-stu-id="79025-445">For more information, see [Defining Primary Keys](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="79025-446">處理批次傳回多個結果，實作的 SQL 陳述式時<xref:System.Data.Common.DbDataAdapter.Fill%2A>和<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>對於.NET Framework 資料提供者擷取結構描述資訊，只有第一個結果。</span><span class="sxs-lookup"><span data-stu-id="79025-446">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.Fill%2A> and <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for a .NET Framework data provider retrieves schema information for only the first result.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="79025-447">The source table is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-447">The source table is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="79025-448">The <paramref name="startRecord" /> parameter is less than 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-448">The <paramref name="startRecord" /> parameter is less than 0.</span>
          </span>
          <span data-ttu-id="79025-449">-or-  The <paramref name="maxRecords" /> parameter is less than 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-449">-or-  The <paramref name="maxRecords" /> parameter is less than 0.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="79025-450">
            <para>這個多載<see cref="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)" />被保護的設計為使用.NET Framework 資料提供者方法。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-450">
              <para>This overload of the <see cref="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)" /> method is protected and is designed for use by a .NET Framework data provider.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="FillCommandBehavior">
      <MemberSignature Language="C#" Value="protected internal System.Data.CommandBehavior FillCommandBehavior { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.CommandBehavior FillCommandBehavior" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataAdapter.FillCommandBehavior" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Property FillCommandBehavior As CommandBehavior" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property System::Data::CommandBehavior FillCommandBehavior { System::Data::CommandBehavior get(); void set(System::Data::CommandBehavior value); };" />
      <MemberSignature Language="F#" Value="member this.FillCommandBehavior : System.Data.CommandBehavior with get, set" Usage="System.Data.Common.DbDataAdapter.FillCommandBehavior" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.CommandBehavior</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="79025-451">Gets or sets the behavior of the command used to fill the data adapter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-451">Gets or sets the behavior of the command used to fill the data adapter.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="79025-452">
            <see cref="T:System.Data.CommandBehavior" />用來填滿資料配接器的命令。</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-452">The <see cref="T:System.Data.CommandBehavior" /> of the command used to fill the data adapter.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="FillSchema">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="79025-453">Adds a <see cref="T:System.Data.DataTable" /> to a <see cref="T:System.Data.DataSet" /> and configures the schema to match that in the data source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-453">Adds a <see cref="T:System.Data.DataTable" /> to a <see cref="T:System.Data.DataSet" /> and configures the schema to match that in the data source.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FillSchema">
      <MemberSignature Language="C#" Value="public override System.Data.DataTable[] FillSchema (System.Data.DataSet dataSet, System.Data.SchemaType schemaType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.DataTable[] FillSchema(class System.Data.DataSet dataSet, valuetype System.Data.SchemaType schemaType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Data::DataTable ^&gt; ^ FillSchema(System::Data::DataSet ^ dataSet, System::Data::SchemaType schemaType);" />
      <MemberSignature Language="F#" Value="override this.FillSchema : System.Data.DataSet * System.Data.SchemaType -&gt; System.Data.DataTable[]" Usage="dbDataAdapter.FillSchema (dataSet, schemaType)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
        <Parameter Name="schemaType" Type="System.Data.SchemaType" />
      </Parameters>
      <Docs>
        <param name="dataSet">
          <span data-ttu-id="79025-454">A <see cref="T:System.Data.DataSet" /> to insert the schema in.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-454">A <see cref="T:System.Data.DataSet" /> to insert the schema in.</span>
          </span>
        </param>
        <param name="schemaType">
          <span data-ttu-id="79025-455">One of the <see cref="T:System.Data.SchemaType" /> values that specify how to insert the schema.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-455">One of the <see cref="T:System.Data.SchemaType" /> values that specify how to insert the schema.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="79025-456">Adds a <see cref="T:System.Data.DataTable" /> named "Table" to the specified <see cref="T:System.Data.DataSet" /> and configures the schema to match that in the data source based on the specified <see cref="T:System.Data.SchemaType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-456">Adds a <see cref="T:System.Data.DataTable" /> named "Table" to the specified <see cref="T:System.Data.DataSet" /> and configures the schema to match that in the data source based on the specified <see cref="T:System.Data.SchemaType" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="79025-457">A reference to a collection of <see cref="T:System.Data.DataTable" /> objects that were added to the <see cref="T:System.Data.DataSet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-457">A reference to a collection of <see cref="T:System.Data.DataTable" /> objects that were added to the <see cref="T:System.Data.DataSet" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79025-458">這個方法會擷取從資料來源使用的結構描述資訊<xref:System.Data.IDbDataAdapter.SelectCommand%2A>。</span><span class="sxs-lookup"><span data-stu-id="79025-458">This method retrieves the schema information from the data source using the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>.</span></span>  
  
 <span data-ttu-id="79025-459">A<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>作業會將<xref:System.Data.DataTable>目的地<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="79025-459">A <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> operation adds a <xref:System.Data.DataTable> to the destination <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="79025-460">接著它會加入至資料行<xref:System.Data.DataColumnCollection>的<xref:System.Data.DataTable>，並設定下列<xref:System.Data.DataColumn>如果存在於資料來源的屬性：</span><span class="sxs-lookup"><span data-stu-id="79025-460">It then adds columns to the <xref:System.Data.DataColumnCollection> of the <xref:System.Data.DataTable>, and configures the following <xref:System.Data.DataColumn> properties if they exist at the data source:</span></span>  
  
-   <xref:System.Data.DataColumn.AllowDBNull%2A>  
  
-   <span data-ttu-id="79025-461"><xref:System.Data.DataColumn.AutoIncrement%2A>.</span><span class="sxs-lookup"><span data-stu-id="79025-461"><xref:System.Data.DataColumn.AutoIncrement%2A>.</span></span> <span data-ttu-id="79025-462">您必須設定<xref:System.Data.DataColumn.AutoIncrementStep%2A>和<xref:System.Data.DataColumn.AutoIncrementSeed%2A>分開。</span><span class="sxs-lookup"><span data-stu-id="79025-462">You must set <xref:System.Data.DataColumn.AutoIncrementStep%2A> and <xref:System.Data.DataColumn.AutoIncrementSeed%2A> separately.</span></span>  
  
-   <xref:System.Data.DataColumn.MaxLength%2A>  
  
-   <xref:System.Data.DataColumn.ReadOnly%2A>  
  
-   <xref:System.Data.DataColumn.Unique%2A>  
  
 <span data-ttu-id="79025-463"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 也會設定<xref:System.Data.DataTable.PrimaryKey%2A>和<xref:System.Data.DataTable.Constraints%2A>屬性根據下列規則：</span><span class="sxs-lookup"><span data-stu-id="79025-463"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> also configures the <xref:System.Data.DataTable.PrimaryKey%2A> and <xref:System.Data.DataTable.Constraints%2A> properties according to the following rules:</span></span>  
  
-   <span data-ttu-id="79025-464">如果一或多個主索引鍵資料行所傳回<xref:System.Data.IDbDataAdapter.SelectCommand%2A>，它們會做為主要索引鍵資料行<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="79025-464">If one or more primary key columns are returned by the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>, they are used as the primary key columns for the <xref:System.Data.DataTable>.</span></span>  
  
-   <span data-ttu-id="79025-465">如果傳回沒有主索引鍵資料行，但是唯一的資料行，唯一的資料行可用的主索引鍵，如果且只有唯一的資料行都不可為 null。</span><span class="sxs-lookup"><span data-stu-id="79025-465">If no primary key columns are returned but unique columns are, the unique columns are used as the primary key if, and only if, all the unique columns are nonnullable.</span></span> <span data-ttu-id="79025-466">如果任何資料行可為 null，<xref:System.Data.UniqueConstraint>加入至<xref:System.Data.ConstraintCollection>，但<xref:System.Data.DataTable.PrimaryKey%2A>屬性未設定。</span><span class="sxs-lookup"><span data-stu-id="79025-466">If any of the columns are nullable, a <xref:System.Data.UniqueConstraint> is added to the <xref:System.Data.ConstraintCollection>, but the <xref:System.Data.DataTable.PrimaryKey%2A> property is not set.</span></span>  
  
-   <span data-ttu-id="79025-467">如果傳回主要索引鍵資料行，唯一的資料行，將主索引鍵資料行做為主要索引鍵資料行<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="79025-467">If both primary key columns and unique columns are returned, the primary key columns are used as the primary key columns for the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="79025-468">請注意，會將主索引鍵和唯一條件約束加入至<xref:System.Data.ConstraintCollection>根據前述規則，但其他條件約束類型不會加入。</span><span class="sxs-lookup"><span data-stu-id="79025-468">Note that primary keys and unique constraints are added to the <xref:System.Data.ConstraintCollection> according to the preceding rules, but other constraint types are not added.</span></span>  
  
 <span data-ttu-id="79025-469">如果唯一叢集索引上的資料行或 SQL Server 資料表中的資料行定義和叢集索引中的資料行的名稱將會傳回一組個別的資料行上定義主索引鍵條件約束。</span><span class="sxs-lookup"><span data-stu-id="79025-469">If a unique clustered index is defined on a column or columns in a SQL Server table and the primary key constraint is defined on a separate set of columns, then the names of the columns in the clustered index will be returned.</span></span> <span data-ttu-id="79025-470">若要傳回的主索引鍵資料行的名稱，使用指定名稱的主索引鍵的 SELECT 陳述式中的查詢提示。</span><span class="sxs-lookup"><span data-stu-id="79025-470">To return the name or names of the primary key columns, use a query hint with the SELECT statement that specifies the name of the primary key index.</span></span> <span data-ttu-id="79025-471">如需有關指定查詢提示的詳細資訊，請參閱[查詢提示 (TRANSACT-SQL)](http://msdn.microsoft.com/library/ms181714.aspx)。</span><span class="sxs-lookup"><span data-stu-id="79025-471">For more information about specifying query hints, see [Query Hint (Transact-SQL)](http://msdn.microsoft.com/library/ms181714.aspx).</span></span>  
  
 <span data-ttu-id="79025-472">主索引鍵資訊會使用於<xref:System.Data.Common.DbDataAdapter.Fill%2A>來尋找和取代其索引鍵資料行符合任何資料列。</span><span class="sxs-lookup"><span data-stu-id="79025-472">Primary key information is used during <xref:System.Data.Common.DbDataAdapter.Fill%2A> to find and replace any rows whose key columns match.</span></span> <span data-ttu-id="79025-473">如果這不是所要的行為，使用<xref:System.Data.Common.DbDataAdapter.Fill%2A>但未要求結構描述資訊。</span><span class="sxs-lookup"><span data-stu-id="79025-473">If this is not the desired behavior, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> without requesting schema information.</span></span>  
  
 <span data-ttu-id="79025-474">如果<xref:System.Data.IDataAdapter>遇到重複的資料行在填入<xref:System.Data.DataTable>，它會產生後續的資料行，並使用模式的名稱"*columnname*1"，"*columnname*2"，"*columnname*3"等等。</span><span class="sxs-lookup"><span data-stu-id="79025-474">If the <xref:System.Data.IDataAdapter> encounters duplicate columns while populating a <xref:System.Data.DataTable>, it generates names for the subsequent columns, using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="79025-475">如果內送資料中包含未命名資料行，它們會放置於<xref:System.Data.DataSet>根據模式"Column1"、"Column2"，等等。</span><span class="sxs-lookup"><span data-stu-id="79025-475">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span> <span data-ttu-id="79025-476">當多個結果集加入至<xref:System.Data.DataSet>放置於個別的資料表中每個結果集。</span><span class="sxs-lookup"><span data-stu-id="79025-476">When multiple result sets are added to the <xref:System.Data.DataSet> each result set is placed in a separate table.</span></span> <span data-ttu-id="79025-477">其他結果集的命名方式是附加至指定的資料表名稱 （例如，"Table"、"Table1"、"Table2"等。） 的整數值。</span><span class="sxs-lookup"><span data-stu-id="79025-477">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on.).</span></span> <span data-ttu-id="79025-478">使用資料行和資料表名稱的應用程式應確保這些命名模式衝突不會發生。</span><span class="sxs-lookup"><span data-stu-id="79025-478">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="79025-479"><xref:System.Data.IDbConnection> Select 命令相關聯的物件必須有效，但不需要開啟。</span><span class="sxs-lookup"><span data-stu-id="79025-479">The <xref:System.Data.IDbConnection> object associated with the select command must be valid, but it does not need to open.</span></span> <span data-ttu-id="79025-480">如果<xref:System.Data.IDbConnection>前已關閉<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>是呼叫，它會開啟擷取資料，然後關閉。</span><span class="sxs-lookup"><span data-stu-id="79025-480">If the <xref:System.Data.IDbConnection> is closed before <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called, it is opened to retrieve data, then closed.</span></span> <span data-ttu-id="79025-481">如果連接為開啟之前<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>是呼叫，它仍然為開啟狀態。</span><span class="sxs-lookup"><span data-stu-id="79025-481">If the connection is open before <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called, it is left open.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="79025-482">處理批次傳回多個結果，實作的 SQL 陳述式時<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>的.NET Framework Data Provider for OLE DB 擷取，只有第一個結果的結構描述資訊。</span><span class="sxs-lookup"><span data-stu-id="79025-482">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</span></span> <span data-ttu-id="79025-483">若要擷取多個結果的結構描述資訊，請使用<xref:System.Data.Common.DbDataAdapter.Fill%2A>與<xref:System.Data.MissingSchemaAction>設`AddWithKey`。</span><span class="sxs-lookup"><span data-stu-id="79025-483">To retrieve schema information for multiple results, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> with the <xref:System.Data.MissingSchemaAction> set to `AddWithKey`.</span></span>  
  
 <span data-ttu-id="79025-484">當使用<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>，.NET Framework Data Provider for SQL Server 會將 FOR BROWSE 子句附加至正在執行的陳述式。</span><span class="sxs-lookup"><span data-stu-id="79025-484">When using <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, the .NET Framework Data Provider for SQL Server appends a FOR BROWSE clause to the statement being executed.</span></span> <span data-ttu-id="79025-485">使用者應該注意潛在的副作用，例如使用 SET FMTONLY ON 陳述式的干擾。</span><span class="sxs-lookup"><span data-stu-id="79025-485">The user should be aware of potential side effects, such as interference with the use of SET FMTONLY ON statements.</span></span> <span data-ttu-id="79025-486">如需詳細資訊，請參閱 SQL Server 線上叢書 》。</span><span class="sxs-lookup"><span data-stu-id="79025-486">See SQL Server Books Online for more information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="79025-487">下列範例會使用衍生的類別， <xref:System.Data.SqlClient.SqlDataAdapter>，以填滿<xref:System.Data.DataSet>與結構描述，以及傳回<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="79025-487">The following example uses the derived class, <xref:System.Data.SqlClient.SqlDataAdapter>, to fill a <xref:System.Data.DataSet> with the schema, and returns a <xref:System.Data.DataSet>.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.FillSchema1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.FillSchema1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.FillSchema1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.FillSchema1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FillSchema">
      <MemberSignature Language="C#" Value="public System.Data.DataTable FillSchema (System.Data.DataTable dataTable, System.Data.SchemaType schemaType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataTable FillSchema(class System.Data.DataTable dataTable, valuetype System.Data.SchemaType schemaType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataTable ^ FillSchema(System::Data::DataTable ^ dataTable, System::Data::SchemaType schemaType);" />
      <MemberSignature Language="F#" Value="override this.FillSchema : System.Data.DataTable * System.Data.SchemaType -&gt; System.Data.DataTable" Usage="dbDataAdapter.FillSchema (dataTable, schemaType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataTable" Type="System.Data.DataTable" />
        <Parameter Name="schemaType" Type="System.Data.SchemaType" />
      </Parameters>
      <Docs>
        <param name="dataTable">
          <span data-ttu-id="79025-488">The <see cref="T:System.Data.DataTable" /> to be filled with the schema from the data source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-488">The <see cref="T:System.Data.DataTable" /> to be filled with the schema from the data source.</span>
          </span>
        </param>
        <param name="schemaType">
          <span data-ttu-id="79025-489">One of the <see cref="T:System.Data.SchemaType" /> values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-489">One of the <see cref="T:System.Data.SchemaType" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="79025-490">Configures the schema of the specified <see cref="T:System.Data.DataTable" /> based on the specified <see cref="T:System.Data.SchemaType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-490">Configures the schema of the specified <see cref="T:System.Data.DataTable" /> based on the specified <see cref="T:System.Data.SchemaType" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="79025-491">A <see cref="T:System.Data.DataTable" /> that contains schema information returned from the data source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-491">A <see cref="T:System.Data.DataTable" /> that contains schema information returned from the data source.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79025-492"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A>方法會擷取從資料來源使用的結構描述<xref:System.Data.IDbDataAdapter.SelectCommand%2A>。</span><span class="sxs-lookup"><span data-stu-id="79025-492">The <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> method retrieves the schema from the data source using the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>.</span></span> <span data-ttu-id="79025-493">連接物件相關聯<xref:System.Data.IDbDataAdapter.SelectCommand%2A>必須有效，但它不需要開啟。</span><span class="sxs-lookup"><span data-stu-id="79025-493">The connection object associated with the <xref:System.Data.IDbDataAdapter.SelectCommand%2A> must be valid, but it does not need to be open.</span></span> <span data-ttu-id="79025-494">如果連接已關閉之前<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>是呼叫，它會開啟擷取資料，然後關閉。</span><span class="sxs-lookup"><span data-stu-id="79025-494">If the connection is closed before <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called, it is opened to retrieve data, then closed.</span></span> <span data-ttu-id="79025-495">如果連接為開啟之前<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>是呼叫，它會保持開啟狀態。</span><span class="sxs-lookup"><span data-stu-id="79025-495">If the connection is open before <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="79025-496">A<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>作業會傳回<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="79025-496">A <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> operation returns a <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="79025-497">接著它會加入至資料行<xref:System.Data.DataColumnCollection>的<xref:System.Data.DataTable>，並設定下列<xref:System.Data.DataColumn>如果存在於資料來源的屬性：</span><span class="sxs-lookup"><span data-stu-id="79025-497">It then adds columns to the <xref:System.Data.DataColumnCollection> of the <xref:System.Data.DataTable>, and configures the following <xref:System.Data.DataColumn> properties if they exist at the data source:</span></span>  
  
-   <xref:System.Data.DataColumn.AllowDBNull%2A>  
  
-   <span data-ttu-id="79025-498"><xref:System.Data.DataColumn.AutoIncrement%2A>.</span><span class="sxs-lookup"><span data-stu-id="79025-498"><xref:System.Data.DataColumn.AutoIncrement%2A>.</span></span> <span data-ttu-id="79025-499">您必須設定<xref:System.Data.DataColumn.AutoIncrementStep%2A>和<xref:System.Data.DataColumn.AutoIncrementSeed%2A>分開。</span><span class="sxs-lookup"><span data-stu-id="79025-499">You must set <xref:System.Data.DataColumn.AutoIncrementStep%2A> and <xref:System.Data.DataColumn.AutoIncrementSeed%2A> separately.</span></span>  
  
-   <xref:System.Data.DataColumn.MaxLength%2A>  
  
-   <xref:System.Data.DataColumn.ReadOnly%2A>  
  
-   <xref:System.Data.DataColumn.Unique%2A>  
  
 <span data-ttu-id="79025-500"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 也會設定<xref:System.Data.DataTable.PrimaryKey%2A>和<xref:System.Data.DataTable.Constraints%2A>屬性根據下列規則：</span><span class="sxs-lookup"><span data-stu-id="79025-500"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> also configures the <xref:System.Data.DataTable.PrimaryKey%2A> and <xref:System.Data.DataTable.Constraints%2A> properties according to the following rules:</span></span>  
  
-   <span data-ttu-id="79025-501">如果<xref:System.Data.DataTable.PrimaryKey%2A>已經定義為`DataTable`，或`DataTable`包含資料，`PrimaryKey`未設定屬性。</span><span class="sxs-lookup"><span data-stu-id="79025-501">If a <xref:System.Data.DataTable.PrimaryKey%2A> has already been defined for the `DataTable`, or the `DataTable` contains data, the `PrimaryKey` property will not be set.</span></span>  
  
-   <span data-ttu-id="79025-502">如果一或多個主索引鍵資料行所傳回<xref:System.Data.IDbDataAdapter.SelectCommand%2A>，它們會做為主要索引鍵資料行`DataTable`。</span><span class="sxs-lookup"><span data-stu-id="79025-502">If one or more primary key columns are returned by the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>, they are used as the primary key columns for the `DataTable`.</span></span>  
  
-   <span data-ttu-id="79025-503">如果傳回沒有主索引鍵資料行，但是唯一的資料行，唯一的資料行可用的主索引鍵，如果且只有唯一的資料行都不可為 null。</span><span class="sxs-lookup"><span data-stu-id="79025-503">If no primary key columns are returned but unique columns are, the unique columns are used as the primary key if, and only if, all the unique columns are nonnullable.</span></span> <span data-ttu-id="79025-504">如果任何資料行可為 null，<xref:System.Data.UniqueConstraint>加入至<xref:System.Data.ConstraintCollection>，但`PrimaryKey`屬性未設定。</span><span class="sxs-lookup"><span data-stu-id="79025-504">If any of the columns are nullable, a <xref:System.Data.UniqueConstraint> is added to the <xref:System.Data.ConstraintCollection>, but the `PrimaryKey` property is not set.</span></span>  
  
-   <span data-ttu-id="79025-505">如果傳回主要索引鍵資料行，唯一的資料行，將主索引鍵資料行做為主要索引鍵資料行`DataTable`。</span><span class="sxs-lookup"><span data-stu-id="79025-505">If both primary key columns and unique columns are returned, the primary key columns are used as the primary key columns for the `DataTable`.</span></span>  
  
 <span data-ttu-id="79025-506">請注意，會將主索引鍵和唯一條件約束加入至<xref:System.Data.ConstraintCollection>根據前述規則，但其他條件約束類型不會加入。</span><span class="sxs-lookup"><span data-stu-id="79025-506">Note that primary keys and unique constraints are added to the <xref:System.Data.ConstraintCollection> according to the preceding rules, but other constraint types are not added.</span></span> <span data-ttu-id="79025-507">此程序可能需要數個往返到伺服器。</span><span class="sxs-lookup"><span data-stu-id="79025-507">This process may require several round-trips to the server.</span></span>  
  
 <span data-ttu-id="79025-508">如果唯一叢集索引上的資料行或 SQL Server 資料表中的資料行定義和叢集索引中的資料行的名稱將會傳回一組個別的資料行上定義主索引鍵條件約束。</span><span class="sxs-lookup"><span data-stu-id="79025-508">If a unique clustered index is defined on a column or columns in a SQL Server table and the primary key constraint is defined on a separate set of columns, then the names of the columns in the clustered index will be returned.</span></span> <span data-ttu-id="79025-509">若要傳回的主索引鍵資料行的名稱，使用指定名稱的主索引鍵的 SELECT 陳述式中的查詢提示。</span><span class="sxs-lookup"><span data-stu-id="79025-509">To return the name or names of the primary key columns, use a query hint with the SELECT statement that specifies the name of the primary key index.</span></span> <span data-ttu-id="79025-510">如需有關指定查詢提示的詳細資訊，請參閱[查詢提示 (TRANSACT-SQL)](http://msdn.microsoft.com/library/ms181714.aspx)。</span><span class="sxs-lookup"><span data-stu-id="79025-510">For more information about specifying query hints, see [Query Hint (Transact-SQL)](http://msdn.microsoft.com/library/ms181714.aspx).</span></span>  
  
 <span data-ttu-id="79025-511">如果<xref:System.Data.Common.DbDataAdapter>遇到重複的資料行在填入<xref:System.Data.DataTable>，它會產生後續的資料行，並使用模式的名稱"*columnname*1"，"*columnname*2"，"*columnname*3"等等。</span><span class="sxs-lookup"><span data-stu-id="79025-511">If the <xref:System.Data.Common.DbDataAdapter> encounters duplicate columns while populating a <xref:System.Data.DataTable>, it generates names for the subsequent columns, using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="79025-512">如果內送資料中包含未命名資料行，它們會放置於<xref:System.Data.DataSet>根據模式"Column1"、"Column2"，等等。</span><span class="sxs-lookup"><span data-stu-id="79025-512">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span> <span data-ttu-id="79025-513">當多個結果集加入至<xref:System.Data.DataSet>放置於個別的資料表中每個結果集。</span><span class="sxs-lookup"><span data-stu-id="79025-513">When multiple result sets are added to the <xref:System.Data.DataSet> each result set is placed in a separate table.</span></span> <span data-ttu-id="79025-514">其他結果集的命名方式是附加至指定的資料表名稱 （例如，"Table"、"Table1"、"Table2"等。） 的整數值。</span><span class="sxs-lookup"><span data-stu-id="79025-514">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on.).</span></span> <span data-ttu-id="79025-515">使用資料行和資料表名稱的應用程式應確保這些命名模式衝突不會發生。</span><span class="sxs-lookup"><span data-stu-id="79025-515">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="79025-516"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 不會傳回任何資料列。</span><span class="sxs-lookup"><span data-stu-id="79025-516"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> does not return any rows.</span></span> <span data-ttu-id="79025-517">使用<xref:System.Data.Common.DbDataAdapter.Fill%2A>方法，以將資料列加入<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="79025-517">Use the <xref:System.Data.Common.DbDataAdapter.Fill%2A> method to add rows to a <xref:System.Data.DataTable>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="79025-518">處理批次傳回多個結果，實作的 SQL 陳述式時<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>的.NET Framework Data Provider for OLE DB 擷取，只有第一個結果的結構描述資訊。</span><span class="sxs-lookup"><span data-stu-id="79025-518">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</span></span> <span data-ttu-id="79025-519">若要擷取多個結果的結構描述資訊，請使用<xref:System.Data.Common.DbDataAdapter.Fill%2A>與<xref:System.Data.MissingSchemaAction>設`AddWithKey`。</span><span class="sxs-lookup"><span data-stu-id="79025-519">To retrieve schema information for multiple results, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> with the <xref:System.Data.MissingSchemaAction> set to `AddWithKey`.</span></span>  
  
 <span data-ttu-id="79025-520">當使用<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>，.NET Framework Data Provider for SQL Server 會將 FOR BROWSE 子句附加至正在執行的陳述式。</span><span class="sxs-lookup"><span data-stu-id="79025-520">When using <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, the .NET Framework Data Provider for SQL Server appends a FOR BROWSE clause to the statement being executed.</span></span> <span data-ttu-id="79025-521">使用者應該注意潛在的副作用，例如使用 SET FMTONLY ON 陳述式的干擾。</span><span class="sxs-lookup"><span data-stu-id="79025-521">The user should be aware of potential side effects, such as interference with the use of SET FMTONLY ON statements.</span></span> <span data-ttu-id="79025-522">如需詳細資訊，請參閱 SQL Server 線上叢書 》。</span><span class="sxs-lookup"><span data-stu-id="79025-522">See SQL Server Books Online for more information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="79025-523">下列範例會使用衍生的類別， <xref:System.Data.SqlClient.SqlDataAdapter>，以填滿<xref:System.Data.DataSet>與結構描述，以及傳回<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="79025-523">The following example uses the derived class, <xref:System.Data.SqlClient.SqlDataAdapter>, to fill a <xref:System.Data.DataSet> with the schema, and returns a <xref:System.Data.DataTable>.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.FillSchema3#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.FillSchema3/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.FillSchema3#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.FillSchema3/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FillSchema">
      <MemberSignature Language="C#" Value="public System.Data.DataTable[] FillSchema (System.Data.DataSet dataSet, System.Data.SchemaType schemaType, string srcTable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataTable[] FillSchema(class System.Data.DataSet dataSet, valuetype System.Data.SchemaType schemaType, string srcTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataTable ^&gt; ^ FillSchema(System::Data::DataSet ^ dataSet, System::Data::SchemaType schemaType, System::String ^ srcTable);" />
      <MemberSignature Language="F#" Value="override this.FillSchema : System.Data.DataSet * System.Data.SchemaType * string -&gt; System.Data.DataTable[]" Usage="dbDataAdapter.FillSchema (dataSet, schemaType, srcTable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
        <Parameter Name="schemaType" Type="System.Data.SchemaType" />
        <Parameter Name="srcTable" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dataSet">
          <span data-ttu-id="79025-524">A <see cref="T:System.Data.DataSet" /> to insert the schema in.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-524">A <see cref="T:System.Data.DataSet" /> to insert the schema in.</span>
          </span>
        </param>
        <param name="schemaType">
          <span data-ttu-id="79025-525">One of the <see cref="T:System.Data.SchemaType" /> values that specify how to insert the schema.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-525">One of the <see cref="T:System.Data.SchemaType" /> values that specify how to insert the schema.</span>
          </span>
        </param>
        <param name="srcTable">
          <span data-ttu-id="79025-526">The name of the source table to use for table mapping.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-526">The name of the source table to use for table mapping.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="79025-527">Adds a <see cref="T:System.Data.DataTable" /> to the specified <see cref="T:System.Data.DataSet" /> and configures the schema to match that in the data source based upon the specified <see cref="T:System.Data.SchemaType" /> and <see cref="T:System.Data.DataTable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-527">Adds a <see cref="T:System.Data.DataTable" /> to the specified <see cref="T:System.Data.DataSet" /> and configures the schema to match that in the data source based upon the specified <see cref="T:System.Data.SchemaType" /> and <see cref="T:System.Data.DataTable" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="79025-528">A reference to a collection of <see cref="T:System.Data.DataTable" /> objects that were added to the <see cref="T:System.Data.DataSet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-528">A reference to a collection of <see cref="T:System.Data.DataTable" /> objects that were added to the <see cref="T:System.Data.DataSet" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79025-529">這個方法會擷取從資料來源使用的結構描述資訊<xref:System.Data.IDbDataAdapter.SelectCommand%2A>。</span><span class="sxs-lookup"><span data-stu-id="79025-529">This method retrieves the schema information from the data source using the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>.</span></span>  
  
 <span data-ttu-id="79025-530">A<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>作業會將<xref:System.Data.DataTable>目的地<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="79025-530">A <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> operation adds a <xref:System.Data.DataTable> to the destination <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="79025-531">接著它會加入至資料行<xref:System.Data.DataColumnCollection>的<xref:System.Data.DataTable>，並設定下列<xref:System.Data.DataColumn>如果存在於資料來源的屬性：</span><span class="sxs-lookup"><span data-stu-id="79025-531">It then adds columns to the <xref:System.Data.DataColumnCollection> of the <xref:System.Data.DataTable>, and configures the following <xref:System.Data.DataColumn> properties if they exist at the data source:</span></span>  
  
-   <xref:System.Data.DataColumn.AllowDBNull%2A>  
  
-   <span data-ttu-id="79025-532"><xref:System.Data.DataColumn.AutoIncrement%2A>.</span><span class="sxs-lookup"><span data-stu-id="79025-532"><xref:System.Data.DataColumn.AutoIncrement%2A>.</span></span> <span data-ttu-id="79025-533">您必須設定<xref:System.Data.DataColumn.AutoIncrementStep%2A>和<xref:System.Data.DataColumn.AutoIncrementSeed%2A>分開。</span><span class="sxs-lookup"><span data-stu-id="79025-533">You must set <xref:System.Data.DataColumn.AutoIncrementStep%2A> and <xref:System.Data.DataColumn.AutoIncrementSeed%2A> separately.</span></span>  
  
-   <xref:System.Data.DataColumn.MaxLength%2A>  
  
-   <xref:System.Data.DataColumn.ReadOnly%2A>  
  
-   <xref:System.Data.DataColumn.Unique%2A>  
  
 <span data-ttu-id="79025-534"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 也會設定<xref:System.Data.DataTable.PrimaryKey%2A>和<xref:System.Data.DataTable.Constraints%2A>屬性根據下列規則：</span><span class="sxs-lookup"><span data-stu-id="79025-534"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> also configures the <xref:System.Data.DataTable.PrimaryKey%2A> and <xref:System.Data.DataTable.Constraints%2A> properties according to the following rules:</span></span>  
  
-   <span data-ttu-id="79025-535">如果一或多個主索引鍵資料行所傳回<xref:System.Data.IDbDataAdapter.SelectCommand%2A>，它們會做為主要索引鍵資料行<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="79025-535">If one or more primary key columns are returned by the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>, they are used as the primary key columns for the <xref:System.Data.DataTable>.</span></span>  
  
-   <span data-ttu-id="79025-536">如果傳回沒有主索引鍵資料行，但是唯一的資料行，唯一的資料行可用的主索引鍵，如果且只有唯一的資料行都不可為 null。</span><span class="sxs-lookup"><span data-stu-id="79025-536">If no primary key columns are returned but unique columns are, the unique columns are used as the primary key if, and only if, all the unique columns are nonnullable.</span></span> <span data-ttu-id="79025-537">如果任何資料行可為 null，<xref:System.Data.UniqueConstraint>加入至<xref:System.Data.ConstraintCollection>，但<xref:System.Data.DataTable.PrimaryKey%2A>屬性未設定。</span><span class="sxs-lookup"><span data-stu-id="79025-537">If any of the columns are nullable, a <xref:System.Data.UniqueConstraint> is added to the <xref:System.Data.ConstraintCollection>, but the <xref:System.Data.DataTable.PrimaryKey%2A> property is not set.</span></span>  
  
-   <span data-ttu-id="79025-538">如果傳回主要索引鍵資料行，唯一的資料行，將主索引鍵資料行做為主要索引鍵資料行<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="79025-538">If both primary key columns and unique columns are returned, the primary key columns are used as the primary key columns for the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="79025-539">請注意，會將主索引鍵和唯一條件約束加入至<xref:System.Data.ConstraintCollection>根據前述規則，但其他條件約束類型不會加入。</span><span class="sxs-lookup"><span data-stu-id="79025-539">Note that primary keys and unique constraints are added to the <xref:System.Data.ConstraintCollection> according to the preceding rules, but other constraint types are not added.</span></span>  
  
 <span data-ttu-id="79025-540">如果唯一叢集索引上的資料行或 SQL Server 資料表中的資料行定義和叢集索引中的資料行的名稱將會傳回一組個別的資料行上定義主索引鍵條件約束。</span><span class="sxs-lookup"><span data-stu-id="79025-540">If a unique clustered index is defined on a column or columns in a SQL Server table and the primary key constraint is defined on a separate set of columns, then the names of the columns in the clustered index will be returned.</span></span> <span data-ttu-id="79025-541">若要傳回的主索引鍵資料行的名稱，使用指定名稱的主索引鍵的 SELECT 陳述式中的查詢提示。</span><span class="sxs-lookup"><span data-stu-id="79025-541">To return the name or names of the primary key columns, use a query hint with the SELECT statement that specifies the name of the primary key index.</span></span> <span data-ttu-id="79025-542">如需有關指定查詢提示的詳細資訊，請參閱[查詢提示 (TRANSACT-SQL)](http://msdn.microsoft.com/library/ms181714.aspx)。</span><span class="sxs-lookup"><span data-stu-id="79025-542">For more information about specifying query hints, see [Query Hint (Transact-SQL)](http://msdn.microsoft.com/library/ms181714.aspx).</span></span>  
  
 <span data-ttu-id="79025-543">主索引鍵資訊會使用於<xref:System.Data.Common.DbDataAdapter.Fill%2A>來尋找和取代其索引鍵資料行符合任何資料列。</span><span class="sxs-lookup"><span data-stu-id="79025-543">Primary key information is used during <xref:System.Data.Common.DbDataAdapter.Fill%2A> to find and replace any rows whose key columns match.</span></span> <span data-ttu-id="79025-544">如果這不是所要的行為，使用<xref:System.Data.Common.DbDataAdapter.Fill%2A>但未要求結構描述資訊。</span><span class="sxs-lookup"><span data-stu-id="79025-544">If this is not the desired behavior, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> without requesting schema information.</span></span>  
  
 <span data-ttu-id="79025-545">如果<xref:System.Data.Common.DbDataAdapter>遇到重複的資料行在填入<xref:System.Data.DataTable>，它會產生後續的資料行，並使用模式的名稱"*columnname*1"，"*columnname*2"，"*columnname*3"等等。</span><span class="sxs-lookup"><span data-stu-id="79025-545">If the <xref:System.Data.Common.DbDataAdapter> encounters duplicate columns while populating a <xref:System.Data.DataTable>, it generates names for the subsequent columns, using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="79025-546">如果內送資料中包含未命名資料行，它們會放置於<xref:System.Data.DataSet>根據模式"Column1"、"Column2"，等等。</span><span class="sxs-lookup"><span data-stu-id="79025-546">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span> <span data-ttu-id="79025-547">當多個結果集加入至<xref:System.Data.DataSet>放置於個別的資料表中每個結果集。</span><span class="sxs-lookup"><span data-stu-id="79025-547">When multiple result sets are added to the <xref:System.Data.DataSet> each result set is placed in a separate table.</span></span> <span data-ttu-id="79025-548">其他結果集的命名方式是附加至指定的資料表名稱 （例如，"Table"、"Table1"、"Table2"等。） 的整數值。</span><span class="sxs-lookup"><span data-stu-id="79025-548">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on.).</span></span> <span data-ttu-id="79025-549">使用資料行和資料表名稱的應用程式應確保這些命名模式衝突不會發生。</span><span class="sxs-lookup"><span data-stu-id="79025-549">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="79025-550"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A>方法支援案例其中<xref:System.Data.DataSet>包含多個<xref:System.Data.DataTable>名稱只有大小寫不同的物件。</span><span class="sxs-lookup"><span data-stu-id="79025-550">The <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> method supports scenarios where the <xref:System.Data.DataSet> contains multiple <xref:System.Data.DataTable> objects whose names differ only by case.</span></span> <span data-ttu-id="79025-551">在這種情況下，<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>執行區分大小寫的比較，來尋找對應的資料表，並建立新的資料表，如果沒有完全相符項目存在。</span><span class="sxs-lookup"><span data-stu-id="79025-551">In such situations, <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> performs a case-sensitive comparison to find the corresponding table, and creates a new table if no exact match exists.</span></span> <span data-ttu-id="79025-552">下列 C# 程式碼說明這個行為。</span><span class="sxs-lookup"><span data-stu-id="79025-552">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
dataset.Tables.Add("AAA");  
adapter.FillSchema(dataset, "aaa"); // Fills the schema of "aaa", which already exists in the DataSet.  
adapter.FillSchema(dataset, "Aaa"); // Adds a new table called "Aaa".  
```  
  
 <span data-ttu-id="79025-553">如果<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>稱為和<xref:System.Data.DataSet>只包含<xref:System.Data.DataTable>名稱只有大小寫不同的<xref:System.Data.DataTable>會更新。</span><span class="sxs-lookup"><span data-stu-id="79025-553">If <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called and the <xref:System.Data.DataSet> contains only one <xref:System.Data.DataTable> whose name differs only by case, that <xref:System.Data.DataTable> is updated.</span></span> <span data-ttu-id="79025-554">在此案例中，這個比較是不區分大小寫。</span><span class="sxs-lookup"><span data-stu-id="79025-554">In this scenario, the comparison is case insensitive.</span></span> <span data-ttu-id="79025-555">下列 C# 程式碼說明這個行為。</span><span class="sxs-lookup"><span data-stu-id="79025-555">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
adapter.FillSchema(dataset, "AAA"); // Fills the schema of table "aaa" because only one similarly named table is in the DataSet.  
```  
  
 <span data-ttu-id="79025-556"><xref:System.Data.IDbConnection> Select 命令相關聯的物件必須有效，但不需要開啟。</span><span class="sxs-lookup"><span data-stu-id="79025-556">The <xref:System.Data.IDbConnection> object associated with the select command must be valid, but it does not need to open.</span></span> <span data-ttu-id="79025-557">如果<xref:System.Data.IDbConnection>前已關閉<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>是呼叫，它會開啟擷取資料，然後關閉。</span><span class="sxs-lookup"><span data-stu-id="79025-557">If the <xref:System.Data.IDbConnection> is closed before <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called, it is opened to retrieve data, then closed.</span></span> <span data-ttu-id="79025-558">如果連接為開啟之前<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>是呼叫，它仍然為開啟狀態。</span><span class="sxs-lookup"><span data-stu-id="79025-558">If the connection is open before <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called, it is left open.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="79025-559">處理批次傳回多個結果，實作的 SQL 陳述式時<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>的.NET Framework Data Provider for OLE DB 擷取，只有第一個結果的結構描述資訊。</span><span class="sxs-lookup"><span data-stu-id="79025-559">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</span></span> <span data-ttu-id="79025-560">若要擷取多個結果的結構描述資訊，請使用<xref:System.Data.Common.DbDataAdapter.Fill%2A>與<xref:System.Data.MissingSchemaAction>設`AddWithKey`。</span><span class="sxs-lookup"><span data-stu-id="79025-560">To retrieve schema information for multiple results, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> with the <xref:System.Data.MissingSchemaAction> set to `AddWithKey`.</span></span>  
  
 <span data-ttu-id="79025-561">當使用<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>，.NET Framework Data Provider for SQL Server 會將 FOR BROWSE 子句附加至正在執行的陳述式。</span><span class="sxs-lookup"><span data-stu-id="79025-561">When using <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, the .NET Framework Data Provider for SQL Server appends a FOR BROWSE clause to the statement being executed.</span></span> <span data-ttu-id="79025-562">使用者應該注意潛在的副作用，例如使用 SET FMTONLY ON 陳述式的干擾。</span><span class="sxs-lookup"><span data-stu-id="79025-562">The user should be aware of potential side effects, such as interference with the use of SET FMTONLY ON statements.</span></span> <span data-ttu-id="79025-563">如需詳細資訊，請參閱 SQL Server 線上叢書 》。</span><span class="sxs-lookup"><span data-stu-id="79025-563">See SQL Server Books Online for more information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="79025-564">下列範例會使用衍生的類別， <xref:System.Data.SqlClient.SqlDataAdapter>，以填滿<xref:System.Data.DataSet>與結構描述，以及傳回<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="79025-564">The following example uses the derived class, <xref:System.Data.SqlClient.SqlDataAdapter>, to fill a <xref:System.Data.DataSet> with the schema, and returns a <xref:System.Data.DataSet>.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.FillSchema2 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.FillSchema2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.FillSchema2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.FillSchema2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="79025-565">A source table from which to get the schema could not be found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-565">A source table from which to get the schema could not be found.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="FillSchema">
      <MemberSignature Language="C#" Value="protected virtual System.Data.DataTable FillSchema (System.Data.DataTable dataTable, System.Data.SchemaType schemaType, System.Data.IDbCommand command, System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.DataTable FillSchema(class System.Data.DataTable dataTable, valuetype System.Data.SchemaType schemaType, class System.Data.IDbCommand command, valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDbCommand,System.Data.CommandBehavior)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Data::DataTable ^ FillSchema(System::Data::DataTable ^ dataTable, System::Data::SchemaType schemaType, System::Data::IDbCommand ^ command, System::Data::CommandBehavior behavior);" />
      <MemberSignature Language="F#" Value="override this.FillSchema : System.Data.DataTable * System.Data.SchemaType * System.Data.IDbCommand * System.Data.CommandBehavior -&gt; System.Data.DataTable" Usage="dbDataAdapter.FillSchema (dataTable, schemaType, command, behavior)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataTable" Type="System.Data.DataTable" />
        <Parameter Name="schemaType" Type="System.Data.SchemaType" />
        <Parameter Name="command" Type="System.Data.IDbCommand" />
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" />
      </Parameters>
      <Docs>
        <param name="dataTable">
          <span data-ttu-id="79025-566">The <see cref="T:System.Data.DataTable" /> to be filled with the schema from the data source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-566">The <see cref="T:System.Data.DataTable" /> to be filled with the schema from the data source.</span>
          </span>
        </param>
        <param name="schemaType">
          <span data-ttu-id="79025-567">One of the <see cref="T:System.Data.SchemaType" /> values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-567">One of the <see cref="T:System.Data.SchemaType" /> values.</span>
          </span>
        </param>
        <param name="command">
          <span data-ttu-id="79025-568">The SQL SELECT statement used to retrieve rows from the data source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-568">The SQL SELECT statement used to retrieve rows from the data source.</span>
          </span>
        </param>
        <param name="behavior">
          <span data-ttu-id="79025-569">One of the <see cref="T:System.Data.CommandBehavior" /> values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-569">One of the <see cref="T:System.Data.CommandBehavior" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="79025-570">Configures the schema of the specified <see cref="T:System.Data.DataTable" /> based on the specified <see cref="T:System.Data.SchemaType" />, command string, and <see cref="T:System.Data.CommandBehavior" /> values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-570">Configures the schema of the specified <see cref="T:System.Data.DataTable" /> based on the specified <see cref="T:System.Data.SchemaType" />, command string, and <see cref="T:System.Data.CommandBehavior" /> values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="79025-571">A of <see cref="T:System.Data.DataTable" /> object that contains schema information returned from the data source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-571">A of <see cref="T:System.Data.DataTable" /> object that contains schema information returned from the data source.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79025-572"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A>方法會擷取從資料來源使用的結構描述<xref:System.Data.IDbDataAdapter.SelectCommand%2A>。</span><span class="sxs-lookup"><span data-stu-id="79025-572">The <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> method retrieves the schema from the data source using the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>.</span></span> <span data-ttu-id="79025-573">連接物件相關聯<xref:System.Data.IDbDataAdapter.SelectCommand%2A>必須有效，但它不需要開啟。</span><span class="sxs-lookup"><span data-stu-id="79025-573">The connection object associated with the <xref:System.Data.IDbDataAdapter.SelectCommand%2A> must be valid, but it does not need to be open.</span></span> <span data-ttu-id="79025-574">如果連接已關閉之前<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>是呼叫，它會開啟擷取資料，然後關閉。</span><span class="sxs-lookup"><span data-stu-id="79025-574">If the connection is closed before <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called, it is opened to retrieve data, then closed.</span></span> <span data-ttu-id="79025-575">如果連接為開啟之前<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>是呼叫，它會保持開啟狀態。</span><span class="sxs-lookup"><span data-stu-id="79025-575">If the connection is open before <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="79025-576">A<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>作業會將<xref:System.Data.DataTable>目的地<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="79025-576">A <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> operation adds a <xref:System.Data.DataTable> to the destination <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="79025-577">接著它會加入至資料行<xref:System.Data.DataColumnCollection>的<xref:System.Data.DataTable>，並設定下列<xref:System.Data.DataColumn>如果存在於資料來源的屬性：</span><span class="sxs-lookup"><span data-stu-id="79025-577">It then adds columns to the <xref:System.Data.DataColumnCollection> of the <xref:System.Data.DataTable>, and configures the following <xref:System.Data.DataColumn> properties if they exist at the data source:</span></span>  
  
-   <xref:System.Data.DataColumn.AllowDBNull%2A>  
  
-   <span data-ttu-id="79025-578"><xref:System.Data.DataColumn.AutoIncrement%2A>.</span><span class="sxs-lookup"><span data-stu-id="79025-578"><xref:System.Data.DataColumn.AutoIncrement%2A>.</span></span> <span data-ttu-id="79025-579">您必須設定<xref:System.Data.DataColumn.AutoIncrementStep%2A>和<xref:System.Data.DataColumn.AutoIncrementSeed%2A>分開。</span><span class="sxs-lookup"><span data-stu-id="79025-579">You must set <xref:System.Data.DataColumn.AutoIncrementStep%2A> and <xref:System.Data.DataColumn.AutoIncrementSeed%2A> separately.</span></span>  
  
-   <xref:System.Data.DataColumn.MaxLength%2A>  
  
-   <xref:System.Data.DataColumn.ReadOnly%2A>  
  
-   <xref:System.Data.DataColumn.Unique%2A>  
  
 <span data-ttu-id="79025-580"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 也會設定<xref:System.Data.DataTable.PrimaryKey%2A>和<xref:System.Data.DataTable.Constraints%2A>屬性根據下列規則：</span><span class="sxs-lookup"><span data-stu-id="79025-580"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> also configures the <xref:System.Data.DataTable.PrimaryKey%2A> and <xref:System.Data.DataTable.Constraints%2A> properties according to the following rules:</span></span>  
  
-   <span data-ttu-id="79025-581">如果一或多個主索引鍵資料行所傳回<xref:System.Data.IDbDataAdapter.SelectCommand%2A>，它們會做為主要索引鍵資料行<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="79025-581">If one or more primary key columns are returned by the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>, they are used as the primary key columns for the <xref:System.Data.DataTable>.</span></span>  
  
-   <span data-ttu-id="79025-582">如果傳回沒有主索引鍵資料行，但是唯一的資料行，唯一的資料行可用的主索引鍵，如果且只有唯一的資料行都不可為 null。</span><span class="sxs-lookup"><span data-stu-id="79025-582">If no primary key columns are returned but unique columns are, the unique columns are used as the primary key if, and only if, all the unique columns are nonnullable.</span></span> <span data-ttu-id="79025-583">如果任何資料行可為 null，<xref:System.Data.UniqueConstraint>加入至<xref:System.Data.ConstraintCollection>，但<xref:System.Data.DataTable.PrimaryKey%2A>屬性未設定。</span><span class="sxs-lookup"><span data-stu-id="79025-583">If any of the columns are nullable, a <xref:System.Data.UniqueConstraint> is added to the <xref:System.Data.ConstraintCollection>, but the <xref:System.Data.DataTable.PrimaryKey%2A> property is not set.</span></span>  
  
-   <span data-ttu-id="79025-584">如果傳回主要索引鍵資料行，唯一的資料行，將主索引鍵資料行做為主要索引鍵資料行<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="79025-584">If both primary key columns and unique columns are returned, the primary key columns are used as the primary key columns for the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="79025-585">請注意，會將主索引鍵和唯一條件約束加入至<xref:System.Data.ConstraintCollection>根據前述規則，但其他條件約束類型不會加入。</span><span class="sxs-lookup"><span data-stu-id="79025-585">Note that primary keys and unique constraints are added to the <xref:System.Data.ConstraintCollection> according to the preceding rules, but other constraint types are not added.</span></span>  
  
 <span data-ttu-id="79025-586">如果唯一叢集索引上的資料行或 SQL Server 資料表中的資料行定義和叢集索引中的資料行的名稱將會傳回一組個別的資料行上定義主索引鍵條件約束。</span><span class="sxs-lookup"><span data-stu-id="79025-586">If a unique clustered index is defined on a column or columns in a SQL Server table and the primary key constraint is defined on a separate set of columns, then the names of the columns in the clustered index will be returned.</span></span> <span data-ttu-id="79025-587">若要傳回的主索引鍵資料行的名稱，使用指定名稱的主索引鍵的 SELECT 陳述式中的查詢提示。</span><span class="sxs-lookup"><span data-stu-id="79025-587">To return the name or names of the primary key columns, use a query hint with the SELECT statement that specifies the name of the primary key index.</span></span> <span data-ttu-id="79025-588">如需有關指定查詢提示的詳細資訊，請參閱[查詢提示 (TRANSACT-SQL)](http://msdn.microsoft.com/library/ms181714.aspx)。</span><span class="sxs-lookup"><span data-stu-id="79025-588">For more information about specifying query hints, see [Query Hint (Transact-SQL)](http://msdn.microsoft.com/library/ms181714.aspx).</span></span>  
  
 <span data-ttu-id="79025-589">如果<xref:System.Data.IDataAdapter>遇到重複的資料行在填入<xref:System.Data.DataTable>，它會產生後續的資料行，並使用模式的名稱"*columnname*1"，"*columnname*2"，"*columnname*3"等等。</span><span class="sxs-lookup"><span data-stu-id="79025-589">If the <xref:System.Data.IDataAdapter> encounters duplicate columns while populating a <xref:System.Data.DataTable>, it generates names for the subsequent columns, using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="79025-590">如果內送資料中包含未命名資料行，它們會放置於<xref:System.Data.DataSet>根據模式"Column1"、"Column2"，等等。</span><span class="sxs-lookup"><span data-stu-id="79025-590">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span> <span data-ttu-id="79025-591">當多個結果集加入至<xref:System.Data.DataSet>放置於個別的資料表中每個結果集。</span><span class="sxs-lookup"><span data-stu-id="79025-591">When multiple result sets are added to the <xref:System.Data.DataSet> each result set is placed in a separate table.</span></span> <span data-ttu-id="79025-592">其他結果集的命名方式是附加至指定的資料表名稱 （例如，"Table"、"Table1"、"Table2"等。） 的整數值。</span><span class="sxs-lookup"><span data-stu-id="79025-592">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on.).</span></span> <span data-ttu-id="79025-593">使用資料行和資料表名稱的應用程式應確保這些命名模式衝突不會發生。</span><span class="sxs-lookup"><span data-stu-id="79025-593">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="79025-594"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 不會傳回任何資料列。</span><span class="sxs-lookup"><span data-stu-id="79025-594"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> does not return any rows.</span></span> <span data-ttu-id="79025-595">使用<xref:System.Data.Common.DbDataAdapter.Fill%2A>方法，以將資料列加入<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="79025-595">Use the <xref:System.Data.Common.DbDataAdapter.Fill%2A> method to add rows to a <xref:System.Data.DataTable>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="79025-596">處理批次傳回多個結果，實作的 SQL 陳述式時<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>的.NET Framework Data Provider for OLE DB 擷取，只有第一個結果的結構描述資訊。</span><span class="sxs-lookup"><span data-stu-id="79025-596">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</span></span> <span data-ttu-id="79025-597">若要擷取多個結果的結構描述資訊，請使用<xref:System.Data.Common.DbDataAdapter.Fill%2A>與<xref:System.Data.MissingSchemaAction>設`AddWithKey`。</span><span class="sxs-lookup"><span data-stu-id="79025-597">To retrieve schema information for multiple results, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> with the <xref:System.Data.MissingSchemaAction> set to `AddWithKey`.</span></span>  
  
 <span data-ttu-id="79025-598">當使用<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>，.NET Framework Data Provider for SQL Server 會將 FOR BROWSE 子句附加至正在執行的陳述式。</span><span class="sxs-lookup"><span data-stu-id="79025-598">When using <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, the .NET Framework Data Provider for SQL Server appends a FOR BROWSE clause to the statement being executed.</span></span> <span data-ttu-id="79025-599">使用者應該注意潛在的副作用，例如使用 SET FMTONLY ON 陳述式的干擾。</span><span class="sxs-lookup"><span data-stu-id="79025-599">The user should be aware of potential side effects, such as interference with the use of SET FMTONLY ON statements.</span></span> <span data-ttu-id="79025-600">如需詳細資訊，請參閱 SQL Server 線上叢書 》。</span><span class="sxs-lookup"><span data-stu-id="79025-600">See SQL Server Books Online for more information.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="79025-601">
            <para>這項實作<see cref="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)" />被保護的設計為使用.NET Framework 資料提供者方法。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-601">
              <para>This implementation of the <see cref="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)" /> method is protected and is designed for use by a .NET Framework data provider.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="FillSchema">
      <MemberSignature Language="C#" Value="protected virtual System.Data.DataTable[] FillSchema (System.Data.DataSet dataSet, System.Data.SchemaType schemaType, System.Data.IDbCommand command, string srcTable, System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.DataTable[] FillSchema(class System.Data.DataSet dataSet, valuetype System.Data.SchemaType schemaType, class System.Data.IDbCommand command, string srcTable, valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.Data.IDbCommand,System.String,System.Data.CommandBehavior)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual cli::array &lt;System::Data::DataTable ^&gt; ^ FillSchema(System::Data::DataSet ^ dataSet, System::Data::SchemaType schemaType, System::Data::IDbCommand ^ command, System::String ^ srcTable, System::Data::CommandBehavior behavior);" />
      <MemberSignature Language="F#" Value="override this.FillSchema : System.Data.DataSet * System.Data.SchemaType * System.Data.IDbCommand * string * System.Data.CommandBehavior -&gt; System.Data.DataTable[]" Usage="dbDataAdapter.FillSchema (dataSet, schemaType, command, srcTable, behavior)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
        <Parameter Name="schemaType" Type="System.Data.SchemaType" />
        <Parameter Name="command" Type="System.Data.IDbCommand" />
        <Parameter Name="srcTable" Type="System.String" />
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" />
      </Parameters>
      <Docs>
        <param name="dataSet">
          <span data-ttu-id="79025-602">The <see cref="T:System.Data.DataSet" /> to be filled with the schema from the data source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-602">The <see cref="T:System.Data.DataSet" /> to be filled with the schema from the data source.</span>
          </span>
        </param>
        <param name="schemaType">
          <span data-ttu-id="79025-603">One of the <see cref="T:System.Data.SchemaType" /> values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-603">One of the <see cref="T:System.Data.SchemaType" /> values.</span>
          </span>
        </param>
        <param name="command">
          <span data-ttu-id="79025-604">The SQL SELECT statement used to retrieve rows from the data source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-604">The SQL SELECT statement used to retrieve rows from the data source.</span>
          </span>
        </param>
        <param name="srcTable">
          <span data-ttu-id="79025-605">The name of the source table to use for table mapping.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-605">The name of the source table to use for table mapping.</span>
          </span>
        </param>
        <param name="behavior">
          <span data-ttu-id="79025-606">One of the <see cref="T:System.Data.CommandBehavior" /> values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-606">One of the <see cref="T:System.Data.CommandBehavior" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="79025-607">Adds a <see cref="T:System.Data.DataTable" /> to the specified <see cref="T:System.Data.DataSet" /> and configures the schema to match that in the data source based on the specified <see cref="T:System.Data.SchemaType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-607">Adds a <see cref="T:System.Data.DataTable" /> to the specified <see cref="T:System.Data.DataSet" /> and configures the schema to match that in the data source based on the specified <see cref="T:System.Data.SchemaType" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="79025-608">An array of <see cref="T:System.Data.DataTable" /> objects that contain schema information returned from the data source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-608">An array of <see cref="T:System.Data.DataTable" /> objects that contain schema information returned from the data source.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79025-609"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A>方法會擷取從資料來源使用的結構描述<xref:System.Data.IDbDataAdapter.SelectCommand%2A>。</span><span class="sxs-lookup"><span data-stu-id="79025-609">The <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> method retrieves the schema from the data source using the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>.</span></span> <span data-ttu-id="79025-610">連接物件相關聯<xref:System.Data.IDbDataAdapter.SelectCommand%2A>必須有效，但它不需要開啟。</span><span class="sxs-lookup"><span data-stu-id="79025-610">The connection object associated with the <xref:System.Data.IDbDataAdapter.SelectCommand%2A> must be valid, but it does not need to be open.</span></span> <span data-ttu-id="79025-611">如果連接已關閉之前<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>是呼叫，它會開啟擷取資料，然後關閉。</span><span class="sxs-lookup"><span data-stu-id="79025-611">If the connection is closed before <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called, it is opened to retrieve data, then closed.</span></span> <span data-ttu-id="79025-612">如果連接為開啟之前<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>是呼叫，它會保持開啟狀態。</span><span class="sxs-lookup"><span data-stu-id="79025-612">If the connection is open before <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="79025-613">A<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>作業會將<xref:System.Data.DataTable>目的地<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="79025-613">A <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> operation adds a <xref:System.Data.DataTable> to the destination <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="79025-614">接著它會加入至資料行<xref:System.Data.DataColumnCollection>的<xref:System.Data.DataTable>，並設定下列<xref:System.Data.DataColumn>如果存在於資料來源的屬性：</span><span class="sxs-lookup"><span data-stu-id="79025-614">It then adds columns to the <xref:System.Data.DataColumnCollection> of the <xref:System.Data.DataTable>, and configures the following <xref:System.Data.DataColumn> properties if they exist at the data source:</span></span>  
  
-   <xref:System.Data.DataColumn.AllowDBNull%2A>  
  
-   <span data-ttu-id="79025-615"><xref:System.Data.DataColumn.AutoIncrement%2A>.</span><span class="sxs-lookup"><span data-stu-id="79025-615"><xref:System.Data.DataColumn.AutoIncrement%2A>.</span></span> <span data-ttu-id="79025-616">您必須設定<xref:System.Data.DataColumn.AutoIncrementStep%2A>和<xref:System.Data.DataColumn.AutoIncrementSeed%2A>分開。</span><span class="sxs-lookup"><span data-stu-id="79025-616">You must set <xref:System.Data.DataColumn.AutoIncrementStep%2A> and <xref:System.Data.DataColumn.AutoIncrementSeed%2A> separately.</span></span>  
  
-   <xref:System.Data.DataColumn.MaxLength%2A>  
  
-   <xref:System.Data.DataColumn.ReadOnly%2A>  
  
-   <xref:System.Data.DataColumn.Unique%2A>  
  
 <span data-ttu-id="79025-617"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 也會設定<xref:System.Data.DataTable.PrimaryKey%2A>和<xref:System.Data.DataTable.Constraints%2A>屬性根據下列規則：</span><span class="sxs-lookup"><span data-stu-id="79025-617"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> also configures the <xref:System.Data.DataTable.PrimaryKey%2A> and <xref:System.Data.DataTable.Constraints%2A> properties according to the following rules:</span></span>  
  
-   <span data-ttu-id="79025-618">如果一或多個主索引鍵資料行所傳回<xref:System.Data.IDbDataAdapter.SelectCommand%2A>，它們會做為主要索引鍵資料行<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="79025-618">If one or more primary key columns are returned by the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>, they are used as the primary key columns for the <xref:System.Data.DataTable>.</span></span>  
  
-   <span data-ttu-id="79025-619">如果傳回沒有主索引鍵資料行，但是唯一的資料行，唯一的資料行可用的主索引鍵，如果且只有唯一的資料行都不可為 null。</span><span class="sxs-lookup"><span data-stu-id="79025-619">If no primary key columns are returned but unique columns are, the unique columns are used as the primary key if, and only if, all the unique columns are nonnullable.</span></span> <span data-ttu-id="79025-620">如果任何資料行可為 null，<xref:System.Data.UniqueConstraint>加入至<xref:System.Data.ConstraintCollection>，但<xref:System.Data.DataTable.PrimaryKey%2A>屬性未設定。</span><span class="sxs-lookup"><span data-stu-id="79025-620">If any of the columns are nullable, a <xref:System.Data.UniqueConstraint> is added to the <xref:System.Data.ConstraintCollection>, but the <xref:System.Data.DataTable.PrimaryKey%2A> property is not set.</span></span>  
  
-   <span data-ttu-id="79025-621">如果傳回主要索引鍵資料行，唯一的資料行，將主索引鍵資料行做為主要索引鍵資料行<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="79025-621">If both primary key columns and unique columns are returned, the primary key columns are used as the primary key columns for the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="79025-622">請注意，會將主索引鍵和唯一條件約束加入至<xref:System.Data.ConstraintCollection>根據前述規則，但其他條件約束類型不會加入。</span><span class="sxs-lookup"><span data-stu-id="79025-622">Note that primary keys and unique constraints are added to the <xref:System.Data.ConstraintCollection> according to the preceding rules, but other constraint types are not added.</span></span>  
  
 <span data-ttu-id="79025-623">如果唯一叢集索引上的資料行或 SQL Server 資料表中的資料行定義和叢集索引中的資料行的名稱將會傳回一組個別的資料行上定義主索引鍵條件約束。</span><span class="sxs-lookup"><span data-stu-id="79025-623">If a unique clustered index is defined on a column or columns in a SQL Server table and the primary key constraint is defined on a separate set of columns, then the names of the columns in the clustered index will be returned.</span></span> <span data-ttu-id="79025-624">若要傳回的主索引鍵資料行的名稱，使用指定名稱的主索引鍵的 SELECT 陳述式中的查詢提示。</span><span class="sxs-lookup"><span data-stu-id="79025-624">To return the name or names of the primary key columns, use a query hint with the SELECT statement that specifies the name of the primary key index.</span></span> <span data-ttu-id="79025-625">如需有關指定查詢提示的詳細資訊，請參閱[查詢提示 (TRANSACT-SQL)](http://msdn.microsoft.com/library/ms181714.aspx)。</span><span class="sxs-lookup"><span data-stu-id="79025-625">For more information about specifying query hints, see [Query Hint (Transact-SQL)](http://msdn.microsoft.com/library/ms181714.aspx).</span></span>  
  
 <span data-ttu-id="79025-626">如果<xref:System.Data.IDataAdapter>遇到重複的資料行在填入<xref:System.Data.DataTable>，它會產生後續的資料行，並使用模式的名稱"*columnname*1"，"*columnname*2"，"*columnname*3"等等。</span><span class="sxs-lookup"><span data-stu-id="79025-626">If the <xref:System.Data.IDataAdapter> encounters duplicate columns while populating a <xref:System.Data.DataTable>, it generates names for the subsequent columns, using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="79025-627">如果內送資料中包含未命名資料行，它們會放置於<xref:System.Data.DataSet>根據模式"Column1"、"Column2"，等等。</span><span class="sxs-lookup"><span data-stu-id="79025-627">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span> <span data-ttu-id="79025-628">當多個結果集加入至<xref:System.Data.DataSet>放置於個別的資料表中每個結果集。</span><span class="sxs-lookup"><span data-stu-id="79025-628">When multiple result sets are added to the <xref:System.Data.DataSet> each result set is placed in a separate table.</span></span> <span data-ttu-id="79025-629">其他結果集的命名方式是附加至指定的資料表名稱 （例如，"Table"、"Table1"、"Table2"等。） 的整數值。</span><span class="sxs-lookup"><span data-stu-id="79025-629">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on.).</span></span> <span data-ttu-id="79025-630">使用資料行和資料表名稱的應用程式應確保這些命名模式衝突不會發生。</span><span class="sxs-lookup"><span data-stu-id="79025-630">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="79025-631"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A>方法支援案例其中<xref:System.Data.DataSet>包含多個<xref:System.Data.DataTable>名稱只有大小寫不同的物件。</span><span class="sxs-lookup"><span data-stu-id="79025-631">The <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> method supports scenarios where the <xref:System.Data.DataSet> contains multiple <xref:System.Data.DataTable> objects whose names differ only by case.</span></span> <span data-ttu-id="79025-632">在這種情況下，<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>執行區分大小寫的比較，來尋找對應的資料表，並建立新的資料表，如果沒有完全相符項目存在。</span><span class="sxs-lookup"><span data-stu-id="79025-632">In such situations, <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> performs a case-sensitive comparison to find the corresponding table, and creates a new table if no exact match exists.</span></span> <span data-ttu-id="79025-633">下列 C# 程式碼說明這個行為。</span><span class="sxs-lookup"><span data-stu-id="79025-633">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
dataset.Tables.Add("AAA");  
adapter.FillSchema(dataset, "aaa"); // Fills the schema of "aaa", which already exists in the DataSet.  
adapter.FillSchema(dataset, "Aaa"); // Adds a new table called "Aaa".  
```  
  
 <span data-ttu-id="79025-634">如果<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>稱為和<xref:System.Data.DataSet>只包含<xref:System.Data.DataTable>名稱只有大小寫不同的<xref:System.Data.DataTable>會更新。</span><span class="sxs-lookup"><span data-stu-id="79025-634">If <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called and the <xref:System.Data.DataSet> contains only one <xref:System.Data.DataTable> whose name differs only by case, that <xref:System.Data.DataTable> is updated.</span></span> <span data-ttu-id="79025-635">在此案例中，這個比較是不區分大小寫。</span><span class="sxs-lookup"><span data-stu-id="79025-635">In this scenario, the comparison is case insensitive.</span></span> <span data-ttu-id="79025-636">下列 C# 程式碼說明這個行為。</span><span class="sxs-lookup"><span data-stu-id="79025-636">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
adapter.FillSchema(dataset, "AAA"); // Fills the schema of table "aaa" because only one similarly named table is in the DataSet.  
```  
  
 <span data-ttu-id="79025-637"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 不會傳回任何資料列。</span><span class="sxs-lookup"><span data-stu-id="79025-637"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> does not return any rows.</span></span> <span data-ttu-id="79025-638">使用<xref:System.Data.Common.DbDataAdapter.Fill%2A>方法，以將資料列加入<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="79025-638">Use the <xref:System.Data.Common.DbDataAdapter.Fill%2A> method to add rows to a <xref:System.Data.DataTable>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="79025-639">處理批次傳回多個結果，實作的 SQL 陳述式時<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>的.NET Framework Data Provider for OLE DB 擷取，只有第一個結果的結構描述資訊。</span><span class="sxs-lookup"><span data-stu-id="79025-639">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</span></span> <span data-ttu-id="79025-640">若要擷取多個結果的結構描述資訊，請使用<xref:System.Data.Common.DbDataAdapter.Fill%2A>與<xref:System.Data.MissingSchemaAction>設`AddWithKey`。</span><span class="sxs-lookup"><span data-stu-id="79025-640">To retrieve schema information for multiple results, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> with the <xref:System.Data.MissingSchemaAction> set to `AddWithKey`.</span></span>  
  
 <span data-ttu-id="79025-641">當使用<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>，.NET Framework Data Provider for SQL Server 會將 FOR BROWSE 子句附加至正在執行的陳述式。</span><span class="sxs-lookup"><span data-stu-id="79025-641">When using <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, the .NET Framework Data Provider for SQL Server appends a FOR BROWSE clause to the statement being executed.</span></span> <span data-ttu-id="79025-642">使用者應該注意潛在的副作用，例如使用 SET FMTONLY ON 陳述式的干擾。</span><span class="sxs-lookup"><span data-stu-id="79025-642">The user should be aware of potential side effects, such as interference with the use of SET FMTONLY ON statements.</span></span> <span data-ttu-id="79025-643">如需詳細資訊，請參閱 SQL Server 線上叢書 》。</span><span class="sxs-lookup"><span data-stu-id="79025-643">See SQL Server Books Online for more information.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="79025-644">
            <para>這項實作<see cref="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)" />被保護的設計為使用.NET Framework 資料提供者方法。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-644">
              <para>This implementation of the <see cref="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)" /> method is protected and is designed for use by a .NET Framework data provider.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetBatchedParameter">
      <MemberSignature Language="C#" Value="protected virtual System.Data.IDataParameter GetBatchedParameter (int commandIdentifier, int parameterIndex);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.IDataParameter GetBatchedParameter(int32 commandIdentifier, int32 parameterIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.GetBatchedParameter(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetBatchedParameter (commandIdentifier As Integer, parameterIndex As Integer) As IDataParameter" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Data::IDataParameter ^ GetBatchedParameter(int commandIdentifier, int parameterIndex);" />
      <MemberSignature Language="F#" Value="abstract member GetBatchedParameter : int * int -&gt; System.Data.IDataParameter&#xA;override this.GetBatchedParameter : int * int -&gt; System.Data.IDataParameter" Usage="dbDataAdapter.GetBatchedParameter (commandIdentifier, parameterIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDataParameter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandIdentifier" Type="System.Int32" />
        <Parameter Name="parameterIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="commandIdentifier">
          <span data-ttu-id="79025-645">The index of the command to retrieve the parameter from.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-645">The index of the command to retrieve the parameter from.</span>
          </span>
        </param>
        <param name="parameterIndex">
          <span data-ttu-id="79025-646">The index of the parameter within the command.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-646">The index of the parameter within the command.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="79025-647">Returns a <see cref="T:System.Data.IDataParameter" /> from one of the commands in the current batch.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-647">Returns a <see cref="T:System.Data.IDataParameter" /> from one of the commands in the current batch.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="79025-648">The <see cref="T:System.Data.IDataParameter" /> specified.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-648">The <see cref="T:System.Data.IDataParameter" /> specified.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79025-649">在<xref:System.Data.Common.DbDataAdapter>，這個方法會擲回<xref:System.NotSupportedException>。</span><span class="sxs-lookup"><span data-stu-id="79025-649">In <xref:System.Data.Common.DbDataAdapter>, this method throws <xref:System.NotSupportedException>.</span></span> <span data-ttu-id="79025-650">類別繼承自<xref:System.Data.Common.DbDataAdapter>覆寫這個方法以提供支援批次。</span><span class="sxs-lookup"><span data-stu-id="79025-650">Classes that inherit from <xref:System.Data.Common.DbDataAdapter> override this method to provide support for batches.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="79025-651">The adapter does not support batches.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-651">The adapter does not support batches.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="79025-652">
            <para>這個方法受到保護，可供使用的.NET Framework 資料提供者。如果類別繼承自<see cref="T:System.Data.Common.DbDataAdapter" />支援批次，該類別會覆寫此方法可讓使用者執行批次。實作會使用<paramref name="commandIdentifier" />提供尋找要求的命令，然後使用<paramref name="parameterIndex" />來尋找所要求的參數提供。例如，<paramref name="commandIdentifier" />的 0 和<paramref name="parameterIndex" />為 0 會傳回第一個參數從批次中第一個命令。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-652">
              <para>This method is protected and is designed for use by a .NET Framework data provider.  If a class that inherits from <see cref="T:System.Data.Common.DbDataAdapter" /> supports batches, that class overrides this method to allow users to execute a batch. An implementation uses the <paramref name="commandIdentifier" /> provided to locate the requested command, then uses the <paramref name="parameterIndex" /> provided to locate the requested parameter. For example, a <paramref name="commandIdentifier" /> of 0 and a <paramref name="parameterIndex" /> of 0 returns the first parameter from the first command in the batch.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetBatchedRecordsAffected">
      <MemberSignature Language="C#" Value="protected virtual bool GetBatchedRecordsAffected (int commandIdentifier, out int recordsAffected, out Exception error);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool GetBatchedRecordsAffected(int32 commandIdentifier, [out] int32&amp; recordsAffected, [out] class System.Exception&amp; error) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.GetBatchedRecordsAffected(System.Int32,System.Int32@,System.Exception@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetBatchedRecordsAffected (commandIdentifier As Integer, ByRef recordsAffected As Integer, ByRef error As Exception) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool GetBatchedRecordsAffected(int commandIdentifier, [Runtime::InteropServices::Out] int % recordsAffected, [Runtime::InteropServices::Out] Exception ^ % error);" />
      <MemberSignature Language="F#" Value="abstract member GetBatchedRecordsAffected : int *  *  -&gt; bool&#xA;override this.GetBatchedRecordsAffected : int *  *  -&gt; bool" Usage="dbDataAdapter.GetBatchedRecordsAffected (commandIdentifier, recordsAffected, error)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandIdentifier" Type="System.Int32" />
        <Parameter Name="recordsAffected" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="error" Type="System.Exception&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="commandIdentifier">
          <span data-ttu-id="79025-653">The zero-based column ordinal of the individual command within the batch.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-653">The zero-based column ordinal of the individual command within the batch.</span>
          </span>
        </param>
        <param name="recordsAffected">
          <span data-ttu-id="79025-654">The number of rows affected in the data store by the specified command within the batch.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-654">The number of rows affected in the data store by the specified command within the batch.</span>
          </span>
        </param>
        <param name="error">
          <span data-ttu-id="79025-655">An <see cref="T:System.Exception" /> thrown during execution of the specified command.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-655">An <see cref="T:System.Exception" /> thrown during execution of the specified command.</span>
          </span>
          <span data-ttu-id="79025-656">Returns <see langword="null" /> (<see langword="Nothing" /> in Visual Basic) if no exception is thrown.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-656">Returns <see langword="null" /> (<see langword="Nothing" /> in Visual Basic) if no exception is thrown.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="79025-657">Returns information about an individual update attempt within a larger batched update.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-657">Returns information about an individual update attempt within a larger batched update.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="79025-658">Information about an individual update attempt within a larger batched update.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-658">Information about an individual update attempt within a larger batched update.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79025-659">支援批次更新邏輯的資料提供者必須覆寫虛擬方法的一連串<xref:System.Data.Common.DbDataAdapter>類別。</span><span class="sxs-lookup"><span data-stu-id="79025-659">Data providers that support batched updating logic must override a series of virtual methods on the <xref:System.Data.Common.DbDataAdapter> class.</span></span> <span data-ttu-id="79025-660">`GetBatchedRecordsAffected` 代表其中一個這些虛擬方法。</span><span class="sxs-lookup"><span data-stu-id="79025-660">`GetBatchedRecordsAffected` represents one of those virtual methods.</span></span> <span data-ttu-id="79025-661">`DbDataAdapter`類別會倚賴`GetBatchedRecordsAffected`來判斷成功或失敗的批次內的個別更新嘗試，因此它可以將標記各有一個對應<xref:System.Data.DataRow>據此。</span><span class="sxs-lookup"><span data-stu-id="79025-661">The `DbDataAdapter` class relies on `GetBatchedRecordsAffected` to determine the success or failure of individual update attempts within a batch so it can mark each corresponding <xref:System.Data.DataRow> accordingly.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFillParameters">
      <MemberSignature Language="C#" Value="public override System.Data.IDataParameter[] GetFillParameters ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.IDataParameter[] GetFillParameters() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.GetFillParameters" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetFillParameters () As IDataParameter()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Data::IDataParameter ^&gt; ^ GetFillParameters();" />
      <MemberSignature Language="F#" Value="override this.GetFillParameters : unit -&gt; System.Data.IDataParameter[]" Usage="dbDataAdapter.GetFillParameters " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataAdapter.GetFillParameters</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.IDataParameter[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="79025-662">Gets the parameters set by the user when executing an SQL SELECT statement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-662">Gets the parameters set by the user when executing an SQL SELECT statement.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="79025-663">An array of <see cref="T:System.Data.IDataParameter" /> objects that contains the parameters set by the user.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-663">An array of <see cref="T:System.Data.IDataParameter" /> objects that contains the parameters set by the user.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeBatching">
      <MemberSignature Language="C#" Value="protected virtual void InitializeBatching ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InitializeBatching() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.InitializeBatching" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub InitializeBatching ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void InitializeBatching();" />
      <MemberSignature Language="F#" Value="abstract member InitializeBatching : unit -&gt; unit&#xA;override this.InitializeBatching : unit -&gt; unit" Usage="dbDataAdapter.InitializeBatching " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="79025-664">Initializes batching for the <see cref="T:System.Data.Common.DbDataAdapter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-664">Initializes batching for the <see cref="T:System.Data.Common.DbDataAdapter" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79025-665">在<xref:System.Data.Common.DbDataAdapter>，這個方法會擲回<xref:System.NotSupportedException>。</span><span class="sxs-lookup"><span data-stu-id="79025-665">In <xref:System.Data.Common.DbDataAdapter>, this method throws <xref:System.NotSupportedException>.</span></span> <span data-ttu-id="79025-666">類別繼承自<xref:System.Data.Common.DbDataAdapter>覆寫這個方法以提供支援批次。</span><span class="sxs-lookup"><span data-stu-id="79025-666">Classes that inherit from <xref:System.Data.Common.DbDataAdapter> override this method to provide support for batches.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="79025-667">The adapter does not support batches.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-667">The adapter does not support batches.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="79025-668">
            <para>這個方法受到保護，可供使用的.NET Framework 資料提供者。如果類別繼承自<see cref="T:System.Data.Common.DbDataAdapter" />支援批次，該類別會覆寫這個方法。這個方法可讓類別有機會初始化支援批次處理所需的任何資源。例如，類別可能會配置來保存命令集的批次中的資料結構。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-668">
              <para>This method is protected and is designed for use by a .NET Framework data provider.  If a class that inherits from <see cref="T:System.Data.Common.DbDataAdapter" /> supports batches, that class overrides this method. This method gives the class the opportunity to initialize any resources necessary to support batching. For example, a class may allocate a data structure to hold the set of commands in the batch.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="InsertCommand">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbCommand InsertCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbCommand InsertCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataAdapter.InsertCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property InsertCommand As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Common::DbCommand ^ InsertCommand { System::Data::Common::DbCommand ^ get(); void set(System::Data::Common::DbCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InsertCommand : System.Data.Common.DbCommand with get, set" Usage="System.Data.Common.DbDataAdapter.InsertCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="79025-669">Gets or sets a command used to insert new records into the data source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-669">Gets or sets a command used to insert new records into the data source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="79025-670">A<see cref="T:System.Data.IDbCommand" />期間使用<see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />插入新資料列的資料集的資料來源中的記錄。</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-670">A <see cref="T:System.Data.IDbCommand" /> used during <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> to insert records in the data source for new rows in the data set.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79025-671">期間<xref:System.Data.Common.DbDataAdapter.Update%2A>，如果沒有設定這個屬性，並且出現在主索引鍵資訊<xref:System.Data.DataSet>、<xref:System.Data.IDbDataAdapter.InsertCommand%2A>就會自動產生。</span><span class="sxs-lookup"><span data-stu-id="79025-671">During <xref:System.Data.Common.DbDataAdapter.Update%2A>, if this property is not set and primary key information is present in the <xref:System.Data.DataSet>, the <xref:System.Data.IDbDataAdapter.InsertCommand%2A> will be automatically generated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="79025-672">下列範例會建立衍生的類別<xref:System.Data.OleDb.OleDbDataAdapter>並設定其屬性的某些。</span><span class="sxs-lookup"><span data-stu-id="79025-672">The following example creates the derived class <xref:System.Data.OleDb.OleDbDataAdapter> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.InsertCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.InsertCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.InsertCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.InsertCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnRowUpdated">
      <MemberSignature Language="C#" Value="protected virtual void OnRowUpdated (System.Data.Common.RowUpdatedEventArgs value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowUpdated(class System.Data.Common.RowUpdatedEventArgs value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowUpdated (value As RowUpdatedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowUpdated(System::Data::Common::RowUpdatedEventArgs ^ value);" />
      <MemberSignature Language="F#" Value="abstract member OnRowUpdated : System.Data.Common.RowUpdatedEventArgs -&gt; unit&#xA;override this.OnRowUpdated : System.Data.Common.RowUpdatedEventArgs -&gt; unit" Usage="dbDataAdapter.OnRowUpdated value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.Common.RowUpdatedEventArgs" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="79025-673">A <see cref="T:System.Data.Common.RowUpdatedEventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-673">A <see cref="T:System.Data.Common.RowUpdatedEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="79025-674">Raises the <see langword="RowUpdated" /> event of a .NET Framework data provider.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-674">Raises the <see langword="RowUpdated" /> event of a .NET Framework data provider.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79025-675">引發事件會透過委派叫用此事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="79025-675">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="79025-676">如需概觀，請參閱[處理和引發事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="79025-676">For an overview, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="79025-677">
            <para>在覆寫<see cref="M:System.Data.Common.DbDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)" />在衍生類別中，請務必呼叫基底類別的<see cref="M:System.Data.Common.DbDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)" />方法。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-677">
              <para>When overriding <see cref="M:System.Data.Common.DbDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Data.Common.DbDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)" /> method.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnRowUpdating">
      <MemberSignature Language="C#" Value="protected virtual void OnRowUpdating (System.Data.Common.RowUpdatingEventArgs value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowUpdating(class System.Data.Common.RowUpdatingEventArgs value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowUpdating (value As RowUpdatingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowUpdating(System::Data::Common::RowUpdatingEventArgs ^ value);" />
      <MemberSignature Language="F#" Value="abstract member OnRowUpdating : System.Data.Common.RowUpdatingEventArgs -&gt; unit&#xA;override this.OnRowUpdating : System.Data.Common.RowUpdatingEventArgs -&gt; unit" Usage="dbDataAdapter.OnRowUpdating value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.Common.RowUpdatingEventArgs" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="79025-678">An <see cref="T:System.Data.Common.RowUpdatingEventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-678">An <see cref="T:System.Data.Common.RowUpdatingEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="79025-679">Raises the <see langword="RowUpdating" /> event of a .NET Framework data provider.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-679">Raises the <see langword="RowUpdating" /> event of a .NET Framework data provider.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79025-680">引發事件會透過委派叫用此事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="79025-680">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="79025-681">如需概觀，請參閱[處理和引發事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="79025-681">For an overview, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="79025-682">
            <para>在覆寫<see cref="M:System.Data.Common.DbDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)" />在衍生類別中，請務必呼叫基底類別的<see cref="M:System.Data.Common.DbDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)" />方法。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-682">
              <para>When overriding <see cref="M:System.Data.Common.DbDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)" /> in a derived class, be sure to call the bases class's <see cref="M:System.Data.Common.DbDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)" /> method.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="SelectCommand">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbCommand SelectCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbCommand SelectCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataAdapter.SelectCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectCommand As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Common::DbCommand ^ SelectCommand { System::Data::Common::DbCommand ^ get(); void set(System::Data::Common::DbCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SelectCommand : System.Data.Common.DbCommand with get, set" Usage="System.Data.Common.DbDataAdapter.SelectCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="79025-683">Gets or sets a command used to select records in the data source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-683">Gets or sets a command used to select records in the data source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="79025-684">A<see cref="T:System.Data.IDbCommand" />期間所使用<see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />放置在資料集中的資料來源中選取記錄。</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-684">A <see cref="T:System.Data.IDbCommand" /> that is used during <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> to select records from data source for placement in the data set.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="79025-685">下列範例會建立衍生的類別<xref:System.Data.OleDb.OleDbDataAdapter>並設定其屬性的某些。</span><span class="sxs-lookup"><span data-stu-id="79025-685">The following example creates the derived class <xref:System.Data.OleDb.OleDbDataAdapter> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.SelectCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.SelectCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.SelectCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.SelectCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbDataAdapter.DeleteCommand">
      <MemberSignature Language="C#" Value="System.Data.IDbCommand System.Data.IDbDataAdapter.DeleteCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand System.Data.IDbDataAdapter.DeleteCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#DeleteCommand" />
      <MemberSignature Language="VB.NET" Value=" Property DeleteCommand As IDbCommand Implements IDbDataAdapter.DeleteCommand" />
      <MemberSignature Language="C++ CLI" Value="property System::Data::IDbCommand ^ System.Data.IDbDataAdapter.DeleteCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Data.Common.DbDataAdapter.System.Data.IDbDataAdapter.DeleteCommand" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataAdapter.DeleteCommand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="79025-686">Gets or sets an SQL statement for deleting records from the data set.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-686">Gets or sets an SQL statement for deleting records from the data set.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="79025-687">
            <see cref="T:System.Data.IDbCommand" />期間使用<see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />資料集中刪除的資料列的資料來源中刪除記錄。</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-687">An <see cref="T:System.Data.IDbCommand" /> used during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> to delete records in the data source for deleted rows in the data set.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79025-688">這個成員是明確介面成員實作。</span><span class="sxs-lookup"><span data-stu-id="79025-688">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="79025-689">只有在 <xref:System.Data.Common.DbDataAdapter> 執行個體轉換成 <xref:System.Data.IDbDataAdapter> 介面時，才能使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="79025-689">It can be used only when the <xref:System.Data.Common.DbDataAdapter> instance is cast to an <xref:System.Data.IDbDataAdapter> interface.</span></span>  
  
 <span data-ttu-id="79025-690">如需詳細資訊，請參閱<xref:System.Data.IDbDataAdapter.DeleteCommand%2A>。</span><span class="sxs-lookup"><span data-stu-id="79025-690">For more information, see <xref:System.Data.IDbDataAdapter.DeleteCommand%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbDataAdapter.InsertCommand">
      <MemberSignature Language="C#" Value="System.Data.IDbCommand System.Data.IDbDataAdapter.InsertCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand System.Data.IDbDataAdapter.InsertCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#InsertCommand" />
      <MemberSignature Language="VB.NET" Value=" Property InsertCommand As IDbCommand Implements IDbDataAdapter.InsertCommand" />
      <MemberSignature Language="C++ CLI" Value="property System::Data::IDbCommand ^ System.Data.IDbDataAdapter.InsertCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Data.Common.DbDataAdapter.System.Data.IDbDataAdapter.InsertCommand" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataAdapter.InsertCommand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="79025-691">Gets or sets an SQL statement used to insert new records into the data source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-691">Gets or sets an SQL statement used to insert new records into the data source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="79025-692">
            <see cref="T:System.Data.IDbCommand" />期間使用<see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />插入新資料列的資料集的資料來源中的記錄。</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-692">An <see cref="T:System.Data.IDbCommand" /> used during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> to insert records in the data source for new rows in the data set.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79025-693">這個成員是明確介面成員實作。</span><span class="sxs-lookup"><span data-stu-id="79025-693">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="79025-694">只有在 <xref:System.Data.Common.DbDataAdapter> 執行個體轉換成 <xref:System.Data.IDbDataAdapter> 介面時，才能使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="79025-694">It can be used only when the <xref:System.Data.Common.DbDataAdapter> instance is cast to an <xref:System.Data.IDbDataAdapter> interface.</span></span>  
  
 <span data-ttu-id="79025-695">如需詳細資訊，請參閱<xref:System.Data.IDbDataAdapter.InsertCommand%2A>。</span><span class="sxs-lookup"><span data-stu-id="79025-695">For more information, see <xref:System.Data.IDbDataAdapter.InsertCommand%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbDataAdapter.SelectCommand">
      <MemberSignature Language="C#" Value="System.Data.IDbCommand System.Data.IDbDataAdapter.SelectCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand System.Data.IDbDataAdapter.SelectCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#SelectCommand" />
      <MemberSignature Language="VB.NET" Value=" Property SelectCommand As IDbCommand Implements IDbDataAdapter.SelectCommand" />
      <MemberSignature Language="C++ CLI" Value="property System::Data::IDbCommand ^ System.Data.IDbDataAdapter.SelectCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Data.Common.DbDataAdapter.System.Data.IDbDataAdapter.SelectCommand" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataAdapter.SelectCommand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="79025-696">Gets or sets an SQL statement used to select records in the data source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-696">Gets or sets an SQL statement used to select records in the data source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="79025-697">
            <see cref="T:System.Data.IDbCommand" />期間所使用<see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />放置在資料集中的資料來源中選取記錄。</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-697">An <see cref="T:System.Data.IDbCommand" /> that is used during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> to select records from data source for placement in the data set.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79025-698">這個成員是明確介面成員實作。</span><span class="sxs-lookup"><span data-stu-id="79025-698">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="79025-699">只有在 <xref:System.Data.Common.DbDataAdapter> 執行個體轉換成 <xref:System.Data.IDbDataAdapter> 介面時，才能使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="79025-699">It can be used only when the <xref:System.Data.Common.DbDataAdapter> instance is cast to an <xref:System.Data.IDbDataAdapter> interface.</span></span>  
  
 <span data-ttu-id="79025-700">如需詳細資訊，請參閱<xref:System.Data.IDbDataAdapter.SelectCommand%2A>。</span><span class="sxs-lookup"><span data-stu-id="79025-700">For more information, see <xref:System.Data.IDbDataAdapter.SelectCommand%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbDataAdapter.UpdateCommand">
      <MemberSignature Language="C#" Value="System.Data.IDbCommand System.Data.IDbDataAdapter.UpdateCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand System.Data.IDbDataAdapter.UpdateCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#UpdateCommand" />
      <MemberSignature Language="VB.NET" Value=" Property UpdateCommand As IDbCommand Implements IDbDataAdapter.UpdateCommand" />
      <MemberSignature Language="C++ CLI" Value="property System::Data::IDbCommand ^ System.Data.IDbDataAdapter.UpdateCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Data.Common.DbDataAdapter.System.Data.IDbDataAdapter.UpdateCommand" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataAdapter.UpdateCommand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="79025-701">Gets or sets an SQL statement used to update records in the data source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-701">Gets or sets an SQL statement used to update records in the data source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="79025-702">
            <see cref="T:System.Data.IDbCommand" />期間使用<see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />修改資料集中的資料列的資料來源中更新記錄。</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-702">An <see cref="T:System.Data.IDbCommand" /> used during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> to update records in the data source for modified rows in the data set.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79025-703">這個成員是明確介面成員實作。</span><span class="sxs-lookup"><span data-stu-id="79025-703">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="79025-704">只有在 <xref:System.Data.Common.DbDataAdapter> 執行個體轉換成 <xref:System.Data.IDbDataAdapter> 介面時，才能使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="79025-704">It can be used only when the <xref:System.Data.Common.DbDataAdapter> instance is cast to an <xref:System.Data.IDbDataAdapter> interface.</span></span>  
  
 <span data-ttu-id="79025-705">如需詳細資訊，請參閱<xref:System.Data.IDbDataAdapter.UpdateCommand%2A>。</span><span class="sxs-lookup"><span data-stu-id="79025-705">For more information, see <xref:System.Data.IDbDataAdapter.UpdateCommand%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ICloneable.Clone">
      <MemberSignature Language="C#" Value="object ICloneable.Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ICloneable.Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.System#ICloneable#Clone" />
      <MemberSignature Language="VB.NET" Value="Function Clone () As Object Implements ICloneable.Clone" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ICloneable.Clone() = ICloneable::Clone;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="79025-706">Creates a new object that is a copy of the current instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-706">Creates a new object that is a copy of the current instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="79025-707">A new object that is a copy of this instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-707">A new object that is a copy of this instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79025-708">這個成員是明確介面成員實作。</span><span class="sxs-lookup"><span data-stu-id="79025-708">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="79025-709">只有在 <xref:System.Data.Common.DbDataAdapter> 執行個體轉換成 <xref:System.ICloneable> 介面時，才能使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="79025-709">It can be used only when the <xref:System.Data.Common.DbDataAdapter> instance is cast to an <xref:System.ICloneable> interface.</span></span>  
  
 <span data-ttu-id="79025-710">如需詳細資訊，請參閱<xref:System.ICloneable.Clone%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="79025-710">For more information, see <xref:System.ICloneable.Clone%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TerminateBatching">
      <MemberSignature Language="C#" Value="protected virtual void TerminateBatching ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void TerminateBatching() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.TerminateBatching" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub TerminateBatching ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void TerminateBatching();" />
      <MemberSignature Language="F#" Value="abstract member TerminateBatching : unit -&gt; unit&#xA;override this.TerminateBatching : unit -&gt; unit" Usage="dbDataAdapter.TerminateBatching " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="79025-711">Ends batching for the <see cref="T:System.Data.Common.DbDataAdapter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-711">Ends batching for the <see cref="T:System.Data.Common.DbDataAdapter" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79025-712">在<xref:System.Data.Common.DbDataAdapter>，這個方法會擲回<xref:System.NotSupportedException>。</span><span class="sxs-lookup"><span data-stu-id="79025-712">In <xref:System.Data.Common.DbDataAdapter>, this method throws <xref:System.NotSupportedException>.</span></span> <span data-ttu-id="79025-713">類別繼承自<xref:System.Data.Common.DbDataAdapter>覆寫這個方法以提供支援批次。</span><span class="sxs-lookup"><span data-stu-id="79025-713">Classes that inherit from <xref:System.Data.Common.DbDataAdapter> override this method to provide support for batches.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="79025-714">The adapter does not support batches.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-714">The adapter does not support batches.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="79025-715">
            <para>這個方法受到保護，可供使用的.NET Framework 資料提供者。如果類別繼承自<see cref="T:System.Data.Common.DbDataAdapter" />支援批次，該類別會覆寫這個方法。這個方法可讓類別 dispose 配置支援批次處理的任何資源。例如，類別可能會取消配置保存命令批次中的資料結構。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-715">
              <para>This method is protected and is designed for use by a .NET Framework data provider.  If a class that inherits from <see cref="T:System.Data.Common.DbDataAdapter" /> supports batches, that class overrides this method. This method gives the class the opportunity to dispose of any resources allocated to support batching. For example, the class may deallocate the data structure that holds the commands in the batch.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <MemberGroup MemberName="Update">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="79025-716">Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the <see cref="T:System.Data.DataSet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-716">Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the <see cref="T:System.Data.DataSet" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public int Update (System.Data.DataRow[] dataRows);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Update(class System.Data.DataRow[] dataRows) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Update (dataRows As DataRow()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Update(cli::array &lt;System::Data::DataRow ^&gt; ^ dataRows);" />
      <MemberSignature Language="F#" Value="override this.Update : System.Data.DataRow[] -&gt; int" Usage="dbDataAdapter.Update dataRows" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataRows" Type="System.Data.DataRow[]" />
      </Parameters>
      <Docs>
        <param name="dataRows">
          <span data-ttu-id="79025-717">An array of <see cref="T:System.Data.DataRow" /> objects used to update the data source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-717">An array of <see cref="T:System.Data.DataRow" /> objects used to update the data source.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="79025-718">Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified array in the <see cref="T:System.Data.DataSet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-718">Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified array in the <see cref="T:System.Data.DataSet" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="79025-719">The number of rows successfully updated from the <see cref="T:System.Data.DataSet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-719">The number of rows successfully updated from the <see cref="T:System.Data.DataSet" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79025-720">當應用程式呼叫<xref:System.Data.Common.DbDataAdapter.Update%2A>方法，<xref:System.Data.Common.DbDataAdapter>檢查<xref:System.Data.DataRow.RowState%2A>屬性，並執行必要的 INSERT、 UPDATE 或 DELETE 陳述式，反覆地針對每個資料列，並根據中設定的索引順序<xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="79025-720">When an application calls the <xref:System.Data.Common.DbDataAdapter.Update%2A> method, the <xref:System.Data.Common.DbDataAdapter> examines the <xref:System.Data.DataRow.RowState%2A> property, and executes the required INSERT, UPDATE, or DELETE statements iteratively for each row, based on the order of the indexes configured in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="79025-721">例如，<xref:System.Data.Common.DbDataAdapter.Update%2A>可能會執行 DELETE 陳述式，後面接著 INSERT 陳述式，則另一個的 DELETE 陳述式，所以中的資料列的排序<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="79025-721">For example, <xref:System.Data.Common.DbDataAdapter.Update%2A> might execute a DELETE statement, followed by an INSERT statement, and then another DELETE statement, due to the ordering of the rows in the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="79025-722">請注意這些陳述式不會執行以批次的處理程序。個別更新每個資料列。</span><span class="sxs-lookup"><span data-stu-id="79025-722">It should be noted that these statements are not performed as a batch process; each row is updated individually.</span></span> <span data-ttu-id="79025-723">應用程式可以呼叫<xref:System.Data.DataSet.GetChanges%2A>情況下，您必須在其中控制陳述式型別 （例如，在更新之前插入） 順序的方法。</span><span class="sxs-lookup"><span data-stu-id="79025-723">An application can call the <xref:System.Data.DataSet.GetChanges%2A> method in situations where you must control the sequence of statement types (for example, INSERTs before UPDATEs).</span></span> <span data-ttu-id="79025-724">如需詳細資訊，請參閱[以 Dataadapter 更新資料來源](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md)。</span><span class="sxs-lookup"><span data-stu-id="79025-724">For more information, see [Updating Data Sources with DataAdapters](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md).</span></span>  
  
 <span data-ttu-id="79025-725">如果尚未指定 INSERT、 UPDATE 或 DELETE 陳述式，<xref:System.Data.Common.DbDataAdapter.Update%2A>方法會產生例外狀況。</span><span class="sxs-lookup"><span data-stu-id="79025-725">If INSERT, UPDATE, or DELETE statements have not been specified, the <xref:System.Data.Common.DbDataAdapter.Update%2A> method generates an exception.</span></span> <span data-ttu-id="79025-726">不過，您可以建立<xref:System.Data.SqlClient.SqlCommandBuilder>或<xref:System.Data.OleDb.OleDbCommandBuilder>物件來自動產生的單一資料表更新 SQL 陳述式，如果您設定`SelectCommand`.NET Framework 資料提供者的屬性。</span><span class="sxs-lookup"><span data-stu-id="79025-726">However, you can create a <xref:System.Data.SqlClient.SqlCommandBuilder> or <xref:System.Data.OleDb.OleDbCommandBuilder> object to automatically generate SQL statements for single-table updates if you set the `SelectCommand` property of a .NET Framework data provider.</span></span> <span data-ttu-id="79025-727">然後，您未設定任何其他 SQL 陳述式由產生**CommandBuilder**。</span><span class="sxs-lookup"><span data-stu-id="79025-727">Then, any additional SQL statements that you do not set are generated by the **CommandBuilder**.</span></span> <span data-ttu-id="79025-728">此產生邏輯需要索引鍵資料行資訊會出現在<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="79025-728">This generation logic requires key column information to be present in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="79025-729">如需詳細資訊，請參閱[Commandbuilder 產生命令](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)。</span><span class="sxs-lookup"><span data-stu-id="79025-729">For more information see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
 <span data-ttu-id="79025-730"><xref:System.Data.Common.DbDataAdapter.Update%2A>方法會從執行更新前的第一個對應中所列的資料表擷取資料列。</span><span class="sxs-lookup"><span data-stu-id="79025-730">The <xref:System.Data.Common.DbDataAdapter.Update%2A> method retrieves rows from the table listed in the first mapping before performing an update.</span></span> <span data-ttu-id="79025-731"><xref:System.Data.Common.DbDataAdapter.Update%2A>然後重新整理使用的值的資料列<xref:System.Data.IDbCommand.UpdatedRowSource%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="79025-731">The <xref:System.Data.Common.DbDataAdapter.Update%2A> then refreshes the row using the value of the <xref:System.Data.IDbCommand.UpdatedRowSource%2A> property.</span></span> <span data-ttu-id="79025-732">傳回的任何其他資料列都會被忽略。</span><span class="sxs-lookup"><span data-stu-id="79025-732">Any additional rows returned are ignored.</span></span>  
  
 <span data-ttu-id="79025-733">任何資料會載入回後<xref:System.Data.DataSet>、<xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A>引發事件，讓使用者檢查調解<xref:System.Data.DataSet>資料列和任何輸出命令所傳回的參數。</span><span class="sxs-lookup"><span data-stu-id="79025-733">After any data is loaded back into the <xref:System.Data.DataSet>, the <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised, allowing the user to inspect the reconciled <xref:System.Data.DataSet> row and any output parameters returned by the command.</span></span> <span data-ttu-id="79025-734">已成功更新資料列之後，會接受該資料列所做的變更。</span><span class="sxs-lookup"><span data-stu-id="79025-734">After a row updates successfully, the changes to that row are accepted.</span></span>  
  
 <span data-ttu-id="79025-735">當使用<xref:System.Data.Common.DbDataAdapter.Update%2A>，執行的順序如下所示：</span><span class="sxs-lookup"><span data-stu-id="79025-735">When using <xref:System.Data.Common.DbDataAdapter.Update%2A>, the order of execution is as follows:</span></span>  
  
1.  <span data-ttu-id="79025-736">中的值<xref:System.Data.DataRow>移到參數值。</span><span class="sxs-lookup"><span data-stu-id="79025-736">The values in the <xref:System.Data.DataRow> are moved to the parameter values.</span></span>  
  
2.  <span data-ttu-id="79025-737">便會引發 <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> 事件。</span><span class="sxs-lookup"><span data-stu-id="79025-737">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> event is raised.</span></span>  
  
3.  <span data-ttu-id="79025-738">執行命令。</span><span class="sxs-lookup"><span data-stu-id="79025-738">The command executes.</span></span>  
  
4.  <span data-ttu-id="79025-739">如果命令設定為`FirstReturnedRecord`，第一個傳回的結果放在<xref:System.Data.DataRow>。</span><span class="sxs-lookup"><span data-stu-id="79025-739">If the command is set to `FirstReturnedRecord`, the first returned result is placed in the <xref:System.Data.DataRow>.</span></span>  
  
5.  <span data-ttu-id="79025-740">如果沒有輸出參數，它們會放置於<xref:System.Data.DataRow>。</span><span class="sxs-lookup"><span data-stu-id="79025-740">If there are output parameters, they are placed in the <xref:System.Data.DataRow>.</span></span>  
  
6.  <span data-ttu-id="79025-741">便會引發 <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> 事件。</span><span class="sxs-lookup"><span data-stu-id="79025-741">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised.</span></span>  
  
7.  <span data-ttu-id="79025-742">呼叫 <xref:System.Data.DataRow.AcceptChanges%2A>。</span><span class="sxs-lookup"><span data-stu-id="79025-742"><xref:System.Data.DataRow.AcceptChanges%2A> is called.</span></span>  
  
 <span data-ttu-id="79025-743">每個相關聯的命令<xref:System.Data.Common.DbDataAdapter>通常會有與它關聯的參數集合。</span><span class="sxs-lookup"><span data-stu-id="79025-743">Each command associated with the <xref:System.Data.Common.DbDataAdapter> usually has a parameters collection associated with it.</span></span> <span data-ttu-id="79025-744">參數對應到目前的資料列，透過`SourceColumn`和`SourceVersion`的.NET Framework 資料提供者的屬性`Parameter`類別。</span><span class="sxs-lookup"><span data-stu-id="79025-744">Parameters are mapped to the current row through the `SourceColumn` and `SourceVersion` properties of a .NET Framework data provider's `Parameter` class.</span></span> <span data-ttu-id="79025-745">`SourceColumn` 是指<xref:System.Data.DataTable>資料行，<xref:System.Data.Common.DbDataAdapter>以取得目前資料列的參數值的參考。</span><span class="sxs-lookup"><span data-stu-id="79025-745">`SourceColumn` refers to a <xref:System.Data.DataTable> column that the <xref:System.Data.Common.DbDataAdapter> references to obtain parameter values for the current row.</span></span>  
  
 <span data-ttu-id="79025-746">`SourceColumn` 在套用任何資料表對應之前，是指未對應的資料行名稱。</span><span class="sxs-lookup"><span data-stu-id="79025-746">`SourceColumn` refers to the unmapped column name before any table mappings have been applied.</span></span> <span data-ttu-id="79025-747">如果`SourceColumn`參考到不存在的資料行中，所採取的動作取決於下列其中一種<xref:System.Data.MissingMappingAction>值。</span><span class="sxs-lookup"><span data-stu-id="79025-747">If `SourceColumn` refers to a nonexistent column, the action taken depends on one of the following <xref:System.Data.MissingMappingAction> values.</span></span>  
  
|<span data-ttu-id="79025-748">列舉值</span><span class="sxs-lookup"><span data-stu-id="79025-748">Enumeration value</span></span>|<span data-ttu-id="79025-749">採取的動作</span><span class="sxs-lookup"><span data-stu-id="79025-749">Action taken</span></span>|  
|-----------------------|------------------|  
|`MissingMappingAction.Passthrough`|<span data-ttu-id="79025-750">使用中的資料表名稱與來源資料行名稱<xref:System.Data.DataSet>如果不不存在任何對應。</span><span class="sxs-lookup"><span data-stu-id="79025-750">Use the source column names and table names in the <xref:System.Data.DataSet> if no mapping is present.</span></span>|  
|`MissingMappingAction.Ignore`|<span data-ttu-id="79025-751">A<xref:System.SystemException>產生。</span><span class="sxs-lookup"><span data-stu-id="79025-751">A <xref:System.SystemException> is generated.</span></span> <span data-ttu-id="79025-752">對應已明確設定，當遺漏對應的輸入參數通常是錯誤的結果。</span><span class="sxs-lookup"><span data-stu-id="79025-752">When the mappings are explicitly set, a missing mapping for an input parameter is usually the result of an error.</span></span>|  
|`MissingMappingAction.Error`|<span data-ttu-id="79025-753">A<xref:System.SystemException>產生。</span><span class="sxs-lookup"><span data-stu-id="79025-753">A <xref:System.SystemException> is generated.</span></span>|  
  
 <span data-ttu-id="79025-754">`SourceColumn`屬性也用來對應輸出的值，或輸入/輸出參數回`DataSet`。</span><span class="sxs-lookup"><span data-stu-id="79025-754">The `SourceColumn` property is also used to map the value for output or input/output parameters back to the `DataSet`.</span></span> <span data-ttu-id="79025-755">如果它是指不存在的資料行，會產生例外狀況。</span><span class="sxs-lookup"><span data-stu-id="79025-755">An exception is generated if it refers to a nonexistent column.</span></span>  
  
 <span data-ttu-id="79025-756">`SourceVersion`的.NET Framework 資料提供者的屬性`Parameter`類別會決定是否要使用的資料行值的原始、 Current 或 Proposed 版本。</span><span class="sxs-lookup"><span data-stu-id="79025-756">The `SourceVersion` property of a .NET Framework data provider's `Parameter` class determines whether to use the Original, Current, or Proposed version of the column value.</span></span> <span data-ttu-id="79025-757">這項功能通常用於在 UPDATE 陳述式來檢查有開放式同步存取違規的 WHERE 子句中包含原始值。</span><span class="sxs-lookup"><span data-stu-id="79025-757">This capability is often used to include original values in the WHERE clause of an UPDATE statement to check for optimistic concurrency violations.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="79025-758">如果在更新的資料列時發生錯誤，擲回例外狀況，並執行更新已停用。</span><span class="sxs-lookup"><span data-stu-id="79025-758">If an error occurs while updating a row, an exception is thrown and execution of the update is discontinued.</span></span> <span data-ttu-id="79025-759">若要繼續更新作業，而不會產生例外狀況，當發生錯誤時，設定<xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A>屬性`true`之前先呼叫<xref:System.Data.Common.DbDataAdapter.Update%2A>。</span><span class="sxs-lookup"><span data-stu-id="79025-759">To continue the update operation without generating exceptions when an error is encountered, set the <xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A> property to `true` before calling <xref:System.Data.Common.DbDataAdapter.Update%2A>.</span></span> <span data-ttu-id="79025-760">您可能也會回應內的每個資料列基礎上的錯誤`RowUpdated`DataAdapter 的事件。</span><span class="sxs-lookup"><span data-stu-id="79025-760">You may also respond to errors on a per-row basis within the `RowUpdated` event of a DataAdapter.</span></span> <span data-ttu-id="79025-761">若要繼續更新作業，而不會產生例外狀況中的`RowUpdated`設定事件，<xref:System.Data.Common.RowUpdatedEventArgs.Status%2A>屬性<xref:System.Data.Common.RowUpdatedEventArgs>至<xref:System.Data.UpdateStatus.Continue>。</span><span class="sxs-lookup"><span data-stu-id="79025-761">To continue the update operation without generating an exception within the `RowUpdated` event, set the <xref:System.Data.Common.RowUpdatedEventArgs.Status%2A> property of the <xref:System.Data.Common.RowUpdatedEventArgs> to <xref:System.Data.UpdateStatus.Continue>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="79025-762">下列範例會使用衍生的類別， <xref:System.Data.OleDb.OleDbDataAdapter>、 更新資料來源。</span><span class="sxs-lookup"><span data-stu-id="79025-762">The following example uses the derived class, <xref:System.Data.OleDb.OleDbDataAdapter>, to update the data source.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.Update1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Update1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.Update1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Update1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="79025-763">The <see cref="T:System.Data.DataSet" /> is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-763">The <see cref="T:System.Data.DataSet" /> is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="79025-764">The source table is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-764">The source table is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.SystemException">
          <span data-ttu-id="79025-765">No <see cref="T:System.Data.DataRow" /> exists to update.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-765">No <see cref="T:System.Data.DataRow" /> exists to update.</span>
          </span>
          <span data-ttu-id="79025-766">-or-  No <see cref="T:System.Data.DataTable" /> exists to update.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-766">-or-  No <see cref="T:System.Data.DataTable" /> exists to update.</span>
          </span>
          <span data-ttu-id="79025-767">-or-  No <see cref="T:System.Data.DataSet" /> exists to use as a source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-767">-or-  No <see cref="T:System.Data.DataSet" /> exists to use as a source.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.DBConcurrencyException">
          <span data-ttu-id="79025-768">An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-768">An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public override int Update (System.Data.DataSet dataSet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Update(class System.Data.DataSet dataSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int Update(System::Data::DataSet ^ dataSet);" />
      <MemberSignature Language="F#" Value="override this.Update : System.Data.DataSet -&gt; int" Usage="dbDataAdapter.Update dataSet" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataAdapter.Update(System.Data.DataSet)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
      </Parameters>
      <Docs>
        <param name="dataSet">
          <span data-ttu-id="79025-769">The <see cref="T:System.Data.DataSet" /> used to update the data source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-769">The <see cref="T:System.Data.DataSet" /> used to update the data source.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="79025-770">Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified <see cref="T:System.Data.DataSet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-770">Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified <see cref="T:System.Data.DataSet" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="79025-771">The number of rows successfully updated from the <see cref="T:System.Data.DataSet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-771">The number of rows successfully updated from the <see cref="T:System.Data.DataSet" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79025-772">當應用程式呼叫<xref:System.Data.Common.DbDataAdapter.Update%2A>方法，<xref:System.Data.Common.DbDataAdapter>檢查<xref:System.Data.DataRow.RowState%2A>屬性，並執行必要的 INSERT、 UPDATE 或 DELETE 陳述式，反覆地針對每個資料列，並根據中設定的索引順序<xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="79025-772">When an application calls the <xref:System.Data.Common.DbDataAdapter.Update%2A> method, the <xref:System.Data.Common.DbDataAdapter> examines the <xref:System.Data.DataRow.RowState%2A> property, and executes the required INSERT, UPDATE, or DELETE statements iteratively for each row, based on the order of the indexes configured in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="79025-773">例如，<xref:System.Data.Common.DbDataAdapter.Update%2A>可能會執行 DELETE 陳述式，後面接著 INSERT 陳述式，則另一個的 DELETE 陳述式，所以中的資料列的排序<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="79025-773">For example, <xref:System.Data.Common.DbDataAdapter.Update%2A> might execute a DELETE statement, followed by an INSERT statement, and then another DELETE statement, due to the ordering of the rows in the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="79025-774">請注意這些陳述式不會執行以批次的處理程序。個別更新每個資料列。</span><span class="sxs-lookup"><span data-stu-id="79025-774">It should be noted that these statements are not performed as a batch process; each row is updated individually.</span></span> <span data-ttu-id="79025-775">應用程式可以呼叫<xref:System.Data.DataSet.GetChanges%2A>情況下，您必須在其中控制陳述式型別 （例如，在更新之前插入） 順序的方法。</span><span class="sxs-lookup"><span data-stu-id="79025-775">An application can call the <xref:System.Data.DataSet.GetChanges%2A> method in situations where you must control the sequence of statement types (for example, INSERTs before UPDATEs).</span></span> <span data-ttu-id="79025-776">如需詳細資訊，請參閱[以 Dataadapter 更新資料來源](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md)。</span><span class="sxs-lookup"><span data-stu-id="79025-776">For more information, see [Updating Data Sources with DataAdapters](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md).</span></span>  
  
 <span data-ttu-id="79025-777">如果尚未指定 INSERT、 UPDATE 或 DELETE 陳述式，<xref:System.Data.Common.DbDataAdapter.Update%2A>方法會產生例外狀況。</span><span class="sxs-lookup"><span data-stu-id="79025-777">If INSERT, UPDATE, or DELETE statements have not been specified, the <xref:System.Data.Common.DbDataAdapter.Update%2A> method generates an exception.</span></span> <span data-ttu-id="79025-778">不過，您可以建立<xref:System.Data.SqlClient.SqlCommandBuilder>或<xref:System.Data.OleDb.OleDbCommandBuilder>物件來自動產生的單一資料表更新 SQL 陳述式，如果您設定`SelectCommand`.NET Framework 資料提供者的屬性。</span><span class="sxs-lookup"><span data-stu-id="79025-778">However, you can create a <xref:System.Data.SqlClient.SqlCommandBuilder> or <xref:System.Data.OleDb.OleDbCommandBuilder> object to automatically generate SQL statements for single-table updates if you set the `SelectCommand` property of a .NET Framework data provider.</span></span> <span data-ttu-id="79025-779">然後，您未設定任何其他 SQL 陳述式由產生**CommandBuilder**。</span><span class="sxs-lookup"><span data-stu-id="79025-779">Then, any additional SQL statements that you do not set are generated by the **CommandBuilder**.</span></span> <span data-ttu-id="79025-780">此產生邏輯需要索引鍵資料行資訊會出現在<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="79025-780">This generation logic requires key column information to be present in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="79025-781">如需詳細資訊，請參閱[Commandbuilder 產生命令](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)。</span><span class="sxs-lookup"><span data-stu-id="79025-781">For more information see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
 <span data-ttu-id="79025-782"><xref:System.Data.Common.DbDataAdapter.Update%2A>方法會從執行更新前的第一個對應中所列的資料表擷取資料列。</span><span class="sxs-lookup"><span data-stu-id="79025-782">The <xref:System.Data.Common.DbDataAdapter.Update%2A> method retrieves rows from the table listed in the first mapping before performing an update.</span></span> <span data-ttu-id="79025-783"><xref:System.Data.Common.DbDataAdapter.Update%2A>然後重新整理使用的值的資料列<xref:System.Data.IDbCommand.UpdatedRowSource%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="79025-783">The <xref:System.Data.Common.DbDataAdapter.Update%2A> then refreshes the row using the value of the <xref:System.Data.IDbCommand.UpdatedRowSource%2A> property.</span></span> <span data-ttu-id="79025-784">傳回的任何其他資料列都會被忽略。</span><span class="sxs-lookup"><span data-stu-id="79025-784">Any additional rows returned are ignored.</span></span>  
  
 <span data-ttu-id="79025-785">任何資料會載入回後<xref:System.Data.DataSet>、<xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A>引發事件，讓使用者檢查調解<xref:System.Data.DataSet>資料列和任何輸出命令所傳回的參數。</span><span class="sxs-lookup"><span data-stu-id="79025-785">After any data is loaded back into the <xref:System.Data.DataSet>, the <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised, allowing the user to inspect the reconciled <xref:System.Data.DataSet> row and any output parameters returned by the command.</span></span> <span data-ttu-id="79025-786">已成功更新資料列之後，會接受該資料列所做的變更。</span><span class="sxs-lookup"><span data-stu-id="79025-786">After a row updates successfully, the changes to that row are accepted.</span></span>  
  
 <span data-ttu-id="79025-787">當使用<xref:System.Data.Common.DbDataAdapter.Update%2A>，執行的順序如下所示：</span><span class="sxs-lookup"><span data-stu-id="79025-787">When using <xref:System.Data.Common.DbDataAdapter.Update%2A>, the order of execution is as follows:</span></span>  
  
1.  <span data-ttu-id="79025-788">中的值<xref:System.Data.DataRow>移到參數值。</span><span class="sxs-lookup"><span data-stu-id="79025-788">The values in the <xref:System.Data.DataRow> are moved to the parameter values.</span></span>  
  
2.  <span data-ttu-id="79025-789">便會引發 <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> 事件。</span><span class="sxs-lookup"><span data-stu-id="79025-789">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> event is raised.</span></span>  
  
3.  <span data-ttu-id="79025-790">執行命令。</span><span class="sxs-lookup"><span data-stu-id="79025-790">The command executes.</span></span>  
  
4.  <span data-ttu-id="79025-791">如果命令設定為`FirstReturnedRecord`，則第一個傳回的結果放在<xref:System.Data.DataRow>。</span><span class="sxs-lookup"><span data-stu-id="79025-791">If the command is set to `FirstReturnedRecord`, then the first returned result is placed in the <xref:System.Data.DataRow>.</span></span>  
  
5.  <span data-ttu-id="79025-792">如果沒有輸出參數，它們會放置於<xref:System.Data.DataRow>。</span><span class="sxs-lookup"><span data-stu-id="79025-792">If there are output parameters, they are placed in the <xref:System.Data.DataRow>.</span></span>  
  
6.  <span data-ttu-id="79025-793">便會引發 <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> 事件。</span><span class="sxs-lookup"><span data-stu-id="79025-793">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised.</span></span>  
  
7.  <span data-ttu-id="79025-794">呼叫 <xref:System.Data.DataRow.AcceptChanges%2A>。</span><span class="sxs-lookup"><span data-stu-id="79025-794"><xref:System.Data.DataRow.AcceptChanges%2A> is called.</span></span>  
  
 <span data-ttu-id="79025-795">每個相關聯的命令<xref:System.Data.Common.DbDataAdapter>通常會有與它關聯的參數集合。</span><span class="sxs-lookup"><span data-stu-id="79025-795">Each command associated with the <xref:System.Data.Common.DbDataAdapter> usually has a parameters collection associated with it.</span></span> <span data-ttu-id="79025-796">參數對應到目前的資料列，透過`SourceColumn`和`SourceVersion`的.NET Framework 資料提供者的屬性`Parameter`類別。</span><span class="sxs-lookup"><span data-stu-id="79025-796">Parameters are mapped to the current row through the `SourceColumn` and `SourceVersion` properties of a .NET Framework data provider's `Parameter` class.</span></span> <span data-ttu-id="79025-797">`SourceColumn` 是指<xref:System.Data.DataTable>資料行，<xref:System.Data.Common.DbDataAdapter>以取得目前資料列的參數值的參考。</span><span class="sxs-lookup"><span data-stu-id="79025-797">`SourceColumn` refers to a <xref:System.Data.DataTable> column that the <xref:System.Data.Common.DbDataAdapter> references to obtain parameter values for the current row.</span></span>  
  
 <span data-ttu-id="79025-798">`SourceColumn` 在套用任何資料表對應之前，是指未對應的資料行名稱。</span><span class="sxs-lookup"><span data-stu-id="79025-798">`SourceColumn` refers to the unmapped column name before any table mappings have been applied.</span></span> <span data-ttu-id="79025-799">如果`SourceColumn`參考到不存在的資料行中，所採取的動作取決於下列其中一種<xref:System.Data.MissingMappingAction>值。</span><span class="sxs-lookup"><span data-stu-id="79025-799">If `SourceColumn` refers to a nonexistent column, the action taken depends on one of the following <xref:System.Data.MissingMappingAction> values.</span></span>  
  
|<span data-ttu-id="79025-800">列舉值</span><span class="sxs-lookup"><span data-stu-id="79025-800">Enumeration value</span></span>|<span data-ttu-id="79025-801">採取的動作</span><span class="sxs-lookup"><span data-stu-id="79025-801">Action taken</span></span>|  
|-----------------------|------------------|  
|`MissingMappingAction.Passthrough`|<span data-ttu-id="79025-802">使用中的資料表名稱與來源資料行名稱<xref:System.Data.DataSet>如果不不存在任何對應。</span><span class="sxs-lookup"><span data-stu-id="79025-802">Use the source column names and table names in the <xref:System.Data.DataSet> if no mapping is present.</span></span>|  
|`MissingMappingAction.Ignore`|<span data-ttu-id="79025-803">A<xref:System.SystemException>產生。</span><span class="sxs-lookup"><span data-stu-id="79025-803">A <xref:System.SystemException> is generated.</span></span> <span data-ttu-id="79025-804">對應已明確設定，當遺漏對應的輸入參數通常是錯誤的結果。</span><span class="sxs-lookup"><span data-stu-id="79025-804">When the mappings are explicitly set, a missing mapping for an input parameter is usually the result of an error.</span></span>|  
|`MissingMappingAction.Error`|<span data-ttu-id="79025-805">A<xref:System.SystemException>產生。</span><span class="sxs-lookup"><span data-stu-id="79025-805">A <xref:System.SystemException> is generated.</span></span>|  
  
 <span data-ttu-id="79025-806">`SourceColumn`屬性也用來對應輸出的值，或輸入/輸出參數回`DataSet`。</span><span class="sxs-lookup"><span data-stu-id="79025-806">The `SourceColumn` property is also used to map the value for output or input/output parameters back to the `DataSet`.</span></span> <span data-ttu-id="79025-807">如果它是指不存在的資料行，會產生例外狀況。</span><span class="sxs-lookup"><span data-stu-id="79025-807">An exception is generated if it refers to a nonexistent column.</span></span>  
  
 <span data-ttu-id="79025-808">`SourceVersion`的.NET Framework 資料提供者的屬性`Parameter`類別會決定是否要使用的資料行值的原始、 Current 或 Proposed 版本。</span><span class="sxs-lookup"><span data-stu-id="79025-808">The `SourceVersion` property of a .NET Framework data provider's `Parameter` class determines whether to use the Original, Current, or Proposed version of the column value.</span></span> <span data-ttu-id="79025-809">這項功能通常用於在 UPDATE 陳述式來檢查有開放式同步存取違規的 WHERE 子句中包含原始值。</span><span class="sxs-lookup"><span data-stu-id="79025-809">This capability is often used to include original values in the WHERE clause of an UPDATE statement to check for optimistic concurrency violations.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="79025-810">如果在更新的資料列時發生錯誤，擲回例外狀況，並執行更新已停用。</span><span class="sxs-lookup"><span data-stu-id="79025-810">If an error occurs while updating a row, an exception is thrown and execution of the update is discontinued.</span></span> <span data-ttu-id="79025-811">若要繼續更新作業，而不會產生例外狀況，當發生錯誤時，設定<xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A>屬性`true`之前先呼叫<xref:System.Data.Common.DbDataAdapter.Update%2A>。</span><span class="sxs-lookup"><span data-stu-id="79025-811">To continue the update operation without generating exceptions when an error is encountered, set the <xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A> property to `true` before calling <xref:System.Data.Common.DbDataAdapter.Update%2A>.</span></span> <span data-ttu-id="79025-812">您可能也會回應內的每個資料列基礎上的錯誤`RowUpdated`DataAdapter 的事件。</span><span class="sxs-lookup"><span data-stu-id="79025-812">You may also respond to errors on a per-row basis within the `RowUpdated` event of a DataAdapter.</span></span> <span data-ttu-id="79025-813">若要繼續更新作業，而不會產生例外狀況中的`RowUpdated`設定事件，<xref:System.Data.Common.RowUpdatedEventArgs.Status%2A>屬性<xref:System.Data.Common.RowUpdatedEventArgs>至<xref:System.Data.UpdateStatus.Continue>。</span><span class="sxs-lookup"><span data-stu-id="79025-813">To continue the update operation without generating an exception within the `RowUpdated` event, set the <xref:System.Data.Common.RowUpdatedEventArgs.Status%2A> property of the <xref:System.Data.Common.RowUpdatedEventArgs> to <xref:System.Data.UpdateStatus.Continue>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="79025-814">下列範例會使用衍生的類別， <xref:System.Data.OleDb.OleDbDataAdapter>、 更新資料來源。</span><span class="sxs-lookup"><span data-stu-id="79025-814">The following example uses the derived class, <xref:System.Data.OleDb.OleDbDataAdapter>, to update the data source.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.Update Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Update Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.Update Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Update Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="79025-815">The source table is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-815">The source table is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.DBConcurrencyException">
          <span data-ttu-id="79025-816">An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-816">An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public int Update (System.Data.DataTable dataTable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Update(class System.Data.DataTable dataTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataTable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Update(System::Data::DataTable ^ dataTable);" />
      <MemberSignature Language="F#" Value="override this.Update : System.Data.DataTable -&gt; int" Usage="dbDataAdapter.Update dataTable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataTable" Type="System.Data.DataTable" />
      </Parameters>
      <Docs>
        <param name="dataTable">
          <span data-ttu-id="79025-817">The <see cref="T:System.Data.DataTable" /> used to update the data source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-817">The <see cref="T:System.Data.DataTable" /> used to update the data source.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="79025-818">Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified <see cref="T:System.Data.DataTable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-818">Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified <see cref="T:System.Data.DataTable" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="79025-819">The number of rows successfully updated from the <see cref="T:System.Data.DataTable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-819">The number of rows successfully updated from the <see cref="T:System.Data.DataTable" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79025-820">當應用程式呼叫<xref:System.Data.Common.DbDataAdapter.Update%2A>方法，<xref:System.Data.Common.DbDataAdapter>檢查<xref:System.Data.DataRow.RowState%2A>屬性，並執行必要的 INSERT、 UPDATE 或 DELETE 陳述式，反覆地針對每個資料列，並根據中設定的索引順序<xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="79025-820">When an application calls the <xref:System.Data.Common.DbDataAdapter.Update%2A> method, the <xref:System.Data.Common.DbDataAdapter> examines the <xref:System.Data.DataRow.RowState%2A> property, and executes the required INSERT, UPDATE, or DELETE statements iteratively for each row, based on the order of the indexes configured in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="79025-821">例如，<xref:System.Data.Common.DbDataAdapter.Update%2A>可能會執行 DELETE 陳述式，後面接著 INSERT 陳述式，則另一個的 DELETE 陳述式，所以中的資料列的排序<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="79025-821">For example, <xref:System.Data.Common.DbDataAdapter.Update%2A> might execute a DELETE statement, followed by an INSERT statement, and then another DELETE statement, due to the ordering of the rows in the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="79025-822">請注意這些陳述式不會執行以批次的處理程序。個別更新每個資料列。</span><span class="sxs-lookup"><span data-stu-id="79025-822">It should be noted that these statements are not performed as a batch process; each row is updated individually.</span></span> <span data-ttu-id="79025-823">應用程式可以呼叫<xref:System.Data.DataSet.GetChanges%2A>情況下，您必須在其中控制陳述式型別 （例如，在更新之前插入） 順序的方法。</span><span class="sxs-lookup"><span data-stu-id="79025-823">An application can call the <xref:System.Data.DataSet.GetChanges%2A> method in situations where you must control the sequence of statement types (for example, INSERTs before UPDATEs).</span></span> <span data-ttu-id="79025-824">如需詳細資訊，請參閱[以 Dataadapter 更新資料來源](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md)。</span><span class="sxs-lookup"><span data-stu-id="79025-824">For more information, see [Updating Data Sources with DataAdapters](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md).</span></span>  
  
 <span data-ttu-id="79025-825">如果尚未指定 INSERT、 UPDATE 或 DELETE 陳述式，<xref:System.Data.Common.DbDataAdapter.Update%2A>方法會產生例外狀況。</span><span class="sxs-lookup"><span data-stu-id="79025-825">If INSERT, UPDATE, or DELETE statements have not been specified, the <xref:System.Data.Common.DbDataAdapter.Update%2A> method generates an exception.</span></span> <span data-ttu-id="79025-826">不過，您可以建立<xref:System.Data.SqlClient.SqlCommandBuilder>或<xref:System.Data.OleDb.OleDbCommandBuilder>物件來自動產生的單一資料表更新 SQL 陳述式，如果您設定`SelectCommand`.NET Framework 資料提供者的屬性。</span><span class="sxs-lookup"><span data-stu-id="79025-826">However, you can create a <xref:System.Data.SqlClient.SqlCommandBuilder> or <xref:System.Data.OleDb.OleDbCommandBuilder> object to automatically generate SQL statements for single-table updates if you set the `SelectCommand` property of a .NET Framework data provider.</span></span> <span data-ttu-id="79025-827">然後，您未設定任何其他 SQL 陳述式由產生**CommandBuilder**。</span><span class="sxs-lookup"><span data-stu-id="79025-827">Then, any additional SQL statements that you do not set are generated by the **CommandBuilder**.</span></span> <span data-ttu-id="79025-828">此產生邏輯需要索引鍵資料行資訊會出現在<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="79025-828">This generation logic requires key column information to be present in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="79025-829">如需詳細資訊，請參閱[Commandbuilder 產生命令](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)。</span><span class="sxs-lookup"><span data-stu-id="79025-829">For more information see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
 <span data-ttu-id="79025-830"><xref:System.Data.Common.DbDataAdapter.Update%2A>方法會從執行更新前的第一個對應中所列的資料表擷取資料列。</span><span class="sxs-lookup"><span data-stu-id="79025-830">The <xref:System.Data.Common.DbDataAdapter.Update%2A> method retrieves rows from the table listed in the first mapping before performing an update.</span></span> <span data-ttu-id="79025-831"><xref:System.Data.Common.DbDataAdapter.Update%2A>然後重新整理使用的值的資料列<xref:System.Data.IDbCommand.UpdatedRowSource%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="79025-831">The <xref:System.Data.Common.DbDataAdapter.Update%2A> then refreshes the row using the value of the <xref:System.Data.IDbCommand.UpdatedRowSource%2A> property.</span></span> <span data-ttu-id="79025-832">傳回的任何其他資料列都會被忽略。</span><span class="sxs-lookup"><span data-stu-id="79025-832">Any additional rows returned are ignored.</span></span>  
  
 <span data-ttu-id="79025-833">任何資料會載入回後<xref:System.Data.DataSet>、<xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A>引發事件，讓使用者檢查調解<xref:System.Data.DataSet>資料列和任何輸出命令所傳回的參數。</span><span class="sxs-lookup"><span data-stu-id="79025-833">After any data is loaded back into the <xref:System.Data.DataSet>, the <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised, allowing the user to inspect the reconciled <xref:System.Data.DataSet> row and any output parameters returned by the command.</span></span> <span data-ttu-id="79025-834">已成功更新資料列之後，會接受該資料列所做的變更。</span><span class="sxs-lookup"><span data-stu-id="79025-834">After a row updates successfully, the changes to that row are accepted.</span></span>  
  
 <span data-ttu-id="79025-835">當使用<xref:System.Data.Common.DbDataAdapter.Update%2A>，執行的順序如下所示：</span><span class="sxs-lookup"><span data-stu-id="79025-835">When using <xref:System.Data.Common.DbDataAdapter.Update%2A>, the order of execution is as follows:</span></span>  
  
1.  <span data-ttu-id="79025-836">中的值<xref:System.Data.DataRow>移到參數值。</span><span class="sxs-lookup"><span data-stu-id="79025-836">The values in the <xref:System.Data.DataRow> are moved to the parameter values.</span></span>  
  
2.  <span data-ttu-id="79025-837">便會引發 <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> 事件。</span><span class="sxs-lookup"><span data-stu-id="79025-837">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> event is raised.</span></span>  
  
3.  <span data-ttu-id="79025-838">執行命令。</span><span class="sxs-lookup"><span data-stu-id="79025-838">The command executes.</span></span>  
  
4.  <span data-ttu-id="79025-839">如果命令設定為`FirstReturnedRecord`，則第一個傳回的結果放在<xref:System.Data.DataRow>。</span><span class="sxs-lookup"><span data-stu-id="79025-839">If the command is set to `FirstReturnedRecord`, then the first returned result is placed in the <xref:System.Data.DataRow>.</span></span>  
  
5.  <span data-ttu-id="79025-840">如果沒有輸出參數，它們會放置於<xref:System.Data.DataRow>。</span><span class="sxs-lookup"><span data-stu-id="79025-840">If there are output parameters, they are placed in the <xref:System.Data.DataRow>.</span></span>  
  
6.  <span data-ttu-id="79025-841">便會引發 <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> 事件。</span><span class="sxs-lookup"><span data-stu-id="79025-841">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised.</span></span>  
  
7.  <span data-ttu-id="79025-842">呼叫 <xref:System.Data.DataRow.AcceptChanges%2A>。</span><span class="sxs-lookup"><span data-stu-id="79025-842"><xref:System.Data.DataRow.AcceptChanges%2A> is called.</span></span>  
  
 <span data-ttu-id="79025-843">每個相關聯的命令<xref:System.Data.Common.DbDataAdapter>通常會有與它關聯的參數集合。</span><span class="sxs-lookup"><span data-stu-id="79025-843">Each command associated with the <xref:System.Data.Common.DbDataAdapter> usually has a parameters collection associated with it.</span></span> <span data-ttu-id="79025-844">參數對應到目前的資料列，透過`SourceColumn`和`SourceVersion`的.NET Framework 資料提供者的屬性`Parameter`類別。</span><span class="sxs-lookup"><span data-stu-id="79025-844">Parameters are mapped to the current row through the `SourceColumn` and `SourceVersion` properties of a .NET Framework data provider's `Parameter` class.</span></span> <span data-ttu-id="79025-845">`SourceColumn` 是指<xref:System.Data.DataTable>資料行，<xref:System.Data.Common.DbDataAdapter>以取得目前資料列的參數值的參考。</span><span class="sxs-lookup"><span data-stu-id="79025-845">`SourceColumn` refers to a <xref:System.Data.DataTable> column that the <xref:System.Data.Common.DbDataAdapter> references to obtain parameter values for the current row.</span></span>  
  
 <span data-ttu-id="79025-846">`SourceColumn` 在套用任何資料表對應之前，是指未對應的資料行名稱。</span><span class="sxs-lookup"><span data-stu-id="79025-846">`SourceColumn` refers to the unmapped column name before any table mappings have been applied.</span></span> <span data-ttu-id="79025-847">如果`SourceColumn`參考到不存在的資料行中，所採取的動作取決於下列其中一種<xref:System.Data.MissingMappingAction>值。</span><span class="sxs-lookup"><span data-stu-id="79025-847">If `SourceColumn` refers to a nonexistent column, the action taken depends on one of the following <xref:System.Data.MissingMappingAction> values.</span></span>  
  
|<span data-ttu-id="79025-848">列舉值</span><span class="sxs-lookup"><span data-stu-id="79025-848">Enumeration value</span></span>|<span data-ttu-id="79025-849">採取的動作</span><span class="sxs-lookup"><span data-stu-id="79025-849">Action taken</span></span>|  
|-----------------------|------------------|  
|`MissingMappingAction.Passthrough`|<span data-ttu-id="79025-850">使用中的資料表名稱與來源資料行名稱<xref:System.Data.DataSet>如果不不存在任何對應。</span><span class="sxs-lookup"><span data-stu-id="79025-850">Use the source column names and table names in the <xref:System.Data.DataSet> if no mapping is present.</span></span>|  
|`MissingMappingAction.Ignore`|<span data-ttu-id="79025-851">A<xref:System.SystemException>產生。</span><span class="sxs-lookup"><span data-stu-id="79025-851">A <xref:System.SystemException> is generated.</span></span> <span data-ttu-id="79025-852">對應已明確設定，當遺漏對應的輸入參數通常是錯誤的結果。</span><span class="sxs-lookup"><span data-stu-id="79025-852">When the mappings are explicitly set, a missing mapping for an input parameter is usually the result of an error.</span></span>|  
|`MissingMappingAction.Error`|<span data-ttu-id="79025-853">A<xref:System.SystemException>產生。</span><span class="sxs-lookup"><span data-stu-id="79025-853">A <xref:System.SystemException> is generated.</span></span>|  
  
 <span data-ttu-id="79025-854">`SourceColumn`屬性也用來對應輸出的值，或輸入/輸出參數回`DataSet`。</span><span class="sxs-lookup"><span data-stu-id="79025-854">The `SourceColumn` property is also used to map the value for output or input/output parameters back to the `DataSet`.</span></span> <span data-ttu-id="79025-855">如果它是指不存在的資料行，會產生例外狀況。</span><span class="sxs-lookup"><span data-stu-id="79025-855">An exception is generated if it refers to a nonexistent column.</span></span>  
  
 <span data-ttu-id="79025-856">`SourceVersion`的.NET Framework 資料提供者的屬性`Parameter`類別會決定是否要使用的資料行值的原始、 Current 或 Proposed 版本。</span><span class="sxs-lookup"><span data-stu-id="79025-856">The `SourceVersion` property of a .NET Framework data provider's `Parameter` class determines whether to use the Original, Current, or Proposed version of the column value.</span></span> <span data-ttu-id="79025-857">這項功能通常用於在 UPDATE 陳述式來檢查有開放式同步存取違規的 WHERE 子句中包含原始值。</span><span class="sxs-lookup"><span data-stu-id="79025-857">This capability is often used to include original values in the WHERE clause of an UPDATE statement to check for optimistic concurrency violations.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="79025-858">如果在更新的資料列時發生錯誤，擲回例外狀況，並執行更新已停用。</span><span class="sxs-lookup"><span data-stu-id="79025-858">If an error occurs while updating a row, an exception is thrown and execution of the update is discontinued.</span></span> <span data-ttu-id="79025-859">若要繼續更新作業，而不會產生例外狀況，當發生錯誤時，設定<xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A>屬性`true`之前先呼叫<xref:System.Data.Common.DbDataAdapter.Update%2A>。</span><span class="sxs-lookup"><span data-stu-id="79025-859">To continue the update operation without generating exceptions when an error is encountered, set the <xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A> property to `true` before calling <xref:System.Data.Common.DbDataAdapter.Update%2A>.</span></span> <span data-ttu-id="79025-860">您可能也會回應內的每個資料列基礎上的錯誤`RowUpdated`DataAdapter 的事件。</span><span class="sxs-lookup"><span data-stu-id="79025-860">You may also respond to errors on a per-row basis within the `RowUpdated` event of a DataAdapter.</span></span> <span data-ttu-id="79025-861">若要繼續更新作業，而不會產生例外狀況中的`RowUpdated`設定事件，<xref:System.Data.Common.RowUpdatedEventArgs.Status%2A>屬性<xref:System.Data.Common.RowUpdatedEventArgs>至<xref:System.Data.UpdateStatus.Continue>。</span><span class="sxs-lookup"><span data-stu-id="79025-861">To continue the update operation without generating an exception within the `RowUpdated` event, set the <xref:System.Data.Common.RowUpdatedEventArgs.Status%2A> property of the <xref:System.Data.Common.RowUpdatedEventArgs> to <xref:System.Data.UpdateStatus.Continue>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="79025-862">下列範例會使用衍生的類別， <xref:System.Data.OleDb.OleDbDataAdapter>、 更新資料來源。</span><span class="sxs-lookup"><span data-stu-id="79025-862">The following example uses the derived class, <xref:System.Data.OleDb.OleDbDataAdapter>, to update the data source.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.Update2 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Update2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.Update2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Update2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="79025-863">The <see cref="T:System.Data.DataSet" /> is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-863">The <see cref="T:System.Data.DataSet" /> is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="79025-864">The source table is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-864">The source table is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.SystemException">
          <span data-ttu-id="79025-865">No <see cref="T:System.Data.DataRow" /> exists to update.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-865">No <see cref="T:System.Data.DataRow" /> exists to update.</span>
          </span>
          <span data-ttu-id="79025-866">-or-  No <see cref="T:System.Data.DataTable" /> exists to update.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-866">-or-  No <see cref="T:System.Data.DataTable" /> exists to update.</span>
          </span>
          <span data-ttu-id="79025-867">-or-  No <see cref="T:System.Data.DataSet" /> exists to use as a source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-867">-or-  No <see cref="T:System.Data.DataSet" /> exists to use as a source.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.DBConcurrencyException">
          <span data-ttu-id="79025-868">An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-868">An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="protected virtual int Update (System.Data.DataRow[] dataRows, System.Data.Common.DataTableMapping tableMapping);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 Update(class System.Data.DataRow[] dataRows, class System.Data.Common.DataTableMapping tableMapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[],System.Data.Common.DataTableMapping)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function Update (dataRows As DataRow(), tableMapping As DataTableMapping) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int Update(cli::array &lt;System::Data::DataRow ^&gt; ^ dataRows, System::Data::Common::DataTableMapping ^ tableMapping);" />
      <MemberSignature Language="F#" Value="override this.Update : System.Data.DataRow[] * System.Data.Common.DataTableMapping -&gt; int" Usage="dbDataAdapter.Update (dataRows, tableMapping)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataRows" Type="System.Data.DataRow[]" />
        <Parameter Name="tableMapping" Type="System.Data.Common.DataTableMapping" />
      </Parameters>
      <Docs>
        <param name="dataRows">
          <span data-ttu-id="79025-869">An array of <see cref="T:System.Data.DataRow" /> objects used to update the data source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-869">An array of <see cref="T:System.Data.DataRow" /> objects used to update the data source.</span>
          </span>
        </param>
        <param name="tableMapping">
          <span data-ttu-id="79025-870">The <see cref="P:System.Data.IDataAdapter.TableMappings" /> collection to use.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-870">The <see cref="P:System.Data.IDataAdapter.TableMappings" /> collection to use.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="79025-871">Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified array of <see cref="T:System.Data.DataSet" /> objects.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-871">Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified array of <see cref="T:System.Data.DataSet" /> objects.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="79025-872">The number of rows successfully updated from the <see cref="T:System.Data.DataSet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-872">The number of rows successfully updated from the <see cref="T:System.Data.DataSet" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79025-873">當應用程式呼叫<xref:System.Data.Common.DbDataAdapter.Update%2A>方法，<xref:System.Data.Common.DbDataAdapter>檢查<xref:System.Data.DataRow.RowState%2A>屬性，並執行必要的 INSERT、 UPDATE 或 DELETE 陳述式，反覆地針對每個資料列，並根據中設定的索引順序<xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="79025-873">When an application calls the <xref:System.Data.Common.DbDataAdapter.Update%2A> method, the <xref:System.Data.Common.DbDataAdapter> examines the <xref:System.Data.DataRow.RowState%2A> property, and executes the required INSERT, UPDATE, or DELETE statements iteratively for each row, based on the order of the indexes configured in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="79025-874">例如，<xref:System.Data.Common.DbDataAdapter.Update%2A>可能會執行 DELETE 陳述式，後面接著 INSERT 陳述式，則另一個的 DELETE 陳述式，所以中的資料列的排序<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="79025-874">For example, <xref:System.Data.Common.DbDataAdapter.Update%2A> might execute a DELETE statement, followed by an INSERT statement, and then another DELETE statement, due to the ordering of the rows in the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="79025-875">請注意這些陳述式不會執行以批次的處理程序。個別更新每個資料列。</span><span class="sxs-lookup"><span data-stu-id="79025-875">It should be noted that these statements are not performed as a batch process; each row is updated individually.</span></span> <span data-ttu-id="79025-876">應用程式可以呼叫<xref:System.Data.DataSet.GetChanges%2A>情況下，您必須在其中控制陳述式型別 （例如，在更新之前插入） 順序的方法。</span><span class="sxs-lookup"><span data-stu-id="79025-876">An application can call the <xref:System.Data.DataSet.GetChanges%2A> method in situations where you must control the sequence of statement types (for example, INSERTs before UPDATEs).</span></span> <span data-ttu-id="79025-877">如需詳細資訊，請參閱[以 Dataadapter 更新資料來源](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md)。</span><span class="sxs-lookup"><span data-stu-id="79025-877">For more information, see [Updating Data Sources with DataAdapters](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md).</span></span>  
  
 <span data-ttu-id="79025-878">如果尚未指定 INSERT、 UPDATE 或 DELETE 陳述式，<xref:System.Data.Common.DbDataAdapter.Update%2A>方法會產生例外狀況。</span><span class="sxs-lookup"><span data-stu-id="79025-878">If INSERT, UPDATE, or DELETE statements have not been specified, the <xref:System.Data.Common.DbDataAdapter.Update%2A> method generates an exception.</span></span> <span data-ttu-id="79025-879">不過，您可以建立<xref:System.Data.SqlClient.SqlCommandBuilder>或<xref:System.Data.OleDb.OleDbCommandBuilder>物件來自動產生的單一資料表更新 SQL 陳述式，如果您設定`SelectCommand`.NET Framework 資料提供者的屬性。</span><span class="sxs-lookup"><span data-stu-id="79025-879">However, you can create a <xref:System.Data.SqlClient.SqlCommandBuilder> or <xref:System.Data.OleDb.OleDbCommandBuilder> object to automatically generate SQL statements for single-table updates if you set the `SelectCommand` property of a .NET Framework data provider.</span></span> <span data-ttu-id="79025-880">然後，您未設定任何其他 SQL 陳述式由產生**CommandBuilder**。</span><span class="sxs-lookup"><span data-stu-id="79025-880">Then, any additional SQL statements that you do not set are generated by the **CommandBuilder**.</span></span> <span data-ttu-id="79025-881">此產生邏輯需要索引鍵資料行資訊會出現在<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="79025-881">This generation logic requires key column information to be present in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="79025-882">如需詳細資訊，請參閱[Commandbuilder 產生命令](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)。</span><span class="sxs-lookup"><span data-stu-id="79025-882">For more information see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
 <span data-ttu-id="79025-883"><xref:System.Data.Common.DbDataAdapter.Update%2A>方法會從執行更新前的第一個對應中所列的資料表擷取資料列。</span><span class="sxs-lookup"><span data-stu-id="79025-883">The <xref:System.Data.Common.DbDataAdapter.Update%2A> method retrieves rows from the table listed in the first mapping before performing an update.</span></span> <span data-ttu-id="79025-884"><xref:System.Data.Common.DbDataAdapter.Update%2A>然後重新整理使用的值的資料列<xref:System.Data.IDbCommand.UpdatedRowSource%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="79025-884">The <xref:System.Data.Common.DbDataAdapter.Update%2A> then refreshes the row using the value of the <xref:System.Data.IDbCommand.UpdatedRowSource%2A> property.</span></span> <span data-ttu-id="79025-885">傳回的任何其他資料列都會被忽略。</span><span class="sxs-lookup"><span data-stu-id="79025-885">Any additional rows returned are ignored.</span></span>  
  
 <span data-ttu-id="79025-886">任何資料會載入回後<xref:System.Data.DataSet>、<xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A>引發事件，讓使用者檢查調解<xref:System.Data.DataSet>資料列和任何輸出命令所傳回的參數。</span><span class="sxs-lookup"><span data-stu-id="79025-886">After any data is loaded back into the <xref:System.Data.DataSet>, the <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised, allowing the user to inspect the reconciled <xref:System.Data.DataSet> row and any output parameters returned by the command.</span></span> <span data-ttu-id="79025-887">已成功更新資料列之後，會接受該資料列所做的變更。</span><span class="sxs-lookup"><span data-stu-id="79025-887">After a row updates successfully, the changes to that row are accepted.</span></span>  
  
 <span data-ttu-id="79025-888">當使用<xref:System.Data.Common.DbDataAdapter.Update%2A>，執行的順序如下所示：</span><span class="sxs-lookup"><span data-stu-id="79025-888">When using <xref:System.Data.Common.DbDataAdapter.Update%2A>, the order of execution is as follows:</span></span>  
  
1.  <span data-ttu-id="79025-889">中的值<xref:System.Data.DataRow>移到參數值。</span><span class="sxs-lookup"><span data-stu-id="79025-889">The values in the <xref:System.Data.DataRow> are moved to the parameter values.</span></span>  
  
2.  <span data-ttu-id="79025-890">便會引發 <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> 事件。</span><span class="sxs-lookup"><span data-stu-id="79025-890">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> event is raised.</span></span>  
  
3.  <span data-ttu-id="79025-891">執行命令。</span><span class="sxs-lookup"><span data-stu-id="79025-891">The command executes.</span></span>  
  
4.  <span data-ttu-id="79025-892">如果命令設定為`FirstReturnedRecord`，則第一個傳回的結果放在<xref:System.Data.DataRow>。</span><span class="sxs-lookup"><span data-stu-id="79025-892">If the command is set to `FirstReturnedRecord`, then the first returned result is placed in the <xref:System.Data.DataRow>.</span></span>  
  
5.  <span data-ttu-id="79025-893">如果沒有輸出參數，它們會放置於<xref:System.Data.DataRow>。</span><span class="sxs-lookup"><span data-stu-id="79025-893">If there are output parameters, they are placed in the <xref:System.Data.DataRow>.</span></span>  
  
6.  <span data-ttu-id="79025-894">便會引發 <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> 事件。</span><span class="sxs-lookup"><span data-stu-id="79025-894">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised.</span></span>  
  
7.  <span data-ttu-id="79025-895">呼叫 <xref:System.Data.DataRow.AcceptChanges%2A>。</span><span class="sxs-lookup"><span data-stu-id="79025-895"><xref:System.Data.DataRow.AcceptChanges%2A> is called.</span></span>  
  
 <span data-ttu-id="79025-896">每個相關聯的命令<xref:System.Data.Common.DbDataAdapter>通常會有與它關聯的參數集合。</span><span class="sxs-lookup"><span data-stu-id="79025-896">Each command associated with the <xref:System.Data.Common.DbDataAdapter> usually has a parameters collection associated with it.</span></span> <span data-ttu-id="79025-897">參數對應到目前的資料列，透過`SourceColumn`和`SourceVersion`的.NET Framework 資料提供者的屬性`Parameter`類別。</span><span class="sxs-lookup"><span data-stu-id="79025-897">Parameters are mapped to the current row through the `SourceColumn` and `SourceVersion` properties of a .NET Framework data provider's `Parameter` class.</span></span> <span data-ttu-id="79025-898">`SourceColumn` 是指<xref:System.Data.DataTable>資料行，<xref:System.Data.Common.DbDataAdapter>以取得目前資料列的參數值的參考。</span><span class="sxs-lookup"><span data-stu-id="79025-898">`SourceColumn` refers to a <xref:System.Data.DataTable> column that the <xref:System.Data.Common.DbDataAdapter> references to obtain parameter values for the current row.</span></span>  
  
 <span data-ttu-id="79025-899">`SourceColumn` 在套用任何資料表對應之前，是指未對應的資料行名稱。</span><span class="sxs-lookup"><span data-stu-id="79025-899">`SourceColumn` refers to the unmapped column name before any table mappings have been applied.</span></span> <span data-ttu-id="79025-900">如果`SourceColumn`參考到不存在的資料行中，所採取的動作取決於下列其中一種<xref:System.Data.MissingMappingAction>值。</span><span class="sxs-lookup"><span data-stu-id="79025-900">If `SourceColumn` refers to a nonexistent column, the action taken depends on one of the following <xref:System.Data.MissingMappingAction> values.</span></span>  
  
|<span data-ttu-id="79025-901">列舉值</span><span class="sxs-lookup"><span data-stu-id="79025-901">Enumeration value</span></span>|<span data-ttu-id="79025-902">採取的動作</span><span class="sxs-lookup"><span data-stu-id="79025-902">Action taken</span></span>|  
|-----------------------|------------------|  
|`MissingMappingAction.Passthrough`|<span data-ttu-id="79025-903">使用中的資料表名稱與來源資料行名稱<xref:System.Data.DataSet>如果不不存在任何對應。</span><span class="sxs-lookup"><span data-stu-id="79025-903">Use the source column names and table names in the <xref:System.Data.DataSet> if no mapping is present.</span></span>|  
|`MissingMappingAction.Ignore`|<span data-ttu-id="79025-904">A<xref:System.SystemException>產生。</span><span class="sxs-lookup"><span data-stu-id="79025-904">A <xref:System.SystemException> is generated.</span></span> <span data-ttu-id="79025-905">對應已明確設定，當遺漏對應的輸入參數通常是錯誤的結果。</span><span class="sxs-lookup"><span data-stu-id="79025-905">When the mappings are explicitly set, a missing mapping for an input parameter is usually the result of an error.</span></span>|  
|`MissingMappingAction.Error`|<span data-ttu-id="79025-906">A<xref:System.SystemException>產生。</span><span class="sxs-lookup"><span data-stu-id="79025-906">A <xref:System.SystemException> is generated.</span></span>|  
  
 <span data-ttu-id="79025-907">`SourceColumn`屬性也用來對應輸出的值，或輸入/輸出參數回`DataSet`。</span><span class="sxs-lookup"><span data-stu-id="79025-907">The `SourceColumn` property is also used to map the value for output or input/output parameters back to the `DataSet`.</span></span> <span data-ttu-id="79025-908">如果它是指不存在的資料行，會產生例外狀況。</span><span class="sxs-lookup"><span data-stu-id="79025-908">An exception is generated if it refers to a nonexistent column.</span></span>  
  
 <span data-ttu-id="79025-909">`SourceVersion`的.NET Framework 資料提供者的屬性`Parameter`類別會決定是否要使用的資料行值的原始、 Current 或 Proposed 版本。</span><span class="sxs-lookup"><span data-stu-id="79025-909">The `SourceVersion` property of a .NET Framework data provider's `Parameter` class determines whether to use the Original, Current, or Proposed version of the column value.</span></span> <span data-ttu-id="79025-910">這項功能通常用於在 UPDATE 陳述式來檢查有開放式同步存取違規的 WHERE 子句中包含原始值。</span><span class="sxs-lookup"><span data-stu-id="79025-910">This capability is often used to include original values in the WHERE clause of an UPDATE statement to check for optimistic concurrency violations.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="79025-911">如果在更新的資料列時發生錯誤，擲回例外狀況，並執行更新已停用。</span><span class="sxs-lookup"><span data-stu-id="79025-911">If an error occurs while updating a row, an exception is thrown and execution of the update is discontinued.</span></span> <span data-ttu-id="79025-912">若要繼續更新作業，而不會產生例外狀況，當發生錯誤時，設定<xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A>屬性`true`之前先呼叫<xref:System.Data.Common.DbDataAdapter.Update%2A>。</span><span class="sxs-lookup"><span data-stu-id="79025-912">To continue the update operation without generating exceptions when an error is encountered, set the <xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A> property to `true` before calling <xref:System.Data.Common.DbDataAdapter.Update%2A>.</span></span> <span data-ttu-id="79025-913">您可能也會回應內的每個資料列基礎上的錯誤`RowUpdated`DataAdapter 的事件。</span><span class="sxs-lookup"><span data-stu-id="79025-913">You may also respond to errors on a per-row basis within the `RowUpdated` event of a DataAdapter.</span></span> <span data-ttu-id="79025-914">若要繼續更新作業，而不會產生例外狀況中的`RowUpdated`設定事件，<xref:System.Data.Common.RowUpdatedEventArgs.Status%2A>屬性<xref:System.Data.Common.RowUpdatedEventArgs>至<xref:System.Data.UpdateStatus.Continue>。</span><span class="sxs-lookup"><span data-stu-id="79025-914">To continue the update operation without generating an exception within the `RowUpdated` event, set the <xref:System.Data.Common.RowUpdatedEventArgs.Status%2A> property of the <xref:System.Data.Common.RowUpdatedEventArgs> to <xref:System.Data.UpdateStatus.Continue>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="79025-915">The <see cref="T:System.Data.DataSet" /> is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-915">The <see cref="T:System.Data.DataSet" /> is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="79025-916">The source table is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-916">The source table is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.SystemException">
          <span data-ttu-id="79025-917">No <see cref="T:System.Data.DataRow" /> exists to update.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-917">No <see cref="T:System.Data.DataRow" /> exists to update.</span>
          </span>
          <span data-ttu-id="79025-918">-or-  No <see cref="T:System.Data.DataTable" /> exists to update.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-918">-or-  No <see cref="T:System.Data.DataTable" /> exists to update.</span>
          </span>
          <span data-ttu-id="79025-919">-or-  No <see cref="T:System.Data.DataSet" /> exists to use as a source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-919">-or-  No <see cref="T:System.Data.DataSet" /> exists to use as a source.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.DBConcurrencyException">
          <span data-ttu-id="79025-920">An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-920">An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public int Update (System.Data.DataSet dataSet, string srcTable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Update(class System.Data.DataSet dataSet, string srcTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Update(System::Data::DataSet ^ dataSet, System::String ^ srcTable);" />
      <MemberSignature Language="F#" Value="override this.Update : System.Data.DataSet * string -&gt; int" Usage="dbDataAdapter.Update (dataSet, srcTable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
        <Parameter Name="srcTable" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dataSet">
          <span data-ttu-id="79025-921">The <see cref="T:System.Data.DataSet" /> to use to update the data source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-921">The <see cref="T:System.Data.DataSet" /> to use to update the data source.</span>
          </span>
        </param>
        <param name="srcTable">
          <span data-ttu-id="79025-922">The name of the source table to use for table mapping.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-922">The name of the source table to use for table mapping.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="79025-923">Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the <see cref="T:System.Data.DataSet" /> with the specified <see cref="T:System.Data.DataTable" /> name.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-923">Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the <see cref="T:System.Data.DataSet" /> with the specified <see cref="T:System.Data.DataTable" /> name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="79025-924">The number of rows successfully updated from the <see cref="T:System.Data.DataSet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-924">The number of rows successfully updated from the <see cref="T:System.Data.DataSet" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79025-925">當應用程式呼叫<xref:System.Data.Common.DbDataAdapter.Update%2A>方法，<xref:System.Data.Common.DbDataAdapter>檢查<xref:System.Data.DataRow.RowState%2A>屬性，並執行必要的 INSERT、 UPDATE 或 DELETE 陳述式，反覆地針對每個資料列，並根據中設定的索引順序<xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="79025-925">When an application calls the <xref:System.Data.Common.DbDataAdapter.Update%2A> method, the <xref:System.Data.Common.DbDataAdapter> examines the <xref:System.Data.DataRow.RowState%2A> property, and executes the required INSERT, UPDATE, or DELETE statements iteratively for each row, based on the order of the indexes configured in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="79025-926">例如，<xref:System.Data.Common.DbDataAdapter.Update%2A>可能會執行 DELETE 陳述式，後面接著 INSERT 陳述式，則另一個的 DELETE 陳述式，所以中的資料列的排序<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="79025-926">For example, <xref:System.Data.Common.DbDataAdapter.Update%2A> might execute a DELETE statement, followed by an INSERT statement, and then another DELETE statement, due to the ordering of the rows in the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="79025-927">請注意這些陳述式不會執行以批次的處理程序。個別更新每個資料列。</span><span class="sxs-lookup"><span data-stu-id="79025-927">It should be noted that these statements are not performed as a batch process; each row is updated individually.</span></span> <span data-ttu-id="79025-928">應用程式可以呼叫<xref:System.Data.DataSet.GetChanges%2A>情況下，您必須在其中控制陳述式型別序列中的方法 （例如，更新之前插入）。</span><span class="sxs-lookup"><span data-stu-id="79025-928">An application can call the <xref:System.Data.DataSet.GetChanges%2A> method in situations where you must control the sequence of statement types (for example, INSERT before UPDATE).</span></span> <span data-ttu-id="79025-929">如需詳細資訊，請參閱[以 Dataadapter 更新資料來源](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md)。</span><span class="sxs-lookup"><span data-stu-id="79025-929">For more information, see [Updating Data Sources with DataAdapters](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md).</span></span>  
  
 <span data-ttu-id="79025-930">如果尚未指定 INSERT、 UPDATE 或 DELETE 陳述式，<xref:System.Data.Common.DbDataAdapter.Update%2A>方法會產生例外狀況。</span><span class="sxs-lookup"><span data-stu-id="79025-930">If INSERT, UPDATE, or DELETE statements have not been specified, the <xref:System.Data.Common.DbDataAdapter.Update%2A> method generates an exception.</span></span> <span data-ttu-id="79025-931">不過，您可以建立<xref:System.Data.SqlClient.SqlCommandBuilder>或<xref:System.Data.OleDb.OleDbCommandBuilder>物件來自動產生的單一資料表更新 SQL 陳述式，如果您設定`SelectCommand`.NET Framework 資料提供者的屬性。</span><span class="sxs-lookup"><span data-stu-id="79025-931">However, you can create a <xref:System.Data.SqlClient.SqlCommandBuilder> or <xref:System.Data.OleDb.OleDbCommandBuilder> object to automatically generate SQL statements for single-table updates if you set the `SelectCommand` property of a .NET Framework data provider.</span></span> <span data-ttu-id="79025-932">然後，您未設定任何其他 SQL 陳述式由產生**CommandBuilder**。</span><span class="sxs-lookup"><span data-stu-id="79025-932">Then, any additional SQL statements that you do not set are generated by the **CommandBuilder**.</span></span> <span data-ttu-id="79025-933">此產生邏輯需要索引鍵資料行資訊會出現在<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="79025-933">This generation logic requires key column information to be present in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="79025-934">如需詳細資訊，請參閱[Commandbuilder 產生命令](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)。</span><span class="sxs-lookup"><span data-stu-id="79025-934">For more information see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
 <span data-ttu-id="79025-935"><xref:System.Data.Common.DbDataAdapter.Update%2A>方法支援案例其中<xref:System.Data.DataSet>包含多個<xref:System.Data.DataTable>名稱只有大小寫不同的物件。</span><span class="sxs-lookup"><span data-stu-id="79025-935">The <xref:System.Data.Common.DbDataAdapter.Update%2A> method supports scenarios where the <xref:System.Data.DataSet> contains multiple <xref:System.Data.DataTable> objects whose names differ only by case.</span></span> <span data-ttu-id="79025-936">當多個資料表具有名稱相同但大小寫不同，存在於`DataSet`，<xref:System.Data.Common.DbDataAdapter.Update%2A>執行區分大小寫的比較，來尋找對應的資料表，並產生例外狀況，如果沒有完全相符項目存在。</span><span class="sxs-lookup"><span data-stu-id="79025-936">When multiple tables with the same name, but different case, exist in a `DataSet`, <xref:System.Data.Common.DbDataAdapter.Update%2A> performs a case-sensitive comparison to find the corresponding table, and generates an exception if no exact match exists.</span></span> <span data-ttu-id="79025-937">下列 C# 程式碼說明這個行為。</span><span class="sxs-lookup"><span data-stu-id="79025-937">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet ds = new DataSet();  
 ds.Tables.Add("aaa");  
 ds.Tables.Add("AAA");  
 adapter.Update(ds, "aaa"); // Updates "aaa", which already exists in the DataSet.  
 adapter.Update(ds, "AAA"); // Updates "AAA", which already exists in the DataSet.  
    adapter.Update(ds, "Aaa"); // Results in an exception.  
```  
  
 <span data-ttu-id="79025-938">如果<xref:System.Data.Common.DbDataAdapter.Update%2A>稱為和<xref:System.Data.DataSet>只包含<xref:System.Data.DataTable>名稱只有大小寫不同的<xref:System.Data.DataTable>會更新。</span><span class="sxs-lookup"><span data-stu-id="79025-938">If <xref:System.Data.Common.DbDataAdapter.Update%2A> is called and the <xref:System.Data.DataSet> contains only one <xref:System.Data.DataTable> whose name differs only by case, that <xref:System.Data.DataTable> is updated.</span></span> <span data-ttu-id="79025-939">在此案例中，這個比較是不區分大小寫。</span><span class="sxs-lookup"><span data-stu-id="79025-939">In this scenario, the comparison is case insensitive.</span></span> <span data-ttu-id="79025-940">下列 C# 程式碼說明這個行為。</span><span class="sxs-lookup"><span data-stu-id="79025-940">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
 dataset.Tables.Add("aaa");  
    adapter.Update(dataset, "AAA"); // Updates table "aaa" because only one similarly named table is in the DataSet.  
```  
  
 <span data-ttu-id="79025-941"><xref:System.Data.Common.DbDataAdapter.Update%2A>方法會從執行更新前的第一個對應中所列的資料表擷取資料列。</span><span class="sxs-lookup"><span data-stu-id="79025-941">The <xref:System.Data.Common.DbDataAdapter.Update%2A> method retrieves rows from the table listed in the first mapping before performing an update.</span></span> <span data-ttu-id="79025-942"><xref:System.Data.Common.DbDataAdapter.Update%2A>然後重新整理使用的值的資料列<xref:System.Data.IDbCommand.UpdatedRowSource%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="79025-942">The <xref:System.Data.Common.DbDataAdapter.Update%2A> then refreshes the row using the value of the <xref:System.Data.IDbCommand.UpdatedRowSource%2A> property.</span></span> <span data-ttu-id="79025-943">傳回的任何其他資料列都會被忽略。</span><span class="sxs-lookup"><span data-stu-id="79025-943">Any additional rows returned are ignored.</span></span>  
  
 <span data-ttu-id="79025-944">任何資料會載入回後<xref:System.Data.DataSet>、<xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A>引發事件，讓使用者檢查調解<xref:System.Data.DataSet>資料列和任何輸出命令所傳回的參數。</span><span class="sxs-lookup"><span data-stu-id="79025-944">After any data is loaded back into the <xref:System.Data.DataSet>, the <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised, allowing the user to inspect the reconciled <xref:System.Data.DataSet> row and any output parameters returned by the command.</span></span> <span data-ttu-id="79025-945">已成功更新資料列之後，會接受該資料列所做的變更。</span><span class="sxs-lookup"><span data-stu-id="79025-945">After a row updates successfully, the changes to that row are accepted.</span></span>  
  
 <span data-ttu-id="79025-946">當使用<xref:System.Data.Common.DbDataAdapter.Update%2A>，執行的順序如下所示：</span><span class="sxs-lookup"><span data-stu-id="79025-946">When using <xref:System.Data.Common.DbDataAdapter.Update%2A>, the order of execution is as follows:</span></span>  
  
1.  <span data-ttu-id="79025-947">中的值<xref:System.Data.DataRow>移到參數值。</span><span class="sxs-lookup"><span data-stu-id="79025-947">The values in the <xref:System.Data.DataRow> are moved to the parameter values.</span></span>  
  
2.  <span data-ttu-id="79025-948">便會引發 <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> 事件。</span><span class="sxs-lookup"><span data-stu-id="79025-948">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> event is raised.</span></span>  
  
3.  <span data-ttu-id="79025-949">執行命令。</span><span class="sxs-lookup"><span data-stu-id="79025-949">The command executes.</span></span>  
  
4.  <span data-ttu-id="79025-950">如果命令設定為`FirstReturnedRecord`，則第一個傳回的結果放在<xref:System.Data.DataRow>。</span><span class="sxs-lookup"><span data-stu-id="79025-950">If the command is set to `FirstReturnedRecord`, then the first returned result is placed in the <xref:System.Data.DataRow>.</span></span>  
  
5.  <span data-ttu-id="79025-951">如果沒有輸出參數，它們會放置於<xref:System.Data.DataRow>。</span><span class="sxs-lookup"><span data-stu-id="79025-951">If there are output parameters, they are placed in the <xref:System.Data.DataRow>.</span></span>  
  
6.  <span data-ttu-id="79025-952">便會引發 <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> 事件。</span><span class="sxs-lookup"><span data-stu-id="79025-952">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised.</span></span>  
  
7.  <span data-ttu-id="79025-953">呼叫 <xref:System.Data.DataRow.AcceptChanges%2A>。</span><span class="sxs-lookup"><span data-stu-id="79025-953"><xref:System.Data.DataRow.AcceptChanges%2A> is called.</span></span>  
  
 <span data-ttu-id="79025-954">每個相關聯的命令<xref:System.Data.Common.DbDataAdapter>通常會有與它關聯的參數集合。</span><span class="sxs-lookup"><span data-stu-id="79025-954">Each command associated with the <xref:System.Data.Common.DbDataAdapter> usually has a parameters collection associated with it.</span></span> <span data-ttu-id="79025-955">參數對應到目前的資料列，透過`SourceColumn`和`SourceVersion`的.NET Framework 資料提供者的屬性`Parameter`類別。</span><span class="sxs-lookup"><span data-stu-id="79025-955">Parameters are mapped to the current row through the `SourceColumn` and `SourceVersion` properties of a .NET Framework data provider's `Parameter` class.</span></span> <span data-ttu-id="79025-956">`SourceColumn` 是指<xref:System.Data.DataTable>資料行，<xref:System.Data.Common.DbDataAdapter>以取得目前資料列的參數值的參考。</span><span class="sxs-lookup"><span data-stu-id="79025-956">`SourceColumn` refers to a <xref:System.Data.DataTable> column that the <xref:System.Data.Common.DbDataAdapter> references to obtain parameter values for the current row.</span></span>  
  
 <span data-ttu-id="79025-957">`SourceColumn` 在套用任何資料表對應之前，是指未對應的資料行名稱。</span><span class="sxs-lookup"><span data-stu-id="79025-957">`SourceColumn` refers to the unmapped column name before any table mappings have been applied.</span></span> <span data-ttu-id="79025-958">如果`SourceColumn`參考到不存在的資料行中，所採取的動作取決於下列其中一種<xref:System.Data.MissingMappingAction>值。</span><span class="sxs-lookup"><span data-stu-id="79025-958">If `SourceColumn` refers to a nonexistent column, the action taken depends on one of the following <xref:System.Data.MissingMappingAction> values.</span></span>  
  
|<span data-ttu-id="79025-959">列舉值</span><span class="sxs-lookup"><span data-stu-id="79025-959">Enumeration value</span></span>|<span data-ttu-id="79025-960">採取的動作</span><span class="sxs-lookup"><span data-stu-id="79025-960">Action taken</span></span>|  
|-----------------------|------------------|  
|`MissingMappingAction.Passthrough`|<span data-ttu-id="79025-961">使用中的資料表名稱與來源資料行名稱<xref:System.Data.DataSet>如果不不存在任何對應。</span><span class="sxs-lookup"><span data-stu-id="79025-961">Use the source column names and table names in the <xref:System.Data.DataSet> if no mapping is present.</span></span>|  
|`MissingMappingAction.Ignore`|<span data-ttu-id="79025-962">A<xref:System.SystemException>產生。</span><span class="sxs-lookup"><span data-stu-id="79025-962">A <xref:System.SystemException> is generated.</span></span> <span data-ttu-id="79025-963">對應已明確設定，當遺漏對應的輸入參數通常是錯誤的結果。</span><span class="sxs-lookup"><span data-stu-id="79025-963">When the mappings are explicitly set, a missing mapping for an input parameter is usually the result of an error.</span></span>|  
|`MissingMappingAction.Error`|<span data-ttu-id="79025-964">A<xref:System.SystemException>產生。</span><span class="sxs-lookup"><span data-stu-id="79025-964">A <xref:System.SystemException> is generated.</span></span>|  
  
 <span data-ttu-id="79025-965">`SourceColumn`屬性也用來對應輸出的值，或輸入/輸出參數回`DataSet`。</span><span class="sxs-lookup"><span data-stu-id="79025-965">The `SourceColumn` property is also used to map the value for output or input/output parameters back to the `DataSet`.</span></span> <span data-ttu-id="79025-966">如果它是指不存在的資料行，會產生例外狀況。</span><span class="sxs-lookup"><span data-stu-id="79025-966">An exception is generated if it refers to a nonexistent column.</span></span>  
  
 <span data-ttu-id="79025-967">`SourceVersion`的.NET Framework 資料提供者的屬性`Parameter`類別會決定是否要使用的資料行值的原始、 Current 或 Proposed 版本。</span><span class="sxs-lookup"><span data-stu-id="79025-967">The `SourceVersion` property of a .NET Framework data provider's `Parameter` class determines whether to use the Original, Current, or Proposed version of the column value.</span></span> <span data-ttu-id="79025-968">這項功能通常用於在 UPDATE 陳述式來檢查有開放式同步存取違規的 WHERE 子句中包含原始值。</span><span class="sxs-lookup"><span data-stu-id="79025-968">This capability is often used to include original values in the WHERE clause of an UPDATE statement to check for optimistic concurrency violations.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="79025-969">如果在更新的資料列時發生錯誤，擲回例外狀況，並執行更新已停用。</span><span class="sxs-lookup"><span data-stu-id="79025-969">If an error occurs while updating a row, an exception is thrown and execution of the update is discontinued.</span></span> <span data-ttu-id="79025-970">若要繼續更新作業，而不會產生例外狀況，當發生錯誤時，設定<xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A>屬性`true`之前先呼叫<xref:System.Data.Common.DbDataAdapter.Update%2A>。</span><span class="sxs-lookup"><span data-stu-id="79025-970">To continue the update operation without generating exceptions when an error is encountered, set the <xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A> property to `true` before calling <xref:System.Data.Common.DbDataAdapter.Update%2A>.</span></span> <span data-ttu-id="79025-971">您可能也會回應內的每個資料列基礎上的錯誤`RowUpdated`DataAdapter 的事件。</span><span class="sxs-lookup"><span data-stu-id="79025-971">You may also respond to errors on a per-row basis within the `RowUpdated` event of a DataAdapter.</span></span> <span data-ttu-id="79025-972">若要繼續更新作業，而不會產生例外狀況中的`RowUpdated`設定事件，<xref:System.Data.Common.RowUpdatedEventArgs.Status%2A>屬性<xref:System.Data.Common.RowUpdatedEventArgs>至<xref:System.Data.UpdateStatus.Continue>。</span><span class="sxs-lookup"><span data-stu-id="79025-972">To continue the update operation without generating an exception within the `RowUpdated` event, set the <xref:System.Data.Common.RowUpdatedEventArgs.Status%2A> property of the <xref:System.Data.Common.RowUpdatedEventArgs> to <xref:System.Data.UpdateStatus.Continue>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="79025-973">下列範例會使用衍生的類別， <xref:System.Data.OleDb.OleDbDataAdapter>、 更新資料來源。</span><span class="sxs-lookup"><span data-stu-id="79025-973">The following example uses the derived class, <xref:System.Data.OleDb.OleDbDataAdapter>, to update the data source.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.Update3#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Update3/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.Update3#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Update3/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="79025-974">The <see cref="T:System.Data.DataSet" /> is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-974">The <see cref="T:System.Data.DataSet" /> is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="79025-975">The source table is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-975">The source table is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.DBConcurrencyException">
          <span data-ttu-id="79025-976">An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-976">An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateBatchSize">
      <MemberSignature Language="C#" Value="public virtual int UpdateBatchSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 UpdateBatchSize" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataAdapter.UpdateBatchSize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property UpdateBatchSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int UpdateBatchSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.UpdateBatchSize : int with get, set" Usage="System.Data.Common.DbDataAdapter.UpdateBatchSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="79025-977">Gets or sets a value that enables or disables batch processing support, and specifies the number of commands that can be executed in a batch.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-977">Gets or sets a value that enables or disables batch processing support, and specifies the number of commands that can be executed in a batch.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="79025-978">處理每個批次的資料列數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-978">The number of rows to process per batch.</span>
          </span>
          <span data-ttu-id="79025-979">
            <list type="table">
              <listheader>
                <term> 值是</term>
                <description>效果</description>
              </listheader>
              <item>
                <term> 0 </term>
                <description>批次大小沒有任何限制。</description>
              </item>
              <item>
                <term> 1 </term>
                <description>停用批次更新。</description>
              </item>
              <item>
                <term> &gt; 1 </term>
                <description>變更使用的批次傳送<see cref="P:System.Data.Common.DbDataAdapter.UpdateBatchSize" />一次作業。</description>
              </item>
            </list>  當設定為 1 以外的值，與相關聯的所有命令<see cref="T:System.Data.Common.DbDataAdapter" />必須要有其<see cref="P:System.Data.IDbCommand.UpdatedRowSource" />屬性設定為 * * 無 * * 或 * * 輸出參數 * *。</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-979">
              <list type="table">
                <listheader>
                  <term> Value is  </term>
                  <description> Effect  </description>
                </listheader>
                <item>
                  <term> 0  </term>
                  <description> There is no limit on the batch size.  </description>
                </item>
                <item>
                  <term> 1  </term>
                  <description> Disables batch updating.  </description>
                </item>
                <item>
                  <term> &gt; 1  </term>
                  <description> Changes are sent using batches of <see cref="P:System.Data.Common.DbDataAdapter.UpdateBatchSize" /> operations at a time.  </description>
                </item>
              </list>  When setting this to a value other than 1, all the commands associated with the <see cref="T:System.Data.Common.DbDataAdapter" /> must have their <see cref="P:System.Data.IDbCommand.UpdatedRowSource" /> property set to **None** or **OutputParameters**.</span>
          </span>
          <span data-ttu-id="79025-980">否則會擲回例外狀況。</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-980">An exception will be thrown otherwise.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79025-981">使用<xref:System.Data.Common.DbDataAdapter.UpdateBatchSize%2A>屬性來更新資料來源的變更與<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="79025-981">Use the <xref:System.Data.Common.DbDataAdapter.UpdateBatchSize%2A> property to update a data source with changes from a <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="79025-982">如果資料提供者支援批次處理，這可藉由減少伺服器的來回次數來增加應用程式的效能。</span><span class="sxs-lookup"><span data-stu-id="79025-982">If the data provider supports batch processing, this can increase application performance by reducing the number of round-trips to the server.</span></span> <span data-ttu-id="79025-983">在 ADO.NET 2.0 中，這個屬性可支援.NET 資料提供者的 SQL Server (SqlClient) 和 Oracle (OracleClient)。</span><span class="sxs-lookup"><span data-stu-id="79025-983">In ADO.NET 2.0, this property is supported for the .NET data providers for SQL Server (SqlClient) and Oracle (OracleClient).</span></span>  
  
 <span data-ttu-id="79025-984">執行極大的批次可能會降低效能。</span><span class="sxs-lookup"><span data-stu-id="79025-984">Executing an extremely large batch could decrease performance.</span></span> <span data-ttu-id="79025-985">因此，您應該先測試理想的批次大小設定，再實作應用程式。</span><span class="sxs-lookup"><span data-stu-id="79025-985">Therefore, you should test for the optimum batch size setting before implementing your application.</span></span>  
  
 <span data-ttu-id="79025-986"><xref:System.ArgumentOutOfRangeException>會擲回此值設為號碼小於零。</span><span class="sxs-lookup"><span data-stu-id="79025-986">An <xref:System.ArgumentOutOfRangeException> will be thrown if the value is set to a number less than zero.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateCommand">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbCommand UpdateCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbCommand UpdateCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataAdapter.UpdateCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateCommand As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Common::DbCommand ^ UpdateCommand { System::Data::Common::DbCommand ^ get(); void set(System::Data::Common::DbCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UpdateCommand : System.Data.Common.DbCommand with get, set" Usage="System.Data.Common.DbDataAdapter.UpdateCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="79025-987">Gets or sets a command used to update records in the data source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-987">Gets or sets a command used to update records in the data source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="79025-988">A<see cref="T:System.Data.IDbCommand" />期間使用<see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />修改資料集中的資料列的資料來源中更新記錄。</span>
          <span class="sxs-lookup">
            <span data-stu-id="79025-988">A <see cref="T:System.Data.IDbCommand" /> used during <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> to update records in the data source for modified rows in the data set.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79025-989">期間<xref:System.Data.Common.DbDataAdapter.Update%2A>，如果沒有設定這個屬性，並且出現在主索引鍵資訊<xref:System.Data.DataSet>、<xref:System.Data.IDbDataAdapter.UpdateCommand%2A>就會自動產生。</span><span class="sxs-lookup"><span data-stu-id="79025-989">During <xref:System.Data.Common.DbDataAdapter.Update%2A>, if this property is not set and primary key information is present in the <xref:System.Data.DataSet>, the <xref:System.Data.IDbDataAdapter.UpdateCommand%2A> will be automatically generated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="79025-990">下列範例會建立衍生的類別<xref:System.Data.OleDb.OleDbDataAdapter>並設定其屬性的某些。</span><span class="sxs-lookup"><span data-stu-id="79025-990">The following example creates the derived class <xref:System.Data.OleDb.OleDbDataAdapter> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.UpdateCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.UpdateCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.UpdateCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.UpdateCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>