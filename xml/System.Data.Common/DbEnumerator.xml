<Type Name="DbEnumerator" FullName="System.Data.Common.DbEnumerator">
  <Metadata><Meta Name="ms.openlocfilehash" Value="466f7ab5e4a3b823bae7842b941c6c208b78a2d9" /><Meta Name="ms.sourcegitcommit" Value="8e213bb5e6801f6e29861ba72664978ad00e34fa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="02/18/2019" /><Meta Name="ms.locfileid" Value="56391418" /></Metadata><TypeSignature Language="C#" Value="public class DbEnumerator : System.Collections.IEnumerator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DbEnumerator extends System.Object implements class System.Collections.IEnumerator" />
  <TypeSignature Language="DocId" Value="T:System.Data.Common.DbEnumerator" />
  <TypeSignature Language="VB.NET" Value="Public Class DbEnumerator&#xA;Implements IEnumerator" />
  <TypeSignature Language="C++ CLI" Value="public ref class DbEnumerator : System::Collections::IEnumerator" />
  <TypeSignature Language="F#" Value="type DbEnumerator = class&#xA;    interface IEnumerator" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerator</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="608d4-101">公開 <see cref="M:System.Collections.IEnumerable.GetEnumerator" /> 方法，該方法支援由 .NET Framework 資料提供者對集合執行簡單的反覆查看。</span><span class="sxs-lookup"><span data-stu-id="608d4-101">Exposes the <see cref="M:System.Collections.IEnumerable.GetEnumerator" /> method, which supports a simple iteration over a collection by a .NET Framework data provider.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="608d4-102"><xref:System.Data.Common.DbEnumerator>類別實作.NET Framework 資料提供者來提供資料繫結支援。</span><span class="sxs-lookup"><span data-stu-id="608d4-102">The <xref:System.Data.Common.DbEnumerator> class is implemented by a .NET Framework data provider to provide data binding support.</span></span>  
  
 <span data-ttu-id="608d4-103">根據設計，<xref:System.Data.Common.DbEnumerator>物件要搭配使用只有一個結果集。</span><span class="sxs-lookup"><span data-stu-id="608d4-103">By design, the <xref:System.Data.Common.DbEnumerator> object is intended for use with only one resultset.</span></span> <span data-ttu-id="608d4-104">比方說，如果您執行包含兩個 SQL SELECT 陳述式會傳回不同的結構描述的批次陳述式時，第二個陳述式可能會傳回整個結構描述。</span><span class="sxs-lookup"><span data-stu-id="608d4-104">For example, if you execute a batch statement containing two SQL SELECT statements that return different schemas, the second statement might not retun the entire schema.</span></span> <span data-ttu-id="608d4-105">若要避免這種情況下，取得<xref:System.Data.Common.DbEnumerator>的每個的結果集，然後呼叫`NextResult`.NET Framework 資料提供者 DataReader 物件的方法。</span><span class="sxs-lookup"><span data-stu-id="608d4-105">To avoid this situation, obtain a <xref:System.Data.Common.DbEnumerator> for each resultset, and then call the `NextResult` method of a .NET Framework data provider DataReader object.</span></span>  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="608d4-106">ADO.NET 概觀</span><span class="sxs-lookup"><span data-stu-id="608d4-106">ADO.NET Overview</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="608d4-107">初始化 <see cref="T:System.Data.Common.DbEnumerator" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="608d4-107">Initializes a new instance of the <see cref="T:System.Data.Common.DbEnumerator" /> class.</span></span></summary>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="608d4-108">ADO.NET 概觀</span><span class="sxs-lookup"><span data-stu-id="608d4-108">ADO.NET Overview</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DbEnumerator (System.Data.Common.DbDataReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.Common.DbDataReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbEnumerator.#ctor(System.Data.Common.DbDataReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (reader As DbDataReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DbEnumerator(System::Data::Common::DbDataReader ^ reader);" />
      <MemberSignature Language="F#" Value="new System.Data.Common.DbEnumerator : System.Data.Common.DbDataReader -&gt; System.Data.Common.DbEnumerator" Usage="new System.Data.Common.DbEnumerator reader" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="reader" Type="System.Data.Common.DbDataReader" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="608d4-109">要逐一查看的 DataReader。</span><span class="sxs-lookup"><span data-stu-id="608d4-109">The DataReader through which to iterate.</span></span></param>
        <summary><span data-ttu-id="608d4-110">使用指定的資料讀取器，初始化 <see cref="T:System.Data.Common.DbEnumerator" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="608d4-110">Initializes a new instance of the <see cref="T:System.Data.Common.DbEnumerator" /> class with the give n data reader.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DbEnumerator (System.Data.IDataReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.IDataReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbEnumerator.#ctor(System.Data.IDataReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (reader As IDataReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DbEnumerator(System::Data::IDataReader ^ reader);" />
      <MemberSignature Language="F#" Value="new System.Data.Common.DbEnumerator : System.Data.IDataReader -&gt; System.Data.Common.DbEnumerator" Usage="new System.Data.Common.DbEnumerator reader" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="reader" Type="System.Data.IDataReader" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="608d4-111">重複執行要透過的 <see langword="DataReader" />。</span><span class="sxs-lookup"><span data-stu-id="608d4-111">The <see langword="DataReader" /> through which to iterate.</span></span></param>
        <summary><span data-ttu-id="608d4-112">使用指定的 <see cref="T:System.Data.Common.DbEnumerator" />，初始化 <see langword="DataReader" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="608d4-112">Initializes a new instance of the <see cref="T:System.Data.Common.DbEnumerator" /> class using the specified <see langword="DataReader" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="608d4-113">ADO.NET 概觀</span><span class="sxs-lookup"><span data-stu-id="608d4-113">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DbEnumerator (System.Data.Common.DbDataReader reader, bool closeReader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.Common.DbDataReader reader, bool closeReader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbEnumerator.#ctor(System.Data.Common.DbDataReader,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (reader As DbDataReader, closeReader As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DbEnumerator(System::Data::Common::DbDataReader ^ reader, bool closeReader);" />
      <MemberSignature Language="F#" Value="new System.Data.Common.DbEnumerator : System.Data.Common.DbDataReader * bool -&gt; System.Data.Common.DbEnumerator" Usage="new System.Data.Common.DbEnumerator (reader, closeReader)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="reader" Type="System.Data.Common.DbDataReader" />
        <Parameter Name="closeReader" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="608d4-114">要逐一查看的 DataReader。</span><span class="sxs-lookup"><span data-stu-id="608d4-114">The DataReader through which to iterate.</span></span></param>
        <param name="closeReader"><span data-ttu-id="608d4-115">設為 <see langword="true" /> 會在逐一查看其資料後自動關閉 DataReader，否則設為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="608d4-115"><see langword="true" /> to automatically close the DataReader after iterating through its data; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="608d4-116">使用指定的讀取器初始化 <see cref="T:System.Data.Common.DbEnumerator" /> 類別的新執行個體，並指出是否要在逐一查看其資料之後自動關閉讀取器。</span><span class="sxs-lookup"><span data-stu-id="608d4-116">Initializes a new instance of the <see cref="T:System.Data.Common.DbEnumerator" /> class using the specified reader and indicates whether to automatically close the reader after iterating through its data.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DbEnumerator (System.Data.IDataReader reader, bool closeReader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.IDataReader reader, bool closeReader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbEnumerator.#ctor(System.Data.IDataReader,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (reader As IDataReader, closeReader As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DbEnumerator(System::Data::IDataReader ^ reader, bool closeReader);" />
      <MemberSignature Language="F#" Value="new System.Data.Common.DbEnumerator : System.Data.IDataReader * bool -&gt; System.Data.Common.DbEnumerator" Usage="new System.Data.Common.DbEnumerator (reader, closeReader)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="reader" Type="System.Data.IDataReader" />
        <Parameter Name="closeReader" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="608d4-117">重複執行要透過的 <see langword="DataReader" />。</span><span class="sxs-lookup"><span data-stu-id="608d4-117">The <see langword="DataReader" /> through which to iterate.</span></span></param>
        <param name="closeReader"><span data-ttu-id="608d4-118">設為 <see langword="true" /> 會在逐一查看其資料後自動關閉 <see langword="DataReader" />，否則設為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="608d4-118"><see langword="true" /> to automatically close the <see langword="DataReader" /> after iterating through its data; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="608d4-119">使用指定的 <see langword="DataReader" /> 初始化 <see cref="T:System.Data.Common.DbEnumerator" /> 類別的新執行個體，並指出是否要在逐一查看其資料之後自動關閉 <see langword="DataReader" />。</span><span class="sxs-lookup"><span data-stu-id="608d4-119">Initializes a new instance of the <see cref="T:System.Data.Common.DbEnumerator" /> class using the specified <see langword="DataReader" />, and indicates whether to automatically close the <see langword="DataReader" /> after iterating through its data.</span></span></summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="608d4-120">ADO.NET 概觀</span><span class="sxs-lookup"><span data-stu-id="608d4-120">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public object Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Current" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbEnumerator.Current" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Current As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Current { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Current : obj" Usage="System.Data.Common.DbEnumerator.Current" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IEnumerator.Current</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="608d4-121">取得集合中目前的項目。</span><span class="sxs-lookup"><span data-stu-id="608d4-121">Gets the current element in the collection.</span></span></summary>
        <value><span data-ttu-id="608d4-122">集合中目前的項目。</span><span class="sxs-lookup"><span data-stu-id="608d4-122">The current element in the collection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="608d4-123">建立列舉值之後或在後<xref:System.Data.Common.DbEnumerator.Reset%2A>，<xref:System.Data.Common.DbEnumerator.MoveNext%2A>列舉值前進到第一個元素的集合，再讀取的值時必須呼叫<xref:System.Data.Common.DbEnumerator.Current%2A>; 否則<xref:System.Data.Common.DbEnumerator.Current%2A>是未定義。</span><span class="sxs-lookup"><span data-stu-id="608d4-123">After an enumerator is created or after a <xref:System.Data.Common.DbEnumerator.Reset%2A>, <xref:System.Data.Common.DbEnumerator.MoveNext%2A> must be called to advance the enumerator to the first element of the collection before reading the value of <xref:System.Data.Common.DbEnumerator.Current%2A>; otherwise, <xref:System.Data.Common.DbEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="608d4-124"><xref:System.Data.Common.DbEnumerator.Current%2A> 也會發生例外狀況，如果上次呼叫<xref:System.Data.Common.DbEnumerator.MoveNext%2A>傳回 false，表示集合的結尾。</span><span class="sxs-lookup"><span data-stu-id="608d4-124"><xref:System.Data.Common.DbEnumerator.Current%2A> also throws an exception if the last call to <xref:System.Data.Common.DbEnumerator.MoveNext%2A> returned false, which indicates the end of the collection.</span></span> <span data-ttu-id="608d4-125"><xref:System.Data.Common.DbEnumerator.Current%2A> 不會移動的列舉值和連續呼叫的位置<xref:System.Data.Common.DbEnumerator.Current%2A>傳回相同的物件，直到<xref:System.Data.Common.DbEnumerator.MoveNext%2A>或<xref:System.Data.Common.DbEnumerator.Reset%2A>呼叫。</span><span class="sxs-lookup"><span data-stu-id="608d4-125"><xref:System.Data.Common.DbEnumerator.Current%2A> does not move the position of the enumerator and consecutive calls to <xref:System.Data.Common.DbEnumerator.Current%2A> return the same object until either <xref:System.Data.Common.DbEnumerator.MoveNext%2A> or <xref:System.Data.Common.DbEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="608d4-126">只要集合維持不變，列舉程式就持續有效。</span><span class="sxs-lookup"><span data-stu-id="608d4-126">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="608d4-127">如果對集合進行變更，例如加入、 修改或刪除元素，列舉值，將永久失效，且下一個呼叫<xref:System.Data.Common.DbEnumerator.MoveNext%2A>或是<xref:System.Data.Common.DbEnumerator.Reset%2A>會產生<xref:System.InvalidOperationException>。</span><span class="sxs-lookup"><span data-stu-id="608d4-127">If changes are made to the collection, such as adding, modifying or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Data.Common.DbEnumerator.MoveNext%2A> or <xref:System.Data.Common.DbEnumerator.Reset%2A> generates an <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="608d4-128">如果集合已修改之間<xref:System.Data.Common.DbEnumerator.MoveNext%2A>並<xref:System.Data.Common.DbEnumerator.Current%2A>，<xref:System.Data.Common.DbEnumerator.Current%2A>傳回的設定，項目，即使已經無效列舉值。</span><span class="sxs-lookup"><span data-stu-id="608d4-128">If the collection is modified between <xref:System.Data.Common.DbEnumerator.MoveNext%2A> and <xref:System.Data.Common.DbEnumerator.Current%2A>, <xref:System.Data.Common.DbEnumerator.Current%2A> returns the element to which it is set, even if the enumerator is already invalidated.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="608d4-129">列舉值是放在集合的第一個項目之前，或最後一個項目之後。</span><span class="sxs-lookup"><span data-stu-id="608d4-129">The enumerator is positioned before the first element of the collection or after the last element.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="608d4-130">ADO.NET 概觀</span><span class="sxs-lookup"><span data-stu-id="608d4-130">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="MoveNext">
      <MemberSignature Language="C#" Value="public bool MoveNext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveNext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbEnumerator.MoveNext" />
      <MemberSignature Language="VB.NET" Value="Public Function MoveNext () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool MoveNext();" />
      <MemberSignature Language="F#" Value="abstract member MoveNext : unit -&gt; bool&#xA;override this.MoveNext : unit -&gt; bool" Usage="dbEnumerator.MoveNext " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerator.MoveNext</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="608d4-131">將列舉值往前推至下集合中的下一個項目。</span><span class="sxs-lookup"><span data-stu-id="608d4-131">Advances the enumerator to the next element of the collection.</span></span></summary>
        <returns><span data-ttu-id="608d4-132">如果列舉值成功前移至下一個項目，則為 <see langword="true" />；如果列舉值超過集合的結尾，則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="608d4-132"><see langword="true" /> if the enumerator was successfully advanced to the next element; <see langword="false" /> if the enumerator has passed the end of the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="608d4-133">建立列舉值之後或在呼叫之後<xref:System.Data.Common.DbEnumerator.Reset%2A>，查看的列舉值位於集合中，與第一次呼叫的第一個元素之前<xref:System.Data.Common.DbEnumerator.MoveNext%2A>集合的第一個項目上方移動，列舉值。</span><span class="sxs-lookup"><span data-stu-id="608d4-133">After an enumerator is created or after a call to <xref:System.Data.Common.DbEnumerator.Reset%2A>, an enumerator is positioned before the first element of the collection, and the first call to <xref:System.Data.Common.DbEnumerator.MoveNext%2A> moves the enumerator over the first element of the collection.</span></span> <span data-ttu-id="608d4-134">集合的結尾傳遞，後續呼叫後<xref:System.Data.Common.DbEnumerator.MoveNext%2A>傳回 false，直到<xref:System.Data.Common.DbEnumerator.Reset%2A>呼叫。</span><span class="sxs-lookup"><span data-stu-id="608d4-134">After the end of the collection is passed, subsequent calls to <xref:System.Data.Common.DbEnumerator.MoveNext%2A> return false until <xref:System.Data.Common.DbEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="608d4-135">只要集合維持不變，列舉程式就持續有效。</span><span class="sxs-lookup"><span data-stu-id="608d4-135">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="608d4-136">如果對集合進行變更，例如加入、 修改或刪除元素，列舉值，將永久失效，且下一個呼叫<xref:System.Data.Common.DbEnumerator.MoveNext%2A>或是<xref:System.Data.Common.DbEnumerator.Reset%2A>就會擲回<xref:System.InvalidOperationException>。</span><span class="sxs-lookup"><span data-stu-id="608d4-136">If changes are made to the collection, such as adding, modifying or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Data.Common.DbEnumerator.MoveNext%2A> or <xref:System.Data.Common.DbEnumerator.Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="608d4-137">建立列舉值之後，集合已修改。</span><span class="sxs-lookup"><span data-stu-id="608d4-137">The collection was modified after the enumerator was created.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="608d4-138">ADO.NET 概觀</span><span class="sxs-lookup"><span data-stu-id="608d4-138">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbEnumerator.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Reset();" />
      <MemberSignature Language="F#" Value="abstract member Reset : unit -&gt; unit&#xA;override this.Reset : unit -&gt; unit" Usage="dbEnumerator.Reset " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerator.Reset</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;netcore-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="608d4-139">設定列舉值至它的初始位置，這是在集合中第一個項目之前。</span><span class="sxs-lookup"><span data-stu-id="608d4-139">Sets the enumerator to its initial position, which is before the first element in the collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="608d4-140">只要集合維持不變，列舉程式就持續有效。</span><span class="sxs-lookup"><span data-stu-id="608d4-140">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="608d4-141">如果對集合進行變更，例如加入、 修改或刪除元素，列舉值，將永久失效，且下一個呼叫<xref:System.Data.Common.DbEnumerator.MoveNext%2A>或是<xref:System.Data.Common.DbEnumerator.Reset%2A>就會擲回<xref:System.InvalidOperationException>。</span><span class="sxs-lookup"><span data-stu-id="608d4-141">If changes are made to the collection, such as adding, modifying or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Data.Common.DbEnumerator.MoveNext%2A> or <xref:System.Data.Common.DbEnumerator.Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="608d4-142">建立列舉值之後，集合已修改。</span><span class="sxs-lookup"><span data-stu-id="608d4-142">The collection was modified after the enumerator was created.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="608d4-143">ADO.NET 概觀</span><span class="sxs-lookup"><span data-stu-id="608d4-143">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>