<Type Name="DataAdapter" FullName="System.Data.Common.DataAdapter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c2ebaa8f380dc7733c8d56b9c4a0aaeacc1dfa2e" />
    <Meta Name="ms.sourcegitcommit" Value="4b4804968da1dfdf71c501075a5b66957b54f2e8" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/27/2018" />
    <Meta Name="ms.locfileid" Value="32037822" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DataAdapter : System.ComponentModel.Component, System.Data.IDataAdapter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataAdapter extends System.ComponentModel.Component implements class System.Data.IDataAdapter" />
  <TypeSignature Language="DocId" Value="T:System.Data.Common.DataAdapter" />
  <TypeSignature Language="VB.NET" Value="Public Class DataAdapter&#xA;Inherits Component&#xA;Implements IDataAdapter" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataAdapter : System::ComponentModel::Component, System::Data::IDataAdapter" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Data.IDataAdapter</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>代表一組 SQL 命令和一個資料庫連接，用來填入 <see cref="T:System.Data.DataSet" /> 並更新資料來源。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Common.DataAdapter>當做之間的橋樑<xref:System.Data.DataSet>以及用來擷取並儲存資料的資料來源。 <xref:System.Data.Common.DataAdapter>對應提供這個橋接器<xref:System.Data.Common.DataAdapter.Fill%2A>中的資料的變更<xref:System.Data.DataSet>以符合資料來源中的資料和<xref:System.Data.IDataAdapter.Update%2A>，變更要比對中的資料的資料來源中的資料<xref:System.Data.DataSet>。  
  
 如果您要連接到 SQL Server 資料庫，您可以藉由提高整體效能<xref:System.Data.SqlClient.SqlDataAdapter>以及與其相關聯<xref:System.Data.SqlClient.SqlCommand>和<xref:System.Data.SqlClient.SqlConnection>物件。 OLE DB 支援的資料來源，請使用<xref:System.Data.Common.DataAdapter>具有與其相關聯<xref:System.Data.OleDb.OleDbCommand>和<xref:System.Data.OleDb.OleDbConnection>物件。 ODBC 支援的資料來源，請使用<xref:System.Data.Common.DataAdapter>具有與其相關聯<xref:System.Data.Odbc.OdbcCommand>和<xref:System.Data.Odbc.OdbcConnection>物件。 Oracle 資料庫，請使用<xref:System.Data.Common.DataAdapter>具有與其相關聯<xref:System.Data.OracleClient.OracleCommand>和<xref:System.Data.OracleClient.OracleConnection>物件。  
  
 執行個體時<xref:System.Data.Common.DataAdapter>建立時，讀取/寫入屬性會設為初始值。 如需這些值的清單，請參閱<xref:System.Data.Common.DataAdapter>建構函式。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Data.Common.DataAdapter" /> 類別的新執行個體。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DataAdapter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DataAdapter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DataAdapter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Data.Common.DataAdapter" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 執行個體時<xref:System.Data.Common.DataAdapter>會建立下列讀取/寫入屬性設定為下列的起始值。  
  
|屬性|Initial value|  
|----------------|-------------------|  
|<xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>|`MissingMappingAction.Passthrough`|  
|<xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>|`MissingSchemaAction.Add`|  
|<xref:System.Data.Common.DataAdapter.TableMappings%2A>|<xref:System.Data.Common.DataAdapter.TableMappings%2A> 物件的陣列。|  
  
 您可以變更任何這些屬性，透過呼叫另一個屬性的值。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DataAdapter (System.Data.Common.DataAdapter from);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Data.Common.DataAdapter from) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DataAdapter.#ctor(System.Data.Common.DataAdapter)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (from As DataAdapter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DataAdapter(System::Data::Common::DataAdapter ^ from);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="from" Type="System.Data.Common.DataAdapter" />
      </Parameters>
      <Docs>
        <param name="from">
          <see cref="T:System.Data.Common.DataAdapter" /> 物件，用來建立新的 <see cref="T:System.Data.Common.DataAdapter" />。</param>
        <summary>從相同類型的現有物件，初始化 <see cref="T:System.Data.Common.DataAdapter" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個多載<xref:System.Data.Common.DataAdapter>建構函式適用於.NET Framework 資料提供者實作 clone 實作中使用類似的建構函式時。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AcceptChangesDuringFill">
      <MemberSignature Language="C#" Value="public bool AcceptChangesDuringFill { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AcceptChangesDuringFill" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DataAdapter.AcceptChangesDuringFill" />
      <MemberSignature Language="VB.NET" Value="Public Property AcceptChangesDuringFill As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AcceptChangesDuringFill { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，指出在任何一種 **Fill** 作業期間，當 <see cref="T:System.Data.DataRow" /> 新增至 <see cref="T:System.Data.DataTable" /> 之後，是否要在其上呼叫 <see cref="M:System.Data.DataRow.AcceptChanges" />。</summary>
        <value>
          如果在 <see cref="M:System.Data.DataRow.AcceptChanges" /> 上呼叫 <see cref="T:System.Data.DataRow" />，則為 <see langword="true" />，否則為 <see langword="false" />。 預設值為 <see langword="true" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果`false`，<xref:System.Data.DataRow.AcceptChanges%2A>未呼叫 vspackage，以及新加入的資料列視為插入的資料列。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AcceptChangesDuringUpdate">
      <MemberSignature Language="C#" Value="public bool AcceptChangesDuringUpdate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AcceptChangesDuringUpdate" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DataAdapter.AcceptChangesDuringUpdate" />
      <MemberSignature Language="VB.NET" Value="Public Property AcceptChangesDuringUpdate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AcceptChangesDuringUpdate { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定在 <see cref="M:System.Data.DataRow.AcceptChanges" /> 期間是否呼叫 <see cref="M:System.Data.Common.DataAdapter.Update(System.Data.DataSet)" />。</summary>
        <value>
          如果在 <see cref="M:System.Data.DataRow.AcceptChanges" /> 期間呼叫 <see cref="M:System.Data.Common.DataAdapter.Update(System.Data.DataSet)" />，則為 <see langword="true" />，否則為 <see langword="false" />。 預設值為 <see langword="true" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在呼叫`Update`方法`DataAdapter`，資料庫可以傳送資料回 ADO.NET 應用程式做為輸出參數或做為第一個傳回結果集的記錄。 ADO.NET 可以擷取這些值並在正在更新的 <xref:System.Data.DataRow> 中更新對應的資料行。 根據預設，ADO.NET 呼叫`AcceptChanges`方法`DataRow`更新之後。 不過，如果您想要合併更新的資料列放回另一個<xref:System.Data.DataTable>，您可能想要保留主要索引鍵資料行的原始值。 例如，主索引鍵資料行對應至資料庫，例如識別資料行中的自動遞增資料行可以包含新值指派資料庫的不符合中指派的原始值`DataRow`。 根據預設，`AcceptChanges`之後更新和原始值的資料列可能已在隱含地呼叫<xref:System.Data.DataColumn.AutoIncrement%2A>ADO.NET 中，所指派的值會遺失。 您可以保留中的原始值`DataRow`藉由防止`ADO.NET`呼叫`AcceptChanges`它藉由設定執行資料列更新之後<xref:System.Data.Common.DataAdapter.AcceptChangesDuringUpdate%2A>屬性`false`，保留原始值。  
  
> [!NOTE]
>  設定`AcceptChangesDuringUpdate`屬性`false`適用於所有資料修改，不只會插入。 如果您想要編輯或刪除資料列，在相同的更新中，而且您想要隱藏呼叫`AcceptChanges`只會針對插入，則不會設定`AccceptChangesDuringUpdate`至`false`，使用的事件處理常式`RowUpdated`事件`DataAdapter`。 在事件處理常式可以檢查<xref:System.Data.Common.RowUpdatedEventArgs.StatementType%2A>可判斷資料的修改是插入、 以及如果`true`，將<xref:System.Data.Common.RowUpdatedEventArgs.Status%2A>屬性<xref:System.Data.Common.RowUpdatedEventArgs>至<xref:System.Data.UpdateStatus.SkipCurrentRow>。 如需詳細資訊和範例，請參閱[擷取識別或自動編號值](~/docs/framework/data/adonet/retrieving-identity-or-autonumber-values.md)。  
  
   
  
## Examples  
 這則範例會示範如何從 `DataTable` 中擷取已變更的資料列，以及使用 <xref:System.Data.SqlClient.SqlDataAdapter> 來更新資料來源並擷取新的識別資料行值。 藉由設定`AcceptChangesDuringUpdate`屬性<xref:System.Data.SqlClient.SqlDataAdapter>至`false`保留原始的自動遞增值，新的資料可以合併至原始<xref:System.Data.DataTable>，即使新的識別值不符合原始自動遞增中的值`DataTable`。  
  
 [!code-csharp[DataWorks SqlClient.AcceptChangesDuringUpdate#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlClient.AcceptChangesDuringUpdate/CS/source.cs#1)]
 [!code-vb[DataWorks SqlClient.AcceptChangesDuringUpdate#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlClient.AcceptChangesDuringUpdate/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneInternals">
      <MemberSignature Language="C#" Value="protected virtual System.Data.Common.DataAdapter CloneInternals ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.Common.DataAdapter CloneInternals() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DataAdapter.CloneInternals" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CloneInternals () As DataAdapter" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Data::Common::DataAdapter ^ CloneInternals();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("CloneInternals() has been deprecated.  Use the DataAdapter(DataAdapter from) constructor.  http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Common.DataAdapter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>建立 <see cref="T:System.Data.Common.DataAdapter" /> 的這個執行個體的複本。</summary>
        <returns>
          <see cref="T:System.Data.Common.DataAdapter" /> 的複製 (Clone) 執行個體。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法已被取代。 <xref:System.Data.Common.DataAdapter.%23ctor%2A>應該使用建構函式，而不是此方法。  
  
 所有命令， <xref:System.Data.Common.DataAdapter.TableMappings%2A>、 <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>，而<xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>就會遭到複製。 不過，命令的連接不會複製，而共用。 因此，複製<xref:System.Data.Common.DataAdapter>可針對與原始連線相同。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>在覆寫<see cref="M:System.Data.Common.DataAdapter.CloneInternals" />在衍生類別中，請務必呼叫基底類別的<see cref="M:System.Data.Common.DataAdapter.CloneInternals" />方法。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="ContinueUpdateOnError">
      <MemberSignature Language="C#" Value="public bool ContinueUpdateOnError { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ContinueUpdateOnError" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DataAdapter.ContinueUpdateOnError" />
      <MemberSignature Language="VB.NET" Value="Public Property ContinueUpdateOnError As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ContinueUpdateOnError { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定數值，指定當資料列更新期間發生錯誤時，是否產生例外狀況。</summary>
        <value>
          若要繼續更新而不產生例外狀況，則為 <see langword="true" />，否則為 <see langword="false" />。 預設值為 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果`ContinueUpdateOnError`設`true`，一個資料列更新期間發生錯誤時，會擲回任何例外狀況。 已略過資料列的更新，而錯誤資訊放在<xref:System.Data.DataRow.RowError%2A>錯誤中的資料列的屬性。 <xref:System.Data.Common.DataAdapter>繼續更新後續資料列。  
  
 如果`ContinueUpdateOnError`設`false`，一個資料列更新期間發生錯誤時，會擲回例外狀況。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateTableMappings">
      <MemberSignature Language="C#" Value="protected virtual System.Data.Common.DataTableMappingCollection CreateTableMappings ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.Common.DataTableMappingCollection CreateTableMappings() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DataAdapter.CreateTableMappings" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateTableMappings () As DataTableMappingCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Data::Common::DataTableMappingCollection ^ CreateTableMappings();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DataTableMappingCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>建立新的 <see cref="T:System.Data.Common.DataTableMappingCollection" />。</summary>
        <returns>新的資料表對應集合。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DataAdapter.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <see langword="true" /> 表示釋放 Managed 和 Unmanaged 資源，<see langword="false" /> 則表示只釋放 Unmanaged 資源。</param>
        <summary>釋放 <see cref="T:System.Data.Common.DataAdapter" /> 所使用的 Unmanaged 資源，並選擇性地釋放 Managed 資源。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法會呼叫公用<xref:System.IDisposable.Dispose%2A>方法和<xref:System.Object.Finalize%2A>方法。 `Dispose` 叫用受保護`Dispose(Boolean)`方法`disposing`參數設定為`true`。 <xref:System.Object.Finalize%2A> 叫用`Dispose`與`disposing`設`false`。  
  
 `disposing` 參數為 `true` 時，這個方法會釋放 <xref:System.Data.Common.DataAdapter> 參考的任何 Managed 物件所掌握的資源。 這個方法會叫用每個參考物件的 `Dispose` 方法。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <see langword="Dispose" /> 可以被其他物件呼叫多次。 在覆寫<see langword="Dispose(Boolean)" />，請小心不要參考到已處置的早期呼叫中的物件<see langword="Dispose" />。 如需有關如何實作<see langword="Dispose(Boolean)" />，請參閱[實作 Dispose 方法](~/docs/standard/garbage-collection/implementing-dispose.md)。  
  
 如需有關<see langword="Dispose" />和<see cref="M:System.Object.Finalize" />，請參閱[清除 Unmanaged 資源上](~/docs/standard/garbage-collection/unmanaged.md)和[覆寫 Finalize 方法](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)。</para>
        </block>
      </Docs>
    </Member>
    <MemberGroup MemberName="Fill">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>新增或重新整理 <see cref="T:System.Data.DataSet" /> 中的資料列，使其符合資料來源中的資料列。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="public virtual int Fill (System.Data.DataSet dataSet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Fill(class System.Data.DataSet dataSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DataAdapter.Fill(System.Data.DataSet)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Fill(System::Data::DataSet ^ dataSet);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataAdapter.Fill(System.Data.DataSet)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
      </Parameters>
      <Docs>
        <param name="dataSet">要填入資料錄和結構描述 (如果必要的話) 的 <see cref="T:System.Data.DataSet" />。</param>
        <summary>新增或重新整理 <see cref="T:System.Data.DataSet" /> 中的資料列，使其符合資料來源中的資料列。</summary>
        <returns>成功加入至 <see cref="T:System.Data.DataSet" /> 或在其中重新整理的資料列數目。 這不包含被不傳回資料列之陳述式所影響的資料列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Common.DataAdapter.Fill%2A>方法會從使用 SELECT 陳述式指定由相關聯的資料來源擷取資料列<xref:System.Data.IDbDataAdapter.SelectCommand%2A>屬性。 SELECT 陳述式相關聯的連接物件必須有效，但它不需要開啟。 如果連接已關閉之前<xref:System.Data.Common.DataAdapter.Fill%2A>是呼叫，它會開啟擷取資料，然後關閉。 如果連接為開啟之前<xref:System.Data.Common.DataAdapter.Fill%2A>是呼叫，它會保持開啟狀態。  
  
 <xref:System.Data.Common.DataAdapter.Fill%2A>作業接著會將資料列加入到目的地<xref:System.Data.DataTable>中的物件<xref:System.Data.DataSet>、 建立<xref:System.Data.DataTable>如果它們尚不存在的物件。 建立時<xref:System.Data.DataTable>物件<xref:System.Data.Common.DataAdapter.Fill%2A>作業通常會建立只有資料行名稱中繼資料。 不過，如果<xref:System.Data.IDataAdapter.MissingSchemaAction%2A>屬性設定為`AddWithKey`，也會建立適當的主索引鍵和條件約束。  
  
 如果 `SelectCommand` 傳回 OUTER JOIN 的結果，則 `DataAdapter` 便不會為產生的 <xref:System.Data.DataTable.PrimaryKey%2A> 設定 <xref:System.Data.DataTable> 值。 您必須明確定義主索引鍵，以確保正確解析重複的資料列。 如需詳細資訊，請參閱[定義主索引鍵](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md)。  
  
 如果資料配接器遇到重複的資料行在填入<xref:System.Data.DataTable>，它會產生後續的資料行，並使用模式 」 columnname1"、"columnname2"、"columnname3 」 和等等的名稱。 如果內送資料中包含未命名資料行，它們會放置於<xref:System.Data.DataSet>根據模式"Column1"、"Column2"，等等。 當多個結果集加入至<xref:System.Data.DataSet>放置於個別的資料表中每個結果集。 其他結果集的命名方式是附加至指定的資料表名稱 （例如，"Table"、"Table1"、"Table2"等等） 的整數值。 使用資料行和資料表名稱的應用程式應確保這些命名模式衝突不會發生。  
  
 當 SELECT 陳述式用來填入<xref:System.Data.DataSet>傳回多個結果，例如批次 SQL 陳述式中，如果其中一個結果包含錯誤，所有後續的結果會略過且未新增到<xref:System.Data.DataSet>。  
  
 您可以使用<xref:System.Data.Common.DataAdapter.Fill%2A>上多次相同的方法<xref:System.Data.DataTable>。 如果主索引鍵存在，內送資料列會合併具有相符的資料列已經存在。 如果沒有主索引鍵存在，將內送資料列附加至<xref:System.Data.DataTable>。  
  
> [!NOTE]
>  處理批次傳回多個結果，實作的 SQL 陳述式時<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>的.NET Framework Data Provider for OLE DB 擷取，只有第一個結果的結構描述資訊。 若要擷取多個結果的結構描述資訊，請使用<xref:System.Data.Common.DbDataAdapter.Fill%2A>與<xref:System.Data.MissingSchemaAction>設`AddWithKey`。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.Common.DataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)" />
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="protected virtual int Fill (System.Data.DataTable dataTable, System.Data.IDataReader dataReader);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 Fill(class System.Data.DataTable dataTable, class System.Data.IDataReader dataReader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DataAdapter.Fill(System.Data.DataTable,System.Data.IDataReader)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int Fill(System::Data::DataTable ^ dataTable, System::Data::IDataReader ^ dataReader);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataTable" Type="System.Data.DataTable" />
        <Parameter Name="dataReader" Type="System.Data.IDataReader" />
      </Parameters>
      <Docs>
        <param name="dataTable">要填入資料錄的 <see cref="T:System.Data.DataTable" />。</param>
        <param name="dataReader">
          <see cref="T:System.Data.IDataReader" /> 的執行個體。</param>
        <summary>使用 <see cref="T:System.Data.DataTable" /> 名稱和指定的 <see cref="T:System.Data.DataTable" />，加入或重新整理 <see cref="T:System.Data.IDataReader" /> 中的資料列，以符合資料來源中的資料列。</summary>
        <returns>成功加入至 <see cref="T:System.Data.DataTable" /> 或在其中重新整理的資料列數目。 這不包含被不傳回資料列之陳述式所影響的資料列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 請參閱備註`System.Data.Common.DataAdapter.Fill(System.Data.DataSet)`如需詳細資訊。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="protected virtual int Fill (System.Data.DataTable[] dataTables, System.Data.IDataReader dataReader, int startRecord, int maxRecords);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 Fill(class System.Data.DataTable[] dataTables, class System.Data.IDataReader dataReader, int32 startRecord, int32 maxRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DataAdapter.Fill(System.Data.DataTable[],System.Data.IDataReader,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function Fill (dataTables As DataTable(), dataReader As IDataReader, startRecord As Integer, maxRecords As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int Fill(cli::array &lt;System::Data::DataTable ^&gt; ^ dataTables, System::Data::IDataReader ^ dataReader, int startRecord, int maxRecords);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataTables" Type="System.Data.DataTable[]" />
        <Parameter Name="dataReader" Type="System.Data.IDataReader" />
        <Parameter Name="startRecord" Type="System.Int32" />
        <Parameter Name="maxRecords" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dataTables">要填入資料錄的 <see cref="T:System.Data.DataTable" /> 物件集合。</param>
        <param name="dataReader">
          <see cref="T:System.Data.IDataReader" /> 的執行個體。</param>
        <param name="startRecord">起始記錄之以零起始的索引。</param>
        <param name="maxRecords">整數，表示資料錄的最大數目。</param>
        <summary>在 <see cref="T:System.Data.DataTable" /> 物件集合中所指定的範圍內加入或重新整理資料列，以符合那些在資料來源中的資料列。</summary>
        <returns>成功加入至 <see cref="T:System.Data.DataTable" /> 或在其中重新整理的資料列數目。 這不包含被不傳回資料列之陳述式所影響的資料列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 請參閱備註`System.Data.Common.DataAdapter.Fill(System.Data.DataSet)`如需詳細資訊。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="protected virtual int Fill (System.Data.DataSet dataSet, string srcTable, System.Data.IDataReader dataReader, int startRecord, int maxRecords);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 Fill(class System.Data.DataSet dataSet, string srcTable, class System.Data.IDataReader dataReader, int32 startRecord, int32 maxRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DataAdapter.Fill(System.Data.DataSet,System.String,System.Data.IDataReader,System.Int32,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int Fill(System::Data::DataSet ^ dataSet, System::String ^ srcTable, System::Data::IDataReader ^ dataReader, int startRecord, int maxRecords);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
        <Parameter Name="srcTable" Type="System.String" />
        <Parameter Name="dataReader" Type="System.Data.IDataReader" />
        <Parameter Name="startRecord" Type="System.Int32" />
        <Parameter Name="maxRecords" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dataSet">要填入資料錄的 <see cref="T:System.Data.DataSet" />。</param>
        <param name="srcTable">字串，表示來源資料表的名稱。</param>
        <param name="dataReader">
          <see cref="T:System.Data.IDataReader" /> 的執行個體。</param>
        <param name="startRecord">起始記錄之以零起始的索引。</param>
        <param name="maxRecords">整數，表示資料錄的最大數目。</param>
        <summary>使用 <see cref="T:System.Data.DataSet" /> 和 <see cref="T:System.Data.DataSet" /> 名稱，加入或重新整理 <see cref="T:System.Data.DataTable" /> 中指定範圍內的資料列，以符合那些在資料來源中的資料列。</summary>
        <returns>成功加入至 <see cref="T:System.Data.DataSet" /> 或在其中重新整理的資料列數目。 這不包含被不傳回資料列之陳述式所影響的資料列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 請參閱備註`System.Data.Common.DataAdapter.Fill(System.Data.DataSet)`如需詳細資訊。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FillError">
      <MemberSignature Language="C#" Value="public event System.Data.FillErrorEventHandler FillError;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.FillErrorEventHandler FillError" />
      <MemberSignature Language="DocId" Value="E:System.Data.Common.DataAdapter.FillError" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event FillError As FillErrorEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::FillErrorEventHandler ^ FillError;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.FillErrorEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>當填入作業期間發生錯誤時傳回。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 **FillError**事件可讓使用者決定是否填滿作業應該繼續之後就會發生錯誤。 範例**FillError**事件可能是：  
  
-   要加入的資料`DataSet`無法轉換成 common language runtime 類型，而不會遺失有效位數。  
  
-   要加入的資料列包含違反條件約束必須強制執行上的資料`DataColumn`中`DataSet`。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FillLoadOption">
      <MemberSignature Language="C#" Value="public System.Data.LoadOption FillLoadOption { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.LoadOption FillLoadOption" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DataAdapter.FillLoadOption" />
      <MemberSignature Language="VB.NET" Value="Public Property FillLoadOption As LoadOption" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::LoadOption FillLoadOption { System::Data::LoadOption get(); void set(System::Data::LoadOption value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.LoadOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定 <see cref="T:System.Data.LoadOption" />，決定配接器如何從 <see cref="T:System.Data.DataTable" /> 填入 <see cref="T:System.Data.Common.DbDataReader" />。</summary>
        <value>
          <see cref="T:System.Data.LoadOption" /> 值。</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Data.LoadOption" />
      </Docs>
    </Member>
    <MemberGroup MemberName="FillSchema">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>將 <see cref="T:System.Data.DataTable" /> 加入至指定的 <see cref="T:System.Data.DataSet" />。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FillSchema">
      <MemberSignature Language="C#" Value="public virtual System.Data.DataTable[] FillSchema (System.Data.DataSet dataSet, System.Data.SchemaType schemaType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Data.DataTable[] FillSchema(class System.Data.DataSet dataSet, valuetype System.Data.SchemaType schemaType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Data::DataTable ^&gt; ^ FillSchema(System::Data::DataSet ^ dataSet, System::Data::SchemaType schemaType);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
        <Parameter Name="schemaType" Type="System.Data.SchemaType" />
      </Parameters>
      <Docs>
        <param name="dataSet">
          <see cref="T:System.Data.DataSet" />，以資料來源中的結構描述來填入其中。</param>
        <param name="schemaType">其中一個 <see cref="T:System.Data.SchemaType" /> 值。</param>
        <summary>將 <see cref="T:System.Data.DataTable" /> 加入至指定的 <see cref="T:System.Data.DataSet" />，並且根據指定的 <see cref="T:System.Data.SchemaType" /> 設定結構描述，以符合資料來源中的資料表。</summary>
        <returns>
          <see cref="T:System.Data.DataTable" /> 物件，包含從資料來源傳回的結構描述資訊。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Common.DataAdapter.FillSchema%2A>方法會擷取從資料來源使用的結構描述<xref:System.Data.IDbDataAdapter.SelectCommand%2A>。 連接物件相關聯<xref:System.Data.IDbDataAdapter.SelectCommand%2A>必須有效，但它不需要開啟。 如果連接已關閉之前<xref:System.Data.Common.DataAdapter.FillSchema%2A>是呼叫，它會開啟擷取資料並關閉。 如果連接為開啟之前<xref:System.Data.Common.DataAdapter.FillSchema%2A>是呼叫，它會保持開啟狀態。  
  
 A<xref:System.Data.Common.DataAdapter.FillSchema%2A>作業會將<xref:System.Data.DataTable>目的地<xref:System.Data.DataSet>。 接著它會加入至資料行<xref:System.Data.DataColumnCollection>的<xref:System.Data.DataTable>，並設定下列<xref:System.Data.DataColumn>如果存在於資料來源的屬性：  
  
-   <xref:System.Data.DataColumn.AllowDBNull%2A>  
  
-   <xref:System.Data.DataColumn.AutoIncrement%2A>。 您必須設定<xref:System.Data.DataColumn.AutoIncrementStep%2A>和<xref:System.Data.DataColumn.AutoIncrementSeed%2A>分開。  
  
-   <xref:System.Data.DataColumn.MaxLength%2A>  
  
-   <xref:System.Data.DataColumn.ReadOnly%2A>  
  
-   <xref:System.Data.DataColumn.Unique%2A>  
  
 <xref:System.Data.Common.DataAdapter.FillSchema%2A> 也會設定<xref:System.Data.DataTable.PrimaryKey%2A>和<xref:System.Data.DataTable.Constraints%2A>屬性根據下列規則：  
  
-   如果一或多個主索引鍵資料行所傳回<xref:System.Data.IDbDataAdapter.SelectCommand%2A>，它們會做為主要索引鍵資料行<xref:System.Data.DataTable>。  
  
-   如果傳回沒有主索引鍵資料行，但是唯一的資料行，唯一的資料行可用的主索引鍵，如果且只有唯一的資料行都不可為 null。 如果任何資料行可為 null，<xref:System.Data.UniqueConstraint>加入至<xref:System.Data.ConstraintCollection>，但<xref:System.Data.DataTable.PrimaryKey%2A>屬性未設定。  
  
-   如果傳回主要索引鍵資料行，唯一的資料行，將主索引鍵資料行做為主要索引鍵資料行<xref:System.Data.DataTable>。  
  
> [!NOTE]
>  基礎資料存放區可能會允許不支援的資料行屬性<xref:System.Data.DataColumn>，因而導致不正確轉譯的某些資料行屬性。 例如，SQL Server 可讓識別資料行資料類型為 tinyint 而<xref:System.Data.DataColumn>只允許 Int16、 Int32、 以及具有 Int64<xref:System.Data.DataColumn.AutoIncrement%2A>屬性集。 `FillSchema` 以無訊息方式略過的情況下其中<xref:System.Data.DataColumn>無法精確地反映資料來源，並擲回任何例外狀況。  
  
 請注意，會將主索引鍵和唯一條件約束加入至<xref:System.Data.ConstraintCollection>根據前述規則，但其他條件約束類型不會加入。  
  
如果唯一叢集索引上的資料行或 SQL Server 資料表中的資料行定義和叢集索引中的資料行的名稱將會傳回一組個別的資料行上定義主索引鍵條件約束。 若要傳回的主索引鍵資料行的名稱，使用指定名稱的主索引鍵的 SELECT 陳述式中的查詢提示。 如需有關指定查詢提示的詳細資訊，請參閱[查詢提示 (TRANSACT-SQL)](/sql/t-sql/queries/hints-transact-sql-query)。  
  
 如果<xref:System.Data.Common.DataAdapter>遇到重複的資料行在填入<xref:System.Data.DataTable>，它會產生後續的資料行，並使用模式的名稱"*columnname*1"，"*columnname*2"，"*columnname*3"等等。 如果內送資料中包含未命名資料行，它們會放置於<xref:System.Data.DataSet>根據模式"Column1"、"Column2"，等等。 當多個結果集加入至<xref:System.Data.DataSet>放置於個別的資料表中每個結果集。 其他結果集的命名方式是附加至指定的資料表名稱 （例如，"Table"、"Table1"、"Table2"等等） 的整數值。 使用資料行和資料表名稱的應用程式應確保這些命名模式衝突不會發生。  
  
 <xref:System.Data.Common.DataAdapter.FillSchema%2A> 不會傳回任何資料列。 使用<xref:System.Data.Common.DataAdapter.Fill%2A>方法，以將資料列加入<xref:System.Data.DataTable>。  
  
> [!NOTE]
>  處理批次傳回多個結果，實作的 SQL 陳述式時<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>的.NET Framework Data Provider for OLE DB 擷取，只有第一個結果的結構描述資訊。 若要擷取多個結果的結構描述資訊，請使用<xref:System.Data.Common.DbDataAdapter.Fill%2A>與<xref:System.Data.MissingSchemaAction>設`AddWithKey`。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.Common.DataAdapter.Fill(System.Data.DataSet)" />
      </Docs>
    </Member>
    <Member MemberName="FillSchema">
      <MemberSignature Language="C#" Value="protected virtual System.Data.DataTable FillSchema (System.Data.DataTable dataTable, System.Data.SchemaType schemaType, System.Data.IDataReader dataReader);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.DataTable FillSchema(class System.Data.DataTable dataTable, valuetype System.Data.SchemaType schemaType, class System.Data.IDataReader dataReader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDataReader)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Data::DataTable ^ FillSchema(System::Data::DataTable ^ dataTable, System::Data::SchemaType schemaType, System::Data::IDataReader ^ dataReader);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataTable" Type="System.Data.DataTable" />
        <Parameter Name="schemaType" Type="System.Data.SchemaType" />
        <Parameter Name="dataReader" Type="System.Data.IDataReader" />
      </Parameters>
      <Docs>
        <param name="dataTable">要從 <see cref="T:System.Data.DataTable" /> 中填入的 <see cref="T:System.Data.IDataReader" />。</param>
        <param name="schemaType">其中一個 <see cref="T:System.Data.SchemaType" /> 值。</param>
        <param name="dataReader">
          <see cref="T:System.Data.IDataReader" />，在填入 <see cref="T:System.Data.DataTable" /> 時用做資料來源。</param>
        <summary>將 <see cref="T:System.Data.DataTable" /> 加入至指定的 <see cref="T:System.Data.DataSet" />。</summary>
        <returns>
          <see cref="T:System.Data.DataTable" /> 物件，包含從資料來源傳回的結構描述資訊。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FillSchema">
      <MemberSignature Language="C#" Value="protected virtual System.Data.DataTable[] FillSchema (System.Data.DataSet dataSet, System.Data.SchemaType schemaType, string srcTable, System.Data.IDataReader dataReader);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.DataTable[] FillSchema(class System.Data.DataSet dataSet, valuetype System.Data.SchemaType schemaType, string srcTable, class System.Data.IDataReader dataReader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String,System.Data.IDataReader)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual cli::array &lt;System::Data::DataTable ^&gt; ^ FillSchema(System::Data::DataSet ^ dataSet, System::Data::SchemaType schemaType, System::String ^ srcTable, System::Data::IDataReader ^ dataReader);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
        <Parameter Name="schemaType" Type="System.Data.SchemaType" />
        <Parameter Name="srcTable" Type="System.String" />
        <Parameter Name="dataReader" Type="System.Data.IDataReader" />
      </Parameters>
      <Docs>
        <param name="dataSet">要從 <see cref="T:System.Data.DataTable" /> 中填入的 <see cref="T:System.Data.IDataReader" />。</param>
        <param name="schemaType">其中一個 <see cref="T:System.Data.SchemaType" /> 值。</param>
        <param name="srcTable">用於資料表對應的來源資料表名稱。</param>
        <param name="dataReader">
          <see cref="T:System.Data.IDataReader" />，在填入 <see cref="T:System.Data.DataTable" /> 時用做資料來源。</param>
        <summary>將 <see cref="T:System.Data.DataTable" /> 加入至指定的 <see cref="T:System.Data.DataSet" />。</summary>
        <returns>已加入至 <see cref="T:System.Data.DataTable" /> 之 <see cref="T:System.Data.DataSet" /> 物件集合的參考。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFillParameters">
      <MemberSignature Language="C#" Value="public virtual System.Data.IDataParameter[] GetFillParameters ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Data.IDataParameter[] GetFillParameters() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DataAdapter.GetFillParameters" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFillParameters () As IDataParameter()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Data::IDataParameter ^&gt; ^ GetFillParameters();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataAdapter.GetFillParameters</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.IDataParameter[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>取得在執行 SQL SELECT 陳述式時由使用者設定的參數。</summary>
        <returns>
          <see cref="T:System.Data.IDataParameter" /> 物件的陣列，含有由使用者設定的參數。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasTableMappings">
      <MemberSignature Language="C#" Value="protected bool HasTableMappings ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool HasTableMappings() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DataAdapter.HasTableMappings" />
      <MemberSignature Language="VB.NET" Value="Protected Function HasTableMappings () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool HasTableMappings();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>指出是否已經建立 <see cref="T:System.Data.Common.DataTableMappingCollection" />。</summary>
        <returns>
          如果已經建立 <see cref="T:System.Data.Common.DataTableMappingCollection" /> 則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MissingMappingAction">
      <MemberSignature Language="C#" Value="public System.Data.MissingMappingAction MissingMappingAction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.MissingMappingAction MissingMappingAction" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DataAdapter.MissingMappingAction" />
      <MemberSignature Language="VB.NET" Value="Public Property MissingMappingAction As MissingMappingAction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::MissingMappingAction MissingMappingAction { System::Data::MissingMappingAction get(); void set(System::Data::MissingMappingAction value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataAdapter.MissingMappingAction</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.MissingMappingAction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>判斷在傳入的資料不具有相符的資料表或資料行時要採取的動作。</summary>
        <value>其中一個 <see cref="T:System.Data.MissingMappingAction" /> 值。 預設值為 <see langword="Passthrough" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Common.DataAdapter.TableMappings%2A>屬性可提供傳回的記錄之間的主要對應和<xref:System.Data.DataSet>。  
  
   
  
## Examples  
 下列範例會建立衍生的類別，<xref:System.Data.OleDb.OleDbDataAdapter>並設定其屬性的某些。  
  
 [!code-csharp[Classic WebData DataAdapter.MissingMappingAction Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataAdapter.MissingMappingAction Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataAdapter.MissingMappingAction Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataAdapter.MissingMappingAction Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">設定的值不是其中一個 <see cref="T:System.Data.MissingMappingAction" /> 值。</exception>
        <altmember cref="P:System.Data.Common.DataAdapter.MissingSchemaAction" />
      </Docs>
    </Member>
    <Member MemberName="MissingSchemaAction">
      <MemberSignature Language="C#" Value="public System.Data.MissingSchemaAction MissingSchemaAction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.MissingSchemaAction MissingSchemaAction" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DataAdapter.MissingSchemaAction" />
      <MemberSignature Language="VB.NET" Value="Public Property MissingSchemaAction As MissingSchemaAction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::MissingSchemaAction MissingSchemaAction { System::Data::MissingSchemaAction get(); void set(System::Data::MissingSchemaAction value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataAdapter.MissingSchemaAction</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.MissingSchemaAction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>判斷在現有 <see cref="T:System.Data.DataSet" /> 結構描述 (Schema) 與傳入的資料不相符時要採取的動作。</summary>
        <value>其中一個 <see cref="T:System.Data.MissingSchemaAction" /> 值。 預設值為 <see langword="Add" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列範例會建立衍生的類別，<xref:System.Data.OleDb.OleDbDataAdapter>並設定其屬性的某些。  
  
 [!code-csharp[Classic WebData DataAdapter.MissingMappingAction Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataAdapter.MissingMappingAction Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataAdapter.MissingMappingAction Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataAdapter.MissingMappingAction Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">設定的值不是其中一個 <see cref="T:System.Data.MissingSchemaAction" /> 值。</exception>
        <altmember cref="P:System.Data.Common.DataAdapter.MissingMappingAction" />
      </Docs>
    </Member>
    <Member MemberName="OnFillError">
      <MemberSignature Language="C#" Value="protected virtual void OnFillError (System.Data.FillErrorEventArgs value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnFillError(class System.Data.FillErrorEventArgs value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DataAdapter.OnFillError(System.Data.FillErrorEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnFillError (value As FillErrorEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnFillError(System::Data::FillErrorEventArgs ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.FillErrorEventArgs" />
      </Parameters>
      <Docs>
        <param name="value">
          <see cref="T:System.Data.FillErrorEventArgs" /> 物件。</param>
        <summary>當在 <see langword="Fill" /> 期間發生錯誤時叫用。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetFillLoadOption">
      <MemberSignature Language="C#" Value="public void ResetFillLoadOption ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetFillLoadOption() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DataAdapter.ResetFillLoadOption" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetFillLoadOption ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetFillLoadOption();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>將 <see cref="P:System.Data.Common.DataAdapter.FillLoadOption" /> 重設為其預設狀態，並讓 <see cref="M:System.Data.Common.DataAdapter.Fill(System.Data.DataSet)" /> 接受 <see cref="P:System.Data.Common.DataAdapter.AcceptChangesDuringFill" />。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReturnProviderSpecificTypes">
      <MemberSignature Language="C#" Value="public virtual bool ReturnProviderSpecificTypes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReturnProviderSpecificTypes" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DataAdapter.ReturnProviderSpecificTypes" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ReturnProviderSpecificTypes As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ReturnProviderSpecificTypes { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定 <see langword="Fill" /> 方法應當傳回提供者特定的值，還是通用符合 CLS 標準的值。</summary>
        <value>
          如果 <see langword="true" /> 方法應傳回提供者特定的值，則為 <see langword="Fill" />，否則為 <see langword="false" />，表示傳回通用符合 CLS 標準的值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 預設值是 `false`。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeAcceptChangesDuringFill">
      <MemberSignature Language="C#" Value="public virtual bool ShouldSerializeAcceptChangesDuringFill ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ShouldSerializeAcceptChangesDuringFill() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DataAdapter.ShouldSerializeAcceptChangesDuringFill" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ShouldSerializeAcceptChangesDuringFill () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ShouldSerializeAcceptChangesDuringFill();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>判斷是否應該保存 <see cref="P:System.Data.Common.DataAdapter.AcceptChangesDuringFill" /> 屬性。</summary>
        <returns>
          如果保存 <see cref="P:System.Data.Common.DataAdapter.AcceptChangesDuringFill" /> 屬性則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeFillLoadOption">
      <MemberSignature Language="C#" Value="public virtual bool ShouldSerializeFillLoadOption ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ShouldSerializeFillLoadOption() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DataAdapter.ShouldSerializeFillLoadOption" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ShouldSerializeFillLoadOption () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ShouldSerializeFillLoadOption();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>判斷是否應該保存 <see cref="P:System.Data.Common.DataAdapter.FillLoadOption" /> 屬性。</summary>
        <returns>
          如果保存 <see cref="P:System.Data.Common.DataAdapter.FillLoadOption" /> 屬性則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeTableMappings">
      <MemberSignature Language="C#" Value="protected virtual bool ShouldSerializeTableMappings ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool ShouldSerializeTableMappings() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DataAdapter.ShouldSerializeTableMappings" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ShouldSerializeTableMappings () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool ShouldSerializeTableMappings();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>判斷一個或多個 <see cref="T:System.Data.Common.DataTableMapping" /> 物件是否存在並且應該保存 (Persist)。</summary>
        <returns>
          如果存在一個或多個 <see cref="T:System.Data.Common.DataTableMapping" /> 物件，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDataAdapter.TableMappings">
      <MemberSignature Language="C#" Value="System.Data.ITableMappingCollection System.Data.IDataAdapter.TableMappings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.ITableMappingCollection System.Data.IDataAdapter.TableMappings" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DataAdapter.System#Data#IDataAdapter#TableMappings" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property TableMappings As ITableMappingCollection Implements IDataAdapter.TableMappings" />
      <MemberSignature Language="C++ CLI" Value="property System::Data::ITableMappingCollection ^ System.Data.IDataAdapter.TableMappings { System::Data::ITableMappingCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataAdapter.TableMappings</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.ITableMappingCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指示來源資料表如何對應至資料集資料表。</summary>
        <value>集合，提供傳回的資料錄和 <see cref="T:System.Data.DataSet" /> 之間的主要對應。 預設值為空集合。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個成員是明確介面成員實作， 只有在 <xref:System.Data.Common.DataAdapter> 執行個體轉換成 <xref:System.Data.IDataAdapter> 介面時，才能使用這個成員。  
  
 如需詳細資訊，請參閱<xref:System.Data.IDataAdapter.TableMappings%2A>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TableMappings">
      <MemberSignature Language="C#" Value="public System.Data.Common.DataTableMappingCollection TableMappings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DataTableMappingCollection TableMappings" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DataAdapter.TableMappings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TableMappings As DataTableMappingCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Common::DataTableMappingCollection ^ TableMappings { System::Data::Common::DataTableMappingCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Common.DataTableMappingCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得提供來源資料表和 <see cref="T:System.Data.DataTable" /> 之間主要對應的集合。</summary>
        <value>集合，提供傳回的資料錄和 <see cref="T:System.Data.DataSet" /> 之間的主要對應。 預設值為空集合。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 協調變更，當<xref:System.Data.Common.DataAdapter>使用<xref:System.Data.Common.DataTableMappingCollection>要產生關聯所用的資料來源所使用的資料行名稱的資料行名稱集合<xref:System.Data.DataSet>。  
  
   
  
## Examples  
 下列範例會使用衍生的類別， <xref:System.Data.OleDb.OleDbDataAdapter>、 加入<xref:System.Data.Common.DataTableMapping>物件加入至其<xref:System.Data.Common.DataAdapter.TableMappings%2A>收集及顯示一份那些對應來源資料表。 這個範例假設<xref:System.Data.OleDb.OleDbDataAdapter>已經建立。  
  
 [!code-csharp[Classic WebData DataAdapter.TableMappings Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataAdapter.TableMappings Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataAdapter.TableMappings Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataAdapter.TableMappings Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public virtual int Update (System.Data.DataSet dataSet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Update(class System.Data.DataSet dataSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DataAdapter.Update(System.Data.DataSet)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Update(System::Data::DataSet ^ dataSet);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataAdapter.Update(System.Data.DataSet)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
      </Parameters>
      <Docs>
        <param name="dataSet">用來更新資料來源的 <see cref="T:System.Data.DataSet" />。</param>
        <summary>從名為 "Table" 之 <see cref="T:System.Data.DataSet" /> 的指定 <see cref="T:System.Data.DataTable" /> 中，為每個插入、更新或刪除的資料列分別呼叫 INSERT、UPDATE 或 DELETE 陳述式。</summary>
        <returns>自 <see cref="T:System.Data.DataSet" /> 中成功更新的資料列數目。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 執行更新時，為基礎的資料列。 每個插入、 修改和刪除資料列，<xref:System.Data.Common.DataAdapter.Update%2A>方法會判斷已在其上執行變更的類型 （插入、 更新或刪除）。 根據變更的類型`Insert`，`Update,`或`Delete`傳播修改過的資料列至資料來源執行命令範本。 當應用程式呼叫<xref:System.Data.Common.DataAdapter.Update%2A>方法，<xref:System.Data.Common.DataAdapter>檢查<xref:System.Data.DataRow.RowState%2A>屬性，並執行必要的 INSERT、 UPDATE 或 DELETE 陳述式，反覆地針對每個資料列，並根據中設定的索引順序<xref:System.Data.DataSet>. 例如，<xref:System.Data.Common.DataAdapter.Update%2A>可能會執行 DELETE 陳述式，後面接著 INSERT 陳述式，則另一個的 DELETE 陳述式，所以中的資料列的排序<xref:System.Data.DataTable>。  
  
 請注意這些陳述式不會執行以批次的處理程序。個別更新每個資料列。 應用程式可以呼叫<xref:System.Data.DataSet.GetChanges%2A>情況下，您必須在其中控制陳述式型別序列中的方法 （例如，更新之前插入）。 如需詳細資訊，請參閱[以 Dataadapter 更新資料來源](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md)。  
  
 如果尚未指定 INSERT、 UPDATE 或 DELETE 陳述式，<xref:System.Data.Common.DataAdapter.Update%2A>方法會產生例外狀況。 不過，您可以建立<xref:System.Data.SqlClient.SqlCommandBuilder>或<xref:System.Data.OleDb.OleDbCommandBuilder>物件來自動產生的單一資料表更新 SQL 陳述式，如果您設定`SelectCommand`.NET Framework 資料提供者的屬性。 然後，您未設定任何其他 SQL 陳述式由產生**CommandBuilder**。 此產生邏輯需要索引鍵資料行資訊會出現在<xref:System.Data.DataSet>。 如需詳細資訊，請參閱[Commandbuilder 產生命令](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)。  
  
 <xref:System.Data.Common.DataAdapter.Update%2A>方法會從執行更新前的第一個對應中所列的資料表擷取資料列。 <xref:System.Data.Common.DataAdapter.Update%2A>然後重新整理使用的值的資料列<xref:System.Data.IDbCommand.UpdatedRowSource%2A>屬性。 傳回的任何其他資料列都會被忽略。  
  
 任何資料會載入回後<xref:System.Data.DataSet>、<xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A>引發事件，讓使用者檢查調解<xref:System.Data.DataSet>資料列和任何輸出命令所傳回的參數。 已成功更新資料列之後，會接受該資料列所做的變更。  
  
 當使用<xref:System.Data.Common.DataAdapter.Update%2A>，執行的順序如下所示：  
  
1.  中的值<xref:System.Data.DataRow>移到參數值。  
  
2.  便會引發 <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> 事件。  
  
3.  執行命令。  
  
4.  如果命令設定為`FirstReturnedRecord`，則第一個傳回的結果放在<xref:System.Data.DataRow>。  
  
5.  如果沒有輸出參數，它們會放置於<xref:System.Data.DataRow>。  
  
6.  便會引發 <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> 事件。  
  
7.  呼叫 <xref:System.Data.DataRow.AcceptChanges%2A?displayProperty=nameWithType>。 這會引發兩<xref:System.Data.DataTable.RowChanging?displayProperty=nameWithType>和<xref:System.Data.DataTable.RowChanged?displayProperty=nameWithType>更新事件<xref:System.Data.DataRow>。  
  
 每個相關聯的命令<xref:System.Data.Common.DataAdapter>通常會有與它關聯的參數集合。 參數對應到目前的資料列，透過`SourceColumn`和`SourceVersion`的.NET 資料提供者的屬性`Parameter`類別。 `SourceColumn` 是指<xref:System.Data.DataTable>資料行，<xref:System.Data.Common.DataAdapter>以取得目前資料列的參數值的參考。  
  
 `SourceColumn` 在套用任何資料表對應之前，是指未對應的資料行名稱。 如果`SourceColumn`參考到不存在的資料行中，所採取的動作取決於下列其中一種<xref:System.Data.MissingMappingAction>值。  
  
|列舉值|採取的動作|  
|-----------------------|------------------|  
|`MissingMappingAction.Passthrough`|使用中的資料表名稱與來源資料行名稱<xref:System.Data.DataSet>如果不不存在任何對應。|  
|`MissingMappingAction.Ignore`|A<xref:System.SystemException>產生。 對應已明確設定，當遺漏對應的輸入參數通常是錯誤的結果。|  
|`MissingMappingAction.Error`|A<xref:System.SystemException>產生。|  
  
 `SourceColumn`屬性也用來對應輸出的值，或輸入/輸出參數回`DataSet`。 如果它是指不存在的資料行，會產生例外狀況。  
  
 `SourceVersion` .NET 資料提供者的屬性`Parameter`類別會決定是否要使用的資料行值的原始、 Current 或 Proposed 版本。 這項功能通常用於在 UPDATE 陳述式來檢查有開放式同步存取違規的 WHERE 子句中包含原始值。  
  
 呼叫<xref:System.Data.DataSet.AcceptChanges%2A>方法或<xref:System.Data.DataTable.AcceptChanges%2A>方法將會認可中的所有變更<xref:System.Data.DataSet>或<xref:System.Data.DataTable>。 如果其中一種方法呼叫之前<xref:System.Data.Common.DbDataAdapter.Update%2A>呼叫方法時，不會認可變更時<xref:System.Data.Common.DbDataAdapter.Update%2A>呼叫方法時，除非後進行進一步變更<xref:System.Data.DataSet.AcceptChanges%2A>或<xref:System.Data.DataTable.AcceptChanges%2A>呼叫。  
  
> [!NOTE]
>  如果在更新的資料列時發生錯誤，擲回例外狀況，並執行更新已停用。 若要繼續更新作業，而不會產生例外狀況，當發生錯誤時，設定<xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A>屬性`true`之前先呼叫<xref:System.Data.Common.DbDataAdapter.Update%2A>。 您可能也會回應內的每個資料列基礎上的錯誤`RowUpdated`DataAdapter 的事件。 若要繼續更新作業，而不會產生例外狀況中的`RowUpdated`設定事件，<xref:System.Data.Common.RowUpdatedEventArgs.Status%2A>屬性<xref:System.Data.Common.RowUpdatedEventArgs>至<xref:System.Data.UpdateStatus.Continue>。  
>   
>  每個資料行，您將傳播到資料來源上<xref:System.Data.Common.DataAdapter.Update%2A>，參數應該加入至`InsertCommand`， `UpdateCommand`，或`DeleteCommand`。 `SourceColumn`參數的屬性應該設定為資料行的名稱。 此設定表示參數的值未以手動方式設定，但會從目前所處理的資料列中的特定資料行中取得。  
  
   
  
## Examples  
 下列範例會使用衍生的類別，<xref:System.Data.OleDb.OleDbDataAdapter>至<xref:System.Data.Common.DataAdapter.Update%2A>資料來源。  
  
 [!code-csharp[Classic WebData DataAdapter.IDataAdapter.Update Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataAdapter.IDataAdapter.Update Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataAdapter.IDataAdapter.Update Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataAdapter.IDataAdapter.Update Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">來源資料表無效。</exception>
        <exception cref="T:System.Data.DBConcurrencyException">嘗試執行 INSERT、UPDATE 或 DELETE 陳述式會造成沒有資料錄受影響。</exception>
      </Docs>
    </Member>
  </Members>
</Type>