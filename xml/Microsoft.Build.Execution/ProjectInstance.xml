<Type Name="ProjectInstance" FullName="Microsoft.Build.Execution.ProjectInstance">
  <TypeSignature Language="C#" Value="public class ProjectInstance" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ProjectInstance extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Execution.ProjectInstance" />
  <TypeSignature Language="VB.NET" Value="Public Class ProjectInstance" />
  <TypeSignature Language="C++ CLI" Value="public ref class ProjectInstance" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("{FullPath} #Targets={TargetsCount} DefaultTargets={(DefaultTargets == null) ? System.String.Empty : System.String.Join(";", DefaultTargets.ToArray())} ToolsVersion={Toolset.ToolsVersion} InitialTargets={(InitialTargets == null) ? System.String.Empty : System.String.Join(";", InitialTargets.ToArray())} #GlobalProperties={globalProperties.Count} #Properties={properties.Count} #ItemTypes={items.ItemTypes.Count} #Items={items.Count}")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="f0e98-101">表示專案執行個體。</span><span class="sxs-lookup"><span data-stu-id="f0e98-101">Represents a project instance.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0e98-102">專案會複製時，就會產生這個類別的執行個體。</span><span class="sxs-lookup"><span data-stu-id="f0e98-102">Instances of this class result when a project is cloned.</span></span> <span data-ttu-id="f0e98-103">建構函式是以要求使用者從現有的專案建立的專案執行個體內部的。</span><span class="sxs-lookup"><span data-stu-id="f0e98-103">Constructors are internal in order to require users to create project instances from existing projects.</span></span>  
  
 <span data-ttu-id="f0e98-104">新的專案執行個體不變的不同之處在於執行個體的項目可以加入它們，並對它們設定執行個體屬性。</span><span class="sxs-lookup"><span data-stu-id="f0e98-104">New project instances are immutable, except that instance items can be added to them and instance properties set on them.</span></span> <span data-ttu-id="f0e98-105">專案的執行個體適合，因為可以修改並不會干擾原始專案中建立數次。</span><span class="sxs-lookup"><span data-stu-id="f0e98-105">Project instances are useful because they can be modified and built several times without disturbing the original project.</span></span>  
  
 <span data-ttu-id="f0e98-106">這個類別的任何都其構成份子允許具有其參照<xref:Microsoft.Build.Construction>或<xref:Microsoft.Build.Evaluation>物件。</span><span class="sxs-lookup"><span data-stu-id="f0e98-106">Neither this class nor any of its constituents is allowed to have references to <xref:Microsoft.Build.Construction> or <xref:Microsoft.Build.Evaluation> objects.</span></span>  
  
 <span data-ttu-id="f0e98-107">不會顯示專案的目標執行個體、 裝載服務和工作登錄。</span><span class="sxs-lookup"><span data-stu-id="f0e98-107">Project instance targets, host services, and the task registry are not exposed.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f0e98-108">建立新的專案執行個體。</span><span class="sxs-lookup"><span data-stu-id="f0e98-108">Creates a new project instance.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProjectInstance (Microsoft.Build.Construction.ProjectRootElement xml);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Build.Construction.ProjectRootElement xml) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.#ctor(Microsoft.Build.Construction.ProjectRootElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (xml As ProjectRootElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProjectInstance(Microsoft::Build::Construction::ProjectRootElement ^ xml);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xml" Type="Microsoft.Build.Construction.ProjectRootElement" />
      </Parameters>
      <Docs>
        <param name="xml"><span data-ttu-id="f0e98-109">專案根項目。</span><span class="sxs-lookup"><span data-stu-id="f0e98-109">The project root element.</span></span></param>
        <summary><span data-ttu-id="f0e98-110">使用預設專案集合，從指定的專案根項目建立新的專案執行個體並加以初始化。</span><span class="sxs-lookup"><span data-stu-id="f0e98-110">Creates a new project instance and initializes it from the given project root, using the default project collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0e98-111">沒有中繼<xref:Microsoft.Build.Evaluation.Project>建立物件。</span><span class="sxs-lookup"><span data-stu-id="f0e98-111">No intermediate <xref:Microsoft.Build.Evaluation.Project> object is created.</span></span> <span data-ttu-id="f0e98-112">這如果專案所建置，但不是顯示或編輯將會非常有用。</span><span class="sxs-lookup"><span data-stu-id="f0e98-112">This is useful if a project is going to be built, but not displayed or edited.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProjectInstance (string projectFile);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string projectFile) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (projectFile As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProjectInstance(System::String ^ projectFile);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="projectFile" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="projectFile"><span data-ttu-id="f0e98-113">專案檔的名稱。</span><span class="sxs-lookup"><span data-stu-id="f0e98-113">The name of the project file.</span></span></param>
        <summary><span data-ttu-id="f0e98-114">使用預設專案集合，從指定的專案檔建立新的專案執行個體並加以初始化。</span><span class="sxs-lookup"><span data-stu-id="f0e98-114">Creates a new project instance and initializes it from the given project file, using the default project collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0e98-115">沒有中繼<xref:Microsoft.Build.Evaluation.Project>建立物件。</span><span class="sxs-lookup"><span data-stu-id="f0e98-115">No intermediate <xref:Microsoft.Build.Evaluation.Project> object is created.</span></span> <span data-ttu-id="f0e98-116">這如果專案所建置，但不是顯示或編輯將會非常有用。</span><span class="sxs-lookup"><span data-stu-id="f0e98-116">This is useful if a project is going to be built, but not displayed or edited.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProjectInstance (string projectFile, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string projectFile, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (projectFile As String, globalProperties As IDictionary(Of String, String), toolsVersion As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProjectInstance(System::String ^ projectFile, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="projectFile" Type="System.String" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="projectFile"><span data-ttu-id="f0e98-117">專案檔的名稱。</span><span class="sxs-lookup"><span data-stu-id="f0e98-117">The name of the project file.</span></span></param>
        <param name="globalProperties"><span data-ttu-id="f0e98-118">要使用的全域屬性。</span><span class="sxs-lookup"><span data-stu-id="f0e98-118">The global properties to use.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="f0e98-119">工具版本。</span><span class="sxs-lookup"><span data-stu-id="f0e98-119">The tools version.</span></span></param>
        <summary><span data-ttu-id="f0e98-120">使用指定的全域屬性、工具版本和預設專案集合，從指定的專案檔建立新的專案執行個體並加以初始化。</span><span class="sxs-lookup"><span data-stu-id="f0e98-120">Creates a new project instance and initializes it from the given project file, using the given global properties, tools version, and the default project collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0e98-121">沒有中繼<xref:Microsoft.Build.Evaluation.Project>建立物件。</span><span class="sxs-lookup"><span data-stu-id="f0e98-121">No intermediate <xref:Microsoft.Build.Evaluation.Project> object is created.</span></span> <span data-ttu-id="f0e98-122">這如果專案所建置，但不是顯示或編輯將會非常有用。</span><span class="sxs-lookup"><span data-stu-id="f0e98-122">This is useful if a project is going to be built, but not displayed or edited.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProjectInstance (Microsoft.Build.Construction.ProjectRootElement xml, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Build.Construction.ProjectRootElement xml, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion, class Microsoft.Build.Evaluation.ProjectCollection projectCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProjectInstance(Microsoft::Build::Construction::ProjectRootElement ^ xml, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xml" Type="Microsoft.Build.Construction.ProjectRootElement" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
      </Parameters>
      <Docs>
        <param name="xml"><span data-ttu-id="f0e98-123">專案根項目。</span><span class="sxs-lookup"><span data-stu-id="f0e98-123">The project root element</span></span></param>
        <param name="globalProperties"><span data-ttu-id="f0e98-124">要使用的全域屬性。</span><span class="sxs-lookup"><span data-stu-id="f0e98-124">The global properties to use.</span></span> <span data-ttu-id="f0e98-125">可能是 Null。</span><span class="sxs-lookup"><span data-stu-id="f0e98-125">May be null.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="f0e98-126">工具版本。</span><span class="sxs-lookup"><span data-stu-id="f0e98-126">The tools version.</span></span> <span data-ttu-id="f0e98-127">可能是 Null。</span><span class="sxs-lookup"><span data-stu-id="f0e98-127">May be null.</span></span></param>
        <param name="projectCollection"><span data-ttu-id="f0e98-128">專案集合</span><span class="sxs-lookup"><span data-stu-id="f0e98-128">Project collection</span></span></param>
        <summary><span data-ttu-id="f0e98-129">使用指定的全域屬性、工具版本和專案集合，從指定的專案根項目建立新的專案執行個體並加以初始化。</span><span class="sxs-lookup"><span data-stu-id="f0e98-129">Creates a new project instance and initializes it from the given project root, using the given global properties, tools version, and project collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0e98-130">沒有中繼<xref:Microsoft.Build.Evaluation.Project>建立物件。</span><span class="sxs-lookup"><span data-stu-id="f0e98-130">No intermediate <xref:Microsoft.Build.Evaluation.Project> object is created.</span></span> <span data-ttu-id="f0e98-131">這如果專案所建置，但不是顯示或編輯將會非常有用。</span><span class="sxs-lookup"><span data-stu-id="f0e98-131">This is useful if a project is going to be built, but not displayed or edited.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProjectInstance (string projectFile, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string projectFile, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion, class Microsoft.Build.Evaluation.ProjectCollection projectCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProjectInstance(System::String ^ projectFile, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="projectFile" Type="System.String" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
      </Parameters>
      <Docs>
        <param name="projectFile"><span data-ttu-id="f0e98-132">專案檔的名稱。</span><span class="sxs-lookup"><span data-stu-id="f0e98-132">The name of the project file.</span></span></param>
        <param name="globalProperties"><span data-ttu-id="f0e98-133">要使用的全域屬性。</span><span class="sxs-lookup"><span data-stu-id="f0e98-133">The global properties to use.</span></span> <span data-ttu-id="f0e98-134">可能是 Null。</span><span class="sxs-lookup"><span data-stu-id="f0e98-134">May be null.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="f0e98-135">工具版本。</span><span class="sxs-lookup"><span data-stu-id="f0e98-135">The tools version.</span></span> <span data-ttu-id="f0e98-136">可能是 Null。</span><span class="sxs-lookup"><span data-stu-id="f0e98-136">May be null.</span></span></param>
        <param name="projectCollection"><span data-ttu-id="f0e98-137">專案集合</span><span class="sxs-lookup"><span data-stu-id="f0e98-137">Project collection</span></span></param>
        <summary><span data-ttu-id="f0e98-138">使用指定的全域屬性、工具版本和專案集合，從指定的專案檔建立新的專案執行個體並加以初始化。</span><span class="sxs-lookup"><span data-stu-id="f0e98-138">Creates a new project instance and initializes it from the given project file, using the given global properties, tools version, and project collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0e98-139">沒有中繼<xref:Microsoft.Build.Evaluation.Project>建立物件。</span><span class="sxs-lookup"><span data-stu-id="f0e98-139">No intermediate <xref:Microsoft.Build.Evaluation.Project> object is created.</span></span> <span data-ttu-id="f0e98-140">這如果專案所建置，但不是顯示或編輯將會非常有用。</span><span class="sxs-lookup"><span data-stu-id="f0e98-140">This is useful if a project is going to be built, but not displayed or edited.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProjectInstance (Microsoft.Build.Construction.ProjectRootElement xml, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion, string subToolsetVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Build.Construction.ProjectRootElement xml, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion, string subToolsetVersion, class Microsoft.Build.Evaluation.ProjectCollection projectCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,Microsoft.Build.Evaluation.ProjectCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProjectInstance(Microsoft::Build::Construction::ProjectRootElement ^ xml, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion, System::String ^ subToolsetVersion, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xml" Type="Microsoft.Build.Construction.ProjectRootElement" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
        <Parameter Name="subToolsetVersion" Type="System.String" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
      </Parameters>
      <Docs>
        <param name="xml"><span data-ttu-id="f0e98-141">專案根項目。</span><span class="sxs-lookup"><span data-stu-id="f0e98-141">The project root element.</span></span></param>
        <param name="globalProperties"><span data-ttu-id="f0e98-142">要使用的全域屬性。</span><span class="sxs-lookup"><span data-stu-id="f0e98-142">The global properties to use.</span></span> <span data-ttu-id="f0e98-143">可能是 Null。</span><span class="sxs-lookup"><span data-stu-id="f0e98-143">May be null.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="f0e98-144">工具版本。</span><span class="sxs-lookup"><span data-stu-id="f0e98-144">The tools version.</span></span> <span data-ttu-id="f0e98-145">可能是 Null。</span><span class="sxs-lookup"><span data-stu-id="f0e98-145">May be null.</span></span></param>
        <param name="subToolsetVersion"><span data-ttu-id="f0e98-146">子 Toolset 版本。</span><span class="sxs-lookup"><span data-stu-id="f0e98-146">The sub toolset version.</span></span> <span data-ttu-id="f0e98-147">可能是 Null。</span><span class="sxs-lookup"><span data-stu-id="f0e98-147">May be null.</span></span></param>
        <param name="projectCollection"><span data-ttu-id="f0e98-148">專案集合。</span><span class="sxs-lookup"><span data-stu-id="f0e98-148">Project collection.</span></span></param>
        <summary><span data-ttu-id="f0e98-149">使用指定的全域屬性、工具版本和專案集合，從指定的專案根項目建立新的專案執行個體並加以初始化</span><span class="sxs-lookup"><span data-stu-id="f0e98-149">Creates a new project instance and initializes it from the given project root, using the given global properties, tools version, and project collection</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0e98-150">沒有中繼<xref:Microsoft.Build.Evaluation.Project>建立物件。</span><span class="sxs-lookup"><span data-stu-id="f0e98-150">No intermediate <xref:Microsoft.Build.Evaluation.Project> object is created.</span></span> <span data-ttu-id="f0e98-151">這如果專案所建置，但不是顯示或編輯將會非常有用。</span><span class="sxs-lookup"><span data-stu-id="f0e98-151">This is useful if a project is going to be built, but not displayed or edited.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProjectInstance (string projectFile, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion, string subToolsetVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string projectFile, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion, string subToolsetVersion, class Microsoft.Build.Evaluation.ProjectCollection projectCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,Microsoft.Build.Evaluation.ProjectCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProjectInstance(System::String ^ projectFile, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion, System::String ^ subToolsetVersion, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="projectFile" Type="System.String" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
        <Parameter Name="subToolsetVersion" Type="System.String" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
      </Parameters>
      <Docs>
        <param name="projectFile"><span data-ttu-id="f0e98-152">專案檔的名稱。</span><span class="sxs-lookup"><span data-stu-id="f0e98-152">The name of the project file.</span></span></param>
        <param name="globalProperties"><span data-ttu-id="f0e98-153">要使用的全域屬性。</span><span class="sxs-lookup"><span data-stu-id="f0e98-153">The global properties to use.</span></span> <span data-ttu-id="f0e98-154">可能是 Null。</span><span class="sxs-lookup"><span data-stu-id="f0e98-154">May be null.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="f0e98-155">工具版本。</span><span class="sxs-lookup"><span data-stu-id="f0e98-155">The tools version.</span></span> <span data-ttu-id="f0e98-156">可能是 Null。</span><span class="sxs-lookup"><span data-stu-id="f0e98-156">May be null.</span></span></param>
        <param name="subToolsetVersion"><span data-ttu-id="f0e98-157">子 Toolset 版本。</span><span class="sxs-lookup"><span data-stu-id="f0e98-157">The sub toolset version.</span></span> <span data-ttu-id="f0e98-158">可能是 Null。</span><span class="sxs-lookup"><span data-stu-id="f0e98-158">May be null.</span></span></param>
        <param name="projectCollection"><span data-ttu-id="f0e98-159">專案集合。</span><span class="sxs-lookup"><span data-stu-id="f0e98-159">Project collection.</span></span></param>
        <summary><span data-ttu-id="f0e98-160">使用指定的全域屬性、工具版本、子工具組版本和專案集合，從指定的專案檔建立新的專案執行個體並加以初始化。</span><span class="sxs-lookup"><span data-stu-id="f0e98-160">Creates a new project instance and initializes it from the given project file, using the given global properties, tools version, sub toolset version, and project collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0e98-161">沒有中繼<xref:Microsoft.Build.Evaluation.Project>建立物件。</span><span class="sxs-lookup"><span data-stu-id="f0e98-161">No intermediate <xref:Microsoft.Build.Evaluation.Project> object is created.</span></span> <span data-ttu-id="f0e98-162">這如果專案所建置，但不是顯示或編輯將會非常有用。</span><span class="sxs-lookup"><span data-stu-id="f0e98-162">This is useful if a project is going to be built, but not displayed or edited.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddItem">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f0e98-163">將不含中繼資料的項目加入至專案。</span><span class="sxs-lookup"><span data-stu-id="f0e98-163">Adds an item with no metadata to the project.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddItem">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Execution.ProjectItemInstance AddItem (string itemType, string evaluatedInclude);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Execution.ProjectItemInstance AddItem(string itemType, string evaluatedInclude) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.AddItem(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddItem (itemType As String, evaluatedInclude As String) As ProjectItemInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Execution::ProjectItemInstance ^ AddItem(System::String ^ itemType, System::String ^ evaluatedInclude);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Execution.ProjectItemInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemType" Type="System.String" />
        <Parameter Name="evaluatedInclude" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="itemType"><span data-ttu-id="f0e98-164">要加入之項目的項目型別。</span><span class="sxs-lookup"><span data-stu-id="f0e98-164">The item type of the item to be added.</span></span></param>
        <param name="evaluatedInclude"><span data-ttu-id="f0e98-165">項目的已評估 Include 屬性。</span><span class="sxs-lookup"><span data-stu-id="f0e98-165">The evaluated Include attribute of the item.</span></span></param>
        <summary><span data-ttu-id="f0e98-166">將不含中繼資料的項目加入至專案。</span><span class="sxs-lookup"><span data-stu-id="f0e98-166">Adds an item with no metadata to the project.</span></span></summary>
        <returns><span data-ttu-id="f0e98-167">傳回新項目。</span><span class="sxs-lookup"><span data-stu-id="f0e98-167">Returns the new item.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0e98-168">我們不確定我們沒有一個已經用於另一個 ProjectInstance ProjectItemInstance。</span><span class="sxs-lookup"><span data-stu-id="f0e98-168">We don't take a ProjectItemInstance to make sure we don't have one that's already in use by another ProjectInstance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddItem">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Execution.ProjectItemInstance AddItem (string itemType, string evaluatedInclude, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,string&gt;&gt; metadata);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Execution.ProjectItemInstance AddItem(string itemType, string evaluatedInclude, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, string&gt;&gt; metadata) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.AddItem(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})" />
      <MemberSignature Language="VB.NET" Value="Public Function AddItem (itemType As String, evaluatedInclude As String, metadata As IEnumerable(Of KeyValuePair(Of String, String))) As ProjectItemInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Execution::ProjectItemInstance ^ AddItem(System::String ^ itemType, System::String ^ evaluatedInclude, System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::String ^&gt;&gt; ^ metadata);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Execution.ProjectItemInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemType" Type="System.String" />
        <Parameter Name="evaluatedInclude" Type="System.String" />
        <Parameter Name="metadata" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.String&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="itemType"><span data-ttu-id="f0e98-169">要加入之項目的項目型別。</span><span class="sxs-lookup"><span data-stu-id="f0e98-169">The item type of the item to be added.</span></span></param>
        <param name="evaluatedInclude"><span data-ttu-id="f0e98-170">項目的已評估 Include 屬性。</span><span class="sxs-lookup"><span data-stu-id="f0e98-170">The evaluated Include attribute of the item.</span></span></param>
        <param name="metadata"><span data-ttu-id="f0e98-171">項目的中繼資料。</span><span class="sxs-lookup"><span data-stu-id="f0e98-171">The metadata of the item.</span></span></param>
        <summary><span data-ttu-id="f0e98-172">將含有指定之中繼資料的項目加入至專案。</span><span class="sxs-lookup"><span data-stu-id="f0e98-172">Adds an item with the given metadata to the project.</span></span></summary>
        <returns><span data-ttu-id="f0e98-173">傳回新項目。</span><span class="sxs-lookup"><span data-stu-id="f0e98-173">Return the new item.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0e98-174">我們不確定我們沒有一個已經用於另一個 ProjectInstance ProjectItemInstance。</span><span class="sxs-lookup"><span data-stu-id="f0e98-174">We don't take a ProjectItemInstance to make sure we don't have one that's already in use by another ProjectInstance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Build">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f0e98-175">使用專案集合的記錄器，建置專案的預設目標。</span><span class="sxs-lookup"><span data-stu-id="f0e98-175">Builds the default targets of the project with loggers of the project collection.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.Build" />
      <MemberSignature Language="VB.NET" Value="Public Function Build () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f0e98-176">使用專案集合的記錄器，建置專案的預設目標。</span><span class="sxs-lookup"><span data-stu-id="f0e98-176">Builds the default targets of the project with loggers of the project collection.</span></span></summary>
        <returns><span data-ttu-id="f0e98-177">如果建置成功則傳回 true，否則傳回 false。</span><span class="sxs-lookup"><span data-stu-id="f0e98-177">Returns true if the build succeeds; false otherwise.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt; loggers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Framework.ILogger&gt; loggers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.Build(System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (loggers As IEnumerable(Of ILogger)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ loggers);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="loggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt;" />
      </Parameters>
      <Docs>
        <param name="loggers"><span data-ttu-id="f0e98-178">供組建使用的記錄器。</span><span class="sxs-lookup"><span data-stu-id="f0e98-178">The loggers to use for the build.</span></span> <span data-ttu-id="f0e98-179">可能是 Null。</span><span class="sxs-lookup"><span data-stu-id="f0e98-179">May be null.</span></span></param>
        <summary><span data-ttu-id="f0e98-180">使用指定的記錄器，建置專案的預設目標。</span><span class="sxs-lookup"><span data-stu-id="f0e98-180">Builds the default targets of the project with the given loggers.</span></span></summary>
        <returns><span data-ttu-id="f0e98-181">如果建置成功則傳回 true，否則傳回 false。</span><span class="sxs-lookup"><span data-stu-id="f0e98-181">Returns true if the build succeeds; false otherwise.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0e98-182">如果任何提供的記錄器已經附加到記錄服務，會擲回 InvalidOperationException。</span><span class="sxs-lookup"><span data-stu-id="f0e98-182">Throws InvalidOperationException if any of the loggers supplied are already attached to the logging service.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt; loggers, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt; remoteLoggers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Framework.ILogger&gt; loggers, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Logging.ForwardingLoggerRecord&gt; remoteLoggers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.Build(System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (loggers As IEnumerable(Of ILogger), remoteLoggers As IEnumerable(Of ForwardingLoggerRecord)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ loggers, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Logging::ForwardingLoggerRecord ^&gt; ^ remoteLoggers);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="loggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt;" />
        <Parameter Name="remoteLoggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt;" />
      </Parameters>
      <Docs>
        <param name="loggers"><span data-ttu-id="f0e98-183">供組建使用的記錄器。</span><span class="sxs-lookup"><span data-stu-id="f0e98-183">The loggers to use for the build.</span></span> <span data-ttu-id="f0e98-184">可能是 Null。</span><span class="sxs-lookup"><span data-stu-id="f0e98-184">May be null.</span></span></param>
        <param name="remoteLoggers"><span data-ttu-id="f0e98-185">用於組建的遠端記錄器。</span><span class="sxs-lookup"><span data-stu-id="f0e98-185">The remote loggers to use for the build.</span></span> <span data-ttu-id="f0e98-186">可能是 Null。</span><span class="sxs-lookup"><span data-stu-id="f0e98-186">May be null.</span></span></param>
        <summary><span data-ttu-id="f0e98-187">使用指定的記錄器和遠端記錄器，建置專案的預設目標。</span><span class="sxs-lookup"><span data-stu-id="f0e98-187">Builds the default targets of the project with the given loggers and remote loggers.</span></span></summary>
        <returns><span data-ttu-id="f0e98-188">如果建置成功則傳回 true，否則傳回 false。</span><span class="sxs-lookup"><span data-stu-id="f0e98-188">Returns true if the build succeeds; false otherwise.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0e98-189">如果任何提供的記錄器已經附加到記錄服務，會擲回 InvalidOperationException。</span><span class="sxs-lookup"><span data-stu-id="f0e98-189">Throws InvalidOperationException if any of the loggers supplied are already attached to the logging service.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (string target, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt; loggers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(string target, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Framework.ILogger&gt; loggers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.Build(System.String,System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (target As String, loggers As IEnumerable(Of ILogger)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(System::String ^ target, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ loggers);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.String" />
        <Parameter Name="loggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt;" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="f0e98-190">要建置的目標。</span><span class="sxs-lookup"><span data-stu-id="f0e98-190">The target to build.</span></span> <span data-ttu-id="f0e98-191">可能是 Null。</span><span class="sxs-lookup"><span data-stu-id="f0e98-191">May be null.</span></span></param>
        <param name="loggers"><span data-ttu-id="f0e98-192">供組建使用的記錄器。</span><span class="sxs-lookup"><span data-stu-id="f0e98-192">The loggers to use for the build.</span></span> <span data-ttu-id="f0e98-193">可能是 Null。</span><span class="sxs-lookup"><span data-stu-id="f0e98-193">May be null.</span></span></param>
        <summary><span data-ttu-id="f0e98-194">使用指定的記錄器，建置專案的指定目標。</span><span class="sxs-lookup"><span data-stu-id="f0e98-194">Builds the given target of the project with the given loggers.</span></span></summary>
        <returns><span data-ttu-id="f0e98-195">如果建置成功則傳回 true，否則傳回 false。</span><span class="sxs-lookup"><span data-stu-id="f0e98-195">Returns true if the build succeeds; false otherwise.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0e98-196">如果任何提供的記錄器已經附加到記錄服務，會擲回 InvalidOperationException。</span><span class="sxs-lookup"><span data-stu-id="f0e98-196">Throws InvalidOperationException if any of the loggers supplied are already attached to the logging service.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (string[] targets, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt; loggers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(string[] targets, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Framework.ILogger&gt; loggers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (targets As String(), loggers As IEnumerable(Of ILogger)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(cli::array &lt;System::String ^&gt; ^ targets, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ loggers);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targets" Type="System.String[]" />
        <Parameter Name="loggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt;" />
      </Parameters>
      <Docs>
        <param name="targets"><span data-ttu-id="f0e98-197">要建置的目標。</span><span class="sxs-lookup"><span data-stu-id="f0e98-197">The targets to build.</span></span> <span data-ttu-id="f0e98-198">可能是 Null。</span><span class="sxs-lookup"><span data-stu-id="f0e98-198">May be null.</span></span></param>
        <param name="loggers"><span data-ttu-id="f0e98-199">供組建使用的記錄器。</span><span class="sxs-lookup"><span data-stu-id="f0e98-199">The loggers to use for the build.</span></span> <span data-ttu-id="f0e98-200">可能是 Null。</span><span class="sxs-lookup"><span data-stu-id="f0e98-200">May be null.</span></span></param>
        <summary><span data-ttu-id="f0e98-201">使用指定的記錄器，建置專案的指定目標。</span><span class="sxs-lookup"><span data-stu-id="f0e98-201">Builds the given targets of the project with the given loggers.</span></span></summary>
        <returns><span data-ttu-id="f0e98-202">如果建置成功則傳回 true，否則傳回 false。</span><span class="sxs-lookup"><span data-stu-id="f0e98-202">Returns true if the build succeeds; false otherwise.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0e98-203">如果任何提供的記錄器已經附加到記錄服務，會擲回 InvalidOperationException。</span><span class="sxs-lookup"><span data-stu-id="f0e98-203">Throws InvalidOperationException if any of the loggers supplied are already attached to the logging service.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (string target, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt; loggers, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt; remoteLoggers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(string target, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Framework.ILogger&gt; loggers, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Logging.ForwardingLoggerRecord&gt; remoteLoggers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.Build(System.String,System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (target As String, loggers As IEnumerable(Of ILogger), remoteLoggers As IEnumerable(Of ForwardingLoggerRecord)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(System::String ^ target, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ loggers, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Logging::ForwardingLoggerRecord ^&gt; ^ remoteLoggers);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.String" />
        <Parameter Name="loggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt;" />
        <Parameter Name="remoteLoggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt;" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="f0e98-204">要建置的目標。</span><span class="sxs-lookup"><span data-stu-id="f0e98-204">The target to build.</span></span> <span data-ttu-id="f0e98-205">可能是 Null。</span><span class="sxs-lookup"><span data-stu-id="f0e98-205">May be null.</span></span></param>
        <param name="loggers"><span data-ttu-id="f0e98-206">供組建使用的記錄器。</span><span class="sxs-lookup"><span data-stu-id="f0e98-206">The loggers to use for the build.</span></span> <span data-ttu-id="f0e98-207">可能是 Null。</span><span class="sxs-lookup"><span data-stu-id="f0e98-207">May be null.</span></span></param>
        <param name="remoteLoggers"><span data-ttu-id="f0e98-208">用於組建的遠端記錄器。</span><span class="sxs-lookup"><span data-stu-id="f0e98-208">The remote loggers to use for the build.</span></span> <span data-ttu-id="f0e98-209">可能是 Null。</span><span class="sxs-lookup"><span data-stu-id="f0e98-209">May be null.</span></span></param>
        <summary><span data-ttu-id="f0e98-210">使用指定的記錄器和遠端記錄器，建置專案的指定目標。</span><span class="sxs-lookup"><span data-stu-id="f0e98-210">Builds the given target of the project with the given loggers and remote loggers.</span></span></summary>
        <returns><span data-ttu-id="f0e98-211">如果建置成功則傳回 true，否則傳回 false。</span><span class="sxs-lookup"><span data-stu-id="f0e98-211">Returns true if the build succeeds; false otherwise.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0e98-212">如果任何提供的記錄器已經附加到記錄服務，會擲回 InvalidOperationException。</span><span class="sxs-lookup"><span data-stu-id="f0e98-212">Throws InvalidOperationException if any of the loggers supplied are already attached to the logging service.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (string[] targets, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt; loggers, out System.Collections.Generic.IDictionary&lt;string,Microsoft.Build.Execution.TargetResult&gt; targetOutputs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(string[] targets, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Framework.ILogger&gt; loggers, [out] class System.Collections.Generic.IDictionary`2&lt;string, class Microsoft.Build.Execution.TargetResult&gt;&amp; targetOutputs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IDictionary{System.String,Microsoft.Build.Execution.TargetResult}@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (targets As String(), loggers As IEnumerable(Of ILogger), ByRef targetOutputs As IDictionary(Of String, TargetResult)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(cli::array &lt;System::String ^&gt; ^ targets, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ loggers, [Runtime::InteropServices::Out] System::Collections::Generic::IDictionary&lt;System::String ^, Microsoft::Build::Execution::TargetResult ^&gt; ^ % targetOutputs);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targets" Type="System.String[]" />
        <Parameter Name="loggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt;" />
        <Parameter Name="targetOutputs" Type="System.Collections.Generic.IDictionary&lt;System.String,Microsoft.Build.Execution.TargetResult&gt;&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="targets"><span data-ttu-id="f0e98-213">要建置的目標清單。</span><span class="sxs-lookup"><span data-stu-id="f0e98-213">List of targets to build.</span></span> <span data-ttu-id="f0e98-214">可能是 Null。</span><span class="sxs-lookup"><span data-stu-id="f0e98-214">May be null.</span></span></param>
        <param name="loggers"><span data-ttu-id="f0e98-215">要用於建置目標之記錄器的列舉清單。</span><span class="sxs-lookup"><span data-stu-id="f0e98-215">Enumerated list of loggers to use for building targets.</span></span></param>
        <param name="targetOutputs"><span data-ttu-id="f0e98-216">目標建置的輸出。</span><span class="sxs-lookup"><span data-stu-id="f0e98-216">Outputs of target builds.</span></span></param>
        <summary><span data-ttu-id="f0e98-217">使用指定的記錄器，建置目標清單。</span><span class="sxs-lookup"><span data-stu-id="f0e98-217">Build a list of targets with specified loggers.</span></span> <span data-ttu-id="f0e98-218">目標可能是 Null。</span><span class="sxs-lookup"><span data-stu-id="f0e98-218">Targets may be null.</span></span> <span data-ttu-id="f0e98-219">記錄器可能是 Null。</span><span class="sxs-lookup"><span data-stu-id="f0e98-219">Loggers may be null.</span></span></summary>
        <returns><span data-ttu-id="f0e98-220">如果成功則傳回 true，失敗則傳回 false。</span><span class="sxs-lookup"><span data-stu-id="f0e98-220">Returns true on success, false on failure.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0e98-221">如果任何提供的記錄器已附加至傳遞給我們的記錄服務，會擲回 InvalidOperationException。</span><span class="sxs-lookup"><span data-stu-id="f0e98-221">If any of the loggers supplied are already attached to the logging service we were passed, throws InvalidOperationException.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (string[] targets, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt; loggers, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt; remoteLoggers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(string[] targets, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Framework.ILogger&gt; loggers, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Logging.ForwardingLoggerRecord&gt; remoteLoggers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (targets As String(), loggers As IEnumerable(Of ILogger), remoteLoggers As IEnumerable(Of ForwardingLoggerRecord)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(cli::array &lt;System::String ^&gt; ^ targets, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ loggers, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Logging::ForwardingLoggerRecord ^&gt; ^ remoteLoggers);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targets" Type="System.String[]" />
        <Parameter Name="loggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt;" />
        <Parameter Name="remoteLoggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt;" />
      </Parameters>
      <Docs>
        <param name="targets"><span data-ttu-id="f0e98-222">要建置的目標。</span><span class="sxs-lookup"><span data-stu-id="f0e98-222">The targets to build.</span></span> <span data-ttu-id="f0e98-223">可能是 Null。</span><span class="sxs-lookup"><span data-stu-id="f0e98-223">May be null.</span></span></param>
        <param name="loggers"><span data-ttu-id="f0e98-224">供組建使用的記錄器。</span><span class="sxs-lookup"><span data-stu-id="f0e98-224">The loggers to use for the build.</span></span> <span data-ttu-id="f0e98-225">可能是 Null。</span><span class="sxs-lookup"><span data-stu-id="f0e98-225">May be null.</span></span></param>
        <param name="remoteLoggers"><span data-ttu-id="f0e98-226">用於組建的遠端記錄器。</span><span class="sxs-lookup"><span data-stu-id="f0e98-226">The remote loggers to use for the build.</span></span> <span data-ttu-id="f0e98-227">可能是 Null。</span><span class="sxs-lookup"><span data-stu-id="f0e98-227">May be null.</span></span></param>
        <summary><span data-ttu-id="f0e98-228">使用指定的記錄器和遠端記錄器，建置專案的指定目標。</span><span class="sxs-lookup"><span data-stu-id="f0e98-228">Builds the given targets of the project with the given loggers and remote loggers.</span></span></summary>
        <returns><span data-ttu-id="f0e98-229">如果建置成功則傳回 true，否則傳回 false。</span><span class="sxs-lookup"><span data-stu-id="f0e98-229">Returns true if the build succeeds; false otherwise.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0e98-230">如果任何提供的記錄器已經附加到記錄服務，會擲回 InvalidOperationException。</span><span class="sxs-lookup"><span data-stu-id="f0e98-230">Throws InvalidOperationException if any of the loggers supplied are already attached to the logging service.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (string[] targets, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt; loggers, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt; remoteLoggers, out System.Collections.Generic.IDictionary&lt;string,Microsoft.Build.Execution.TargetResult&gt; targetOutputs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(string[] targets, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Framework.ILogger&gt; loggers, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Logging.ForwardingLoggerRecord&gt; remoteLoggers, [out] class System.Collections.Generic.IDictionary`2&lt;string, class Microsoft.Build.Execution.TargetResult&gt;&amp; targetOutputs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord},System.Collections.Generic.IDictionary{System.String,Microsoft.Build.Execution.TargetResult}@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (targets As String(), loggers As IEnumerable(Of ILogger), remoteLoggers As IEnumerable(Of ForwardingLoggerRecord), ByRef targetOutputs As IDictionary(Of String, TargetResult)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(cli::array &lt;System::String ^&gt; ^ targets, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ loggers, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Logging::ForwardingLoggerRecord ^&gt; ^ remoteLoggers, [Runtime::InteropServices::Out] System::Collections::Generic::IDictionary&lt;System::String ^, Microsoft::Build::Execution::TargetResult ^&gt; ^ % targetOutputs);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targets" Type="System.String[]" />
        <Parameter Name="loggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt;" />
        <Parameter Name="remoteLoggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt;" />
        <Parameter Name="targetOutputs" Type="System.Collections.Generic.IDictionary&lt;System.String,Microsoft.Build.Execution.TargetResult&gt;&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="targets"><span data-ttu-id="f0e98-231">要建置的目標。</span><span class="sxs-lookup"><span data-stu-id="f0e98-231">The targets to build.</span></span> <span data-ttu-id="f0e98-232">可能是 Null。</span><span class="sxs-lookup"><span data-stu-id="f0e98-232">May be null.</span></span></param>
        <param name="loggers"><span data-ttu-id="f0e98-233">供組建使用的記錄器。</span><span class="sxs-lookup"><span data-stu-id="f0e98-233">The loggers to use for the build.</span></span> <span data-ttu-id="f0e98-234">可能是 Null。</span><span class="sxs-lookup"><span data-stu-id="f0e98-234">May be null.</span></span></param>
        <param name="remoteLoggers"><span data-ttu-id="f0e98-235">用於組建的遠端記錄器。</span><span class="sxs-lookup"><span data-stu-id="f0e98-235">The remote loggers to use for the build.</span></span> <span data-ttu-id="f0e98-236">可能是 Null。</span><span class="sxs-lookup"><span data-stu-id="f0e98-236">May be null.</span></span></param>
        <param name="targetOutputs"><span data-ttu-id="f0e98-237">目標輸出。</span><span class="sxs-lookup"><span data-stu-id="f0e98-237">The target outputs.</span></span></param>
        <summary><span data-ttu-id="f0e98-238">使用指定的目標輸出及使用指定的記錄器和遠端記錄器，建置指定的目標。</span><span class="sxs-lookup"><span data-stu-id="f0e98-238">Builds the given targets with the given target outputs and with the given loggers and remote loggers.</span></span></summary>
        <returns><span data-ttu-id="f0e98-239">如果建置成功則傳回 true，否則傳回 false。</span><span class="sxs-lookup"><span data-stu-id="f0e98-239">Returns true if the build succeeds; false otherwise.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0e98-240">如果任何提供的記錄器已經附加到記錄服務，會擲回 InvalidOperationException。</span><span class="sxs-lookup"><span data-stu-id="f0e98-240">Throws InvalidOperationException if any of the loggers supplied are already attached to the logging service.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DeepCopy">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f0e98-241">建立這個專案及專案中每個項目的獨立、深層複製。</span><span class="sxs-lookup"><span data-stu-id="f0e98-241">Creates an independent, deep clone of this project and everything in it.</span></span> <span data-ttu-id="f0e98-242">可以用來編譯單一檔案或保留建置之間的建置結果。</span><span class="sxs-lookup"><span data-stu-id="f0e98-242">Useful for compiling a single file or for keeping build results between builds.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DeepCopy">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Execution.ProjectInstance DeepCopy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Execution.ProjectInstance DeepCopy() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.DeepCopy" />
      <MemberSignature Language="VB.NET" Value="Public Function DeepCopy () As ProjectInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Execution::ProjectInstance ^ DeepCopy();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Execution.ProjectInstance</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f0e98-243">建立這個專案及專案中每個項目的獨立、深層複製。</span><span class="sxs-lookup"><span data-stu-id="f0e98-243">Creates an independent, deep clone of this project and everything in it.</span></span> <span data-ttu-id="f0e98-244">複製品 (Clone) 與原版的可變動性相同。</span><span class="sxs-lookup"><span data-stu-id="f0e98-244">Clone has the same mutability as the original.</span></span> <span data-ttu-id="f0e98-245">可以用來編譯單一檔案或保留建置之間的建置結果。</span><span class="sxs-lookup"><span data-stu-id="f0e98-245">Useful for compiling a single file or for keeping build results between builds.</span></span></summary>
        <returns><span data-ttu-id="f0e98-246">建立這個專案的獨立、深層複製。</span><span class="sxs-lookup"><span data-stu-id="f0e98-246">Creates an independent, deep clone of this project.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeepCopy">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Execution.ProjectInstance DeepCopy (bool isImmutable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Execution.ProjectInstance DeepCopy(bool isImmutable) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.DeepCopy(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function DeepCopy (isImmutable As Boolean) As ProjectInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Execution::ProjectInstance ^ DeepCopy(bool isImmutable);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Execution.ProjectInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isImmutable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="isImmutable"><span data-ttu-id="f0e98-247">表示複製可變動性的旗標。</span><span class="sxs-lookup"><span data-stu-id="f0e98-247">Flag indicating clone mutability.</span></span></param>
        <summary><span data-ttu-id="f0e98-248">使用指定的可變動性，建立這個專案及專案中每個項目的獨立、深層複製品 (Clone)。</span><span class="sxs-lookup"><span data-stu-id="f0e98-248">Creates an independent, deep clone of this project and everything in it, with specified mutability.</span></span> <span data-ttu-id="f0e98-249">可以用來編譯單一檔案或保留建置之間的建置結果。</span><span class="sxs-lookup"><span data-stu-id="f0e98-249">Useful for compiling a single file or for keeping build results between builds.</span></span></summary>
        <returns><span data-ttu-id="f0e98-250">使用指定的可變動性，傳回這個專案的獨立、深層複製品。</span><span class="sxs-lookup"><span data-stu-id="f0e98-250">Returns an independent, deep clone of this project, with specified mutability.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultTargets">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.List&lt;string&gt; DefaultTargets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.List`1&lt;string&gt; DefaultTargets" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectInstance.DefaultTargets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DefaultTargets As List(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::List&lt;System::String ^&gt; ^ DefaultTargets { System::Collections::Generic::List&lt;System::String ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Build.Evaluation.IEvaluatorData`4.DefaultTargets</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f0e98-251">取得或設定這個專案的預設目標清單。</span><span class="sxs-lookup"><span data-stu-id="f0e98-251">Gets or sets the list of default targets for this project.</span></span></summary>
        <value><span data-ttu-id="f0e98-252">傳回這個專案的預設目標清單。</span><span class="sxs-lookup"><span data-stu-id="f0e98-252">Returns the list of default targets for this project.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0e98-253">如果已明確不指定任何目標，就會建置預設的目標。</span><span class="sxs-lookup"><span data-stu-id="f0e98-253">Default targets are built if no targets are explicitly specified.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Directory">
      <MemberSignature Language="C#" Value="public string Directory { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Directory" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectInstance.Directory" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Directory As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Directory { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Build.Evaluation.IEvaluatorData`4.Directory</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f0e98-254">取得專案根目錄。</span><span class="sxs-lookup"><span data-stu-id="f0e98-254">Gets the project root directory.</span></span> <span data-ttu-id="f0e98-255">在建置期間用於評估相對路徑和設定目前的目錄。</span><span class="sxs-lookup"><span data-stu-id="f0e98-255">Used for evaluation of relative paths and setting the current directory during build.</span></span> <span data-ttu-id="f0e98-256">絕不會是 Null：不是從磁碟載入的專案會從建置開始時便使用目前的目錄。</span><span class="sxs-lookup"><span data-stu-id="f0e98-256">Is never null: projects not loaded from disk use the current directory from the time the build started.</span></span></summary>
        <value><span data-ttu-id="f0e98-257">傳回專案根目錄 (絕不會是 Null)。</span><span class="sxs-lookup"><span data-stu-id="f0e98-257">Returns the project root directory, which is never null.</span></span> <span data-ttu-id="f0e98-258">不是從磁碟載入的專案會從建置開始時便傳回目前的目錄。</span><span class="sxs-lookup"><span data-stu-id="f0e98-258">Projects not loaded from disk return the current directory at the time the build was started.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EvaluateCondition">
      <MemberSignature Language="C#" Value="public bool EvaluateCondition (string condition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool EvaluateCondition(string condition) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.EvaluateCondition(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function EvaluateCondition (condition As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool EvaluateCondition(System::String ^ condition);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Build.Evaluation.IEvaluatorData`4.EvaluateCondition(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="condition"><span data-ttu-id="f0e98-259">要展開的字串。</span><span class="sxs-lookup"><span data-stu-id="f0e98-259">The string to be expanded.</span></span></param>
        <summary><span data-ttu-id="f0e98-260">藉由展開項目和屬性、使用目前可用的項目和屬性，然後進行邏輯評估，將所提供的字串當做條件來評估。</span><span class="sxs-lookup"><span data-stu-id="f0e98-260">Evaluates the provided string as a condition by expanding items and properties, using the current items and properties available, then doing a logical evaluation.</span></span></summary>
        <returns><span data-ttu-id="f0e98-261">如果字串評估為 true，則傳回 true，否則傳回 false。</span><span class="sxs-lookup"><span data-stu-id="f0e98-261">Returns true if the string evaluates to true; false otherwise.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0e98-262">這是適用於即時運算視窗。</span><span class="sxs-lookup"><span data-stu-id="f0e98-262">This is useful for the immediate window.</span></span>  
  
 <span data-ttu-id="f0e98-263">不會展開裸機中繼資料運算式。</span><span class="sxs-lookup"><span data-stu-id="f0e98-263">Does not expand bare metadata expressions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExpandString">
      <MemberSignature Language="C#" Value="public string ExpandString (string unexpandedValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ExpandString(string unexpandedValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.ExpandString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExpandString (unexpandedValue As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ExpandString(System::String ^ unexpandedValue);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Build.Evaluation.IEvaluatorData`4.ExpandString(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unexpandedValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="unexpandedValue"><span data-ttu-id="f0e98-264">要展開的字串。</span><span class="sxs-lookup"><span data-stu-id="f0e98-264">The string to be expanded.</span></span></param>
        <summary><span data-ttu-id="f0e98-265">藉由展開項目和屬性、使用目前可用的項目和屬性，評估所提供的字串。</span><span class="sxs-lookup"><span data-stu-id="f0e98-265">Evaluates the provided string by expanding items and properties, using the current items and properties available.</span></span></summary>
        <returns><span data-ttu-id="f0e98-266">傳回已展開的字串值。</span><span class="sxs-lookup"><span data-stu-id="f0e98-266">Returns the expanded string value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0e98-267">這是針對某些主機，或偵錯工具的即時運算視窗很有用。</span><span class="sxs-lookup"><span data-stu-id="f0e98-267">This is useful for some hosts, or for the debugger immediate window.</span></span>  
  
 <span data-ttu-id="f0e98-268">不會展開裸機中繼資料運算式。</span><span class="sxs-lookup"><span data-stu-id="f0e98-268">Does not expand bare metadata expressions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FullPath">
      <MemberSignature Language="C#" Value="public string FullPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FullPath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectInstance.FullPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FullPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FullPath { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f0e98-269">取得專案檔案的完整路徑。</span><span class="sxs-lookup"><span data-stu-id="f0e98-269">Gets the full path to the project file.</span></span> <span data-ttu-id="f0e98-270">用於記錄。</span><span class="sxs-lookup"><span data-stu-id="f0e98-270">Used for logging.</span></span></summary>
        <value><span data-ttu-id="f0e98-271">傳回專案檔案的完整路徑。</span><span class="sxs-lookup"><span data-stu-id="f0e98-271">Returns the full path to the project file.</span></span> <span data-ttu-id="f0e98-272">如果專案未曾命名，則會傳回 Null。</span><span class="sxs-lookup"><span data-stu-id="f0e98-272">Returns null if the project was never named.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetEvaluatedItemIncludeEscaped">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f0e98-273">取得所提供項目定義之 Include 屬性的已評估、逸出值。</span><span class="sxs-lookup"><span data-stu-id="f0e98-273">Gets the evaluated, escaped value of the Include attribute of the provided item definition.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetEvaluatedItemIncludeEscaped">
      <MemberSignature Language="C#" Value="public static string GetEvaluatedItemIncludeEscaped (Microsoft.Build.Execution.ProjectItemDefinitionInstance item);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetEvaluatedItemIncludeEscaped(class Microsoft.Build.Execution.ProjectItemDefinitionInstance item) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.GetEvaluatedItemIncludeEscaped(Microsoft.Build.Execution.ProjectItemDefinitionInstance)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEvaluatedItemIncludeEscaped (item As ProjectItemDefinitionInstance) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetEvaluatedItemIncludeEscaped(Microsoft::Build::Execution::ProjectItemDefinitionInstance ^ item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="Microsoft.Build.Execution.ProjectItemDefinitionInstance" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="f0e98-274">要評估和逸出的項目定義。</span><span class="sxs-lookup"><span data-stu-id="f0e98-274">The item definition to be evaluated and escaped.</span></span></param>
        <summary><span data-ttu-id="f0e98-275">取得所提供項目定義之 Include 屬性的已評估、逸出值。</span><span class="sxs-lookup"><span data-stu-id="f0e98-275">Gets the evaluated, escaped value of the Include attribute of the provided item definition.</span></span></summary>
        <returns><span data-ttu-id="f0e98-276">傳回所提供項目定義之 Include 屬性的已評估、逸出值。</span><span class="sxs-lookup"><span data-stu-id="f0e98-276">Returns the evaluated, escaped value of the Include attribute of the provided item definition.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEvaluatedItemIncludeEscaped">
      <MemberSignature Language="C#" Value="public static string GetEvaluatedItemIncludeEscaped (Microsoft.Build.Execution.ProjectItemInstance item);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetEvaluatedItemIncludeEscaped(class Microsoft.Build.Execution.ProjectItemInstance item) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.GetEvaluatedItemIncludeEscaped(Microsoft.Build.Execution.ProjectItemInstance)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEvaluatedItemIncludeEscaped (item As ProjectItemInstance) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetEvaluatedItemIncludeEscaped(Microsoft::Build::Execution::ProjectItemInstance ^ item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="Microsoft.Build.Execution.ProjectItemInstance" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="f0e98-277">要評估和逸出的項目。</span><span class="sxs-lookup"><span data-stu-id="f0e98-277">The item to be evaluated and escaped.</span></span></param>
        <summary><span data-ttu-id="f0e98-278">取得所提供項目之 Include 屬性的已評估、逸出值。</span><span class="sxs-lookup"><span data-stu-id="f0e98-278">Gets the evaluated, escaped value of the Include attribute of the provided item.</span></span></summary>
        <returns><span data-ttu-id="f0e98-279">傳回所提供項目之 Include 屬性的已評估、逸出值。</span><span class="sxs-lookup"><span data-stu-id="f0e98-279">Returns the evaluated, escaped value of the Include attribute of the provided item.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItems">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Execution.ProjectItemInstance&gt; GetItems (string itemType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Execution.ProjectItemInstance&gt; GetItems(string itemType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.GetItems(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItems (itemType As String) As ICollection(Of ProjectItemInstance)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::ICollection&lt;Microsoft::Build::Execution::ProjectItemInstance ^&gt; ^ GetItems(System::String ^ itemType);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Build.Evaluation.IItemProvider`1.GetItems(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Execution.ProjectItemInstance&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="itemType"><span data-ttu-id="f0e98-280">要擷取之項目的項目型別。</span><span class="sxs-lookup"><span data-stu-id="f0e98-280">The item type of the items to be retrieved.</span></span></param>
        <summary><span data-ttu-id="f0e98-281">取得這個專案中屬於指定之型別的所有項目。</span><span class="sxs-lookup"><span data-stu-id="f0e98-281">Gets all the items in this project of the specified type.</span></span> <span data-ttu-id="f0e98-282">這是一份唯讀的清單。</span><span class="sxs-lookup"><span data-stu-id="f0e98-282">This is a read-only list.</span></span></summary>
        <returns><span data-ttu-id="f0e98-283">傳回這個專案中屬於指定之型別的所有項目。</span><span class="sxs-lookup"><span data-stu-id="f0e98-283">Returns all the items in this project of the specified type.</span></span> <span data-ttu-id="f0e98-284">如果沒有任何項目，則傳回空白清單。</span><span class="sxs-lookup"><span data-stu-id="f0e98-284">Returns an empty list if there are none.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItemsByItemTypeAndEvaluatedInclude">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Execution.ProjectItemInstance&gt; GetItemsByItemTypeAndEvaluatedInclude (string itemType, string evaluatedInclude);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Execution.ProjectItemInstance&gt; GetItemsByItemTypeAndEvaluatedInclude(string itemType, string evaluatedInclude) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.GetItemsByItemTypeAndEvaluatedInclude(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItemsByItemTypeAndEvaluatedInclude (itemType As String, evaluatedInclude As String) As IEnumerable(Of ProjectItemInstance)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Execution::ProjectItemInstance ^&gt; ^ GetItemsByItemTypeAndEvaluatedInclude(System::String ^ itemType, System::String ^ evaluatedInclude);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Execution.ProjectItemInstance&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemType" Type="System.String" />
        <Parameter Name="evaluatedInclude" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="itemType"><span data-ttu-id="f0e98-285">要擷取之項目的項目型別。</span><span class="sxs-lookup"><span data-stu-id="f0e98-285">The item type of the items to be retrieved.</span></span></param>
        <param name="evaluatedInclude"><span data-ttu-id="f0e98-286">要擷取之項目的已評估 Include 值。</span><span class="sxs-lookup"><span data-stu-id="f0e98-286">The evaluated include value of the items to be retrieved</span></span></param>
        <summary><span data-ttu-id="f0e98-287">取得這個專案中屬於指定型別與評估之 Include 值的所有項目。</span><span class="sxs-lookup"><span data-stu-id="f0e98-287">Gets all the items in this project of the specified type and evaluated include value.</span></span> <span data-ttu-id="f0e98-288">這是一份唯讀的清單。</span><span class="sxs-lookup"><span data-stu-id="f0e98-288">This is a read-only list.</span></span></summary>
        <returns><span data-ttu-id="f0e98-289">傳回這個專案中屬於指定類型與評估之 Include 值的所有項目。</span><span class="sxs-lookup"><span data-stu-id="f0e98-289">Returns all the items in this project of the specified type and evaluated include value.</span></span> <span data-ttu-id="f0e98-290">如果沒有任何項目，則傳回空集合。</span><span class="sxs-lookup"><span data-stu-id="f0e98-290">Returns an empty collection if there are none.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetMetadataValueEscaped">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f0e98-291">使用所提供項目定義的已提供名稱，取得中繼資料的逸出值。</span><span class="sxs-lookup"><span data-stu-id="f0e98-291">Gets the escaped value of the metadatum with the provided name of the provided item definition.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetMetadataValueEscaped">
      <MemberSignature Language="C#" Value="public static string GetMetadataValueEscaped (Microsoft.Build.Execution.ProjectMetadataInstance metadatum);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetMetadataValueEscaped(class Microsoft.Build.Execution.ProjectMetadataInstance metadatum) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.GetMetadataValueEscaped(Microsoft.Build.Execution.ProjectMetadataInstance)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMetadataValueEscaped (metadatum As ProjectMetadataInstance) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetMetadataValueEscaped(Microsoft::Build::Execution::ProjectMetadataInstance ^ metadatum);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadatum" Type="Microsoft.Build.Execution.ProjectMetadataInstance" />
      </Parameters>
      <Docs>
        <param name="metadatum"><span data-ttu-id="f0e98-292">要逸出的中繼資料。</span><span class="sxs-lookup"><span data-stu-id="f0e98-292">The metadatum to be escaped.</span></span></param>
        <summary><span data-ttu-id="f0e98-293">取得指定之中繼資料的逸出值。</span><span class="sxs-lookup"><span data-stu-id="f0e98-293">Gets the escaped value of the provided metadatum.</span></span></summary>
        <returns><span data-ttu-id="f0e98-294">傳回所提供中繼資料的逸出值。</span><span class="sxs-lookup"><span data-stu-id="f0e98-294">Returns the escaped value of the provided metadatum.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMetadataValueEscaped">
      <MemberSignature Language="C#" Value="public static string GetMetadataValueEscaped (Microsoft.Build.Execution.ProjectItemDefinitionInstance item, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetMetadataValueEscaped(class Microsoft.Build.Execution.ProjectItemDefinitionInstance item, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.GetMetadataValueEscaped(Microsoft.Build.Execution.ProjectItemDefinitionInstance,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMetadataValueEscaped (item As ProjectItemDefinitionInstance, name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetMetadataValueEscaped(Microsoft::Build::Execution::ProjectItemDefinitionInstance ^ item, System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="Microsoft.Build.Execution.ProjectItemDefinitionInstance" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="f0e98-295">要提供中繼資料值的項目定義。</span><span class="sxs-lookup"><span data-stu-id="f0e98-295">The item definition to provide the metadatum value.</span></span></param>
        <param name="name"><span data-ttu-id="f0e98-296">中繼資料的名稱。</span><span class="sxs-lookup"><span data-stu-id="f0e98-296">The name of the metadatum.</span></span></param>
        <summary><span data-ttu-id="f0e98-297">使用所提供項目定義的已提供名稱，取得中繼資料的逸出值。</span><span class="sxs-lookup"><span data-stu-id="f0e98-297">Gets the escaped value of the metadatum with the provided name of the provided item definition.</span></span></summary>
        <returns><span data-ttu-id="f0e98-298">使用所提供項目定義的已提供名稱，傳回中繼資料的逸出值。</span><span class="sxs-lookup"><span data-stu-id="f0e98-298">Returns the escaped value of the metadatum with the provided name of the provided item definition.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMetadataValueEscaped">
      <MemberSignature Language="C#" Value="public static string GetMetadataValueEscaped (Microsoft.Build.Execution.ProjectItemInstance item, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetMetadataValueEscaped(class Microsoft.Build.Execution.ProjectItemInstance item, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.GetMetadataValueEscaped(Microsoft.Build.Execution.ProjectItemInstance,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMetadataValueEscaped (item As ProjectItemInstance, name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetMetadataValueEscaped(Microsoft::Build::Execution::ProjectItemInstance ^ item, System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="Microsoft.Build.Execution.ProjectItemInstance" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="f0e98-299">要提供中繼資料值的項目。</span><span class="sxs-lookup"><span data-stu-id="f0e98-299">The item to provide the metadatum value.</span></span></param>
        <param name="name"><span data-ttu-id="f0e98-300">中繼資料的名稱。</span><span class="sxs-lookup"><span data-stu-id="f0e98-300">The name of the metadatum.</span></span></param>
        <summary><span data-ttu-id="f0e98-301">取得中繼資料的逸出值，其中指定的名稱位於指定的項目上。</span><span class="sxs-lookup"><span data-stu-id="f0e98-301">Gets the escaped value of the metadatum with the provided name on the provided item.</span></span></summary>
        <returns><span data-ttu-id="f0e98-302">使用所提供項目的已提供名稱，傳回中繼資料的逸出值。</span><span class="sxs-lookup"><span data-stu-id="f0e98-302">Returns the escaped value of the metadatum with the provided name on the provided item.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProperty">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Execution.ProjectPropertyInstance GetProperty (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Build.Execution.ProjectPropertyInstance GetProperty(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.GetProperty(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProperty (name As String) As ProjectPropertyInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::Build::Execution::ProjectPropertyInstance ^ GetProperty(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Build.Evaluation.IPropertyProvider`1.GetProperty(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Execution.ProjectPropertyInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="f0e98-303">要擷取的屬性名稱。</span><span class="sxs-lookup"><span data-stu-id="f0e98-303">The name of the property to retrieve.</span></span></param>
        <summary><span data-ttu-id="f0e98-304">取得具有指定名稱的屬性。</span><span class="sxs-lookup"><span data-stu-id="f0e98-304">Get the property with the given name.</span></span></summary>
        <returns><span data-ttu-id="f0e98-305">傳回具有指定名稱的屬性。</span><span class="sxs-lookup"><span data-stu-id="f0e98-305">Returns the property with the given name.</span></span> <span data-ttu-id="f0e98-306">如果沒有該名稱的屬性存在，則傳回 Null。</span><span class="sxs-lookup"><span data-stu-id="f0e98-306">Returns null if no property exists with that name.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPropertyValue">
      <MemberSignature Language="C#" Value="public string GetPropertyValue (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetPropertyValue(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.GetPropertyValue(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPropertyValue (name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetPropertyValue(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="f0e98-307">要擷取其值之屬性的名稱。</span><span class="sxs-lookup"><span data-stu-id="f0e98-307">The name of the property whose value is to be retrieved.</span></span></param>
        <summary><span data-ttu-id="f0e98-308">取得具有指定之名稱的屬性值。</span><span class="sxs-lookup"><span data-stu-id="f0e98-308">Get the value of the property with the given name.</span></span></summary>
        <returns><span data-ttu-id="f0e98-309">傳回具有指定之名稱的屬性值。</span><span class="sxs-lookup"><span data-stu-id="f0e98-309">Returns the value of the property with the given name.</span></span> <span data-ttu-id="f0e98-310">如果沒有該名稱的屬性存在，則傳回空字串。</span><span class="sxs-lookup"><span data-stu-id="f0e98-310">Returns an empty string if no property exists with that name.</span></span> <span data-ttu-id="f0e98-311">傳回的值沒有逸出的字元序列。</span><span class="sxs-lookup"><span data-stu-id="f0e98-311">The value returned has no escaped character sequences.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0e98-312">這個方法不會區分值為空字串的屬性並沒有具有指定名稱的屬性。</span><span class="sxs-lookup"><span data-stu-id="f0e98-312">This method does not distinguish between a property with a value of empty string and no property with the given name.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPropertyValueEscaped">
      <MemberSignature Language="C#" Value="public static string GetPropertyValueEscaped (Microsoft.Build.Execution.ProjectPropertyInstance property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetPropertyValueEscaped(class Microsoft.Build.Execution.ProjectPropertyInstance property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.GetPropertyValueEscaped(Microsoft.Build.Execution.ProjectPropertyInstance)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPropertyValueEscaped (property As ProjectPropertyInstance) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetPropertyValueEscaped(Microsoft::Build::Execution::ProjectPropertyInstance ^ property);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.Build.Execution.ProjectPropertyInstance" />
      </Parameters>
      <Docs>
        <param name="property"><span data-ttu-id="f0e98-313">要逸出的屬性。</span><span class="sxs-lookup"><span data-stu-id="f0e98-313">The property to be escaped.</span></span></param>
        <summary><span data-ttu-id="f0e98-314">取得所提供屬性的逸出值。</span><span class="sxs-lookup"><span data-stu-id="f0e98-314">Get the escaped value of the provided property.</span></span></summary>
        <returns><span data-ttu-id="f0e98-315">傳回所提供屬性的逸出值。</span><span class="sxs-lookup"><span data-stu-id="f0e98-315">Returns the escaped value of the provided property.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GlobalProperties">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,string&gt; GlobalProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, string&gt; GlobalProperties" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectInstance.GlobalProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property GlobalProperties As IDictionary(Of String, String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ GlobalProperties { System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f0e98-316">取得用於評估此專案之全域屬性的字典 (如果有的話)。</span><span class="sxs-lookup"><span data-stu-id="f0e98-316">Gets the dictionary of global properties this project was evaluated with, if any.</span></span></summary>
        <value><span data-ttu-id="f0e98-317">傳回用於評估此專案之全域屬性的字典。</span><span class="sxs-lookup"><span data-stu-id="f0e98-317">Returns the dictionary of global properties this project was evaluated with.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0e98-318">讀取僅集合。</span><span class="sxs-lookup"><span data-stu-id="f0e98-318">Read only collection.</span></span>  
  
 <span data-ttu-id="f0e98-319">周遊專案參考。</span><span class="sxs-lookup"><span data-stu-id="f0e98-319">Traverses project references.</span></span>  
  
 <span data-ttu-id="f0e98-320">這是公開的 getter，將轉譯成唯讀的無作用 IDictionary\<字串、 字串 >。</span><span class="sxs-lookup"><span data-stu-id="f0e98-320">This is the publicly exposed getter, that translates into a read-only dead IDictionary\<string, string>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitialTargets">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.List&lt;string&gt; InitialTargets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.List`1&lt;string&gt; InitialTargets" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectInstance.InitialTargets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InitialTargets As List(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::List&lt;System::String ^&gt; ^ InitialTargets { System::Collections::Generic::List&lt;System::String ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Build.Evaluation.IEvaluatorData`4.InitialTargets</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f0e98-321">取得專案的初始目標與其所有匯入的清單 (深度優先)。</span><span class="sxs-lookup"><span data-stu-id="f0e98-321">Gets the list of initial targets for the project and all its imports, depth-first.</span></span> <span data-ttu-id="f0e98-322">這些目標會在任何其他目標之前建置。</span><span class="sxs-lookup"><span data-stu-id="f0e98-322">These targets are built before any other targets.</span></span></summary>
        <value><span data-ttu-id="f0e98-323">傳回專案的初始目標與其所有匯入的清單 (深度優先)。</span><span class="sxs-lookup"><span data-stu-id="f0e98-323">Returns the list of initial targets for the project and all its imports, depth-first.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsImmutable">
      <MemberSignature Language="C#" Value="public bool IsImmutable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsImmutable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectInstance.IsImmutable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsImmutable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsImmutable { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f0e98-324">取得表示專案執行個體為不可變的旗標。</span><span class="sxs-lookup"><span data-stu-id="f0e98-324">Gets a flag indicating that the project instance is immutable.</span></span> <span data-ttu-id="f0e98-325">建立執行個體時，會永久設定這個旗標。</span><span class="sxs-lookup"><span data-stu-id="f0e98-325">This flag is set permanently when the instance is created.</span></span></summary>
        <value><span data-ttu-id="f0e98-326">傳回此旗標。</span><span class="sxs-lookup"><span data-stu-id="f0e98-326">Returns the flag.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemDefinitions">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,Microsoft.Build.Execution.ProjectItemDefinitionInstance&gt; ItemDefinitions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, class Microsoft.Build.Execution.ProjectItemDefinitionInstance&gt; ItemDefinitions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectInstance.ItemDefinitions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ItemDefinitions As IDictionary(Of String, ProjectItemDefinitionInstance)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, Microsoft::Build::Execution::ProjectItemDefinitionInstance ^&gt; ^ ItemDefinitions { System::Collections::Generic::IDictionary&lt;System::String ^, Microsoft::Build::Execution::ProjectItemDefinitionInstance ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,Microsoft.Build.Execution.ProjectItemDefinitionInstance&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f0e98-327">取得專案中項目定義的唯讀字典 (以項目型別當做索引鍵)。</span><span class="sxs-lookup"><span data-stu-id="f0e98-327">Gets a read-only dictionary of the item definitions in the project, keyed by item type.</span></span></summary>
        <value><span data-ttu-id="f0e98-328">傳回專案中項目定義的唯讀字典 (以項目型別當做索引鍵)。</span><span class="sxs-lookup"><span data-stu-id="f0e98-328">Returns a read-only dictionary of the item definitions in the project, keyed by item type.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Items">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Execution.ProjectItemInstance&gt; Items { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Execution.ProjectItemInstance&gt; Items" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectInstance.Items" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Items As ICollection(Of ProjectItemInstance)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;Microsoft::Build::Execution::ProjectItemInstance ^&gt; ^ Items { System::Collections::Generic::ICollection&lt;Microsoft::Build::Execution::ProjectItemInstance ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Execution.ProjectItemInstance&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f0e98-329">取得這個專案中的所有項目。</span><span class="sxs-lookup"><span data-stu-id="f0e98-329">Gets all items in this project.</span></span></summary>
        <value><span data-ttu-id="f0e98-330">傳回這個專案中的所有項目。</span><span class="sxs-lookup"><span data-stu-id="f0e98-330">Returns all items in this project.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemTypes">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;string&gt; ItemTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;string&gt; ItemTypes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectInstance.ItemTypes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ItemTypes As ICollection(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;System::String ^&gt; ^ ItemTypes { System::Collections::Generic::ICollection&lt;System::String ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f0e98-331">取得這個專案中的所有項目型別。</span><span class="sxs-lookup"><span data-stu-id="f0e98-331">Gets all item types in this project.</span></span></summary>
        <value><span data-ttu-id="f0e98-332">傳回這個專案中的所有項目型別。</span><span class="sxs-lookup"><span data-stu-id="f0e98-332">Returns all item types in this project.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProjectFileLocation">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Construction.ElementLocation ProjectFileLocation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Construction.ElementLocation ProjectFileLocation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectInstance.ProjectFileLocation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProjectFileLocation As ElementLocation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Construction::ElementLocation ^ ProjectFileLocation { Microsoft::Build::Construction::ElementLocation ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ElementLocation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f0e98-333">取得原始檔案本身的位置。</span><span class="sxs-lookup"><span data-stu-id="f0e98-333">Gets the location of the originating file itself.</span></span> <span data-ttu-id="f0e98-334">絕對不會是 null。</span><span class="sxs-lookup"><span data-stu-id="f0e98-334">Never null.</span></span></summary>
        <value><span data-ttu-id="f0e98-335">傳回原始檔案的位置。</span><span class="sxs-lookup"><span data-stu-id="f0e98-335">Returns the location of the originating file.</span></span> <span data-ttu-id="f0e98-336">永遠不傳回 null。</span><span class="sxs-lookup"><span data-stu-id="f0e98-336">Never returns null.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Execution.ProjectPropertyInstance&gt; Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Execution.ProjectPropertyInstance&gt; Properties" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectInstance.Properties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Properties As ICollection(Of ProjectPropertyInstance)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;Microsoft::Build::Execution::ProjectPropertyInstance ^&gt; ^ Properties { System::Collections::Generic::ICollection&lt;Microsoft::Build::Execution::ProjectPropertyInstance ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Execution.ProjectPropertyInstance&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f0e98-337">取得這個專案中的所有屬性。</span><span class="sxs-lookup"><span data-stu-id="f0e98-337">Gets all properties in this project.</span></span></summary>
        <value><span data-ttu-id="f0e98-338">傳回這個專案中的所有屬性。</span><span class="sxs-lookup"><span data-stu-id="f0e98-338">Returns all properties in this project.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveItem">
      <MemberSignature Language="C#" Value="public bool RemoveItem (Microsoft.Build.Execution.ProjectItemInstance item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveItem(class Microsoft.Build.Execution.ProjectItemInstance item) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.RemoveItem(Microsoft.Build.Execution.ProjectItemInstance)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveItem (item As ProjectItemInstance) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveItem(Microsoft::Build::Execution::ProjectItemInstance ^ item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="Microsoft.Build.Execution.ProjectItemInstance" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="f0e98-339">要移除的項目。</span><span class="sxs-lookup"><span data-stu-id="f0e98-339">The item to be removed.</span></span></param>
        <summary><span data-ttu-id="f0e98-340">從專案中移除項目 (如果有的話)。</span><span class="sxs-lookup"><span data-stu-id="f0e98-340">Removes an item from the project, if present.</span></span> <span data-ttu-id="f0e98-341">如果有項目存在，則傳回 true，否則傳回 false。</span><span class="sxs-lookup"><span data-stu-id="f0e98-341">Returns true if it was present, false otherwise.</span></span></summary>
        <returns><span data-ttu-id="f0e98-342">如果項目在移除前便已存在，則傳回 true，否則傳回 false。</span><span class="sxs-lookup"><span data-stu-id="f0e98-342">Returns true if the item was present before removal; false otherwise.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveProperty">
      <MemberSignature Language="C#" Value="public bool RemoveProperty (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveProperty(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.RemoveProperty(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveProperty (name As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveProperty(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="f0e98-343">要移除的屬性名稱。</span><span class="sxs-lookup"><span data-stu-id="f0e98-343">The name of the property to be removed.</span></span></param>
        <summary><span data-ttu-id="f0e98-344">移除具有指定名稱的屬性。</span><span class="sxs-lookup"><span data-stu-id="f0e98-344">Removes a property with the given name.</span></span> <span data-ttu-id="f0e98-345">如果屬性有一個值 (或許是空字串)，則傳回 true，否則傳回 false。</span><span class="sxs-lookup"><span data-stu-id="f0e98-345">Returns true if the property had a value (possibly empty string), otherwise false.</span></span></summary>
        <returns><span data-ttu-id="f0e98-346">如果屬性在移除前有一個值 (或許是空字串)，則傳回 true，否則傳回 false。</span><span class="sxs-lookup"><span data-stu-id="f0e98-346">Returns true if the property had a value (possibly an empty string) before removal; false otherwise.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetProperty">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Execution.ProjectPropertyInstance SetProperty (string name, string evaluatedValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Execution.ProjectPropertyInstance SetProperty(string name, string evaluatedValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.SetProperty(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetProperty (name As String, evaluatedValue As String) As ProjectPropertyInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Execution::ProjectPropertyInstance ^ SetProperty(System::String ^ name, System::String ^ evaluatedValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Execution.ProjectPropertyInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="evaluatedValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="f0e98-347">要加入的屬性名稱。</span><span class="sxs-lookup"><span data-stu-id="f0e98-347">The name of the property to add.</span></span></param>
        <param name="evaluatedValue"><span data-ttu-id="f0e98-348">要加入之屬性的已評估值。</span><span class="sxs-lookup"><span data-stu-id="f0e98-348">The evaluated value of the property to add.</span></span></param>
        <summary><span data-ttu-id="f0e98-349">使用指定的名稱和值，將屬性加入至專案。</span><span class="sxs-lookup"><span data-stu-id="f0e98-349">Add a property with the specified name and value to the project.</span></span> <span data-ttu-id="f0e98-350">覆寫屬性集合中已有相同名稱的任何屬性。</span><span class="sxs-lookup"><span data-stu-id="f0e98-350">Overwrites any property with the same name already in the property collection.</span></span></summary>
        <returns><span data-ttu-id="f0e98-351">傳回新屬性。</span><span class="sxs-lookup"><span data-stu-id="f0e98-351">Returns the new property.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0e98-352">我們不確定我們沒有一個已經用於另一個 ProjectPropertyInstance ProjectPropertyInstance。</span><span class="sxs-lookup"><span data-stu-id="f0e98-352">We don't take a ProjectPropertyInstance to make sure we don't have one that's already in use by another ProjectPropertyInstance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Targets">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,Microsoft.Build.Execution.ProjectTargetInstance&gt; Targets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, class Microsoft.Build.Execution.ProjectTargetInstance&gt; Targets" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectInstance.Targets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Targets As IDictionary(Of String, ProjectTargetInstance)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, Microsoft::Build::Execution::ProjectTargetInstance ^&gt; ^ Targets { System::Collections::Generic::IDictionary&lt;System::String ^, Microsoft::Build::Execution::ProjectTargetInstance ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,Microsoft.Build.Execution.ProjectTargetInstance&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f0e98-353">取得此專案中所有目標的列舉程式。</span><span class="sxs-lookup"><span data-stu-id="f0e98-353">Gets an enumerator over all targets in this project.</span></span> <span data-ttu-id="f0e98-354">這個集合是唯讀的。</span><span class="sxs-lookup"><span data-stu-id="f0e98-354">This collection is read-only.</span></span></summary>
        <value><span data-ttu-id="f0e98-355">傳回此專案中所有目標的列舉程式。</span><span class="sxs-lookup"><span data-stu-id="f0e98-355">Returns an enumerator over all targets in this project.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToolsVersion">
      <MemberSignature Language="C#" Value="public string ToolsVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ToolsVersion" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectInstance.ToolsVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ToolsVersion As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ToolsVersion { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f0e98-356">取得用於評估此專案的工具版本 (如果有的話)。</span><span class="sxs-lookup"><span data-stu-id="f0e98-356">Gets the tools version this project was evaluated with, if any.</span></span></summary>
        <value><span data-ttu-id="f0e98-357">傳回用於評估此專案的工具版本 (如果有的話)。</span><span class="sxs-lookup"><span data-stu-id="f0e98-357">Returns the tools version this project was evaluated with, if any.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0e98-358">結果不一定相同工具版本，在專案標籤上，如果有的話。它可能已從外部指定，例如與 /tv 交換器。</span><span class="sxs-lookup"><span data-stu-id="f0e98-358">The result is not necessarily the same as the tools version on the Project tag, if any; it may have been externally specified, for example with a /tv switch.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToProjectRootElement">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Construction.ProjectRootElement ToProjectRootElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Construction.ProjectRootElement ToProjectRootElement() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.ToProjectRootElement" />
      <MemberSignature Language="VB.NET" Value="Public Function ToProjectRootElement () As ProjectRootElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Construction::ProjectRootElement ^ ToProjectRootElement();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ProjectRootElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f0e98-359">從這個 ProjectInstance 的內容建立 ProjectRootElement。</span><span class="sxs-lookup"><span data-stu-id="f0e98-359">Creates a ProjectRootElement from the contents of this ProjectInstance.</span></span></summary>
        <returns><span data-ttu-id="f0e98-360">傳回代表這個執行個體的 ProjectRootElement。</span><span class="sxs-lookup"><span data-stu-id="f0e98-360">Returns a ProjectRootElement which represents this instance.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateStateFrom">
      <MemberSignature Language="C#" Value="public void UpdateStateFrom (Microsoft.Build.Execution.ProjectInstance projectState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UpdateStateFrom(class Microsoft.Build.Execution.ProjectInstance projectState) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.UpdateStateFrom(Microsoft.Build.Execution.ProjectInstance)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UpdateStateFrom (projectState As ProjectInstance)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UpdateStateFrom(Microsoft::Build::Execution::ProjectInstance ^ projectState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectState" Type="Microsoft.Build.Execution.ProjectInstance" />
      </Parameters>
      <Docs>
        <param name="projectState"><span data-ttu-id="f0e98-361">做為更新來源的 <see langword="ProjectInstance" />。</span><span class="sxs-lookup"><span data-stu-id="f0e98-361">The <see langword="ProjectInstance" /> to update from.</span></span></param>
        <summary><span data-ttu-id="f0e98-362">將專案狀態 <see cref="P:Microsoft.Build.Execution.ProjectInstance.GlobalProperties" />、<see cref="P:Microsoft.Build.Execution.ProjectInstance.Properties" /> 和 <see cref="P:Microsoft.Build.Execution.ProjectInstance.Items" /> 取代為指定的 <see cref="T:Microsoft.Build.Execution.ProjectInstance" /> 中的專案狀態。</span><span class="sxs-lookup"><span data-stu-id="f0e98-362">Replaces the project state <see cref="P:Microsoft.Build.Execution.ProjectInstance.GlobalProperties" />, <see cref="P:Microsoft.Build.Execution.ProjectInstance.Properties" /> and <see cref="P:Microsoft.Build.Execution.ProjectInstance.Items" /> with those from the specified <see cref="T:Microsoft.Build.Execution.ProjectInstance" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>