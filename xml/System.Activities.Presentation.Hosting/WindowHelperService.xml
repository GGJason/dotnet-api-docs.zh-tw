<Type Name="WindowHelperService" FullName="System.Activities.Presentation.Hosting.WindowHelperService">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5a93c8a8ff01f9e1010f508cabc0b8f0b033ff1b" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class WindowHelperService" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WindowHelperService extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Presentation.Hosting.WindowHelperService" />
  <TypeSignature Language="VB.NET" Value="Public Class WindowHelperService" />
  <TypeSignature Language="C++ CLI" Value="public ref class WindowHelperService" />
  <AssemblyInfo>
    <AssemblyName>System.Activities.Presentation</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="a873c-101">提供功能來註冊與移除註冊事件通知的委派，以及設定視窗的擁有權。</span>
      <span class="sxs-lookup">
        <span data-stu-id="a873c-101">Provides functionalities to register and unregister delegates for event notifications, as well as set ownership for windows.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WindowHelperService (IntPtr hwnd);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(native int hwnd) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Hosting.WindowHelperService.#ctor(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (hwnd As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WindowHelperService(IntPtr hwnd);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="hwnd" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="hwnd">
          <span data-ttu-id="a873c-102">父視窗的控制代碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a873c-102">A handle to a parent window.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a873c-103">使用特定的父視窗控制代碼，初始化 <see cref="T:System.Activities.Presentation.Hosting.WindowHelperService" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a873c-103">Initializes a new instance of the <see cref="T:System.Activities.Presentation.Hosting.WindowHelperService" /> class with the specific handle to a parent window.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParentWindowHwnd">
      <MemberSignature Language="C#" Value="public IntPtr ParentWindowHwnd { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ParentWindowHwnd" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Hosting.WindowHelperService.ParentWindowHwnd" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ParentWindowHwnd As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IntPtr ParentWindowHwnd { IntPtr get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a873c-104">取得或設定父視窗的控制代碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a873c-104">Gets or sets the handle of the parent window.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a873c-105">傳回 <see cref="T:System.IntPtr" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a873c-105">Returns <see cref="T:System.IntPtr" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterWindowMessageHandler">
      <MemberSignature Language="C#" Value="public bool RegisterWindowMessageHandler (System.Activities.Presentation.Hosting.WindowMessage callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RegisterWindowMessageHandler(class System.Activities.Presentation.Hosting.WindowMessage callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Hosting.WindowHelperService.RegisterWindowMessageHandler(System.Activities.Presentation.Hosting.WindowMessage)" />
      <MemberSignature Language="VB.NET" Value="Public Function RegisterWindowMessageHandler (callback As WindowMessage) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RegisterWindowMessageHandler(System::Activities::Presentation::Hosting::WindowMessage ^ callback);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Activities.Presentation.Hosting.WindowMessage" />
      </Parameters>
      <Docs>
        <param name="callback">
          <span data-ttu-id="a873c-106">要針對事件通知註冊的委派。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a873c-106">The delegate to be registered for event notifications.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a873c-107">註冊指定的事件通知委派。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a873c-107">Registers the specified delegate for event notifications.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a873c-108">如果作業成功，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a873c-108">
              <see langword="true" /> if the operation is successful; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a873c-109">
            <paramref name="callback" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a873c-109">
              <paramref name="callback" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="TrySetWindowOwner">
      <MemberSignature Language="C#" Value="public bool TrySetWindowOwner (System.Windows.DependencyObject source, System.Windows.Window target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TrySetWindowOwner(class System.Windows.DependencyObject source, class System.Windows.Window target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Hosting.WindowHelperService.TrySetWindowOwner(System.Windows.DependencyObject,System.Windows.Window)" />
      <MemberSignature Language="VB.NET" Value="Public Function TrySetWindowOwner (source As DependencyObject, target As Window) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TrySetWindowOwner(System::Windows::DependencyObject ^ source, System::Windows::Window ^ target);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Windows.DependencyObject" />
        <Parameter Name="target" Type="System.Windows.Window" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="a873c-110">
            <c>target</c> 的擁有者。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a873c-110">The owner of <c>target</c>.</span>
          </span>
        </param>
        <param name="target">
          <span data-ttu-id="a873c-111">
            <c>source</c> 所擁有的視窗。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a873c-111">The window that is to be owned by <c>source</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a873c-112">將視窗指派為指定之視窗的擁有者。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a873c-112">Assigns the window to be the owner of the specified window.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a873c-113">如果作業成功，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a873c-113">
              <see langword="true" /> if the operation is successful; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnregisterWindowMessageHandler">
      <MemberSignature Language="C#" Value="public bool UnregisterWindowMessageHandler (System.Activities.Presentation.Hosting.WindowMessage callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool UnregisterWindowMessageHandler(class System.Activities.Presentation.Hosting.WindowMessage callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Hosting.WindowHelperService.UnregisterWindowMessageHandler(System.Activities.Presentation.Hosting.WindowMessage)" />
      <MemberSignature Language="VB.NET" Value="Public Function UnregisterWindowMessageHandler (callback As WindowMessage) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool UnregisterWindowMessageHandler(System::Activities::Presentation::Hosting::WindowMessage ^ callback);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Activities.Presentation.Hosting.WindowMessage" />
      </Parameters>
      <Docs>
        <param name="callback">
          <span data-ttu-id="a873c-114">要從事件通知移除的委派。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a873c-114">The delegate to be removed from event notifications.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a873c-115">移除註冊指定的事件通知委派。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a873c-115">Unregisters the specified delegate for event notifications.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a873c-116">如果作業成功，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a873c-116">
              <see langword="true" /> if the operation is successful; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>