<Type Name="ExpandSegment" FullName="System.Data.Services.ExpandSegment">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a658a17877546c7d39c2cdcf7e66e5e008f70df1" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55398820" /></Metadata><TypeSignature Language="C#" Value="public class ExpandSegment" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ExpandSegment extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.Services.ExpandSegment" />
  <TypeSignature Language="VB.NET" Value="Public Class ExpandSegment" />
  <TypeSignature Language="C++ CLI" Value="public ref class ExpandSegment" />
  <TypeSignature Language="F#" Value="type ExpandSegment = class" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Services</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("ExpandSegment ({name},Filter={filter})]")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>指出資料是否應以內嵌方式傳回而非延期內容的查詢區段。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `$expand`子句會指出每個`$expand`應該完全展開項目。 比方說，值`OrderLines.Product.Image`與`$expand`會導致`OrderLines`，則`Product`中的每個項目的`OrderLines`，和`Image`的`Product`中的每個項目的`OrderLines`展開。  
  
 中的最左邊的屬性`$expand`子句必須在要求 URI 中的最後一個路徑區段所識別的實體集內部的實體類型上的屬性。  
  
 備援 expand 子句規則是可接受並忽略。  
  
   
  
## Examples  
 下列 URI 會展開`OrderLines`每個相關聯`Order`查詢所傳回。  
  
```  
http://host/service.svc/Orders?$expand=OrderLines  
  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ExpandSegment (string name, System.Linq.Expressions.Expression filter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, class System.Linq.Expressions.Expression filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.ExpandSegment.#ctor(System.String,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, filter As Expression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ExpandSegment(System::String ^ name, System::Linq::Expressions::Expression ^ filter);" />
      <MemberSignature Language="F#" Value="new System.Data.Services.ExpandSegment : string * System.Linq.Expressions.Expression -&gt; System.Data.Services.ExpandSegment" Usage="new System.Data.Services.ExpandSegment (name, filter)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="filter" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="name">要展開的屬性名稱。</param>
        <param name="filter">查詢中所要套用展開區段的篩選選項。</param>
        <summary>使用指定的屬性名稱及篩選運算式 (可能為 null)，初始化 <see cref="T:System.Data.Services.ExpandSegment" /> 物件。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExpandedProperty">
      <MemberSignature Language="C#" Value="public System.Data.Services.Providers.ResourceProperty ExpandedProperty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Services.Providers.ResourceProperty ExpandedProperty" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.ExpandSegment.ExpandedProperty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExpandedProperty As ResourceProperty" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Services::Providers::ResourceProperty ^ ExpandedProperty { System::Data::Services::Providers::ResourceProperty ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ExpandedProperty : System.Data.Services.Providers.ResourceProperty" Usage="System.Data.Services.ExpandSegment.ExpandedProperty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Services.Providers.ResourceProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得要展開的屬性。</summary>
        <value>要展開的屬性。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public System.Linq.Expressions.Expression Filter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Linq.Expressions.Expression Filter" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.ExpandSegment.Filter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Filter As Expression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Linq::Expressions::Expression ^ Filter { System::Linq::Expressions::Expression ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Filter : System.Linq.Expressions.Expression" Usage="System.Data.Services.ExpandSegment.Filter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>查詢中所要套用展開區段的篩選選項。</summary>
        <value>在目標資料上指定篩選的運算式。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasFilter">
      <MemberSignature Language="C#" Value="public bool HasFilter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasFilter" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.ExpandSegment.HasFilter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasFilter As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasFilter { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasFilter : bool" Usage="System.Data.Services.ExpandSegment.HasFilter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得值，指出展開陳述式是否與篩選運算式一併使用。</summary>
        <value><see langword="true" /> 如果展開陳述式搭配篩選條件運算式;否則， <see langword="false" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxResultsExpected">
      <MemberSignature Language="C#" Value="public int MaxResultsExpected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxResultsExpected" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.ExpandSegment.MaxResultsExpected" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MaxResultsExpected As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxResultsExpected { int get(); };" />
      <MemberSignature Language="F#" Value="member this.MaxResultsExpected : int" Usage="System.Data.Services.ExpandSegment.MaxResultsExpected" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得預期的結果數目上限。</summary>
        <value>表示結果數目上限的整數值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 若要啟用資料服務偵測到失敗，若要符合此條件約束，請依序展開 提供者應傳回沒有多個<xref:System.Data.Services.ExpandSegment.MaxResultsExpected%2A>+ 1 個元素。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.ExpandSegment.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Data.Services.ExpandSegment.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>要展開的屬性名稱。</summary>
        <value>包含屬性名稱的字串值。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PathHasFilter">
      <MemberSignature Language="C#" Value="public static bool PathHasFilter (System.Collections.Generic.IEnumerable&lt;System.Data.Services.ExpandSegment&gt; path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool PathHasFilter(class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Services.ExpandSegment&gt; path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.ExpandSegment.PathHasFilter(System.Collections.Generic.IEnumerable{System.Data.Services.ExpandSegment})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PathHasFilter (path As IEnumerable(Of ExpandSegment)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool PathHasFilter(System::Collections::Generic::IEnumerable&lt;System::Data::Services::ExpandSegment ^&gt; ^ path);" />
      <MemberSignature Language="F#" Value="static member PathHasFilter : seq&lt;System.Data.Services.ExpandSegment&gt; -&gt; bool" Usage="System.Data.Services.ExpandSegment.PathHasFilter path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.Collections.Generic.IEnumerable&lt;System.Data.Services.ExpandSegment&gt;" />
      </Parameters>
      <Docs>
        <param name="path">要檢查篩選的區段列舉。</param>
        <summary>傳回值，指出路徑是否包含目標資料上的篩選選項。</summary>
        <returns>如果路徑上任一區段包含篩選，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>