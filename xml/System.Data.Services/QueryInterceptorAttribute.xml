<Type Name="QueryInterceptorAttribute" FullName="System.Data.Services.QueryInterceptorAttribute">
  <TypeSignature Language="C#" Value="public sealed class QueryInterceptorAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit QueryInterceptorAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Data.Services.QueryInterceptorAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class QueryInterceptorAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class QueryInterceptorAttribute sealed : Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Services</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Method, AllowMultiple=true, Inherited=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="5e603-101">方法上的 <see cref="T:System.Data.Services.QueryInterceptorAttribute" /> 會將它標註為指定之實體集上的查詢攔截器。</span><span class="sxs-lookup"><span data-stu-id="5e603-101">The <see cref="T:System.Data.Services.QueryInterceptorAttribute" /> on a method annotates it as a query interceptor on the specified entity set.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e603-102">實體集層級的授權和驗證由使用註解的方法實作<xref:System.Data.Services.QueryInterceptorAttribute>。</span><span class="sxs-lookup"><span data-stu-id="5e603-102">Entity set-level authorization and validation is implemented by methods annotated with the <xref:System.Data.Services.QueryInterceptorAttribute>.</span></span> [!INCLUDE[ssAstoria](~/includes/ssastoria-md.md)]<span data-ttu-id="5e603-103">s 不要實作安全性原則，而是提供服務開發人員撰寫自己的安全性規則和商務驗證所需的基礎結構。</span><span class="sxs-lookup"><span data-stu-id="5e603-103">s do not implement security policies but instead provide the infrastructure required for service developers to write their own security rules and business validation.</span></span>  
  
 <span data-ttu-id="5e603-104">實體集的存取控制，透過查詢作業使用查詢組合啟用驗證。</span><span class="sxs-lookup"><span data-stu-id="5e603-104">Entity set access control and validation is enabled through query operations by using query composition.</span></span> <span data-ttu-id="5e603-105">若要控制實體為基礎的存取，請實作方法-每秒的實體集根據下列規則：</span><span class="sxs-lookup"><span data-stu-id="5e603-105">To control entity-based access, implement a method-per-entity set according to the following rules:</span></span>  
  
 <span data-ttu-id="5e603-106">方法必須有公用的範圍，並以註解<xref:System.Data.Services.QueryInterceptorAttribute>，取得實體的名稱設定為參數。</span><span class="sxs-lookup"><span data-stu-id="5e603-106">The method must have public scope and be annotated with the <xref:System.Data.Services.QueryInterceptorAttribute>, taking the name of a entity set as a parameter.</span></span>  
  
 <span data-ttu-id="5e603-107">此方法必須接受任何參數。</span><span class="sxs-lookup"><span data-stu-id="5e603-107">The method must accept no parameters.</span></span>  
  
 <span data-ttu-id="5e603-108">此方法必須傳回型別的運算式`Expression<Func<T, bool>>`也就是將篩選條件組成之實體集。</span><span class="sxs-lookup"><span data-stu-id="5e603-108">The method must return an expression of type `Expression<Func<T, bool>>` that is the filter to be composed for the entity set.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5e603-109">下列範例控制存取`Customers`實體集。</span><span class="sxs-lookup"><span data-stu-id="5e603-109">The following example controls access to the `Customers` entity set.</span></span> <span data-ttu-id="5e603-110">每個`Customer`只能看到`Orders`關聯`Customer`。</span><span class="sxs-lookup"><span data-stu-id="5e603-110">Each `Customer` can only see `Orders` associated with that `Customer`.</span></span>  
  
```  
[QueryInterceptor("Orders")]  
public Expression<Func<Order, bool>> FilterOrders()   
{  
    return o => o.Customer.Name == /* Current principal name. */;  
}   
  
// Insures that the user accessing the customer(s) has the appropriate  
// rights as defined in the QueryRules object to access the customer  
// resource(s).  
  
[QueryInterceptor ("Customers")]  
public Expression<Func<Customer, bool>> FilterCustomers()   
{  
  return c => c.Name == /* Current principal name. */ &&  
              this.CurrentDataSource.QueryRules.Contains(  
                rule => rule.Name == c.Name &&  
                        rule.CustomerAllowedToQuery == true  
              );  
}  
  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public QueryInterceptorAttribute (string entitySetName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string entitySetName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.QueryInterceptorAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (entitySetName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; QueryInterceptorAttribute(System::String ^ entitySetName);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="entitySetName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="entitySetName"><span data-ttu-id="5e603-111">包含要套用攔截器之實體的實體集名稱。</span><span class="sxs-lookup"><span data-stu-id="5e603-111">The name of the entity set that contains the entity to which the interceptor applies.</span></span></param>
        <summary><span data-ttu-id="5e603-112">初始化 <paramref name="entitySetName" /> 參數指定的實體集之 <see cref="T:System.Data.Services.QueryInterceptorAttribute" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="5e603-112">Initializes a new instance of the <see cref="T:System.Data.Services.QueryInterceptorAttribute" /> class for the entity set specified by the <paramref name="entitySetName" /> parameter.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EntitySetName">
      <MemberSignature Language="C#" Value="public string EntitySetName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EntitySetName" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.QueryInterceptorAttribute.EntitySetName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EntitySetName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ EntitySetName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e603-113">取得包含要套用攔截器之實體的實體集名稱。</span><span class="sxs-lookup"><span data-stu-id="5e603-113">Gets the name of the entity set that contains the entity to which the interceptor applies.</span></span></summary>
        <value><span data-ttu-id="5e603-114">字串，表示包含要套用攔截器之實體的實體集名稱。</span><span class="sxs-lookup"><span data-stu-id="5e603-114">A string that indicates the name of the entity set that contains the entity to which the interceptor applies.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>