<Type Name="ButtonBase" FullName="System.Windows.Controls.Primitives.ButtonBase">
  <TypeSignature Language="C#" Value="public abstract class ButtonBase : System.Windows.Controls.ContentControl, System.Windows.Input.ICommandSource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract ButtonBase extends System.Windows.Controls.ContentControl implements class System.Windows.Input.ICommandSource" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.Primitives.ButtonBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ButtonBase&#xA;Inherits ContentControl&#xA;Implements ICommandSource" />
  <TypeSignature Language="C++ CLI" Value="public ref class ButtonBase abstract : System::Windows::Controls::ContentControl, System::Windows::Input::ICommandSource" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.ContentControl</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Input.ICommandSource</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("Click")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.Button)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="a8ee1-101">表示所有 <see cref="T:System.Windows.Controls.Button" /> 控制項的基底類別 (Base Class)。</span><span class="sxs-lookup"><span data-stu-id="a8ee1-101">Represents the base class for all <see cref="T:System.Windows.Controls.Button" /> controls.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8ee1-102">處理<xref:System.Windows.Controls.Primitives.ButtonBase.Click>事件回應，當使用者按一下<xref:System.Windows.Controls.Primitives.ButtonBase>。</span><span class="sxs-lookup"><span data-stu-id="a8ee1-102">Handle the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event to respond when the user clicks a <xref:System.Windows.Controls.Primitives.ButtonBase>.</span></span> <span data-ttu-id="a8ee1-103">使用者可以引發<xref:System.Windows.Controls.Primitives.ButtonBase.Click>事件使用<xref:System.Windows.Controls.AccessText>或按 ENTER 鍵或空格鍵，當焦點在控制項時。</span><span class="sxs-lookup"><span data-stu-id="a8ee1-103">The user can raise the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event by using an <xref:System.Windows.Controls.AccessText> or by pressing ENTER or the SPACEBAR when the control has focus.</span></span>  <span data-ttu-id="a8ee1-104">當使用者按下空格鍵，將控制項設定<xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A>至`true`和擷取滑鼠。</span><span class="sxs-lookup"><span data-stu-id="a8ee1-104">When the user presses the SPACEBAR, the control sets <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> to `true` and captures the mouse.</span></span>  <span data-ttu-id="a8ee1-105">如此一來，控制項將會引發滑鼠事件這類<xref:System.Windows.UIElement.MouseEnter>和<xref:System.Windows.UIElement.IsMouseDirectlyOverChanged>。</span><span class="sxs-lookup"><span data-stu-id="a8ee1-105">As a result, the control will raise mouse events such as <xref:System.Windows.UIElement.MouseEnter> and <xref:System.Windows.UIElement.IsMouseDirectlyOverChanged>.</span></span> <span data-ttu-id="a8ee1-106">請注意，使用<xref:System.Windows.Controls.AccessText>ENTER 不會變更或<xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A>或捕捉滑鼠，但卻<xref:System.Windows.Controls.Primitives.ButtonBase.Click>事件。</span><span class="sxs-lookup"><span data-stu-id="a8ee1-106">Note that using the <xref:System.Windows.Controls.AccessText> or ENTER does not change <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> or capture the mouse, but it does raise the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event.</span></span>  
  
 <span data-ttu-id="a8ee1-107"><xref:System.Windows.Controls.Primitives.ButtonBase>設定<xref:System.Windows.Input.KeyboardNavigation.AcceptsReturn%2A>附加屬性`true`。</span><span class="sxs-lookup"><span data-stu-id="a8ee1-107">The <xref:System.Windows.Controls.Primitives.ButtonBase> sets the <xref:System.Windows.Input.KeyboardNavigation.AcceptsReturn%2A> attached property to `true`.</span></span>  
  
 <span data-ttu-id="a8ee1-108"><xref:System.Windows.Controls.Primitives.ButtonBase>設定<xref:System.Windows.UIElement.IsInputMethodEnabled%2A>屬性`false`。</span><span class="sxs-lookup"><span data-stu-id="a8ee1-108">The <xref:System.Windows.Controls.Primitives.ButtonBase> sets the <xref:System.Windows.UIElement.IsInputMethodEnabled%2A> property to `false`.</span></span>  
  
 <span data-ttu-id="a8ee1-109">A<xref:System.Windows.Controls.Primitives.ButtonBase>是<xref:System.Windows.Controls.ContentControl>，這表示它可以包含單一物件的任何類型 （例如字串、 影像或工作面板）。</span><span class="sxs-lookup"><span data-stu-id="a8ee1-109">A <xref:System.Windows.Controls.Primitives.ButtonBase> is a <xref:System.Windows.Controls.ContentControl>, which means that it can contain a single object of any type (such as a string, an image, or a panel).</span></span> <span data-ttu-id="a8ee1-110">如需詳細資訊，請參閱 <xref:System.Windows.Controls.ContentControl> 類別。</span><span class="sxs-lookup"><span data-stu-id="a8ee1-110">For more information, see the <xref:System.Windows.Controls.ContentControl> class.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ButtonBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.ButtonBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ButtonBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a8ee1-111">初始化 <see cref="T:System.Windows.Controls.Primitives.ButtonBase" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="a8ee1-111">Initializes a new instance of the <see cref="T:System.Windows.Controls.Primitives.ButtonBase" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Click">
      <MemberSignature Language="C#" Value="public event System.Windows.RoutedEventHandler Click;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.RoutedEventHandler Click" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.Primitives.ButtonBase.Click" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Click As RoutedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::RoutedEventHandler ^ Click;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8ee1-112">當按一下 <see cref="T:System.Windows.Controls.Button" /> 時發生。</span><span class="sxs-lookup"><span data-stu-id="a8ee1-112">Occurs when a <see cref="T:System.Windows.Controls.Button" /> is clicked.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8ee1-113">使用者可以引發<xref:System.Windows.Controls.Primitives.ButtonBase.Click>事件使用<xref:System.Windows.Controls.AccessText>或按 ENTER 鍵或空格鍵，當焦點在控制項時。</span><span class="sxs-lookup"><span data-stu-id="a8ee1-113">The user can raise the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event by using an <xref:System.Windows.Controls.AccessText> or by pressing ENTER or the SPACEBAR when the control has focus.</span></span>  <span data-ttu-id="a8ee1-114">當使用者按下空格鍵，將控制項設定<xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A>至`true`和擷取滑鼠。</span><span class="sxs-lookup"><span data-stu-id="a8ee1-114">When the user presses the SPACEBAR, the control sets <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> to `true` and captures the mouse.</span></span>  <span data-ttu-id="a8ee1-115">如此一來，控制項將會引發滑鼠事件這類<xref:System.Windows.UIElement.MouseEnter>和<xref:System.Windows.UIElement.IsMouseDirectlyOverChanged>。</span><span class="sxs-lookup"><span data-stu-id="a8ee1-115">As a result, the control will raise mouse events such as <xref:System.Windows.UIElement.MouseEnter> and <xref:System.Windows.UIElement.IsMouseDirectlyOverChanged>.</span></span> <span data-ttu-id="a8ee1-116">請注意，使用<xref:System.Windows.Controls.AccessText>ENTER 不會變更或<xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A>或捕捉滑鼠，但卻<xref:System.Windows.Controls.Primitives.ButtonBase.Click>事件。</span><span class="sxs-lookup"><span data-stu-id="a8ee1-116">Note that using the <xref:System.Windows.Controls.AccessText> or ENTER does not change <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> or capture the mouse, but it does raise the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event.</span></span>  
  
 <span data-ttu-id="a8ee1-117"><xref:System.Windows.Controls.Primitives.ButtonBase>標記<xref:System.Windows.UIElement.MouseLeftButtonDown>事件，如處理<xref:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonDown%2A>方法及引發<xref:System.Windows.Controls.Primitives.ButtonBase.Click>事件。</span><span class="sxs-lookup"><span data-stu-id="a8ee1-117">The <xref:System.Windows.Controls.Primitives.ButtonBase> marks the <xref:System.Windows.UIElement.MouseLeftButtonDown> event as handled in the <xref:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonDown%2A> method and raises the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event.</span></span> <span data-ttu-id="a8ee1-118">因此，<xref:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonDown%2A>事件永遠不會發生的控制項，繼承自<xref:System.Windows.Controls.Primitives.ButtonBase>。</span><span class="sxs-lookup"><span data-stu-id="a8ee1-118">Hence, the <xref:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonDown%2A> event will never occur for a control that inherits from <xref:System.Windows.Controls.Primitives.ButtonBase>.</span></span> <span data-ttu-id="a8ee1-119">相反地，附加事件處理常式<xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown>事件或呼叫<xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29>與`handledEventsToo`設`true`。</span><span class="sxs-lookup"><span data-stu-id="a8ee1-119">Instead, attach an event handler to the <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> event, or call <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> with `handledEventsToo` set to `true`.</span></span>  
  
<a name="routedEventInfo_Click"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a8ee1-120">路由事件資訊</span><span class="sxs-lookup"><span data-stu-id="a8ee1-120">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8ee1-121">識別項欄位</span><span class="sxs-lookup"><span data-stu-id="a8ee1-121">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.ButtonBase.ClickEvent>|  
|<span data-ttu-id="a8ee1-122">路由策略</span><span class="sxs-lookup"><span data-stu-id="a8ee1-122">Routing strategy</span></span>|<span data-ttu-id="a8ee1-123">反昇</span><span class="sxs-lookup"><span data-stu-id="a8ee1-123">Bubbling</span></span>|  
|<span data-ttu-id="a8ee1-124">Delegate - 委派</span><span class="sxs-lookup"><span data-stu-id="a8ee1-124">Delegate</span></span>|<xref:System.Windows.RoutedEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="a8ee1-125">下列範例示範三種不同的方式回應按一下動作的三個按鈕。</span><span class="sxs-lookup"><span data-stu-id="a8ee1-125">The following example shows three buttons that respond to clicks in three different ways.</span></span>  
  
-   <span data-ttu-id="a8ee1-126">停留： 第一個按鈕色彩時變更使用者的滑鼠停留在按鈕</span><span class="sxs-lookup"><span data-stu-id="a8ee1-126">Hover - the first button changes colors when the user hovers with the mouse over the button</span></span>  
  
-   <span data-ttu-id="a8ee1-127">按下的滑鼠按下滑鼠按鈕時需要第二個按鈕。</span><span class="sxs-lookup"><span data-stu-id="a8ee1-127">Press - the second button requires that the mouse be pressed while the mouse pointer is in the button.</span></span>  
  
-   <span data-ttu-id="a8ee1-128">版本-第三個直到按下滑鼠並放開按鈕中，不會重設按鈕的背景色彩。</span><span class="sxs-lookup"><span data-stu-id="a8ee1-128">Release - the third does not reset the background color of the buttons until the mouse is pressed and released in the button.</span></span>  
  
 [!code-xaml[ClickModes_snip#1](~/samples/snippets/csharp/VS_Snippets_Wpf/ClickModes_snip/CSharp/Pane1.xaml#1)]  
  
 [!code-csharp[ClickModes_snip#2](~/samples/snippets/csharp/VS_Snippets_Wpf/ClickModes_snip/CSharp/Pane1.xaml.cs#2)]
 [!code-vb[ClickModes_snip#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ClickModes_snip/VisualBasic/Window1.xaml.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClickEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent ClickEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent ClickEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.ButtonBase.ClickEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ClickEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ ClickEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8ee1-129">識別 <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /> 路由事件。</span><span class="sxs-lookup"><span data-stu-id="a8ee1-129">Identifies the <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8ee1-130">此事件會對應至按下滑鼠左的按鈕。</span><span class="sxs-lookup"><span data-stu-id="a8ee1-130">This event corresponds to a left mouse button click.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClickMode">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.ClickMode ClickMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.ClickMode ClickMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.ButtonBase.ClickMode" />
      <MemberSignature Language="VB.NET" Value="Public Property ClickMode As ClickMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::ClickMode ClickMode { System::Windows::Controls::ClickMode get(); void set(System::Windows::Controls::ClickMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ClickMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8ee1-131">取得或設定何時發生 <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="a8ee1-131">Gets or sets when the <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /> event occurs.</span></span></summary>
        <value><span data-ttu-id="a8ee1-132">當 <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /> 事件發生時。</span><span class="sxs-lookup"><span data-stu-id="a8ee1-132">When the <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /> event occurs.</span></span> <span data-ttu-id="a8ee1-133">預設值是 <see cref="F:System.Windows.Controls.ClickMode.Release" />。</span><span class="sxs-lookup"><span data-stu-id="a8ee1-133">The default value is <see cref="F:System.Windows.Controls.ClickMode.Release" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_ClickMode"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="a8ee1-134">相依性屬性資訊</span><span class="sxs-lookup"><span data-stu-id="a8ee1-134">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8ee1-135">識別項欄位</span><span class="sxs-lookup"><span data-stu-id="a8ee1-135">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.ButtonBase.ClickModeProperty>|  
|<span data-ttu-id="a8ee1-136">中繼資料屬性設定為 `true`</span><span class="sxs-lookup"><span data-stu-id="a8ee1-136">Metadata properties set to `true`</span></span>|<span data-ttu-id="a8ee1-137">無</span><span class="sxs-lookup"><span data-stu-id="a8ee1-137">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClickModeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ClickModeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ClickModeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.ButtonBase.ClickModeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ClickModeProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ClickModeProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8ee1-138">識別 <see cref="P:System.Windows.Controls.Primitives.ButtonBase.ClickMode" /> 相依性屬性。</span><span class="sxs-lookup"><span data-stu-id="a8ee1-138">Identifies the <see cref="P:System.Windows.Controls.Primitives.ButtonBase.ClickMode" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Command">
      <MemberSignature Language="C#" Value="public System.Windows.Input.ICommand Command { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.ICommand Command" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.ButtonBase.Command" />
      <MemberSignature Language="VB.NET" Value="Public Property Command As ICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::ICommand ^ Command { System::Windows::Input::ICommand ^ get(); void set(System::Windows::Input::ICommand ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Action")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.NeverLocalize)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8ee1-139">取得或設定按下此按鈕後要叫用的命令。</span><span class="sxs-lookup"><span data-stu-id="a8ee1-139">Gets or sets the command to invoke when this button is pressed.</span></span></summary>
        <value><span data-ttu-id="a8ee1-140">當按下這個按鈕時要呼叫的命令。</span><span class="sxs-lookup"><span data-stu-id="a8ee1-140">A command to invoke when this button is pressed.</span></span> <span data-ttu-id="a8ee1-141">預設值是 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a8ee1-141">The default value is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8ee1-142">這個屬性用來將命令與特定按鈕執行個體產生關聯。</span><span class="sxs-lookup"><span data-stu-id="a8ee1-142">This property is used to associate a command with a particular button instance.</span></span>  
  
 <span data-ttu-id="a8ee1-143">在[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]，這個屬性通常必須為靜態的命令值從其中一個現有的指令程式庫，例如設定<xref:System.Windows.Input.ApplicationCommands>或<xref:System.Windows.Input.NavigationCommands>。</span><span class="sxs-lookup"><span data-stu-id="a8ee1-143">In [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)], this property is most often set to be a static command value from one of the existing command libraries, such as <xref:System.Windows.Input.ApplicationCommands> or <xref:System.Windows.Input.NavigationCommands>.</span></span> <span data-ttu-id="a8ee1-144">如需詳細資訊，請參閱[指揮概觀](~/docs/framework/wpf/advanced/commanding-overview.md)或<xref:System.Windows.Input.ICommand>。</span><span class="sxs-lookup"><span data-stu-id="a8ee1-144">For details, see [Commanding Overview](~/docs/framework/wpf/advanced/commanding-overview.md) or <xref:System.Windows.Input.ICommand>.</span></span>  
  
<a name="xamlAttributeUsage_Command"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="a8ee1-145">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="a8ee1-145">XAML Attribute Usage</span></span>  
  
```  
<object Command="commandName"/>  
```  
  
<a name="xamlValues_Command"></a>   
## <a name="xaml-values"></a><span data-ttu-id="a8ee1-146">XAML 值</span><span class="sxs-lookup"><span data-stu-id="a8ee1-146">XAML Values</span></span>  
 <span data-ttu-id="a8ee1-147">*commandName*</span><span class="sxs-lookup"><span data-stu-id="a8ee1-147">*commandName*</span></span>  
 <span data-ttu-id="a8ee1-148">要在按下此按鈕時叫用的命令。</span><span class="sxs-lookup"><span data-stu-id="a8ee1-148">The command to invoke when this button is pressed.</span></span>  
  
<a name="dependencyPropertyInfo_Command"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="a8ee1-149">相依性屬性資訊</span><span class="sxs-lookup"><span data-stu-id="a8ee1-149">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8ee1-150">識別項欄位</span><span class="sxs-lookup"><span data-stu-id="a8ee1-150">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.ButtonBase.CommandProperty>|  
|<span data-ttu-id="a8ee1-151">中繼資料屬性設定為 `true`</span><span class="sxs-lookup"><span data-stu-id="a8ee1-151">Metadata properties set to `true`</span></span>|<span data-ttu-id="a8ee1-152">無</span><span class="sxs-lookup"><span data-stu-id="a8ee1-152">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandParameter">
      <MemberSignature Language="C#" Value="public object CommandParameter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object CommandParameter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.ButtonBase.CommandParameter" />
      <MemberSignature Language="VB.NET" Value="Public Property CommandParameter As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ CommandParameter { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Action")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.NeverLocalize)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8ee1-153">取得或設定要傳遞至 <see cref="P:System.Windows.Controls.Primitives.ButtonBase.Command" /> 屬性的參數。</span><span class="sxs-lookup"><span data-stu-id="a8ee1-153">Gets or sets the parameter to pass to the <see cref="P:System.Windows.Controls.Primitives.ButtonBase.Command" /> property.</span></span></summary>
        <value><span data-ttu-id="a8ee1-154">要傳遞至 <see cref="P:System.Windows.Controls.Primitives.ButtonBase.Command" /> 屬性的參數。</span><span class="sxs-lookup"><span data-stu-id="a8ee1-154">Parameter to pass to the <see cref="P:System.Windows.Controls.Primitives.ButtonBase.Command" /> property.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8ee1-155">大部分現有的命令，從命令程式庫不會使用命令參數。</span><span class="sxs-lookup"><span data-stu-id="a8ee1-155">Most existing commands from the command libraries do not use a command parameter.</span></span> <span data-ttu-id="a8ee1-156">使用命令參數的命令，大多數會接受參數，某些基本類型的值，例如整數或字串。</span><span class="sxs-lookup"><span data-stu-id="a8ee1-156">Of the commands that do use a command parameter, most of these take a parameter with some primitive type value, such as an integer or a string.</span></span> <span data-ttu-id="a8ee1-157">不過，便可建立自訂的命令在命令預期將非基本型別做為命令參數。</span><span class="sxs-lookup"><span data-stu-id="a8ee1-157">However, it is possible to create a custom command where that command expects a nonprimitive type as its command parameter.</span></span> <span data-ttu-id="a8ee1-158">自訂命令這種情況下，設定為<xref:System.Windows.Controls.Primitives.ButtonBase.CommandParameter%2A>在程式碼可能需要將新的或現有的物件執行個體。</span><span class="sxs-lookup"><span data-stu-id="a8ee1-158">For a custom command case like this, setting <xref:System.Windows.Controls.Primitives.ButtonBase.CommandParameter%2A> in code might require a new or existing object instance.</span></span> <span data-ttu-id="a8ee1-159">設定<xref:System.Windows.Controls.Primitives.ButtonBase.CommandParameter%2A>標記中可能需要屬性項目語法，其中的物件項目填滿屬性項目語法是該命令所預期的類型的新項目。</span><span class="sxs-lookup"><span data-stu-id="a8ee1-159">Setting <xref:System.Windows.Controls.Primitives.ButtonBase.CommandParameter%2A> in markup might require property element syntax, where the object element filling the property element syntax is a new element of the type expected by that command.</span></span> <span data-ttu-id="a8ee1-160">或者，在標記中的設定可能需要透過標記延伸的現有物件的參考 (這些參考通常使用所提出[繫結標記延伸](~/docs/framework/wpf/advanced/binding-markup-extension.md)或[StaticResource 標記延伸](~/docs/framework/wpf/advanced/staticresource-markup-extension.md)).</span><span class="sxs-lookup"><span data-stu-id="a8ee1-160">Alternatively, setting in markup might require a reference through a markup extension to an existing object (typically these references are made with [Binding Markup Extension](~/docs/framework/wpf/advanced/binding-markup-extension.md) or [StaticResource Markup Extension](~/docs/framework/wpf/advanced/staticresource-markup-extension.md)).</span></span>  
  
<a name="xamlAttributeUsage_CommandParameter"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="a8ee1-161">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="a8ee1-161">XAML Attribute Usage</span></span>  
  
```  
<object CommandParameter="commandParameter" />  
```  
  
<a name="xamlValues_CommandParameter"></a>   
## <a name="xaml-values"></a><span data-ttu-id="a8ee1-162">XAML 值</span><span class="sxs-lookup"><span data-stu-id="a8ee1-162">XAML Values</span></span>  
 <span data-ttu-id="a8ee1-163">*commandParameter*</span><span class="sxs-lookup"><span data-stu-id="a8ee1-163">*commandParameter*</span></span>  
 <span data-ttu-id="a8ee1-164">相同的型別中指定的特定命令的值<xref:System.Windows.Controls.Primitives.ButtonBase.Command%2A>必須要有屬性。</span><span class="sxs-lookup"><span data-stu-id="a8ee1-164">A value of the same type as the particular command specified in the <xref:System.Windows.Controls.Primitives.ButtonBase.Command%2A> property expects.</span></span> <span data-ttu-id="a8ee1-165">如果您使用現有的指令程式庫指令時，請參閱該命令程式庫的文件[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]使用量資訊，包括哪一種<xref:System.Windows.Controls.Primitives.ButtonBase.CommandParameter%2A>命令預期。</span><span class="sxs-lookup"><span data-stu-id="a8ee1-165">If you use an existing command library command, see that command library's documentation for [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] usage information, including which type of <xref:System.Windows.Controls.Primitives.ButtonBase.CommandParameter%2A> the command expects.</span></span> <span data-ttu-id="a8ee1-166">如果您使用自訂的命令，請參閱 < 備註 >。</span><span class="sxs-lookup"><span data-stu-id="a8ee1-166">If you use a custom command, see Remarks.</span></span>  
  
<a name="dependencyPropertyInfo_CommandParameter"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="a8ee1-167">相依性屬性資訊</span><span class="sxs-lookup"><span data-stu-id="a8ee1-167">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8ee1-168">識別項欄位</span><span class="sxs-lookup"><span data-stu-id="a8ee1-168">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.ButtonBase.CommandParameterProperty>|  
|<span data-ttu-id="a8ee1-169">中繼資料屬性設定為 `true`</span><span class="sxs-lookup"><span data-stu-id="a8ee1-169">Metadata properties set to `true`</span></span>|<span data-ttu-id="a8ee1-170">無</span><span class="sxs-lookup"><span data-stu-id="a8ee1-170">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.ICommand" />
      </Docs>
    </Member>
    <Member MemberName="CommandParameterProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CommandParameterProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CommandParameterProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.ButtonBase.CommandParameterProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CommandParameterProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ CommandParameterProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8ee1-171">識別 <see cref="P:System.Windows.Controls.Primitives.ButtonBase.CommandParameter" /> 相依性屬性。</span><span class="sxs-lookup"><span data-stu-id="a8ee1-171">Identifies the <see cref="P:System.Windows.Controls.Primitives.ButtonBase.CommandParameter" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CommandProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CommandProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.ButtonBase.CommandProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CommandProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ CommandProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8ee1-172">識別路由的 <see cref="P:System.Windows.Controls.Primitives.ButtonBase.Command" /> 相依性屬性。</span><span class="sxs-lookup"><span data-stu-id="a8ee1-172">Identifies the routed <see cref="P:System.Windows.Controls.Primitives.ButtonBase.Command" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandTarget">
      <MemberSignature Language="C#" Value="public System.Windows.IInputElement CommandTarget { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.IInputElement CommandTarget" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.ButtonBase.CommandTarget" />
      <MemberSignature Language="VB.NET" Value="Public Property CommandTarget As IInputElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::IInputElement ^ CommandTarget { System::Windows::IInputElement ^ get(); void set(System::Windows::IInputElement ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Action")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.IInputElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8ee1-173">取得或設定引發指定命令的元素。</span><span class="sxs-lookup"><span data-stu-id="a8ee1-173">Gets or sets the element on which to raise the specified command.</span></span></summary>
        <value><span data-ttu-id="a8ee1-174">要在其上引發命令的項目。</span><span class="sxs-lookup"><span data-stu-id="a8ee1-174">Element on which to raise a command.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8ee1-175"><xref:System.Windows.Controls.Primitives.ButtonBase.CommandTarget%2A>屬性不能用來定義<xref:System.Windows.UIElement>。</span><span class="sxs-lookup"><span data-stu-id="a8ee1-175">The <xref:System.Windows.Controls.Primitives.ButtonBase.CommandTarget%2A> property cannot be used to define a <xref:System.Windows.UIElement>.</span></span> <span data-ttu-id="a8ee1-176"><xref:System.Windows.Controls.Primitives.ButtonBase.CommandTarget%2A>屬性會提供已在您的應用程式中某處定義項目的參考。</span><span class="sxs-lookup"><span data-stu-id="a8ee1-176">The <xref:System.Windows.Controls.Primitives.ButtonBase.CommandTarget%2A> property provides a reference to an element that is already defined somewhere in your application.</span></span>  
  
<a name="xamlAttributeUsage_Target"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="a8ee1-177">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="a8ee1-177">XAML Attribute Usage</span></span>  
  
```  
<ButtonBase CommandTarget="{Binding ElementName= elementName }"/>  
```  
  
<a name="xamlValues_CommandTarget"></a>   
## <a name="xaml-values"></a><span data-ttu-id="a8ee1-178">XAML 值</span><span class="sxs-lookup"><span data-stu-id="a8ee1-178">XAML Values</span></span>  
 <span data-ttu-id="a8ee1-179">*elementName*</span><span class="sxs-lookup"><span data-stu-id="a8ee1-179">*elementName*</span></span>  
 <span data-ttu-id="a8ee1-180">名稱<xref:System.Windows.IInputElement>接收命令。</span><span class="sxs-lookup"><span data-stu-id="a8ee1-180">The name of <xref:System.Windows.IInputElement> that receives the command.</span></span>  
  
<a name="dependencyPropertyInfo_CommandTarget"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="a8ee1-181">相依性屬性資訊</span><span class="sxs-lookup"><span data-stu-id="a8ee1-181">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8ee1-182">識別項欄位</span><span class="sxs-lookup"><span data-stu-id="a8ee1-182">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.ButtonBase.CommandTargetProperty>|  
|<span data-ttu-id="a8ee1-183">中繼資料屬性設定為 `true`</span><span class="sxs-lookup"><span data-stu-id="a8ee1-183">Metadata properties set to `true`</span></span>|<span data-ttu-id="a8ee1-184">無</span><span class="sxs-lookup"><span data-stu-id="a8ee1-184">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.ICommand" />
      </Docs>
    </Member>
    <Member MemberName="CommandTargetProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CommandTargetProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CommandTargetProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.ButtonBase.CommandTargetProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CommandTargetProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ CommandTargetProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8ee1-185">識別 <see cref="P:System.Windows.Controls.Primitives.ButtonBase.CommandTarget" /> 相依性屬性。</span><span class="sxs-lookup"><span data-stu-id="a8ee1-185">Identifies the <see cref="P:System.Windows.Controls.Primitives.ButtonBase.CommandTarget" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEnabledCore">
      <MemberSignature Language="C#" Value="protected override bool IsEnabledCore { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEnabledCore" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.ButtonBase.IsEnabledCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property IsEnabledCore As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool IsEnabledCore { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8ee1-186">取得 <see cref="P:System.Windows.ContentElement.IsEnabled" /> 屬性的值。</span><span class="sxs-lookup"><span data-stu-id="a8ee1-186">Gets the value of the <see cref="P:System.Windows.ContentElement.IsEnabled" /> property.</span></span></summary>
        <value>
          <span data-ttu-id="a8ee1-187">如果已啟用控制項，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a8ee1-187"><see langword="true" /> if the control is enabled; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8ee1-188">如果您選擇覆寫這個實作，請確定呼叫基底方法。</span><span class="sxs-lookup"><span data-stu-id="a8ee1-188">If you choose to override this implementation, make certain that you call the base method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPressed">
      <MemberSignature Language="C#" Value="public bool IsPressed { get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPressed" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.ButtonBase.IsPressed" />
      <MemberSignature Language="VB.NET" Value="Public Property IsPressed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:  property bool IsPressed {  public:&#xA;bool get(); protected:&#xA; void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Appearance")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8ee1-189">取得值，這個值表示 <see cref="T:System.Windows.Controls.Primitives.ButtonBase" /> 目前是否已啟動。</span><span class="sxs-lookup"><span data-stu-id="a8ee1-189">Gets a value that indicates whether a <see cref="T:System.Windows.Controls.Primitives.ButtonBase" /> is currently activated.</span></span></summary>
        <value>
          <span data-ttu-id="a8ee1-190">如果 <see cref="T:System.Windows.Controls.Primitives.ButtonBase" /> 已啟動則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a8ee1-190"><see langword="true" /> if the <see cref="T:System.Windows.Controls.Primitives.ButtonBase" /> is activated; otherwise <see langword="false" />.</span></span> <span data-ttu-id="a8ee1-191">預設值為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a8ee1-191">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8ee1-192"><xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> 是按鈕，指出滑鼠左鍵的狀態，或移至按鈕按下空格鍵。</span><span class="sxs-lookup"><span data-stu-id="a8ee1-192"><xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> is the state of a button that indicates the left mouse button or SPACEBAR is pressed over the button.</span></span> <span data-ttu-id="a8ee1-193">當<xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A>是`true`，控制項捕捉到滑鼠。</span><span class="sxs-lookup"><span data-stu-id="a8ee1-193">When <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> is `true`, the control captures the mouse.</span></span>  <span data-ttu-id="a8ee1-194">如此一來，控制項將會引發滑鼠事件這類<xref:System.Windows.UIElement.MouseEnter>和<xref:System.Windows.UIElement.IsMouseDirectlyOverChanged>。</span><span class="sxs-lookup"><span data-stu-id="a8ee1-194">As a result, the control will raise mouse events such as <xref:System.Windows.UIElement.MouseEnter> and <xref:System.Windows.UIElement.IsMouseDirectlyOverChanged>.</span></span> <span data-ttu-id="a8ee1-195">請注意，使用<xref:System.Windows.Controls.AccessText>ENTER 不會變更或<xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A>或捕捉滑鼠，但沒有引發<xref:System.Windows.Controls.Primitives.ButtonBase.Click>事件。</span><span class="sxs-lookup"><span data-stu-id="a8ee1-195">Note that using the <xref:System.Windows.Controls.AccessText> or ENTER does not change <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> or capture the mouse, but is does raise the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event.</span></span>  
  
 <span data-ttu-id="a8ee1-196">從.NET Framework 版本 3.0 Service Pack 1，<xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A>受保護的 setter。</span><span class="sxs-lookup"><span data-stu-id="a8ee1-196">Starting with the .NET Framework version 3.0 Service Pack 1, <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> has a protected setter.</span></span> <span data-ttu-id="a8ee1-197">若要使用這項功能，您的應用程式應將目標設.NET Framework 3.5 版。</span><span class="sxs-lookup"><span data-stu-id="a8ee1-197">To use this functionality, your application should target the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8ee1-198">如需詳細資訊，請參閱[版本和相依性](~/docs/framework/migration-guide/versions-and-dependencies.md)。</span><span class="sxs-lookup"><span data-stu-id="a8ee1-198">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="dependencyPropertyInfo_IsPressed"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="a8ee1-199">相依性屬性資訊</span><span class="sxs-lookup"><span data-stu-id="a8ee1-199">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a8ee1-200">識別項欄位</span><span class="sxs-lookup"><span data-stu-id="a8ee1-200">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.ButtonBase.IsPressedProperty>|  
|<span data-ttu-id="a8ee1-201">中繼資料屬性設定為 `true`</span><span class="sxs-lookup"><span data-stu-id="a8ee1-201">Metadata properties set to `true`</span></span>|<span data-ttu-id="a8ee1-202">無</span><span class="sxs-lookup"><span data-stu-id="a8ee1-202">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="a8ee1-203">這個範例示範如何使用<xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A>觸發程序樣式中的屬性。</span><span class="sxs-lookup"><span data-stu-id="a8ee1-203">This example shows how to use the <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> property in a trigger style.</span></span>  
  
 [!code-xaml[BtnColor#9](~/samples/snippets/csharp/VS_Snippets_Wpf/BtnColor/CSharp/Pane1.xaml#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPressedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsPressedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsPressedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.ButtonBase.IsPressedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsPressedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsPressedProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8ee1-204">識別 <see cref="P:System.Windows.Controls.Primitives.ButtonBase.IsPressed" /> 相依性屬性。</span><span class="sxs-lookup"><span data-stu-id="a8ee1-204">Identifies the <see cref="P:System.Windows.Controls.Primitives.ButtonBase.IsPressed" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAccessKey">
      <MemberSignature Language="C#" Value="protected override void OnAccessKey (System.Windows.Input.AccessKeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnAccessKey(class System.Windows.Input.AccessKeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.ButtonBase.OnAccessKey(System.Windows.Input.AccessKeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnAccessKey (e As AccessKeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnAccessKey(System::Windows::Input::AccessKeyEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.AccessKeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a8ee1-205"><see cref="E:System.Windows.Input.AccessKeyManager.AccessKeyPressed" /> 事件的事件資料。</span><span class="sxs-lookup"><span data-stu-id="a8ee1-205">The event data for the <see cref="E:System.Windows.Input.AccessKeyManager.AccessKeyPressed" /> event.</span></span></param>
        <summary><span data-ttu-id="a8ee1-206">當呼叫這個控制項的 <see cref="P:System.Windows.Controls.AccessText.AccessKey" /> 時回應。</span><span class="sxs-lookup"><span data-stu-id="a8ee1-206">Responds when the <see cref="P:System.Windows.Controls.AccessText.AccessKey" /> for this control is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8ee1-207">如果<xref:System.Windows.Input.AccessKeyEventArgs.IsMultiple%2A>是`true`，這個方法會呼叫基底實作，它將提供此控制項焦點。</span><span class="sxs-lookup"><span data-stu-id="a8ee1-207">If <xref:System.Windows.Input.AccessKeyEventArgs.IsMultiple%2A> is `true`, this method calls the base implementation, which gives this control focus.</span></span>  <span data-ttu-id="a8ee1-208">否則，這個方法會引發<xref:System.Windows.Controls.Primitives.ButtonBase.Click>事件。</span><span class="sxs-lookup"><span data-stu-id="a8ee1-208">Otherwise, this method raises the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnClick">
      <MemberSignature Language="C#" Value="protected virtual void OnClick ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnClick() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.ButtonBase.OnClick" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnClick ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnClick();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a8ee1-209">引發 <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /> 路由事件。</span><span class="sxs-lookup"><span data-stu-id="a8ee1-209">Raises the <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8ee1-210">控制項引發<xref:System.Windows.Controls.Primitives.ButtonBase.Click>藉由呼叫事件<xref:System.Windows.UIElement.RaiseEvent%2A>。</span><span class="sxs-lookup"><span data-stu-id="a8ee1-210">The control raises the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event by calling <xref:System.Windows.UIElement.RaiseEvent%2A>.</span></span> <span data-ttu-id="a8ee1-211">如需詳細資訊，請參閱[路由傳送事件概觀](~/docs/framework/wpf/advanced/routed-events-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="a8ee1-211">For more information, see [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="a8ee1-212">在覆寫<see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnClick" />在衍生類別中，請務必呼叫基底類別的<see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnClick" />方法，使已註冊的委派能接收到事件。</span><span class="sxs-lookup"><span data-stu-id="a8ee1-212">When overriding <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnClick" /> in a derived class, be sure to call the base class’s <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnClick" /> method so that registered delegates receive the event.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnIsPressedChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsPressedChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsPressedChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.ButtonBase.OnIsPressedChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsPressedChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsPressedChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a8ee1-213"><see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> 的資料。</span><span class="sxs-lookup"><span data-stu-id="a8ee1-213">The data for <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />.</span></span></param>
        <summary><span data-ttu-id="a8ee1-214">在 <see cref="P:System.Windows.Controls.Primitives.ButtonBase.IsPressed" /> 屬性變更時呼叫。</span><span class="sxs-lookup"><span data-stu-id="a8ee1-214">Called when the <see cref="P:System.Windows.Controls.Primitives.ButtonBase.IsPressed" /> property changes.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnKeyDown">
      <MemberSignature Language="C#" Value="protected override void OnKeyDown (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyDown(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.ButtonBase.OnKeyDown(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyDown(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a8ee1-215">事件資料。</span><span class="sxs-lookup"><span data-stu-id="a8ee1-215">The event data.</span></span></param>
        <summary><span data-ttu-id="a8ee1-216">提供 <see cref="E:System.Windows.UIElement.KeyDown" /> 路由事件的類別處理，當這個控制項取得焦點時使用者按下按鍵便會發生。</span><span class="sxs-lookup"><span data-stu-id="a8ee1-216">Provides class handling for the <see cref="E:System.Windows.UIElement.KeyDown" /> routed event that occurs when the user presses a key while this control has focus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8ee1-217">此實作會將標示<xref:System.Windows.UIElement.KeyDown>事件，如藉由設定處理<xref:System.Windows.RoutedEventArgs.Handled%2A>屬性的事件資料至`true`時<xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A>未設定為<xref:System.Windows.Controls.ClickMode.Hover>和下列情況的其中一個條件成立：</span><span class="sxs-lookup"><span data-stu-id="a8ee1-217">This implementation marks the <xref:System.Windows.UIElement.KeyDown> event as handled by setting the <xref:System.Windows.RoutedEventArgs.Handled%2A> property of the event data to `true` when <xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A> is not set to <xref:System.Windows.Controls.ClickMode.Hover> and one of the following cases are true:</span></span>  
  
-   <span data-ttu-id="a8ee1-218">使用者按下空格鍵。</span><span class="sxs-lookup"><span data-stu-id="a8ee1-218">The user presses the SPACEBAR.</span></span>  
  
-   <span data-ttu-id="a8ee1-219">使用者按下 ENTER 和<xref:System.Windows.Input.KeyboardNavigation.AcceptsReturn%2A>是`true`對這個控制項。</span><span class="sxs-lookup"><span data-stu-id="a8ee1-219">The user presses ENTER and <xref:System.Windows.Input.KeyboardNavigation.AcceptsReturn%2A> is `true` for this control.</span></span>  
  
 <span data-ttu-id="a8ee1-220">在其他情況下，此實作不會變更處理的狀態 (<xref:System.Windows.RoutedEventArgs.Handled%2A>屬性) 的<xref:System.Windows.UIElement.KeyDown>事件資料。</span><span class="sxs-lookup"><span data-stu-id="a8ee1-220">In all other cases, this implementation does not change the handled state (the <xref:System.Windows.RoutedEventArgs.Handled%2A> property) of the <xref:System.Windows.UIElement.KeyDown> event data.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="a8ee1-221">如果您覆寫<see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnKeyDown(System.Windows.Input.KeyEventArgs)" />，務必呼叫基底實作您<see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnKeyDown(System.Windows.Input.KeyEventArgs)" />實作。</span><span class="sxs-lookup"><span data-stu-id="a8ee1-221">If you override <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnKeyDown(System.Windows.Input.KeyEventArgs)" />, always call the base implementation in your <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnKeyDown(System.Windows.Input.KeyEventArgs)" /> implementation.</span></span> <span data-ttu-id="a8ee1-222">無法呼叫基底實作可防止基底類別處理事件的類別處理常式，可能會變更的最終類別的執行階段行為。</span><span class="sxs-lookup"><span data-stu-id="a8ee1-222">Failure to call the base implementation prevents base classes from handling the event with a class handler, which might change the run-time behavior of the final class.</span></span> <span data-ttu-id="a8ee1-223">您可以呼叫之前或之後，在特殊處理的基底實作，根據您的需求。</span><span class="sxs-lookup"><span data-stu-id="a8ee1-223">You can call the base implementation either before or after your special handling, depending on your requirements.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnKeyUp">
      <MemberSignature Language="C#" Value="protected override void OnKeyUp (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyUp(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.ButtonBase.OnKeyUp(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyUp (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyUp(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a8ee1-224"><see cref="E:System.Windows.UIElement.KeyUp" /> 事件的事件資料。</span><span class="sxs-lookup"><span data-stu-id="a8ee1-224">The event data for the <see cref="E:System.Windows.UIElement.KeyUp" /> event.</span></span></param>
        <summary><span data-ttu-id="a8ee1-225">提供 <see cref="E:System.Windows.UIElement.KeyUp" /> 路由事件的類別處理，當這個控制項取得焦點時使用者放開按鍵便會發生。</span><span class="sxs-lookup"><span data-stu-id="a8ee1-225">Provides class handling for the <see cref="E:System.Windows.UIElement.KeyUp" /> routed event that occurs when the user releases a key while this control has focus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8ee1-226">此實作會將標示<xref:System.Windows.UIElement.KeyUp>事件，如藉由設定處理<xref:System.Windows.RoutedEventArgs.Handled%2A>屬性的事件資料至`true`當使用者放開空格鍵。</span><span class="sxs-lookup"><span data-stu-id="a8ee1-226">This implementation marks the <xref:System.Windows.UIElement.KeyUp> event as handled by setting the <xref:System.Windows.RoutedEventArgs.Handled%2A> property of the event data to `true` when the user releases the SPACEBAR.</span></span> <span data-ttu-id="a8ee1-227">否則，此實作不會變更處理的狀態 (<xref:System.Windows.RoutedEventArgs.Handled%2A>屬性) 的<xref:System.Windows.UIElement.KeyUp>事件資料。</span><span class="sxs-lookup"><span data-stu-id="a8ee1-227">Otherwise, this implementation does not change the handled state (the <xref:System.Windows.RoutedEventArgs.Handled%2A> property) of the <xref:System.Windows.UIElement.KeyUp> event data.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="a8ee1-228">如果您覆寫<see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnKeyUp(System.Windows.Input.KeyEventArgs)" />，務必呼叫基底實作您<see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnKeyUp(System.Windows.Input.KeyEventArgs)" />實作。</span><span class="sxs-lookup"><span data-stu-id="a8ee1-228">If you override <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnKeyUp(System.Windows.Input.KeyEventArgs)" />, always call the base implementation in your <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnKeyUp(System.Windows.Input.KeyEventArgs)" /> implementation.</span></span> <span data-ttu-id="a8ee1-229">無法呼叫基底實作可防止基底類別處理事件的類別處理常式，可能會變更的最終類別的執行階段行為。</span><span class="sxs-lookup"><span data-stu-id="a8ee1-229">Failure to call the base implementation prevents base classes from handling the event with a class handler, which might change the run-time behavior of the final class.</span></span> <span data-ttu-id="a8ee1-230">您可以呼叫之前或之後，在特殊處理的基底實作，根據您的需求。</span><span class="sxs-lookup"><span data-stu-id="a8ee1-230">You can call the base implementation either before or after your special handling, depending on your requirements.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnLostKeyboardFocus">
      <MemberSignature Language="C#" Value="protected override void OnLostKeyboardFocus (System.Windows.Input.KeyboardFocusChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnLostKeyboardFocus(class System.Windows.Input.KeyboardFocusChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.ButtonBase.OnLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnLostKeyboardFocus (e As KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnLostKeyboardFocus(System::Windows::Input::KeyboardFocusChangedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyboardFocusChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a8ee1-231"><see cref="E:System.Windows.IInputElement.LostKeyboardFocus" /> 事件的事件資料。</span><span class="sxs-lookup"><span data-stu-id="a8ee1-231">The event data for the <see cref="E:System.Windows.IInputElement.LostKeyboardFocus" /> event.</span></span></param>
        <summary><span data-ttu-id="a8ee1-232">當項目失去鍵盤焦點時呼叫。</span><span class="sxs-lookup"><span data-stu-id="a8ee1-232">Called when an element loses keyboard focus.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnLostMouseCapture">
      <MemberSignature Language="C#" Value="protected override void OnLostMouseCapture (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnLostMouseCapture(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.ButtonBase.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnLostMouseCapture (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnLostMouseCapture(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a8ee1-233"><see cref="E:System.Windows.Input.Mouse.LostMouseCapture" /> 事件的事件資料。</span><span class="sxs-lookup"><span data-stu-id="a8ee1-233">The event data for the <see cref="E:System.Windows.Input.Mouse.LostMouseCapture" /> event.</span></span></param>
        <summary><span data-ttu-id="a8ee1-234">提供 <see cref="E:System.Windows.UIElement.LostMouseCapture" /> 路由事件的類別處理，當這個控制項不再接收滑鼠事件訊息時便會發生。</span><span class="sxs-lookup"><span data-stu-id="a8ee1-234">Provides class handling for the <see cref="E:System.Windows.UIElement.LostMouseCapture" /> routed event that occurs when this control is no longer receiving mouse event messages.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8ee1-235">此實作不會變更處理的狀態 (<xref:System.Windows.RoutedEventArgs.Handled%2A>屬性) 的<xref:System.Windows.UIElement.LostMouseCapture>事件資料。</span><span class="sxs-lookup"><span data-stu-id="a8ee1-235">This implementation does not change the handled state (the <xref:System.Windows.RoutedEventArgs.Handled%2A> property) of the <xref:System.Windows.UIElement.LostMouseCapture> event data.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="a8ee1-236">如果您覆寫<see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)" />，務必呼叫基底實作您<see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)" />實作。</span><span class="sxs-lookup"><span data-stu-id="a8ee1-236">If you override <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)" />, always call the base implementation in your <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)" /> implementation.</span></span> <span data-ttu-id="a8ee1-237">無法呼叫基底實作可防止基底類別處理事件的類別處理常式，可能會變更的最終類別的執行階段行為。</span><span class="sxs-lookup"><span data-stu-id="a8ee1-237">Failure to call the base implementation prevents base classes from handling the event with a class handler, which might change the run-time behavior of the final class.</span></span> <span data-ttu-id="a8ee1-238">您可以呼叫之前或之後，在特殊處理的基底實作，根據您的需求。</span><span class="sxs-lookup"><span data-stu-id="a8ee1-238">You can call the base implementation either before or after your special handling, depending on your requirements.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnMouseEnter">
      <MemberSignature Language="C#" Value="protected override void OnMouseEnter (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseEnter(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseEnter(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseEnter (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseEnter(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a8ee1-239"><see cref="E:System.Windows.Input.Mouse.MouseEnter" /> 事件的事件資料。</span><span class="sxs-lookup"><span data-stu-id="a8ee1-239">The event data for the <see cref="E:System.Windows.Input.Mouse.MouseEnter" /> event.</span></span></param>
        <summary><span data-ttu-id="a8ee1-240">提供 <see cref="P:System.Windows.Controls.Primitives.ButtonBase.ClickMode" /> 路由事件的類別處理，當滑鼠進入這個控制項時便會發生。</span><span class="sxs-lookup"><span data-stu-id="a8ee1-240">Provides class handling for the <see cref="P:System.Windows.Controls.Primitives.ButtonBase.ClickMode" /> routed event that occurs when the mouse enters this control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8ee1-241">當<xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A>設為<xref:System.Windows.Controls.ClickMode.Hover>，此實作會將標示<xref:System.Windows.UIElement.MouseEnter>為藉由設定已處理的事件<xref:System.Windows.RoutedEventArgs.Handled%2A>屬性之事件資料`true`並引發<xref:System.Windows.Controls.Primitives.ButtonBase.Click>事件。</span><span class="sxs-lookup"><span data-stu-id="a8ee1-241">When <xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A> is set to <xref:System.Windows.Controls.ClickMode.Hover>, this implementation marks the <xref:System.Windows.UIElement.MouseEnter> event as handled by setting the <xref:System.Windows.RoutedEventArgs.Handled%2A> property of the event data to `true` and raises the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="a8ee1-242">如果您覆寫<see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseEnter(System.Windows.Input.MouseEventArgs)" />，務必呼叫基底實作您<see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseEnter(System.Windows.Input.MouseEventArgs)" />實作。</span><span class="sxs-lookup"><span data-stu-id="a8ee1-242">If you override <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseEnter(System.Windows.Input.MouseEventArgs)" />, always call the base implementation in your <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseEnter(System.Windows.Input.MouseEventArgs)" /> implementation.</span></span> <span data-ttu-id="a8ee1-243">無法呼叫基底實作可防止基底類別處理事件的類別處理常式，可能會變更的最終類別的執行階段行為。</span><span class="sxs-lookup"><span data-stu-id="a8ee1-243">Failure to call the base implementation prevents base classes from handling the event with a class handler, which might change the run-time behavior of the final class.</span></span> <span data-ttu-id="a8ee1-244">您可以呼叫之前或之後，在特殊處理的基底實作，根據您的需求。</span><span class="sxs-lookup"><span data-stu-id="a8ee1-244">You can call the base implementation either before or after your special handling, depending on your requirements.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeave">
      <MemberSignature Language="C#" Value="protected override void OnMouseLeave (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseLeave(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeave(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseLeave (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseLeave(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a8ee1-245"><see cref="E:System.Windows.Input.Mouse.MouseLeave" /> 事件的事件資料。</span><span class="sxs-lookup"><span data-stu-id="a8ee1-245">The event data for the <see cref="E:System.Windows.Input.Mouse.MouseLeave" /> event.</span></span></param>
        <summary><span data-ttu-id="a8ee1-246">提供 <see cref="E:System.Windows.UIElement.MouseLeave" /> 路由事件的類別處理，當滑鼠離開項目時便會發生。</span><span class="sxs-lookup"><span data-stu-id="a8ee1-246">Provides class handling for the <see cref="E:System.Windows.UIElement.MouseLeave" /> routed event that occurs when the mouse leaves an element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8ee1-247">此實作會將標示<xref:System.Windows.UIElement.MouseLeave>為藉由設定已處理的事件<xref:System.Windows.RoutedEventArgs.Handled%2A>屬性的事件資料至`true`時<xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A>設<xref:System.Windows.Controls.ClickMode.Hover>。</span><span class="sxs-lookup"><span data-stu-id="a8ee1-247">This implementation marks the <xref:System.Windows.UIElement.MouseLeave> event as handled by setting the <xref:System.Windows.RoutedEventArgs.Handled%2A> property of the event data to `true` when <xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A> is set to <xref:System.Windows.Controls.ClickMode.Hover>.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="a8ee1-248">如果您覆寫<see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeave(System.Windows.Input.MouseEventArgs)" />，務必呼叫基底實作您<see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeave(System.Windows.Input.MouseEventArgs)" />實作。</span><span class="sxs-lookup"><span data-stu-id="a8ee1-248">If you override <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeave(System.Windows.Input.MouseEventArgs)" />, always call the base implementation in your <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeave(System.Windows.Input.MouseEventArgs)" /> implementation.</span></span> <span data-ttu-id="a8ee1-249">無法呼叫基底實作可防止基底類別處理事件的類別處理常式，可能會變更的最終類別的執行階段行為。</span><span class="sxs-lookup"><span data-stu-id="a8ee1-249">Failure to call the base implementation prevents base classes from handling the event with a class handler, which might change the run-time behavior of the final class.</span></span> <span data-ttu-id="a8ee1-250">您可以呼叫之前或之後，在特殊處理的基底實作，根據您的需求。</span><span class="sxs-lookup"><span data-stu-id="a8ee1-250">You can call the base implementation either before or after your special handling, depending on your requirements.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeftButtonDown">
      <MemberSignature Language="C#" Value="protected override void OnMouseLeftButtonDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseLeftButtonDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseLeftButtonDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseLeftButtonDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a8ee1-251">事件資料。</span><span class="sxs-lookup"><span data-stu-id="a8ee1-251">The event data.</span></span></param>
        <summary><span data-ttu-id="a8ee1-252">提供 <see cref="E:System.Windows.UIElement.MouseLeftButtonDown" /> 路由事件的類別處理，當將滑鼠指標放在這個控制項之上並按下滑鼠左鍵時便會發生。</span><span class="sxs-lookup"><span data-stu-id="a8ee1-252">Provides class handling for the <see cref="E:System.Windows.UIElement.MouseLeftButtonDown" /> routed event that occurs when the left mouse button is pressed while the mouse pointer is over this control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8ee1-253">此實作會將標示<xref:System.Windows.UIElement.MouseLeftButtonDown>事件，如藉由設定處理<xref:System.Windows.RoutedEventArgs.Handled%2A>屬性的事件資料至`true`時<xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A>未設定為<xref:System.Windows.Controls.ClickMode.Hover>。</span><span class="sxs-lookup"><span data-stu-id="a8ee1-253">This implementation marks the <xref:System.Windows.UIElement.MouseLeftButtonDown> event as handled by setting the <xref:System.Windows.RoutedEventArgs.Handled%2A> property of the event data to `true` when <xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A> is not set to <xref:System.Windows.Controls.ClickMode.Hover>.</span></span> <span data-ttu-id="a8ee1-254">若要回應<xref:System.Windows.UIElement.MouseLeftButtonDown>事件，附加事件處理常式<xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown>事件或呼叫<xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29>與`handledEventsToo`設`true`。</span><span class="sxs-lookup"><span data-stu-id="a8ee1-254">To respond to the <xref:System.Windows.UIElement.MouseLeftButtonDown> event, attach an event handler to the <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> event, or call <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> with `handledEventsToo` set to `true`.</span></span>  
  
 <span data-ttu-id="a8ee1-255">當<xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A>設<xref:System.Windows.Controls.ClickMode.Press>，這個方法會引發<xref:System.Windows.Controls.Primitives.ButtonBase.Click>事件。</span><span class="sxs-lookup"><span data-stu-id="a8ee1-255">When <xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A> is set to <xref:System.Windows.Controls.ClickMode.Press>, this method raises the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="a8ee1-256">如果您覆寫<see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)" />，務必呼叫基底實作您<see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)" />實作。</span><span class="sxs-lookup"><span data-stu-id="a8ee1-256">If you override <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)" />, always call the base implementation in your <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)" /> implementation.</span></span> <span data-ttu-id="a8ee1-257">無法呼叫基底實作可防止基底類別處理事件的類別處理常式，可能會變更的最終類別的執行階段行為。</span><span class="sxs-lookup"><span data-stu-id="a8ee1-257">Failure to call the base implementation prevents base classes from handling the event with a class handler, which might change the run-time behavior of the final class.</span></span> <span data-ttu-id="a8ee1-258">您可以呼叫之前或之後，在特殊處理的基底實作，根據您的需求。</span><span class="sxs-lookup"><span data-stu-id="a8ee1-258">You can call the base implementation either before or after your special handling, depending on your requirements.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeftButtonUp">
      <MemberSignature Language="C#" Value="protected override void OnMouseLeftButtonUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseLeftButtonUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseLeftButtonUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseLeftButtonUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a8ee1-259">事件資料。</span><span class="sxs-lookup"><span data-stu-id="a8ee1-259">The event data.</span></span></param>
        <summary><span data-ttu-id="a8ee1-260">提供 <see cref="E:System.Windows.UIElement.MouseLeftButtonUp" /> 路由事件的類別處理，當將滑鼠指標放在這個控制項之上並放開滑鼠左鍵時便會發生。</span><span class="sxs-lookup"><span data-stu-id="a8ee1-260">Provides class handling for the <see cref="E:System.Windows.UIElement.MouseLeftButtonUp" /> routed event that occurs when the left mouse button is released while the mouse pointer is over this control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8ee1-261">此實作會將標示<xref:System.Windows.UIElement.MouseLeftButtonUp>事件，如藉由設定處理<xref:System.Windows.RoutedEventArgs.Handled%2A>屬性的事件資料至`true`時<xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A>未設定為<xref:System.Windows.Controls.ClickMode.Hover>。</span><span class="sxs-lookup"><span data-stu-id="a8ee1-261">This implementation marks the <xref:System.Windows.UIElement.MouseLeftButtonUp> event as handled by setting the <xref:System.Windows.RoutedEventArgs.Handled%2A> property of the event data to `true` when <xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A> is not set to <xref:System.Windows.Controls.ClickMode.Hover>.</span></span> <span data-ttu-id="a8ee1-262">若要回應<xref:System.Windows.UIElement.MouseLeftButtonUp>事件，附加事件處理常式<xref:System.Windows.ContentElement.PreviewMouseLeftButtonUp>事件或呼叫<xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29>與`handledEventsToo`設`true`。</span><span class="sxs-lookup"><span data-stu-id="a8ee1-262">To respond to the <xref:System.Windows.UIElement.MouseLeftButtonUp> event, attach an event handler to the <xref:System.Windows.ContentElement.PreviewMouseLeftButtonUp> event, or call <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> with `handledEventsToo` set to `true`.</span></span>  
  
 <span data-ttu-id="a8ee1-263">當<xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A>設<xref:System.Windows.Controls.ClickMode.Release>是<xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A>是`true`，這個方法會引發<xref:System.Windows.Controls.Primitives.ButtonBase.Click>事件。</span><span class="sxs-lookup"><span data-stu-id="a8ee1-263">When <xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A> is set to <xref:System.Windows.Controls.ClickMode.Release> is <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> is `true`, this method raises the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="a8ee1-264">如果您覆寫<see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)" />，務必呼叫基底實作您<see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)" />實作。</span><span class="sxs-lookup"><span data-stu-id="a8ee1-264">If you override <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)" />, always call the base implementation in your <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)" /> implementation.</span></span> <span data-ttu-id="a8ee1-265">無法呼叫基底實作可防止基底類別處理事件的類別處理常式，可能會變更的最終類別的執行階段行為。</span><span class="sxs-lookup"><span data-stu-id="a8ee1-265">Failure to call the base implementation prevents base classes from handling the event with a class handler, which might change the run-time behavior of the final class.</span></span> <span data-ttu-id="a8ee1-266">您可以呼叫之前或之後，在特殊處理的基底實作，根據您的需求。</span><span class="sxs-lookup"><span data-stu-id="a8ee1-266">You can call the base implementation either before or after your special handling, depending on your requirements.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnMouseMove">
      <MemberSignature Language="C#" Value="protected override void OnMouseMove (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseMove(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseMove(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseMove (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseMove(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a8ee1-267">事件資料。</span><span class="sxs-lookup"><span data-stu-id="a8ee1-267">The event data.</span></span></param>
        <summary><span data-ttu-id="a8ee1-268">提供 <see cref="E:System.Windows.UIElement.MouseMove" /> 路由事件的類別處理，當滑鼠指標在這個項目上移動時便會發生。</span><span class="sxs-lookup"><span data-stu-id="a8ee1-268">Provides class handling for the <see cref="E:System.Windows.UIElement.MouseMove" /> routed event that occurs when the mouse pointer moves while over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8ee1-269">此實作會將標示<xref:System.Windows.UIElement.MouseMove>事件，如藉由設定處理<xref:System.Windows.RoutedEventArgs.Handled%2A>屬性的事件資料至`true`時<xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A>未設定為<xref:System.Windows.Controls.ClickMode.Hover>和<xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A>是`true`。</span><span class="sxs-lookup"><span data-stu-id="a8ee1-269">This implementation marks the <xref:System.Windows.UIElement.MouseMove> event as handled by setting the <xref:System.Windows.RoutedEventArgs.Handled%2A> property of the event data to `true` when <xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A> is not set to <xref:System.Windows.Controls.ClickMode.Hover> and <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> is `true`.</span></span> <span data-ttu-id="a8ee1-270">若要回應<xref:System.Windows.UIElement.MouseMove>事件，附加事件處理常式<xref:System.Windows.ContentElement.PreviewMouseMove>事件或呼叫<xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29>與`handledEventsToo`設`true`。</span><span class="sxs-lookup"><span data-stu-id="a8ee1-270">To respond to the <xref:System.Windows.UIElement.MouseMove> event, attach an event handler to the <xref:System.Windows.ContentElement.PreviewMouseMove> event, or call <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> with `handledEventsToo` set to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="a8ee1-271">如果您覆寫<see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseMove(System.Windows.Input.MouseEventArgs)" />，務必呼叫基底實作您<see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseMove(System.Windows.Input.MouseEventArgs)" />實作。</span><span class="sxs-lookup"><span data-stu-id="a8ee1-271">If you override <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseMove(System.Windows.Input.MouseEventArgs)" />, always call the base implementation in your <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseMove(System.Windows.Input.MouseEventArgs)" /> implementation.</span></span> <span data-ttu-id="a8ee1-272">無法呼叫基底實作可防止基底類別處理事件的類別處理常式，可能會變更的最終類別的執行階段行為。</span><span class="sxs-lookup"><span data-stu-id="a8ee1-272">Failure to call the base implementation prevents base classes from handling the event with a class handler, which might change the run-time behavior of the final class.</span></span> <span data-ttu-id="a8ee1-273">您可以呼叫之前或之後，在特殊處理的基底實作，根據您的需求。</span><span class="sxs-lookup"><span data-stu-id="a8ee1-273">You can call the base implementation either before or after your special handling, depending on your requirements.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnRenderSizeChanged">
      <MemberSignature Language="C#" Value="protected internal override void OnRenderSizeChanged (System.Windows.SizeChangedInfo sizeInfo);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnRenderSizeChanged(class System.Windows.SizeChangedInfo sizeInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.ButtonBase.OnRenderSizeChanged(System.Windows.SizeChangedInfo)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnRenderSizeChanged (sizeInfo As SizeChangedInfo)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnRenderSizeChanged(System::Windows::SizeChangedInfo ^ sizeInfo);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sizeInfo" Type="System.Windows.SizeChangedInfo" />
      </Parameters>
      <Docs>
        <param name="sizeInfo"><span data-ttu-id="a8ee1-274">指定大小發生變更。</span><span class="sxs-lookup"><span data-stu-id="a8ee1-274">Specifies the size changes.</span></span></param>
        <summary><span data-ttu-id="a8ee1-275">當控制項的呈現大小變更時呼叫。</span><span class="sxs-lookup"><span data-stu-id="a8ee1-275">Called when the rendered size of a control changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8ee1-276">覆寫<xref:System.Windows.Controls.Primitives.ButtonBase.OnRenderSizeChanged%2A>方法<xref:System.Windows.UIElement>。</span><span class="sxs-lookup"><span data-stu-id="a8ee1-276">Overrides the <xref:System.Windows.Controls.Primitives.ButtonBase.OnRenderSizeChanged%2A> method of the <xref:System.Windows.UIElement>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>