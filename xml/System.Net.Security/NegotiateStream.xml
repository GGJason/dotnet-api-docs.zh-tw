<Type Name="NegotiateStream" FullName="System.Net.Security.NegotiateStream">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a2738f8d9632b7a1168e40fc1edee0557916a560" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57913373" /></Metadata><TypeSignature Language="C#" Value="public class NegotiateStream : System.Net.Security.AuthenticatedStream" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NegotiateStream extends System.Net.Security.AuthenticatedStream" />
  <TypeSignature Language="DocId" Value="T:System.Net.Security.NegotiateStream" />
  <TypeSignature Language="VB.NET" Value="Public Class NegotiateStream&#xA;Inherits AuthenticatedStream" />
  <TypeSignature Language="C++ CLI" Value="public ref class NegotiateStream : System::Net::Security::AuthenticatedStream" />
  <TypeSignature Language="F#" Value="type NegotiateStream = class&#xA;    inherit AuthenticatedStream" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Security</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Net.Security.AuthenticatedStream</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="56b53-101">提供資料流，該資料流會在用戶端與伺服器之間的通訊中，使用交涉安全性通訊協定驗證用戶端，並選擇性地驗證伺服器。</span><span class="sxs-lookup"><span data-stu-id="56b53-101">Provides a stream that uses the Negotiate security protocol to authenticate the client, and optionally the server, in client-server communication.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56b53-102">使用<xref:System.Net.Security.NegotiateStream>類別進行驗證，以及協助保護資訊傳輸用戶端與伺服器之間。</span><span class="sxs-lookup"><span data-stu-id="56b53-102">Use the <xref:System.Net.Security.NegotiateStream> class for authentication and to help secure information transmitted between a client and a server.</span></span> <span data-ttu-id="56b53-103">使用<xref:System.Net.Security.NegotiateStream>，您可以執行下列動作。</span><span class="sxs-lookup"><span data-stu-id="56b53-103">Using <xref:System.Net.Security.NegotiateStream>, you can do the following.</span></span>  
  
-   <span data-ttu-id="56b53-104">傳送至伺服器的用戶端認證的模擬或委派。</span><span class="sxs-lookup"><span data-stu-id="56b53-104">Send the client's credentials to the server for Impersonation or Delegation.</span></span>  
  
-   <span data-ttu-id="56b53-105">要求伺服器驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-105">Request server authentication.</span></span>  
  
-   <span data-ttu-id="56b53-106">加密和/或再傳輸簽署資料。</span><span class="sxs-lookup"><span data-stu-id="56b53-106">Encrypt and/or sign data before transmitting it.</span></span>  
  
 <span data-ttu-id="56b53-107">傳輸資訊前，必須執行驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-107">Authentication must be performed before transmitting information.</span></span> <span data-ttu-id="56b53-108">用戶端要求驗證使用同步<xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>方法會封鎖直到驗證完成為止，或非同步<xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>方法，不會封鎖等候要完成驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-108">Clients request authentication using the synchronous <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> methods, which block until the authentication completes, or the asynchronous <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A> methods, which do not block while waiting for the authentication to complete.</span></span> <span data-ttu-id="56b53-109">伺服器要求驗證使用同步<xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>或非同步<xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="56b53-109">Servers request authentication using the synchronous <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> or asynchronous <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> methods.</span></span> <span data-ttu-id="56b53-110">用戶端，並選擇性地在伺服器上，會使用驗證交涉安全性通訊協定。</span><span class="sxs-lookup"><span data-stu-id="56b53-110">The client, and optionally the server, is authenticated using the Negotiate security protocol.</span></span> <span data-ttu-id="56b53-111">在 Windows 95/98 系統中，Windows NT LAN Manager (NTLM) 是用於驗證的通訊協定。</span><span class="sxs-lookup"><span data-stu-id="56b53-111">On Windows 95/98 systems, Windows NT LAN Manager (NTLM) is the protocol used for authentication.</span></span> <span data-ttu-id="56b53-112">在其他平台的 Kerberos 通訊協定用於驗證如果用戶端和伺服器支援，否則，系統會使用 NTLM。</span><span class="sxs-lookup"><span data-stu-id="56b53-112">On other platforms the Kerberos protocol is used for authentication if both client and server support it; otherwise NTLM is used.</span></span> <span data-ttu-id="56b53-113">如需這些通訊協定的詳細描述，請參閱 Platform SDK 說明文件 MSDN，在 msdn.microsoft.com/library/。</span><span class="sxs-lookup"><span data-stu-id="56b53-113">For detailed descriptions of these protocols, see the Platform SDK documentation on MSDN, at msdn.microsoft.com/library/.</span></span> <span data-ttu-id="56b53-114"><xref:System.Net.Security.NegotiateStream>類別會執行使用安全性支援提供者介面 (SSPI) 驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-114">The <xref:System.Net.Security.NegotiateStream> class performs the authentication using the Security Support Provider Interface (SSPI).</span></span>  
  
 <span data-ttu-id="56b53-115">當驗證成功時，您必須檢查<xref:System.Net.Security.NegotiateStream.IsEncrypted%2A>並<xref:System.Net.Security.NegotiateStream.IsSigned%2A>屬性，以決定哪些安全性服務將會使用<xref:System.Net.Security.NegotiateStream>來協助保護您的資料在傳輸期間。</span><span class="sxs-lookup"><span data-stu-id="56b53-115">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services will be used by the <xref:System.Net.Security.NegotiateStream> to help secure your data during transmission.</span></span> <span data-ttu-id="56b53-116">檢查<xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A>屬性來判斷是否發生相互驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-116">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span> <span data-ttu-id="56b53-117">您可以取得遠端用戶端或伺服器使用資訊<xref:System.Net.Security.NegotiateStream.RemoteIdentity%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="56b53-117">You can get information about the remote client or server using the <xref:System.Net.Security.NegotiateStream.RemoteIdentity%2A> property.</span></span>  
  
 <span data-ttu-id="56b53-118">如果驗證失敗，您會收到<xref:System.Security.Authentication.AuthenticationException>或<xref:System.Security.Authentication.InvalidCredentialException>。</span><span class="sxs-lookup"><span data-stu-id="56b53-118">If the authentication fails, you will receive an <xref:System.Security.Authentication.AuthenticationException> or a <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="56b53-119">在此情況下，您可以重試一次使用不同的認證驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-119">In this case, you can retry the authentication with a different credential.</span></span>  
  
 <span data-ttu-id="56b53-120">您將使用同步的資料傳送<xref:System.Net.Security.NegotiateStream.Write%2A>或非同步<xref:System.Net.Security.NegotiateStream.BeginWrite%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="56b53-120">You send data using the synchronous <xref:System.Net.Security.NegotiateStream.Write%2A> or asynchronous <xref:System.Net.Security.NegotiateStream.BeginWrite%2A> methods.</span></span> <span data-ttu-id="56b53-121">您會收到資料使用同步<xref:System.Net.Security.NegotiateStream.Read%2A>或非同步<xref:System.Net.Security.NegotiateStream.BeginRead%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="56b53-121">You receive data using the synchronous <xref:System.Net.Security.NegotiateStream.Read%2A> or asynchronous <xref:System.Net.Security.NegotiateStream.BeginRead%2A> methods.</span></span> <span data-ttu-id="56b53-122">如果安全性服務，例如加密或簽章已啟用，這些會自動套用，以將資料依<xref:System.Net.Security.NegotiateStream>。</span><span class="sxs-lookup"><span data-stu-id="56b53-122">If security services such as encryption or signing are enabled, these are automatically applied to your data by the <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 <span data-ttu-id="56b53-123"><xref:System.Net.Security.NegotiateStream>會將使用建立時，您所提供的資料流的資料傳輸<xref:System.Net.Security.NegotiateStream>。</span><span class="sxs-lookup"><span data-stu-id="56b53-123">The <xref:System.Net.Security.NegotiateStream> transmits data using a stream that you supply when creating the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="56b53-124">當您提供此基礎資料流時，您可以指定是否關閉<xref:System.Net.Security.NegotiateStream>也會關閉基礎資料流。</span><span class="sxs-lookup"><span data-stu-id="56b53-124">When you supply this underlying stream, you have the option to specify whether closing the <xref:System.Net.Security.NegotiateStream> also closes the underlying stream.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="56b53-125">下列程式碼範例示範如何使用用戶端-伺服器連線的用戶端<xref:System.Net.Security.NegotiateStream>。</span><span class="sxs-lookup"><span data-stu-id="56b53-125">The following code example demonstrates the client side of a client-server connection that uses the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="56b53-126">用戶端驗證，並以非同步方式將訊息傳送到伺服器。</span><span class="sxs-lookup"><span data-stu-id="56b53-126">The client authenticates and sends a message to the server asynchronously.</span></span>  
  
 [!code-cpp[NclNegoAsyncClient#0](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoasyncClient/CPP/NclNegoasyncClient.cpp#0)]
 [!code-csharp[NclNegoAsyncClient#0](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoasyncClient/CS/client.cs#0)]  
  
 <span data-ttu-id="56b53-127">下列程式碼範例示範如何使用用戶端與伺服器連接的伺服器端<xref:System.Net.Security.NegotiateStream>來驗證用戶端和讀取用戶端所傳送的訊息。</span><span class="sxs-lookup"><span data-stu-id="56b53-127">The following code example demonstrates the server side of a client-server connection that uses the <xref:System.Net.Security.NegotiateStream> to authenticate the client and read a message sent by the client.</span></span>  
  
 [!code-cpp[NclNegoAsyncServer#0](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoAsyncServer/CPP/NclNegoAsyncServer.cpp#0)]
 [!code-csharp[NclNegoAsyncServer#0](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoAsyncServer/CS/server.cs#0)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/8bf0b428-5a21-4299-8d6e-bf8251fd978a"><span data-ttu-id="56b53-128">變更為 3.5 SP1 版中 HTTPWebRequest 之 NTLM 驗證</span><span class="sxs-lookup"><span data-stu-id="56b53-128">Changes to NTLM authentication for HTTPWebRequest in Version 3.5 SP1</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="56b53-129">初始化 <see cref="T:System.Net.Security.NegotiateStream" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="56b53-129">Initializes a new instance of the <see cref="T:System.Net.Security.NegotiateStream" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56b53-130">若要避免<xref:System.Net.Security.NegotiateStream>關閉您所提供的資料流，使用<xref:System.Net.Security.NegotiateStream.%23ctor%28System.IO.Stream%2CSystem.Boolean%29>建構函式。</span><span class="sxs-lookup"><span data-stu-id="56b53-130">To prevent the <xref:System.Net.Security.NegotiateStream> from closing the stream that you supply, use the <xref:System.Net.Security.NegotiateStream.%23ctor%28System.IO.Stream%2CSystem.Boolean%29> constructor.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NegotiateStream (System.IO.Stream innerStream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream innerStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.#ctor(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (innerStream As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NegotiateStream(System::IO::Stream ^ innerStream);" />
      <MemberSignature Language="F#" Value="new System.Net.Security.NegotiateStream : System.IO.Stream -&gt; System.Net.Security.NegotiateStream" Usage="new System.Net.Security.NegotiateStream innerStream" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="innerStream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="innerStream"><span data-ttu-id="56b53-131"><see cref="T:System.IO.Stream" /> 物件，由 <see cref="T:System.Net.Security.NegotiateStream" /> 用來傳送及接收資料。</span><span class="sxs-lookup"><span data-stu-id="56b53-131">A <see cref="T:System.IO.Stream" /> object used by the <see cref="T:System.Net.Security.NegotiateStream" /> for sending and receiving data.</span></span></param>
        <summary><span data-ttu-id="56b53-132">使用指定的 <see cref="T:System.Net.Security.NegotiateStream" />，初始化 <see cref="T:System.IO.Stream" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="56b53-132">Initializes a new instance of the <see cref="T:System.Net.Security.NegotiateStream" /> class using the specified <see cref="T:System.IO.Stream" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="56b53-133">下列程式碼範例示範如何呼叫這個建構函式。</span><span class="sxs-lookup"><span data-stu-id="56b53-133">The following code example demonstrates calling this constructor.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#3)]
 [!code-csharp[NclNegoSyncClient#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NegotiateStream (System.IO.Stream innerStream, bool leaveInnerStreamOpen);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream innerStream, bool leaveInnerStreamOpen) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.#ctor(System.IO.Stream,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (innerStream As Stream, leaveInnerStreamOpen As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NegotiateStream(System::IO::Stream ^ innerStream, bool leaveInnerStreamOpen);" />
      <MemberSignature Language="F#" Value="new System.Net.Security.NegotiateStream : System.IO.Stream * bool -&gt; System.Net.Security.NegotiateStream" Usage="new System.Net.Security.NegotiateStream (innerStream, leaveInnerStreamOpen)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="innerStream" Type="System.IO.Stream" />
        <Parameter Name="leaveInnerStreamOpen" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="innerStream"><span data-ttu-id="56b53-134"><see cref="T:System.IO.Stream" /> 物件，由 <see cref="T:System.Net.Security.NegotiateStream" /> 用來傳送及接收資料。</span><span class="sxs-lookup"><span data-stu-id="56b53-134">A <see cref="T:System.IO.Stream" /> object used by the <see cref="T:System.Net.Security.NegotiateStream" /> for sending and receiving data.</span></span></param>
        <param name="leaveInnerStreamOpen"><span data-ttu-id="56b53-135"><see langword="true" /> 指示關閉這個 <see cref="T:System.Net.Security.NegotiateStream" /> 不會對 <paramref name="innerStream" /> 產生任何作用；<see langword="false" /> 指示關閉這個 <see cref="T:System.Net.Security.NegotiateStream" />，也會關閉 <paramref name="innerStream" />。</span><span class="sxs-lookup"><span data-stu-id="56b53-135"><see langword="true" /> to indicate that closing this <see cref="T:System.Net.Security.NegotiateStream" /> has no effect on <paramref name="innerStream" />; <see langword="false" /> to indicate that closing this <see cref="T:System.Net.Security.NegotiateStream" /> also closes <paramref name="innerStream" />.</span></span></param>
        <summary><span data-ttu-id="56b53-136">使用指定的 <see cref="T:System.Net.Security.NegotiateStream" /> 和資料流結束行為，初始化 <see cref="T:System.IO.Stream" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="56b53-136">Initializes a new instance of the <see cref="T:System.Net.Security.NegotiateStream" /> class using the specified <see cref="T:System.IO.Stream" /> and stream closure behavior.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56b53-137">當您指定`true`for`leaveStreamOpen`參數，關閉<xref:System.Net.Security.NegotiateStream>並不會影響`innerStream`串流; 您必須明確地關閉`innerStream`當您不再需要它。</span><span class="sxs-lookup"><span data-stu-id="56b53-137">When you specify `true` for the `leaveStreamOpen` parameter, closing the <xref:System.Net.Security.NegotiateStream> has no effect on the `innerStream` stream; you must explicitly close `innerStream` when you no longer need it.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="56b53-138">下列程式碼範例示範如何呼叫這個建構函式。</span><span class="sxs-lookup"><span data-stu-id="56b53-138">The following code example demonstrates calling this constructor.</span></span> <span data-ttu-id="56b53-139">此程式碼範例是針對提供之較大範例的一部分<xref:System.Net.Security.NegotiateStream>類別。</span><span class="sxs-lookup"><span data-stu-id="56b53-139">This code example is part of a larger example provided for the <xref:System.Net.Security.NegotiateStream> class.</span></span>  
  
 [!code-cpp[NclNegoAsyncClient#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoasyncClient/CPP/NclNegoasyncClient.cpp#1)]
 [!code-csharp[NclNegoAsyncClient#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoasyncClient/CS/client.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="56b53-140"><paramref name="innerStream" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="56b53-140"><paramref name="innerStream" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="56b53-141">-或-</span><span class="sxs-lookup"><span data-stu-id="56b53-141">-or-</span></span> 
 <span data-ttu-id="56b53-142"><paramref name="innerStream" /> 等於 <see cref="F:System.IO.Stream.Null" />。</span><span class="sxs-lookup"><span data-stu-id="56b53-142"><paramref name="innerStream" /> is equal to <see cref="F:System.IO.Stream.Null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="AuthenticateAsClient">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="56b53-143">由用戶端呼叫以驗證用戶端與伺服器連接中的用戶端，並選擇性地驗證伺服器。</span><span class="sxs-lookup"><span data-stu-id="56b53-143">Called by clients to authenticate the client, and optionally the server, in a client-server connection.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsClient ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsClient() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsClient" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsClient ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsClient();" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClient : unit -&gt; unit&#xA;override this.AuthenticateAsClient : unit -&gt; unit" Usage="negotiateStream.AuthenticateAsClient " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="56b53-144">由用戶端呼叫以驗證用戶端與伺服器連接中的用戶端，並選擇性地驗證伺服器。</span><span class="sxs-lookup"><span data-stu-id="56b53-144">Called by clients to authenticate the client, and optionally the server, in a client-server connection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56b53-145">驗證會使用用戶端的<xref:System.Net.CredentialCache.DefaultCredentials%2A>。</span><span class="sxs-lookup"><span data-stu-id="56b53-145">The authentication uses the client's <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span></span> <span data-ttu-id="56b53-146">沒有服務主體名稱 (SPN) 指定的伺服器。</span><span class="sxs-lookup"><span data-stu-id="56b53-146">No Service Principal Name (SPN) is specified for the server.</span></span> <span data-ttu-id="56b53-147">模擬層級<xref:System.Security.Principal.TokenImpersonationLevel.Identification>，安全性層級是<xref:System.Net.Security.ProtectionLevel.EncryptAndSign>，而且會要求相互驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-147">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>, and mutual authentication is requested.</span></span> <span data-ttu-id="56b53-148"><xref:System.Net.Security.NegotiateStream>類別將會建構用於相互驗證的 SPN。</span><span class="sxs-lookup"><span data-stu-id="56b53-148">The <xref:System.Net.Security.NegotiateStream> class will construct the SPN used for mutual authentication.</span></span>  
  
 <span data-ttu-id="56b53-149">當驗證成功時，您必須檢查<xref:System.Net.Security.NegotiateStream.IsEncrypted%2A>並<xref:System.Net.Security.NegotiateStream.IsSigned%2A>屬性，以決定哪些安全性服務由<xref:System.Net.Security.NegotiateStream>。</span><span class="sxs-lookup"><span data-stu-id="56b53-149">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="56b53-150">檢查<xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A>屬性來判斷是否發生相互驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-150">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="56b53-151">如果驗證失敗，您會收到<xref:System.Security.Authentication.AuthenticationException>或<xref:System.Security.Authentication.InvalidCredentialException>。</span><span class="sxs-lookup"><span data-stu-id="56b53-151">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="56b53-152">在此情況下，您可以重試一次使用不同的認證驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-152">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="56b53-153">驗證失敗。</span><span class="sxs-lookup"><span data-stu-id="56b53-153">The authentication failed.</span></span> <span data-ttu-id="56b53-154">您可以使用這個物件重試驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-154">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="56b53-155">驗證失敗。</span><span class="sxs-lookup"><span data-stu-id="56b53-155">The authentication failed.</span></span> <span data-ttu-id="56b53-156">您可以使用這個物件重試驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-156">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="56b53-157">此物件已關閉。</span><span class="sxs-lookup"><span data-stu-id="56b53-157">This object has been closed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="56b53-158">已經進行驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-158">Authentication has already occurred.</span></span>  
  
<span data-ttu-id="56b53-159">-或-</span><span class="sxs-lookup"><span data-stu-id="56b53-159">-or-</span></span> 
<span data-ttu-id="56b53-160">這個資料流先前是用來以伺服器的身分嘗試驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-160">This stream was used previously to attempt authentication as the server.</span></span> <span data-ttu-id="56b53-161">您不能使用資料流以用戶端身分重試驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-161">You cannot use the stream to retry authentication as the client.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="56b53-162">若要使用明確<see cref="T:System.Net.NetworkCredential" />。</span><span class="sxs-lookup"><span data-stu-id="56b53-162">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span></span> <span data-ttu-id="56b53-163">關聯的列舉型別：<see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />。</span><span class="sxs-lookup"><span data-stu-id="56b53-163">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsClient (System.Net.NetworkCredential credential, string targetName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsClient(class System.Net.NetworkCredential credential, string targetName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsClient (credential As NetworkCredential, targetName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsClient(System::Net::NetworkCredential ^ credential, System::String ^ targetName);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClient : System.Net.NetworkCredential * string -&gt; unit&#xA;override this.AuthenticateAsClient : System.Net.NetworkCredential * string -&gt; unit" Usage="negotiateStream.AuthenticateAsClient (credential, targetName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="targetName" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="credential"><span data-ttu-id="56b53-164">建立用戶端識別所用的 <see cref="T:System.Net.NetworkCredential" />。</span><span class="sxs-lookup"><span data-stu-id="56b53-164">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span></span></param>
        <param name="targetName"><span data-ttu-id="56b53-165">服務主要名稱 (SPN)，用來唯一識別要驗證的伺服器。</span><span class="sxs-lookup"><span data-stu-id="56b53-165">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span></span></param>
        <summary><span data-ttu-id="56b53-166">由用戶端呼叫以驗證用戶端與伺服器連接中的用戶端，並選擇性地驗證伺服器。</span><span class="sxs-lookup"><span data-stu-id="56b53-166">Called by clients to authenticate the client, and optionally the server, in a client-server connection.</span></span> <span data-ttu-id="56b53-167">驗證處理序使用指定的用戶端認證。</span><span class="sxs-lookup"><span data-stu-id="56b53-167">The authentication process uses the specified client credential.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56b53-168">模擬層級<xref:System.Security.Principal.TokenImpersonationLevel.Identification>，安全性層級是<xref:System.Net.Security.ProtectionLevel.EncryptAndSign>，而且會要求相互驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-168">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>, and mutual authentication is requested.</span></span> <span data-ttu-id="56b53-169"><xref:System.Net.Security.NegotiateStream>類別將會建構用於相互驗證的 SPN。</span><span class="sxs-lookup"><span data-stu-id="56b53-169">The <xref:System.Net.Security.NegotiateStream> class will construct the SPN used for mutual authentication.</span></span>  
  
 <span data-ttu-id="56b53-170">當驗證成功時，您必須檢查<xref:System.Net.Security.NegotiateStream.IsEncrypted%2A>並<xref:System.Net.Security.NegotiateStream.IsSigned%2A>屬性，以決定哪些安全性服務由<xref:System.Net.Security.NegotiateStream>。</span><span class="sxs-lookup"><span data-stu-id="56b53-170">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="56b53-171">檢查<xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A>屬性來判斷是否發生相互驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-171">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="56b53-172">驗證失敗。</span><span class="sxs-lookup"><span data-stu-id="56b53-172">The authentication failed.</span></span> <span data-ttu-id="56b53-173">您可以使用這個物件重試驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-173">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="56b53-174">驗證失敗。</span><span class="sxs-lookup"><span data-stu-id="56b53-174">The authentication failed.</span></span> <span data-ttu-id="56b53-175">您可以使用這個物件重試驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-175">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="56b53-176">此物件已關閉。</span><span class="sxs-lookup"><span data-stu-id="56b53-176">This object has been closed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="56b53-177">已經進行驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-177">Authentication has already occurred.</span></span>  
  
<span data-ttu-id="56b53-178">-或-</span><span class="sxs-lookup"><span data-stu-id="56b53-178">-or-</span></span> 
<span data-ttu-id="56b53-179">這個資料流先前是用來以伺服器的身分嘗試驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-179">This stream was used previously to attempt authentication as the server.</span></span> <span data-ttu-id="56b53-180">您不能使用資料流以用戶端身分重試驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-180">You cannot use the stream to retry authentication as the client.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="56b53-181"><paramref name="targetName" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="56b53-181"><paramref name="targetName" /> is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="56b53-182">若要使用明確<see cref="T:System.Net.NetworkCredential" />。</span><span class="sxs-lookup"><span data-stu-id="56b53-182">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span></span> <span data-ttu-id="56b53-183">關聯的列舉型別：<see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />。</span><span class="sxs-lookup"><span data-stu-id="56b53-183">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsClient (System.Net.NetworkCredential credential, System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsClient(class System.Net.NetworkCredential credential, class System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsClient (credential As NetworkCredential, binding As ChannelBinding, targetName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsClient(System::Net::NetworkCredential ^ credential, System::Security::Authentication::ExtendedProtection::ChannelBinding ^ binding, System::String ^ targetName);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClient : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ChannelBinding * string -&gt; unit&#xA;override this.AuthenticateAsClient : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ChannelBinding * string -&gt; unit" Usage="negotiateStream.AuthenticateAsClient (credential, binding, targetName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="binding" Type="System.Security.Authentication.ExtendedProtection.ChannelBinding" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="targetName" Type="System.String" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="credential"><span data-ttu-id="56b53-184">建立用戶端識別所用的 <see cref="T:System.Net.NetworkCredential" />。</span><span class="sxs-lookup"><span data-stu-id="56b53-184">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span></span></param>
        <param name="binding"><span data-ttu-id="56b53-185">用於延伸保護的 <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />。</span><span class="sxs-lookup"><span data-stu-id="56b53-185">The <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> that is used for extended protection.</span></span></param>
        <param name="targetName"><span data-ttu-id="56b53-186">服務主要名稱 (SPN)，用來唯一識別要驗證的伺服器。</span><span class="sxs-lookup"><span data-stu-id="56b53-186">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span></span></param>
        <summary><span data-ttu-id="56b53-187">由用戶端呼叫以驗證用戶端與伺服器連接中的用戶端，並選擇性地驗證伺服器。</span><span class="sxs-lookup"><span data-stu-id="56b53-187">Called by clients to authenticate the client, and optionally the server, in a client-server connection.</span></span> <span data-ttu-id="56b53-188">驗證處理序使用指定的用戶端認證和通道繫結。</span><span class="sxs-lookup"><span data-stu-id="56b53-188">The authentication process uses the specified client credential and the channel binding.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56b53-189">模擬層級<xref:System.Security.Principal.TokenImpersonationLevel.Identification>，安全性層級是<xref:System.Net.Security.ProtectionLevel.EncryptAndSign>，而且會要求相互驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-189">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>, and mutual authentication is requested.</span></span> <span data-ttu-id="56b53-190"><xref:System.Net.Security.NegotiateStream>類別將會建構用於相互驗證的 SPN。</span><span class="sxs-lookup"><span data-stu-id="56b53-190">The <xref:System.Net.Security.NegotiateStream> class will construct the SPN used for mutual authentication.</span></span>  
  
 <span data-ttu-id="56b53-191"><xref:System.Security.Authentication.ExtendedProtection.ChannelBinding>用於傳遞至這個方法中的擴充保護`binding`參數會從應用程式擷取<xref:System.Net.Security.SslStream.TransportContext%2A>相關的屬性<xref:System.Net.Security.SslStream>。</span><span class="sxs-lookup"><span data-stu-id="56b53-191">The <xref:System.Security.Authentication.ExtendedProtection.ChannelBinding> used for extended protection that is passed to this method in the `binding` parameter would be retrieved by an application from <xref:System.Net.Security.SslStream.TransportContext%2A> property on the associated <xref:System.Net.Security.SslStream>.</span></span>  
  
 <span data-ttu-id="56b53-192">當驗證成功時，您必須檢查<xref:System.Net.Security.NegotiateStream.IsEncrypted%2A>並<xref:System.Net.Security.NegotiateStream.IsSigned%2A>屬性，以決定哪些安全性服務由<xref:System.Net.Security.NegotiateStream>。</span><span class="sxs-lookup"><span data-stu-id="56b53-192">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="56b53-193">檢查<xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A>屬性來判斷是否發生相互驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-193">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="56b53-194"><paramref name="targetName" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="56b53-194"><paramref name="targetName" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="56b53-195">-或-</span><span class="sxs-lookup"><span data-stu-id="56b53-195">-or-</span></span> 
 <span data-ttu-id="56b53-196"><paramref name="credential" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="56b53-196"><paramref name="credential" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="56b53-197">驗證失敗。</span><span class="sxs-lookup"><span data-stu-id="56b53-197">The authentication failed.</span></span> <span data-ttu-id="56b53-198">您可以使用這個物件重試驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-198">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="56b53-199">驗證失敗。</span><span class="sxs-lookup"><span data-stu-id="56b53-199">The authentication failed.</span></span> <span data-ttu-id="56b53-200">您可以使用這個物件重試驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-200">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="56b53-201">已經進行驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-201">Authentication has already occurred.</span></span>  
  
<span data-ttu-id="56b53-202">-或-</span><span class="sxs-lookup"><span data-stu-id="56b53-202">-or-</span></span> 
<span data-ttu-id="56b53-203">這個資料流先前是用來以伺服器的身分嘗試驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-203">This stream was used previously to attempt authentication as the server.</span></span> <span data-ttu-id="56b53-204">您不能使用資料流以用戶端身分重試驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-204">You cannot use the stream to retry authentication as the client.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="56b53-205">此物件已關閉。</span><span class="sxs-lookup"><span data-stu-id="56b53-205">This object has been closed.</span></span></exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />
        <related type="Article" href="~/docs/framework/network-programming/integrated-windows-authentication-with-extended-protection.md"><span data-ttu-id="56b53-206">具有延伸保護的整合式 Windows 驗證</span><span class="sxs-lookup"><span data-stu-id="56b53-206">Integrated Windows Authentication with Extended Protection</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsClient (System.Net.NetworkCredential credential, string targetName, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsClient(class System.Net.NetworkCredential credential, string targetName, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsClient (credential As NetworkCredential, targetName As String, requiredProtectionLevel As ProtectionLevel, allowedImpersonationLevel As TokenImpersonationLevel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsClient(System::Net::NetworkCredential ^ credential, System::String ^ targetName, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel allowedImpersonationLevel);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClient : System.Net.NetworkCredential * string * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; unit&#xA;override this.AuthenticateAsClient : System.Net.NetworkCredential * string * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; unit" Usage="negotiateStream.AuthenticateAsClient (credential, targetName, requiredProtectionLevel, allowedImpersonationLevel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="targetName" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="allowedImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="credential"><span data-ttu-id="56b53-207">建立用戶端識別所用的 <see cref="T:System.Net.NetworkCredential" />。</span><span class="sxs-lookup"><span data-stu-id="56b53-207">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span></span></param>
        <param name="targetName"><span data-ttu-id="56b53-208">服務主要名稱 (SPN)，用來唯一識別要驗證的伺服器。</span><span class="sxs-lookup"><span data-stu-id="56b53-208">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span></span></param>
        <param name="requiredProtectionLevel"><span data-ttu-id="56b53-209">其中一個 <see cref="T:System.Net.Security.ProtectionLevel" /> 值，表示資料流的安全性服務。</span><span class="sxs-lookup"><span data-stu-id="56b53-209">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span></span></param>
        <param name="allowedImpersonationLevel"><span data-ttu-id="56b53-210">其中一個 <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 值，表示伺服器要如何使用用戶端的認證來存取資源。</span><span class="sxs-lookup"><span data-stu-id="56b53-210">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span></span></param>
        <summary><span data-ttu-id="56b53-211">由用戶端呼叫以驗證用戶端與伺服器連接中的用戶端，並選擇性地驗證伺服器。</span><span class="sxs-lookup"><span data-stu-id="56b53-211">Called by clients to authenticate the client, and optionally the server, in a client-server connection.</span></span> <span data-ttu-id="56b53-212">驗證處理序使用指定的認證和驗證選項。</span><span class="sxs-lookup"><span data-stu-id="56b53-212">The authentication process uses the specified credentials and authentication options.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56b53-213">使用`requiredProtectionLevel`參數來要求安全性服務，使用經過驗證的資料流傳輸的資料。</span><span class="sxs-lookup"><span data-stu-id="56b53-213">Use the `requiredProtectionLevel` parameter to request security services for data transmitted using the authenticated stream.</span></span> <span data-ttu-id="56b53-214">例如，若要加密與簽署的資料，請指定<xref:System.Net.Security.ProtectionLevel.EncryptAndSign>值。</span><span class="sxs-lookup"><span data-stu-id="56b53-214">For example, to have the data encrypted and signed, specify the <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> value.</span></span> <span data-ttu-id="56b53-215">成功驗證並不保證的要求<xref:System.Net.Security.ProtectionLevel>已被授與。</span><span class="sxs-lookup"><span data-stu-id="56b53-215">Successful authentication does not guarantee that the requested <xref:System.Net.Security.ProtectionLevel> has been granted.</span></span> <span data-ttu-id="56b53-216">您必須檢查<xref:System.Net.Security.NegotiateStream.IsEncrypted%2A>並<xref:System.Net.Security.NegotiateStream.IsSigned%2A>屬性，以決定哪些安全性服務由<xref:System.Net.Security.NegotiateStream>。</span><span class="sxs-lookup"><span data-stu-id="56b53-216">You must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 <span data-ttu-id="56b53-217">如果驗證失敗，您會收到<xref:System.Security.Authentication.AuthenticationException>或<xref:System.Security.Authentication.InvalidCredentialException>。</span><span class="sxs-lookup"><span data-stu-id="56b53-217">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="56b53-218">在此情況下，您可以重試一次使用不同的認證驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-218">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="56b53-219"><paramref name="allowedImpersonationLevel" /> 不是有效的值。</span><span class="sxs-lookup"><span data-stu-id="56b53-219"><paramref name="allowedImpersonationLevel" /> is not a valid value.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="56b53-220"><paramref name="targetName" /> 為 null。</span><span class="sxs-lookup"><span data-stu-id="56b53-220"><paramref name="targetName" /> is null.</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="56b53-221">驗證失敗。</span><span class="sxs-lookup"><span data-stu-id="56b53-221">The authentication failed.</span></span> <span data-ttu-id="56b53-222">您可以使用這個物件重試驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-222">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="56b53-223">驗證失敗。</span><span class="sxs-lookup"><span data-stu-id="56b53-223">The authentication failed.</span></span> <span data-ttu-id="56b53-224">您可以使用這個物件重試驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-224">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="56b53-225">此物件已關閉。</span><span class="sxs-lookup"><span data-stu-id="56b53-225">This object has been closed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="56b53-226">已經進行驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-226">Authentication has already occurred.</span></span>  
  
<span data-ttu-id="56b53-227">-或-</span><span class="sxs-lookup"><span data-stu-id="56b53-227">-or-</span></span> 
<span data-ttu-id="56b53-228">這個資料流先前是用來以伺服器的身分嘗試驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-228">This stream was used previously to attempt authentication as the server.</span></span> <span data-ttu-id="56b53-229">您不能使用資料流以用戶端身分重試驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-229">You cannot use the stream to retry authentication as the client.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="56b53-230">若要使用明確<see cref="T:System.Net.NetworkCredential" />。</span><span class="sxs-lookup"><span data-stu-id="56b53-230">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span></span> <span data-ttu-id="56b53-231">關聯的列舉型別：<see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />。</span><span class="sxs-lookup"><span data-stu-id="56b53-231">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsClient (System.Net.NetworkCredential credential, System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsClient(class System.Net.NetworkCredential credential, class System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsClient (credential As NetworkCredential, binding As ChannelBinding, targetName As String, requiredProtectionLevel As ProtectionLevel, allowedImpersonationLevel As TokenImpersonationLevel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsClient(System::Net::NetworkCredential ^ credential, System::Security::Authentication::ExtendedProtection::ChannelBinding ^ binding, System::String ^ targetName, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel allowedImpersonationLevel);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClient : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ChannelBinding * string * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; unit&#xA;override this.AuthenticateAsClient : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ChannelBinding * string * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; unit" Usage="negotiateStream.AuthenticateAsClient (credential, binding, targetName, requiredProtectionLevel, allowedImpersonationLevel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="binding" Type="System.Security.Authentication.ExtendedProtection.ChannelBinding" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="targetName" Type="System.String" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="allowedImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" Index="4" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="credential"><span data-ttu-id="56b53-232">建立用戶端識別所用的 <see cref="T:System.Net.NetworkCredential" />。</span><span class="sxs-lookup"><span data-stu-id="56b53-232">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span></span></param>
        <param name="binding"><span data-ttu-id="56b53-233">用於延伸保護的 <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />。</span><span class="sxs-lookup"><span data-stu-id="56b53-233">The <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> that is used for extended protection.</span></span></param>
        <param name="targetName"><span data-ttu-id="56b53-234">服務主要名稱 (SPN)，用來唯一識別要驗證的伺服器。</span><span class="sxs-lookup"><span data-stu-id="56b53-234">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span></span></param>
        <param name="requiredProtectionLevel"><span data-ttu-id="56b53-235">其中一個 <see cref="T:System.Net.Security.ProtectionLevel" /> 值，表示資料流的安全性服務。</span><span class="sxs-lookup"><span data-stu-id="56b53-235">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span></span></param>
        <param name="allowedImpersonationLevel"><span data-ttu-id="56b53-236">其中一個 <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 值，表示伺服器要如何使用用戶端的認證來存取資源。</span><span class="sxs-lookup"><span data-stu-id="56b53-236">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span></span></param>
        <summary><span data-ttu-id="56b53-237">由用戶端呼叫以驗證用戶端與伺服器連接中的用戶端，並選擇性地驗證伺服器。</span><span class="sxs-lookup"><span data-stu-id="56b53-237">Called by clients to authenticate the client, and optionally the server, in a client-server connection.</span></span> <span data-ttu-id="56b53-238">驗證處理序使用指定的認證、驗證選項和通道繫結。</span><span class="sxs-lookup"><span data-stu-id="56b53-238">The authentication process uses the specified credential, authentication options, and channel binding.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56b53-239">使用`requiredProtectionLevel`參數來要求安全性服務，使用經過驗證的資料流傳輸的資料。</span><span class="sxs-lookup"><span data-stu-id="56b53-239">Use the `requiredProtectionLevel` parameter to request security services for data transmitted using the authenticated stream.</span></span> <span data-ttu-id="56b53-240">例如，若要加密與簽署的資料，請指定<xref:System.Net.Security.ProtectionLevel.EncryptAndSign>值。</span><span class="sxs-lookup"><span data-stu-id="56b53-240">For example, to have the data encrypted and signed, specify the <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> value.</span></span> <span data-ttu-id="56b53-241">成功驗證並不保證的要求<xref:System.Net.Security.ProtectionLevel>已被授與。</span><span class="sxs-lookup"><span data-stu-id="56b53-241">Successful authentication does not guarantee that the requested <xref:System.Net.Security.ProtectionLevel> has been granted.</span></span> <span data-ttu-id="56b53-242">您必須檢查<xref:System.Net.Security.NegotiateStream.IsEncrypted%2A>並<xref:System.Net.Security.NegotiateStream.IsSigned%2A>屬性，以決定哪些安全性服務由<xref:System.Net.Security.NegotiateStream>。</span><span class="sxs-lookup"><span data-stu-id="56b53-242">You must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 <span data-ttu-id="56b53-243"><xref:System.Security.Authentication.ExtendedProtection.ChannelBinding>用於傳遞至這個方法中的擴充保護`binding`參數會從應用程式擷取<xref:System.Net.Security.SslStream.TransportContext%2A>相關的屬性<xref:System.Net.Security.SslStream>。</span><span class="sxs-lookup"><span data-stu-id="56b53-243">The <xref:System.Security.Authentication.ExtendedProtection.ChannelBinding> used for extended protection that is passed to this method in the `binding` parameter would be retrieved by an application from <xref:System.Net.Security.SslStream.TransportContext%2A> property on the associated <xref:System.Net.Security.SslStream>.</span></span>  
  
 <span data-ttu-id="56b53-244">如果驗證失敗，您會收到<xref:System.Security.Authentication.AuthenticationException>或<xref:System.Security.Authentication.InvalidCredentialException>。</span><span class="sxs-lookup"><span data-stu-id="56b53-244">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="56b53-245">在此情況下，您可以重試一次使用不同的認證驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-245">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="56b53-246"><paramref name="targetName" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="56b53-246"><paramref name="targetName" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="56b53-247">-或-</span><span class="sxs-lookup"><span data-stu-id="56b53-247">-or-</span></span> 
 <span data-ttu-id="56b53-248"><paramref name="credential" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="56b53-248"><paramref name="credential" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="56b53-249"><paramref name="allowedImpersonationLevel" /> 不是有效的值。</span><span class="sxs-lookup"><span data-stu-id="56b53-249"><paramref name="allowedImpersonationLevel" /> is not a valid value.</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="56b53-250">驗證失敗。</span><span class="sxs-lookup"><span data-stu-id="56b53-250">The authentication failed.</span></span> <span data-ttu-id="56b53-251">您可以使用這個物件重試驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-251">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="56b53-252">驗證失敗。</span><span class="sxs-lookup"><span data-stu-id="56b53-252">The authentication failed.</span></span> <span data-ttu-id="56b53-253">您可以使用這個物件重試驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-253">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="56b53-254">已經進行驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-254">Authentication has already occurred.</span></span>  
  
<span data-ttu-id="56b53-255">-或-</span><span class="sxs-lookup"><span data-stu-id="56b53-255">-or-</span></span> 
<span data-ttu-id="56b53-256">這個資料流先前是用來以伺服器的身分嘗試驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-256">This stream was used previously to attempt authentication as the server.</span></span> <span data-ttu-id="56b53-257">您不能使用資料流以用戶端身分重試驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-257">You cannot use the stream to retry authentication as the client.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="56b53-258">此物件已關閉。</span><span class="sxs-lookup"><span data-stu-id="56b53-258">This object has been closed.</span></span></exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />
        <related type="Article" href="~/docs/framework/network-programming/integrated-windows-authentication-with-extended-protection.md"><span data-ttu-id="56b53-259">具有延伸保護的整合式 Windows 驗證</span><span class="sxs-lookup"><span data-stu-id="56b53-259">Integrated Windows Authentication with Extended Protection</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="AuthenticateAsClientAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="56b53-260">由用戶端呼叫做為非同步作業，以驗證用戶端與伺服器連接中的用戶端，並選擇性地驗證伺服器。</span><span class="sxs-lookup"><span data-stu-id="56b53-260">Called by clients to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AuthenticateAsClientAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsClientAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsClientAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsClientAsync () As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsClientAsync();" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClientAsync : unit -&gt; System.Threading.Tasks.Task&#xA;override this.AuthenticateAsClientAsync : unit -&gt; System.Threading.Tasks.Task" Usage="negotiateStream.AuthenticateAsClientAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="56b53-261">由用戶端呼叫做為非同步作業，以驗證用戶端與伺服器連接中的用戶端，並選擇性地驗證伺服器。</span><span class="sxs-lookup"><span data-stu-id="56b53-261">Called by clients to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="56b53-262">工作物件，表示非同步作業。</span><span class="sxs-lookup"><span data-stu-id="56b53-262">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56b53-263">驗證會使用用戶端的<xref:System.Net.CredentialCache.DefaultCredentials%2A>。</span><span class="sxs-lookup"><span data-stu-id="56b53-263">The authentication uses the client's <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span></span> <span data-ttu-id="56b53-264">沒有服務主體名稱 (SPN) 指定的伺服器。</span><span class="sxs-lookup"><span data-stu-id="56b53-264">No Service Principal Name (SPN) is specified for the server.</span></span> <span data-ttu-id="56b53-265">模擬層級<xref:System.Security.Principal.TokenImpersonationLevel.Identification>，安全性層級是<xref:System.Net.Security.ProtectionLevel.EncryptAndSign>，而且會要求相互驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-265">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>, and mutual authentication is requested.</span></span> <span data-ttu-id="56b53-266"><xref:System.Net.Security.NegotiateStream>類別將會建構用於相互驗證的 SPN。</span><span class="sxs-lookup"><span data-stu-id="56b53-266">The <xref:System.Net.Security.NegotiateStream> class will construct the SPN used for mutual authentication.</span></span>  
  
 <span data-ttu-id="56b53-267">當驗證成功時，您必須檢查<xref:System.Net.Security.NegotiateStream.IsEncrypted%2A>並<xref:System.Net.Security.NegotiateStream.IsSigned%2A>屬性，以決定哪些安全性服務由<xref:System.Net.Security.NegotiateStream>。</span><span class="sxs-lookup"><span data-stu-id="56b53-267">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="56b53-268">檢查<xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A>屬性來判斷是否發生相互驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-268">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="56b53-269">如果驗證失敗，您會收到<xref:System.Security.Authentication.AuthenticationException>或<xref:System.Security.Authentication.InvalidCredentialException>。</span><span class="sxs-lookup"><span data-stu-id="56b53-269">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="56b53-270">在此情況下，您可以重試一次使用不同的認證驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-270">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="56b53-271">驗證失敗。</span><span class="sxs-lookup"><span data-stu-id="56b53-271">The authentication failed.</span></span> <span data-ttu-id="56b53-272">您可以使用這個物件重試驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-272">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="56b53-273">驗證失敗。</span><span class="sxs-lookup"><span data-stu-id="56b53-273">The authentication failed.</span></span> <span data-ttu-id="56b53-274">您可以使用這個物件重試驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-274">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="56b53-275">此物件已關閉。</span><span class="sxs-lookup"><span data-stu-id="56b53-275">This object has been closed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="56b53-276">已經進行驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-276">Authentication has already occurred.</span></span>  
  
<span data-ttu-id="56b53-277">-或-</span><span class="sxs-lookup"><span data-stu-id="56b53-277">-or-</span></span> 
<span data-ttu-id="56b53-278">這個資料流先前是用來以伺服器的身分嘗試驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-278">This stream was used previously to attempt authentication as the server.</span></span> <span data-ttu-id="56b53-279">您不能使用資料流以用戶端身分重試驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-279">You cannot use the stream to retry authentication as the client.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="56b53-280">若要使用明確<see cref="T:System.Net.NetworkCredential" />。</span><span class="sxs-lookup"><span data-stu-id="56b53-280">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span></span> <span data-ttu-id="56b53-281">關聯的列舉型別：<see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />。</span><span class="sxs-lookup"><span data-stu-id="56b53-281">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClientAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsClientAsync (System.Net.NetworkCredential credential, string targetName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsClientAsync(class System.Net.NetworkCredential credential, string targetName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsClientAsync (credential As NetworkCredential, targetName As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsClientAsync(System::Net::NetworkCredential ^ credential, System::String ^ targetName);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClientAsync : System.Net.NetworkCredential * string -&gt; System.Threading.Tasks.Task&#xA;override this.AuthenticateAsClientAsync : System.Net.NetworkCredential * string -&gt; System.Threading.Tasks.Task" Usage="negotiateStream.AuthenticateAsClientAsync (credential, targetName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="targetName" Type="System.String" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="credential"><span data-ttu-id="56b53-282">建立用戶端識別所用的 <see cref="T:System.Net.NetworkCredential" />。</span><span class="sxs-lookup"><span data-stu-id="56b53-282">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span></span></param>
        <param name="targetName"><span data-ttu-id="56b53-283">服務主要名稱 (SPN)，用來唯一識別要驗證的伺服器。</span><span class="sxs-lookup"><span data-stu-id="56b53-283">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span></span></param>
        <summary><span data-ttu-id="56b53-284">由用戶端呼叫做為非同步作業，以驗證用戶端與伺服器連接中的用戶端，並選擇性地驗證伺服器。</span><span class="sxs-lookup"><span data-stu-id="56b53-284">Called by clients to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span></span> <span data-ttu-id="56b53-285">驗證處理序使用指定的用戶端認證。</span><span class="sxs-lookup"><span data-stu-id="56b53-285">The authentication process uses the specified client credential.</span></span></summary>
        <returns><span data-ttu-id="56b53-286">工作物件，表示非同步作業。</span><span class="sxs-lookup"><span data-stu-id="56b53-286">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56b53-287">模擬層級<xref:System.Security.Principal.TokenImpersonationLevel.Identification>，安全性層級是<xref:System.Net.Security.ProtectionLevel.EncryptAndSign>，而且會要求相互驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-287">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>, and mutual authentication is requested.</span></span> <span data-ttu-id="56b53-288"><xref:System.Net.Security.NegotiateStream>類別將會建構用於相互驗證的 SPN。</span><span class="sxs-lookup"><span data-stu-id="56b53-288">The <xref:System.Net.Security.NegotiateStream> class will construct the SPN used for mutual authentication.</span></span>  
  
 <span data-ttu-id="56b53-289">當驗證成功時，您必須檢查<xref:System.Net.Security.NegotiateStream.IsEncrypted%2A>並<xref:System.Net.Security.NegotiateStream.IsSigned%2A>屬性，以決定哪些安全性服務由<xref:System.Net.Security.NegotiateStream>。</span><span class="sxs-lookup"><span data-stu-id="56b53-289">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="56b53-290">檢查<xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A>屬性來判斷是否發生相互驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-290">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="56b53-291">驗證失敗。</span><span class="sxs-lookup"><span data-stu-id="56b53-291">The authentication failed.</span></span> <span data-ttu-id="56b53-292">您可以使用這個物件重試驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-292">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="56b53-293">驗證失敗。</span><span class="sxs-lookup"><span data-stu-id="56b53-293">The authentication failed.</span></span> <span data-ttu-id="56b53-294">您可以使用這個物件重試驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-294">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="56b53-295">此物件已關閉。</span><span class="sxs-lookup"><span data-stu-id="56b53-295">This object has been closed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="56b53-296">已經進行驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-296">Authentication has already occurred.</span></span>  
  
<span data-ttu-id="56b53-297">-或-</span><span class="sxs-lookup"><span data-stu-id="56b53-297">-or-</span></span> 
<span data-ttu-id="56b53-298">這個資料流先前是用來以伺服器的身分嘗試驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-298">This stream was used previously to attempt authentication as the server.</span></span> <span data-ttu-id="56b53-299">您不能使用資料流以用戶端身分重試驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-299">You cannot use the stream to retry authentication as the client.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="56b53-300"><paramref name="targetName" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="56b53-300"><paramref name="targetName" /> is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="56b53-301">若要使用明確<see cref="T:System.Net.NetworkCredential" />。</span><span class="sxs-lookup"><span data-stu-id="56b53-301">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span></span> <span data-ttu-id="56b53-302">關聯的列舉型別：<see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />。</span><span class="sxs-lookup"><span data-stu-id="56b53-302">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClientAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsClientAsync (System.Net.NetworkCredential credential, System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsClientAsync(class System.Net.NetworkCredential credential, class System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsClientAsync (credential As NetworkCredential, binding As ChannelBinding, targetName As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsClientAsync(System::Net::NetworkCredential ^ credential, System::Security::Authentication::ExtendedProtection::ChannelBinding ^ binding, System::String ^ targetName);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClientAsync : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ChannelBinding * string -&gt; System.Threading.Tasks.Task&#xA;override this.AuthenticateAsClientAsync : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ChannelBinding * string -&gt; System.Threading.Tasks.Task" Usage="negotiateStream.AuthenticateAsClientAsync (credential, binding, targetName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="binding" Type="System.Security.Authentication.ExtendedProtection.ChannelBinding" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="targetName" Type="System.String" Index="2" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="credential"><span data-ttu-id="56b53-303">建立用戶端識別所用的 <see cref="T:System.Net.NetworkCredential" />。</span><span class="sxs-lookup"><span data-stu-id="56b53-303">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span></span></param>
        <param name="binding"><span data-ttu-id="56b53-304">用於延伸保護的 <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />。</span><span class="sxs-lookup"><span data-stu-id="56b53-304">The <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> that is used for extended protection.</span></span></param>
        <param name="targetName"><span data-ttu-id="56b53-305">服務主要名稱 (SPN)，用來唯一識別要驗證的伺服器。</span><span class="sxs-lookup"><span data-stu-id="56b53-305">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span></span></param>
        <summary><span data-ttu-id="56b53-306">由用戶端呼叫做為非同步作業，以驗證用戶端與伺服器連接中的用戶端，並選擇性地驗證伺服器。</span><span class="sxs-lookup"><span data-stu-id="56b53-306">Called by clients to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span></span> <span data-ttu-id="56b53-307">驗證處理序使用指定的用戶端認證和通道繫結。</span><span class="sxs-lookup"><span data-stu-id="56b53-307">The authentication process uses the specified client credential and the channel binding.</span></span></summary>
        <returns><span data-ttu-id="56b53-308">工作物件，表示非同步作業。</span><span class="sxs-lookup"><span data-stu-id="56b53-308">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56b53-309">模擬層級<xref:System.Security.Principal.TokenImpersonationLevel.Identification>，安全性層級是<xref:System.Net.Security.ProtectionLevel.EncryptAndSign>，而且會要求相互驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-309">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>, and mutual authentication is requested.</span></span> <span data-ttu-id="56b53-310"><xref:System.Net.Security.NegotiateStream>類別將會建構用於相互驗證的 SPN。</span><span class="sxs-lookup"><span data-stu-id="56b53-310">The <xref:System.Net.Security.NegotiateStream> class will construct the SPN used for mutual authentication.</span></span>  
  
 <span data-ttu-id="56b53-311"><xref:System.Security.Authentication.ExtendedProtection.ChannelBinding>用於傳遞至這個方法中的擴充保護`binding`參數會從應用程式擷取<xref:System.Net.Security.SslStream.TransportContext%2A>相關的屬性<xref:System.Net.Security.SslStream>。</span><span class="sxs-lookup"><span data-stu-id="56b53-311">The <xref:System.Security.Authentication.ExtendedProtection.ChannelBinding> used for extended protection that is passed to this method in the `binding` parameter would be retrieved by an application from <xref:System.Net.Security.SslStream.TransportContext%2A> property on the associated <xref:System.Net.Security.SslStream>.</span></span>  
  
 <span data-ttu-id="56b53-312">當驗證成功時，您必須檢查<xref:System.Net.Security.NegotiateStream.IsEncrypted%2A>並<xref:System.Net.Security.NegotiateStream.IsSigned%2A>屬性，以決定哪些安全性服務由<xref:System.Net.Security.NegotiateStream>。</span><span class="sxs-lookup"><span data-stu-id="56b53-312">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="56b53-313">檢查<xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A>屬性來判斷是否發生相互驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-313">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="56b53-314"><paramref name="targetName" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="56b53-314"><paramref name="targetName" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="56b53-315">-或-</span><span class="sxs-lookup"><span data-stu-id="56b53-315">-or-</span></span> 
 <span data-ttu-id="56b53-316"><paramref name="credential" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="56b53-316"><paramref name="credential" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="56b53-317">驗證失敗。</span><span class="sxs-lookup"><span data-stu-id="56b53-317">The authentication failed.</span></span> <span data-ttu-id="56b53-318">您可以使用這個物件重試驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-318">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="56b53-319">驗證失敗。</span><span class="sxs-lookup"><span data-stu-id="56b53-319">The authentication failed.</span></span> <span data-ttu-id="56b53-320">您可以使用這個物件重試驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-320">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="56b53-321">已經進行驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-321">Authentication has already occurred.</span></span>  
  
<span data-ttu-id="56b53-322">-或-</span><span class="sxs-lookup"><span data-stu-id="56b53-322">-or-</span></span> 
<span data-ttu-id="56b53-323">這個資料流先前是用來以伺服器的身分嘗試驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-323">This stream was used previously to attempt authentication as the server.</span></span> <span data-ttu-id="56b53-324">您不能使用資料流以用戶端身分重試驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-324">You cannot use the stream to retry authentication as the client.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="56b53-325">此物件已關閉。</span><span class="sxs-lookup"><span data-stu-id="56b53-325">This object has been closed.</span></span></exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />
        <related type="Article" href="~/docs/framework/network-programming/integrated-windows-authentication-with-extended-protection.md"><span data-ttu-id="56b53-326">具有延伸保護的整合式 Windows 驗證</span><span class="sxs-lookup"><span data-stu-id="56b53-326">Integrated Windows Authentication with Extended Protection</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClientAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsClientAsync (System.Net.NetworkCredential credential, string targetName, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsClientAsync(class System.Net.NetworkCredential credential, string targetName, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsClientAsync (credential As NetworkCredential, targetName As String, requiredProtectionLevel As ProtectionLevel, allowedImpersonationLevel As TokenImpersonationLevel) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsClientAsync(System::Net::NetworkCredential ^ credential, System::String ^ targetName, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel allowedImpersonationLevel);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClientAsync : System.Net.NetworkCredential * string * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; System.Threading.Tasks.Task&#xA;override this.AuthenticateAsClientAsync : System.Net.NetworkCredential * string * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; System.Threading.Tasks.Task" Usage="negotiateStream.AuthenticateAsClientAsync (credential, targetName, requiredProtectionLevel, allowedImpersonationLevel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="targetName" Type="System.String" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" Index="2" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="allowedImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" Index="3" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="credential"><span data-ttu-id="56b53-327">建立用戶端識別所用的 <see cref="T:System.Net.NetworkCredential" />。</span><span class="sxs-lookup"><span data-stu-id="56b53-327">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span></span></param>
        <param name="targetName"><span data-ttu-id="56b53-328">服務主要名稱 (SPN)，用來唯一識別要驗證的伺服器。</span><span class="sxs-lookup"><span data-stu-id="56b53-328">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span></span></param>
        <param name="requiredProtectionLevel"><span data-ttu-id="56b53-329">其中一個 <see cref="T:System.Net.Security.ProtectionLevel" /> 值，表示資料流的安全性服務。</span><span class="sxs-lookup"><span data-stu-id="56b53-329">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span></span></param>
        <param name="allowedImpersonationLevel"><span data-ttu-id="56b53-330">其中一個 <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 值，表示伺服器要如何使用用戶端的認證來存取資源。</span><span class="sxs-lookup"><span data-stu-id="56b53-330">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span></span></param>
        <summary><span data-ttu-id="56b53-331">由用戶端呼叫做為非同步作業，以驗證用戶端與伺服器連接中的用戶端，並選擇性地驗證伺服器。</span><span class="sxs-lookup"><span data-stu-id="56b53-331">Called by clients to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span></span> <span data-ttu-id="56b53-332">驗證處理序使用指定的認證和驗證選項。</span><span class="sxs-lookup"><span data-stu-id="56b53-332">The authentication process uses the specified credentials and authentication options.</span></span></summary>
        <returns><span data-ttu-id="56b53-333">工作物件，表示非同步作業。</span><span class="sxs-lookup"><span data-stu-id="56b53-333">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56b53-334">使用`requiredProtectionLevel`參數來要求安全性服務，使用經過驗證的資料流傳輸的資料。</span><span class="sxs-lookup"><span data-stu-id="56b53-334">Use the `requiredProtectionLevel` parameter to request security services for data transmitted using the authenticated stream.</span></span> <span data-ttu-id="56b53-335">例如，若要加密與簽署的資料，請指定<xref:System.Net.Security.ProtectionLevel.EncryptAndSign>值。</span><span class="sxs-lookup"><span data-stu-id="56b53-335">For example, to have the data encrypted and signed, specify the <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> value.</span></span> <span data-ttu-id="56b53-336">成功驗證並不保證的要求<xref:System.Net.Security.ProtectionLevel>已被授與。</span><span class="sxs-lookup"><span data-stu-id="56b53-336">Successful authentication does not guarantee that the requested <xref:System.Net.Security.ProtectionLevel> has been granted.</span></span> <span data-ttu-id="56b53-337">您必須檢查<xref:System.Net.Security.NegotiateStream.IsEncrypted%2A>並<xref:System.Net.Security.NegotiateStream.IsSigned%2A>屬性，以決定哪些安全性服務由<xref:System.Net.Security.NegotiateStream>。</span><span class="sxs-lookup"><span data-stu-id="56b53-337">You must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 <span data-ttu-id="56b53-338">如果驗證失敗，您會收到<xref:System.Security.Authentication.AuthenticationException>或<xref:System.Security.Authentication.InvalidCredentialException>。</span><span class="sxs-lookup"><span data-stu-id="56b53-338">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="56b53-339">在此情況下，您可以重試一次使用不同的認證驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-339">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="56b53-340"><paramref name="allowedImpersonationLevel" /> 不是有效的值。</span><span class="sxs-lookup"><span data-stu-id="56b53-340"><paramref name="allowedImpersonationLevel" /> is not a valid value.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="56b53-341"><paramref name="targetName" /> 為 null。</span><span class="sxs-lookup"><span data-stu-id="56b53-341"><paramref name="targetName" /> is null.</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="56b53-342">驗證失敗。</span><span class="sxs-lookup"><span data-stu-id="56b53-342">The authentication failed.</span></span> <span data-ttu-id="56b53-343">您可以使用這個物件重試驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-343">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="56b53-344">驗證失敗。</span><span class="sxs-lookup"><span data-stu-id="56b53-344">The authentication failed.</span></span> <span data-ttu-id="56b53-345">您可以使用這個物件重試驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-345">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="56b53-346">此物件已關閉。</span><span class="sxs-lookup"><span data-stu-id="56b53-346">This object has been closed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="56b53-347">已經進行驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-347">Authentication has already occurred.</span></span>  
  
<span data-ttu-id="56b53-348">-或-</span><span class="sxs-lookup"><span data-stu-id="56b53-348">-or-</span></span> 
<span data-ttu-id="56b53-349">這個資料流先前是用來以伺服器的身分嘗試驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-349">This stream was used previously to attempt authentication as the server.</span></span> <span data-ttu-id="56b53-350">您不能使用資料流以用戶端身分重試驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-350">You cannot use the stream to retry authentication as the client.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="56b53-351">若要使用明確<see cref="T:System.Net.NetworkCredential" />。</span><span class="sxs-lookup"><span data-stu-id="56b53-351">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span></span> <span data-ttu-id="56b53-352">關聯的列舉型別：<see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />。</span><span class="sxs-lookup"><span data-stu-id="56b53-352">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClientAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsClientAsync (System.Net.NetworkCredential credential, System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsClientAsync(class System.Net.NetworkCredential credential, class System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsClientAsync (credential As NetworkCredential, binding As ChannelBinding, targetName As String, requiredProtectionLevel As ProtectionLevel, allowedImpersonationLevel As TokenImpersonationLevel) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsClientAsync(System::Net::NetworkCredential ^ credential, System::Security::Authentication::ExtendedProtection::ChannelBinding ^ binding, System::String ^ targetName, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel allowedImpersonationLevel);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClientAsync : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ChannelBinding * string * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; System.Threading.Tasks.Task&#xA;override this.AuthenticateAsClientAsync : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ChannelBinding * string * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; System.Threading.Tasks.Task" Usage="negotiateStream.AuthenticateAsClientAsync (credential, binding, targetName, requiredProtectionLevel, allowedImpersonationLevel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="binding" Type="System.Security.Authentication.ExtendedProtection.ChannelBinding" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="targetName" Type="System.String" Index="2" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" Index="3" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="allowedImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" Index="4" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="credential"><span data-ttu-id="56b53-353">建立用戶端識別所用的 <see cref="T:System.Net.NetworkCredential" />。</span><span class="sxs-lookup"><span data-stu-id="56b53-353">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span></span></param>
        <param name="binding"><span data-ttu-id="56b53-354">用於延伸保護的 <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />。</span><span class="sxs-lookup"><span data-stu-id="56b53-354">The <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> that is used for extended protection.</span></span></param>
        <param name="targetName"><span data-ttu-id="56b53-355">服務主要名稱 (SPN)，用來唯一識別要驗證的伺服器。</span><span class="sxs-lookup"><span data-stu-id="56b53-355">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span></span></param>
        <param name="requiredProtectionLevel"><span data-ttu-id="56b53-356">其中一個 <see cref="T:System.Net.Security.ProtectionLevel" /> 值，表示資料流的安全性服務。</span><span class="sxs-lookup"><span data-stu-id="56b53-356">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span></span></param>
        <param name="allowedImpersonationLevel"><span data-ttu-id="56b53-357">其中一個 <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 值，表示伺服器要如何使用用戶端的認證來存取資源。</span><span class="sxs-lookup"><span data-stu-id="56b53-357">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span></span></param>
        <summary><span data-ttu-id="56b53-358">由用戶端呼叫做為非同步作業，以驗證用戶端與伺服器連接中的用戶端，並選擇性地驗證伺服器。</span><span class="sxs-lookup"><span data-stu-id="56b53-358">Called by clients to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span></span> <span data-ttu-id="56b53-359">驗證處理序使用指定的認證、驗證選項和通道繫結。</span><span class="sxs-lookup"><span data-stu-id="56b53-359">The authentication process uses the specified credential, authentication options, and channel binding.</span></span></summary>
        <returns><span data-ttu-id="56b53-360">工作物件，表示非同步作業。</span><span class="sxs-lookup"><span data-stu-id="56b53-360">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56b53-361">使用`requiredProtectionLevel`參數來要求安全性服務，使用經過驗證的資料流傳輸的資料。</span><span class="sxs-lookup"><span data-stu-id="56b53-361">Use the `requiredProtectionLevel` parameter to request security services for data transmitted using the authenticated stream.</span></span> <span data-ttu-id="56b53-362">例如，若要加密與簽署的資料，請指定<xref:System.Net.Security.ProtectionLevel.EncryptAndSign>值。</span><span class="sxs-lookup"><span data-stu-id="56b53-362">For example, to have the data encrypted and signed, specify the <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> value.</span></span> <span data-ttu-id="56b53-363">成功驗證並不保證的要求<xref:System.Net.Security.ProtectionLevel>已被授與。</span><span class="sxs-lookup"><span data-stu-id="56b53-363">Successful authentication does not guarantee that the requested <xref:System.Net.Security.ProtectionLevel> has been granted.</span></span> <span data-ttu-id="56b53-364">您必須檢查<xref:System.Net.Security.NegotiateStream.IsEncrypted%2A>並<xref:System.Net.Security.NegotiateStream.IsSigned%2A>屬性，以決定哪些安全性服務由<xref:System.Net.Security.NegotiateStream>。</span><span class="sxs-lookup"><span data-stu-id="56b53-364">You must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 <span data-ttu-id="56b53-365"><xref:System.Security.Authentication.ExtendedProtection.ChannelBinding>用於傳遞至這個方法中的擴充保護`binding`參數會從應用程式擷取<xref:System.Net.Security.SslStream.TransportContext%2A>相關的屬性<xref:System.Net.Security.SslStream>。</span><span class="sxs-lookup"><span data-stu-id="56b53-365">The <xref:System.Security.Authentication.ExtendedProtection.ChannelBinding> used for extended protection that is passed to this method in the `binding` parameter would be retrieved by an application from <xref:System.Net.Security.SslStream.TransportContext%2A> property on the associated <xref:System.Net.Security.SslStream>.</span></span>  
  
 <span data-ttu-id="56b53-366">如果驗證失敗，您會收到<xref:System.Security.Authentication.AuthenticationException>或<xref:System.Security.Authentication.InvalidCredentialException>。</span><span class="sxs-lookup"><span data-stu-id="56b53-366">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="56b53-367">在此情況下，您可以重試一次使用不同的認證驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-367">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="56b53-368"><paramref name="targetName" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="56b53-368"><paramref name="targetName" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="56b53-369">-或-</span><span class="sxs-lookup"><span data-stu-id="56b53-369">-or-</span></span> 
 <span data-ttu-id="56b53-370"><paramref name="credential" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="56b53-370"><paramref name="credential" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="56b53-371"><paramref name="allowedImpersonationLevel" /> 不是有效的值。</span><span class="sxs-lookup"><span data-stu-id="56b53-371"><paramref name="allowedImpersonationLevel" /> is not a valid value.</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="56b53-372">驗證失敗。</span><span class="sxs-lookup"><span data-stu-id="56b53-372">The authentication failed.</span></span> <span data-ttu-id="56b53-373">您可以使用這個物件重試驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-373">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="56b53-374">驗證失敗。</span><span class="sxs-lookup"><span data-stu-id="56b53-374">The authentication failed.</span></span> <span data-ttu-id="56b53-375">您可以使用這個物件重試驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-375">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="56b53-376">已經進行驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-376">Authentication has already occurred.</span></span>  
  
<span data-ttu-id="56b53-377">-或-</span><span class="sxs-lookup"><span data-stu-id="56b53-377">-or-</span></span> 
<span data-ttu-id="56b53-378">這個資料流先前是用來以伺服器的身分嘗試驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-378">This stream was used previously to attempt authentication as the server.</span></span> <span data-ttu-id="56b53-379">您不能使用資料流以用戶端身分重試驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-379">You cannot use the stream to retry authentication as the client.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="56b53-380">此物件已關閉。</span><span class="sxs-lookup"><span data-stu-id="56b53-380">This object has been closed.</span></span></exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />
        <related type="Article" href="~/docs/framework/network-programming/integrated-windows-authentication-with-extended-protection.md"><span data-ttu-id="56b53-381">具有延伸保護的整合式 Windows 驗證</span><span class="sxs-lookup"><span data-stu-id="56b53-381">Integrated Windows Authentication with Extended Protection</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="AuthenticateAsServer">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="56b53-382">處理用戶端與伺服器連接之驗證的伺服器端。</span><span class="sxs-lookup"><span data-stu-id="56b53-382">Handles the server side of an authentication for a client-server connection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56b53-383">在進行驗證時，就會封鎖這些方法。</span><span class="sxs-lookup"><span data-stu-id="56b53-383">These methods block while the authentication is in progress.</span></span> <span data-ttu-id="56b53-384">若要防止應用程式封鎖等候要完成驗證時，使用<xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="56b53-384">To prevent the application from blocking while waiting for the authentication to complete, use the <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="AuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsServer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsServer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsServer" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsServer ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsServer();" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsServer : unit -&gt; unit&#xA;override this.AuthenticateAsServer : unit -&gt; unit" Usage="negotiateStream.AuthenticateAsServer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="56b53-385">由伺服器呼叫以驗證用戶端與伺服器連接中的用戶端，並選擇性地驗證伺服器。</span><span class="sxs-lookup"><span data-stu-id="56b53-385">Called by servers to authenticate the client, and optionally the server, in a client-server connection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56b53-386">驗證會使用伺服器的<xref:System.Net.CredentialCache.DefaultCredentials%2A>。</span><span class="sxs-lookup"><span data-stu-id="56b53-386">The authentication uses the server's <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span></span> <span data-ttu-id="56b53-387">沒有服務主體名稱 (SPN) 指定的伺服器。</span><span class="sxs-lookup"><span data-stu-id="56b53-387">No Service Principal Name (SPN) is specified for the server.</span></span> <span data-ttu-id="56b53-388">模擬層級<xref:System.Security.Principal.TokenImpersonationLevel.Identification>，和安全性層級是<xref:System.Net.Security.ProtectionLevel.EncryptAndSign>。</span><span class="sxs-lookup"><span data-stu-id="56b53-388">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, and the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span></span>  
  
 <span data-ttu-id="56b53-389">當驗證成功時，您必須檢查<xref:System.Net.Security.NegotiateStream.IsEncrypted%2A>並<xref:System.Net.Security.NegotiateStream.IsSigned%2A>屬性，以決定哪些安全性服務由<xref:System.Net.Security.NegotiateStream>。</span><span class="sxs-lookup"><span data-stu-id="56b53-389">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="56b53-390">檢查<xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A>屬性來判斷是否發生相互驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-390">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="56b53-391">這個方法會封鎖直到作業完成為止。</span><span class="sxs-lookup"><span data-stu-id="56b53-391">This method blocks until the operation completes.</span></span> <span data-ttu-id="56b53-392">若要防止封鎖直到作業完成為止，使用其中一種<xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A>方法多載。</span><span class="sxs-lookup"><span data-stu-id="56b53-392">To prevent blocking until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="56b53-393">如果驗證失敗，您會收到<xref:System.Security.Authentication.AuthenticationException>或<xref:System.Security.Authentication.InvalidCredentialException>。</span><span class="sxs-lookup"><span data-stu-id="56b53-393">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="56b53-394">在此情況下，您可以重試一次使用不同的認證驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-394">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="56b53-395">驗證失敗。</span><span class="sxs-lookup"><span data-stu-id="56b53-395">The authentication failed.</span></span> <span data-ttu-id="56b53-396">您可以使用這個物件重試驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-396">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="56b53-397">驗證失敗。</span><span class="sxs-lookup"><span data-stu-id="56b53-397">The authentication failed.</span></span> <span data-ttu-id="56b53-398">您可以使用這個物件重試驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-398">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="56b53-399">此物件已關閉。</span><span class="sxs-lookup"><span data-stu-id="56b53-399">This object has been closed.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="56b53-400">不支援 Windows 95 和 Windows 98。</span><span class="sxs-lookup"><span data-stu-id="56b53-400">Windows 95 and Windows 98 are not supported.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="56b53-401">若要使用明確<see cref="T:System.Net.NetworkCredential" />。</span><span class="sxs-lookup"><span data-stu-id="56b53-401">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span></span> <span data-ttu-id="56b53-402">關聯的列舉型別：<see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />。</span><span class="sxs-lookup"><span data-stu-id="56b53-402">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsServer (System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsServer(class System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsServer (policy As ExtendedProtectionPolicy)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsServer(System::Security::Authentication::ExtendedProtection::ExtendedProtectionPolicy ^ policy);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsServer : System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy -&gt; unit&#xA;override this.AuthenticateAsServer : System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy -&gt; unit" Usage="negotiateStream.AuthenticateAsServer policy" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="policy" Type="System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="policy"><span data-ttu-id="56b53-403">用於延伸保護的 <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />。</span><span class="sxs-lookup"><span data-stu-id="56b53-403">The <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> that is used for extended protection.</span></span></param>
        <summary><span data-ttu-id="56b53-404">由伺服器呼叫以驗證用戶端與伺服器連接中的用戶端，並選擇性地驗證伺服器。</span><span class="sxs-lookup"><span data-stu-id="56b53-404">Called by servers to authenticate the client, and optionally the server, in a client-server connection.</span></span> <span data-ttu-id="56b53-405">驗證處理序使用指定的延伸保護原則。</span><span class="sxs-lookup"><span data-stu-id="56b53-405">The authentication process uses the specified extended protection policy.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56b53-406">驗證會使用伺服器的<xref:System.Net.CredentialCache.DefaultCredentials%2A>。</span><span class="sxs-lookup"><span data-stu-id="56b53-406">The authentication uses the server's <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span></span> <span data-ttu-id="56b53-407">沒有服務主體名稱 (SPN) 指定的伺服器。</span><span class="sxs-lookup"><span data-stu-id="56b53-407">No Service Principal Name (SPN) is specified for the server.</span></span> <span data-ttu-id="56b53-408">模擬層級<xref:System.Security.Principal.TokenImpersonationLevel.Identification>，和安全性層級是<xref:System.Net.Security.ProtectionLevel.EncryptAndSign>。</span><span class="sxs-lookup"><span data-stu-id="56b53-408">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, and the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span></span>  
  
 <span data-ttu-id="56b53-409">如果`policy`參數是`null`，則會使用延伸的保護原則可<xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A>設定為<xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>。</span><span class="sxs-lookup"><span data-stu-id="56b53-409">If the `policy` parameter is `null`, then an extended protection policy is used that has <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> set to <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>.</span></span>  
  
 <span data-ttu-id="56b53-410">當驗證成功時，您必須檢查<xref:System.Net.Security.NegotiateStream.IsEncrypted%2A>並<xref:System.Net.Security.NegotiateStream.IsSigned%2A>屬性，以決定哪些安全性服務由<xref:System.Net.Security.NegotiateStream>。</span><span class="sxs-lookup"><span data-stu-id="56b53-410">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="56b53-411">檢查<xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A>屬性來判斷是否發生相互驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-411">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="56b53-412">這個方法會封鎖直到作業完成為止。</span><span class="sxs-lookup"><span data-stu-id="56b53-412">This method blocks until the operation completes.</span></span> <span data-ttu-id="56b53-413">若要防止封鎖直到作業完成為止，使用其中一種<xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A>方法多載。</span><span class="sxs-lookup"><span data-stu-id="56b53-413">To prevent blocking until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="56b53-414">如果驗證失敗，您會收到<xref:System.Security.Authentication.AuthenticationException>或<xref:System.Security.Authentication.InvalidCredentialException>。</span><span class="sxs-lookup"><span data-stu-id="56b53-414">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="56b53-415">在此情況下，您可以重試一次使用不同的認證驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-415">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="56b53-416">根據延伸保護原則傳入 <paramref name="policy" /> 參數中的 <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> 和 <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> 都是 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="56b53-416">The <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> and <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> on the extended protection policy passed in the <paramref name="policy" /> parameter are both <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="56b53-417">驗證失敗。</span><span class="sxs-lookup"><span data-stu-id="56b53-417">The authentication failed.</span></span> <span data-ttu-id="56b53-418">您可以使用這個物件重試驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-418">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="56b53-419">驗證失敗。</span><span class="sxs-lookup"><span data-stu-id="56b53-419">The authentication failed.</span></span> <span data-ttu-id="56b53-420">您可以使用這個物件重試驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-420">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="56b53-421">不支援 Windows 95 和 Windows 98。</span><span class="sxs-lookup"><span data-stu-id="56b53-421">Windows 95 and Windows 98 are not supported.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="56b53-422">此物件已關閉。</span><span class="sxs-lookup"><span data-stu-id="56b53-422">This object has been closed.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="56b53-423">在不支援延伸保護的平台上，<paramref name="policy" /> 參數設定為 <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" />。</span><span class="sxs-lookup"><span data-stu-id="56b53-423">The <paramref name="policy" /> parameter was set to <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> on a platform that does not support extended protection.</span></span></exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
        <related type="Article" href="~/docs/framework/network-programming/integrated-windows-authentication-with-extended-protection.md"><span data-ttu-id="56b53-424">具有延伸保護的整合式 Windows 驗證</span><span class="sxs-lookup"><span data-stu-id="56b53-424">Integrated Windows Authentication with Extended Protection</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsServer (System.Net.NetworkCredential credential, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsServer(class System.Net.NetworkCredential credential, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsServer (credential As NetworkCredential, requiredProtectionLevel As ProtectionLevel, requiredImpersonationLevel As TokenImpersonationLevel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsServer(System::Net::NetworkCredential ^ credential, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel requiredImpersonationLevel);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsServer : System.Net.NetworkCredential * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; unit&#xA;override this.AuthenticateAsServer : System.Net.NetworkCredential * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; unit" Usage="negotiateStream.AuthenticateAsServer (credential, requiredProtectionLevel, requiredImpersonationLevel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="requiredImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="credential"><span data-ttu-id="56b53-425">建立伺服器識別所用的 <see cref="T:System.Net.NetworkCredential" />。</span><span class="sxs-lookup"><span data-stu-id="56b53-425">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the server.</span></span></param>
        <param name="requiredProtectionLevel"><span data-ttu-id="56b53-426">其中一個 <see cref="T:System.Net.Security.ProtectionLevel" /> 值，表示資料流的安全性服務。</span><span class="sxs-lookup"><span data-stu-id="56b53-426">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span></span></param>
        <param name="requiredImpersonationLevel"><span data-ttu-id="56b53-427">其中一個 <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 值，表示伺服器要如何使用用戶端的認證來存取資源。</span><span class="sxs-lookup"><span data-stu-id="56b53-427">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span></span></param>
        <summary><span data-ttu-id="56b53-428">由伺服器呼叫以驗證用戶端與伺服器連接中的用戶端，並選擇性地驗證伺服器。</span><span class="sxs-lookup"><span data-stu-id="56b53-428">Called by servers to authenticate the client, and optionally the server, in a client-server connection.</span></span> <span data-ttu-id="56b53-429">驗證處理序使用指定的伺服器認證和驗證選項。</span><span class="sxs-lookup"><span data-stu-id="56b53-429">The authentication process uses the specified server credentials and authentication options.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56b53-430">當驗證成功時，您必須檢查<xref:System.Net.Security.NegotiateStream.IsEncrypted%2A>並<xref:System.Net.Security.NegotiateStream.IsSigned%2A>屬性，以決定哪些安全性服務由<xref:System.Net.Security.NegotiateStream>。</span><span class="sxs-lookup"><span data-stu-id="56b53-430">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="56b53-431">檢查<xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A>屬性來判斷是否發生相互驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-431">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="56b53-432">這個方法會封鎖直到作業完成為止。</span><span class="sxs-lookup"><span data-stu-id="56b53-432">This method blocks until the operation completes.</span></span> <span data-ttu-id="56b53-433">若要防止封鎖直到作業完成為止，使用其中一種<xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A>方法多載。</span><span class="sxs-lookup"><span data-stu-id="56b53-433">To prevent blocking until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="56b53-434">如果驗證失敗，您會收到<xref:System.Security.Authentication.AuthenticationException>或<xref:System.Security.Authentication.InvalidCredentialException>。</span><span class="sxs-lookup"><span data-stu-id="56b53-434">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="56b53-435">在此情況下，您可以重試一次使用不同的認證驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-435">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="56b53-436"><paramref name="credential" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="56b53-436"><paramref name="credential" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="56b53-437"><paramref name="requiredImpersonationLevel" /> 必須是 <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />、<see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" /> 或 <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />。</span><span class="sxs-lookup"><span data-stu-id="56b53-437"><paramref name="requiredImpersonationLevel" /> must be <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />, <see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" />, or <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />,</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="56b53-438">驗證失敗。</span><span class="sxs-lookup"><span data-stu-id="56b53-438">The authentication failed.</span></span> <span data-ttu-id="56b53-439">您可以使用這個物件嘗試再次驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-439">You can use this object to try to r-authenticate.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="56b53-440">驗證失敗。</span><span class="sxs-lookup"><span data-stu-id="56b53-440">The authentication failed.</span></span> <span data-ttu-id="56b53-441">您可以使用這個物件重試驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-441">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="56b53-442">此物件已關閉。</span><span class="sxs-lookup"><span data-stu-id="56b53-442">This object has been closed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="56b53-443">已經進行驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-443">Authentication has already occurred.</span></span>  
  
<span data-ttu-id="56b53-444">-或-</span><span class="sxs-lookup"><span data-stu-id="56b53-444">-or-</span></span> 
<span data-ttu-id="56b53-445">這個資料流先前是用來以用戶端的身分嘗試驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-445">This stream was used previously to attempt authentication as the client.</span></span> <span data-ttu-id="56b53-446">您不能使用資料流以伺服器身分重試驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-446">You cannot use the stream to retry authentication as the server.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="56b53-447">不支援 Windows 95 和 Windows 98。</span><span class="sxs-lookup"><span data-stu-id="56b53-447">Windows 95 and Windows 98 are not supported.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="56b53-448">若要使用明確<see cref="T:System.Net.NetworkCredential" />。</span><span class="sxs-lookup"><span data-stu-id="56b53-448">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span></span> <span data-ttu-id="56b53-449">關聯的列舉型別：<see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />。</span><span class="sxs-lookup"><span data-stu-id="56b53-449">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsServer (System.Net.NetworkCredential credential, System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsServer(class System.Net.NetworkCredential credential, class System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsServer (credential As NetworkCredential, policy As ExtendedProtectionPolicy, requiredProtectionLevel As ProtectionLevel, requiredImpersonationLevel As TokenImpersonationLevel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsServer(System::Net::NetworkCredential ^ credential, System::Security::Authentication::ExtendedProtection::ExtendedProtectionPolicy ^ policy, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel requiredImpersonationLevel);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsServer : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; unit&#xA;override this.AuthenticateAsServer : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; unit" Usage="negotiateStream.AuthenticateAsServer (credential, policy, requiredProtectionLevel, requiredImpersonationLevel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="policy" Type="System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="requiredImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="credential"><span data-ttu-id="56b53-450">建立用戶端識別所用的 <see cref="T:System.Net.NetworkCredential" />。</span><span class="sxs-lookup"><span data-stu-id="56b53-450">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span></span></param>
        <param name="policy"><span data-ttu-id="56b53-451">用於延伸保護的 <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />。</span><span class="sxs-lookup"><span data-stu-id="56b53-451">The <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> that is used for extended protection.</span></span></param>
        <param name="requiredProtectionLevel"><span data-ttu-id="56b53-452">其中一個 <see cref="T:System.Net.Security.ProtectionLevel" /> 值，表示資料流的安全性服務。</span><span class="sxs-lookup"><span data-stu-id="56b53-452">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span></span></param>
        <param name="requiredImpersonationLevel"><span data-ttu-id="56b53-453">其中一個 <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 值，表示伺服器要如何使用用戶端的認證來存取資源。</span><span class="sxs-lookup"><span data-stu-id="56b53-453">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span></span></param>
        <summary><span data-ttu-id="56b53-454">由伺服器呼叫以驗證用戶端與伺服器連接中的用戶端，並選擇性地驗證伺服器。</span><span class="sxs-lookup"><span data-stu-id="56b53-454">Called by servers to authenticate the client, and optionally the server, in a client-server connection.</span></span> <span data-ttu-id="56b53-455">驗證處理序使用指定的伺服器認證、驗證選項和延伸保護原則。</span><span class="sxs-lookup"><span data-stu-id="56b53-455">The authentication process uses the specified server credentials, authentication options, and extended protection policy.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56b53-456">如果`policy`參數是`null`，則會使用延伸的保護原則可<xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A>設定為<xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>。</span><span class="sxs-lookup"><span data-stu-id="56b53-456">If the `policy` parameter is `null`, then an extended protection policy is used that has <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> set to <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>.</span></span>  
  
 <span data-ttu-id="56b53-457">當驗證成功時，您必須檢查<xref:System.Net.Security.NegotiateStream.IsEncrypted%2A>並<xref:System.Net.Security.NegotiateStream.IsSigned%2A>屬性，以決定哪些安全性服務由<xref:System.Net.Security.NegotiateStream>。</span><span class="sxs-lookup"><span data-stu-id="56b53-457">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="56b53-458">檢查<xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A>屬性來判斷是否發生相互驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-458">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="56b53-459">這個方法會封鎖直到作業完成為止。</span><span class="sxs-lookup"><span data-stu-id="56b53-459">This method blocks until the operation completes.</span></span> <span data-ttu-id="56b53-460">若要防止封鎖直到作業完成為止，使用其中一種<xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A>方法多載。</span><span class="sxs-lookup"><span data-stu-id="56b53-460">To prevent blocking until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="56b53-461">如果驗證失敗，您會收到<xref:System.Security.Authentication.AuthenticationException>或<xref:System.Security.Authentication.InvalidCredentialException>。</span><span class="sxs-lookup"><span data-stu-id="56b53-461">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="56b53-462">在此情況下，您可以重試一次使用不同的認證驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-462">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="56b53-463">根據延伸保護原則傳入 <paramref name="policy" /> 參數中的 <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> 和 <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> 都是 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="56b53-463">The <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> and <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> on the extended protection policy passed in the <paramref name="policy" /> parameter are both <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="56b53-464"><paramref name="credential" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="56b53-464"><paramref name="credential" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="56b53-465"><paramref name="requiredImpersonationLevel" /> 必須是 <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />、<see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" /> 或 <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />。</span><span class="sxs-lookup"><span data-stu-id="56b53-465"><paramref name="requiredImpersonationLevel" /> must be <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />, <see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" />, or <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />,</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="56b53-466">驗證失敗。</span><span class="sxs-lookup"><span data-stu-id="56b53-466">The authentication failed.</span></span> <span data-ttu-id="56b53-467">您可以使用這個物件嘗試再次驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-467">You can use this object to try to r-authenticate.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="56b53-468">驗證失敗。</span><span class="sxs-lookup"><span data-stu-id="56b53-468">The authentication failed.</span></span> <span data-ttu-id="56b53-469">您可以使用這個物件重試驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-469">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="56b53-470">已經進行驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-470">Authentication has already occurred.</span></span>  
  
<span data-ttu-id="56b53-471">-或-</span><span class="sxs-lookup"><span data-stu-id="56b53-471">-or-</span></span> 
<span data-ttu-id="56b53-472">這個資料流先前是用來以用戶端的身分嘗試驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-472">This stream was used previously to attempt authentication as the client.</span></span> <span data-ttu-id="56b53-473">您不能使用資料流以伺服器身分重試驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-473">You cannot use the stream to retry authentication as the server.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="56b53-474">不支援 Windows 95 和 Windows 98。</span><span class="sxs-lookup"><span data-stu-id="56b53-474">Windows 95 and Windows 98 are not supported.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="56b53-475">此物件已關閉。</span><span class="sxs-lookup"><span data-stu-id="56b53-475">This object has been closed.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="56b53-476">在不支援延伸保護的平台上，<paramref name="policy" /> 參數設定為 <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" />。</span><span class="sxs-lookup"><span data-stu-id="56b53-476">The <paramref name="policy" /> parameter was set to <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> on a platform that does not support extended protection.</span></span></exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
        <related type="Article" href="~/docs/framework/network-programming/integrated-windows-authentication-with-extended-protection.md"><span data-ttu-id="56b53-477">具有延伸保護的整合式 Windows 驗證</span><span class="sxs-lookup"><span data-stu-id="56b53-477">Integrated Windows Authentication with Extended Protection</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="AuthenticateAsServerAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="56b53-478">以非同步作業方式處理驗證用戶端與伺服器連接的伺服器端。</span><span class="sxs-lookup"><span data-stu-id="56b53-478">Handles the server side of an authentication for a client-server connection as an asynchronous operation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AuthenticateAsServerAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsServerAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsServerAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsServerAsync () As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsServerAsync();" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsServerAsync : unit -&gt; System.Threading.Tasks.Task&#xA;override this.AuthenticateAsServerAsync : unit -&gt; System.Threading.Tasks.Task" Usage="negotiateStream.AuthenticateAsServerAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="56b53-479">由伺服器呼叫做為非同步作業，以驗證用戶端與伺服器連接中的用戶端，並選擇性地驗證伺服器。</span><span class="sxs-lookup"><span data-stu-id="56b53-479">Called by servers to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="56b53-480">工作物件，表示非同步作業。</span><span class="sxs-lookup"><span data-stu-id="56b53-480">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56b53-481">驗證會使用伺服器的<xref:System.Net.CredentialCache.DefaultCredentials%2A>。</span><span class="sxs-lookup"><span data-stu-id="56b53-481">The authentication uses the server's <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span></span> <span data-ttu-id="56b53-482">沒有服務主體名稱 (SPN) 指定的伺服器。</span><span class="sxs-lookup"><span data-stu-id="56b53-482">No Service Principal Name (SPN) is specified for the server.</span></span> <span data-ttu-id="56b53-483">模擬層級<xref:System.Security.Principal.TokenImpersonationLevel.Identification>，和安全性層級是<xref:System.Net.Security.ProtectionLevel.EncryptAndSign>。</span><span class="sxs-lookup"><span data-stu-id="56b53-483">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, and the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span></span>  
  
 <span data-ttu-id="56b53-484">當驗證成功時，您必須檢查<xref:System.Net.Security.NegotiateStream.IsEncrypted%2A>並<xref:System.Net.Security.NegotiateStream.IsSigned%2A>屬性，以決定哪些安全性服務由<xref:System.Net.Security.NegotiateStream>。</span><span class="sxs-lookup"><span data-stu-id="56b53-484">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="56b53-485">檢查<xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A>屬性來判斷是否發生相互驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-485">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="56b53-486">如果驗證失敗，您會收到<xref:System.Security.Authentication.AuthenticationException>或<xref:System.Security.Authentication.InvalidCredentialException>。</span><span class="sxs-lookup"><span data-stu-id="56b53-486">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="56b53-487">在此情況下，您可以重試一次使用不同的認證驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-487">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="56b53-488">驗證失敗。</span><span class="sxs-lookup"><span data-stu-id="56b53-488">The authentication failed.</span></span> <span data-ttu-id="56b53-489">您可以使用這個物件重試驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-489">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="56b53-490">驗證失敗。</span><span class="sxs-lookup"><span data-stu-id="56b53-490">The authentication failed.</span></span> <span data-ttu-id="56b53-491">您可以使用這個物件重試驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-491">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="56b53-492">此物件已關閉。</span><span class="sxs-lookup"><span data-stu-id="56b53-492">This object has been closed.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="56b53-493">不支援 Windows 95 和 Windows 98。</span><span class="sxs-lookup"><span data-stu-id="56b53-493">Windows 95 and Windows 98 are not supported.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="56b53-494">若要使用明確<see cref="T:System.Net.NetworkCredential" />。</span><span class="sxs-lookup"><span data-stu-id="56b53-494">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span></span> <span data-ttu-id="56b53-495">關聯的列舉型別：<see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />。</span><span class="sxs-lookup"><span data-stu-id="56b53-495">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsServerAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsServerAsync (System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsServerAsync(class System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsServerAsync (policy As ExtendedProtectionPolicy) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsServerAsync(System::Security::Authentication::ExtendedProtection::ExtendedProtectionPolicy ^ policy);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsServerAsync : System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy -&gt; System.Threading.Tasks.Task&#xA;override this.AuthenticateAsServerAsync : System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy -&gt; System.Threading.Tasks.Task" Usage="negotiateStream.AuthenticateAsServerAsync policy" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="policy" Type="System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="policy"><span data-ttu-id="56b53-496">用於延伸保護的 <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />。</span><span class="sxs-lookup"><span data-stu-id="56b53-496">The <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> that is used for extended protection.</span></span></param>
        <summary><span data-ttu-id="56b53-497">由伺服器呼叫做為非同步作業，以驗證用戶端與伺服器連接中的用戶端，並選擇性地驗證伺服器。</span><span class="sxs-lookup"><span data-stu-id="56b53-497">Called by servers to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span></span> <span data-ttu-id="56b53-498">驗證處理序使用指定的延伸保護原則。</span><span class="sxs-lookup"><span data-stu-id="56b53-498">The authentication process uses the specified extended protection policy.</span></span></summary>
        <returns><span data-ttu-id="56b53-499">工作物件，表示非同步作業。</span><span class="sxs-lookup"><span data-stu-id="56b53-499">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56b53-500">驗證會使用伺服器的<xref:System.Net.CredentialCache.DefaultCredentials%2A>。</span><span class="sxs-lookup"><span data-stu-id="56b53-500">The authentication uses the server's <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span></span> <span data-ttu-id="56b53-501">沒有服務主體名稱 (SPN) 指定的伺服器。</span><span class="sxs-lookup"><span data-stu-id="56b53-501">No Service Principal Name (SPN) is specified for the server.</span></span> <span data-ttu-id="56b53-502">模擬層級<xref:System.Security.Principal.TokenImpersonationLevel.Identification>，和安全性層級是<xref:System.Net.Security.ProtectionLevel.EncryptAndSign>。</span><span class="sxs-lookup"><span data-stu-id="56b53-502">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, and the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span></span>  
  
 <span data-ttu-id="56b53-503">如果`policy`參數是`null`，則會使用延伸的保護原則可<xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A>設定為<xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>。</span><span class="sxs-lookup"><span data-stu-id="56b53-503">If the `policy` parameter is `null`, then an extended protection policy is used that has <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> set to <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>.</span></span>  
  
 <span data-ttu-id="56b53-504">當驗證成功時，您必須檢查<xref:System.Net.Security.NegotiateStream.IsEncrypted%2A>並<xref:System.Net.Security.NegotiateStream.IsSigned%2A>屬性，以決定哪些安全性服務由<xref:System.Net.Security.NegotiateStream>。</span><span class="sxs-lookup"><span data-stu-id="56b53-504">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="56b53-505">檢查<xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A>屬性來判斷是否發生相互驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-505">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="56b53-506">如果驗證失敗，您會收到<xref:System.Security.Authentication.AuthenticationException>或<xref:System.Security.Authentication.InvalidCredentialException>。</span><span class="sxs-lookup"><span data-stu-id="56b53-506">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="56b53-507">在此情況下，您可以重試一次使用不同的認證驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-507">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="56b53-508">根據延伸保護原則傳入 <paramref name="policy" /> 參數中的 <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> 和 <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> 都是 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="56b53-508">The <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> and <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> on the extended protection policy passed in the <paramref name="policy" /> parameter are both <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="56b53-509">驗證失敗。</span><span class="sxs-lookup"><span data-stu-id="56b53-509">The authentication failed.</span></span> <span data-ttu-id="56b53-510">您可以使用這個物件重試驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-510">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="56b53-511">驗證失敗。</span><span class="sxs-lookup"><span data-stu-id="56b53-511">The authentication failed.</span></span> <span data-ttu-id="56b53-512">您可以使用這個物件重試驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-512">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="56b53-513">不支援 Windows 95 和 Windows 98。</span><span class="sxs-lookup"><span data-stu-id="56b53-513">Windows 95 and Windows 98 are not supported.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="56b53-514">此物件已關閉。</span><span class="sxs-lookup"><span data-stu-id="56b53-514">This object has been closed.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="56b53-515">在不支援延伸保護的平台上，<paramref name="policy" /> 參數設定為 <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" />。</span><span class="sxs-lookup"><span data-stu-id="56b53-515">The <paramref name="policy" /> parameter was set to <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> on a platform that does not support extended protection.</span></span></exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
        <related type="Article" href="~/docs/framework/network-programming/integrated-windows-authentication-with-extended-protection.md"><span data-ttu-id="56b53-516">具有延伸保護的整合式 Windows 驗證</span><span class="sxs-lookup"><span data-stu-id="56b53-516">Integrated Windows Authentication with Extended Protection</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsServerAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsServerAsync (System.Net.NetworkCredential credential, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsServerAsync(class System.Net.NetworkCredential credential, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsServerAsync (credential As NetworkCredential, requiredProtectionLevel As ProtectionLevel, requiredImpersonationLevel As TokenImpersonationLevel) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsServerAsync(System::Net::NetworkCredential ^ credential, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel requiredImpersonationLevel);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsServerAsync : System.Net.NetworkCredential * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; System.Threading.Tasks.Task&#xA;override this.AuthenticateAsServerAsync : System.Net.NetworkCredential * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; System.Threading.Tasks.Task" Usage="negotiateStream.AuthenticateAsServerAsync (credential, requiredProtectionLevel, requiredImpersonationLevel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="requiredImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" Index="2" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="credential"><span data-ttu-id="56b53-517">建立伺服器識別所用的 <see cref="T:System.Net.NetworkCredential" />。</span><span class="sxs-lookup"><span data-stu-id="56b53-517">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the server.</span></span></param>
        <param name="requiredProtectionLevel"><span data-ttu-id="56b53-518">其中一個 <see cref="T:System.Net.Security.ProtectionLevel" /> 值，表示資料流的安全性服務。</span><span class="sxs-lookup"><span data-stu-id="56b53-518">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span></span></param>
        <param name="requiredImpersonationLevel"><span data-ttu-id="56b53-519">其中一個 <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 值，表示伺服器要如何使用用戶端的認證來存取資源。</span><span class="sxs-lookup"><span data-stu-id="56b53-519">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span></span></param>
        <summary><span data-ttu-id="56b53-520">由伺服器呼叫做為非同步作業，以驗證用戶端與伺服器連接中的用戶端，並選擇性地驗證伺服器。</span><span class="sxs-lookup"><span data-stu-id="56b53-520">Called by servers to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span></span> <span data-ttu-id="56b53-521">驗證處理序使用指定的伺服器認證和驗證選項。</span><span class="sxs-lookup"><span data-stu-id="56b53-521">The authentication process uses the specified server credentials and authentication options.</span></span></summary>
        <returns><span data-ttu-id="56b53-522">工作物件，表示非同步作業。</span><span class="sxs-lookup"><span data-stu-id="56b53-522">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56b53-523">當驗證成功時，您必須檢查<xref:System.Net.Security.NegotiateStream.IsEncrypted%2A>並<xref:System.Net.Security.NegotiateStream.IsSigned%2A>屬性，以決定哪些安全性服務由<xref:System.Net.Security.NegotiateStream>。</span><span class="sxs-lookup"><span data-stu-id="56b53-523">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="56b53-524">檢查<xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A>屬性來判斷是否發生相互驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-524">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="56b53-525">如果驗證失敗，您會收到<xref:System.Security.Authentication.AuthenticationException>或<xref:System.Security.Authentication.InvalidCredentialException>。</span><span class="sxs-lookup"><span data-stu-id="56b53-525">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="56b53-526">在此情況下，您可以重試一次使用不同的認證驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-526">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="56b53-527"><paramref name="credential" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="56b53-527"><paramref name="credential" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="56b53-528"><paramref name="requiredImpersonationLevel" /> 必須是 <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />、<see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" /> 或 <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />。</span><span class="sxs-lookup"><span data-stu-id="56b53-528"><paramref name="requiredImpersonationLevel" /> must be <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />, <see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" />, or <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />,</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="56b53-529">驗證失敗。</span><span class="sxs-lookup"><span data-stu-id="56b53-529">The authentication failed.</span></span> <span data-ttu-id="56b53-530">您可以使用這個物件嘗試再次驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-530">You can use this object to try to r-authenticate.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="56b53-531">驗證失敗。</span><span class="sxs-lookup"><span data-stu-id="56b53-531">The authentication failed.</span></span> <span data-ttu-id="56b53-532">您可以使用這個物件重試驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-532">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="56b53-533">此物件已關閉。</span><span class="sxs-lookup"><span data-stu-id="56b53-533">This object has been closed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="56b53-534">已經進行驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-534">Authentication has already occurred.</span></span>  
  
<span data-ttu-id="56b53-535">-或-</span><span class="sxs-lookup"><span data-stu-id="56b53-535">-or-</span></span> 
<span data-ttu-id="56b53-536">這個資料流先前是用來以用戶端的身分嘗試驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-536">This stream was used previously to attempt authentication as the client.</span></span> <span data-ttu-id="56b53-537">您不能使用資料流以伺服器身分重試驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-537">You cannot use the stream to retry authentication as the server.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="56b53-538">不支援 Windows 95 和 Windows 98。</span><span class="sxs-lookup"><span data-stu-id="56b53-538">Windows 95 and Windows 98 are not supported.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="56b53-539">若要使用明確<see cref="T:System.Net.NetworkCredential" />。</span><span class="sxs-lookup"><span data-stu-id="56b53-539">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span></span> <span data-ttu-id="56b53-540">關聯的列舉型別：<see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />。</span><span class="sxs-lookup"><span data-stu-id="56b53-540">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsServerAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsServerAsync (System.Net.NetworkCredential credential, System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsServerAsync(class System.Net.NetworkCredential credential, class System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsServerAsync (credential As NetworkCredential, policy As ExtendedProtectionPolicy, requiredProtectionLevel As ProtectionLevel, requiredImpersonationLevel As TokenImpersonationLevel) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsServerAsync(System::Net::NetworkCredential ^ credential, System::Security::Authentication::ExtendedProtection::ExtendedProtectionPolicy ^ policy, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel requiredImpersonationLevel);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsServerAsync : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; System.Threading.Tasks.Task&#xA;override this.AuthenticateAsServerAsync : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; System.Threading.Tasks.Task" Usage="negotiateStream.AuthenticateAsServerAsync (credential, policy, requiredProtectionLevel, requiredImpersonationLevel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="policy" Type="System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" Index="2" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="requiredImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" Index="3" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="credential"><span data-ttu-id="56b53-541">建立用戶端識別所用的 <see cref="T:System.Net.NetworkCredential" />。</span><span class="sxs-lookup"><span data-stu-id="56b53-541">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span></span></param>
        <param name="policy"><span data-ttu-id="56b53-542">用於延伸保護的 <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />。</span><span class="sxs-lookup"><span data-stu-id="56b53-542">The <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> that is used for extended protection.</span></span></param>
        <param name="requiredProtectionLevel"><span data-ttu-id="56b53-543">其中一個 <see cref="T:System.Net.Security.ProtectionLevel" /> 值，表示資料流的安全性服務。</span><span class="sxs-lookup"><span data-stu-id="56b53-543">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span></span></param>
        <param name="requiredImpersonationLevel"><span data-ttu-id="56b53-544">其中一個 <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 值，表示伺服器要如何使用用戶端的認證來存取資源。</span><span class="sxs-lookup"><span data-stu-id="56b53-544">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span></span></param>
        <summary><span data-ttu-id="56b53-545">由伺服器呼叫做為非同步作業，以驗證用戶端與伺服器連接中的用戶端，並選擇性地驗證伺服器。</span><span class="sxs-lookup"><span data-stu-id="56b53-545">Called by servers to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span></span> <span data-ttu-id="56b53-546">驗證處理序使用指定的伺服器認證、驗證選項和延伸保護原則。</span><span class="sxs-lookup"><span data-stu-id="56b53-546">The authentication process uses the specified server credentials, authentication options, and extended protection policy.</span></span></summary>
        <returns><span data-ttu-id="56b53-547">工作物件，表示非同步作業。</span><span class="sxs-lookup"><span data-stu-id="56b53-547">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56b53-548">如果`policy`參數是`null`，則會使用延伸的保護原則可<xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A>設定為<xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>。</span><span class="sxs-lookup"><span data-stu-id="56b53-548">If the `policy` parameter is `null`, then an extended protection policy is used that has <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> set to <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>.</span></span>  
  
 <span data-ttu-id="56b53-549">當驗證成功時，您必須檢查<xref:System.Net.Security.NegotiateStream.IsEncrypted%2A>並<xref:System.Net.Security.NegotiateStream.IsSigned%2A>屬性，以決定哪些安全性服務由<xref:System.Net.Security.NegotiateStream>。</span><span class="sxs-lookup"><span data-stu-id="56b53-549">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="56b53-550">檢查<xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A>屬性來判斷是否發生相互驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-550">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="56b53-551">如果驗證失敗，您會收到<xref:System.Security.Authentication.AuthenticationException>或<xref:System.Security.Authentication.InvalidCredentialException>。</span><span class="sxs-lookup"><span data-stu-id="56b53-551">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="56b53-552">在此情況下，您可以重試一次使用不同的認證驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-552">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="56b53-553">根據延伸保護原則傳入 <paramref name="policy" /> 參數中的 <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> 和 <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> 都是 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="56b53-553">The <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> and <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> on the extended protection policy passed in the <paramref name="policy" /> parameter are both <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="56b53-554"><paramref name="credential" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="56b53-554"><paramref name="credential" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="56b53-555"><paramref name="requiredImpersonationLevel" /> 必須是 <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />、<see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" /> 或 <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />。</span><span class="sxs-lookup"><span data-stu-id="56b53-555"><paramref name="requiredImpersonationLevel" /> must be <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />, <see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" />, or <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />,</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="56b53-556">驗證失敗。</span><span class="sxs-lookup"><span data-stu-id="56b53-556">The authentication failed.</span></span> <span data-ttu-id="56b53-557">您可以使用這個物件嘗試再次驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-557">You can use this object to try to r-authenticate.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="56b53-558">驗證失敗。</span><span class="sxs-lookup"><span data-stu-id="56b53-558">The authentication failed.</span></span> <span data-ttu-id="56b53-559">您可以使用這個物件重試驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-559">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="56b53-560">已經進行驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-560">Authentication has already occurred.</span></span>  
  
<span data-ttu-id="56b53-561">-或-</span><span class="sxs-lookup"><span data-stu-id="56b53-561">-or-</span></span> 
<span data-ttu-id="56b53-562">這個資料流先前是用來以用戶端的身分嘗試驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-562">This stream was used previously to attempt authentication as the client.</span></span> <span data-ttu-id="56b53-563">您不能使用資料流以伺服器身分重試驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-563">You cannot use the stream to retry authentication as the server.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="56b53-564">不支援 Windows 95 和 Windows 98。</span><span class="sxs-lookup"><span data-stu-id="56b53-564">Windows 95 and Windows 98 are not supported.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="56b53-565">此物件已關閉。</span><span class="sxs-lookup"><span data-stu-id="56b53-565">This object has been closed.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="56b53-566">在不支援延伸保護的平台上，<paramref name="policy" /> 參數設定為 <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" />。</span><span class="sxs-lookup"><span data-stu-id="56b53-566">The <paramref name="policy" /> parameter was set to <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> on a platform that does not support extended protection.</span></span></exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
        <related type="Article" href="~/docs/framework/network-programming/integrated-windows-authentication-with-extended-protection.md"><span data-ttu-id="56b53-567">具有延伸保護的整合式 Windows 驗證</span><span class="sxs-lookup"><span data-stu-id="56b53-567">Integrated Windows Authentication with Extended Protection</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginAuthenticateAsClient">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="56b53-568">開始非同步作業以驗證用戶端與伺服器連接中的用戶端。</span><span class="sxs-lookup"><span data-stu-id="56b53-568">Begins an asynchronous operation to authenticate the client side of a client-server connection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56b53-569">在進行驗證時，此方法的多載不會封鎖。</span><span class="sxs-lookup"><span data-stu-id="56b53-569">The overloads of this method do not block while authentication is in progress.</span></span> <span data-ttu-id="56b53-570">若要封鎖等候要完成驗證時，使用其中一種<xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="56b53-570">To block while waiting for the authentication to complete, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginAuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsClient (AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsClient(class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsClient(AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="abstract member BeginAuthenticateAsClient : AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAuthenticateAsClient : AsyncCallback * obj -&gt; IAsyncResult" Usage="negotiateStream.BeginAuthenticateAsClient (asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="asyncState" Type="System.Object" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="asyncCallback"><span data-ttu-id="56b53-571"><see cref="T:System.AsyncCallback" /> 委派，會於驗證完成時參考要叫用的方法。</span><span class="sxs-lookup"><span data-stu-id="56b53-571">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span></span></param>
        <param name="asyncState"><span data-ttu-id="56b53-572">包含作業資訊的使用者定義物件。</span><span class="sxs-lookup"><span data-stu-id="56b53-572">A user-defined object containing information about the operation.</span></span> <span data-ttu-id="56b53-573">作業完成時會將這個物件傳遞給 <paramref name="asyncCallback" /> 委派。</span><span class="sxs-lookup"><span data-stu-id="56b53-573">This object is passed to the <paramref name="asyncCallback" /> delegate when the operation completes.</span></span></param>
        <summary><span data-ttu-id="56b53-574">由用戶端呼叫以開始非同步作業，以便驗證用戶端與伺服器連接中的用戶端，並選擇性地驗證伺服器。</span><span class="sxs-lookup"><span data-stu-id="56b53-574">Called by clients to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span></span> <span data-ttu-id="56b53-575">這個方法不會封鎖。</span><span class="sxs-lookup"><span data-stu-id="56b53-575">This method does not block.</span></span></summary>
        <returns><span data-ttu-id="56b53-576"><see cref="T:System.IAsyncResult" /> 物件，指出非同步作業的狀態。</span><span class="sxs-lookup"><span data-stu-id="56b53-576">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56b53-577">驗證會使用用戶端的<xref:System.Net.CredentialCache.DefaultCredentials%2A>。</span><span class="sxs-lookup"><span data-stu-id="56b53-577">The authentication uses the client's <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span></span> <span data-ttu-id="56b53-578">沒有服務主體名稱 (SPN) 指定的伺服器。</span><span class="sxs-lookup"><span data-stu-id="56b53-578">No Service Principal Name (SPN) is specified for the server.</span></span> <span data-ttu-id="56b53-579">模擬層級<xref:System.Security.Principal.TokenImpersonationLevel.Identification>，和安全性層級是<xref:System.Net.Security.ProtectionLevel.EncryptAndSign>。</span><span class="sxs-lookup"><span data-stu-id="56b53-579">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, and the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span></span> <span data-ttu-id="56b53-580"><xref:System.Net.Security.NegotiateStream>類別將會建構用於相互驗證的 SPN。</span><span class="sxs-lookup"><span data-stu-id="56b53-580">The <xref:System.Net.Security.NegotiateStream> class will construct the SPN used for mutual authentication.</span></span>  
  
 <span data-ttu-id="56b53-581">這個方法是非同步的而且不會封鎖在作業完成時。</span><span class="sxs-lookup"><span data-stu-id="56b53-581">This method is asynchronous and does not block while the operation completes.</span></span> <span data-ttu-id="56b53-582">若要封鎖直到作業完成為止，使用其中一種<xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>方法多載。</span><span class="sxs-lookup"><span data-stu-id="56b53-582">To block until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> method overloads.</span></span>  
  
 <span data-ttu-id="56b53-583">非同步驗證作業必須完成呼叫<xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="56b53-583">The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A> method.</span></span> <span data-ttu-id="56b53-584">一般而言，會叫用方法`asyncCallback`委派。</span><span class="sxs-lookup"><span data-stu-id="56b53-584">Typically, the method is invoked by the `asyncCallback` delegate.</span></span> <span data-ttu-id="56b53-585">如需使用非同步程式設計模型的詳細資訊，請參閱[Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="56b53-585">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="56b53-586">如果驗證失敗，您會收到<xref:System.Security.Authentication.AuthenticationException>或<xref:System.Security.Authentication.InvalidCredentialException>。</span><span class="sxs-lookup"><span data-stu-id="56b53-586">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="56b53-587">在此情況下，您可以重試一次使用不同的認證驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-587">In this case, you can retry the authentication with a different credential.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="56b53-588">下列程式碼範例示範如何呼叫這個方法，以開始非同步的驗證用戶端。</span><span class="sxs-lookup"><span data-stu-id="56b53-588">The following code example demonstrates calling this method to begin an asynchronous authentication for the client.</span></span>  
  
 [!code-cpp[NclNegoAsyncClient#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoasyncClient/CPP/NclNegoasyncClient.cpp#2)]
 [!code-csharp[NclNegoAsyncClient#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoasyncClient/CS/client.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="56b53-589">驗證失敗。</span><span class="sxs-lookup"><span data-stu-id="56b53-589">The authentication failed.</span></span> <span data-ttu-id="56b53-590">您可以使用這個物件重試驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-590">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="56b53-591">驗證失敗。</span><span class="sxs-lookup"><span data-stu-id="56b53-591">The authentication failed.</span></span> <span data-ttu-id="56b53-592">您可以使用這個物件重試驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-592">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="56b53-593">此物件已關閉。</span><span class="sxs-lookup"><span data-stu-id="56b53-593">This object has been closed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="56b53-594">已經進行驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-594">Authentication has already occurred.</span></span>  
  
<span data-ttu-id="56b53-595">-或-</span><span class="sxs-lookup"><span data-stu-id="56b53-595">-or-</span></span> 
<span data-ttu-id="56b53-596">這個資料流先前是用來以伺服器的身分嘗試驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-596">This stream was used previously to attempt authentication as the server.</span></span> <span data-ttu-id="56b53-597">您不能使用資料流以用戶端身分重試驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-597">You cannot use the stream to retry authentication as the client.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="56b53-598">若要使用明確<see cref="T:System.Net.NetworkCredential" />。</span><span class="sxs-lookup"><span data-stu-id="56b53-598">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span></span> <span data-ttu-id="56b53-599">關聯的列舉型別：<see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />。</span><span class="sxs-lookup"><span data-stu-id="56b53-599">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="BeginAuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsClient (System.Net.NetworkCredential credential, string targetName, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsClient(class System.Net.NetworkCredential credential, string targetName, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsClient(System::Net::NetworkCredential ^ credential, System::String ^ targetName, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="abstract member BeginAuthenticateAsClient : System.Net.NetworkCredential * string * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAuthenticateAsClient : System.Net.NetworkCredential * string * AsyncCallback * obj -&gt; IAsyncResult" Usage="negotiateStream.BeginAuthenticateAsClient (credential, targetName, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="targetName" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="asyncState" Type="System.Object" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="credential"><span data-ttu-id="56b53-600">建立用戶端識別所用的 <see cref="T:System.Net.NetworkCredential" />。</span><span class="sxs-lookup"><span data-stu-id="56b53-600">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span></span></param>
        <param name="targetName"><span data-ttu-id="56b53-601">服務主要名稱 (SPN)，用來唯一識別要驗證的伺服器。</span><span class="sxs-lookup"><span data-stu-id="56b53-601">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span></span></param>
        <param name="asyncCallback"><span data-ttu-id="56b53-602"><see cref="T:System.AsyncCallback" /> 委派，會於驗證完成時參考要叫用的方法。</span><span class="sxs-lookup"><span data-stu-id="56b53-602">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span></span></param>
        <param name="asyncState"><span data-ttu-id="56b53-603">包含寫入作業資訊的使用者定義物件。</span><span class="sxs-lookup"><span data-stu-id="56b53-603">A user-defined object containing information about the write operation.</span></span> <span data-ttu-id="56b53-604">作業完成時會將這個物件傳遞給 <paramref name="asyncCallback" /> 委派。</span><span class="sxs-lookup"><span data-stu-id="56b53-604">This object is passed to the <paramref name="asyncCallback" /> delegate when the operation completes.</span></span></param>
        <summary><span data-ttu-id="56b53-605">由用戶端呼叫以開始非同步作業，以便驗證用戶端與伺服器連接中的用戶端，並選擇性地驗證伺服器。</span><span class="sxs-lookup"><span data-stu-id="56b53-605">Called by clients to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span></span> <span data-ttu-id="56b53-606">驗證處理序使用指定的認證。</span><span class="sxs-lookup"><span data-stu-id="56b53-606">The authentication process uses the specified credentials.</span></span> <span data-ttu-id="56b53-607">這個方法不會封鎖。</span><span class="sxs-lookup"><span data-stu-id="56b53-607">This method does not block.</span></span></summary>
        <returns><span data-ttu-id="56b53-608"><see cref="T:System.IAsyncResult" /> 物件，指出非同步作業的狀態。</span><span class="sxs-lookup"><span data-stu-id="56b53-608">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56b53-609">這個方法是非同步的而且不會封鎖在作業完成時。</span><span class="sxs-lookup"><span data-stu-id="56b53-609">This method is asynchronous and does not block while the operation completes.</span></span> <span data-ttu-id="56b53-610">若要封鎖直到作業完成為止，使用其中一種<xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>方法多載。</span><span class="sxs-lookup"><span data-stu-id="56b53-610">To block until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> method overloads.</span></span>  
  
 <span data-ttu-id="56b53-611">非同步驗證作業必須完成呼叫<xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="56b53-611">The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A> method.</span></span> <span data-ttu-id="56b53-612">一般而言，會叫用方法`asyncCallback`委派。</span><span class="sxs-lookup"><span data-stu-id="56b53-612">Typically, the method is invoked by the `asyncCallback` delegate.</span></span> <span data-ttu-id="56b53-613">如需使用非同步程式設計模型的詳細資訊，請參閱[Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="56b53-613">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="56b53-614">如果驗證失敗，您會收到<xref:System.Security.Authentication.AuthenticationException>或<xref:System.Security.Authentication.InvalidCredentialException>。</span><span class="sxs-lookup"><span data-stu-id="56b53-614">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="56b53-615">在此情況下，您可以重試一次使用不同的認證驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-615">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="56b53-616"><paramref name="credential" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="56b53-616"><paramref name="credential" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="56b53-617">-或-</span><span class="sxs-lookup"><span data-stu-id="56b53-617">-or-</span></span> 
 <span data-ttu-id="56b53-618"><paramref name="targetName" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="56b53-618"><paramref name="targetName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="56b53-619">驗證失敗。</span><span class="sxs-lookup"><span data-stu-id="56b53-619">The authentication failed.</span></span> <span data-ttu-id="56b53-620">您可以使用這個物件重試驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-620">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="56b53-621">驗證失敗。</span><span class="sxs-lookup"><span data-stu-id="56b53-621">The authentication failed.</span></span> <span data-ttu-id="56b53-622">您可以使用這個物件重試驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-622">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="56b53-623">此物件已關閉。</span><span class="sxs-lookup"><span data-stu-id="56b53-623">This object has been closed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="56b53-624">已經進行驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-624">Authentication has already occurred.</span></span>  
  
<span data-ttu-id="56b53-625">-或-</span><span class="sxs-lookup"><span data-stu-id="56b53-625">-or-</span></span> 
<span data-ttu-id="56b53-626">這個資料流先前是用來以伺服器的身分嘗試驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-626">This stream was used previously to attempt authentication as the server.</span></span> <span data-ttu-id="56b53-627">您不能使用資料流以用戶端身分重試驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-627">You cannot use the stream to retry authentication as the client.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="56b53-628">若要使用明確<see cref="T:System.Net.NetworkCredential" />。</span><span class="sxs-lookup"><span data-stu-id="56b53-628">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span></span> <span data-ttu-id="56b53-629">關聯的列舉型別：<see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />。</span><span class="sxs-lookup"><span data-stu-id="56b53-629">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="BeginAuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsClient (System.Net.NetworkCredential credential, System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsClient(class System.Net.NetworkCredential credential, class System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsClient(System::Net::NetworkCredential ^ credential, System::Security::Authentication::ExtendedProtection::ChannelBinding ^ binding, System::String ^ targetName, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="abstract member BeginAuthenticateAsClient : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ChannelBinding * string * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAuthenticateAsClient : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ChannelBinding * string * AsyncCallback * obj -&gt; IAsyncResult" Usage="negotiateStream.BeginAuthenticateAsClient (credential, binding, targetName, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="binding" Type="System.Security.Authentication.ExtendedProtection.ChannelBinding" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="targetName" Type="System.String" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="asyncState" Type="System.Object" Index="4" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="credential"><span data-ttu-id="56b53-630">建立用戶端識別所用的 <see cref="T:System.Net.NetworkCredential" />。</span><span class="sxs-lookup"><span data-stu-id="56b53-630">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span></span></param>
        <param name="binding"><span data-ttu-id="56b53-631">用於延伸保護的 <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />。</span><span class="sxs-lookup"><span data-stu-id="56b53-631">The <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> that is used for extended protection.</span></span></param>
        <param name="targetName"><span data-ttu-id="56b53-632">服務主要名稱 (SPN)，用來唯一識別要驗證的伺服器。</span><span class="sxs-lookup"><span data-stu-id="56b53-632">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span></span></param>
        <param name="asyncCallback"><span data-ttu-id="56b53-633"><see cref="T:System.AsyncCallback" /> 委派，會於驗證完成時參考要叫用的方法。</span><span class="sxs-lookup"><span data-stu-id="56b53-633">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span></span></param>
        <param name="asyncState"><span data-ttu-id="56b53-634">包含寫入作業資訊的使用者定義物件。</span><span class="sxs-lookup"><span data-stu-id="56b53-634">A user-defined object containing information about the write operation.</span></span> <span data-ttu-id="56b53-635">作業完成時會將這個物件傳遞給 <paramref name="asyncCallback" /> 委派。</span><span class="sxs-lookup"><span data-stu-id="56b53-635">This object is passed to the <paramref name="asyncCallback" /> delegate when the operation completes.</span></span></param>
        <summary><span data-ttu-id="56b53-636">由用戶端呼叫以開始非同步作業，以便驗證用戶端與伺服器連接中的用戶端，並選擇性地驗證伺服器。</span><span class="sxs-lookup"><span data-stu-id="56b53-636">Called by clients to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span></span> <span data-ttu-id="56b53-637">驗證處理序使用指定的認證和通道繫結。</span><span class="sxs-lookup"><span data-stu-id="56b53-637">The authentication process uses the specified credentials and channel binding.</span></span> <span data-ttu-id="56b53-638">這個方法不會封鎖。</span><span class="sxs-lookup"><span data-stu-id="56b53-638">This method does not block.</span></span></summary>
        <returns><span data-ttu-id="56b53-639"><see cref="T:System.IAsyncResult" /> 物件，指出非同步作業的狀態。</span><span class="sxs-lookup"><span data-stu-id="56b53-639">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56b53-640">這個方法是非同步的而且不會封鎖在作業完成時。</span><span class="sxs-lookup"><span data-stu-id="56b53-640">This method is asynchronous and does not block while the operation completes.</span></span> <span data-ttu-id="56b53-641">若要封鎖直到作業完成為止，使用其中一種<xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>方法多載。</span><span class="sxs-lookup"><span data-stu-id="56b53-641">To block until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> method overloads.</span></span>  
  
 <span data-ttu-id="56b53-642">非同步驗證作業必須完成呼叫<xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="56b53-642">The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A> method.</span></span> <span data-ttu-id="56b53-643">一般而言，會叫用方法`asyncCallback`委派。</span><span class="sxs-lookup"><span data-stu-id="56b53-643">Typically, the method is invoked by the `asyncCallback` delegate.</span></span> <span data-ttu-id="56b53-644">如需使用非同步程式設計模型的詳細資訊，請參閱[Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="56b53-644">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="56b53-645">如果驗證失敗，您會收到<xref:System.Security.Authentication.AuthenticationException>或<xref:System.Security.Authentication.InvalidCredentialException>。</span><span class="sxs-lookup"><span data-stu-id="56b53-645">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="56b53-646">在此情況下，您可以重試一次使用不同的認證驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-646">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="56b53-647"><paramref name="credential" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="56b53-647"><paramref name="credential" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="56b53-648">-或-</span><span class="sxs-lookup"><span data-stu-id="56b53-648">-or-</span></span> 
 <span data-ttu-id="56b53-649"><paramref name="targetName" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="56b53-649"><paramref name="targetName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="56b53-650">驗證失敗。</span><span class="sxs-lookup"><span data-stu-id="56b53-650">The authentication failed.</span></span> <span data-ttu-id="56b53-651">您可以使用這個物件重試驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-651">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="56b53-652">驗證失敗。</span><span class="sxs-lookup"><span data-stu-id="56b53-652">The authentication failed.</span></span> <span data-ttu-id="56b53-653">您可以使用這個物件重試驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-653">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="56b53-654">已經進行驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-654">Authentication has already occurred.</span></span>  
  
<span data-ttu-id="56b53-655">-或-</span><span class="sxs-lookup"><span data-stu-id="56b53-655">-or-</span></span> 
<span data-ttu-id="56b53-656">這個資料流先前是用來以伺服器的身分嘗試驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-656">This stream was used previously to attempt authentication as the server.</span></span> <span data-ttu-id="56b53-657">您不能使用資料流以用戶端身分重試驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-657">You cannot use the stream to retry authentication as the client.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="56b53-658">此物件已關閉。</span><span class="sxs-lookup"><span data-stu-id="56b53-658">This object has been closed.</span></span></exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />
        <related type="Article" href="~/docs/framework/network-programming/integrated-windows-authentication-with-extended-protection.md"><span data-ttu-id="56b53-659">具有延伸保護的整合式 Windows 驗證</span><span class="sxs-lookup"><span data-stu-id="56b53-659">Integrated Windows Authentication with Extended Protection</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="BeginAuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsClient (System.Net.NetworkCredential credential, string targetName, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsClient(class System.Net.NetworkCredential credential, string targetName, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsClient(System::Net::NetworkCredential ^ credential, System::String ^ targetName, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel allowedImpersonationLevel, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="abstract member BeginAuthenticateAsClient : System.Net.NetworkCredential * string * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAuthenticateAsClient : System.Net.NetworkCredential * string * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel * AsyncCallback * obj -&gt; IAsyncResult" Usage="negotiateStream.BeginAuthenticateAsClient (credential, targetName, requiredProtectionLevel, allowedImpersonationLevel, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="targetName" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="allowedImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" Index="4" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="asyncState" Type="System.Object" Index="5" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="credential"><span data-ttu-id="56b53-660">建立用戶端識別所用的 <see cref="T:System.Net.NetworkCredential" />。</span><span class="sxs-lookup"><span data-stu-id="56b53-660">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span></span></param>
        <param name="targetName"><span data-ttu-id="56b53-661">服務主要名稱 (SPN)，用來唯一識別要驗證的伺服器。</span><span class="sxs-lookup"><span data-stu-id="56b53-661">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span></span></param>
        <param name="requiredProtectionLevel"><span data-ttu-id="56b53-662">其中一個 <see cref="T:System.Net.Security.ProtectionLevel" /> 值，表示資料流的安全性服務。</span><span class="sxs-lookup"><span data-stu-id="56b53-662">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span></span></param>
        <param name="allowedImpersonationLevel"><span data-ttu-id="56b53-663">其中一個 <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 值，表示伺服器要如何使用用戶端的認證來存取資源。</span><span class="sxs-lookup"><span data-stu-id="56b53-663">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span></span></param>
        <param name="asyncCallback"><span data-ttu-id="56b53-664"><see cref="T:System.AsyncCallback" /> 委派，會於驗證完成時參考要叫用的方法。</span><span class="sxs-lookup"><span data-stu-id="56b53-664">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span></span></param>
        <param name="asyncState"><span data-ttu-id="56b53-665">包含寫入作業資訊的使用者定義物件。</span><span class="sxs-lookup"><span data-stu-id="56b53-665">A user-defined object containing information about the write operation.</span></span> <span data-ttu-id="56b53-666">作業完成時會將這個物件傳遞給 <paramref name="asyncCallback" /> 委派。</span><span class="sxs-lookup"><span data-stu-id="56b53-666">This object is passed to the <paramref name="asyncCallback" /> delegate when the operation completes.</span></span></param>
        <summary><span data-ttu-id="56b53-667">由用戶端呼叫以開始非同步作業，以便驗證用戶端與伺服器連接中的用戶端，並選擇性地驗證伺服器。</span><span class="sxs-lookup"><span data-stu-id="56b53-667">Called by clients to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span></span> <span data-ttu-id="56b53-668">驗證處理序使用指定的認證和驗證選項。</span><span class="sxs-lookup"><span data-stu-id="56b53-668">The authentication process uses the specified credentials and authentication options.</span></span> <span data-ttu-id="56b53-669">這個方法不會封鎖。</span><span class="sxs-lookup"><span data-stu-id="56b53-669">This method does not block.</span></span></summary>
        <returns><span data-ttu-id="56b53-670"><see cref="T:System.IAsyncResult" /> 物件，指出非同步作業的狀態。</span><span class="sxs-lookup"><span data-stu-id="56b53-670">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56b53-671">使用`requiredProtectionLevel`參數來要求安全性服務，使用經過驗證的資料流傳輸的資料。</span><span class="sxs-lookup"><span data-stu-id="56b53-671">Use the `requiredProtectionLevel` parameter to request security services for data transmitted using the authenticated stream.</span></span> <span data-ttu-id="56b53-672">例如，若要加密與簽署的資料，請指定<xref:System.Net.Security.ProtectionLevel.EncryptAndSign>值。</span><span class="sxs-lookup"><span data-stu-id="56b53-672">For example, to have the data encrypted and signed, specify the <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> value.</span></span> <span data-ttu-id="56b53-673">成功驗證並不保證的要求<xref:System.Net.Security.ProtectionLevel>已被授與。</span><span class="sxs-lookup"><span data-stu-id="56b53-673">Successful authentication does not guarantee that the requested <xref:System.Net.Security.ProtectionLevel> has been granted.</span></span> <span data-ttu-id="56b53-674">您必須檢查<xref:System.Net.Security.NegotiateStream.IsEncrypted%2A>並<xref:System.Net.Security.NegotiateStream.IsSigned%2A>屬性，以決定哪些安全性服務由<xref:System.Net.Security.NegotiateStream>。</span><span class="sxs-lookup"><span data-stu-id="56b53-674">You must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 <span data-ttu-id="56b53-675">這個方法是非同步的而且不會封鎖在作業完成時。</span><span class="sxs-lookup"><span data-stu-id="56b53-675">This method is asynchronous and does not block while the operation completes.</span></span> <span data-ttu-id="56b53-676">若要封鎖直到作業完成為止，使用其中一種<xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>方法多載。</span><span class="sxs-lookup"><span data-stu-id="56b53-676">To block until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> method overloads.</span></span>  
  
 <span data-ttu-id="56b53-677">非同步驗證作業必須完成呼叫<xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="56b53-677">The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A> method.</span></span> <span data-ttu-id="56b53-678">一般而言，會叫用方法`asyncCallback`委派。</span><span class="sxs-lookup"><span data-stu-id="56b53-678">Typically, the method is invoked by the `asyncCallback` delegate.</span></span> <span data-ttu-id="56b53-679">如需使用非同步程式設計模型的詳細資訊，請參閱[Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="56b53-679">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="56b53-680">如果驗證失敗，您會收到<xref:System.Security.Authentication.AuthenticationException>或<xref:System.Security.Authentication.InvalidCredentialException>。</span><span class="sxs-lookup"><span data-stu-id="56b53-680">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="56b53-681">在此情況下，您可以重試一次使用不同的認證驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-681">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="56b53-682"><paramref name="credential" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="56b53-682"><paramref name="credential" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="56b53-683">-或-</span><span class="sxs-lookup"><span data-stu-id="56b53-683">-or-</span></span> 
 <span data-ttu-id="56b53-684"><paramref name="targetName" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="56b53-684"><paramref name="targetName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="56b53-685">驗證失敗。</span><span class="sxs-lookup"><span data-stu-id="56b53-685">The authentication failed.</span></span> <span data-ttu-id="56b53-686">您可以使用這個物件重試驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-686">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="56b53-687">驗證失敗。</span><span class="sxs-lookup"><span data-stu-id="56b53-687">The authentication failed.</span></span> <span data-ttu-id="56b53-688">您可以使用這個物件重試驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-688">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="56b53-689">此物件已關閉。</span><span class="sxs-lookup"><span data-stu-id="56b53-689">This object has been closed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="56b53-690">已經進行驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-690">Authentication has already occurred.</span></span>  
  
<span data-ttu-id="56b53-691">-或-</span><span class="sxs-lookup"><span data-stu-id="56b53-691">-or-</span></span> 
<span data-ttu-id="56b53-692">這個資料流先前是用來以伺服器的身分嘗試驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-692">This stream was used previously to attempt authentication as the server.</span></span> <span data-ttu-id="56b53-693">您不能使用資料流以用戶端身分重試驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-693">You cannot use the stream to retry authentication as the client.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="56b53-694">若要使用明確<see cref="T:System.Net.NetworkCredential" />。</span><span class="sxs-lookup"><span data-stu-id="56b53-694">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span></span> <span data-ttu-id="56b53-695">關聯的列舉型別：<see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />。</span><span class="sxs-lookup"><span data-stu-id="56b53-695">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="BeginAuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsClient (System.Net.NetworkCredential credential, System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsClient(class System.Net.NetworkCredential credential, class System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsClient(System::Net::NetworkCredential ^ credential, System::Security::Authentication::ExtendedProtection::ChannelBinding ^ binding, System::String ^ targetName, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel allowedImpersonationLevel, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="abstract member BeginAuthenticateAsClient : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ChannelBinding * string * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAuthenticateAsClient : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ChannelBinding * string * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel * AsyncCallback * obj -&gt; IAsyncResult" Usage="negotiateStream.BeginAuthenticateAsClient (credential, binding, targetName, requiredProtectionLevel, allowedImpersonationLevel, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="binding" Type="System.Security.Authentication.ExtendedProtection.ChannelBinding" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="targetName" Type="System.String" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="allowedImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" Index="4" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" Index="5" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="asyncState" Type="System.Object" Index="6" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="credential"><span data-ttu-id="56b53-696">建立用戶端識別所用的 <see cref="T:System.Net.NetworkCredential" />。</span><span class="sxs-lookup"><span data-stu-id="56b53-696">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span></span></param>
        <param name="binding"><span data-ttu-id="56b53-697">用於延伸保護的 <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />。</span><span class="sxs-lookup"><span data-stu-id="56b53-697">The <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> that is used for extended protection.</span></span></param>
        <param name="targetName"><span data-ttu-id="56b53-698">服務主要名稱 (SPN)，用來唯一識別要驗證的伺服器。</span><span class="sxs-lookup"><span data-stu-id="56b53-698">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span></span></param>
        <param name="requiredProtectionLevel"><span data-ttu-id="56b53-699">其中一個 <see cref="T:System.Net.Security.ProtectionLevel" /> 值，表示資料流的安全性服務。</span><span class="sxs-lookup"><span data-stu-id="56b53-699">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span></span></param>
        <param name="allowedImpersonationLevel"><span data-ttu-id="56b53-700">其中一個 <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 值，表示伺服器要如何使用用戶端的認證來存取資源。</span><span class="sxs-lookup"><span data-stu-id="56b53-700">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span></span></param>
        <param name="asyncCallback"><span data-ttu-id="56b53-701"><see cref="T:System.AsyncCallback" /> 委派，會於驗證完成時參考要叫用的方法。</span><span class="sxs-lookup"><span data-stu-id="56b53-701">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span></span></param>
        <param name="asyncState"><span data-ttu-id="56b53-702">包含寫入作業資訊的使用者定義物件。</span><span class="sxs-lookup"><span data-stu-id="56b53-702">A user-defined object containing information about the write operation.</span></span> <span data-ttu-id="56b53-703">作業完成時會將這個物件傳遞給 <paramref name="asyncCallback" /> 委派。</span><span class="sxs-lookup"><span data-stu-id="56b53-703">This object is passed to the <paramref name="asyncCallback" /> delegate when the operation completes.</span></span></param>
        <summary><span data-ttu-id="56b53-704">由用戶端呼叫以開始非同步作業，以便驗證用戶端與伺服器連接中的用戶端，並選擇性地驗證伺服器。</span><span class="sxs-lookup"><span data-stu-id="56b53-704">Called by clients to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span></span> <span data-ttu-id="56b53-705">驗證處理序使用指定的認證、驗證選項和通道繫結。</span><span class="sxs-lookup"><span data-stu-id="56b53-705">The authentication process uses the specified credentials, authentication options, and channel binding.</span></span> <span data-ttu-id="56b53-706">這個方法不會封鎖。</span><span class="sxs-lookup"><span data-stu-id="56b53-706">This method does not block.</span></span></summary>
        <returns><span data-ttu-id="56b53-707"><see cref="T:System.IAsyncResult" /> 物件，指出非同步作業的狀態。</span><span class="sxs-lookup"><span data-stu-id="56b53-707">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56b53-708">使用`requiredProtectionLevel`參數來要求安全性服務，使用經過驗證的資料流傳輸的資料。</span><span class="sxs-lookup"><span data-stu-id="56b53-708">Use the `requiredProtectionLevel` parameter to request security services for data transmitted using the authenticated stream.</span></span> <span data-ttu-id="56b53-709">例如，若要加密與簽署的資料，請指定<xref:System.Net.Security.ProtectionLevel.EncryptAndSign>值。</span><span class="sxs-lookup"><span data-stu-id="56b53-709">For example, to have the data encrypted and signed, specify the <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> value.</span></span> <span data-ttu-id="56b53-710">成功驗證並不保證的要求<xref:System.Net.Security.ProtectionLevel>已被授與。</span><span class="sxs-lookup"><span data-stu-id="56b53-710">Successful authentication does not guarantee that the requested <xref:System.Net.Security.ProtectionLevel> has been granted.</span></span> <span data-ttu-id="56b53-711">您必須檢查<xref:System.Net.Security.NegotiateStream.IsEncrypted%2A>並<xref:System.Net.Security.NegotiateStream.IsSigned%2A>屬性，以決定哪些安全性服務由<xref:System.Net.Security.NegotiateStream>。</span><span class="sxs-lookup"><span data-stu-id="56b53-711">You must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 <span data-ttu-id="56b53-712">這個方法是非同步的而且不會封鎖在作業完成時。</span><span class="sxs-lookup"><span data-stu-id="56b53-712">This method is asynchronous and does not block while the operation completes.</span></span> <span data-ttu-id="56b53-713">若要封鎖直到作業完成為止，使用其中一種<xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>方法多載。</span><span class="sxs-lookup"><span data-stu-id="56b53-713">To block until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> method overloads.</span></span>  
  
 <span data-ttu-id="56b53-714">非同步驗證作業必須完成呼叫<xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="56b53-714">The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A> method.</span></span> <span data-ttu-id="56b53-715">一般而言，會叫用方法`asyncCallback`委派。</span><span class="sxs-lookup"><span data-stu-id="56b53-715">Typically, the method is invoked by the `asyncCallback` delegate.</span></span> <span data-ttu-id="56b53-716">如需使用非同步程式設計模型的詳細資訊，請參閱[Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="56b53-716">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="56b53-717">如果驗證失敗，您會收到<xref:System.Security.Authentication.AuthenticationException>或<xref:System.Security.Authentication.InvalidCredentialException>。</span><span class="sxs-lookup"><span data-stu-id="56b53-717">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="56b53-718">在此情況下，您可以重試一次使用不同的認證驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-718">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="56b53-719"><paramref name="credential" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="56b53-719"><paramref name="credential" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="56b53-720">-或-</span><span class="sxs-lookup"><span data-stu-id="56b53-720">-or-</span></span> 
 <span data-ttu-id="56b53-721"><paramref name="targetName" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="56b53-721"><paramref name="targetName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="56b53-722">驗證失敗。</span><span class="sxs-lookup"><span data-stu-id="56b53-722">The authentication failed.</span></span> <span data-ttu-id="56b53-723">您可以使用這個物件重試驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-723">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="56b53-724">驗證失敗。</span><span class="sxs-lookup"><span data-stu-id="56b53-724">The authentication failed.</span></span> <span data-ttu-id="56b53-725">您可以使用這個物件重試驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-725">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="56b53-726">已經進行驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-726">Authentication has already occurred.</span></span>  
  
<span data-ttu-id="56b53-727">-或-</span><span class="sxs-lookup"><span data-stu-id="56b53-727">-or-</span></span> 
<span data-ttu-id="56b53-728">這個資料流先前是用來以伺服器的身分嘗試驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-728">This stream was used previously to attempt authentication as the server.</span></span> <span data-ttu-id="56b53-729">您不能使用資料流以用戶端身分重試驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-729">You cannot use the stream to retry authentication as the client.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="56b53-730">此物件已關閉。</span><span class="sxs-lookup"><span data-stu-id="56b53-730">This object has been closed.</span></span></exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />
        <related type="Article" href="~/docs/framework/network-programming/integrated-windows-authentication-with-extended-protection.md"><span data-ttu-id="56b53-731">具有延伸保護的整合式 Windows 驗證</span><span class="sxs-lookup"><span data-stu-id="56b53-731">Integrated Windows Authentication with Extended Protection</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginAuthenticateAsServer">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="56b53-732">開始非同步作業以處理驗證用戶端與伺服器連接的伺服器端。</span><span class="sxs-lookup"><span data-stu-id="56b53-732">Begins an asynchronous operation to handle the server side of authenticating a client-server connection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56b53-733">在進行驗證時，此方法的多載不會封鎖。</span><span class="sxs-lookup"><span data-stu-id="56b53-733">The overloads of this method do not block while the authentication is in progress.</span></span> <span data-ttu-id="56b53-734">若要封鎖等候要完成驗證時，請使用<xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="56b53-734">To block while waiting for the authentication to complete, use the <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginAuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsServer (AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsServer(class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsServer(AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="abstract member BeginAuthenticateAsServer : AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAuthenticateAsServer : AsyncCallback * obj -&gt; IAsyncResult" Usage="negotiateStream.BeginAuthenticateAsServer (asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="asyncState" Type="System.Object" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="asyncCallback"><span data-ttu-id="56b53-735"><see cref="T:System.AsyncCallback" /> 委派，會於驗證完成時參考要叫用的方法。</span><span class="sxs-lookup"><span data-stu-id="56b53-735">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span></span></param>
        <param name="asyncState"><span data-ttu-id="56b53-736">包含作業資訊的使用者定義物件。</span><span class="sxs-lookup"><span data-stu-id="56b53-736">A user-defined object containing information about the operation.</span></span> <span data-ttu-id="56b53-737">作業完成時會將這個物件傳遞給 <paramref name="asyncCallback" /> 委派。</span><span class="sxs-lookup"><span data-stu-id="56b53-737">This object is passed to the <paramref name="asyncCallback" /> delegate when the operation completes.</span></span></param>
        <summary><span data-ttu-id="56b53-738">由伺服器呼叫以開始非同步作業，以便驗證用戶端與伺服器連接中的用戶端，並選擇性地驗證伺服器。</span><span class="sxs-lookup"><span data-stu-id="56b53-738">Called by servers to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span></span> <span data-ttu-id="56b53-739">這個方法不會封鎖。</span><span class="sxs-lookup"><span data-stu-id="56b53-739">This method does not block.</span></span></summary>
        <returns><span data-ttu-id="56b53-740"><see cref="T:System.IAsyncResult" /> 物件，指出非同步作業的狀態。</span><span class="sxs-lookup"><span data-stu-id="56b53-740">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56b53-741">驗證會使用伺服器的<xref:System.Net.CredentialCache.DefaultCredentials%2A>。</span><span class="sxs-lookup"><span data-stu-id="56b53-741">The authentication uses the server's <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span></span> <span data-ttu-id="56b53-742">沒有服務主體名稱 (SPN) 指定的伺服器。</span><span class="sxs-lookup"><span data-stu-id="56b53-742">No Service Principal Name (SPN) is specified for the server.</span></span> <span data-ttu-id="56b53-743">模擬層級<xref:System.Security.Principal.TokenImpersonationLevel.Identification>，安全性層級是<xref:System.Net.Security.ProtectionLevel.EncryptAndSign>。</span><span class="sxs-lookup"><span data-stu-id="56b53-743">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span></span>  
  
 <span data-ttu-id="56b53-744">當驗證成功時，您必須檢查<xref:System.Net.Security.NegotiateStream.IsEncrypted%2A>並<xref:System.Net.Security.NegotiateStream.IsSigned%2A>屬性，以決定哪些安全性服務由<xref:System.Net.Security.NegotiateStream>。</span><span class="sxs-lookup"><span data-stu-id="56b53-744">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="56b53-745">檢查<xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A>屬性來判斷是否發生相互驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-745">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="56b53-746">若要封鎖直到作業完成為止，使用其中一種<xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>方法多載。</span><span class="sxs-lookup"><span data-stu-id="56b53-746">To block until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="56b53-747">如果驗證失敗，您會收到<xref:System.Security.Authentication.AuthenticationException>或<xref:System.Security.Authentication.InvalidCredentialException>。</span><span class="sxs-lookup"><span data-stu-id="56b53-747">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="56b53-748">在此情況下，您可以重試一次使用不同的認證驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-748">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="56b53-749">驗證失敗。</span><span class="sxs-lookup"><span data-stu-id="56b53-749">The authentication failed.</span></span> <span data-ttu-id="56b53-750">您可以使用這個物件重試驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-750">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="56b53-751">驗證失敗。</span><span class="sxs-lookup"><span data-stu-id="56b53-751">The authentication failed.</span></span> <span data-ttu-id="56b53-752">您可以使用這個物件重試驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-752">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="56b53-753">此物件已關閉。</span><span class="sxs-lookup"><span data-stu-id="56b53-753">This object has been closed.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="56b53-754">不支援 Windows 95 和 Windows 98。</span><span class="sxs-lookup"><span data-stu-id="56b53-754">Windows 95 and Windows 98 are not supported.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="56b53-755">若要使用明確<see cref="T:System.Net.NetworkCredential" />。</span><span class="sxs-lookup"><span data-stu-id="56b53-755">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span></span> <span data-ttu-id="56b53-756">關聯的列舉型別：<see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />。</span><span class="sxs-lookup"><span data-stu-id="56b53-756">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="BeginAuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsServer (System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsServer(class System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsServer(System::Security::Authentication::ExtendedProtection::ExtendedProtectionPolicy ^ policy, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="abstract member BeginAuthenticateAsServer : System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAuthenticateAsServer : System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy * AsyncCallback * obj -&gt; IAsyncResult" Usage="negotiateStream.BeginAuthenticateAsServer (policy, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="policy" Type="System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="asyncState" Type="System.Object" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="policy"><span data-ttu-id="56b53-757">用於延伸保護的 <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />。</span><span class="sxs-lookup"><span data-stu-id="56b53-757">The <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> that is used for extended protection.</span></span></param>
        <param name="asyncCallback"><span data-ttu-id="56b53-758"><see cref="T:System.AsyncCallback" /> 委派，會於驗證完成時參考要叫用的方法。</span><span class="sxs-lookup"><span data-stu-id="56b53-758">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span></span></param>
        <param name="asyncState"><span data-ttu-id="56b53-759">包含寫入作業資訊的使用者定義物件。</span><span class="sxs-lookup"><span data-stu-id="56b53-759">A user-defined object containing information about the write operation.</span></span> <span data-ttu-id="56b53-760">作業完成時會將這個物件傳遞給 <paramref name="asyncCallback" /> 委派。</span><span class="sxs-lookup"><span data-stu-id="56b53-760">This object is passed to the <paramref name="asyncCallback" /> delegate when the operation completes.</span></span></param>
        <summary><span data-ttu-id="56b53-761">由伺服器呼叫以開始非同步作業，以便驗證用戶端與伺服器連接中的用戶端，並選擇性地驗證伺服器。</span><span class="sxs-lookup"><span data-stu-id="56b53-761">Called by servers to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span></span> <span data-ttu-id="56b53-762">驗證處理序使用指定的延伸保護原則。</span><span class="sxs-lookup"><span data-stu-id="56b53-762">The authentication process uses the specified extended protection policy.</span></span> <span data-ttu-id="56b53-763">這個方法不會封鎖。</span><span class="sxs-lookup"><span data-stu-id="56b53-763">This method does not block.</span></span></summary>
        <returns><span data-ttu-id="56b53-764"><see cref="T:System.IAsyncResult" /> 物件，指出非同步作業的狀態。</span><span class="sxs-lookup"><span data-stu-id="56b53-764">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56b53-765">驗證會使用伺服器的<xref:System.Net.CredentialCache.DefaultCredentials%2A>。</span><span class="sxs-lookup"><span data-stu-id="56b53-765">The authentication uses the server's <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span></span> <span data-ttu-id="56b53-766">沒有服務主體名稱 (SPN) 指定的伺服器。</span><span class="sxs-lookup"><span data-stu-id="56b53-766">No Service Principal Name (SPN) is specified for the server.</span></span> <span data-ttu-id="56b53-767">模擬層級<xref:System.Security.Principal.TokenImpersonationLevel.Identification>，安全性層級是<xref:System.Net.Security.ProtectionLevel.EncryptAndSign>。</span><span class="sxs-lookup"><span data-stu-id="56b53-767">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span></span>  
  
 <span data-ttu-id="56b53-768">如果`policy`參數是`null`，則會使用延伸的保護原則可<xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A>設定為<xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>。</span><span class="sxs-lookup"><span data-stu-id="56b53-768">If the `policy` parameter is `null`, then an extended protection policy is used that has <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> set to <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>.</span></span>  
  
 <span data-ttu-id="56b53-769">當驗證成功時，您必須檢查<xref:System.Net.Security.NegotiateStream.IsEncrypted%2A>並<xref:System.Net.Security.NegotiateStream.IsSigned%2A>屬性，以決定哪些安全性服務由<xref:System.Net.Security.NegotiateStream>。</span><span class="sxs-lookup"><span data-stu-id="56b53-769">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="56b53-770">檢查<xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A>屬性來判斷是否發生相互驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-770">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="56b53-771">若要封鎖直到作業完成為止，使用其中一種<xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>方法多載。</span><span class="sxs-lookup"><span data-stu-id="56b53-771">To block until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="56b53-772">如果驗證失敗，您會收到<xref:System.Security.Authentication.AuthenticationException>或<xref:System.Security.Authentication.InvalidCredentialException>。</span><span class="sxs-lookup"><span data-stu-id="56b53-772">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="56b53-773">在此情況下，您可以重試一次使用不同的認證驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-773">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="56b53-774">根據延伸保護原則傳入 <paramref name="policy" /> 參數中的 <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> 和 <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> 都是 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="56b53-774">The <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> and <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> on the extended protection policy passed in the <paramref name="policy" /> parameter are both <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="56b53-775">驗證失敗。</span><span class="sxs-lookup"><span data-stu-id="56b53-775">The authentication failed.</span></span> <span data-ttu-id="56b53-776">您可以使用這個物件重試驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-776">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="56b53-777">驗證失敗。</span><span class="sxs-lookup"><span data-stu-id="56b53-777">The authentication failed.</span></span> <span data-ttu-id="56b53-778">您可以使用這個物件重試驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-778">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="56b53-779">不支援 Windows 95 和 Windows 98。</span><span class="sxs-lookup"><span data-stu-id="56b53-779">Windows 95 and Windows 98 are not supported.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="56b53-780">此物件已關閉。</span><span class="sxs-lookup"><span data-stu-id="56b53-780">This object has been closed.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="56b53-781">在不支援延伸保護的平台上，<paramref name="policy" /> 參數設定為 <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" />。</span><span class="sxs-lookup"><span data-stu-id="56b53-781">The <paramref name="policy" /> parameter was set to <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> on a platform that does not support extended protection.</span></span></exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
        <related type="Article" href="~/docs/framework/network-programming/integrated-windows-authentication-with-extended-protection.md"><span data-ttu-id="56b53-782">具有延伸保護的整合式 Windows 驗證</span><span class="sxs-lookup"><span data-stu-id="56b53-782">Integrated Windows Authentication with Extended Protection</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="BeginAuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsServer (System.Net.NetworkCredential credential, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsServer(class System.Net.NetworkCredential credential, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsServer(System::Net::NetworkCredential ^ credential, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel requiredImpersonationLevel, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="abstract member BeginAuthenticateAsServer : System.Net.NetworkCredential * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAuthenticateAsServer : System.Net.NetworkCredential * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel * AsyncCallback * obj -&gt; IAsyncResult" Usage="negotiateStream.BeginAuthenticateAsServer (credential, requiredProtectionLevel, requiredImpersonationLevel, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="requiredImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="asyncState" Type="System.Object" Index="4" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="credential"><span data-ttu-id="56b53-783">建立用戶端識別所用的 <see cref="T:System.Net.NetworkCredential" />。</span><span class="sxs-lookup"><span data-stu-id="56b53-783">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span></span></param>
        <param name="requiredProtectionLevel"><span data-ttu-id="56b53-784">其中一個 <see cref="T:System.Net.Security.ProtectionLevel" /> 值，表示資料流的安全性服務。</span><span class="sxs-lookup"><span data-stu-id="56b53-784">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span></span></param>
        <param name="requiredImpersonationLevel"><span data-ttu-id="56b53-785">其中一個 <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 值，表示伺服器要如何使用用戶端的認證來存取資源。</span><span class="sxs-lookup"><span data-stu-id="56b53-785">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span></span></param>
        <param name="asyncCallback"><span data-ttu-id="56b53-786"><see cref="T:System.AsyncCallback" /> 委派，會於驗證完成時參考要叫用的方法。</span><span class="sxs-lookup"><span data-stu-id="56b53-786">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span></span></param>
        <param name="asyncState"><span data-ttu-id="56b53-787">包含作業資訊的使用者定義物件。</span><span class="sxs-lookup"><span data-stu-id="56b53-787">A user-defined object containing information about the operation.</span></span> <span data-ttu-id="56b53-788">作業完成時會將這個物件傳遞給 <paramref name="asyncCallback" /> 委派。</span><span class="sxs-lookup"><span data-stu-id="56b53-788">This object is passed to the <paramref name="asyncCallback" /> delegate when the operation completes.</span></span></param>
        <summary><span data-ttu-id="56b53-789">由伺服器呼叫以開始非同步作業，以便驗證用戶端與伺服器連接中的用戶端，並選擇性地驗證伺服器。</span><span class="sxs-lookup"><span data-stu-id="56b53-789">Called by servers to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span></span> <span data-ttu-id="56b53-790">驗證處理序使用指定的伺服器認證和驗證選項。</span><span class="sxs-lookup"><span data-stu-id="56b53-790">The authentication process uses the specified server credentials and authentication options.</span></span> <span data-ttu-id="56b53-791">這個方法不會封鎖。</span><span class="sxs-lookup"><span data-stu-id="56b53-791">This method does not block.</span></span></summary>
        <returns><span data-ttu-id="56b53-792"><see cref="T:System.IAsyncResult" /> 物件，指出非同步作業的狀態。</span><span class="sxs-lookup"><span data-stu-id="56b53-792">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56b53-793">使用`requiredProtectionLevel`參數來要求安全性服務，使用經過驗證的資料流傳輸的資料。</span><span class="sxs-lookup"><span data-stu-id="56b53-793">Use the `requiredProtectionLevel` parameter to request security services for data transmitted using the authenticated stream.</span></span> <span data-ttu-id="56b53-794">例如，若要加密與簽署的資料，請指定<xref:System.Net.Security.ProtectionLevel.EncryptAndSign>值。</span><span class="sxs-lookup"><span data-stu-id="56b53-794">For example, to have the data encrypted and signed, specify the <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> value.</span></span> <span data-ttu-id="56b53-795">成功驗證並不保證，要求<xref:System.Net.Security.ProtectionLevel>已被授與。</span><span class="sxs-lookup"><span data-stu-id="56b53-795">Successful authentication does not guarantee that, the requested <xref:System.Net.Security.ProtectionLevel> has been granted.</span></span> <span data-ttu-id="56b53-796">您必須檢查<xref:System.Net.Security.NegotiateStream.IsEncrypted%2A>並<xref:System.Net.Security.NegotiateStream.IsSigned%2A>屬性，以決定哪些安全性服務由<xref:System.Net.Security.NegotiateStream>。</span><span class="sxs-lookup"><span data-stu-id="56b53-796">You must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 <span data-ttu-id="56b53-797">這個方法是非同步的而且不會封鎖在作業完成時。</span><span class="sxs-lookup"><span data-stu-id="56b53-797">This method is asynchronous and does not block while the operation completes.</span></span> <span data-ttu-id="56b53-798">若要封鎖直到作業完成為止，使用其中一種<xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>方法多載。</span><span class="sxs-lookup"><span data-stu-id="56b53-798">To block until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="56b53-799">非同步驗證作業必須完成呼叫<xref:System.Net.Security.NegotiateStream.EndAuthenticateAsServer%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="56b53-799">The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsServer%2A> method.</span></span> <span data-ttu-id="56b53-800">一般而言，會叫用方法`asyncCallback`委派。</span><span class="sxs-lookup"><span data-stu-id="56b53-800">Typically, the method is invoked by the `asyncCallback` delegate.</span></span> <span data-ttu-id="56b53-801">如需使用非同步程式設計模型的詳細資訊，請參閱[Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="56b53-801">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="56b53-802">如果驗證失敗，您會收到<xref:System.Security.Authentication.AuthenticationException>或<xref:System.Security.Authentication.InvalidCredentialException>。</span><span class="sxs-lookup"><span data-stu-id="56b53-802">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="56b53-803">在此情況下，您可以重試一次使用不同的認證驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-803">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="56b53-804"><paramref name="credential" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="56b53-804"><paramref name="credential" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="56b53-805"><paramref name="requiredImpersonationLevel" /> 必須是 <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />、<see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" /> 或 <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />。</span><span class="sxs-lookup"><span data-stu-id="56b53-805"><paramref name="requiredImpersonationLevel" /> must be <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />, <see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" />, or <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />,</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="56b53-806">驗證失敗。</span><span class="sxs-lookup"><span data-stu-id="56b53-806">The authentication failed.</span></span> <span data-ttu-id="56b53-807">您可以使用這個物件重試驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-807">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="56b53-808">驗證失敗。</span><span class="sxs-lookup"><span data-stu-id="56b53-808">The authentication failed.</span></span> <span data-ttu-id="56b53-809">您可以使用這個物件重試驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-809">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="56b53-810">此物件已關閉。</span><span class="sxs-lookup"><span data-stu-id="56b53-810">This object has been closed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="56b53-811">已經進行驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-811">Authentication has already occurred.</span></span>  
  
<span data-ttu-id="56b53-812">-或-</span><span class="sxs-lookup"><span data-stu-id="56b53-812">-or-</span></span> 
<span data-ttu-id="56b53-813">這個資料流先前是用來以用戶端的身分嘗試驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-813">This stream was used previously to attempt authentication as the client.</span></span> <span data-ttu-id="56b53-814">您不能使用資料流以伺服器身分重試驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-814">You cannot use the stream to retry authentication as the server.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="56b53-815">不支援 Windows 95 和 Windows 98。</span><span class="sxs-lookup"><span data-stu-id="56b53-815">Windows 95 and Windows 98 are not supported.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="56b53-816">若要使用明確<see cref="T:System.Net.NetworkCredential" />。</span><span class="sxs-lookup"><span data-stu-id="56b53-816">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span></span> <span data-ttu-id="56b53-817">關聯的列舉型別：<see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />。</span><span class="sxs-lookup"><span data-stu-id="56b53-817">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="BeginAuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsServer (System.Net.NetworkCredential credential, System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsServer(class System.Net.NetworkCredential credential, class System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsServer(System::Net::NetworkCredential ^ credential, System::Security::Authentication::ExtendedProtection::ExtendedProtectionPolicy ^ policy, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel requiredImpersonationLevel, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="abstract member BeginAuthenticateAsServer : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAuthenticateAsServer : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel * AsyncCallback * obj -&gt; IAsyncResult" Usage="negotiateStream.BeginAuthenticateAsServer (credential, policy, requiredProtectionLevel, requiredImpersonationLevel, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="policy" Type="System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="requiredImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" Index="4" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="asyncState" Type="System.Object" Index="5" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="credential"><span data-ttu-id="56b53-818">建立用戶端識別所用的 <see cref="T:System.Net.NetworkCredential" />。</span><span class="sxs-lookup"><span data-stu-id="56b53-818">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span></span></param>
        <param name="policy"><span data-ttu-id="56b53-819">用於延伸保護的 <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />。</span><span class="sxs-lookup"><span data-stu-id="56b53-819">The <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> that is used for extended protection.</span></span></param>
        <param name="requiredProtectionLevel"><span data-ttu-id="56b53-820">其中一個 <see cref="T:System.Net.Security.ProtectionLevel" /> 值，表示資料流的安全性服務。</span><span class="sxs-lookup"><span data-stu-id="56b53-820">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span></span></param>
        <param name="requiredImpersonationLevel"><span data-ttu-id="56b53-821">其中一個 <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 值，表示伺服器要如何使用用戶端的認證來存取資源。</span><span class="sxs-lookup"><span data-stu-id="56b53-821">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span></span></param>
        <param name="asyncCallback"><span data-ttu-id="56b53-822"><see cref="T:System.AsyncCallback" /> 委派，會於驗證完成時參考要叫用的方法。</span><span class="sxs-lookup"><span data-stu-id="56b53-822">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span></span></param>
        <param name="asyncState"><span data-ttu-id="56b53-823">包含寫入作業資訊的使用者定義物件。</span><span class="sxs-lookup"><span data-stu-id="56b53-823">A user-defined object containing information about the write operation.</span></span> <span data-ttu-id="56b53-824">作業完成時會將這個物件傳遞給 <paramref name="asyncCallback" /> 委派。</span><span class="sxs-lookup"><span data-stu-id="56b53-824">This object is passed to the <paramref name="asyncCallback" /> delegate when the operation completes.</span></span></param>
        <summary><span data-ttu-id="56b53-825">由伺服器呼叫以開始非同步作業，以便驗證用戶端與伺服器連接中的用戶端，並選擇性地驗證伺服器。</span><span class="sxs-lookup"><span data-stu-id="56b53-825">Called by servers to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span></span> <span data-ttu-id="56b53-826">驗證處理序使用指定的伺服器認證、驗證選項和延伸保護原則。</span><span class="sxs-lookup"><span data-stu-id="56b53-826">The authentication process uses the specified server credentials, authentication options, and extended protection policy.</span></span> <span data-ttu-id="56b53-827">這個方法不會封鎖。</span><span class="sxs-lookup"><span data-stu-id="56b53-827">This method does not block.</span></span></summary>
        <returns><span data-ttu-id="56b53-828"><see cref="T:System.IAsyncResult" /> 物件，指出非同步作業的狀態。</span><span class="sxs-lookup"><span data-stu-id="56b53-828">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56b53-829">使用`requiredProtectionLevel`參數來要求安全性服務，使用經過驗證的資料流傳輸的資料。</span><span class="sxs-lookup"><span data-stu-id="56b53-829">Use the `requiredProtectionLevel` parameter to request security services for data transmitted using the authenticated stream.</span></span> <span data-ttu-id="56b53-830">例如，若要加密與簽署的資料，請指定<xref:System.Net.Security.ProtectionLevel.EncryptAndSign>值。</span><span class="sxs-lookup"><span data-stu-id="56b53-830">For example, to have the data encrypted and signed, specify the <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> value.</span></span> <span data-ttu-id="56b53-831">成功驗證並不保證，要求<xref:System.Net.Security.ProtectionLevel>已被授與。</span><span class="sxs-lookup"><span data-stu-id="56b53-831">Successful authentication does not guarantee that, the requested <xref:System.Net.Security.ProtectionLevel> has been granted.</span></span> <span data-ttu-id="56b53-832">您必須檢查<xref:System.Net.Security.NegotiateStream.IsEncrypted%2A>並<xref:System.Net.Security.NegotiateStream.IsSigned%2A>屬性，以決定哪些安全性服務由<xref:System.Net.Security.NegotiateStream>。</span><span class="sxs-lookup"><span data-stu-id="56b53-832">You must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 <span data-ttu-id="56b53-833">如果`policy`參數是`null`，則會使用延伸的保護原則可<xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A>設定為<xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>。</span><span class="sxs-lookup"><span data-stu-id="56b53-833">If the `policy` parameter is `null`, then an extended protection policy is used that has <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> set to <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>.</span></span>  
  
 <span data-ttu-id="56b53-834">這個方法是非同步的而且不會封鎖在作業完成時。</span><span class="sxs-lookup"><span data-stu-id="56b53-834">This method is asynchronous and does not block while the operation completes.</span></span> <span data-ttu-id="56b53-835">若要封鎖直到作業完成為止，使用其中一種<xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>方法多載。</span><span class="sxs-lookup"><span data-stu-id="56b53-835">To block until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="56b53-836">非同步驗證作業必須完成呼叫<xref:System.Net.Security.NegotiateStream.EndAuthenticateAsServer%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="56b53-836">The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsServer%2A> method.</span></span> <span data-ttu-id="56b53-837">一般而言，會叫用方法`asyncCallback`委派。</span><span class="sxs-lookup"><span data-stu-id="56b53-837">Typically, the method is invoked by the `asyncCallback` delegate.</span></span> <span data-ttu-id="56b53-838">如需使用非同步程式設計模型的詳細資訊，請參閱[Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="56b53-838">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="56b53-839">如果驗證失敗，您會收到<xref:System.Security.Authentication.AuthenticationException>或<xref:System.Security.Authentication.InvalidCredentialException>。</span><span class="sxs-lookup"><span data-stu-id="56b53-839">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="56b53-840">在此情況下，您可以重試一次使用不同的認證驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-840">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="56b53-841">根據延伸保護原則傳入 <paramref name="policy" /> 參數中的 <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> 和 <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> 都是 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="56b53-841">The <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> and <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> on the extended protection policy passed in the <paramref name="policy" /> parameter are both <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="56b53-842"><paramref name="credential" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="56b53-842"><paramref name="credential" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="56b53-843"><paramref name="requiredImpersonationLevel" /> 必須是 <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />、<see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" /> 或 <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />。</span><span class="sxs-lookup"><span data-stu-id="56b53-843"><paramref name="requiredImpersonationLevel" /> must be <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />, <see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" />, or <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />,</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="56b53-844">驗證失敗。</span><span class="sxs-lookup"><span data-stu-id="56b53-844">The authentication failed.</span></span> <span data-ttu-id="56b53-845">您可以使用這個物件重試驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-845">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="56b53-846">驗證失敗。</span><span class="sxs-lookup"><span data-stu-id="56b53-846">The authentication failed.</span></span> <span data-ttu-id="56b53-847">您可以使用這個物件重試驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-847">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="56b53-848">已經進行驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-848">Authentication has already occurred.</span></span>  
  
<span data-ttu-id="56b53-849">-或-</span><span class="sxs-lookup"><span data-stu-id="56b53-849">-or-</span></span> 
<span data-ttu-id="56b53-850">這個資料流先前是用來以用戶端的身分嘗試驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-850">This stream was used previously to attempt authentication as the client.</span></span> <span data-ttu-id="56b53-851">您不能使用資料流以伺服器身分重試驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-851">You cannot use the stream to retry authentication as the server.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="56b53-852">不支援 Windows 95 和 Windows 98。</span><span class="sxs-lookup"><span data-stu-id="56b53-852">Windows 95 and Windows 98 are not supported.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="56b53-853">此物件已關閉。</span><span class="sxs-lookup"><span data-stu-id="56b53-853">This object has been closed.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="56b53-854">在不支援延伸保護的平台上，<paramref name="policy" /> 參數設定為 <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" />。</span><span class="sxs-lookup"><span data-stu-id="56b53-854">The <paramref name="policy" /> parameter was set to <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> on a platform that does not support extended protection.</span></span></exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
        <related type="Article" href="~/docs/framework/network-programming/integrated-windows-authentication-with-extended-protection.md"><span data-ttu-id="56b53-855">具有延伸保護的整合式 Windows 驗證</span><span class="sxs-lookup"><span data-stu-id="56b53-855">Integrated Windows Authentication with Extended Protection</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="BeginRead">
      <MemberSignature Language="C#" Value="public override IAsyncResult BeginRead (byte[] buffer, int offset, int count, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IAsyncResult BeginRead(unsigned int8[] buffer, int32 offset, int32 count, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override IAsyncResult ^ BeginRead(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="override this.BeginRead : byte[] * int * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="negotiateStream.BeginRead (buffer, offset, count, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="offset" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="count" Type="System.Int32" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="asyncState" Type="System.Object" Index="4" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="56b53-856"><see cref="T:System.Byte" /> 陣列，接收從資料流中讀取的位元組。</span><span class="sxs-lookup"><span data-stu-id="56b53-856">A <see cref="T:System.Byte" /> array that receives the bytes read from the stream.</span></span></param>
        <param name="offset"><span data-ttu-id="56b53-857"><paramref name="buffer" /> 中以零起始的位置，用來開始儲存從此資料流中讀取的資料。</span><span class="sxs-lookup"><span data-stu-id="56b53-857">The zero-based location in <paramref name="buffer" /> at which to begin storing the data read from this stream.</span></span></param>
        <param name="count"><span data-ttu-id="56b53-858">自資料流中讀取的最大位元組數。</span><span class="sxs-lookup"><span data-stu-id="56b53-858">The maximum number of bytes to read from the stream.</span></span></param>
        <param name="asyncCallback"><span data-ttu-id="56b53-859"><see cref="T:System.AsyncCallback" /> 委派，其會參考讀取作業完成時要叫用的方法。</span><span class="sxs-lookup"><span data-stu-id="56b53-859">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the read operation is complete.</span></span></param>
        <param name="asyncState"><span data-ttu-id="56b53-860">包含讀取作業資訊的使用者定義物件。</span><span class="sxs-lookup"><span data-stu-id="56b53-860">A user-defined object containing information about the read operation.</span></span> <span data-ttu-id="56b53-861">作業完成時會將這個物件傳遞給 <paramref name="asyncCallback" /> 委派。</span><span class="sxs-lookup"><span data-stu-id="56b53-861">This object is passed to the <paramref name="asyncCallback" /> delegate when the operation completes.</span></span></param>
        <summary><span data-ttu-id="56b53-862">開始非同步讀取作業，這個作業會從資料流中讀取資料並將其儲存於指定的陣列中。</span><span class="sxs-lookup"><span data-stu-id="56b53-862">Begins an asynchronous read operation that reads data from the stream and stores it in the specified array.</span></span></summary>
        <returns><span data-ttu-id="56b53-863"><see cref="T:System.IAsyncResult" /> 物件，指出非同步作業的狀態。</span><span class="sxs-lookup"><span data-stu-id="56b53-863">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56b53-864">如果已啟用加密、 簽署或加密和簽署，讀取的作業會從基礎資料流讀取資料、 檢查資料的完整性和加以解密。</span><span class="sxs-lookup"><span data-stu-id="56b53-864">If encryption, signing, or encryption and signing are enabled, the read operation reads the data from the underlying stream, checks the integrity of the data, and decrypts it.</span></span> <span data-ttu-id="56b53-865">如果沒有安全性服務，例如資料加密或簽章是使用中，此方法會啟動在基礎資料流的非同步讀取的作業。</span><span class="sxs-lookup"><span data-stu-id="56b53-865">If no security services such as data encryption or signing are in use, this method starts an asynchronous read operation on the underlying stream.</span></span>  
  
 <span data-ttu-id="56b53-866">這個方法是非同步的而且不會封鎖在作業完成時。</span><span class="sxs-lookup"><span data-stu-id="56b53-866">This method is asynchronous and does not block while the operation completes.</span></span> <span data-ttu-id="56b53-867">若要封鎖，直到作業完成為止，使用<xref:System.Net.Security.NegotiateStream.Read%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="56b53-867">To block until the operation completes, use the <xref:System.Net.Security.NegotiateStream.Read%2A> method.</span></span>  
  
 <span data-ttu-id="56b53-868">非同步讀取的作業必須完成呼叫<xref:System.Net.Security.NegotiateStream.EndRead%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="56b53-868">The asynchronous read operation must be completed by calling the <xref:System.Net.Security.NegotiateStream.EndRead%2A> method.</span></span> <span data-ttu-id="56b53-869">一般而言，會叫用方法`asyncCallback`委派。</span><span class="sxs-lookup"><span data-stu-id="56b53-869">Typically, the method is invoked by the `asyncCallback` delegate.</span></span> <span data-ttu-id="56b53-870">如需使用非同步程式設計模型的詳細資訊，請參閱[Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="56b53-870">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="56b53-871"><xref:System.Net.Security.NegotiateStream>類別不支援多個同時讀取作業。</span><span class="sxs-lookup"><span data-stu-id="56b53-871">The <xref:System.Net.Security.NegotiateStream> class does not support multiple simultaneous read operations.</span></span> <span data-ttu-id="56b53-872">如果您嘗試開始讀取的作業，而另一個讀取作業已經在執行相同的資料流，<xref:System.NotSupportedException>會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="56b53-872">If you attempt to start a read operation while another read operation is already executing on the same stream, a <xref:System.NotSupportedException> exception will be thrown.</span></span>  
  
 <span data-ttu-id="56b53-873">您無法呼叫此方法，直到您已成功驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-873">You cannot call this method until you have successfully authenticated.</span></span> <span data-ttu-id="56b53-874">若要驗證，請呼叫其中一種<xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>， <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>， <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>，或<xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="56b53-874">To authenticate, call one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>, or <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="56b53-875">下列程式碼範例會示範如何啟動的非同步讀取的作業。</span><span class="sxs-lookup"><span data-stu-id="56b53-875">The following code example demonstrates starting an asynchronous read operation.</span></span> <span data-ttu-id="56b53-876">此程式碼範例是針對提供之較大範例的一部分<xref:System.Net.Security.NegotiateStream>類別。</span><span class="sxs-lookup"><span data-stu-id="56b53-876">This code example is part of a larger example provided for the <xref:System.Net.Security.NegotiateStream> class.</span></span>  
  
 [!code-cpp[NclNegoAsyncServer#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoAsyncServer/CPP/NclNegoAsyncServer.cpp#1)]
 [!code-csharp[NclNegoAsyncServer#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoAsyncServer/CS/server.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="56b53-877"><paramref name="buffer" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="56b53-877"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="56b53-878"><paramref name="offset" /> 小於 0。</span><span class="sxs-lookup"><span data-stu-id="56b53-878"><paramref name="offset" /> is less than 0.</span></span>  
  
<span data-ttu-id="56b53-879">-或-</span><span class="sxs-lookup"><span data-stu-id="56b53-879">-or-</span></span> 
 <span data-ttu-id="56b53-880"><paramref name="offset" /> 大於 <paramref name="buffer" /> 的長度。</span><span class="sxs-lookup"><span data-stu-id="56b53-880"><paramref name="offset" /> is greater than the length of <paramref name="buffer" />.</span></span>  
  
<span data-ttu-id="56b53-881">-或-</span><span class="sxs-lookup"><span data-stu-id="56b53-881">-or-</span></span> 
 <span data-ttu-id="56b53-882"><paramref name="offset" /> 加上 <paramref name="count" /> 大於 <paramref name="buffer" /> 的長度。</span><span class="sxs-lookup"><span data-stu-id="56b53-882"><paramref name="offset" /> plus <paramref name="count" /> is greater than the length of <paramref name="buffer" />.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="56b53-883">讀取作業失敗。</span><span class="sxs-lookup"><span data-stu-id="56b53-883">The read operation failed.</span></span>  
  
<span data-ttu-id="56b53-884">-或-</span><span class="sxs-lookup"><span data-stu-id="56b53-884">-or-</span></span> 
<span data-ttu-id="56b53-885">使用了加密，但無法解密資料。</span><span class="sxs-lookup"><span data-stu-id="56b53-885">Encryption is in use, but the data could not be decrypted.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="56b53-886">已經有讀取作業正在進行中。</span><span class="sxs-lookup"><span data-stu-id="56b53-886">There is already a read operation in progress.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="56b53-887">此物件已關閉。</span><span class="sxs-lookup"><span data-stu-id="56b53-887">This object has been closed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="56b53-888">尚未執行驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-888">Authentication has not occurred.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginWrite">
      <MemberSignature Language="C#" Value="public override IAsyncResult BeginWrite (byte[] buffer, int offset, int count, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IAsyncResult BeginWrite(unsigned int8[] buffer, int32 offset, int32 count, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override IAsyncResult ^ BeginWrite(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="override this.BeginWrite : byte[] * int * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="negotiateStream.BeginWrite (buffer, offset, count, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="offset" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="count" Type="System.Int32" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="asyncState" Type="System.Object" Index="4" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="56b53-889"><see cref="T:System.Byte" /> 陣列，提供將要寫入至資料流的位元組。</span><span class="sxs-lookup"><span data-stu-id="56b53-889">A <see cref="T:System.Byte" /> array that supplies the bytes to be written to the stream.</span></span></param>
        <param name="offset"><span data-ttu-id="56b53-890"><paramref name="buffer" /> 中以零起始的位置，用來開始讀取將要寫入資料流的位元組。</span><span class="sxs-lookup"><span data-stu-id="56b53-890">The zero-based location in <paramref name="buffer" /> at which to begin reading bytes to be written to the stream.</span></span></param>
        <param name="count"><span data-ttu-id="56b53-891"><see cref="T:System.Int32" /> 值，指定從 <paramref name="buffer" /> 中讀取的位元組數。</span><span class="sxs-lookup"><span data-stu-id="56b53-891">An <see cref="T:System.Int32" /> value that specifies the number of bytes to read from <paramref name="buffer" />.</span></span></param>
        <param name="asyncCallback"><span data-ttu-id="56b53-892"><see cref="T:System.AsyncCallback" /> 委派，其會參考寫入作業完成時要叫用的方法。</span><span class="sxs-lookup"><span data-stu-id="56b53-892">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the write operation is complete.</span></span></param>
        <param name="asyncState"><span data-ttu-id="56b53-893">包含寫入作業資訊的使用者定義物件。</span><span class="sxs-lookup"><span data-stu-id="56b53-893">A user-defined object containing information about the write operation.</span></span> <span data-ttu-id="56b53-894">作業完成時會將這個物件傳遞給 <paramref name="asyncCallback" /> 委派。</span><span class="sxs-lookup"><span data-stu-id="56b53-894">This object is passed to the <paramref name="asyncCallback" /> delegate when the operation completes.</span></span></param>
        <summary><span data-ttu-id="56b53-895">開始非同步寫入作業，此作業會從指定的緩衝區寫入 <see cref="T:System.Byte" /> 至資料流。</span><span class="sxs-lookup"><span data-stu-id="56b53-895">Begins an asynchronous write operation that writes <see cref="T:System.Byte" />s from the specified buffer to the stream.</span></span></summary>
        <returns><span data-ttu-id="56b53-896"><see cref="T:System.IAsyncResult" /> 物件，指出非同步作業的狀態。</span><span class="sxs-lookup"><span data-stu-id="56b53-896">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56b53-897">如果已啟用加密、 簽署或加密和簽章，這個方法從緩衝區讀取資料、 加密、 簽章或加密和加以簽署，並將其使用基礎資料流傳送。</span><span class="sxs-lookup"><span data-stu-id="56b53-897">If encryption, signing, or encryption and signing are enabled, this method reads the data from buffer, encrypts, signs, or encrypts and signs it, and transmits it using the underlying stream.</span></span> <span data-ttu-id="56b53-898">如果沒有安全性服務，例如資料加密或簽章是使用中，此方法會啟動在基礎資料流的非同步寫入作業。</span><span class="sxs-lookup"><span data-stu-id="56b53-898">If no security services such as data encryption or signing are in use, this method starts an asynchronous write operation on the underlying stream.</span></span>  
  
 <span data-ttu-id="56b53-899">這個方法是非同步的而且不會封鎖在作業完成時。</span><span class="sxs-lookup"><span data-stu-id="56b53-899">This method is asynchronous and does not block while the operation completes.</span></span> <span data-ttu-id="56b53-900">若要封鎖，直到作業完成為止，使用<xref:System.Net.Security.NegotiateStream.Read%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="56b53-900">To block until the operation completes, use the <xref:System.Net.Security.NegotiateStream.Read%2A> method.</span></span>  
  
 <span data-ttu-id="56b53-901">非同步讀取的作業必須完成呼叫<xref:System.Net.Security.NegotiateStream.EndWrite%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="56b53-901">The asynchronous read operation must be completed by calling the <xref:System.Net.Security.NegotiateStream.EndWrite%2A> method.</span></span> <span data-ttu-id="56b53-902">一般而言，會叫用方法`asyncCallback`委派。</span><span class="sxs-lookup"><span data-stu-id="56b53-902">Typically, the method is invoked by the `asyncCallback` delegate.</span></span> <span data-ttu-id="56b53-903">如需使用非同步程式設計模型的詳細資訊，請參閱[Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="56b53-903">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="56b53-904"><xref:System.Net.Security.NegotiateStream>類別不支援多個同時的寫入作業。</span><span class="sxs-lookup"><span data-stu-id="56b53-904">The <xref:System.Net.Security.NegotiateStream> class does not support multiple simultaneous write operations.</span></span> <span data-ttu-id="56b53-905">如果您嘗試開始寫入作業，而另一個寫入作業已經在執行相同的資料流，<xref:System.NotSupportedException>會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="56b53-905">If you attempt to start a write operation while another write operation is already executing on the same stream, a <xref:System.NotSupportedException> exception will be thrown.</span></span>  
  
 <span data-ttu-id="56b53-906">您無法呼叫此方法，直到您已成功驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-906">You cannot call this method until you have successfully authenticated.</span></span> <span data-ttu-id="56b53-907">若要驗證，請呼叫其中一種<xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>， <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>， <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>，或<xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="56b53-907">To authenticate, call one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>, or <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="56b53-908">下列程式碼範例將示範如何開始非同步寫入作業。</span><span class="sxs-lookup"><span data-stu-id="56b53-908">The following code example demonstrates beginning an asynchronous write operation.</span></span>  
  
 [!code-cpp[NclNegoAsyncClient#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoasyncClient/CPP/NclNegoasyncClient.cpp#3)]
 [!code-csharp[NclNegoAsyncClient#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoasyncClient/CS/client.cs#3)]  
  
 <span data-ttu-id="56b53-909">作業完成時，會呼叫下列方法。</span><span class="sxs-lookup"><span data-stu-id="56b53-909">The following method is called when the operation completes.</span></span>  
  
 [!code-cpp[NclNegoAsyncClient#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoasyncClient/CPP/NclNegoasyncClient.cpp#4)]
 [!code-csharp[NclNegoAsyncClient#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoasyncClient/CS/client.cs#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="56b53-910"><paramref name="buffer" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="56b53-910"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="56b53-911"><paramref name="offset is less than 0" />.</span><span class="sxs-lookup"><span data-stu-id="56b53-911"><paramref name="offset is less than 0" />.</span></span>  
  
<span data-ttu-id="56b53-912">-或-</span><span class="sxs-lookup"><span data-stu-id="56b53-912">-or-</span></span> 
 <span data-ttu-id="56b53-913"><paramref name="offset" /> 大於 <paramref name="buffer" /> 的長度。</span><span class="sxs-lookup"><span data-stu-id="56b53-913"><paramref name="offset" /> is greater than the length of <paramref name="buffer" />.</span></span>  
  
<span data-ttu-id="56b53-914">-或-</span><span class="sxs-lookup"><span data-stu-id="56b53-914">-or-</span></span> 
 <span data-ttu-id="56b53-915"><paramref name="offset" /> 加上計數大於 <paramref name="buffer" /> 的長度。</span><span class="sxs-lookup"><span data-stu-id="56b53-915"><paramref name="offset" /> plus count is greater than the length of <paramref name="buffer" />.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="56b53-916">寫入作業失敗。</span><span class="sxs-lookup"><span data-stu-id="56b53-916">The write operation failed.</span></span>  
  
<span data-ttu-id="56b53-917">-或-</span><span class="sxs-lookup"><span data-stu-id="56b53-917">-or-</span></span> 
<span data-ttu-id="56b53-918">使用了加密，但無法解密資料。</span><span class="sxs-lookup"><span data-stu-id="56b53-918">Encryption is in use, but the data could not be encrypted.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="56b53-919">已經有寫入作業正在進行中。</span><span class="sxs-lookup"><span data-stu-id="56b53-919">There is already a write operation in progress.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="56b53-920">此物件已關閉。</span><span class="sxs-lookup"><span data-stu-id="56b53-920">This object has been closed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="56b53-921">尚未執行驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-921">Authentication has not occurred.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CanRead">
      <MemberSignature Language="C#" Value="public override bool CanRead { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRead" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.CanRead" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanRead As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanRead { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRead : bool" Usage="System.Net.Security.NegotiateStream.CanRead" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="56b53-922">取得 <see cref="T:System.Boolean" /> 值，指示基礎資料流是否可讀取。</span><span class="sxs-lookup"><span data-stu-id="56b53-922">Gets a <see cref="T:System.Boolean" /> value that indicates whether the underlying stream is readable.</span></span></summary>
        <value><span data-ttu-id="56b53-923">如果執行驗證且基礎資料流可讀取，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="56b53-923"><see langword="true" /> if authentication has occurred and the underlying stream is readable; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56b53-924">如果發生驗證成功，這個屬性會傳回所叫用傳回的值<xref:System.IO.Stream.CanRead%2A>基礎資料流上的屬性。</span><span class="sxs-lookup"><span data-stu-id="56b53-924">If successful authentication has occurred, this property returns the value returned by invoking the <xref:System.IO.Stream.CanRead%2A> property on the underlying stream.</span></span> <span data-ttu-id="56b53-925">當您建立的執行個體時，會指定基礎資料流<xref:System.Net.Security.NegotiateStream>類別。</span><span class="sxs-lookup"><span data-stu-id="56b53-925">The underlying stream is specified when you create an instance of the <xref:System.Net.Security.NegotiateStream> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="56b53-926">下列程式碼範例會示範如何顯示這個屬性的值。</span><span class="sxs-lookup"><span data-stu-id="56b53-926">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#2)]
 [!code-csharp[NclNegoSyncClient#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanSeek">
      <MemberSignature Language="C#" Value="public override bool CanSeek { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanSeek" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.CanSeek" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanSeek As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanSeek { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanSeek : bool" Usage="System.Net.Security.NegotiateStream.CanSeek" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="56b53-927">取得 <see cref="T:System.Boolean" /> 值，指示基礎資料流是否可搜尋。</span><span class="sxs-lookup"><span data-stu-id="56b53-927">Gets a <see cref="T:System.Boolean" /> value that indicates whether the underlying stream is seekable.</span></span></summary>
        <value><span data-ttu-id="56b53-928">這個屬性永遠會傳回 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="56b53-928">This property always returns <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56b53-929">您不應該嘗試設定的位置<xref:System.Net.Security.NegotiateStream>物件或其基礎資料流。</span><span class="sxs-lookup"><span data-stu-id="56b53-929">You should not attempt to set the position of the <xref:System.Net.Security.NegotiateStream> object or its underlying stream.</span></span> <span data-ttu-id="56b53-930">當您建立的執行個體時，會指定基礎資料流<xref:System.Net.Security.NegotiateStream>類別。</span><span class="sxs-lookup"><span data-stu-id="56b53-930">The underlying stream is specified when you create an instance of the <xref:System.Net.Security.NegotiateStream> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="56b53-931">下列程式碼範例會示範如何顯示這個屬性的值。</span><span class="sxs-lookup"><span data-stu-id="56b53-931">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#2)]
 [!code-csharp[NclNegoSyncClient#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.Security.NegotiateStream.Position" />
      </Docs>
    </Member>
    <Member MemberName="CanTimeout">
      <MemberSignature Language="C#" Value="public override bool CanTimeout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.CanTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanTimeout As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanTimeout { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanTimeout : bool" Usage="System.Net.Security.NegotiateStream.CanTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="56b53-932">取得 <see cref="T:System.Boolean" /> 值，指示基礎資料流是否支援逾時。</span><span class="sxs-lookup"><span data-stu-id="56b53-932">Gets a <see cref="T:System.Boolean" /> value that indicates whether the underlying stream supports time-outs.</span></span></summary>
        <value><span data-ttu-id="56b53-933">如果基礎資料流支援逾時，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="56b53-933"><see langword="true" /> if the underlying stream supports time-outs; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56b53-934">這個屬性會傳回所叫用傳回的值<xref:System.IO.Stream.CanTimeout%2A>基礎資料流上的屬性。</span><span class="sxs-lookup"><span data-stu-id="56b53-934">This property returns the value returned by invoking the <xref:System.IO.Stream.CanTimeout%2A> property on the underlying stream.</span></span> <span data-ttu-id="56b53-935">當您建立的執行個體時，會指定基礎資料流<xref:System.Net.Security.NegotiateStream>類別。</span><span class="sxs-lookup"><span data-stu-id="56b53-935">The underlying stream is specified when you create an instance of the <xref:System.Net.Security.NegotiateStream> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="56b53-936">下列程式碼範例會示範如何顯示這個屬性的值。</span><span class="sxs-lookup"><span data-stu-id="56b53-936">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#2)]
 [!code-csharp[NclNegoSyncClient#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanWrite">
      <MemberSignature Language="C#" Value="public override bool CanWrite { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanWrite" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.CanWrite" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanWrite As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanWrite { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanWrite : bool" Usage="System.Net.Security.NegotiateStream.CanWrite" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="56b53-937">取得 <see cref="T:System.Boolean" /> 值，指示基礎資料流是否可寫入。</span><span class="sxs-lookup"><span data-stu-id="56b53-937">Gets a <see cref="T:System.Boolean" /> value that indicates whether the underlying stream is writable.</span></span></summary>
        <value><span data-ttu-id="56b53-938">如果執行驗證且基礎資料流可寫入，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="56b53-938"><see langword="true" /> if authentication has occurred and the underlying stream is writable; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56b53-939">如果發生驗證成功，這個屬性會傳回所叫用傳回的值<xref:System.IO.Stream.CanWrite%2A>基礎資料流上的屬性。</span><span class="sxs-lookup"><span data-stu-id="56b53-939">If successful authentication has occurred, this property returns the value returned by invoking the <xref:System.IO.Stream.CanWrite%2A> property on the underlying stream.</span></span> <span data-ttu-id="56b53-940">當您建立的執行個體時，會指定基礎資料流<xref:System.Net.Security.NegotiateStream>類別。</span><span class="sxs-lookup"><span data-stu-id="56b53-940">The underlying stream is specified when you create an instance of the <xref:System.Net.Security.NegotiateStream> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="56b53-941">下列程式碼範例會示範如何顯示這個屬性的值。</span><span class="sxs-lookup"><span data-stu-id="56b53-941">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#2)]
 [!code-csharp[NclNegoSyncClient#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="negotiateStream.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="56b53-942"><see langword="true" /> 表示會同時釋放 Managed 和 Unmanaged 資源，<see langword="false" /> 則表示只釋放 Unmanaged 資源。</span><span class="sxs-lookup"><span data-stu-id="56b53-942"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="56b53-943">釋放 <see cref="T:System.Net.Security.NegotiateStream" /> 所使用的 Unmanaged 資源，並選擇性地釋放 Managed 資源。</span><span class="sxs-lookup"><span data-stu-id="56b53-943">Releases the unmanaged resources used by the <see cref="T:System.Net.Security.NegotiateStream" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56b53-944">這個方法會呼叫公用`Dispose()`方法和<xref:System.Object.Finalize%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="56b53-944">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="56b53-945">`Dispose()` 叫用受保護`Dispose(Boolean)`方法`disposing`參數設為`true`。</span><span class="sxs-lookup"><span data-stu-id="56b53-945">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="56b53-946"><xref:System.Object.Finalize%2A> 叫用`Dispose`具有`disposing`設定為`false`。</span><span class="sxs-lookup"><span data-stu-id="56b53-946"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="56b53-947">當`disposing`參數為 true 時，這個方法由任何 managed 物件持有的資源全部釋出這個<xref:System.Net.Security.NegotiateStream>參考。</span><span class="sxs-lookup"><span data-stu-id="56b53-947">When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.Net.Security.NegotiateStream> references.</span></span> <span data-ttu-id="56b53-948">這個方法會叫用每個參考物件的 `Dispose()` 方法。</span><span class="sxs-lookup"><span data-stu-id="56b53-948">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="56b53-949">
            <see langword="Dispose" /> 可以被其他物件呼叫多次。</span><span class="sxs-lookup"><span data-stu-id="56b53-949">
            <see langword="Dispose" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="56b53-950">當覆寫<see langword="Dispose(Boolean)" />小心不要參考先前處置好的呼叫中的物件<see langword="Dispose" />。</span><span class="sxs-lookup"><span data-stu-id="56b53-950">When overriding <see langword="Dispose(Boolean)" /> be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span></span> <span data-ttu-id="56b53-951">如需有關如何實作<see langword="Dispose(Boolean)" />，請參閱 &lt;&lt;c2&gt; [ 實作 Dispose 方法](~/docs/standard/garbage-collection/implementing-dispose.md)。</span><span class="sxs-lookup"><span data-stu-id="56b53-951">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
<span data-ttu-id="56b53-952">如需詳細資訊<see langword="Dispose" />和<see cref="M:System.Object.Finalize" />，請參閱[清除 Unmanaged 資源總](~/docs/standard/garbage-collection/unmanaged.md)並[覆寫 Finalize 方法](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100))。</span><span class="sxs-lookup"><span data-stu-id="56b53-952">For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="DisposeAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.ValueTask DisposeAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Threading.Tasks.ValueTask DisposeAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.DisposeAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function DisposeAsync () As ValueTask" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::ValueTask DisposeAsync();" />
      <MemberSignature Language="F#" Value="override this.DisposeAsync : unit -&gt; System.Threading.Tasks.ValueTask" Usage="negotiateStream.DisposeAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndAuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual void EndAuthenticateAsClient (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndAuthenticateAsClient(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.EndAuthenticateAsClient(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EndAuthenticateAsClient (asyncResult As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EndAuthenticateAsClient(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="abstract member EndAuthenticateAsClient : IAsyncResult -&gt; unit&#xA;override this.EndAuthenticateAsClient : IAsyncResult -&gt; unit" Usage="negotiateStream.EndAuthenticateAsClient asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="56b53-953"><see cref="T:System.IAsyncResult" /> 執行個體，由對 <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient" /> 的呼叫所傳回。</span><span class="sxs-lookup"><span data-stu-id="56b53-953">An <see cref="T:System.IAsyncResult" /> instance returned by a call to <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient" />.</span></span></param>
        <summary><span data-ttu-id="56b53-954">結束藉由呼叫 <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient" /> 啟動的暫止非同步用戶端驗證作業。</span><span class="sxs-lookup"><span data-stu-id="56b53-954">Ends a pending asynchronous client authentication operation that was started with a call to <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56b53-955">如果作業尚未完成，這個方法會封鎖，直到它執行。</span><span class="sxs-lookup"><span data-stu-id="56b53-955">If the operation has not completed, this method blocks until it does.</span></span> <span data-ttu-id="56b53-956">當驗證成功時，您必須檢查<xref:System.Net.Security.NegotiateStream.IsEncrypted%2A>並<xref:System.Net.Security.NegotiateStream.IsSigned%2A>屬性，以決定哪些安全性服務由<xref:System.Net.Security.NegotiateStream>。</span><span class="sxs-lookup"><span data-stu-id="56b53-956">When the authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="56b53-957">檢查<xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A>屬性來判斷是否發生相互驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-957">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="56b53-958">如果驗證失敗，您會收到<xref:System.Security.Authentication.AuthenticationException>或<xref:System.Security.Authentication.InvalidCredentialException>。</span><span class="sxs-lookup"><span data-stu-id="56b53-958">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="56b53-959">在此情況下，您可以重試一次使用不同的認證驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-959">In this case, you can retry the authentication with a different credential.</span></span>  
  
 <span data-ttu-id="56b53-960">若要以同步方式執行這項作業，使用其中一種<xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="56b53-960">To perform this operation synchronously, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="56b53-961"><paramref name="asyncResult" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="56b53-961"><paramref name="asyncResult" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="56b53-962"><paramref name="asyncResult" /> 不是由呼叫 <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient" /> 的方式所建立。</span><span class="sxs-lookup"><span data-stu-id="56b53-962"><paramref name="asyncResult" /> was not created by a call to <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient" />.</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="56b53-963">驗證失敗。</span><span class="sxs-lookup"><span data-stu-id="56b53-963">The authentication failed.</span></span> <span data-ttu-id="56b53-964">您可以使用這個物件重試驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-964">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="56b53-965">驗證失敗。</span><span class="sxs-lookup"><span data-stu-id="56b53-965">The authentication failed.</span></span> <span data-ttu-id="56b53-966">您可以使用這個物件重試驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-966">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="56b53-967">不存在要完成的暫止用戶端驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-967">There is no pending client authentication to complete.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EndAuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual void EndAuthenticateAsServer (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndAuthenticateAsServer(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.EndAuthenticateAsServer(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EndAuthenticateAsServer (asyncResult As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EndAuthenticateAsServer(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="abstract member EndAuthenticateAsServer : IAsyncResult -&gt; unit&#xA;override this.EndAuthenticateAsServer : IAsyncResult -&gt; unit" Usage="negotiateStream.EndAuthenticateAsServer asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="56b53-968"><see cref="T:System.IAsyncResult" /> 執行個體，由對 <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer" /> 的呼叫所傳回。</span><span class="sxs-lookup"><span data-stu-id="56b53-968">An <see cref="T:System.IAsyncResult" /> instance returned by a call to <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer" />.</span></span></param>
        <summary><span data-ttu-id="56b53-969">結束藉由呼叫 <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer" /> 啟動的暫止非同步用戶端驗證作業。</span><span class="sxs-lookup"><span data-stu-id="56b53-969">Ends a pending asynchronous client authentication operation that was started with a call to <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56b53-970">如果作業尚未完成，這個方法會封鎖，直到它執行。</span><span class="sxs-lookup"><span data-stu-id="56b53-970">If the operation has not completed, this method blocks until it does.</span></span>  
  
 <span data-ttu-id="56b53-971">當驗證成功時，您必須檢查<xref:System.Net.Security.NegotiateStream.IsEncrypted%2A>並<xref:System.Net.Security.NegotiateStream.IsSigned%2A>屬性，以決定哪些安全性服務由<xref:System.Net.Security.NegotiateStream>。</span><span class="sxs-lookup"><span data-stu-id="56b53-971">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="56b53-972">檢查<xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A>屬性來判斷是否發生相互驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-972">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="56b53-973">如果驗證失敗，您會收到<xref:System.Security.Authentication.AuthenticationException>或<xref:System.Security.Authentication.InvalidCredentialException>。</span><span class="sxs-lookup"><span data-stu-id="56b53-973">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="56b53-974">在此情況下，您可以重試一次使用不同的認證驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-974">In this case, you can retry the authentication with a different credential.</span></span>  
  
 <span data-ttu-id="56b53-975">若要以同步方式執行這項作業，使用<xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="56b53-975">To perform this operation synchronously, use the <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="56b53-976"><paramref name="asyncResult" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="56b53-976"><paramref name="asyncResult" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="56b53-977"><paramref name="asyncResult" /> 不是由呼叫 <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer" /> 的方式所建立。</span><span class="sxs-lookup"><span data-stu-id="56b53-977"><paramref name="asyncResult" /> was not created by a call to <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer" />.</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="56b53-978">驗證失敗。</span><span class="sxs-lookup"><span data-stu-id="56b53-978">The authentication failed.</span></span> <span data-ttu-id="56b53-979">您可以使用這個物件重試驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-979">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="56b53-980">驗證失敗。</span><span class="sxs-lookup"><span data-stu-id="56b53-980">The authentication failed.</span></span> <span data-ttu-id="56b53-981">您可以使用這個物件重試驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-981">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="56b53-982">不存在要完成的暫止驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-982">There is no pending authentication to complete.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EndRead">
      <MemberSignature Language="C#" Value="public override int EndRead (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 EndRead(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.EndRead(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function EndRead (asyncResult As IAsyncResult) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int EndRead(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="override this.EndRead : IAsyncResult -&gt; int" Usage="negotiateStream.EndRead asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="56b53-983"><see cref="T:System.IAsyncResult" /> 執行個體，由對 <see cref="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> 的呼叫所傳回</span><span class="sxs-lookup"><span data-stu-id="56b53-983">An <see cref="T:System.IAsyncResult" /> instance returned by a call to <see cref="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /></span></span></param>
        <summary><span data-ttu-id="56b53-984">結束藉由呼叫 <see cref="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> 啟動的非同步讀取作業。</span><span class="sxs-lookup"><span data-stu-id="56b53-984">Ends an asynchronous read operation that was started with a call to <see cref="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</span></span></summary>
        <returns><span data-ttu-id="56b53-985"><see cref="T:System.Int32" /> 值，指定從基礎資料流中讀取的位元組數。</span><span class="sxs-lookup"><span data-stu-id="56b53-985">A <see cref="T:System.Int32" /> value that specifies the number of bytes read from the underlying stream.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56b53-986">如果作業尚未完成，這個方法會封鎖，直到它執行。</span><span class="sxs-lookup"><span data-stu-id="56b53-986">If the operation has not completed, this method blocks until it does.</span></span>  
  
 <span data-ttu-id="56b53-987">若要以同步方式執行這項作業，使用<xref:System.Net.Security.NegotiateStream.Read%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="56b53-987">To perform this operation synchronously, use the <xref:System.Net.Security.NegotiateStream.Read%2A> method.</span></span>  
  
 <span data-ttu-id="56b53-988">您無法呼叫此方法，直到您已成功驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-988">You cannot call this method until you have successfully authenticated.</span></span> <span data-ttu-id="56b53-989">若要驗證，請呼叫其中一種<xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>， <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>， <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>，或<xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="56b53-989">To authenticate, call one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>, or <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="56b53-990">下列程式碼範例示範如何結束非同步讀取作業。</span><span class="sxs-lookup"><span data-stu-id="56b53-990">The following code example demonstrates ending an asynchronous read operation.</span></span> <span data-ttu-id="56b53-991">如需示範如何開始作業的範例，請參閱<xref:System.Net.Security.NegotiateStream.BeginRead%2A>。</span><span class="sxs-lookup"><span data-stu-id="56b53-991">For an example that demonstrates starting the operation, see <xref:System.Net.Security.NegotiateStream.BeginRead%2A>.</span></span>  
  
 [!code-cpp[NclNegoAsyncServer#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoAsyncServer/CPP/NclNegoAsyncServer.cpp#3)]
 [!code-csharp[NclNegoAsyncServer#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoAsyncServer/CS/server.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="56b53-992"><paramref name="asyncResult" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="56b53-992"><paramref name="asyncResult" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="56b53-993">AsyncResult 不是由呼叫 <see cref="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> 的方式所建立。</span><span class="sxs-lookup"><span data-stu-id="56b53-993">The asyncResult was not created by a call to <see cref="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="56b53-994">不存在要完成的暫止讀取作業。</span><span class="sxs-lookup"><span data-stu-id="56b53-994">There is no pending read operation to complete.</span></span>

<span data-ttu-id="56b53-995">-或-</span><span class="sxs-lookup"><span data-stu-id="56b53-995">-or-</span></span>

<span data-ttu-id="56b53-996">尚未執行驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-996">Authentication has not occurred.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="56b53-997">讀取作業失敗。</span><span class="sxs-lookup"><span data-stu-id="56b53-997">The read operation failed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EndWrite">
      <MemberSignature Language="C#" Value="public override void EndWrite (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void EndWrite(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.EndWrite(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub EndWrite (asyncResult As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void EndWrite(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="override this.EndWrite : IAsyncResult -&gt; unit" Usage="negotiateStream.EndWrite asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="56b53-998"><see cref="T:System.IAsyncResult" /> 執行個體，由對 <see cref="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> 的呼叫所傳回</span><span class="sxs-lookup"><span data-stu-id="56b53-998">An <see cref="T:System.IAsyncResult" /> instance returned by a call to <see cref="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /></span></span></param>
        <summary><span data-ttu-id="56b53-999">結束藉由呼叫 <see cref="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> 啟動的非同步寫入作業。</span><span class="sxs-lookup"><span data-stu-id="56b53-999">Ends an asynchronous write operation that was started with a call to <see cref="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56b53-1000">如果作業尚未完成，這個方法會封鎖，直到它執行。</span><span class="sxs-lookup"><span data-stu-id="56b53-1000">If the operation has not completed, this method blocks until it does.</span></span>  
  
 <span data-ttu-id="56b53-1001">您無法呼叫此方法，直到您已成功驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-1001">You cannot call this method until you have successfully authenticated.</span></span> <span data-ttu-id="56b53-1002">若要驗證，請呼叫其中一種<xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>， <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>， <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>，或<xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="56b53-1002">To authenticate, call one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>, or <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
 <span data-ttu-id="56b53-1003">若要以同步方式執行這項作業，使用<xref:System.Net.Security.NegotiateStream.Write%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="56b53-1003">To perform this operation synchronously, use the <xref:System.Net.Security.NegotiateStream.Write%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="56b53-1004">下列程式碼範例示範如何呼叫以完成非同步寫入作業的方法。</span><span class="sxs-lookup"><span data-stu-id="56b53-1004">The following code example demonstrates a method that is called to complete the asynchronous write operation.</span></span> <span data-ttu-id="56b53-1005">如需示範如何開始作業的範例，請參閱<xref:System.Net.Security.NegotiateStream.BeginWrite%2A>。</span><span class="sxs-lookup"><span data-stu-id="56b53-1005">For an example that demonstrates starting the operation, see <xref:System.Net.Security.NegotiateStream.BeginWrite%2A>.</span></span>  
  
 [!code-cpp[NclNegoAsyncClient#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoasyncClient/CPP/NclNegoasyncClient.cpp#4)]
 [!code-csharp[NclNegoAsyncClient#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoasyncClient/CS/client.cs#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="56b53-1006"><paramref name="asyncResult" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="56b53-1006"><paramref name="asyncResult" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="56b53-1007">AsyncResult 不是由呼叫 <see cref="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> 的方式所建立。</span><span class="sxs-lookup"><span data-stu-id="56b53-1007">The asyncResult was not created by a call to <see cref="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="56b53-1008">不存在要完成的暫止寫入作業。</span><span class="sxs-lookup"><span data-stu-id="56b53-1008">There is no pending write operation to complete.</span></span>

<span data-ttu-id="56b53-1009">-或-</span><span class="sxs-lookup"><span data-stu-id="56b53-1009">-or-</span></span>

<span data-ttu-id="56b53-1010">尚未執行驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-1010">Authentication has not occurred.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="56b53-1011">寫入作業失敗。</span><span class="sxs-lookup"><span data-stu-id="56b53-1011">The write operation failed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Flush();" />
      <MemberSignature Language="F#" Value="override this.Flush : unit -&gt; unit" Usage="negotiateStream.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="56b53-1012">造成任何緩衝資料都將寫入基礎裝置。</span><span class="sxs-lookup"><span data-stu-id="56b53-1012">Causes any buffered data to be written to the underlying device.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56b53-1013">這個方法會叫用<xref:System.IO.Stream.Flush%2A>在基礎資料流。</span><span class="sxs-lookup"><span data-stu-id="56b53-1013">This method invokes <xref:System.IO.Stream.Flush%2A> on the underlying stream.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="56b53-1014">下列程式碼範例示範如何排清資料流。</span><span class="sxs-lookup"><span data-stu-id="56b53-1014">The following code example demonstrates flushing the stream.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#4)]
 [!code-csharp[NclNegoSyncClient#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FlushAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task FlushAsync (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task FlushAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.FlushAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ FlushAsync(System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.FlushAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="negotiateStream.FlushAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImpersonationLevel">
      <MemberSignature Language="C#" Value="public virtual System.Security.Principal.TokenImpersonationLevel ImpersonationLevel { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Principal.TokenImpersonationLevel ImpersonationLevel" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.ImpersonationLevel" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ImpersonationLevel As TokenImpersonationLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Principal::TokenImpersonationLevel ImpersonationLevel { System::Security::Principal::TokenImpersonationLevel get(); };" />
      <MemberSignature Language="F#" Value="member this.ImpersonationLevel : System.Security.Principal.TokenImpersonationLevel" Usage="System.Net.Security.NegotiateStream.ImpersonationLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Principal.TokenImpersonationLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="56b53-1015">取得值，指示伺服器如何使用用戶端的認證。</span><span class="sxs-lookup"><span data-stu-id="56b53-1015">Gets a value that indicates how the server can use the client's credentials.</span></span></summary>
        <value><span data-ttu-id="56b53-1016">其中一個 <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 值。</span><span class="sxs-lookup"><span data-stu-id="56b53-1016">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56b53-1017">您必須已成功驗證之前呼叫這個方法。</span><span class="sxs-lookup"><span data-stu-id="56b53-1017">You must successfully authenticate before calling this method.</span></span> <span data-ttu-id="56b53-1018">透過呼叫其中一個要求驗證時，用戶端指定的模擬層級<xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>或<xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="56b53-1018">Clients specify the impersonation level when they request authentication by calling one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> or <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A> methods.</span></span> <span data-ttu-id="56b53-1019">如果您進行驗證而不指定<xref:System.Security.Principal.TokenImpersonationLevel>，<xref:System.Security.Principal.TokenImpersonationLevel.Identification>用。</span><span class="sxs-lookup"><span data-stu-id="56b53-1019">If you authenticate without specifying a <xref:System.Security.Principal.TokenImpersonationLevel> , <xref:System.Security.Principal.TokenImpersonationLevel.Identification> is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="56b53-1020">下列程式碼範例會示範如何顯示這個屬性的值。</span><span class="sxs-lookup"><span data-stu-id="56b53-1020">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#1)]
 [!code-csharp[NclNegoSyncClient#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="56b53-1021">驗證失敗或尚未執行驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-1021">Authentication failed or has not occurred.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsAuthenticated">
      <MemberSignature Language="C#" Value="public override bool IsAuthenticated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAuthenticated" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.IsAuthenticated" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsAuthenticated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsAuthenticated { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAuthenticated : bool" Usage="System.Net.Security.NegotiateStream.IsAuthenticated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="56b53-1022">取得 <see cref="T:System.Boolean" /> 值，指示驗證是否成功。</span><span class="sxs-lookup"><span data-stu-id="56b53-1022">Gets a <see cref="T:System.Boolean" /> value that indicates whether authentication was successful.</span></span></summary>
        <value><span data-ttu-id="56b53-1023">如果驗證成功，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="56b53-1023"><see langword="true" /> if successful authentication occurred; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56b53-1024">用戶端驗證，藉由呼叫<xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>或<xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="56b53-1024">Clients authenticate by calling the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> or <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A> methods.</span></span> <span data-ttu-id="56b53-1025">伺服器驗證，藉由呼叫<xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>或<xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="56b53-1025">Servers authenticate by calling the <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> or <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="56b53-1026">下列程式碼範例會示範如何顯示這個屬性的值。</span><span class="sxs-lookup"><span data-stu-id="56b53-1026">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#1)]
 [!code-csharp[NclNegoSyncClient#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEncrypted">
      <MemberSignature Language="C#" Value="public override bool IsEncrypted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEncrypted" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.IsEncrypted" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsEncrypted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsEncrypted { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEncrypted : bool" Usage="System.Net.Security.NegotiateStream.IsEncrypted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="56b53-1027">取得 <see cref="T:System.Boolean" /> 值，指示這個 <see cref="T:System.Net.Security.NegotiateStream" /> 是否使用資料加密。</span><span class="sxs-lookup"><span data-stu-id="56b53-1027">Gets a <see cref="T:System.Boolean" /> value that indicates whether this <see cref="T:System.Net.Security.NegotiateStream" /> uses data encryption.</span></span></summary>
        <value><span data-ttu-id="56b53-1028">如果在經由網路傳輸資料前對其進行加密，並在到達遠端端點時將其解密，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="56b53-1028"><see langword="true" /> if data is encrypted before being transmitted over the network and decrypted when it reaches the remote endpoint; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56b53-1029">加密可協助保護資料的隱私權也就是，它能協助確保，當資料在傳輸它無法進行解譯由第三方。</span><span class="sxs-lookup"><span data-stu-id="56b53-1029">Encryption helps to protect the privacy of the data; namely, it helps to ensure that while data is in transit it cannot be deciphered by third parties.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="56b53-1030">下列程式碼範例會示範如何顯示這個屬性的值。</span><span class="sxs-lookup"><span data-stu-id="56b53-1030">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#1)]
 [!code-csharp[NclNegoSyncClient#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.Security.ProtectionLevel" />
      </Docs>
    </Member>
    <Member MemberName="IsMutuallyAuthenticated">
      <MemberSignature Language="C#" Value="public override bool IsMutuallyAuthenticated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMutuallyAuthenticated" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsMutuallyAuthenticated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsMutuallyAuthenticated { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsMutuallyAuthenticated : bool" Usage="System.Net.Security.NegotiateStream.IsMutuallyAuthenticated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="56b53-1031">取得 <see cref="T:System.Boolean" /> 值，指示伺服器和用戶端是否都已經過驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-1031">Gets a <see cref="T:System.Boolean" /> value that indicates whether both the server and the client have been authenticated.</span></span></summary>
        <value><span data-ttu-id="56b53-1032">如果已經驗證伺服器，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="56b53-1032"><see langword="true" /> if the server has been authenticated; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56b53-1033">當用戶端想要提供認證進行驗證的伺服器時，是由用戶端指定相互驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-1033">Mutual authentication is specified by the client when the client wants the server to provide credentials for authentication.</span></span> <span data-ttu-id="56b53-1034">根據預設，用戶端會要求相互驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-1034">By default, clients request mutual authentication.</span></span>  
  
 <span data-ttu-id="56b53-1035">交涉通訊協定會根據支援的用戶端和伺服器的安全性通訊協定選取 NTLM 或 Kerberos。</span><span class="sxs-lookup"><span data-stu-id="56b53-1035">The Negotiate protocol selects either NTLM or Kerberos depending on the security protocols supported by the client and server.</span></span> <span data-ttu-id="56b53-1036">NTLM 不支援相互驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-1036">NTLM does not support mutual authentication.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="56b53-1037">下列程式碼範例會示範如何顯示這個屬性的值。</span><span class="sxs-lookup"><span data-stu-id="56b53-1037">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#1)]
 [!code-csharp[NclNegoSyncClient#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsServer">
      <MemberSignature Language="C#" Value="public override bool IsServer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsServer" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.IsServer" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsServer As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsServer { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsServer : bool" Usage="System.Net.Security.NegotiateStream.IsServer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="56b53-1038">取得 <see cref="T:System.Boolean" /> 值，指示這個 <see cref="T:System.Net.Security.NegotiateStream" /> 使用之連接的本機端是否以伺服器的身分驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-1038">Gets a <see cref="T:System.Boolean" /> value that indicates whether the local side of the connection used by this <see cref="T:System.Net.Security.NegotiateStream" /> was authenticated as the server.</span></span></summary>
        <value><span data-ttu-id="56b53-1039">如果本機端點已成功以經過驗證之連接的伺服器端身分驗證，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="56b53-1039"><see langword="true" /> if the local endpoint was successfully authenticated as the server side of the authenticated connection; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56b53-1040">如果驗證失敗，或未發生，這個屬性會傳回`false`。</span><span class="sxs-lookup"><span data-stu-id="56b53-1040">If authentication failed or did not occur, this property returns `false`.</span></span>  
  
 <span data-ttu-id="56b53-1041">若要與伺服器進行驗證，呼叫<xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>或<xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="56b53-1041">To authenticate as the server, call the <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> or <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="56b53-1042">下列程式碼範例會示範如何顯示這個屬性的值。</span><span class="sxs-lookup"><span data-stu-id="56b53-1042">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#1)]
 [!code-csharp[NclNegoSyncClient#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSigned">
      <MemberSignature Language="C#" Value="public override bool IsSigned { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSigned" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.IsSigned" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsSigned As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsSigned { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSigned : bool" Usage="System.Net.Security.NegotiateStream.IsSigned" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="56b53-1043">取得 <see cref="T:System.Boolean" /> 值，指示使用此資料流傳送的資料是否簽章。</span><span class="sxs-lookup"><span data-stu-id="56b53-1043">Gets a <see cref="T:System.Boolean" /> value that indicates whether the data sent using this stream is signed.</span></span></summary>
        <value><span data-ttu-id="56b53-1044">如果在傳輸資料前對其簽章，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="56b53-1044"><see langword="true" /> if the data is signed before being transmitted; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56b53-1045">資料簽章協助保護資料的完整性也就是，它可協助判斷是否將資料已遭竄改傳輸中的收件者。</span><span class="sxs-lookup"><span data-stu-id="56b53-1045">Data signing helps to protect the integrity of the data; namely, it helps the recipient determine whether the data has been tampered with while in transit.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="56b53-1046">下列程式碼範例會示範如何顯示這個屬性的值。</span><span class="sxs-lookup"><span data-stu-id="56b53-1046">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#1)]
 [!code-csharp[NclNegoSyncClient#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public override long Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Length" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.Length" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Length As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long Length { long get(); };" />
      <MemberSignature Language="F#" Value="member this.Length : int64" Usage="System.Net.Security.NegotiateStream.Length" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="56b53-1047">取得基礎資料流的長度。</span><span class="sxs-lookup"><span data-stu-id="56b53-1047">Gets the length of the underlying stream.</span></span></summary>
        <value><span data-ttu-id="56b53-1048"><see cref="T:System.Int64" />，指定基礎資料流的長度。</span><span class="sxs-lookup"><span data-stu-id="56b53-1048">A <see cref="T:System.Int64" /> that specifies the length of the underlying stream.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56b53-1049">這個屬性會傳回所叫用傳回的值<xref:System.IO.Stream.Length%2A>基礎資料流上的屬性。</span><span class="sxs-lookup"><span data-stu-id="56b53-1049">This property returns the value returned by invoking the <xref:System.IO.Stream.Length%2A> property on the underlying stream.</span></span> <span data-ttu-id="56b53-1050">如果基礎資料流不是可搜尋的這個屬性通常會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="56b53-1050">If the underlying stream is not seekable, this property will typically throw an exception.</span></span> <span data-ttu-id="56b53-1051">基礎資料流的執行階段類型會決定執行階段型別，則會擲回的例外狀況。</span><span class="sxs-lookup"><span data-stu-id="56b53-1051">The run-time type of the underlying stream determines the run-time type of the exception that is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="56b53-1052">下列程式碼範例會示範如何顯示這個屬性的值。</span><span class="sxs-lookup"><span data-stu-id="56b53-1052">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#2)]
 [!code-csharp[NclNegoSyncClient#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="56b53-1053">當基礎資料流為 <see cref="T:System.Net.Sockets.NetworkStream" /> 時，不支援取得這個屬性的值。</span><span class="sxs-lookup"><span data-stu-id="56b53-1053">Getting the value of this property is not supported when the underlying stream is a <see cref="T:System.Net.Sockets.NetworkStream" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Position">
      <MemberSignature Language="C#" Value="public override long Position { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Position" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.Position" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Position As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long Position { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.Position : int64 with get, set" Usage="System.Net.Security.NegotiateStream.Position" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="56b53-1054">取得或設定基礎資料流中目前的位置。</span><span class="sxs-lookup"><span data-stu-id="56b53-1054">Gets or sets the current position in the underlying stream.</span></span></summary>
        <value><span data-ttu-id="56b53-1055"><see cref="T:System.Int64" />，指定基礎資料流中目前的位置。</span><span class="sxs-lookup"><span data-stu-id="56b53-1055">A <see cref="T:System.Int64" /> that specifies the current position in the underlying stream.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56b53-1056">這個屬性會傳回所叫用傳回的值<xref:System.IO.Stream.Position%2A>基礎資料流上的屬性。</span><span class="sxs-lookup"><span data-stu-id="56b53-1056">This property returns the value returned by invoking the <xref:System.IO.Stream.Position%2A> property on the underlying stream.</span></span> <span data-ttu-id="56b53-1057">如果基礎資料流不是可搜尋的這個屬性通常會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="56b53-1057">If the underlying stream is not seekable, this property will typically throw an exception.</span></span> <span data-ttu-id="56b53-1058">基礎資料流的執行階段類型會決定執行階段型別，則會擲回的例外狀況。</span><span class="sxs-lookup"><span data-stu-id="56b53-1058">The run-time type of the underlying stream determines the run-time type of the exception that is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="56b53-1059">不支援這個屬性的設定。</span><span class="sxs-lookup"><span data-stu-id="56b53-1059">Setting this property is not supported.</span></span>  
  
<span data-ttu-id="56b53-1060">-或-</span><span class="sxs-lookup"><span data-stu-id="56b53-1060">-or-</span></span> 
<span data-ttu-id="56b53-1061">當基礎資料流為 <see cref="T:System.Net.Sockets.NetworkStream" /> 時，不支援取得這個屬性的值。</span><span class="sxs-lookup"><span data-stu-id="56b53-1061">Getting the value of this property is not supported when the underlying stream is a <see cref="T:System.Net.Sockets.NetworkStream" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override int Read (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Read(unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.Read(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read (buffer As Byte(), offset As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int Read(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count);" />
      <MemberSignature Language="F#" Value="override this.Read : byte[] * int * int -&gt; int" Usage="negotiateStream.Read (buffer, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="56b53-1062"><see cref="T:System.Byte" /> 陣列，接收從資料流中讀取的位元組。</span><span class="sxs-lookup"><span data-stu-id="56b53-1062">A <see cref="T:System.Byte" /> array that receives the bytes read from the stream.</span></span></param>
        <param name="offset"><span data-ttu-id="56b53-1063"><see cref="T:System.Int32" />，包含 <paramref name="buffer" /> 中以零起始的位置，用來開始儲存從此資料流中讀取的資料。</span><span class="sxs-lookup"><span data-stu-id="56b53-1063">A <see cref="T:System.Int32" /> containing the zero-based location in <paramref name="buffer" /> at which to begin storing the data read from this stream.</span></span></param>
        <param name="count"><span data-ttu-id="56b53-1064"><see cref="T:System.Int32" />，包含從資料流中讀取的最大位元組數。</span><span class="sxs-lookup"><span data-stu-id="56b53-1064">A <see cref="T:System.Int32" /> containing the maximum number of bytes to read from the stream.</span></span></param>
        <summary><span data-ttu-id="56b53-1065">從這個資料流中讀取資料並將其儲存於指定的陣列中。</span><span class="sxs-lookup"><span data-stu-id="56b53-1065">Reads data from this stream and stores it in the specified array.</span></span></summary>
        <returns><span data-ttu-id="56b53-1066"><see cref="T:System.Int32" /> 值，指定從基礎資料流中讀取的位元組數。</span><span class="sxs-lookup"><span data-stu-id="56b53-1066">A <see cref="T:System.Int32" /> value that specifies the number of bytes read from the underlying stream.</span></span> <span data-ttu-id="56b53-1067">如果不再有要讀取的資料，則傳回 0。</span><span class="sxs-lookup"><span data-stu-id="56b53-1067">When there is no more data to be read, returns 0.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56b53-1068">此方法會讀取最多`count`從目前的位元組資料流，並將它們儲存在`buffer`開始`offset`。</span><span class="sxs-lookup"><span data-stu-id="56b53-1068">The method reads a maximum of `count` bytes from the current stream and stores them in `buffer` beginning at `offset`.</span></span>  
  
 <span data-ttu-id="56b53-1069">您無法呼叫此方法，直到您已成功驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-1069">You cannot call this method until you have successfully authenticated.</span></span> <span data-ttu-id="56b53-1070">若要驗證，請呼叫其中一種<xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>， <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>， <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>，或<xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="56b53-1070">To authenticate, call one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>, or <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
 <span data-ttu-id="56b53-1071">若要以非同步方式執行這項作業，使用<xref:System.Net.Security.NegotiateStream.BeginRead%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="56b53-1071">To perform this operation asynchronously, use the <xref:System.Net.Security.NegotiateStream.BeginRead%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="56b53-1072">下列程式碼範例示範如何讀取<xref:System.Net.Security.NegotiateStream>。</span><span class="sxs-lookup"><span data-stu-id="56b53-1072">The following code example demonstrates reading from a <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 [!code-cpp[NclNegoSyncServer#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncServer/CPP/NclNegoSyncServer.cpp#1)]
 [!code-csharp[NclNegoSyncServer#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncServer/CS/server.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="56b53-1073">讀取作業失敗。</span><span class="sxs-lookup"><span data-stu-id="56b53-1073">The read operation failed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="56b53-1074">尚未執行驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-1074">Authentication has not occurred.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="56b53-1075"><see cref="M:System.Net.Security.NegotiateStream.Read(System.Byte[],System.Int32,System.Int32)" /> 作業已在執行中。</span><span class="sxs-lookup"><span data-stu-id="56b53-1075">A <see cref="M:System.Net.Security.NegotiateStream.Read(System.Byte[],System.Int32,System.Int32)" /> operation is already in progress.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadTimeout">
      <MemberSignature Language="C#" Value="public override int ReadTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReadTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.ReadTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ReadTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int ReadTimeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ReadTimeout : int with get, set" Usage="System.Net.Security.NegotiateStream.ReadTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="56b53-1076">取得或設定讀取作業封鎖等待資料的時間長度。</span><span class="sxs-lookup"><span data-stu-id="56b53-1076">Gets or sets the amount of time a read operation blocks waiting for data.</span></span></summary>
        <value><span data-ttu-id="56b53-1077"><see cref="T:System.Int32" />，指定讀取作業失敗前經過的時間長度。</span><span class="sxs-lookup"><span data-stu-id="56b53-1077">A <see cref="T:System.Int32" /> that specifies the amount of time that will elapse before a read operation fails.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56b53-1078">這個屬性會傳回所叫用傳回的值<xref:System.IO.Stream.ReadTimeout%2A>基礎資料流上的屬性。</span><span class="sxs-lookup"><span data-stu-id="56b53-1078">This property returns the value returned by invoking the <xref:System.IO.Stream.ReadTimeout%2A> property on the underlying stream.</span></span> <span data-ttu-id="56b53-1079">當您設定此屬性，<xref:System.IO.Stream.ReadTimeout%2A>基礎資料流上的值設定為指定的值。</span><span class="sxs-lookup"><span data-stu-id="56b53-1079">When you set this property, the <xref:System.IO.Stream.ReadTimeout%2A> value on the underlying stream is set to the specified value.</span></span>  
  
 <span data-ttu-id="56b53-1080">如果基礎資料流<xref:System.Net.Sockets.NetworkStream>，<xref:System.Net.Security.NegotiateStream.ReadTimeout%2A>以毫秒為單位，且設定為<xref:System.Threading.Timeout.Infinite>依預設，讓讀取作業執行逾時。</span><span class="sxs-lookup"><span data-stu-id="56b53-1080">If the underlying stream is a <xref:System.Net.Sockets.NetworkStream>, <xref:System.Net.Security.NegotiateStream.ReadTimeout%2A> is in milliseconds and is set to <xref:System.Threading.Timeout.Infinite> by default so that read operations do not time out.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="56b53-1081">下列程式碼範例會示範如何顯示這個屬性的值。</span><span class="sxs-lookup"><span data-stu-id="56b53-1081">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#2)]
 [!code-csharp[NclNegoSyncClient#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoteIdentity">
      <MemberSignature Language="C#" Value="public virtual System.Security.Principal.IIdentity RemoteIdentity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Principal.IIdentity RemoteIdentity" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.RemoteIdentity" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RemoteIdentity As IIdentity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Principal::IIdentity ^ RemoteIdentity { System::Security::Principal::IIdentity ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RemoteIdentity : System.Security.Principal.IIdentity" Usage="System.Net.Security.NegotiateStream.RemoteIdentity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Principal.IIdentity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="56b53-1082">取得共用這個經過驗證資料流之遠端群體識別的相關資訊。</span><span class="sxs-lookup"><span data-stu-id="56b53-1082">Gets information about the identity of the remote party sharing this authenticated stream.</span></span></summary>
        <value><span data-ttu-id="56b53-1083"><see cref="T:System.Security.Principal.IIdentity" /> 物件，描述遠端端點的識別。</span><span class="sxs-lookup"><span data-stu-id="56b53-1083">An <see cref="T:System.Security.Principal.IIdentity" /> object that describes the identity of the remote endpoint.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56b53-1084">當用戶端存取，此屬性會傳回<xref:System.Security.Principal.GenericIdentity>包含服務主體名稱 (SPN) 的伺服器和使用的驗證通訊協定。</span><span class="sxs-lookup"><span data-stu-id="56b53-1084">When accessed by the client, this property returns a <xref:System.Security.Principal.GenericIdentity> containing the Service Principal Name (SPN) of the server and the authentication protocol used.</span></span> <span data-ttu-id="56b53-1085">當存取伺服器，此屬性會傳回<xref:System.Security.Principal.WindowsIdentity>描述用戶端。</span><span class="sxs-lookup"><span data-stu-id="56b53-1085">When accessed by the server, this property returns a <xref:System.Security.Principal.WindowsIdentity> that describes the client.</span></span> <span data-ttu-id="56b53-1086">如果<xref:System.Security.Principal.WindowsIdentity>是無法使用，用戶端資訊傳回到伺服器在<xref:System.Security.Principal.GenericIdentity>。</span><span class="sxs-lookup"><span data-stu-id="56b53-1086">If the <xref:System.Security.Principal.WindowsIdentity> is not available, client information is returned to the server in a <xref:System.Security.Principal.GenericIdentity>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="56b53-1087">下列程式碼範例會示範如何顯示這個屬性的值。</span><span class="sxs-lookup"><span data-stu-id="56b53-1087">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoAsyncServer#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoAsyncServer/CPP/NclNegoAsyncServer.cpp#2)]
 [!code-csharp[NclNegoAsyncServer#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoAsyncServer/CS/server.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="56b53-1088">驗證失敗或尚未執行驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-1088">Authentication failed or has not occurred.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Seek">
      <MemberSignature Language="C#" Value="public override long Seek (long offset, System.IO.SeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 Seek(int64 offset, valuetype System.IO.SeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.Seek(System.Int64,System.IO.SeekOrigin)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Seek (offset As Long, origin As SeekOrigin) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override long Seek(long offset, System::IO::SeekOrigin origin);" />
      <MemberSignature Language="F#" Value="override this.Seek : int64 * System.IO.SeekOrigin -&gt; int64" Usage="negotiateStream.Seek (offset, origin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int64" />
        <Parameter Name="origin" Type="System.IO.SeekOrigin" />
      </Parameters>
      <Docs>
        <param name="offset"><span data-ttu-id="56b53-1089">這個值會被忽略。</span><span class="sxs-lookup"><span data-stu-id="56b53-1089">This value is ignored.</span></span></param>
        <param name="origin"><span data-ttu-id="56b53-1090">這個值會被忽略。</span><span class="sxs-lookup"><span data-stu-id="56b53-1090">This value is ignored.</span></span></param>
        <summary><span data-ttu-id="56b53-1091">擲回 <see cref="T:System.NotSupportedException" />。</span><span class="sxs-lookup"><span data-stu-id="56b53-1091">Throws <see cref="T:System.NotSupportedException" />.</span></span></summary>
        <returns><span data-ttu-id="56b53-1092">永遠擲回 <see cref="T:System.NotSupportedException" />。</span><span class="sxs-lookup"><span data-stu-id="56b53-1092">Always throws a <see cref="T:System.NotSupportedException" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56b53-1093">請勿呼叫這個方法。</span><span class="sxs-lookup"><span data-stu-id="56b53-1093">Do not call this method.</span></span> <span data-ttu-id="56b53-1094">它會繼承，但不是支援<xref:System.Net.Security.NegotiateStream>。</span><span class="sxs-lookup"><span data-stu-id="56b53-1094">It is inherited, but is not supported by <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="56b53-1095"><see cref="T:System.Net.Security.NegotiateStream" /> 上不支援搜尋。</span><span class="sxs-lookup"><span data-stu-id="56b53-1095">Seeking is not supported on <see cref="T:System.Net.Security.NegotiateStream" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetLength">
      <MemberSignature Language="C#" Value="public override void SetLength (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SetLength(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.SetLength(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub SetLength (value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void SetLength(long value);" />
      <MemberSignature Language="F#" Value="override this.SetLength : int64 -&gt; unit" Usage="negotiateStream.SetLength value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="56b53-1096"><see cref="T:System.Int64" /> 值，指定資料流的長度。</span><span class="sxs-lookup"><span data-stu-id="56b53-1096">An <see cref="T:System.Int64" /> value that specifies the length of the stream.</span></span></param>
        <summary><span data-ttu-id="56b53-1097">設定基礎資料流的長度。</span><span class="sxs-lookup"><span data-stu-id="56b53-1097">Sets the length of the underlying stream.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.Write(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (buffer As Byte(), offset As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count);" />
      <MemberSignature Language="F#" Value="override this.Write : byte[] * int * int -&gt; unit" Usage="negotiateStream.Write (buffer, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="56b53-1098"><see cref="T:System.Byte" /> 陣列，提供寫入至資料流的位元組。</span><span class="sxs-lookup"><span data-stu-id="56b53-1098">A <see cref="T:System.Byte" /> array that supplies the bytes written to the stream.</span></span></param>
        <param name="offset"><span data-ttu-id="56b53-1099"><see cref="T:System.Int32" />，包含 <paramref name="buffer" /> 中以零起始的位置，用來開始讀取將要寫入資料流的位元組。</span><span class="sxs-lookup"><span data-stu-id="56b53-1099">An <see cref="T:System.Int32" /> containing the zero-based location in <paramref name="buffer" /> at which to begin reading bytes to be written to the stream.</span></span></param>
        <param name="count"><span data-ttu-id="56b53-1100"><see cref="T:System.Int32" />，包含要從 <paramref name="buffer" /> 讀取的位元組數。</span><span class="sxs-lookup"><span data-stu-id="56b53-1100">A <see cref="T:System.Int32" /> containing the number of bytes to read from <paramref name="buffer" />.</span></span></param>
        <summary><span data-ttu-id="56b53-1101">使用指定的緩衝區和位移，將指定數目的 <see cref="T:System.Byte" /> 寫入至基礎資料流。</span><span class="sxs-lookup"><span data-stu-id="56b53-1101">Write the specified number of <see cref="T:System.Byte" />s to the underlying stream using the specified buffer and offset.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56b53-1102">如果已啟用加密、 簽署或加密和簽章，這個方法從緩衝區讀取資料、 加密、 簽章或加密和加以簽署，並將其使用基礎資料流傳送。</span><span class="sxs-lookup"><span data-stu-id="56b53-1102">If encryption, signing, or encryption and signing are enabled, this method reads the data from buffer, encrypts, signs, or encrypts and signs it, and transmits it using the underlying stream.</span></span> <span data-ttu-id="56b53-1103">如果沒有安全性服務，例如資料加密或簽章是使用中，這個方法會叫用<xref:System.IO.Stream.Write%2A>在基礎資料流。</span><span class="sxs-lookup"><span data-stu-id="56b53-1103">If no security services such as data encryption or signing are in use, this method invokes <xref:System.IO.Stream.Write%2A> on the underlying stream.</span></span>  
  
 <span data-ttu-id="56b53-1104">此方法會封鎖寫入作業完成時。</span><span class="sxs-lookup"><span data-stu-id="56b53-1104">This method blocks while the write operation completes.</span></span> <span data-ttu-id="56b53-1105">若要防止封鎖作業完成時，使用<xref:System.Net.Security.NegotiateStream.Write%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="56b53-1105">To prevent blocking while the operation completes, use the <xref:System.Net.Security.NegotiateStream.Write%2A> method.</span></span>  
  
 <span data-ttu-id="56b53-1106">您無法呼叫此方法，直到您已成功驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-1106">You cannot call this method until you have successfully authenticated.</span></span> <span data-ttu-id="56b53-1107">若要驗證，請呼叫其中一種<xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>， <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>， <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>，或<xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="56b53-1107">To authenticate, call one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>, or <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
 <span data-ttu-id="56b53-1108"><xref:System.Net.Security.NegotiateStream>類別不支援多個同時的寫入作業。</span><span class="sxs-lookup"><span data-stu-id="56b53-1108">The <xref:System.Net.Security.NegotiateStream> class does not support multiple simultaneous write operations.</span></span> <span data-ttu-id="56b53-1109">如果您嘗試開始寫入作業，而另一個寫入作業已經在執行相同的資料流，<xref:System.NotSupportedException>會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="56b53-1109">If you attempt to start a write operation while another write operation is already executing on the same stream, a <xref:System.NotSupportedException> exception will be thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="56b53-1110">下列程式碼範例示範如何寫入至<xref:System.Net.Security.NegotiateStream>。</span><span class="sxs-lookup"><span data-stu-id="56b53-1110">The following code example demonstrates writing to a <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#4)]
 [!code-csharp[NclNegoSyncClient#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="56b53-1111"><paramref name="buffer" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="56b53-1111"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="56b53-1112"><paramref name="offset is less than 0" />.</span><span class="sxs-lookup"><span data-stu-id="56b53-1112"><paramref name="offset is less than 0" />.</span></span>  
  
<span data-ttu-id="56b53-1113">-或-</span><span class="sxs-lookup"><span data-stu-id="56b53-1113">-or-</span></span> 
 <span data-ttu-id="56b53-1114"><paramref name="offset" /> 大於 <paramref name="buffer" /> 的長度。</span><span class="sxs-lookup"><span data-stu-id="56b53-1114"><paramref name="offset" /> is greater than the length of <paramref name="buffer" />.</span></span>  
  
<span data-ttu-id="56b53-1115">-或-</span><span class="sxs-lookup"><span data-stu-id="56b53-1115">-or-</span></span> 
 <span data-ttu-id="56b53-1116"><paramref name="offset" /> 加上計數大於 <paramref name="buffer" /> 的長度。</span><span class="sxs-lookup"><span data-stu-id="56b53-1116"><paramref name="offset" /> plus count is greater than the length of <paramref name="buffer" />.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="56b53-1117">寫入作業失敗。</span><span class="sxs-lookup"><span data-stu-id="56b53-1117">The write operation failed.</span></span>  
  
<span data-ttu-id="56b53-1118">-或-</span><span class="sxs-lookup"><span data-stu-id="56b53-1118">-or-</span></span> 
<span data-ttu-id="56b53-1119">使用了加密，但無法解密資料。</span><span class="sxs-lookup"><span data-stu-id="56b53-1119">Encryption is in use, but the data could not be encrypted.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="56b53-1120">已經有寫入作業正在進行中。</span><span class="sxs-lookup"><span data-stu-id="56b53-1120">There is already a write operation in progress.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="56b53-1121">此物件已關閉。</span><span class="sxs-lookup"><span data-stu-id="56b53-1121">This object has been closed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="56b53-1122">尚未執行驗證。</span><span class="sxs-lookup"><span data-stu-id="56b53-1122">Authentication has not occurred.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteTimeout">
      <MemberSignature Language="C#" Value="public override int WriteTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 WriteTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.WriteTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property WriteTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int WriteTimeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.WriteTimeout : int with get, set" Usage="System.Net.Security.NegotiateStream.WriteTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="56b53-1123">取得或設定寫入作業封鎖等待資料的時間長度。</span><span class="sxs-lookup"><span data-stu-id="56b53-1123">Gets or sets the amount of time a write operation blocks waiting for data.</span></span></summary>
        <value><span data-ttu-id="56b53-1124"><see cref="T:System.Int32" />，指定寫入作業失敗前經過的時間長度。</span><span class="sxs-lookup"><span data-stu-id="56b53-1124">A <see cref="T:System.Int32" /> that specifies the amount of time that will elapse before a write operation fails.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56b53-1125">這個屬性會傳回所叫用傳回的值<xref:System.IO.Stream.WriteTimeout%2A>基礎資料流上的屬性。</span><span class="sxs-lookup"><span data-stu-id="56b53-1125">This property returns the value returned by invoking the <xref:System.IO.Stream.WriteTimeout%2A> property on the underlying stream.</span></span> <span data-ttu-id="56b53-1126">指定的值設定為設定作業，<xref:System.IO.Stream.WriteTimeout%2A>基礎資料流上的值。</span><span class="sxs-lookup"><span data-stu-id="56b53-1126">For set operations, the specified value sets the <xref:System.IO.Stream.WriteTimeout%2A> value on the underlying stream.</span></span>  
  
 <span data-ttu-id="56b53-1127">如果基礎資料流<xref:System.Net.Sockets.NetworkStream>，<xref:System.Net.Security.NegotiateStream.WriteTimeout%2A>以毫秒為單位，且設定為<xref:System.Threading.Timeout.Infinite>預設的寫入作業執行逾時。</span><span class="sxs-lookup"><span data-stu-id="56b53-1127">If the underlying stream is a <xref:System.Net.Sockets.NetworkStream>, <xref:System.Net.Security.NegotiateStream.WriteTimeout%2A> is in milliseconds and is set to <xref:System.Threading.Timeout.Infinite> by default so that write operations do not time out.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="56b53-1128">下列程式碼範例會示範如何顯示這個屬性的值。</span><span class="sxs-lookup"><span data-stu-id="56b53-1128">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#2)]
 [!code-csharp[NclNegoSyncClient#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>